{"version":3,"sources":["../static/js/3.5bf7afd4.chunk.js","fanhua-routes/DataReport/DataReport.jsx","webpack:///./~/zrender/lib/core/util.js?10f4","webpack:///./~/echarts/lib/util/graphic.js?e267","webpack:///./~/echarts/lib/util/model.js?e2bd","webpack:///./~/zrender/lib/core/vector.js?6654","webpack:///./~/echarts/lib/util/number.js?43e3","webpack:///./~/echarts/lib/echarts.js?68a2","webpack:///./~/zrender/lib/graphic/Path.js?c119","webpack:///./~/echarts/lib/config.js?2f63","webpack:///./~/zrender/lib/core/env.js?9ccc","webpack:///./~/zrender/lib/core/BoundingRect.js?76f6","webpack:///./~/echarts/lib/model/Model.js?f4df","webpack:///./~/echarts/lib/util/format.js?7f72","webpack:///./~/echarts/lib/util/clazz.js?3e66","webpack:///./~/echarts/lib/model/Component.js?0e02","webpack:///./~/echarts/lib/coord/axisHelper.js?4730","webpack:///./~/echarts/lib/util/layout.js?2b1e","webpack:///./~/zrender/lib/contain/text.js?3a43","webpack:///./~/zrender/lib/core/curve.js?9511","webpack:///./~/zrender/lib/core/matrix.js?97a2","webpack:///./~/zrender/lib/core/event.js?24ff","webpack:///./~/zrender/lib/mixin/Eventful.js?223b","webpack:///./~/zrender/lib/tool/color.js?284f","webpack:///./~/echarts/lib/component/axisPointer/modelHelper.js?ba01","webpack:///./~/echarts/lib/model/mixin/makeStyleMapper.js?e2b1","webpack:///./~/echarts/lib/scale/Scale.js?c922","webpack:///./~/zrender/lib/config.js?2861","webpack:///./~/zrender/lib/container/Group.js?8d57","webpack:///./~/zrender/lib/core/PathProxy.js?69e9","webpack:///./~/echarts/lib/CoordinateSystem.js?2b30","webpack:///./~/echarts/lib/chart/helper/createListFromArray.js?e3fc","webpack:///./~/echarts/lib/model/Series.js?186c","webpack:///./~/echarts/lib/scale/Interval.js?08e9","webpack:///./~/echarts/lib/util/component.js?cc72","webpack:///./~/echarts/lib/util/symbol.js?be2c","webpack:///./~/echarts/lib/util/throttle.js?56b3","webpack:///./~/zrender/lib/core/timsort.js?0a74","webpack:///./~/zrender/lib/graphic/Displayable.js?5c45","webpack:///./~/zrender/lib/graphic/Gradient.js?5165","webpack:///./~/zrender/lib/graphic/helper/image.js?8535","webpack:///./~/echarts/lib/chart/helper/Symbol.js?9fa3","webpack:///./~/echarts/lib/component/axisPointer/findPointFromSeries.js?2189","webpack:///./~/echarts/lib/component/axisPointer/globalListener.js?00cf","webpack:///./~/echarts/lib/component/axisPointer/viewHelper.js?35c0","webpack:///./~/echarts/lib/component/axis/AxisBuilder.js?6417","webpack:///./~/echarts/lib/component/axis/AxisView.js?f854","webpack:///./~/echarts/lib/component/axis/cartesianAxisHelper.js?ce88","webpack:///./~/echarts/lib/component/gridSimple.js?eec5","webpack:///./~/echarts/lib/coord/Axis.js?736c","webpack:///./~/echarts/lib/coord/axisModelCommonMixin.js?a8d0","webpack:///./~/echarts/lib/coord/cartesian/AxisModel.js?0573","webpack:///./~/echarts/lib/coord/cartesian/Grid.js?f167","webpack:///./~/echarts/lib/data/List.js?b096","webpack:///./~/echarts/lib/data/helper/completeDimensions.js?9c9e","webpack:///./~/echarts/lib/model/mixin/colorPalette.js?b454","webpack:///./~/echarts/lib/scale/helper.js?370b","webpack:///./~/echarts/lib/view/Chart.js?72f3","webpack:///./~/zrender/lib/Element.js?325b","webpack:///./~/zrender/lib/animation/Animator.js?d2b9","webpack:///./~/zrender/lib/animation/requestAnimationFrame.js?6d88","webpack:///./~/zrender/lib/contain/util.js?0031","webpack:///./~/zrender/lib/contain/windingLine.js?625a","webpack:///./~/zrender/lib/core/LRU.js?018e","webpack:///./~/zrender/lib/core/bbox.js?1b56","webpack:///./~/zrender/lib/core/guid.js?f0e4","webpack:///./~/zrender/lib/core/log.js?26a2","webpack:///./~/zrender/lib/graphic/Image.js?bf1b","webpack:///./~/zrender/lib/graphic/Pattern.js?a97e","webpack:///./~/zrender/lib/graphic/Style.js?22d9","webpack:///./~/zrender/lib/graphic/helper/fixClipWithShadow.js?92a4","webpack:///./~/zrender/lib/graphic/helper/poly.js?788c","webpack:///./~/zrender/lib/graphic/helper/roundRect.js?418d","webpack:///./~/zrender/lib/graphic/helper/text.js?069c","webpack:///./~/zrender/lib/mixin/Transformable.js?f61b","webpack:///./~/zrender/lib/zrender.js?5dcd","webpack:///./~/echarts/lib/ExtensionAPI.js?e283","webpack:///./~/echarts/lib/chart/bar.js?931c","webpack:///./~/echarts/lib/chart/bar/BarSeries.js?61cd","webpack:///./~/echarts/lib/chart/bar/BarView.js?20fc","webpack:///./~/echarts/lib/chart/bar/BaseBarSeries.js?72f5","webpack:///./~/echarts/lib/chart/bar/barItemStyle.js?15d9","webpack:///./~/echarts/lib/chart/bar/helper.js?25d2","webpack:///./~/echarts/lib/chart/helper/SymbolDraw.js?6b79","webpack:///./~/echarts/lib/chart/helper/labelHelper.js?2f49","webpack:///./~/echarts/lib/chart/line.js?f251","webpack:///./~/echarts/lib/chart/line/LineSeries.js?6f66","webpack:///./~/echarts/lib/chart/line/LineView.js?018e","webpack:///./~/echarts/lib/chart/line/lineAnimationDiff.js?8da6","webpack:///./~/echarts/lib/chart/line/poly.js?c760","webpack:///./~/echarts/lib/component/axis.js?8a87","webpack:///./~/echarts/lib/component/axisPointer.js?110d","webpack:///./~/echarts/lib/component/axisPointer/AxisPointerModel.js?e99a","webpack:///./~/echarts/lib/component/axisPointer/AxisPointerView.js?4293","webpack:///./~/echarts/lib/component/axisPointer/BaseAxisPointer.js?027a","webpack:///./~/echarts/lib/component/axisPointer/CartesianAxisPointer.js?ab1e","webpack:///./~/echarts/lib/component/axisPointer/axisTrigger.js?86e8","webpack:///./~/echarts/lib/component/axis/CartesianAxisView.js?076a","webpack:///./~/echarts/lib/component/title.js?e263","webpack:///./~/echarts/lib/component/tooltip.js?b491","webpack:///./~/echarts/lib/component/tooltip/TooltipContent.js?2c54","webpack:///./~/echarts/lib/component/tooltip/TooltipModel.js?19ac","webpack:///./~/echarts/lib/component/tooltip/TooltipView.js?ae52","webpack:///./~/echarts/lib/coord/axisDefault.js?4492","webpack:///./~/echarts/lib/coord/axisModelCreator.js?34e4","webpack:///./~/echarts/lib/coord/cartesian/Axis2D.js?9345","webpack:///./~/echarts/lib/coord/cartesian/Cartesian.js?9246","webpack:///./~/echarts/lib/coord/cartesian/Cartesian2D.js?103b","webpack:///./~/echarts/lib/coord/cartesian/GridModel.js?1817","webpack:///./~/echarts/lib/coord/geo/Region.js?fc66","webpack:///./~/echarts/lib/coord/geo/parseGeoJson.js?edf7","webpack:///./~/echarts/lib/data/DataDiffer.js?f330","webpack:///./~/echarts/lib/export.js?1f28","webpack:///./~/echarts/lib/helper.js?5794","webpack:///./~/echarts/lib/layout/barGrid.js?d23e","webpack:///./~/echarts/lib/layout/points.js?4302","webpack:///./~/echarts/lib/loading/default.js?8a5f","webpack:///./~/echarts/lib/model/Global.js?b9d3","webpack:///./~/echarts/lib/model/OptionManager.js?a7a5","webpack:///./~/echarts/lib/model/globalDefault.js?fd54","webpack:///./~/echarts/lib/model/mixin/areaStyle.js?4e41","webpack:///./~/echarts/lib/model/mixin/boxLayout.js?92d7","webpack:///./~/echarts/lib/model/mixin/itemStyle.js?9011","webpack:///./~/echarts/lib/model/mixin/lineStyle.js?3579","webpack:///./~/echarts/lib/model/mixin/textStyle.js?e4c8","webpack:///./~/echarts/lib/preprocessor/backwardCompat.js?f171","webpack:///./~/echarts/lib/preprocessor/helper/compatStyle.js?aff6","webpack:///./~/echarts/lib/processor/dataSample.js?6fcd","webpack:///./~/echarts/lib/scale/Log.js?0ad0","webpack:///./~/echarts/lib/scale/Ordinal.js?3a6b","webpack:///./~/echarts/lib/scale/Time.js?6fdf","webpack:///./~/echarts/lib/view/Component.js?415a","webpack:///./~/echarts/lib/visual/seriesColor.js?4b6a","webpack:///./~/echarts/lib/visual/symbol.js?518b","webpack:///./~/zrender/lib/Handler.js?fbeb","webpack:///./~/zrender/lib/Layer.js?f586","webpack:///./~/zrender/lib/Painter.js?ee99","webpack:///./~/zrender/lib/Storage.js?7e93","webpack:///./~/zrender/lib/animation/Animation.js?8743","webpack:///./~/zrender/lib/animation/Clip.js?fef9","webpack:///./~/zrender/lib/animation/easing.js?64b6","webpack:///./~/zrender/lib/contain/arc.js?7367","webpack:///./~/zrender/lib/contain/cubic.js?b90e","webpack:///./~/zrender/lib/contain/line.js?4326","webpack:///./~/zrender/lib/contain/path.js?2e7f","webpack:///./~/zrender/lib/contain/polygon.js?1f9f","webpack:///./~/zrender/lib/contain/quadratic.js?f589","webpack:///./~/zrender/lib/core/GestureMgr.js?00fd","webpack:///./~/zrender/lib/dom/HandlerProxy.js?2fc7","webpack:///./~/zrender/lib/graphic/CompoundPath.js?8636","webpack:///./~/zrender/lib/graphic/LinearGradient.js?4250","webpack:///./~/zrender/lib/graphic/RadialGradient.js?895e","webpack:///./~/zrender/lib/graphic/Text.js?3244","webpack:///./~/zrender/lib/graphic/helper/smoothBezier.js?2713","webpack:///./~/zrender/lib/graphic/helper/smoothSpline.js?a17c","webpack:///./~/zrender/lib/graphic/mixin/RectText.js?94ea","webpack:///./~/zrender/lib/graphic/shape/Arc.js?2994","webpack:///./~/zrender/lib/graphic/shape/BezierCurve.js?f5c4","webpack:///./~/zrender/lib/graphic/shape/Circle.js?076e","webpack:///./~/zrender/lib/graphic/shape/Line.js?7728","webpack:///./~/zrender/lib/graphic/shape/Polygon.js?d37d","webpack:///./~/zrender/lib/graphic/shape/Polyline.js?3cdb","webpack:///./~/zrender/lib/graphic/shape/Rect.js?3b3d","webpack:///./~/zrender/lib/graphic/shape/Ring.js?b71c","webpack:///./~/zrender/lib/graphic/shape/Sector.js?9767","webpack:///./~/zrender/lib/mixin/Animatable.js?35cb","webpack:///./~/zrender/lib/mixin/Draggable.js?fbca","webpack:///./~/zrender/lib/tool/path.js?dc4b","webpack:///./~/zrender/lib/tool/transformPath.js?ddb2","webpack:///./src/fanhua-routes/DataReport/DataReport.less?9517","fanhua-routes/DataReport/DataReport.less","assets/img/bar.png","assets/img/bie.png","assets/img/line.png"],"names":["webpackJsonp","1382","module","exports","__webpack_require__","_interopRequireDefault","obj","__esModule","default","_objectDestructuringEmpty","TypeError","_classCallCheck","instance","Constructor","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","defineProperty","_card","_card2","_row","_row2","_col","_col2","_select","_select2","_tabs","_tabs2","_createClass","defineProperties","target","props","i","length","descriptor","key","protoProps","staticProps","_react","_react2","_echarts","_bie","_bie2","_line","_line2","_bar","_bar2","_createHashHistory","ShowCustomerDetails","TabPane","Option","_React$Component","this","_this2","getPrototypeOf","state","cust","addr","order","fileList","statistics","callback","bind","console","log","createElement","hoverable","title","type","style","marginBottom","background","padding","boxSizing","boxShadow","display","width","height","verticalAlign","src","paddingLeft","fontSize","fontWeight","marginTop","className","Component","1479","$override","name","fn","methods","clone","source","result","typeStr","objToString","len","TYPED_ARRAY","Ctor","from","BUILTIN_OBJECT","isPrimitive","isDom","hasOwnProperty","merge","overwrite","isObject","targetProp","sourceProp","isArray","isBuiltInObject","mergeAll","targetAndSources","extend","defaults","overlay","getContext","_ctx","createCanvas","indexOf","array","inherits","clazz","baseClazz","F","clazzPrototype","prop","mixin","isArrayLike","data","each","cb","context","forEach","nativeForEach","map","nativeMap","push","reduce","memo","nativeReduce","filter","nativeFilter","find","func","args","nativeSlice","arguments","apply","concat","curry","isFunction","isString","nodeType","ownerDocument","eqNaN","retrieve","values","retrieve2","value0","value1","retrieve3","value2","slice","Function","normalizeCssArray","val","assert","condition","message","Error","setAsPrimitive","primitiveKey","HashMap","set","createHashMap","noop","[object Function]","[object RegExp]","[object Date]","[object Error]","[object CanvasGradient]","[object CanvasPattern]","[object Image]","[object Canvas]","[object Int8Array]","[object Uint8Array]","[object Uint8ClampedArray]","[object Int16Array]","[object Uint16Array]","[object Int32Array]","[object Uint32Array]","[object Float32Array]","[object Float64Array]","toString","arrayProto","Array","document","get","prefixedKey","removeKey","1483","extendShape","opts","Path","extendPath","pathData","pathTool","extendFromString","makePath","rect","layout","path","createFromString","boundingRect","getBoundingRect","centerGraphic","resizePath","makeImage","imageUrl","Image","image","x","y","onload","img","setStyle","aspect","applyTransform","pathRect","m","calculateTransform","subPixelOptimizeLine","param","shape","lineWidth","round","x1","x2","subPixelOptimize","y1","y2","subPixelOptimizeRect","originX","originY","originWidth","originHeight","Math","max","position","positiveOrNegative","doubledPosition","hasFillOrStroke","fillOrStroke","liftColor","color","colorTool","lift","cacheElementStl","el","__hoverStlDirty","stroke","fill","hoverStyle","__hoverStl","normalStyle","__normalStl","doSingleEnterHover","__isHover","useHoverLayer","__zr","addHover","insideRollbackOpt","rollbackInsideStyle","extendFrom","applyInsideStyle","insideOriginalTextPosition","textFill","autoColor","dirty","z2","doSingleLeaveHover","normalStl","removeHover","doEnterHover","traverse","child","doLeaveHover","setElementHoverStl","hoverStl","onElementMouseOver","e","__hoverSilentOnTouch","zrByTouch","__isEmphasis","onElementMouseOut","enterEmphasis","leaveEmphasis","setHoverStyle","opt","hoverSilentOnTouch","on","setLabelStyle","emphasisStyle","normalModel","emphasisModel","normalSpecified","emphasisSpecified","EMPTY_OBJ","labelFetcher","labelDataIndex","labelDimIndex","showNormal","getShallow","showEmphasis","baseText","zrUtil","getFormattedLabel","defaultText","normalStyleText","emphasisStyleText","setTextStyle","text","textStyle","textStyleModel","specifiedTextStyle","isEmphasis","setTextStyleCommon","host","setText","labelModel","defaultColor","isRectText","textPosition","textOffset","labelRotate","PI","textRotation","textDistance","richResult","ecModel","globalTextStyle","option","richItemNames","getRichItemNames","richTextStyle","getModel","setTokenTextStyle","rich","forceRich","richItemNameMap","parentModel","isBlock","getAutoColor","textStroke","textBorderColor","textStrokeWidth","textBorderWidth","originalTextPosition","insideRollback","fontStyle","fontFamily","textAlign","textVerticalAlign","textLineHeight","textWidth","textHeight","textTag","disableBox","textBackgroundColor","textPadding","textBorderRadius","textBoxShadowColor","textBoxShadowBlur","textBoxShadowOffsetX","textBoxShadowOffsetY","textShadowColor","textShadowBlur","textShadowOffsetX","textShadowOffsetY","useInsideStyle","getFont","gTextStyleModel","join","animateOrSetProps","isUpdate","animatableModel","dataIndex","isAnimationEnabled","postfix","duration","animationEasing","animationDelay","getAnimationDelayParams","animateTo","stopAnimation","attr","updateProps","initProps","getTransform","ancestor","mat","matrix","identity","mul","getLocalTransform","parent","transform","invert","Transformable","vector","transformDirection","direction","hBase","abs","vBase","vertex","groupTransition","g1","g2","getAnimatableProps","rotation","elMap1","g","elMap","isGroup","anid","oldEl","newProp","clipPointsByRect","points","point","mathMax","mathMin","clipRectByRect","targetRect","createIcon","iconStr","rectHover","strokeNoScale","replace","Group","Text","Circle","Sector","Ring","Polygon","Polyline","Rect","Line","BezierCurve","Arc","CompoundPath","LinearGradient","RadialGradient","BoundingRect","min","mergePath","1484","normalizeToArray","defaultEmphasis","subOpts","emphasisOpt","emphasis","normalOpt","normal","subOptName","getDataItemValue","dataItem","isDataItemOption","converDataValue","dimInfo","dimType","nubmerUtil","parseDate","NaN","createDataFormatModel","model","Model","dataFormatMixin","seriesIndex","mainType","subType","getData","mappingToExists","exists","newCptOptions","index","exist","cptOption","id","isIdInner","makeIdAndName","mapResult","idMap","item","existCpt","keyInfo","idNum","compressBatches","batchA","batchB","makeMap","sourceBatch","otherMap","seriesId","dataIndices","otherDataIndices","j","lenj","mapToArray","isData","mapA","mapB","queryDataIndex","payload","dataIndexInside","indexOfRawIndex","indexOfName","parseFinder","finder","defaultMainType","has","parsedKey","match","queryType","toLowerCase","includeMainTypes","queryParam","models","queryComponents","dataDimToCoordDim","dataDim","dimensions","getDimension","dimItem","getDimensionInfo","coordDim","coordDimToDataDim","dimName","coordDimIndex","otherDimToDataDim","otherDim","otherDims","dimIndex","formatUtil","TEXT_STYLE_OPTIONS","getDataParams","dataType","rawValue","getRawValue","rawDataIndex","getRawIndex","getName","itemOpt","getRawDataItem","getItemVisual","componentType","componentSubType","seriesType","seriesName","marker","getTooltipMarker","$vars","status","labelProp","itemModel","getItemModel","params","formatter","formatTpl","idx","formatTooltip","makeGetter","hostObj","1485","out","ArrayCtor","copy","v","a","b","add","v1","v2","scaleAndAdd","sub","sqrt","lenSquare","div","dot","scale","s","normalize","d","distance","distanceSquare","negate","lerp","t","Float32Array","lengthSquare","dist","distSquare","1486","_trim","str","linearMap","domain","range","clamp","subDomain","subRange","parsePercent","percent","all","parseFloat","precision","returnStr","toFixed","asc","arr","sort","getPrecision","isNaN","count","getPrecisionSafe","eIndex","dotIndex","getPixelPrecision","dataExtent","pixelExtent","LN10","dataQuantity","floor","sizeQuantity","isFinite","getPercentWithPrecision","valueList","sum","acc","digits","pow","votesPerQuota","targetSeats","seats","votes","currentSum","remainder","Number","NEGATIVE_INFINITY","maxId","remRadian","radian","pi2","isRadianAroundZero","RADIAN_EPSILON","Date","TIME_REG","exec","hour","toUpperCase","UTC","quantity","quantityExponent","nice","nf","exponent","exp10","f","reformIntervals","list","littleThan","lg","interval","close","curr","Infinity","currClose","splice","isNumeric","MAX_SAFE_INTEGER","1490","createRegisterEventWithLowercaseName","method","eventName","handler","Eventful","MessageCenter","ECharts","dom","theme","prioritySortFunc","prio","themeStorage","group","_dom","zr","_zr","zrender","init","renderer","devicePixelRatio","_throttledZrFlush","throttle","flush","backwardCompat","_theme","_chartsViews","_chartsMap","_componentsViews","_componentsMap","_coordSysMgr","CoordinateSystemManager","_api","createExtensionAPI","_messageCenter","_initEvents","resize","_pendingActions","timsort","visualFuncs","dataProcessorFuncs","animation","_onframe","doConvertPixel","methodName","_model","coordSysList","getCoordinateSystems","modelUtil","coordSys","updateDirectly","ecIns","callView","view","__alive","__model","query","eachComponent","__viewId","doDispatchAction","silent","payloadType","escapeConnect","actionWrap","actions","actionInfo","cptType","update","split","updateMethod","pop","parseClassType","IN_MAIN_PROCESS","payloads","batched","batch","eventObj","eventObjBatch","isHighDown","batchItem","action","event","main","OPTION_UPDATED","updateMethods","prepareAndUpdate","trigger","flushPendingActions","pendingActions","shift","triggerUpdatedEvent","invokeUpdateMethod","api","component","componentModel","updateZ","eachSeries","seriesModel","chart","updateProgressiveAndBlend","updateHoverLayerStatus","postUpdateFuncs","prepareView","isComponent","viewList","viewMap","viewId","classType","Clazz","ComponentView","getClass","ChartView","__id","__ecComponentInfo","componentIndex","remove","dispose","processData","process","stackSeriesData","stackedDataMap","series","stack","previousStack","stackedOn","doLayout","visual","isLayout","doVisualEncoding","excludesLayout","clearColorPalette","doRender","componentView","render","chartView","storage","elCount","env","node","ignore","frameDrawNum","needProgressive","progressive","blendMode","z","zlevel","ecInstance","coordSysMgr","ExtensionAPI","getComponentByElement","modelInfo","getComponent","enableConnect","updateConnectedChartsStatus","charts","STATUS_KEY","eventActionMap","actionType","eventType","connectedGroups","makeActionFromEvent","otherCharts","instances","otherChart","dispatchAction","existInstance","getInstanceByDom","idBase","setAttribute","DOM_ATTRIBUTE_KEY","connect","groupId","groupIdBase","disConnect","isDisposed","getAttribute","getInstanceById","registerTheme","registerPreprocessor","preprocessorFunc","optionPreprocessorFuncs","registerProcessor","priority","processorFunc","PRIORITY_PROCESSOR_FILTER","registerPostUpdate","postUpdateFunc","registerAction","ACTION_REG","test","registerCoordinateSystem","CoordinateSystem","register","getCoordinateSystemDimensions","coordSysCreator","getDimensionsInfo","registerLayout","layoutFunc","PRIORITY_VISUAL_LAYOUT","registerVisual","visualFunc","PRIORITY_VISUAL_CHART","registerLoading","loadingFx","loadingEffects","extendComponentModel","ComponentModel","extendComponentView","extendSeriesModel","SeriesModel","extendChartView","setCanvasCreator","creator","registerMap","mapName","geoJson","specialAreas","features","JSON","parse","mapDataStores","getMap","_config","__DEV__","GlobalModel","OptionManager","graphic","_throttle","seriesColor","loadingDefault","dependencies","PRIORITY","PROCESSOR","FILTER","STATISTIC","VISUAL","LAYOUT","GLOBAL","CHART","COMPONENT","BRUSH","off","one","echartsProto","getDom","getZr","setOption","notMerge","lazyUpdate","optionManager","setTheme","getOption","getWidth","getHeight","getDevicePixelRatio","painter","dpr","window","getRenderedCanvas","canvasSupported","pixelRatio","backgroundColor","getDisplayList","getSvgDataUrl","svgSupported","pathToSvg","getDataURL","excludeComponents","excludesComponentViews","url","getType","toDataURL","getConnectedDataURL","left","top","right","bottom","canvasList","canvas","getBoundingClientRect","targetCanvas","refreshImmediately","convertToPixel","convertFromPixel","containPixel","coordinateSystem","containPoint","getVisual","visualType","getViewOfComponentModel","getViewOfSeriesModel","restoreData","isSingleCanvas","configLayer","clearColor","colorArr","stringify","colorStops","updateView","clearAllVisual","updateVisual","updateLayout","optionChanged","resetOption","_loadingFX","showLoading","cfg","hideLoading","browser","weChat","MOUSE_EVENT_NAMES","eveName","dataModel","getSeriesByIndex","eventData","_disposed","clear","disconnect","dataTool","version","___ec_export","1493","Displayable","PathProxy","pathContain","Pattern","getCanvasPattern","pathProxyForDraw","__dirtyPath","strokeContainThreshold","brush","ctx","prevEl","hasStroke","hasFill","hasFillGradient","hasStrokeGradient","hasFillPattern","hasStrokePattern","setTransform","__dirty","_fillGradient","getGradient","_strokeGradient","fillStyle","strokeStyle","lineDash","lineDashOffset","ctxLineDash","setLineDash","getGlobalScale","setScale","beginPath","setLineDashOffset","buildPath","rebuildPath","restoreTransform","drawRectText","shapeCfg","inBundle","createPathProxy","_rect","needsUpdateRect","rectWithStroke","_rectWithStroke","w","lineScale","getLineScale","contain","localPos","transformCoordToLocal","containStroke","dirtyPath","refresh","__clipTarget","animateShape","loop","animate","attrKV","setShape","Sub","defaultShape","thisShape","_default","1494","global","dev","1495","navigator","os","ua","firefox","ie","edge","SVGRect","touchEventsSupported","pointerEventsSupported","userAgent","1497","vec2","v2ApplyTransform","union","other","lt","rb","lb","rt","maxX","maxY","sx","sy","translate","intersect","ax0","ax1","ay0","ay1","bx0","bx1","by0","by1","plain","1498","doGet","pathArr","getParent","getParentMethod","clazzUtil","lineStyleMixin","areaStyleMixin","textStyleMixin","itemStyleMixin","mergeOption","ignoreParent","parsePath","thisParentModel","isEmpty","setReadOnly","properties","customizeGetParent","enableClassExtend","1499","addCommas","toCamelCase","upperCaseFirst","group1","charAt","encodeHTML","String","tpl","paramsList","encode","seriesLen","alias","TPL_VAR_ALIAS","wrapVar","seriesIdx","k","formatTplSimple","extraCssText","formatTime","isUTC","date","numberUtil","utc","M","h","s2d","capitalFirst","substr","textContain","varName","truncateText","getTextRect","1505","MEMBER_PRIFIX","hasOwn","ret","TYPE_DELIMITER","checkClassType","RootClass","mandatoryMethods","$constructor","proto","ExtendedClass","superCall","superApply","enableClassManagement","entity","options","makeContainer","container","IS_CONTAINER","registerClass","componentMainType","throwWhenNotFound","getClassesByMainType","o","hasClass","getAllClassMainTypes","types","hasSubTypes","registerWhenExtend","originalExtend","1508","getDependencies","deps","arrayPush","componentUtil","boxLayoutMixin","defaultOption","dependentModels","uid","layoutMode","extraOpt","getUID","mergeDefaultAndTheme","inputPositionParams","getLayoutParams","themeModel","getTheme","getDefaultOption","mergeLayoutParam","optionUpdated","newCptOption","isInit","optList","Class","getReferringComponents","enableSubTypeDefaulter","enableTopologicalTravel","1516","getScaleExtent","axisDataLen","boundaryGap","span","scaleType","getMin","getMax","fixMin","fixMax","originalExtent","getExtent","setBlank","getNeedCrossZero","niceScaleExtent","extent","splitNumber","base","setExtent","niceExtent","minInterval","maxInterval","setInterval","createScaleByModel","axisType","OrdinalScale","getCategories","IntervalScale","Scale","ifAxisCrossZero","axis","getAxisLabelInterval","tickCoords","labels","font","axisRotate","textSpaceTakenRect","autoLabelInterval","accumulatedLabelInterval","step","tickCoord","cos","sin","getFormattedLabels","labelFormatter","getTicksLabels","ticks","getTicks","tick","getAxisRawValue","getLabel","1517","boxLayout","orient","gap","maxWidth","maxHeight","currentLineMaxSize","eachChild","nextX","nextY","nextChild","childAt","nextChildRect","moveX","newline","moveY","getAvailableSize","positionInfo","containerRect","margin","containerWidth","containerHeight","getLayoutRect","verticalMargin","horizontalMargin","positionElement","hv","boundingMode","needLocalTransform","elPos","dx","dy","sizeCalculable","hvIdx","HV_NAMES","targetOption","newOption","names","newParams","newValueCount","merged","mergedValueCount","hasProp","hasValue","ignoreSize","hResult","vResult","copyLayoutParams","LOCATION_PARAMS","_number","box","vbox","hbox","1523","DEFAULT_FONT","textWidthCache","textLines","l","measureText","textWidthCacheCounter","TEXT_CACHE_MAX","truncate","getRichTextRect","getPlainTextRect","contentBlock","parsePlainText","outerWidth","outerHeight","adjustTextX","adjustTextY","lineHeight","parseRichText","adjustTextPositionOnRect","halfHeight","ellipsis","prepareTruncateOptions","truncateSingleLine","maxIterations","minChar","cnCharWidth","ascCharWidth","placeholder","contentWidth","ellipsisWidth","textLine","subLength","estimateLength","charCode","charCodeAt","getLineHeight","lines","truncOuterHeight","truncOuterWidth","lastIndex","STYLE_REG","matchedIndex","pushTokens","substring","contentHeight","pendingList","stlPadding","truncateWidth","truncateHeight","line","tokens","token","tokenStyle","styleName","tokenHeight","tokenWidth","tokenWidthNotSpecified","percentWidth","bgImg","imageHelper","findExistImage","isImageReady","paddingW","remianTruncWidth","parseInt","block","isEmptyStr","strs","isLineHolder","tokensLen","makeFont","textFont","_util","1524","isAroundZero","EPSILON","isNotAroundZero","cubicAt","p0","p1","p2","p3","onet","cubicDerivativeAt","cubicRootAt","roots","c","A","B","C","n","t1","disc","K","t2","discSqrt","mathSqrt","Y1","Y2","mathPow","ONE_THIRD","T","theta","acos","ASqrt","tmp","THREE_SQRT","t3","cubicExtrema","extrema","cubicSubdivide","p01","p12","p23","p012","p123","p0123","cubicProjectPoint","x0","y0","x3","y3","prev","next","d1","d2","_v0","_t","_v1","v2DistSquare","EPSILON_NUMERIC","_v2","quadraticAt","quadraticDerivativeAt","quadraticRootAt","quadraticExtremum","divider","quadraticSubdivide","quadraticProjectPoint","_vector","v2Create","1525","m1","m2","out0","out1","out2","out3","out4","out5","rotate","rad","aa","ac","atx","ab","ad","aty","st","ct","vx","vy","det","1531","clientToLocal","calculate","defaultGetZrXY","layerX","offsetX","zrX","zrY","layerY","offsetY","clientX","clientY","normalizeEvent","touch","targetTouches","changedTouches","zrDelta","wheelDelta","detail","button","which","undefined","MOUSE_EVENT_REG","addEventListener","isDomLevel2","attachEvent","removeEventListener","detachEvent","notLeftMouse","Dispatcher","stop","preventDefault","stopPropagation","cancelBubble","returnValue","1532","arrySlice","_$handlers","_h","isSilent","newList","argLen","triggerWithContext","1533","clampCssByte","clampCssAngle","clampCssFloat","parseCssInt","parseCssFloat","cssHueToRgb","lerpNumber","p","setRgba","r","copyRgba","putToCache","colorStr","rgbaArr","lastRemovedArr","colorCache","put","cached","kCSSColorTable","op","ep","fname","alpha","hsla2rgba","iv","hsla","rgba","rgba2hsla","H","S","R","G","vMin","vMax","delta","L","deltaR","deltaG","deltaB","level","toHex","fastLerp","normalizedValue","colors","leftIndex","rightIndex","ceil","leftColor","rightColor","dv","fullOutput","modifyHSL","modifyAlpha","arrColor","LRU","transparent","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","fastMapToColor","mapToColor","1537","collect","axesInfo","seriesInvolved","coordSysAxesInfo","coordSysMap","collectAxesInfo","collectSeriesInfo","globalTooltipModel","globalAxisPointerModel","linksOption","linkGroups","saveTooltipAxisInfo","fromTooltip","triggerTooltip","axisPointerModel","axisPointerShow","isHandleTrigger","makeAxisPointerModel","baseTooltipModel","snap","makeKey","involveSeries","axisInfo","useHandle","seriesModels","axesInfoInCoordSys","groupIndex","getLinkGroupIndex","linkGroup","mapper","axisPointerEnabled","coordSysKey","coordSysModel","getAxes","getTooltipAxes","triggerAxis","cross","tooltipAxes","baseAxes","otherAxes","tooltipAxisPointerModel","volatileOption","field","labelOption","label","show","crossStyle","lineStyle","seriesTooltipTrigger","seriesTooltipShow","getAxis","dim","seriesDataCount","axisModel","linkOption","checkPropInLink","linkPropValue","axisPropValue","fixValue","getAxisInfo","reverse","isBlank","getAxisPointerModel","1538","excludes","includes","propName","1539","setting","_setting","_extent","_interval","getSetting","unionExtent","unionExtentFromData","getDataExtent","start","end","thisExtent","_isBlank","1555","debugMode","1556","Element","_children","__storage","children","childOfName","childCount","_doAdd","addBefore","nextSibling","addToStorage","addChildrenToStorage","delFromStorage","delChildrenFromStorage","removeAll","includeChildren","tmpRect","tmpMat","invisible","childRect","1557","curve","bbox","CMD","Q","Z","min2","max2","mathCos","mathSin","mathAbs","hasTypedArray","notSaveData","_saveData","_xi","_yi","_x0","_y0","_ux","_uy","_len","_lineDash","_dashOffset","_dashIdx","_dashSum","moveTo","addData","lineTo","exceedUnit","_needsDash","_dashedLineTo","bezierCurveTo","_dashedBezierTo","quadraticCurveTo","_dashedQuadraticTo","arc","cx","cy","startAngle","endAngle","anticlockwise","arcTo","radius","closePath","toStatic","lineDashSum","offset","setData","appendPath","appendSize","appendPathData","cmd","_expandData","_prevCmd","newData","dash","dashSum","nDash","bezierLen","tmpLen","MAX_VALUE","xi","yi","fromLine","fromCubic","fromQuadratic","rx","ry","fromArc","ux","uy","dTheta","psi","fs","scaleX","scaleY","isEllipse","1564","_coordinateSystems","coordinateSystemCreators","coordinateSystems","creater","coordinateSystemCreator","1565","firstDataNotNull","ifNeedCompleteOrdinalData","sampleItem","createListFromArray","coordSysName","creators","registeredCoordSys","completeDimOpt","encodeDef","dimsDef","completeDimensions","categoryIndex","List","nameList","createNameList","categories","dimValueGetter","hasItemOption","categoryAxesModels","initData","isStackable","getDimTypeByAxis","categoryAxisModel","categoryDim","dataLen","cartesian2d","axesModels","xAxisModel","yAxisModel","xAxisType","yAxisType","stackable","isXAxisCateogry","isYAxisCategory","singleAxis","singleAxisModel","singleAxisType","isCategory","single","polar","polarModel","angleAxisModel","findAxisModel","radiusAxisModel","radiusAxisType","angleAxisType","isAngleAxisCateogry","isRadiusAxisCateogry","angle","geo","1566","_format","_clazz","colorPaletteMixin","_layout","legendDataProvider","visualColorAccessPath","getInitialData","themeSubType","fillDataTextStyle","newSeriesOption","cloneShallow","getLinkedData","getRawData","getBaseAxis","multipleSeries","formattedValue","setEachItem","dimIdx","tooltip","valStr","vertially","tooltipName","tooltipDims","colorEl","animationEnabled","getColorFromPalette","scope","getAxisTooltipData","getTooltipPosition","1567","helper","roundNumber","_intervalPrecision","getInterval","_niceExtent","getIntervalPrecision","intervalScaleGetTicks","niceTicks","intervalScaleNiceTicks","intervalPrecision","niceTickExtent","expandSize","1568","random","DELIMITER","subTypeDefaulters","registerSubTypeDefaulter","defaulter","determineSubType","componentTypeMain","dependencyGetter","makeDepndencyGraph","fullNameList","graph","noEntryList","thisItem","createDependencyGraphItem","originalDeps","availableDeps","getAvailableDependencies","entryCount","dependentName","predecessor","thatItem","successor","dep","topologicalTravel","targetNameList","removeEdge","succComponentType","removeEdgeAndAdd","targetNameSet","currComponentType","currVertex","isInTargetNameSet","1569","symbolPathSetColor","innerColor","symbolStyle","symbolShape","symbolType","__isEmptyBrush","createSymbol","keepAspect","symbolPath","SymbolClz","setColor","Triangle","Diamond","Pin","asin","tanX","tanY","cpLen","cpLen2","Arrow","symbolCtors","roundRect","square","circle","diamond","pin","arrow","triangle","symbolShapeMakers","size","symbolBuildProxies","beforeBrush","proxySymbol","1570","delay","debounce","lastExec","getTime","timer","currCall","diff","debounceNextCall","lastCall","thisDelay","thisDebounce","clearTimeout","setTimeout","debounceDelay","createOrUpdate","fnAttr","rate","throttleType","originFn","ORIGIN_METHOD","lastThrottleType","THROTTLE_TYPE","RATE","1574","minRunLength","DEFAULT_MIN_MERGE","makeAscendingRun","lo","hi","compare","runHi","reverseRun","binaryInsertionSort","mid","pivot","gallopLeft","hint","lastOffset","maxOffset","gallopRight","TimSort","pushRun","_runStart","_runLength","runStart","stackSize","runLength","mergeRuns","mergeAt","forceMergeRuns","start1","length1","start2","length2","mergeLow","mergeHigh","cursor1","cursor2","dest","count1","count2","exit","_minGallop","minGallop","DEFAULT_MIN_GALLOPING","customCursor","customDest","remaining","ts","minRun","force","1575","Style","__clipPaths","RectText","draggable","dragging","culling","cursor","afterBrush","rectContain","coord","animateStyle","useStyle","1576","Gradient","addColorStop","1577","newImageOrSrc","cachedImgObj","globalImageCache","createOrUpdateImage","hostEl","cbPayload","__zrImageSrc","pendingWrap","pending","imageOnLoad","__cachedImgObj","1602","getSymbolSize","symbolSize","getScale","seriesScope","updateData","driftSymbol","drift","_symbol","_labelHelper","findLabelValueDim","symbolProto","_createSymbol","_symbolType","stopSymbolAnimation","toLastFrame","getSymbolPath","highlight","downplay","setZ","setDraggable","hostModel","_updateCommon","fadeIn","opacity","_seriesModel","normalStyleAccessPath","emphasisStyleAccessPath","normalLabelAccessPath","emphasisLabelAccessPath","itemStyle","hoverItemStyle","symbolRotate","symbolOffset","hoverLabelModel","hoverAnimation","cursorStyle","getItemStyle","elStyle","symbolInnerColor","useNameLabel","valueDim","onEmphasis","ratio","onNormal","fadeOut","keepLabel","1603","getItemGraphicEl","dataToPoint","getValues","1604","records","initGlobalListeners","useHandler","dis","makeDispatchAction","record","dispatchTooltipFinally","pendings","initialized","doEnter","onLeave","actuallyPayload","showLen","showTip","hideLen","hideTip","currTrigger","unregister","1605","buildElStyle","axisPointerType","styleModel","getLineStyle","getAreaStyle","buildLabelElOption","elOption","labelPos","getValueLabel","paddings","textRect","align","confineInContainer","bgColor","getTextColor","shadowBlur","shadowColor","shadowOffsetX","shadowOffsetY","viewWidth","viewHeight","seriesDataIndices","axisHelper","seriesData","idxItem","dataParams","getTransformedPosition","layoutInfo","dataToCoord","labelOffset","labelDirection","labelMargin","buildCartesianSingleLabelElOption","textLayout","AxisBuilder","innerTextLayout","makeLineShape","xDimIndex","makeRectShape","xy","wh","makeSectorShape","r0","clockwise","1606","makeAxisEventDataBase","endTextLayout","textRotate","rotationDiff","inverse","onLeft","tooltipOpt","fixMinMaxLabelShow","labelEls","tickEls","showMinLabel","showMaxLabel","firstLabel","nextLabel","lastLabel","prevLabel","firstTick","nextTick","lastTick","prevTick","ignoreEl","isTwoLabelOverlapped","current","labelLayout","firstRect","nextRect","mRotationBack","matrixUtil","isNameLocationCenter","nameLocation","buildAxisTick","axisBuilder","tickModel","lineStyleModel","tickLen","tickInterval","labelInterval","ticksCoords","getTicksCoords","pt1","pt2","_transform","ticksCnt","ifIgnoreOnTick","tickDirection","tickEl","buildAxisLabel","axisLabelShow","labelRotation","categoryData","triggerEvent","tickVal","itemLabelModel","textColor","pos","labelStr","textEl","targetType","_dumbGroup","updateTransform","decomposeTransform","nameDirection","dumbGroup","hasBuilder","builders","getGroup","axisLine","lineCap","arrows","arrowSize","symbolWidth","symbolHeight","symbol","axisTickLabel","axisName","gapSignal","nameRotation","axisNameAvailableWidth","truncateOpt","nameTruncateMaxWidth","truncatedText","formatterParams","__fullText","__truncatedText","content","axisRotation","rawTick","1607","updateAxisPointer","axisView","forceRender","AxisView","getAxisPointerClass","axisPointerClass","axisPointerModelHelper","_axisPointer","disposeAxisPointer","axisPointer","echarts","axisPointerClazz","registerAxisPointerClass","1608","gridModel","grid","rawAxisPosition","axisPosition","onZero","axisDim","getRect","rectBound","axisOffset","posBound","otherAxis","onZeroAxisIndex","onZeroCoord","toGlobalCoord","dirMap","labelInside","getLabelInterval","1609","xAxis","yAxis","1610","fixExtentWithBands","nTick","normalizedExtent","Axis","onBand","_labelInterval","containData","coordToData","pointToData","alignWithLabel","bands","getBands","coords","getLabelsCoords","getBandWidth","axisExtent","isHorizontal","getRotate","1611","origin","rangeStart","rangeEnd","getCoordSysModel","setRange","resetRange","1612","getAxisType","axisModelCreator","axisModelCommonMixin","AxisModel","gridIndex","gridId","extraOption","1613","isAxisUsedInTheGrid","rotateTextRect","rotateRadians","boundingBox","beforeWidth","beforeHeight","afterWidth","afterHeight","getLabelUnionRect","axisLabelModel","labelCount","isLabelIgnored","unrotatedSingleRect","singleRect","Grid","_coordsMap","_coordsList","_axesMap","_axesList","_initCartesian","fixAxisOnZero","axesMap","otherAxisDim","axes","canNotOnZeroToAxis","updateAxisTransfrom","coordBase","axisExtentSum","toLocalCoord","findAxesModels","axesTypes","isCartesian2D","Cartesian2D","Axis2D","gridProto","_updateScale","ignoreContainLabel","adjustAxes","axesList","gridRect","getBoxLayoutParams","labelUnionRect","axisIndex","axesMapOnDim","getCartesian","xAxisIndex","yAxisIndex","coordList","getCartesians","_findConvertTarget","cartesian","coordsList","createAxisCreator","axisPositionUsed","axesCount","addAxis","baseAxis","getOtherAxis","grids","1614","transferProperties","TRANSFERABLE_PROPERTIES","__wrappedMethods","DefaultDataProvider","dataArray","_array","normalizeDimensions","cloneListForMapAndSample","original","excludeDimensions","allDimensions","_storage","originalStorage","dimStore","DataDiffer","globalObj","dataCtors","float","Float64Array","int","Int32Array","ordinal","number","time","pure","getItem","dimensionInfos","dimensionNames","dimensionName","dimensionInfo","_dimensionInfos","indices","_nameList","_idList","_optionModels","_visual","_itemVisuals","_itemLayouts","_graphicEls","_rawData","listProto","nameDimIdx","dimensionInfoMap","idList","nameRepeatCount","itemName","DataCtor","stackedValue","dimData","dimExtent","getSum","rawIndex","indicesOfNearest","maxDistance","nearestIndices","minDist","minDiff","rawIdx","getId","dims","dimSize","filterSelf","newIndices","keep","mapArray","tmpRetValue","retValue","downSample","dimension","sampleValue","sampleIndex","targetStorage","originalIndices","frameValues","frameIndices","frameSize","otherList","otherIdList","setVisual","setLayout","getLayout","getItemLayout","setItemLayout","clearItemLayouts","itemVisual","setItemVisual","setItemDataAndSeriesIndex","setItemGraphicEl","eachItemGraphicEl","dimensionInfoList","wrapMethod","injectFunction","originalMethod","res","TRANSFERABLE_METHODS","CHANGABLE_METHODS","1615","sysDims","applyDim","resultItem","OTHER_DIMS","coordDimNameMap","genName","fromZero","dataDimNameMap","dimCount","retrieveValue","sysDimItem","sysDimItemDimsDef","dimDefItem","userDimName","dataDims","resultDimIdx","availDimIdx","sysDimIndex","sysDimItemOtherDims","extra","extraPrefix","extraFromZero","isExtraCoord","guessOrdinal","1616","colorIdx","colorNameMap","colorPalette","1617","fixExtent","1618","Chart","elSetState","toggleHighlight","dataIdx","chartProto","1633","guid","Animatable","clipPath","beforeUpdate","afterUpdate","hide","setClipPath","addSelfToZr","removeClipPath","removeSelfFromZr","animators","addAnimator","removeAnimator","1634","defaultGetter","defaultSetter","interpolateNumber","interpolateString","interpolateArray","arrDim","len2","fillArr","arr0","arr1","arr0Len","arr1Len","arraySlice","isArraySame","catmullRomInterpolateArray","catmullRomInterpolate","v0","cloneValue","rgba2String","getArrayDim","keyframes","lastValue","createTrackClip","animator","easing","oneTrackDone","forceAnimate","getter","_getter","setter","_setter","useSpline","trackLen","trackMaxTime","firstVal","isValueArray","isValueColor","isValueString","kfPercents","kfValues","prevValue","isAllValueEqual","colorArray","_target","lastFrame","lastFramePercent","onframe","frame","clip","Clip","life","_loop","_delay","ondestroy","Animator","_tracks","_clipCount","_doneList","_onframeList","_clipList","when","tracks","during","pause","_paused","resume","isPaused","_doneCallback","doneList","lastClip","clipCount","addClip","oldOnFrame","forwardToLast","clipList","removeClip","done","getClips","1635","requestAnimationFrame","msRequestAnimationFrame","mozRequestAnimationFrame","webkitRequestAnimationFrame","1636","normalizeRadian","PI2","1637","windingLine","dir","1638","LinkedList","head","tail","linkedListProto","insert","entry","Entry","insertEntry","maxSize","_list","_map","_maxSize","_lastRemovedEntry","LRUProto","removed","leastUsedEntry","1639","fromPoints","xDim","yDim","tx","ty","vec2Min","vec2Max","extremity","1640","idStart","1641","1642","ZImage","_image","sWidth","sHeight","drawImage","1643","repeat","createPattern","1644","createLinearGradient","createRadialGradient","STYLE_COMMON_PROPS","transformText","textOrigin","blend","prevStyle","firstDraw","globalAlpha","globalCompositeOperation","otherStyle","newStyle","canvasGradient","styleProto","1645","orignalBrush","modified","clipPaths","shadowTemp","1646","smooth","controlPoints","smoothBezier","smoothConstraint","cp1","cp2","smoothSpline","1647","r1","r2","r3","r4","total","1648","normalizeTextStyle","normalizeStyle","VALID_TEXT_ALIGN","textBaseline","VALID_TEXT_VERTICAL_ALIGN","renderText","renderRichText","renderPlainText","setCtx","__textCotentBlock","boxPos","getBoxPosition","baseX","baseY","applyTextRotation","boxY","textX","textY","needDrawBg","needDrawBackground","boxX","drawBackground","getTextXForPadding","getStroke","getFill","strokeText","fillText","drawRichText","xLeft","lineTop","xRight","tokenCount","usedWidth","lineXLeft","lineXRight","placeToken","isPlainBg","roundRectHelper","onBgImageLoaded","blockHeiht","maxValue","lastIndexOf","needDrawText","center","middle","1649","mIdentity","transformableProto","parentHasTransform","invTransform","tmpTransform","atan2","transformCoordToGlobal","1650","ZRender","getInstance","registerPainter","painterCtors","delInstance","Handler","Storage","Painter","Animation","HandlerProxy","useVML","rendererType","vml","handerProxy","getViewportRoot","root","stage","_needsRefresh","oldDelFromStorage","oldAddToStorage","addRoot","delRoot","zLevel","config","_needsRefreshHover","refreshHoverImmediately","refreshHover","clearHover","clearAnimation","pathToImage","setCursorStyle","findHover","eventHandler","1675","chartInstance","echartsAPIList","1676","barLayoutGrid","eachSeriesByType","1677","BaseBarSeries","brushSelector","1678","removeRect","animationModel","removeSector","updateStyle","isPolar","itemStyleModel","getBarItemStyle","labelPositionOutside","setLabel","getLineWidth","rawLayout","BAR_BORDER_WIDTH_QUERY","_helper","barItemStyle","coordinateSystemType","_render","isHorizontalOrRadial","oldData","_data","elementCreator","newIndex","oldIndex","execute","rectShape","animateProperty","animateTarget","isRadial","sector","sectorShape","fixedLineWidth","signX","signY","1679","getMarkerPosition","pt","legendHoverLink","barMinHeight","barMinAngle","1680","makeStyleMapper","getBorderLineDash","1681","fixPosition","1682","SymbolDraw","symbolCtor","_symbolCtor","symbolNeedsDraw","isIgnore","symbolDrawProto","SymbolCtor","newIdx","symbolEl","oldIdx","enableAnimation","1683","labelDims","1684","visualSymbol","layoutPoints","dataSample","1685","clipOverflow","smoothMonotone","showSymbol","showAllSymbol","connectNulls","sampling","hoverLayerThreshold","1686","isPointsSame","points1","points2","getSmooth","getAxisExtentWithGap","getGlobalExtent","halfBandWidth","sign","getStackedOnPoints","valueAxis","valueStart","baseDataOffset","stackedOnSameSign","stackedData","createGridClipShape","hasAnimation","xExtent","yExtent","createPolarClipShape","angleAxis","getAngleAxis","radiusAxis","getRadiusAxis","radiusExtent","angleExtent","RADIAN","createClipShape","turnPointsIntoStep","stepTurnAt","baseIndex","stepPoints","nextPt","stepPt","stepPt2","getVisualGradient","visualMetaList","visualMeta","stops","stopLen","outerColors","minCoord","maxCoord","coordSpan","unshift","gradient","lineAnimationDiff","_poly","lineGroup","symbolDraw","_symbolDraw","_lineGroup","areaStyleModel","isCoordSysPolar","prevCoordSys","_coordSys","polyline","_polyline","polygon","_polygon","isAreaChart","stackedOnPoints","isSymbolIgnore","_getSymbolIgnoreFunc","__temp","_step","_newPolygon","_stackedOnPoints","_points","_updateAnimation","_newPolyline","visualColor","lineJoin","stackedOnSmooth","categoryAxis","getAxesByScale","stackedOnCurrent","stackedOnNext","__points","updatedDataInfo","diffStatus","idx1","ptIdx","1687","getStackedOnPoint","diffData","diffResult","oldStackedOnPoints","newStackedOnPoints","oldCoordSys","newCoordSys","currPoints","nextPoints","currStackedPoints","nextStackedPoints","sortedIndices","rawIndices","diffItem","pointAdded","currentPt","sortedCurrPoints","sortedNextPoints","sortedCurrStackedPoints","sortedNextStackedPoints","sortedStatus","1688","isPointNull","drawSegment","segLen","allLen","smoothMin","smoothMax","prevIdx","v2Copy","cp0","nextIdx","nextP","ratioNextSeg","prevP","lenPrevSeg","lenNextSeg","getBoundingBox","ptMin","ptMax","fixClipWithShadow","stackedOnBBox","1689","1690","axisTrigger","link","1691","AxisPointerModel","triggerOn","animationDurationUpdate","shadowStyle","borderColor","borderWidth","handle","icon","1692","globalListener","AxisPointerView","1693","BaseAxisPointer","moveAnimation","propsEqual","lastProp","lastProps","newProps","equals","updateLabelShowHide","labelEl","getHandleTransProps","trans","updateMandatoryProps","eventTool","throttleUtil","_group","_lastGraphicKey","_handle","_dragging","_lastValue","_lastStatus","_payloadInfo","animationThreshold","_axisModel","_axisPointerModel","makeElOption","graphicKey","_moveAnimation","determineAnimation","doUpdateProps","updatePointerEl","updateLabelEl","createPointerEl","createLabelEl","_renderHandle","isCategoryAxis","useSnap","pointerOption","pointer","pointerEl","updateHandleTransform","handleModel","onmousemove","onmousedown","_onHandleDragMove","ondragend","_onHandleDragEnd","includeStyles","handleSize","_moveHandleToValue","getHandleTransform","_doDispatchAxisPointer","payloadInfo","cursorPoint","tooltipOption","doClear","buildLabel","1694","getAxisDimIndex","viewHelper","cartesianAxisHelper","CartesianAxisPointer","otherExtent","pixelValue","pointerShapeBuilder","currPosition","cursorOtherValue","tooltipOptions","targetShape","shadow","bandWidth","1695","illegalPoint","findPointFromSeries","isIllegalPoint","inputAxesInfo","shouldHide","outputFinder","showValueMap","dataByCoordSys","updaters","showPointer","showTooltip","coordSysContainsPoint","inputAxisInfo","findInputAxisInfo","processOnAxis","linkTriggers","tarAxisInfo","tarKey","srcAxisInfo","srcKey","srcValItem","makeMapperParam","updateModelActually","dispatchTooltipActually","dispatchHighDownActually","newValue","dontSnap","buildPayloadsBySeries","payloadBatch","snapToValue","seriesNestestValue","nestestValue","modelHelper","coordSysItem","coordSysId","coordSysIndex","coordSysType","coordSysMainType","dataByAxis","axisId","valueLabelOpt","outputAxesInfo","valItem","lastHighlights","newHighlights","toHighlight","toDownplay","1696","axisBuilderAttrs","selfBuilderAttrs","CartesianAxisView","oldAxisGroup","_axisGroup","_splitLine","splitLineModel","lineColors","lineInterval","lineCount","colorIndex","_splitArea","splitAreaModel","areaColors","prevX","prevY","areaInterval","areaStyle","1697","subtext","subtarget","itemGap","subtextStyle","titleModel","subtextStyleModel","subText","subTextEl","sublink","open","groupRect","layoutOption","layoutRect","alignStyle","1698","1699","assembleTransition","transitionText","vendors","vendorPrefix","assembleFont","cssText","assembleCssText","tooltipModel","transitionDuration","zrColor","borderName","camelCase","TooltipContent","_x","_y","appendChild","_container","_show","_hideTimeout","onmouseenter","_enterable","_inContent","eventUtil","dispatch","onmouseleave","hideLater","_hideDelay","stl","currentStyle","defaultView","getComputedStyle","domStyle","innerHTML","setContent","setEnterable","enterable","getSize","clientWidth","clientHeight","viewportRootOffset","getViewportRootOffset","offsetLeft","offsetTop","isShow","1700","showContent","alwaysShowContent","displayMode","confine","showDelay","hideDelay","borderRadius","animationEasingUpdate","1701","buildTooltipModel","modelCascade","resultModel","refixTooltipPosition","gapH","gapV","getOuterSize","confineTooltipPosition","paddingRight","borderLeftWidth","borderRightWidth","paddingTop","paddingBottom","borderTopWidth","borderBottomWidth","calcTooltipPosition","contentSize","domWidth","domHeight","rectWidth","rectHeight","isCenterAlign","layoutUtil","axisPointerViewHelper","proxyRect","tooltipContent","_tooltipContent","_tooltipModel","_ecModel","_lastDataByCoordSys","_alwaysShowContent","_initGlobalListener","_keepShow","_tryShow","_hide","_lastX","_lastY","_refreshUpdateTimeout","manuallyShowTip","_ticket","_manuallyAxisShowTip","pointInfo","manuallyHideTip","_showAxisTooltip","_showSeriesItemTooltip","_showComponentItemTooltip","_showOrMove","_showTimout","singleDefaultHTML","singleParamsList","singleTooltipModel","itemCoordSys","axisValue","seriesDefaultHTML","valueLabel","axisValueLabel","firstLine","positionExpr","_updateContentNotChangedOnAxis","_updatePosition","_showTooltipContent","tooltipTrigger","defaultHtml","asyncTicket","subTooltipModel","html","cbTicket","vAlign","viewSize","lastCoordSys","contentNotChanged","lastItemCoordSys","indexCoordSys","lastDataByAxis","thisItemCoordSys","thisDataByAxis","lastItem","indexAxis","lastIndices","lastIdxItem","newIdxItem","1702","nameRotate","nameTruncate","nameTextStyle","nameGap","axisTick","inside","axisLabel","splitLine","splitArea","axisDefault","timeAxis","logAxis","logBase","1703","BaseAxisModelClass","axisTypeDefaulter","extraDefaultOption","AXIS_TYPES","1704","coordExtent","1705","dimAxisMapper","_axes","Cartesian","_dimList","_dataCoordConvert","input","dimList","output","1706","axisX","axisY","1707","containLabel","1708","Region","geometries","cp","polygonContain","MAX_NUMBER","exterior","loopGeo","interiors","transformTo","1709","decode","json","UTF8Encoding","encodeScale","UTF8Scale","feature","geometry","coordinates","encodeOffsets","coordinate","decodePolygon","c2","featureObj","region","1710","defaultKeyGetter","oldArr","newArr","oldKeyGetter","newKeyGetter","_old","_new","_oldKeyGetter","_newKeyGetter","initIndexMap","keyArr","keyGetterName","dataDiffer","existence","_add","_update","_remove","oldDataIndexMap","newDataIndexMap","oldDataKeyArr","newDataKeyArr","1711","format","ecHelper","_List","_Model","_Axis","_env","_parseGeoJson","parseGeoJson","ecUtil","util","1712","createList","createScale","mixinAxisModelCommonMethods","_completeDimensions","1713","getSeriesStackId","STACK_PREFIX","getAxisKey","getLayoutOnAxis","axisKey","stackId","widthAndOffsets","doCalBarWidthAndOffset","offsetCenter","calBarWidthAndOffset","barSeries","barWidth","barMaxWidth","barGap","barCategoryGap","seriesInfoList","columnsMap","seriesInfo","columnsOnAxis","remainedWidth","autoWidthCount","categoryGap","stacks","barGapPercent","autoWidth","column","lastColumn","widthSum","barWidthAndOffset","getSeriesByType","isSeriesFiltered","lastStackCoords","lastStackCoordsOrigin","columnLayoutInfo","columnOffset","columnWidth","valueAxisStart","coordDims","lastCoord","lastCoordOrigin","1714","1715","maskColor","mask","labelRect","1716","mergeTheme","themeItem","initBase","baseOption","OPTION_INNER_KEY","_seriesIndices","globalDefault","getComponentsByTypes","componentsMap","existComponent","createSeriesIndices","filterBySubType","components","cpt","colorPaletteMinin","_optionManager","mountOption","timelineOption","getTimelineOption","mediaOptions","getMediaOption","mediaOption","visitComponent","newCptOptionList","ComponentModelClass","newCptTypes","componentOption","cpts","isIdArray","isNameArray","findComponents","queryCond","q","indexAttr","idAttr","nameAttr","queryResult","getSeriesByName","oneSeries","getSeries","rawSeriesIndex","eachRawSeries","eachRawSeriesByType","getCurrentSeriesIndices","filterSeries","filteredSeries","componentTypes","1717","_timelineOptions","_mediaList","_mediaDefault","_currentMediaIndices","_optionBackup","_newBaseOption","parseRawOption","rawOption","isNew","mediaDefault","timelineOptions","mediaList","timelineOpt","timeline","media","singleMedia","preProcess","applyMediaQuery","ecWidth","ecHeight","realMap","aspectratio","applicatable","matched","QUERY_REG","operator","realAttr","real","expect","indicesEquals","indices1","indices2","oldOption","newCptOpt","oldCptOpt","oldOptionBackup","newParsedOption","isRecreate","optionBackup","timelineModel","getCurrentIndex","1718","platform","animationDuration","progressiveThreshold","useUTC","1719","1720","1721","lineType","1722","getLineDash","dotSize","dashSize","1723","graphicUtil","PATH_COLOR","1724","compatLayoutProperties","LAYOUT_PROPERTIES","isTheme","compatStyle","seriesOpt","clockWise","pointerColor","COMPATITABLE_SERIES","dataRange","visualMap","COMPATITABLE_COMPONENTS","componentName","1725","compatItemStyle","itemStyleOpt","POSSIBLE_STYLES","normalItemStyleOpt","emphasisItemStyleOpt","compatTextStyle","labelOptSingle","compatLabelTextStyle","labelOpt","processSeries","upperLabel","edgeLabel","markPoint","markLine","markArea","mpData","mlData","toArr","toObj","axisOpt","parallel","parallelOpt","parallelAxisDefault","calendar","calendarOpt","radar","radarOpt","geoOpt","regions","regionObj","1726","sampler","samplers","indexSampler","average","nearest","1727","fixRoundingError","originalVal","roundingErrorFix","scaleProto","intervalScaleProto","mathFloor","mathCeil","mathLog","LogScale","_originalScale","originalScale","powVal","__fixMin","__fixMax","approxTickNum","err","1728","rank","1729","scaleHelper","bisect","TimeScale","stepLvl","_stepLvl","ONE_HOUR","getFullYear","getMonth","getDate","approxInterval","scaleLevelsLen","scaleLevels","yearSpan","timezoneOffset","getTimezoneOffset","ONE_SECOND","ONE_MINUTE","ONE_DAY","1730","componentProto","1731","encodeColor","colorAccessPath","1732","defaultSymbolType","legendSymbol","itemSymbolType","itemSymbolSize","1757","makeEventPacket","eveType","targetInfo","topTarget","gestureEvent","pinchX","pinchY","pinchScale","EmptyProxy","isHover","displayable","SILENT","Draggable","handlerNames","proxy","painterRoot","_hovered","_lastTouchMoment","mousemove","lastHovered","lastHoveredTarget","hovered","hoveredTarget","setCursor","dispatchToElement","mouseout","innerDom","element","toElement","relatedTarget","parentNode","eventArgs","eventPacket","eachOtherLayer","layer","exclude","hoverCheckResult","_downEl","_downPoint","_upEl","1758","returnFalse","createDom","newDom","newDomStyle","Layer","onselectstart","domBack","ctxBack","motionBlur","lastFrameAlpha","initContext","__currentValues","createBackBuffer","clearAll","haveMotionBLur","clearRect","clearColorGradientOrPattern","__canvasGradient","save","fillRect","restore","1759","parseInt10","isLayerValid","__builtin__","preProcessLayer","__unusedCount","postProcessLayer","isDisplayableCulled","viewRect","isClipPathChanged","prevClipPaths","doClip","createRoot","domRoot","singleCanvas","nodeName","_opts","_singleCanvas","rootStyle","zlevelList","_zlevelList","layers","_layers","_layerConfig","_width","_height","mainLayer","_domRoot","_getSize","_progressiveLayers","_hoverlayer","_hoverElements","viewportRoot","paintAll","_paintList","_startProgessive","__hoverMir","elMirror","__from","hoverElements","hoverLayer","displayableSortFunc","getLayer","originalEl","_doPaintEl","_progressiveToken","_doPaintList","_furtherProgressive","_progress","_clearProgressive","_updateLayerStatus","eachBuiltinLayer","flushProgressiveLayer","currentLayer","currentZLevel","currentProgressiveLayer","layerProgress","progressiveLayerIdx","elZLevel","elFrame","__frame","MAX_PROGRESSIVE_LAYER_NUMBER","renderScope","__progress","__maxProgress","__nextIdxNotProg","forcePaint","prevClipLayer","prevElClipPaths","insertLayer","layersMap","prevLayer","virtual","prevDom","insertBefore","firstChild","eachLayer","getLayers","progressiveLayers","elCountsLastFrame","progressiveElCountsLastFrame","lastProgressiveKey","progressiveLayerCount","frameCount","elProgress","_clearLayer","layerConfig","delLayer","removeChild","clearLayer","findAndDrawOtherLayer","smaller","larger","intermediateLayer","renderToCanvas","imageLayer","displayList","whIdx","cwh","plt","prb","shadowBlurSize","leftMargin","rightMargin","topMargin","bottomMargin","pathTransform","ImageShape","imgShape","1760","shapeCompareFunc","_roots","_displayList","_displayListLen","includeIgnore","updateDisplayList","_updateAndAddDisplayable","userSetClipPath","currentClipPath","parentClipPath","_renderList","1761","_event","_clips","_running","_time","_pausedTime","_pauseStart","clips","deferredEvents","deferredClips","_needsRemove","fire","_startLoop","1762","_life","_initialized","onrestart","easingFuncs","globalTime","deltaTime","_startTime","easingFunc","schedule","restart","arg","1763","linear","quadraticIn","quadraticOut","quadraticInOut","cubicIn","cubicOut","cubicInOut","quarticIn","quarticOut","quarticInOut","quinticIn","quinticOut","quinticInOut","sinusoidalIn","sinusoidalOut","sinusoidalInOut","exponentialIn","exponentialOut","exponentialInOut","circularIn","circularOut","circularInOut","elasticIn","elasticOut","elasticInOut","backIn","backOut","backInOut","bounceIn","bounceOut","bounceInOut","1764","_l","1765","1766","_a","_b","1767","isAroundEqual","swapExtrema","windingCubic","nRoots","y0_","y1_","nExtrema","unit","windingQuadratic","y_","x_","windingArc","containPath","isStroke","cubic","quadratic","1768","1769","_curve","1770","pointPair","GestureMgr","_track","recognize","_doTrack","_recognize","touches","trackItem","recognizers","gestureInfo","pinch","track","pinchEnd","pinchPre","pinchCenter","1771","eventNameFix","processGesture","gestureMgr","_gestureMgr","setTouchTimer","_touching","_touchTimer","isPointerFromTouch","pointerType","initDomHandler","makeMouseHandler","touchHandlerNames","_handlers","domHandlers","pointerHandlerNames","mouseHandlerNames","HandlerDomProxy","mountHandlers","pointerEventNames","pointerdown","pointerup","pointermove","pointerout","nm","touchstart","mousedown","touchmove","touchend","mouseup","click","handlerDomProxyProto","1772","paths","_updatePathDirty","1773","globalCoord","1774","1775","textHelper","1776","isLoop","constraint","prevPoint","nextPoint","cps","v2Min","v2Max","v2Clone","v2Sub","v2Scale","d0","v2Distance","v2Add","1777","interpolate","segs","w2","w3","1778","1779","unitX","unitY","1780","someVectorAt","isTangent","cpx2","cpy2","cpx1","cpy1","pointAt","tangentAt","1781","1782","1783","polyHelper","1784","1785","1786","1787","1788","animatingShape","pathSplitted","_animateToShallow","objShallow","propertyCount","1789","_dragStart","_drag","_dragEnd","draggingTarget","_draggingTarget","dropTarget","lastDropTarget","_dropTarget","1790","processArc","fa","psiDeg","xp","yp","lambda","cxp","cyp","vAngle","u","vRatio","createPathProxyFromString","cs","cc","RegExp","prevCmd","cpx","cpy","ctlPtx","ctlPty","createPathOptions","pathProxy","transformPath","pathEls","pathList","pathEl","pathBundle","vMag","1791","nPoint","mathAtan2","2035","2353","hmr","locals","2380","2381","2387"],"mappings":"AAAAA,cAAc,IAERC,KACA,SAAUC,EAAQC,EAASC,GAEjC,YACmsD,SAASC,GAAuBC,GAAK,MAAOA,IAAKA,EAAIC,WAAWD,GAAKE,QAAQF,GAAM,QAASG,GAA0BH,GAAK,GAAQ,MAALA,EAAU,KAAM,IAAII,WAAU,gCAAiC,QAASC,GAAgBC,EAASC,GAAa,KAAKD,YAAoBC,IAAc,KAAM,IAAIH,WAAU,qCAAuC,QAASI,GAA2BC,EAAKC,GAAM,IAAID,EAAM,KAAM,IAAIE,gBAAe,4DAA8D,QAAOD,GAAqB,iBAAPA,IAA+B,mBAAPA,GAAwBD,EAALC,EAAW,QAASE,GAAUC,EAASC,GAAY,GAAuB,mBAAbA,IAAsC,OAAbA,EAAmB,KAAM,IAAIV,WAAU,iEAAkEU,GAAaD,GAASE,UAAUC,OAAOC,OAAOH,GAAYA,EAAWC,WAAWG,aAAaC,MAAMN,EAASO,YAAW,EAAMC,UAAS,EAAKC,cAAa,KAAWR,IAAWE,OAAOO,eAAeP,OAAOO,eAAeV,EAASC,GAAYD,EAASW,UAAUV,GAAlqFE,OAAOS,eAAe5B,EAAQ,cAAcsB,OAAM,GAAO,IAAIO,GAAM5B,EAAoB,KAAS6B,EAAO5B,EAAuB2B,GAAWE,EAAK9B,EAAoB,IAAQ+B,EAAM9B,EAAuB6B,GAAUE,EAAKhC,EAAoB,IAAQiC,EAAMhC,EAAuB+B,GAAUE,EAAQlC,EAAoB,IAAQmC,EAASlC,EAAuBiC,GAAaE,EAAMpC,EAAoB,IAAQqC,EAAOpC,EAAuBmC,GAAWE,EAAa,WAAW,QAASC,GAAiBC,EAAOC,GAAO,IAAI,GAAIC,GAAE,EAAEA,EAAED,EAAME,OAAOD,IAAI,CAAC,GAAIE,GAAWH,EAAMC,EAAGE,GAAWtB,WAAWsB,EAAWtB,aAAY,EAAMsB,EAAWpB,cAAa,EAAQ,SAAUoB,KAAWA,EAAWrB,UAAS,GAAKL,OAAOS,eAAea,EAAOI,EAAWC,IAAID,IAAc,MAAO,UAASnC,EAAYqC,EAAWC,GAAuI,MAAvHD,IAAWP,EAAiB9B,EAAYQ,UAAU6B,GAAeC,GAAYR,EAAiB9B,EAAYsC,GAAoBtC,KAAkBT,GAAoB,KAAKA,EAAoB,IAAIA,EAAoB,IAAIA,EAAoB,IAAIA,EAAoB,GCNpiC,IAAAgD,GAAAhD,EAAA,GDM8kCiD,EAAQhD,EAAuB+C,GCH7mCE,GADAlD,EAAA,IACAA,EAAA,MDG6sCC,GAAuBiD,ECFpuClD,GAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,KACA,IAAAmD,GAAAnD,EAAA,MDF63CoD,EAAMnD,EAAuBkD,GCG15CE,EAAArD,EAAA,MDHw8CsD,EAAOrD,EAAuBoD,GCIt+CE,EAAAvD,EAAA,MDJohDwD,EAAMvD,EAAuBsD,GCKjjDE,EAAAzD,EAAA,GDL8nDC,GAAuBwD,ECMrpDzD,GAAA,KACA,IAGM0D,IAHUrB,EAAAjC,QAAKuD,QACNxB,EAAA/B,QAAOwD,ODRsvF,SAASC,GCWnxF,QAAAH,GAAYjB,GAAOlC,EAAAuD,KAAAJ,EAAA,IAAAK,GAAArD,EAAAoD,MAAAJ,EAAAhC,WAAAR,OAAA8C,eAAAN,IAAA9C,KAAAkD,KACXrB,GADW,OAEjBsB,GAAKE,OACHC,QACAC,QACAC,SACAC,YACAC,eAEFP,EAAKQ,SAAWR,EAAKQ,SAASC,KAAdT,GATCA,EDXu9O,MAArsJjD,GAAU4C,EAAoBG,GAAuWvB,EAAaoB,IAAsBb,IAAI,WAAWxB,MAAM,SCsBztGwB,GACP4B,QAAQC,IAAI7B,MDvBgwGA,IAAI,oBAAoBxB,MAAM,eAAgDwB,IAAI,SAASxB,MAAM,WC8Bt2GhB,EACIyD,KAAKG,MAKhB,OACEhB,GAAA7C,QAAAuE,cAAA,WACE1B,EAAA7C,QAAAuE,cAAA9C,EAAAzB,SAAMwE,WAAA,EAAUC,MAAM,2BAAOC,KAAK,QAChC7B,EAAA7C,QAAAuE,cAAA5C,EAAA3B,SAAK2E,OAAQC,aAAa,QACtB/B,EAAA7C,QAAAuE,cAAA,OAAKI,OAAQE,WAAW,qBAAqBC,QAAQ,OAAOC,UAAU,aAAaC,UAAU,6BACzFnC,EAAA7C,QAAAuE,cAAA,QAAMI,OAAQM,QAAQ,aAAaC,MAAM,QAAQC,OAAO,QAAQC,cAAc,WACzEvC,EAAA7C,QAAAuE,cAAA,OAAKc,IAAArC,EAAAhD,WAEV6C,EAAA7C,QAAAuE,cAAA,QAAMI,OAAQM,QAAQ,aAAaC,MAAM,OAAOI,YAAY,OAAOF,cAAc,WAC3EvC,EAAA7C,QAAAuE,cAAA5C,EAAA3B,QAAA,KACE6C,EAAA7C,QAAAuE,cAAA1C,EAAA7B,QAAA,KACE6C,EAAA7C,QAAAuE,cAAA,OAAKI,OAAQY,SAAS,OAAOC,WAAW,QAAxC,oCAGJ3C,EAAA7C,QAAAuE,cAAA5C,EAAA3B,SAAK2E,OAAQc,UAAU,SACrB5C,EAAA7C,QAAAuE,cAAA1C,EAAA7B,QAAA,KACE6C,EAAA7C,QAAAuE,cAAA,OAAKmB,UAAW,gBACd7C,EAAA7C,QAAAuE,cAAA,OAAKmB,UAAW,SACb7C,EAAA7C,QAAAuE,cAAA,UACC1B,EAAA7C,QAAAuE,cAAA,wDACA1B,EAAA7C,QAAAuE,cAAA,oEACA1B,EAAA7C,QAAAuE,cAAA,gEASxB1B,EAAA7C,QAAAuE,cAAA5C,EAAA3B,SAAK2E,OAAQC,aAAa,QACxB/B,EAAA7C,QAAAuE,cAAA,OAAKI,OAAQE,WAAW,qBAAqBC,QAAQ,OAAOC,UAAU,aAAaC,UAAU,6BACvFnC,EAAA7C,QAAAuE,cAAA,QAAMI,OAAQM,QAAQ,aAAaC,MAAM,QAAQC,OAAO,QAAQC,cAAc,WACzEvC,EAAA7C,QAAAuE,cAAA,OAAKc,IAAAnC,EAAAlD,WAEV6C,EAAA7C,QAAAuE,cAAA,QAAMI,OAAQM,QAAQ,aAAaC,MAAM,OAAOI,YAAY,OAAOF,cAAc,WACvEvC,EAAA7C,QAAAuE,cAAA5C,EAAA3B,QAAA,KACE6C,EAAA7C,QAAAuE,cAAA1C,EAAA7B,QAAA,KACE6C,EAAA7C,QAAAuE,cAAA,OAAKI,OAAQY,SAAS,OAAOC,WAAW,QAAxC,oCAGJ3C,EAAA7C,QAAAuE,cAAA5C,EAAA3B,SAAK2E,OAAQc,UAAU,SACrB5C,EAAA7C,QAAAuE,cAAA1C,EAAA7B,QAAA,KACE6C,EAAA7C,QAAAuE,cAAA,OAAKmB,UAAW,gBACd7C,EAAA7C,QAAAuE,cAAA,OAAKmB,UAAW,SACb7C,EAAA7C,QAAAuE,cAAA,UACC1B,EAAA7C,QAAAuE,cAAA,wDACA1B,EAAA7C,QAAAuE,cAAA,oEACA1B,EAAA7C,QAAAuE,cAAA,gEAS5B1B,EAAA7C,QAAAuE,cAAA5C,EAAA3B,QAAA,KACE6C,EAAA7C,QAAAuE,cAAA,OAAKI,OAAQE,WAAW,qBAAqBC,QAAQ,OAAOC,UAAU,aAAaC,UAAU,6BACvFnC,EAAA7C,QAAAuE,cAAA,QAAMI,OAAQM,QAAQ,aAAaC,MAAM,QAAQC,OAAO,QAAQC,cAAc,WACzEvC,EAAA7C,QAAAuE,cAAA,OAAKc,IAAAjC,EAAApD,WAEX6C,EAAA7C,QAAAuE,cAAA,QAAMI,OAAQM,QAAQ,aAAaC,MAAM,OAAOI,YAAY,OAAOF,cAAc,WACtEvC,EAAA7C,QAAAuE,cAAA5C,EAAA3B,QAAA,KACE6C,EAAA7C,QAAAuE,cAAA1C,EAAA7B,QAAA,KACE6C,EAAA7C,QAAAuE,cAAA,OAAKI,OAAQY,SAAS,OAAOC,WAAW,QAAxC,oCAGJ3C,EAAA7C,QAAAuE,cAAA5C,EAAA3B,SAAK2E,OAAQc,UAAU,SACrB5C,EAAA7C,QAAAuE,cAAA1C,EAAA7B,QAAA,KACE6C,EAAA7C,QAAAuE,cAAA,OAAKmB,UAAW,gBACd7C,EAAA7C,QAAAuE,cAAA,OAAKmB,UAAW,SACb7C,EAAA7C,QAAAuE,cAAA,UACC1B,EAAA7C,QAAAuE,cAAA,wDACA1B,EAAA7C,QAAAuE,cAAA,oEACA1B,EAAA7C,QAAAuE,cAAA,gEAS5B1B,EAAA7C,QAAAuE,cAAA5C,EAAA3B,QAAA,YDxHy+OsD,GCUj9OT,EAAA7C,QAAM2F,WDV4/OhG,GAAQK,QC+H7hPsD,ED/HyjP5D,EAAOC,QAAQA,EAAiB,SAIlmPiG,KACA,SAAUlG,EAAQC,GEyBxB,QAAAkG,GAAAC,EAAAC,GACAC,EAAAF,GAAAC,EAoBA,QAAAE,GAAAC,GACA,SAAAA,GAAA,gBAAAA,GACA,MAAAA,EAGA,IAAAC,GAAAD,EACAE,EAAAC,EAAA7F,KAAA0F,EAEA,uBAAAE,EAAA,CACAD,IAEA,QAAA7D,GAAA,EAAAgE,EAAAJ,EAAA3D,OAAwCD,EAAAgE,EAAShE,IACjD6D,EAAA7D,GAAA2D,EAAAC,EAAA5D,QAEG,IAAAiE,EAAAH,GAAA,CACH,GAAAI,GAAAN,EAAAlF,WAEA,IAAAkF,EAAAlF,YAAAyF,KACAN,EAAAK,EAAAC,KAAAP,OACK,CACLC,EAAA,GAAAK,GAAAN,EAAA3D,OAEA,QAAAD,GAAA,EAAAgE,EAAAJ,EAAA3D,OAA0CD,EAAAgE,EAAShE,IACnD6D,EAAA7D,GAAA2D,EAAAC,EAAA5D,SAGG,KAAAoE,EAAAN,KAAAO,EAAAT,KAAAU,EAAAV,GAAA,CACHC,IAEA,QAAA1D,KAAAyD,GACAA,EAAAW,eAAApE,KACA0D,EAAA1D,GAAAwD,EAAAC,EAAAzD,KAKA,MAAA0D,GAUA,QAAAW,GAAA1E,EAAA8D,EAAAa,GAGA,IAAAC,EAAAd,KAAAc,EAAA5E,GACA,MAAA2E,GAAAd,EAAAC,GAAA9D,CAGA,QAAAK,KAAAyD,GACA,GAAAA,EAAAW,eAAApE,GAAA,CACA,GAAAwE,GAAA7E,EAAAK,GACAyE,EAAAhB,EAAAzD,IAEAuE,EAAAE,KAAAF,EAAAC,IAAAE,EAAAD,IAAAC,EAAAF,IAAAL,EAAAM,IAAAN,EAAAK,IAAAG,EAAAF,IAAAE,EAAAH,IAAAN,EAAAO,IAAAP,EAAAM,IAGOF,GAAAtE,IAAAL,KAGPA,EAAAK,GAAAwD,EAAAC,EAAAzD,IAAA,IAJAqE,EAAAG,EAAAC,EAAAH,GASA,MAAA3E,GASA,QAAAiF,GAAAC,EAAAP,GAGA,OAFAZ,GAAAmB,EAAA,GAEAhF,EAAA,EAAAgE,EAAAgB,EAAA/E,OAAgDD,EAAAgE,EAAShE,IACzD6D,EAAAW,EAAAX,EAAAmB,EAAAhF,GAAAyE,EAGA,OAAAZ,GASA,QAAAoB,GAAAnF,EAAA8D,GACA,OAAAzD,KAAAyD,GACAA,EAAAW,eAAApE,KACAL,EAAAK,GAAAyD,EAAAzD,GAIA,OAAAL,GAUA,QAAAoF,GAAApF,EAAA8D,EAAAuB,GACA,OAAAhF,KAAAyD,GACAA,EAAAW,eAAApE,KAAAgF,EAAA,MAAAvB,EAAAzD,GAAA,MAAAL,EAAAK,MACAL,EAAAK,GAAAyD,EAAAzD,GAIA,OAAAL,GAcA,QAAAsF,KAOA,MANAC,KAGAA,EAAAC,IAAAF,WAAA,OAGAC,EAQA,QAAAE,GAAAC,EAAA7G,GACA,GAAA6G,EAAA,CACA,GAAAA,EAAAD,QACA,MAAAC,GAAAD,QAAA5G,EAGA,QAAAqB,GAAA,EAAAgE,EAAAwB,EAAAvF,OAAuCD,EAAAgE,EAAShE,IAChD,GAAAwF,EAAAxF,KAAArB,EACA,MAAAqB,GAKA,SAWA,QAAAyF,GAAAC,EAAAC,GAGA,QAAAC,MAFA,GAAAC,GAAAH,EAAAnH,SAIAqH,GAAArH,UAAAoH,EAAApH,UACAmH,EAAAnH,UAAA,GAAAqH,EAEA,QAAAE,KAAAD,GACAH,EAAAnH,UAAAuH,GAAAD,EAAAC,EAGAJ,GAAAnH,UAAAG,YAAAgH,EACAA,EAAApH,WAAAqH,EAUA,QAAAI,GAAAjG,EAAA8D,EAAAuB,GACArF,EAAA,aAAAA,KAAAvB,UAAAuB,EACA8D,EAAA,aAAAA,KAAArF,UAAAqF,EACAsB,EAAApF,EAAA8D,EAAAuB,GAQA,QAAAa,GAAAC,GACA,GAAAA,EAIA,sBAAAA,IAIA,gBAAAA,GAAAhG,OAWA,QAAAiG,GAAA1I,EAAA2I,EAAAC,GACA,GAAA5I,GAAA2I,EAIA,GAAA3I,EAAA6I,SAAA7I,EAAA6I,UAAAC,EACA9I,EAAA6I,QAAAF,EAAAC,OACG,IAAA5I,EAAAyC,UAAAzC,EAAAyC,OACH,OAAAD,GAAA,EAAAgE,EAAAxG,EAAAyC,OAAqCD,EAAAgE,EAAShE,IAC9CmG,EAAAjI,KAAAkI,EAAA5I,EAAAwC,KAAAxC,OAGA,QAAA2C,KAAA3C,GACAA,EAAA+G,eAAApE,IACAgG,EAAAjI,KAAAkI,EAAA5I,EAAA2C,KAAA3C,GAeA,QAAA+I,GAAA/I,EAAA2I,EAAAC,GACA,GAAA5I,GAAA2I,EAAA,CAIA,GAAA3I,EAAA+I,KAAA/I,EAAA+I,MAAAC,EACA,MAAAhJ,GAAA+I,IAAAJ,EAAAC,EAIA,QAFAvC,MAEA7D,EAAA,EAAAgE,EAAAxG,EAAAyC,OAAqCD,EAAAgE,EAAShE,IAC9C6D,EAAA4C,KAAAN,EAAAjI,KAAAkI,EAAA5I,EAAAwC,KAAAxC,GAGA,OAAAqG,IAaA,QAAA6C,GAAAlJ,EAAA2I,EAAAQ,EAAAP,GACA,GAAA5I,GAAA2I,EAAA,CAIA,GAAA3I,EAAAkJ,QAAAlJ,EAAAkJ,SAAAE,EACA,MAAApJ,GAAAkJ,OAAAP,EAAAQ,EAAAP,EAEA,QAAApG,GAAA,EAAAgE,EAAAxG,EAAAyC,OAAqCD,EAAAgE,EAAShE,IAC9C2G,EAAAR,EAAAjI,KAAAkI,EAAAO,EAAAnJ,EAAAwC,KAAAxC,EAGA,OAAAmJ,IAaA,QAAAE,GAAArJ,EAAA2I,EAAAC,GACA,GAAA5I,GAAA2I,EAAA,CAIA,GAAA3I,EAAAqJ,QAAArJ,EAAAqJ,SAAAC,EACA,MAAAtJ,GAAAqJ,OAAAV,EAAAC,EAIA,QAFAvC,MAEA7D,EAAA,EAAAgE,EAAAxG,EAAAyC,OAAqCD,EAAAgE,EAAShE,IAC9CmG,EAAAjI,KAAAkI,EAAA5I,EAAAwC,KAAAxC,IACAqG,EAAA4C,KAAAjJ,EAAAwC,GAIA,OAAA6D,IAaA,QAAAkD,GAAAvJ,EAAA2I,EAAAC,GACA,GAAA5I,GAAA2I,EAIA,OAAAnG,GAAA,EAAAgE,EAAAxG,EAAAyC,OAAmCD,EAAAgE,EAAShE,IAC5C,GAAAmG,EAAAjI,KAAAkI,EAAA5I,EAAAwC,KAAAxC,GACA,MAAAA,GAAAwC,GAYA,QAAA8B,GAAAkF,EAAAZ,GACA,GAAAa,GAAAC,EAAAhJ,KAAAiJ,UAAA,EACA,mBACA,MAAAH,GAAAI,MAAAhB,EAAAa,EAAAI,OAAAH,EAAAhJ,KAAAiJ,cAUA,QAAAG,GAAAN,GACA,GAAAC,GAAAC,EAAAhJ,KAAAiJ,UAAA,EACA,mBACA,MAAAH,GAAAI,MAAAhG,KAAA6F,EAAAI,OAAAH,EAAAhJ,KAAAiJ,cAUA,QAAAtC,GAAAlG,GACA,yBAAAoF,EAAA7F,KAAAS,GASA,QAAA4I,GAAA5I,GACA,yBAAAA,GASA,QAAA6I,GAAA7I,GACA,0BAAAoF,EAAA7F,KAAAS,GASA,QAAA+F,GAAA/F,GAGA,GAAAyD,SAAAzD,EACA,oBAAAyD,KAAAzD,GAAA,UAAAyD,EASA,QAAA0C,GAAAnG,GACA,QAAAyF,EAAAL,EAAA7F,KAAAS,IASA,QAAA2F,GAAA3F,GACA,uBAAAA,IAAA,iBAAAA,GAAA8I,UAAA,iBAAA9I,GAAA+I,cASA,QAAAC,GAAAhJ,GACA,MAAAA,OAUA,QAAAiJ,GAAAC,GACA,OAAA7H,GAAA,EAAAgE,EAAAmD,UAAAlH,OAAyCD,EAAAgE,EAAShE,IAClD,SAAAmH,UAAAnH,GACA,MAAAmH,WAAAnH,GAKA,QAAA8H,GAAAC,EAAAC,GACA,aAAAD,IAAAC,EAGA,QAAAC,GAAAF,EAAAC,EAAAE,GACA,aAAAH,IAAA,MAAAC,IAAAE,EAWA,QAAAC,KACA,MAAAC,UAAAlK,KAAAkJ,MAAAF,EAAAC,WAaA,QAAAkB,GAAAC,GACA,oBAAAA,GACA,OAAAA,QAGA,IAAAtE,GAAAsE,EAAArI,MAEA,YAAA+D,GAEAsE,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IACG,IAAAtE,GAEHsE,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAGAA,EASA,QAAAC,GAAAC,EAAAC,GACA,IAAAD,EACA,SAAAE,OAAAD,GASA,QAAAE,GAAAnL,GACAA,EAAAoL,IAAA,EAGA,QAAAvE,GAAA7G,GACA,MAAAA,GAAAoL,GAQA,QAAAC,GAAArL,GACAA,GAAA0I,EAAA1I,EAAA,SAAAmB,EAAAwB,GACAiB,KAAA0H,IAAA3I,EAAAxB,IACGyC,MAmCH,QAAA2H,GAAAvL,GACA,UAAAqL,GAAArL,GAGA,QAAAwL,MA3nBA,GAAA5E,IACA6E,oBAAA,EACAC,kBAAA,EACAC,gBAAA,EACAC,iBAAA,EACAC,0BAAA,EACAC,yBAAA,EAEAC,iBAAA,EACAC,kBAAA,GAEAvF,GACAwF,qBAAA,EACAC,sBAAA,EACAC,6BAAA,EACAC,sBAAA,EACAC,uBAAA,EACAC,sBAAA,EACAC,uBAAA,EACAC,wBAAA,EACAC,wBAAA,GAEAlG,EAAAvF,OAAAD,UAAA2L,SACAC,EAAAC,MAAA7L,UACA+H,EAAA6D,EAAA9D,QACAS,EAAAqD,EAAAtD,OACAK,EAAAiD,EAAAhC,MACA3B,EAAA2D,EAAA5D,IACAK,EAAAuD,EAAAzD,OAEAhD,KAgJA4B,EAAA,WACA,MAAA5B,GAAA4B,eAGA5B,GAAA4B,aAAA,WACA,MAAA+E,UAAApI,cAAA,UAIA,IAAAoD,GAwYAuD,EAAA,kBA2BAC,GAAAtK,WACAG,YAAAmK,EAIAyB,IAAA,SAAAnK,GACA,MAAAiB,MARA,OAQAjB,IAEA2I,IAAA,SAAA3I,EAAAxB,GAIA,MAHAyC,MAXA,OAWAjB,GAAAxB,EAGAA,GAIAuH,KAAA,SAAAC,EAAAC,OACA,KAAAA,IAAAD,EAAArE,EAAAqE,EAAAC,GAEA,QAAAmE,KAAAnJ,MACAA,KAAAmD,eAAAgG,IAAApE,EAAA/E,KAAAmJ,KAAApC,MArBA,KAyBAqC,UAAA,SAAArK,SACAiB,MA3BA,OA2BAjB,KAUA9C,EAAAkG,YACAlG,EAAAsG,QACAtG,EAAAmH,QACAnH,EAAA0H,WACA1H,EAAA4H,SACA5H,EAAA6H,WACA7H,EAAAiI,eACAjI,EAAA+H,aACA/H,EAAAkI,UACAlI,EAAAoI,WACApI,EAAA0I,QACA1I,EAAA2I,cACA3I,EAAA6I,OACA7I,EAAAkJ,MACAlJ,EAAAqJ,SACArJ,EAAAwJ,SACAxJ,EAAA0J,OACA1J,EAAAyE,OACAzE,EAAAiK,QACAjK,EAAAwH,UACAxH,EAAAkK,aACAlK,EAAAmK,WACAnK,EAAAqH,WACArH,EAAAyH,kBACAzH,EAAAiH,QACAjH,EAAAsK,QACAtK,EAAAuK,WACAvK,EAAAyK,YACAzK,EAAA4K,YACA5K,EAAA8K,QACA9K,EAAAgL,oBACAhL,EAAAkL,SACAlL,EAAAsL,iBACAtL,EAAAgH,cACAhH,EAAA0L,gBACA1L,EAAA2L,QFiBMyB,KACA,SAAUrN,EAAQC,EAASC,GGjmBjC,QAAAoN,GAAAC,GACA,MAAAC,GAAA3F,OAAA0F,GAOA,QAAAE,GAAAC,EAAAH,GACA,MAAAI,GAAAC,iBAAAF,EAAAH,GAWA,QAAAM,GAAAH,EAAAH,EAAAO,EAAAC,GACA,GAAAC,GAAAL,EAAAM,iBAAAP,EAAAH,GACAW,EAAAF,EAAAG,iBAUA,OARAL,KACA,WAAAC,IACAD,EAAAM,EAAAN,EAAAI,IAGAG,EAAAL,EAAAF,IAGAE,EAWA,QAAAM,GAAAC,EAAAT,EAAAC,GACA,GAAAC,GAAA,GAAAQ,IACAvJ,OACAwJ,MAAAF,EACAG,EAAAZ,EAAAY,EACAC,EAAAb,EAAAa,EACAnJ,MAAAsI,EAAAtI,MACAC,OAAAqI,EAAArI,QAEAmJ,OAAA,SAAAC,GACA,cAAAd,EAAA,CACA,GAAAG,IACA1I,MAAAqJ,EAAArJ,MACAC,OAAAoJ,EAAApJ,OAEAuI,GAAAc,SAAAV,EAAAN,EAAAI,OAIA,OAAAF,GAWA,QAAAI,GAAAN,EAAAI,GAEA,GAEAzI,GAFAsJ,EAAAb,EAAA1I,MAAA0I,EAAAzI,OACAD,EAAAsI,EAAArI,OAAAsJ,CAYA,OATAvJ,IAAAsI,EAAAtI,MACAC,EAAAqI,EAAArI,QAEAD,EAAAsI,EAAAtI,MACAC,EAAAD,EAAAuJ,IAMAL,EAHAZ,EAAAY,EAAAZ,EAAAtI,MAAA,EAGAA,EAAA,EACAmJ,EAHAb,EAAAa,EAAAb,EAAArI,OAAA,EAGAA,EAAA,EACAD,QACAC,UAWA,QAAA4I,GAAAL,EAAAF,GACA,GAAAE,EAAAgB,eAAA,CAIA,GAAAC,GAAAjB,EAAAG,kBACAe,EAAAD,EAAAE,mBAAArB,EACAE,GAAAgB,eAAAE,IAiBA,QAAAE,GAAAC,GACA,GAAAC,GAAAD,EAAAC,MACAC,EAAAF,EAAApK,MAAAsK,SAUA,OARAC,IAAA,EAAAF,EAAAG,MAAAD,GAAA,EAAAF,EAAAI,MACAJ,EAAAG,GAAAH,EAAAI,GAAAC,EAAAL,EAAAG,GAAAF,GAAA,IAGAC,GAAA,EAAAF,EAAAM,MAAAJ,GAAA,EAAAF,EAAAO,MACAP,EAAAM,GAAAN,EAAAO,GAAAF,EAAAL,EAAAM,GAAAL,GAAA,IAGAF,EAiBA,QAAAS,GAAAT,GACA,GAAAC,GAAAD,EAAAC,MACAC,EAAAF,EAAApK,MAAAsK,UACAQ,EAAAT,EAAAZ,EACAsB,EAAAV,EAAAX,EACAsB,EAAAX,EAAA9J,MACA0K,EAAAZ,EAAA7J,MAKA,OAJA6J,GAAAZ,EAAAiB,EAAAL,EAAAZ,EAAAa,GAAA,GACAD,EAAAX,EAAAgB,EAAAL,EAAAX,EAAAY,GAAA,GACAD,EAAA9J,MAAA2K,KAAAC,IAAAT,EAAAI,EAAAE,EAAAV,GAAA,GAAAD,EAAAZ,EAAA,IAAAuB,EAAA,KACAX,EAAA7J,OAAA0K,KAAAC,IAAAT,EAAAK,EAAAE,EAAAX,GAAA,GAAAD,EAAAX,EAAA,IAAAuB,EAAA,KACAb,EAYA,QAAAM,GAAAU,EAAAd,EAAAe,GAGA,GAAAC,GAAAf,GAAA,EAAAa,EACA,QAAAE,EAAAf,GAAAD,IAAA,MAAAgB,EAAA,GAAAA,GAAAD,EAAA,SAGA,QAAAE,GAAAC,GACA,aAAAA,GAAA,QAAAA,EAGA,QAAAC,GAAAC,GACA,uBAAAA,GAAAC,EAAAC,KAAAF,GAAA,IAAAA,EAOA,QAAAG,GAAAC,GACA,GAAAA,EAAAC,gBAAA,CACA,GAAAC,GAAAF,EAAA9L,MAAAgM,OACAC,EAAAH,EAAA9L,MAAAiM,KAEAC,EAAAJ,EAAAK,UACAD,GAAAD,KAAAC,EAAAD,OAAAV,EAAAU,GAAAR,EAAAQ,GAAA,MACAC,EAAAF,OAAAE,EAAAF,SAAAT,EAAAS,GAAAP,EAAAO,GAAA,KACA,IAAAI,KAEA,QAAAjL,KAAA+K,GAEA,MAAAA,EAAA/K,KACAiL,EAAAjL,GAAA2K,EAAA9L,MAAAmB,GAIA2K,GAAAO,YAAAD,EACAN,EAAAC,iBAAA,GAQA,QAAAO,GAAAR,GACA,IAAAA,EAAAS,UAAA,CAMA,GAFAV,EAAAC,GAEAA,EAAAU,cACAV,EAAAW,MAAAX,EAAAW,KAAAC,SAAAZ,IAAAK,gBACG,CACH,GAAAnM,GAAA8L,EAAA9L,MACA2M,EAAA3M,EAAA2M,iBAIAA,IAAAC,EAAA5M,GAoBAA,EAAA6M,WAAAf,EAAAK,YAEAQ,IACAG,EAAA9M,IAAA+M,2BAAAJ,GAEA,MAAA3M,EAAAgN,WACAhN,EAAAgN,SAAAL,EAAAM,YAIAnB,EAAAoB,OAAA,GACApB,EAAAqB,IAAA,EAGArB,EAAAS,WAAA,GAOA,QAAAa,GAAAtB,GACA,GAAAA,EAAAS,UAAA,CAIA,GAAAc,GAAAvB,EAAAO,WAEAP,GAAAU,cACAV,EAAAW,MAAAX,EAAAW,KAAAa,YAAAxB,IAIAuB,GAAAvB,EAAAjC,SAAAwD,GACAvB,EAAAqB,IAAA,GAGArB,EAAAS,WAAA,GAOA,QAAAgB,GAAAzB,GACA,UAAAA,EAAA/L,KAAA+L,EAAA0B,SAAA,SAAAC,GACA,UAAAA,EAAA1N,MACAuM,EAAAmB,KAEGnB,EAAAR,GAGH,QAAA4B,GAAA5B,GACA,UAAAA,EAAA/L,KAAA+L,EAAA0B,SAAA,SAAAC,GACA,UAAAA,EAAA1N,MACAqN,EAAAK,KAEGL,EAAAtB,GAOH,QAAA6B,GAAA7B,EAAA8B,GAGA9B,EAAAK,WAAAL,EAAAI,YAAA0B,MACA9B,EAAAC,iBAAA,EAEAD,EAAAS,WACAV,EAAAC,GAQA,QAAA+B,GAAAC,GACA/O,KAAAgP,sBAAAD,EAAAE,YAKAjP,KAAAkP,cAAAV,EAAAxO,MAOA,QAAAmP,GAAAJ,GACA/O,KAAAgP,sBAAAD,EAAAE,YAKAjP,KAAAkP,cAAAP,EAAA3O,MAOA,QAAAoP,KACApP,KAAAkP,cAAA,EACAV,EAAAxO,MAOA,QAAAqP,KACArP,KAAAkP,cAAA,EACAP,EAAA3O,MAqBA,QAAAsP,GAAAvC,EAAAI,EAAAoC,GACAxC,EAAAiC,qBAAAO,KAAAC,mBACA,UAAAzC,EAAA/L,KAAA+L,EAAA0B,SAAA,SAAAC,GACA,UAAAA,EAAA1N,MACA4N,EAAAF,EAAAvB,KAEGyB,EAAA7B,EAAAI,GAEHJ,EAAA0C,GAAA,YAAAX,GAAAW,GAAA,WAAAN,GAEApC,EAAA0C,GAAA,WAAAL,GAAAK,GAAA,SAAAJ,GAoBA,QAAAK,GAAArC,EAAAsC,EAAAC,EAAAC,EAAAN,EAAAO,EAAAC,GACAR,KAAAS,EACA,IAAAC,GAAAV,EAAAU,aACAC,EAAAX,EAAAW,eACAC,EAAAZ,EAAAY,cAGAC,EAAAR,EAAAS,WAAA,QACAC,EAAAT,EAAAQ,WAAA,QAIAE,EAAAH,GAAAE,EAAAE,EAAA9J,UAAAuJ,IAAAQ,kBAAAP,EAAA,cAAAC,GAAA,KAAAZ,EAAAmB,aAAA,KACAC,EAAAP,EAAAG,EAAA,KACAK,EAAAN,EAAAE,EAAA9J,UAAAuJ,IAAAQ,kBAAAP,EAAA,gBAAAC,GAAA,KAAAI,GAAA,IAEA,OAAAI,GAAA,MAAAC,IAOAC,EAAAxD,EAAAuC,EAAAE,EAAAP,GACAsB,EAAAlB,EAAAE,EAAAE,EAAAR,GAAA,IAGAlC,EAAAyD,KAAAH,EACAhB,EAAAmB,KAAAF,EAYA,QAAAC,GAAAE,EAAAC,EAAAC,EAAA1B,EAAA2B,GAIA,MAHAC,GAAAJ,EAAAC,EAAAzB,EAAA2B,GACAD,GAAAT,EAAA3M,OAAAkN,EAAAE,GACAF,EAAAK,MAAAL,EAAAK,KAAAjD,OAAA4C,EAAAK,KAAAjD,OAAA,GACA4C,EAYA,QAAAM,GAAAN,EAAAO,EAAAC,GACA,GAGAL,GAHA3B,GACAiC,YAAA,IAIA,IAAAD,EACAL,GAAA,EAGA3B,EAAArB,UAAAqD,EAGAJ,EAAAJ,EAAAO,EAAA/B,EAAA2B,GACAH,EAAAK,MAAAL,EAAAK,KAAAjD,OAAA4C,EAAAK,KAAAjD,OAAA,GAoBA,QAAAgD,GAAAJ,EAAAC,EAAAzB,EAAA2B,GAIA,GAFA3B,KAAAS,GAEAT,EAAAiC,WAAA,CACA,GAAAC,GAAAT,EAAAX,WAAA,cAAAa,EAAA,cAGA,aAAAO,MAAA,OACAV,EAAAU,eACAV,EAAAW,WAAAV,EAAAX,WAAA,SACA,IAAAsB,GAAAX,EAAAX,WAAA,SACA,OAAAsB,OAAAxF,KAAAyF,GAAA,KACAb,EAAAc,aAAAF,EACAZ,EAAAe,aAAAtB,EAAA9J,UAAAsK,EAAAX,WAAA,YAAAa,EAAA,QAGA,GAmBAa,GAnBAC,EAAAhB,EAAAgB,QACAC,EAAAD,KAAAE,OAAAnB,UAiBAoB,EAAAC,EAAApB,EAGA,IAAAmB,EAAA,CACAJ,IAEA,QAAA3P,KAAA+P,GACA,GAAAA,EAAAhP,eAAAf,GAAA,CAEA,GAAAiQ,GAAArB,EAAAsB,UAAA,OAAAlQ,GAEAmQ,GAAAR,EAAA3P,MAA+CiQ,EAAAJ,EAAA1C,EAAA2B,IAY/C,MAPAH,GAAAyB,KAAAT,EACAQ,EAAAxB,EAAAC,EAAAiB,EAAA1C,EAAA2B,GAAA,GAEA3B,EAAAkD,YAAAlD,EAAAwB,YACAxB,EAAAwB,cAGAA,EAmBA,QAAAqB,GAAApB,GAIA,IAFA,GAAA0B,GAEA1B,SAAAgB,SAAA,CACA,GAAAQ,IAAAxB,EAAAkB,QAAAlC,IAAAwC,IAEA,IAAAA,EAAA,CACAE,OAEA,QAAAtQ,KAAAoQ,GACAA,EAAArP,eAAAf,KACAsQ,EAAAtQ,GAAA,GAKA4O,IAAA2B,YAGA,MAAAD,GAGA,QAAAH,GAAAxB,EAAAC,EAAAiB,EAAA1C,EAAA2B,EAAA0B,GAOA,GALAX,GAAAf,GAAAe,GAAAjC,GACAe,EAAA9C,SAAA4E,EAAA7B,EAAAX,WAAA,SAAAd,IAAA0C,EAAAtF,MACAoE,EAAA+B,WAAAD,EAAA7B,EAAAX,WAAA,mBAAAd,IAAA0C,EAAAc,gBACAhC,EAAAiC,gBAAAxC,EAAA9J,UAAAsK,EAAAX,WAAA,mBAAA4B,EAAAgB,kBAEA/B,EAAA,CACA,GAAA0B,EAAA,CAEA,GAAAM,GAAAnC,EAAAU,YACAV,GAAAoC,eAAApF,EAAAgD,EAAAmC,EAAA3D,GAGAwB,EAAA/C,2BAAAkF,EACAnC,EAAAnD,kBAAA2B,EAIA,MAAAwB,EAAA9C,WACA8C,EAAA9C,SAAAsB,EAAArB,WAOA6C,EAAAqC,UAAApC,EAAAX,WAAA,cAAA4B,EAAAmB,UACArC,EAAAjP,WAAAkP,EAAAX,WAAA,eAAA4B,EAAAnQ,WACAiP,EAAAlP,SAAAmP,EAAAX,WAAA,aAAA4B,EAAApQ,SACAkP,EAAAsC,WAAArC,EAAAX,WAAA,eAAA4B,EAAAoB,WACAtC,EAAAuC,UAAAtC,EAAAX,WAAA,SACAU,EAAAwC,kBAAAvC,EAAAX,WAAA,kBAAAW,EAAAX,WAAA,YACAU,EAAAyC,eAAAxC,EAAAX,WAAA,cACAU,EAAA0C,UAAAzC,EAAAX,WAAA,SACAU,EAAA2C,WAAA1C,EAAAX,WAAA,UACAU,EAAA4C,QAAA3C,EAAAX,WAAA,OAEAuC,GAAArD,EAAAqE,aACA7C,EAAA8C,oBAAAhB,EAAA7B,EAAAX,WAAA,mBAAAd,GACAwB,EAAA+C,YAAA9C,EAAAX,WAAA,WACAU,EAAAgC,gBAAAF,EAAA7B,EAAAX,WAAA,eAAAd,GACAwB,EAAAkC,gBAAAjC,EAAAX,WAAA,eACAU,EAAAgD,iBAAA/C,EAAAX,WAAA,gBACAU,EAAAiD,mBAAAhD,EAAAX,WAAA,eACAU,EAAAkD,kBAAAjD,EAAAX,WAAA,cACAU,EAAAmD,qBAAAlD,EAAAX,WAAA,iBACAU,EAAAoD,qBAAAnD,EAAAX,WAAA,kBAGAU,EAAAqD,gBAAApD,EAAAX,WAAA,oBAAA4B,EAAAmC,gBACArD,EAAAsD,eAAArD,EAAAX,WAAA,mBAAA4B,EAAAoC,eACAtD,EAAAuD,kBAAAtD,EAAAX,WAAA,sBAAA4B,EAAAqC,kBACAvD,EAAAwD,kBAAAvD,EAAAX,WAAA,sBAAA4B,EAAAsC,kBAGA,QAAA1B,GAAAlG,EAAA4C,GACA,eAAA5C,IAAA4C,KAAArB,UAAAqB,EAAArB,UAAA,KAGA,QAAAH,GAAAgD,EAAAU,EAAAlC,GACA,GACA4D,GADAqB,EAAAjF,EAAAiF,cAkBA,OAfA,OAAAzD,EAAA9C,WAAA,IAAAuG,KAAA,IAAAA,GAAAjF,EAAAiC,YAAAC,GACA,iBAAAA,MAAAtN,QAAA,gBACAgP,GACAlF,SAAA,KACA6E,WAAA/B,EAAA+B,WACAE,gBAAAjC,EAAAiC,iBAEAjC,EAAA9C,SAAA,OAEA,MAAA8C,EAAA+B,aACA/B,EAAA+B,WAAAvD,EAAArB,UACA,MAAA6C,EAAAiC,kBAAAjC,EAAAiC,gBAAA,KAIAG,EAGA,QAAAtF,GAAA5M,GACA,GAAAkS,GAAAlS,EAAAkS,cAEAA,KACAlS,EAAAgN,SAAAkF,EAAAlF,SACAhN,EAAA6R,WAAAK,EAAAL,WACA7R,EAAA+R,gBAAAG,EAAAH,iBAIA,QAAAyB,GAAAlF,EAAAyC,GAEA,GAAA0C,GAAA1C,KAAAM,SAAA,YACA,QACA/C,EAAA6D,WAAAsB,KAAArE,WAAA,iBAAAd,EAAAzN,YAAA4S,KAAArE,WAAA,mBAAAd,EAAA1N,UAAA6S,KAAArE,WAAA,sBAAAd,EAAA8D,YAAAqB,KAAArE,WAAA,6BAAAsE,KAAA,KAGA,QAAAC,GAAAC,EAAA9H,EAAApO,EAAAmW,EAAAC,EAAAhQ,GAWA,GAVA,mBAAAgQ,KACAhQ,EAAAgQ,EACAA,EAAA,MAMAD,KAAAE,qBAEA,CACA,GAAAC,GAAAJ,EAAA,YACAK,EAAAJ,EAAAzE,WAAA,oBAAA4E,GACAE,EAAAL,EAAAzE,WAAA,kBAAA4E,GACAG,EAAAN,EAAAzE,WAAA,iBAAA4E,EAEA,oBAAAG,KACAA,IAAAL,EAAAD,EAAAO,wBAAAP,EAAAO,wBAAAtI,EAAAgI,GAAA,OAGA,mBAAAG,KACAA,IAAAH,IAGAG,EAAA,EAAAnI,EAAAuI,UAAA3W,EAAAuW,EAAAE,GAAA,EAAAD,EAAApQ,QAAAgI,EAAAwI,gBAAAxI,EAAAyI,KAAA7W,GAAAoG,YAEAgI,GAAAwI,gBACAxI,EAAAyI,KAAA7W,GACAoG,OA2BA,QAAA0Q,GAAA1I,EAAApO,EAAAmW,EAAAC,EAAAhQ,GACA6P,GAAA,EAAA7H,EAAApO,EAAAmW,EAAAC,EAAAhQ,GAkBA,QAAA2Q,GAAA3I,EAAApO,EAAAmW,EAAAC,EAAAhQ,GACA6P,GAAA,EAAA7H,EAAApO,EAAAmW,EAAAC,EAAAhQ,GAWA,QAAA4Q,GAAAjX,EAAAkX,GAGA,IAFA,GAAAC,GAAAC,EAAAC,aAEArX,OAAAkX,GACAE,EAAAE,IAAAH,EAAAnX,EAAAuX,oBAAAJ,GACAnX,IAAAwX,MAGA,OAAAL,GAaA,QAAA7K,GAAAtM,EAAAyX,EAAAC,GASA,MARAD,KAAA3F,EAAA5L,YAAAuR,KACAA,EAAAE,EAAAJ,kBAAAE,IAGAC,IACAD,EAAAL,EAAAM,UAAAD,IAGAG,EAAAtL,kBAAAtM,EAAAyX,GAUA,QAAAI,GAAAC,EAAAL,EAAAC,GAEA,GAAAK,GAAA,IAAAN,EAAA,QAAAA,EAAA,QAAAA,EAAA,KAAAhK,KAAAuK,IAAA,EAAAP,EAAA,GAAAA,EAAA,IACAQ,EAAA,IAAAR,EAAA,QAAAA,EAAA,QAAAA,EAAA,KAAAhK,KAAAuK,IAAA,EAAAP,EAAA,GAAAA,EAAA,IACAS,GAAA,SAAAJ,GAAAC,EAAA,UAAAD,EAAAC,EAAA,UAAAD,GAAAG,EAAA,WAAAH,EAAAG,EAAA,EAEA,OADAC,GAAA5L,EAAA4L,EAAAT,EAAAC,GACAjK,KAAAuK,IAAAE,EAAA,IAAAzK,KAAAuK,IAAAE,EAAA,IAAAA,EAAA,oBAAAA,EAAA,oBAQA,QAAAC,GAAAC,EAAAC,EAAAjC,EAAA/P,GAeA,QAAAiS,GAAAjK,GACA,GAAA3Q,IACAiQ,SAAAiK,EAAA/T,MAAAwK,EAAAV,UACA4K,SAAAlK,EAAAkK,SAOA,OAJAlK,GAAAzB,QACAlP,EAAAkP,MAAAkF,EAAA3M,UAAkCkJ,EAAAzB,QAGlClP,EAxBA,GAAA0a,GAAAC,EAAA,CA2BA,GAAAG,GAvBA,SAAAC,GACA,GAAAC,KAMA,OALAD,GAAA1I,SAAA,SAAA1B,IACAA,EAAAsK,SAAAtK,EAAAuK,OACAF,EAAArK,EAAAuK,MAAAvK,KAGAqK,GAgBAN,EACAC,GAAAtI,SAAA,SAAA1B,GACA,IAAAA,EAAAsK,SAAAtK,EAAAuK,KAAA,CACA,GAAAC,GAAAL,EAAAnK,EAAAuK,KAEA,IAAAC,EAAA,CACA,GAAAC,GAAAR,EAAAjK,EACAA,GAAAyI,KAAAwB,EAAAO,IACA9B,EAAA1I,EAAAyK,EAAA1C,EAAA/H,EAAAgI,gBAiBA,QAAA0C,GAAAC,EAAA5N,GACA,MAAA0G,GAAArL,IAAAuS,EAAA,SAAAC,GACA,GAAAjN,GAAAiN,EAAA,EACAjN,GAAAkN,GAAAlN,EAAAZ,EAAAY,GACAA,EAAAmN,GAAAnN,EAAAZ,EAAAY,EAAAZ,EAAAtI,MACA,IAAAmJ,GAAAgN,EAAA,EAGA,OAFAhN,GAAAiN,GAAAjN,EAAAb,EAAAa,GACAA,EAAAkN,GAAAlN,EAAAb,EAAAa,EAAAb,EAAArI,SACAiJ,EAAAC,KAUA,QAAAmN,GAAAC,EAAAjO,GACA,GAAAY,GAAAkN,GAAAG,EAAArN,EAAAZ,EAAAY,GACAgB,EAAAmM,GAAAE,EAAArN,EAAAqN,EAAAvW,MAAAsI,EAAAY,EAAAZ,EAAAtI,OACAmJ,EAAAiN,GAAAG,EAAApN,EAAAb,EAAAa,GACAkB,EAAAgM,GAAAE,EAAApN,EAAAoN,EAAAtW,OAAAqI,EAAAa,EAAAb,EAAArI,OAEA,IAAAiK,GAAAhB,GAAAmB,GAAAlB,EACA,OACAD,IACAC,IACAnJ,MAAAkK,EAAAhB,EACAjJ,OAAAoK,EAAAlB,GAYA,QAAAqN,GAAAC,EAAA1I,EAAAzF,GACAyF,EAAAiB,EAAA3M,QACAqU,WAAA,GACG3I,EACH,IAAAtO,GAAAsO,EAAAtO,OACAkX,eAAA,EASA,IAPArO,MACAY,GAAA,EACAC,GAAA,EACAnJ,MAAA,EACAC,OAAA,GAGAwW,EACA,WAAAA,EAAA9T,QAAA,aAAAlD,EAAAwJ,MAAAwN,EAAAlR,MAAA,GAAAyJ,EAAA1M,SAAA7C,EAAA6I,GAAA,GAAAU,GAAA+E,IAAA1F,EAAAoO,EAAAG,QAAA,cAAA7I,EAAAzF,EAAA,UA1hCA,GAAA0G,GAAAtU,EAAA,MAEAyN,EAAAzN,EAAA,MAEA0Q,EAAA1Q,EAAA,MAEA4Z,EAAA5Z,EAAA,MAEAoa,EAAApa,EAAA,MAEAsN,EAAAtN,EAAA,MAEAma,EAAAna,EAAA,MAEAsO,EAAAtO,EAAA,KAEAD,GAAAuO,OAEA,IAAA6N,GAAAnc,EAAA,KAEAD,GAAAoc,OAEA,IAAAC,IAAApc,EAAA,KAEAD,GAAAqc,OAEA,IAAAC,IAAArc,EAAA,KAEAD,GAAAsc,SAEA,IAAAC,IAAAtc,EAAA,KAEAD,GAAAuc,SAEA,IAAAC,IAAAvc,EAAA,KAEAD,GAAAwc,OAEA,IAAAC,IAAAxc,EAAA,KAEAD,GAAAyc,UAEA,IAAAC,IAAAzc,EAAA,KAEAD,GAAA0c,WAEA,IAAAC,IAAA1c,EAAA,KAEAD,GAAA2c,OAEA,IAAAC,IAAA3c,EAAA,KAEAD,GAAA4c,OAEA,IAAAC,IAAA5c,EAAA,KAEAD,GAAA6c,cAEA,IAAAC,IAAA7c,EAAA,KAEAD,GAAA8c,MAEA,IAAAC,IAAA9c,EAAA,KAEAD,GAAA+c,eAEA,IAAAC,IAAA/c,EAAA,KAEAD,GAAAgd,iBAEA,IAAAC,IAAAhd,EAAA,KAEAD,GAAAid,iBAEA,IAAAC,IAAAjd,EAAA,KAEAD,GAAAkd,eACA,IAAA3N,IAAAW,KAAAX,MACAoM,GAAAzL,KAAAC,IACAyL,GAAA1L,KAAAiN,IACApJ,MAqGAqJ,GAAA1P,EAAA0P,SAy2BApd,GAAAqN,cACArN,EAAAwN,aACAxN,EAAA4N,WACA5N,EAAAqO,YACArO,EAAAod,aACApd,EAAAoO,aACApO,EAAAmP,uBACAnP,EAAA6P,uBACA7P,EAAA0P,mBACA1P,EAAAqT,gBACArT,EAAAyT,gBACAzT,EAAA4U,eACA5U,EAAAoV,UACApV,EAAAwY,UACAxY,EAAAwZ,cACAxZ,EAAAyZ,YACAzZ,EAAA0Z,eACA1Z,EAAA+O,iBACA/O,EAAAsa,qBACAta,EAAA4a,kBACA5a,EAAAwb,mBACAxb,EAAA6b,iBACA7b,EAAA+b,cH4rBMsB,KACA,SAAUtd,EAAQC,EAASC,GIjuDjC,QAAAqd,GAAAhc,GACA,MAAAA,aAAAyL,OAAAzL,EAAA,MAAAA,SAoBA,QAAAic,GAAAjK,EAAAkK,GACA,GAAAlK,EAIA,OAHAmK,GAAAnK,EAAAoK,SAAApK,EAAAoK,aACAC,EAAArK,EAAAsK,OAAAtK,EAAAsK,WAEAjb,EAAA,EAAAgE,EAAA6W,EAAA5a,OAAyCD,EAAAgE,EAAShE,IAAA,CAClD,GAAAkb,GAAAL,EAAA7a,IAEA8a,EAAAvW,eAAA2W,IAAAF,EAAAzW,eAAA2W,KACAJ,EAAAI,GAAAF,EAAAE,KAoBA,QAAAC,GAAAC,GAEA,MAAAA,KAAA,MAAAA,EAAAzc,MAAAyc,IAAAzc,OASA,QAAA0c,GAAAD,GACA,MAAA1W,GAAA0W,kBAAAhR,QAUA,QAAAkR,GAAA3c,EAAA4c,GAEA,GAAAC,GAAAD,KAAAnZ,IAEA,mBAAAoZ,EACA7c,GAGA,SAAA6c,GACA,iBAAA7c,IAAA,MAAAA,GAAA,MAAAA,IACAA,GAAA8c,EAAAC,UAAA/c,IAMA,MAAAA,GAAA,KAAAA,EAAAgd,KAAAhd,GAaA,QAAAid,GAAA3V,EAAA0K,GACA,GAAAkL,GAAA,GAAAC,EAWA,OAVAlK,GAAA7L,MAAA8V,EAAAE,GACAF,EAAAG,YAAArL,EAAAqL,YACAH,EAAArY,KAAAmN,EAAAnN,MAAA,GACAqY,EAAAI,SAAAtL,EAAAsL,SACAJ,EAAAK,QAAAvL,EAAAuL,QAEAL,EAAAM,QAAA,WACA,MAAAlW,IAGA4V,EAoGA,QAAAO,GAAAC,EAAAC,GAOAA,UAAAnU,OACA,IAAAtE,GAAA+N,EAAArL,IAAA8V,MAAA,SAAA7e,EAAA+e,GACA,OACAC,MAAAhf,IA+DA,OA3DA0I,GAAAoW,EAAA,SAAAG,EAAAF,GACA,GAAA7X,EAAA+X,GAAA,CAKA,OAAAzc,GAAA,EAAmBA,EAAA6D,EAAA5D,OAAmBD,IACtC,IAAA6D,EAAA7D,GAAAsT,QACA,MAAAmJ,EAAAC,IAAA7Y,EAAA7D,GAAAwc,MAAAE,KAAAD,EAAAC,GAAA,GAGA,MAFA7Y,GAAA7D,GAAAsT,OAAAmJ,OACAH,EAAAC,GAAA,KAKA,QAAAvc,GAAA,EAAmBA,EAAA6D,EAAA5D,OAAmBD,IAAA,CACtC,GAAAwc,GAAA3Y,EAAA7D,GAAAwc,KAEA,KAAA3Y,EAAA7D,GAAAsT,SAEA,MAAAkJ,EAAAE,IAAA,MAAAD,EAAAC,KAAA,MAAAD,EAAAjZ,OAAAmZ,EAAAF,KAAAE,EAAAH,MAAAhZ,OAAAiZ,EAAAjZ,KAAA,GAGA,MAFAK,GAAA7D,GAAAsT,OAAAmJ,OACAH,EAAAC,GAAA,UAMArW,EAAAoW,EAAA,SAAAG,EAAAF,GACA,GAAA7X,EAAA+X,GAAA,CAMA,IAFA,GAAAzc,GAAA,EAEUA,EAAA6D,EAAA5D,OAAmBD,IAAA,CAC7B,GAAAwc,GAAA3Y,EAAA7D,GAAAwc,KAEA,KAAA3Y,EAAA7D,GAAAsT,SAIAqJ,EAAAH,IAKA,MAAAC,EAAAC,GAAA,CACA7Y,EAAA7D,GAAAsT,OAAAmJ,CACA,QAIAzc,GAAA6D,EAAA5D,QACA4D,EAAA4C,MACA6M,OAAAmJ,OAIA5Y,EAaA,QAAA+Y,GAAAC,GAUA,GAAAC,GAAAlL,EAAA7I,eACA7C,GAAA2W,EAAA,SAAAE,EAAAR,GACA,GAAAS,GAAAD,EAAAP,KACAQ,IAAAF,EAAAhU,IAAAkU,EAAAN,GAAAK,KAEA7W,EAAA2W,EAAA,SAAAE,EAAAR,GACA,GAAA5L,GAAAoM,EAAAzJ,MACA1B,GAAArJ,QAAAoI,GAAA,MAAAA,EAAA+L,KAAAI,EAAAxS,IAAAqG,EAAA+L,KAAAI,EAAAxS,IAAAqG,EAAA+L,MAAAK,EAAA,mBAAApM,KAAA+L,KACA/L,GAAA,MAAAA,EAAA+L,IAAAI,EAAAhU,IAAA6H,EAAA+L,GAAAK,IACAA,EAAAE,UAAAF,EAAAE,cAGA/W,EAAA2W,EAAA,SAAAE,EAAAR,GACA,GAAAS,GAAAD,EAAAP,MACA7L,EAAAoM,EAAAzJ,OACA2J,EAAAF,EAAAE,OAEA,IAAAvY,EAAAiM,GAAA,CAUA,GAFAsM,EAAAzZ,KAAA,MAAAmN,EAAAnN,KAAAmN,EAAAnN,KAAA,GAAAwZ,IAAAxZ,KAAA,MAEAwZ,EACAC,EAAAP,GAAAM,EAAAN,OACK,UAAA/L,EAAA+L,GACLO,EAAAP,GAAA/L,EAAA+L,GAAA,OACK,CAML,GAAAQ,GAAA,CAEA,IACAD,EAAAP,GAAA,KAAAO,EAAAzZ,KAAA,KAAA0Z,UACOJ,EAAAxS,IAAA2S,EAAAP,KAGPI,EAAAhU,IAAAmU,EAAAP,GAAAK,MAUA,QAAAJ,GAAAF,GACA,MAAA/X,GAAA+X,MAAAC,IAAA,KAAAD,EAAAC,GAAA,IAAAnX,QAAA,YAYA,QAAA4X,GAAAC,EAAAC,GAOA,QAAAC,GAAAC,EAAAhX,EAAAiX,GACA,OAAAxd,GAAA,EAAAgE,EAAAuZ,EAAAtd,OAA6CD,EAAAgE,EAAShE,IAKtD,OAJAyd,GAAAF,EAAAvd,GAAAyd,SACAC,EAAA/C,EAAA4C,EAAAvd,GAAAmW,WACAwH,EAAAH,KAAAC,GAEAG,EAAA,EAAAC,EAAAH,EAAAzd,OAAgD2d,EAAAC,EAAUD,IAAA,CAC1D,GAAAzH,GAAAuH,EAAAE,EAEAD,MAAAxH,GACAwH,EAAAxH,GAAA,MAEA5P,EAAAkX,KAAAlX,EAAAkX,QAA+CtH,GAAA,GAM/C,QAAA2H,GAAAvX,EAAAwX,GACA,GAAAla,KAEA,QAAA7D,KAAAuG,GACA,GAAAA,EAAAhC,eAAAvE,IAAA,MAAAuG,EAAAvG,GACA,GAAA+d,EACAla,EAAA4C,MAAAzG,OACS,CACT,GAAA0d,GAAAI,EAAAvX,EAAAvG,IAAA,EACA0d,GAAAzd,QAAA4D,EAAA4C,MACAgX,SAAAzd,EACAmW,UAAAuH,IAMA,MAAA7Z,GAzCA,GAAAma,MACAC,IAGA,OAFAX,GAAAF,MAAAY,GACAV,EAAAD,MAAAY,EAAAD,IACAF,EAAAE,GAAAF,EAAAG,IAgDA,QAAAC,GAAAjY,EAAAkY,GACA,aAAAA,EAAAC,gBACAD,EAAAC,gBACG,MAAAD,EAAAhI,UACHvE,EAAA/M,QAAAsZ,EAAAhI,WAAAvE,EAAArL,IAAA4X,EAAAhI,UAAA,SAAAxX,GACA,MAAAsH,GAAAoY,gBAAA1f,KACKsH,EAAAoY,gBAAAF,EAAAhI,WACF,MAAAgI,EAAA3a,KACHoO,EAAA/M,QAAAsZ,EAAA3a,MAAAoO,EAAArL,IAAA4X,EAAA3a,KAAA,SAAA7E,GACA,MAAAsH,GAAAqY,YAAA3f,KACKsH,EAAAqY,YAAAH,EAAA3a,UAHF,GAoEH,QAAA+a,GAAAnL,EAAAoL,EAAA7N,GACA,GAAAiB,EAAApK,SAAAgX,GAAA,CACA,GAAAhhB,KACAA,GAAAghB,EAAA,WACAA,EAAAhhB,EAGA,GAAAihB,GAAA9N,KAAA8N,iBAEAA,GAAAC,EAAAF,EAAAC,EAAA,UAAAC,EAAAF,EAAAC,EAAA,OAAAC,EAAAF,EAAAC,EAAA,UACAD,EAAAC,EAAA,WAGA,IAAA5a,KA6BA,OA5BAqC,GAAAsY,EAAA,SAAA7f,EAAAwB,GACA,GAAAxB,GAAA6f,EAAAre,EAEA,kBAAAA,GAAA,oBAAAA,EAEA,YADA0D,EAAA1D,GAAAxB,EAIA,IAAAggB,GAAAxe,EAAAye,MAAA,8BACA3C,EAAA0C,EAAA,GACAE,GAAAF,EAAA,QAAAG,aAEA,OAAA7C,IAAA4C,GAAA,MAAAlgB,GAAA,UAAAkgB,GAAA,SAAAlgB,GAAAgS,KAAAoO,kBAAAnN,EAAArM,QAAAoL,EAAAoO,iBAAA9C,GAAA,IAIA,GAAA+C,IACA/C,WAGA,WAAA4C,GAAA,QAAAlgB,IACAqgB,EAAAH,GAAAlgB,EAGA,IAAAsgB,GAAA7L,EAAA8L,gBAAAF,EACAnb,GAAAoY,EAAA,UAAAgD,EACApb,EAAAoY,EAAA,SAAAgD,EAAA,MAEApb,EAUA,QAAAsb,GAAAlZ,EAAAmZ,GACA,GAAAC,GAAApZ,EAAAoZ,UACAD,GAAAnZ,EAAAqZ,aAAAF,EAEA,QAAApf,GAAA,EAAiBA,EAAAqf,EAAApf,OAAuBD,IAAA,CACxC,GAAAuf,GAAAtZ,EAAAuZ,iBAAAH,EAAArf,GAEA,IAAAuf,EAAA/b,OAAA4b,EACA,MAAAG,GAAAE,UAYA,QAAAC,GAAAzZ,EAAAwZ,GACA,GAAAL,KAQA,OAPAlZ,GAAAD,EAAAoZ,WAAA,SAAAM,GACA,GAAAJ,GAAAtZ,EAAAuZ,iBAAAG,EAEAJ,GAAAE,eACAL,EAAAG,EAAAK,eAAAL,EAAA/b,QAGA4b,EAWA,QAAAS,GAAA5Z,EAAA6Z,GACA,GAAAV,KAUA,OATAlZ,GAAAD,EAAAoZ,WAAA,SAAAM,GACA,GAAAJ,GAAAtZ,EAAAuZ,iBAAAG,GACAI,EAAAR,EAAAQ,UACAC,EAAAD,EAAAD,EAEA,OAAAE,IAAA,IAAAA,IACAZ,EAAAY,GAAAT,EAAA/b,QAGA4b,EAGA,QAAAV,GAAAlhB,EAAAsI,GACA,MAAAtI,MAAA+G,eAAAuB,GAnnBA,GAAA8L,GAAAtU,EAAA,MAEA2iB,EAAA3iB,EAAA,MAEAme,EAAAne,EAAA,MAEAwe,EAAAxe,EAAA,MAEA4I,EAAA0L,EAAA1L,KACAxB,EAAAkN,EAAAlN,SA2CAwb,GAAA,yXAiFAnE,GAOAoE,cAAA,SAAAhK,EAAAiK,GACA,GAAAna,GAAA7E,KAAA+a,QAAAiE,GACAC,EAAAjf,KAAAkf,YAAAnK,EAAAiK,GACAG,EAAAta,EAAAua,YAAArK,GACA3S,EAAAyC,EAAAwa,QAAAtK,GAAA,GACAuK,EAAAza,EAAA0a,eAAAxK,GACApI,EAAA9H,EAAA2a,cAAAzK,EAAA,QACA,QACA0K,cAAAzf,KAAA6a,SACA6E,iBAAA1f,KAAA8a,QACA6E,WAAA,WAAA3f,KAAA6a,SAAA7a,KAAA8a,QAAA,KACAF,YAAA5a,KAAA4a,YACAyB,SAAArc,KAAAsb,GACAsE,WAAA5f,KAAAoC,KACAA,OACA2S,UAAAoK,EACAta,KAAAya,EACAN,WACAzhB,MAAA0hB,EACAtS,QACAkT,OAAAhB,EAAAiB,iBAAAnT,GAEAoT,OAAA,+BAaAtP,kBAAA,SAAAsE,EAAAiL,EAAAhB,EAAAJ,EAAAqB,GACAD,KAAA,QACA,IAAAnb,GAAA7E,KAAA+a,QAAAiE,GACAkB,EAAArb,EAAAsb,aAAApL,GACAqL,EAAApgB,KAAA+e,cAAAhK,EAAAiK,EAEA,OAAAJ,GAAAwB,EAAA7iB,gBAAAyL,SACAoX,EAAA7iB,MAAA6iB,EAAA7iB,MAAAqhB,GAGA,IAAAyB,GAAAH,EAAAhX,KAAA+W,GAAA,QAAAD,EAAA,aAEA,0BAAAK,IACAD,EAAAJ,SACAK,EAAAD,IACK,iBAAAC,GACLxB,EAAAyB,UAAAD,EAAAD,OADK,IAWLlB,YAAA,SAAAqB,EAAAvB,GACA,GAAAna,GAAA7E,KAAA+a,QAAAiE,GACAhF,EAAAnV,EAAA0a,eAAAgB,EAEA,UAAAvG,EACA,OAAA1W,EAAA0W,gBAAAhR,OAAAgR,IAAAzc,OAWAijB,cAAAhQ,EAAA5I,MAiQA6Y,EAAA,WACA,GAAAtF,GAAA,CACA,mBACA,GAAApc,GAAA,sBAAAoc,GACA,iBAAAuF,GACA,MAAAA,GAAA3hB,KAAA2hB,EAAA3hB,WAuJA9C,GAAAsd,mBACAtd,EAAAud,kBACAvd,EAAA6iB,qBACA7iB,EAAA8d,mBACA9d,EAAAge,mBACAhe,EAAAie,kBACAje,EAAAue,wBACAve,EAAA0e,kBACA1e,EAAA+e,kBACA/e,EAAAuf,gBACAvf,EAAAsf,YACAtf,EAAA8f,kBACA9f,EAAA6gB,iBACA7gB,EAAAwkB,aACAxkB,EAAAkhB,cACAlhB,EAAA8hB,oBACA9hB,EAAAqiB,oBACAriB,EAAAwiB,qBJuvDMkC,KACA,SAAU3kB,EAAQC,GKv3ExB,QAAAoB,GAAAqN,EAAAC,GACA,GAAAiW,GAAA,GAAAC,GAAA,EAYA,OAVA,OAAAnW,IACAA,EAAA,GAGA,MAAAC,IACAA,EAAA,GAGAiW,EAAA,GAAAlW,EACAkW,EAAA,GAAAjW,EACAiW,EAUA,QAAAE,GAAAF,EAAAG,GAGA,MAFAH,GAAA,GAAAG,EAAA,GACAH,EAAA,GAAAG,EAAA,GACAH,EASA,QAAAre,GAAAwe,GACA,GAAAH,GAAA,GAAAC,GAAA,EAGA,OAFAD,GAAA,GAAAG,EAAA,GACAH,EAAA,GAAAG,EAAA,GACAH,EAWA,QAAAlZ,GAAAkZ,EAAAI,EAAAC,GAGA,MAFAL,GAAA,GAAAI,EACAJ,EAAA,GAAAK,EACAL,EAUA,QAAAM,GAAAN,EAAAO,EAAAC,GAGA,MAFAR,GAAA,GAAAO,EAAA,GAAAC,EAAA,GACAR,EAAA,GAAAO,EAAA,GAAAC,EAAA,GACAR,EAWA,QAAAS,GAAAT,EAAAO,EAAAC,EAAAJ,GAGA,MAFAJ,GAAA,GAAAO,EAAA,GAAAC,EAAA,GAAAJ,EACAJ,EAAA,GAAAO,EAAA,GAAAC,EAAA,GAAAJ,EACAJ,EAUA,QAAAU,GAAAV,EAAAO,EAAAC,GAGA,MAFAR,GAAA,GAAAO,EAAA,GAAAC,EAAA,GACAR,EAAA,GAAAO,EAAA,GAAAC,EAAA,GACAR,EASA,QAAAhe,GAAAme,GACA,MAAA5U,MAAAoV,KAAAC,EAAAT,IAWA,QAAAS,GAAAT,GACA,MAAAA,GAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAWA,QAAA/K,GAAA4K,EAAAO,EAAAC,GAGA,MAFAR,GAAA,GAAAO,EAAA,GAAAC,EAAA,GACAR,EAAA,GAAAO,EAAA,GAAAC,EAAA,GACAR,EAUA,QAAAa,GAAAb,EAAAO,EAAAC,GAGA,MAFAR,GAAA,GAAAO,EAAA,GAAAC,EAAA,GACAR,EAAA,GAAAO,EAAA,GAAAC,EAAA,GACAR,EAUA,QAAAc,GAAAP,EAAAC,GACA,MAAAD,GAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAUA,QAAAO,GAAAf,EAAAG,EAAAa,GAGA,MAFAhB,GAAA,GAAAG,EAAA,GAAAa,EACAhB,EAAA,GAAAG,EAAA,GAAAa,EACAhB,EASA,QAAAiB,GAAAjB,EAAAG,GACA,GAAAe,GAAAlf,EAAAme,EAUA,OARA,KAAAe,GACAlB,EAAA,KACAA,EAAA,OAEAA,EAAA,GAAAG,EAAA,GAAAe,EACAlB,EAAA,GAAAG,EAAA,GAAAe,GAGAlB,EAUA,QAAAmB,GAAAZ,EAAAC,GACA,MAAAjV,MAAAoV,MAAAJ,EAAA,GAAAC,EAAA,KAAAD,EAAA,GAAAC,EAAA,KAAAD,EAAA,GAAAC,EAAA,KAAAD,EAAA,GAAAC,EAAA,KAWA,QAAAY,GAAAb,EAAAC,GACA,OAAAD,EAAA,GAAAC,EAAA,KAAAD,EAAA,GAAAC,EAAA,KAAAD,EAAA,GAAAC,EAAA,KAAAD,EAAA,GAAAC,EAAA,IAUA,QAAAa,GAAArB,EAAAG,GAGA,MAFAH,GAAA,IAAAG,EAAA,GACAH,EAAA,IAAAG,EAAA,GACAH,EAWA,QAAAsB,GAAAtB,EAAAO,EAAAC,EAAAe,GAGA,MAFAvB,GAAA,GAAAO,EAAA,GAAAgB,GAAAf,EAAA,GAAAD,EAAA,IACAP,EAAA,GAAAO,EAAA,GAAAgB,GAAAf,EAAA,GAAAD,EAAA,IACAP,EAUA,QAAA5V,GAAA4V,EAAAG,EAAA7V,GACA,GAAAR,GAAAqW,EAAA,GACApW,EAAAoW,EAAA,EAGA,OAFAH,GAAA,GAAA1V,EAAA,GAAAR,EAAAQ,EAAA,GAAAP,EAAAO,EAAA,GACA0V,EAAA,GAAA1V,EAAA,GAAAR,EAAAQ,EAAA,GAAAP,EAAAO,EAAA,GACA0V,EAUA,QAAAxH,GAAAwH,EAAAO,EAAAC,GAGA,MAFAR,GAAA,GAAAzU,KAAAiN,IAAA+H,EAAA,GAAAC,EAAA,IACAR,EAAA,GAAAzU,KAAAiN,IAAA+H,EAAA,GAAAC,EAAA,IACAR,EAUA,QAAAxU,GAAAwU,EAAAO,EAAAC,GAGA,MAFAR,GAAA,GAAAzU,KAAAC,IAAA+U,EAAA,GAAAC,EAAA,IACAR,EAAA,GAAAzU,KAAAC,IAAA+U,EAAA,GAAAC,EAAA,IACAR,EA7RA,GAAAC,GAAA,oBAAAuB,cAAApZ,MAAAoZ,aAkHAvjB,EAAA+D,EAYAyf,EAAAb,EAkFAc,EAAAP,EAYAQ,EAAAP,CAoEA/lB,GAAAoB,SACApB,EAAA6kB,OACA7kB,EAAAsG,QACAtG,EAAAyL,MACAzL,EAAAilB,MACAjlB,EAAAolB,cACAplB,EAAAqlB,MACArlB,EAAA2G,MACA3G,EAAA4C,SACA5C,EAAAulB,YACAvlB,EAAAomB,eACApmB,EAAA+Z,MACA/Z,EAAAwlB,MACAxlB,EAAAylB,MACAzlB,EAAA0lB,QACA1lB,EAAA4lB,YACA5lB,EAAA8lB,WACA9lB,EAAAqmB,OACArmB,EAAA+lB,iBACA/lB,EAAAsmB,aACAtmB,EAAAgmB,SACAhmB,EAAAimB,OACAjmB,EAAA+O,iBACA/O,EAAAmd,MACAnd,EAAAmQ,OLq4EMoW,KACA,SAAUxmB,EAAQC,EAASC,GM1rFjC,QAAAumB,GAAAC,GACA,MAAAA,GAAAtK,QAAA,WAAAA,QAAA,WAaA,QAAAuK,GAAAzb,EAAA0b,EAAAC,EAAAC,GACA,GAAAC,GAAAH,EAAA,GAAAA,EAAA,GACAI,EAAAH,EAAA,GAAAA,EAAA,EAEA,QAAAE,EACA,WAAAC,EAAAH,EAAA,IAAAA,EAAA,GAAAA,EAAA,KAQA,IAAAC,EACA,GAAAC,EAAA,GACA,GAAA7b,GAAA0b,EAAA,GACA,MAAAC,GAAA,EACO,IAAA3b,GAAA0b,EAAA,GACP,MAAAC,GAAA,OAEK,CACL,GAAA3b,GAAA0b,EAAA,GACA,MAAAC,GAAA,EACO,IAAA3b,GAAA0b,EAAA,GACP,MAAAC,GAAA,OAGG,CACH,GAAA3b,IAAA0b,EAAA,GACA,MAAAC,GAAA,EAGA,IAAA3b,IAAA0b,EAAA,GACA,MAAAC,GAAA,GAIA,OAAA3b,EAAA0b,EAAA,IAAAG,EAAAC,EAAAH,EAAA,GAYA,QAAAI,GAAAC,EAAAC,GACA,OAAAD,GACA,aACA,aACAA,EAAA,KACA,MAEA,YACA,UACAA,EAAA,IACA,MAEA,aACA,aACAA,EAAA,OAIA,uBAAAA,GACAT,EAAAS,GAAA1F,MAAA,MACA4F,WAAAF,GAAA,IAAAC,EAGAC,WAAAF,GAGA,MAAAA,EAAA3I,KAAA2I,EAaA,QAAA1X,GAAAd,EAAA2Y,EAAAC,GAQA,MAPA,OAAAD,IACAA,EAAA,IAIAA,EAAAlX,KAAAiN,IAAAjN,KAAAC,IAAA,EAAAiX,GAAA,IACA3Y,OAAA6Y,QAAAF,GACAC,EAAA5Y,KAGA,QAAA8Y,GAAAC,GAIA,MAHAA,GAAAC,KAAA,SAAA1C,EAAAC,GACA,MAAAD,GAAAC,IAEAwC,EAQA,QAAAE,GAAAzc,GAGA,GAFAA,KAEA0c,MAAA1c,GACA,QAUA,KAHA,GAAA6H,GAAA,EACA8U,EAAA,EAEA1X,KAAAX,MAAAtE,EAAA6H,OAAA7H,GACA6H,GAAA,GACA8U,GAGA,OAAAA,GAQA,QAAAC,GAAA5c,GACA,GAAAwb,GAAAxb,EAAA4B,WAEAib,EAAArB,EAAAve,QAAA,IAEA,IAAA4f,EAAA,GACA,GAAAV,IAAAX,EAAA3b,MAAAgd,EAAA,EACA,OAAAV,GAAA,GAAAA,EAAA,EAEA,GAAAW,GAAAtB,EAAAve,QAAA,IACA,OAAA6f,GAAA,IAAAtB,EAAA7jB,OAAA,EAAAmlB,EAYA,QAAAC,GAAAC,EAAAC,GACA,GAAAvjB,GAAAuL,KAAAvL,IACAwjB,EAAAjY,KAAAiY,KACAC,EAAAlY,KAAAmY,MAAA1jB,EAAAsjB,EAAA,GAAAA,EAAA,IAAAE,GACAG,EAAApY,KAAAX,MAAA5K,EAAAuL,KAAAuK,IAAAyN,EAAA,GAAAA,EAAA,KAAAC,GAEAf,EAAAlX,KAAAiN,IAAAjN,KAAAC,KAAAiY,EAAAE,EAAA,MACA,OAAAC,UAAAnB,KAAA,GAeA,QAAAoB,GAAAC,EAAAnE,EAAA8C,GACA,IAAAqB,EAAAnE,GACA,QAGA,IAAAoE,GAAAnU,EAAAlL,OAAAof,EAAA,SAAAE,EAAA1d,GACA,MAAA0d,IAAAhB,MAAA1c,GAAA,EAAAA,IACG,EAEH,QAAAyd,EACA,QAmBA,KAhBA,GAAAE,GAAA1Y,KAAA2Y,IAAA,GAAAzB,GACA0B,EAAAvU,EAAArL,IAAAuf,EAAA,SAAAxd,GACA,OAAA0c,MAAA1c,GAAA,EAAAA,GAAAyd,EAAAE,EAAA,MAEAG,EAAA,IAAAH,EACAI,EAAAzU,EAAArL,IAAA4f,EAAA,SAAAG,GAEA,MAAA/Y,MAAAmY,MAAAY,KAEAC,EAAA3U,EAAAlL,OAAA2f,EAAA,SAAAL,EAAA1d,GACA,MAAA0d,GAAA1d,GACG,GACHke,EAAA5U,EAAArL,IAAA4f,EAAA,SAAAG,EAAA3E,GACA,MAAA2E,GAAAD,EAAA1E,KAGA4E,EAAAH,GAAA,CAKA,OAHA5Y,GAAAiZ,OAAAC,kBACAC,EAAA,KAEA3mB,EAAA,EAAAgE,EAAAwiB,EAAAvmB,OAA2CD,EAAAgE,IAAShE,EACpDwmB,EAAAxmB,GAAAwN,IACAA,EAAAgZ,EAAAxmB,GACA2mB,EAAA3mB,KAKAqmB,EAAAM,GACAH,EAAAG,GAAA,IACAJ,EAGA,MAAAF,GAAA1E,GAAAsE,EAWA,QAAAW,GAAAC,GACA,GAAAC,GAAA,EAAAvZ,KAAAyF,EACA,QAAA6T,EAAAC,OAQA,QAAAC,GAAAze,GACA,MAAAA,IAAA0e,GAAA1e,EAAA0e,EAqBA,QAAAtL,GAAA/c,GACA,GAAAA,YAAAsoB,MACA,MAAAtoB,EACG,qBAAAA,GAAA,CAMH,GAAAigB,GAAAsI,EAAAC,KAAAxoB,EAEA,KAAAigB,EAEA,UAAAqI,MAAAtL,IAIA,IAAAiD,EAAA,GAWA,CACA,GAAAwI,IAAAxI,EAAA,KAMA,OAJA,MAAAA,EAAA,GAAAyI,gBACAD,GAAAxI,EAAA,GAAAzW,MAAA,MAGA,GAAA8e,WAAAK,KAAA1I,EAAA,KAAAA,EAAA,UAAAA,EAAA,MAAAwI,IAAAxI,EAAA,QAAAA,EAAA,OAAAA,EAAA,QAfA,UAAAqI,OAAArI,EAAA,KAAAA,EAAA,UAAAA,EAAA,OAAAA,EAAA,QAAAA,EAAA,QAAAA,EAAA,OAAAA,EAAA,OAiBG,aAAAjgB,EACH,GAAAsoB,MAAAtL,KAGA,GAAAsL,MAAA1Z,KAAAX,MAAAjO,IAUA,QAAA4oB,GAAAjf,GACA,MAAAiF,MAAA2Y,IAAA,GAAAsB,EAAAlf,IAGA,QAAAkf,GAAAlf,GACA,MAAAiF,MAAAmY,MAAAnY,KAAAvL,IAAAsG,GAAAiF,KAAAiY,MAeA,QAAAiC,GAAAnf,EAAAsE,GACA,GAIA8a,GAJAC,EAAAH,EAAAlf,GACAsf,EAAAra,KAAA2Y,IAAA,GAAAyB,GACAE,EAAAvf,EAAAsf,CAiCA,OA3BAF,GAFA9a,EACAib,EAAA,IACA,EACKA,EAAA,IACL,EACKA,EAAA,EACL,EACKA,EAAA,EACL,EAEA,GAGAA,EAAA,EACA,EACKA,EAAA,EACL,EACKA,EAAA,EACL,EACKA,EAAA,EACL,EAEA,GAIAvf,EAAAof,EAAAE,EAGAD,IAAA,IAAArf,EAAAqc,QAAAgD,EAAA,GAAAA,EAAA,GAAArf,EA0BA,QAAAwf,GAAAC,GA8BA,QAAAC,GAAA5F,EAAAC,EAAA4F,GACA,MAAA7F,GAAA8F,SAAAD,GAAA5F,EAAA6F,SAAAD,IAAA7F,EAAA8F,SAAAD,KAAA5F,EAAA6F,SAAAD,KAAA7F,EAAA+F,MAAAF,GAAA5F,EAAA8F,MAAAF,SAAA,OAAAA,GAAAD,EAAA5F,EAAAC,EAAA,IA9BA0F,EAAAjD,KAAA,SAAA1C,EAAAC,GACA,MAAA2F,GAAA5F,EAAAC,EAAA,SAKA,QAHA+F,IAAAC,IACAC,EAAA,EAEAtoB,EAAA,EAAiBA,EAAA+nB,EAAA9nB,QAAiB,CAIlC,OAHAioB,GAAAH,EAAA/nB,GAAAkoB,SACAC,EAAAJ,EAAA/nB,GAAAmoB,MAEAF,EAAA,EAAoBA,EAAA,EAAQA,IAC5BC,EAAAD,IAAAG,IACAF,EAAAD,GAAAG,EACAD,EAAAF,KAAA,IAAAK,GAGAF,EAAAF,EAAAD,GACAK,EAAAH,EAAAF,EAGAC,GAAA,KAAAA,EAAA,IAAAC,EAAA,GAAAA,EAAA,OACAJ,EAAAQ,OAAAvoB,EAAA,GAEAA,IAIA,MAAA+nB,GAgBA,QAAAS,GAAArG,GACA,MAAAA,GAAAqC,WAAArC,IAAA,EApdA,GAAAvQ,GAAAtU,EAAA,MAEA0pB,EAAA,KA8QAE,EAAA,mIAuMA7pB,GAAA0mB,YACA1mB,EAAAgnB,eACAhnB,EAAAuP,QACAvP,EAAAunB,MACAvnB,EAAA0nB,eACA1nB,EAAA6nB,mBACA7nB,EAAAgoB,oBACAhoB,EAAAwoB,0BACAxoB,EAAAorB,iBApOA,iBAqOAprB,EAAAupB,YACAvpB,EAAA0pB,qBACA1pB,EAAAqe,YACAre,EAAAkqB,WACAlqB,EAAAoqB,OACApqB,EAAAyqB,kBACAzqB,EAAAmrB,aNosFME,KACA,SAAUtrB,EAAQC,EAASC,GO9kGjC,QAAAqrB,GAAAC,GACA,gBAAAC,EAAAC,EAAA1iB,GAEAyiB,OAAA/J,cACAiK,EAAAxqB,UAAAqqB,GAAA1qB,KAAAkD,KAAAynB,EAAAC,EAAA1iB,IAQA,QAAA4iB,KACAD,EAAA7qB,KAAAkD,MAWA,QAAA6nB,GAAAC,EAAAC,EAAAxe,GAsGA,QAAAye,GAAAhH,EAAAC,GACA,MAAAD,GAAAiH,KAAAhH,EAAAgH,KAtGA1e,QAEA,iBAAAwe,KACAA,EAAAG,GAAAH,IAOA/nB,KAAAsb,GAMAtb,KAAAmoB,MAMAnoB,KAAAooB,KAAAN,CACA,IAMAO,GAAAroB,KAAAsoB,IAAAC,EAAAC,KAAAV,GACAW,SAAAlf,EAAAkf,UAPA,SAQAC,iBAAAnf,EAAAmf,iBACAlnB,MAAA+H,EAAA/H,MACAC,OAAA8H,EAAA9H,QAQAzB,MAAA2oB,kBAAAC,GAAApY,EAAA9P,KAAA2nB,EAAAQ,MAAAR,GAAA,GACA,IAAAN,GAAAvX,EAAAjO,MAAAwlB,EACAA,IAAAe,GAAAf,GAAA,GAMA/nB,KAAA+oB,OAAAhB,EAMA/nB,KAAAgpB,gBAMAhpB,KAAAipB,cAMAjpB,KAAAkpB,oBAMAlpB,KAAAmpB,kBAMAnpB,KAAAopB,aAAA,GAAAC,IAMArpB,KAAAspB,KAAAC,EAAAvpB,MACA2nB,EAAA7qB,KAAAkD,MAMAA,KAAAwpB,eAAA,GAAA5B,GAEA5nB,KAAAypB,cAGAzpB,KAAA0pB,OAAAlZ,EAAA9P,KAAAV,KAAA0pB,OAAA1pB,MAEAA,KAAA2pB,mBAMAC,EAAAC,GAAA7B,GACA4B,EAAAE,GAAA9B,GACAK,EAAA0B,UAAAta,GAAA,QAAAzP,KAAAgqB,SAAAhqB,MAEAwQ,EAAAjJ,eAAAvH,MAgUA,QAAAiqB,GAAAC,EAAA9M,EAAA7f,GACA,GAIAkF,GAJAuP,EAAAhS,KAAAmqB,OAEAC,EAAApqB,KAAAopB,aAAAiB,sBAGAjN,GAAAkN,GAAAnN,YAAAnL,EAAAoL,EAEA,QAAAxe,GAAA,EAAiBA,EAAAwrB,EAAAvrB,OAAyBD,IAAA,CAC1C,GAAA2rB,GAAAH,EAAAxrB,EAEA,IAAA2rB,EAAAL,IAAA,OAAAznB,EAAA8nB,EAAAL,GAAAlY,EAAAoL,EAAA7f,IACA,MAAAkF,IAuOA,QAAA+nB,GAAAC,EAAAjD,EAAAzK,EAAAlC,EAAAC,GAuBA,QAAA4P,GAAAC,GACAA,KAAAC,SAAAD,EAAAnD,IAAAmD,EAAAnD,GAAAmD,EAAAE,QAAA7Y,EAAAyY,EAAAnB,KAAAvM,GAvBA,GAAA/K,GAAAyY,EAAAN,MAEA,KAAAtP,EAEA,WADA/V,IAAA2lB,EAAAvB,iBAAAjjB,OAAAwkB,EAAAzB,cAAA0B,EAIA,IAAAI,KACAA,GAAAjQ,EAAA,MAAAkC,EAAAlC,EAAA,MACAiQ,EAAAjQ,EAAA,SAAAkC,EAAAlC,EAAA,SACAiQ,EAAAjQ,EAAA,QAAAkC,EAAAlC,EAAA,OACA,IAAAzT,IACAyT,WACAiQ,QAEAhQ,KAAA1T,EAAA0T,WAGA9I,KAAA+Y,cAAA3jB,EAAA,SAAAqT,EAAAU,GACAuP,EAAAD,EAAA,WAAA5P,EAAA,+BAAAJ,EAAAuQ,YACGP,GAkIH,QAAAQ,GAAAlO,EAAAmO,GACA,GAAAC,GAAApO,EAAA/b,KACAoqB,EAAArO,EAAAqO,cACAC,EAAAC,GAAAH,GACAI,EAAAF,EAAAE,WACAC,GAAAD,EAAAE,QAAA,UAAAC,MAAA,KACAC,EAAAH,EAAAI,KACAJ,GAAA,MAAAA,EAAA,IAAAK,GAAAL,EAAA,IACAxrB,KAAA8rB,KAAA,CACA,IAAAC,IAAAhP,GACAiP,GAAA,CAEAjP,GAAAkP,QACAD,GAAA,EACAD,EAAAvb,EAAArL,IAAA4X,EAAAkP,MAAA,SAAAtQ,GAGA,MAFAA,GAAAnL,EAAA1M,SAAA0M,EAAA3M,UAA6C8X,GAAAoB,GAC7CpB,EAAAsQ,MAAA,KACAtQ,IAIA,IACAuQ,GADAC,KAEAC,EAAA,cAAAjB,GAAA,aAAAA,CACArmB,IAAAinB,EAAA,SAAAM,GAEAH,EAAAb,EAAAiB,OAAAD,EAAArsB,KAAAmqB,OAAAnqB,KAAAspB,MAEA4C,KAAA1b,EAAA3M,UAA2CwoB,GAE3CH,EAAAlrB,KAAAuqB,EAAAgB,OAAAL,EAAAlrB,KACAmrB,EAAA9mB,KAAA6mB,GAEAE,EAEA5B,EAAAxqB,KAAA2rB,EAAAU,EAAA,UACKb,GACLhB,EAAAxqB,KAAA2rB,EAAAU,EAAAb,EAAAgB,KAAAhB,EAAAlK,MAEGthB,MAEH,SAAA2rB,GAAAS,GAAAZ,IAEAxrB,KAAAysB,KAEAC,GAAAC,iBAAA7vB,KAAAkD,KAAA+c,GACA/c,KAAAysB,KAAA,GAEAC,GAAAf,GAAA7uB,KAAAkD,KAAA+c,IAMAmP,EADAF,GAEAhrB,KAAAuqB,EAAAgB,OAAApB,EACAC,gBACAa,MAAAE,GAGAA,EAAA,GAGAnsB,KAAA8rB,KAAA,GACAZ,GAAAlrB,KAAAwpB,eAAAoD,QAAAV,EAAAlrB,KAAAkrB,GAGA,QAAAW,GAAA3B,GAGA,IAFA,GAAA4B,GAAA9sB,KAAA2pB,gBAEAmD,EAAAjuB,QAAA,CACA,GAAAke,GAAA+P,EAAAC,OACA9B,GAAAnuB,KAAAkD,KAAA+c,EAAAmO,IAIA,QAAA8B,GAAA9B,IACAA,GAAAlrB,KAAA4sB,QAAA,WAgBA,QAAAK,GAAA/C,EAAAlY,EAAA+K,GACA,GAAAmQ,GAAAltB,KAAAspB,IAEAxkB,IAAA9E,KAAAkpB,iBAAA,SAAAiE,GACA,GAAAC,GAAAD,EAAAtC,OACAsC,GAAAjD,GAAAkD,EAAApb,EAAAkb,EAAAnQ,GACAsQ,EAAAD,EAAAD,IACGntB,MAEHgS,EAAAsb,WAAA,SAAAC,EAAAhN,GACA,GAAAiN,GAAAxtB,KAAAipB,WAAAsE,EAAAvC,SACAwC,GAAAtD,GAAAqD,EAAAvb,EAAAkb,EAAAnQ,GACAsQ,EAAAE,EAAAC,GACAC,EAAAF,EAAAC,IACGxtB,MAEH0tB,EAAA1tB,KAAAsoB,IAAAtW,GAEAlN,GAAA6oB,GAAA,SAAA/nB,GACAA,EAAAoM,EAAAkb,KAUA,QAAAU,GAAA5sB,EAAAgR,GAMA,OALA6b,GAAA,cAAA7sB,EACA8sB,EAAAD,EAAA7tB,KAAAkpB,iBAAAlpB,KAAAgpB,aACA+E,EAAAF,EAAA7tB,KAAAmpB,eAAAnpB,KAAAipB,WACAZ,EAAAroB,KAAAsoB,IAEA1pB,EAAA,EAAiBA,EAAAkvB,EAAAjvB,OAAqBD,IACtCkvB,EAAAlvB,GAAAgsB,SAAA,CAGA5Y,GAAA6b,EAAA,uCAAApO,EAAAhF,GACA,GAAAoT,GACA,cAAApO,EACA,WAGAhF,GAAAgF,CAIA,IAAAuO,GAAA,OAAAvT,EAAAa,GAAA,IAAAb,EAAAzZ,KACA2pB,EAAAoD,EAAAC,EAEA,KAAArD,EAAA,CACA,GAAAsD,GAAApC,GAAApR,EAAAzZ,MACAktB,EAAAL,EAAAM,GAAAC,SAAAH,EAAAzB,KAAAyB,EAAA3M,KAAA+M,GAAAD,SAAAH,EAAA3M,IAEA,KAAA4M,EAQA,MAPAvD,GAAA,GAAAuD,GACAvD,EAAAnC,KAAAxW,EAAAhS,KAAAspB,MACAyE,EAAAC,GAAArD,EACAmD,EAAAzoB,KAAAslB,GACAtC,EAAAnH,IAAAyJ,EAAAxC,OAOA1N,EAAAuQ,SAAAL,EAAA2D,KAAAN,EACArD,EAAAC,SAAA,EACAD,EAAAE,QAAApQ,EACAkQ,EAAAxC,MAAAoG,mBACA1T,SAAAJ,EAAAI,SACAM,MAAAV,EAAA+T,iBAEGxuB,KAEH,QAAApB,GAAA,EAAiBA,EAAAkvB,EAAAjvB,QAAqB,CACtC,GAAA8rB,GAAAmD,EAAAlvB,EAEA+rB,GAAAC,QAOAhsB,KANAypB,EAAAoG,OAAA9D,EAAAxC,OACAwC,EAAA+D,QAAA1c,EAAAhS,KAAAspB,MACAwE,EAAA3G,OAAAvoB,EAAA,SACAmvB,GAAApD,EAAA2D,MACA3D,EAAA2D,KAAA3D,EAAAxC,MAAAoG,kBAAA,OAcA,QAAAI,GAAA3c,EAAAkb,GACApoB,GAAAglB,GAAA,SAAA8E,GACAA,EAAAhpB,KAAAoM,EAAAkb,KAQA,QAAA2B,GAAA7c,GACA,GAAA8c,KACA9c,GAAAsb,WAAA,SAAAyB,GACA,GAAAC,GAAAD,EAAA7lB,IAAA,SACArE,EAAAkqB,EAAAhU,SAEA,IAAAiU,GAAA,SAAAnqB,EAAA7D,KAAA,CACA,GAAAiuB,GAAAH,EAAAE,EAEAF,GAAA3rB,eAAA6rB,IAAAC,IACApqB,EAAAqqB,UAAAD,GAGAH,EAAAE,GAAAnqB,KAYA,QAAAsqB,GAAAnd,EAAA+K,GACA,GAAAmQ,GAAAltB,KAAAspB,IACAxkB,IAAA+kB,GAAA,SAAAuF,GACAA,EAAAC,UACAD,EAAAxpB,KAAAoM,EAAAkb,EAAAnQ,KAcA,QAAAuS,GAAAtd,EAAA+K,EAAAwS,GACA,GAAArC,GAAAltB,KAAAspB,IACAtX,GAAAwd,oBACAxd,EAAAsb,WAAA,SAAAC,GACAA,EAAAiC,sBAEA1qB,GAAA+kB,GAAA,SAAAuF,KACAG,IAAAH,EAAAC,WAAAD,EAAAxpB,KAAAoM,EAAAkb,EAAAnQ,KASA,QAAA0S,GAAAzd,EAAA+K,GACA,GAAAmQ,GAAAltB,KAAAspB,IAEAxkB,IAAA9E,KAAAkpB,iBAAA,SAAAwG,GACA,GAAAtC,GAAAsC,EAAA7E,OACA6E,GAAAC,OAAAvC,EAAApb,EAAAkb,EAAAnQ,GACAsQ,EAAAD,EAAAsC,IACG1vB,MACH8E,GAAA9E,KAAAgpB,aAAA,SAAAwE,GACAA,EAAA5C,SAAA,GACG5qB,MAEHgS,EAAAsb,WAAA,SAAAC,EAAAhN,GACA,GAAAqP,GAAA5vB,KAAAipB,WAAAsE,EAAAvC,SACA4E,GAAAhF,SAAA,EACAgF,EAAAD,OAAApC,EAAAvb,EAAAkb,EAAAnQ,GACA6S,EAAAzH,MAAA+C,SAAAqC,EAAArkB,IAAA,UACAmkB,EAAAE,EAAAqC,GACAnC,EAAAF,EAAAqC,IACG5vB,MAEH0tB,EAAA1tB,KAAAsoB,IAAAtW,GAEAlN,GAAA9E,KAAAgpB,aAAA,SAAAwE,GACAA,EAAA5C,SACA4C,EAAAiB,OAAAzc,EAAAkb,IAEGltB,MAmFH,QAAA0tB,GAAArF,EAAArW,GACA,GAAA6d,GAAAxH,EAAAwH,QACAC,EAAA,CACAD,GAAAphB,SAAA,SAAA1B,GACAA,EAAAsK,SACAyY,MAIAA,EAAA9d,EAAA9I,IAAA,yBAAA6mB,EAAAC,MACAH,EAAAphB,SAAA,SAAA1B,GACAA,EAAAsK,UACAtK,EAAAU,eAAA,KAYA,QAAAggB,GAAAF,EAAAqC,GAEA,GAAAE,GAAA,CACAF,GAAAzH,MAAA1Z,SAAA,SAAA1B,GACA,UAAAA,EAAA/L,MAAA+L,EAAAkjB,QACAH,KAGA,IAAAI,IAAA3C,EAAArkB,IAAA,eACAinB,EAAAL,EAAAvC,EAAArkB,IAAA,yBAAAgnB,IAAAH,EAAAC,IAEAG,IACAP,EAAAzH,MAAA1Z,SAAA,SAAA1B,GAEAA,EAAAsK,UACAtK,EAAAqjB,YAAAD,EAAAhkB,KAAAmY,MAAAwL,IAAAI,IAAA,EAEAC,GACApjB,EAAAwI,eAAA,KAOA,IAAA8a,GAAA9C,EAAArkB,IAAA,kBACA0mB,GAAAzH,MAAA1Z,SAAA,SAAA1B,GAEAA,EAAAsK,SACAtK,EAAAjC,SAAA,QAAAulB,KAUA,QAAAhD,GAAA5S,EAAAkQ,GACA,GAAA2F,GAAA7V,EAAAvR,IAAA,KACAqnB,EAAA9V,EAAAvR,IAAA,SAEAyhB,GAAAxC,MAAA1Z,SAAA,SAAA1B,GACA,UAAAA,EAAA/L,OACA,MAAAsvB,IAAAvjB,EAAAujB,KACA,MAAAC,IAAAxjB,EAAAwjB,aAKA,QAAAhH,GAAAiH,GACA,GAAAC,GAAAD,EAAApH,YACA,OAAA5Y,GAAA3M,OAAA,GAAA6sB,IAAAF,IAEAnG,qBAAA7Z,EAAA9P,KAAA+vB,EAAApG,qBAAAoG,GACAE,sBAAA,SAAA5jB,GACA,KAAAA,GAAA,CACA,GAAA6jB,GAAA7jB,EAAAwhB,iBAEA,UAAAqC,EACA,MAAAJ,GAAArG,OAAA0G,aAAAD,EAAA/V,SAAA+V,EAAAzV,MAGApO,KAAAmJ,WA8DA,QAAA4a,GAAAtD,GAMA,QAAAuD,GAAAC,EAAAhR,GACA,OAAAphB,GAAA,EAAmBA,EAAAoyB,EAAAnyB,OAAmBD,IAAA,CACtCoyB,EAAApyB,GACAqyB,GAAAjR,GARA,GAGAiR,GAAA,uBASAzgB,GAAA1L,KAAAosB,GAAA,SAAAC,EAAAC,GACA5D,EAAAhE,eAAA/Z,GAAA2hB,EAAA,SAAA7E,GACA,GAAA8E,GAAA7D,EAAArF,QAdA,IAcAqF,EAAAyD,GAAA,CACA,GAAA1E,KAAAnB,cACA,MAGA,IAAAkB,GAAAkB,EAAA8D,oBAAA/E,GACAgF,IACA/gB,GAAA1L,KAAA0sB,GAAA,SAAAC,GACAA,IAAAjE,GAAAiE,EAAAtJ,QAAAqF,EAAArF,OACAoJ,EAAAlsB,KAAAosB,KAGAV,EAAAQ,EA1BA,GA2BAzsB,GAAAysB,EAAA,SAAAE,GA1BA,IA2BAA,EAAAR,IACAQ,EAAAC,eAAApF,KAGAyE,EAAAQ,EA9BA,QAgDA,QAAA/I,GAAAV,EAAAC,EAAAxe,GACA,GAAAooB,GAAAC,EAAA9J,EAEA,IAAA6J,EACA,MAAAA,EAGA,IAAAnE,GAAA,GAAA3F,GAAAC,EAAAC,EAAAxe,EAWA,OAVAikB,GAAAlS,GAAA,MAAAuW,KACAL,GAAAhE,EAAAlS,IAAAkS,EAEA1F,EAAAgK,aACAhK,EAAAgK,aAAAC,GAAAvE,EAAAlS,IAEAwM,EAAAiK,IAAAvE,EAAAlS,GAGAwV,EAAAtD,GACAA,EAOA,QAAAwE,GAAAC,GAEA,GAAAzhB,EAAA/M,QAAAwuB,GAAA,CACA,GAAAjB,GAAAiB,CACAA,GAAA,KAEAzhB,EAAA1L,KAAAksB,EAAA,SAAAxD,GACA,MAAAA,EAAArF,QACA8J,EAAAzE,EAAArF,SAGA8J,KAAA,KAAAC,KACA1hB,EAAA1L,KAAAksB,EAAA,SAAAxD,GACAA,EAAArF,MAAA8J,IAKA,MADAZ,IAAAY,IAAA,EACAA,EAQA,QAAAE,GAAAF,GACAZ,GAAAY,IAAA,EAaA,QAAAvD,GAAAlB,GACA,iBAAAA,GACAA,EAAAgE,GAAAhE,GACGA,YAAA3F,KAEH2F,EAAAoE,EAAApE,IAGAA,YAAA3F,KAAA2F,EAAA4E,cACA5E,EAAAkB,UASA,QAAAkD,GAAA9J,GACA,GAAA/oB,EAQA,OALAA,GADA+oB,EAAAuK,aACAvK,EAAAuK,aAAAN,IAEAjK,EAAAiK,IAGAP,GAAAzyB,GAQA,QAAAuzB,GAAAvzB,GACA,MAAAyyB,IAAAzyB,GAOA,QAAAwzB,GAAAnwB,EAAA2lB,GACAG,GAAA9lB,GAAA2lB,EAQA,QAAAyK,GAAAC,GACAC,GAAArtB,KAAAotB,GAQA,QAAAE,GAAAC,EAAAC,GACA,mBAAAD,KACAC,EAAAD,EACAA,EAAAE,IAGAhJ,GAAAzkB,MACA4iB,KAAA2K,EACAhtB,KAAAitB,IASA,QAAAE,GAAAC,GACArF,GAAAtoB,KAAA2tB,GAoBA,QAAAC,GAAA1H,EAAA9D,EAAA6E,GACA,mBAAA7E,KACA6E,EAAA7E,EACAA,EAAA,GAGA,IAAA0J,GAAA3gB,EAAAlN,SAAAioB,KAAAvqB,MAAAuqB,KACAgB,MAAA9E,IACG,EAEH8D,GAAAgB,OAAAhB,EAAAgB,OAAA4E,GAAAzT,cACA+J,EAAA8D,EAAAgB,MAEA/b,EAAArJ,OAAA+rB,GAAAC,KAAAhC,IAAA+B,GAAAC,KAAA1L,IAEA6D,GAAA6F,KACA7F,GAAA6F,IACA7E,SACAf,eAIA2F,GAAAzJ,GAAA0J,EAQA,QAAAiC,GAAApyB,EAAAqyB,GACAhK,GAAAiK,SAAAtyB,EAAAqyB,GASA,QAAAE,GAAAvyB,GACA,GAAAwyB,GAAAnK,GAAAngB,IAAAlI,EAEA,IAAAwyB,EACA,MAAAA,GAAAC,kBAAAD,EAAAC,oBAAAD,EAAAvV,WAAAlX,QAaA,QAAA2sB,GAAAd,EAAAe,GACA,mBAAAf,KACAe,EAAAf,EACAA,EAAAgB,IAGA/J,GAAAxkB,MACA4iB,KAAA2K,EACAhtB,KAAA+tB,EACAtE,UAAA,IASA,QAAAwE,GAAAjB,EAAAkB,GACA,mBAAAlB,KACAkB,EAAAlB,EACAA,EAAAmB,IAGAlK,GAAAxkB,MACA4iB,KAAA2K,EACAhtB,KAAAkuB,IAQA,QAAAE,GAAA5xB,EAAA6xB,GACAC,GAAA9xB,GAAA6xB,EAQA,QAAAE,GAAA5qB,GAQA,MAAA6qB,IAAAvwB,OAAA0F,GAQA,QAAA8qB,GAAA9qB,GAQA,MAAA4kB,IAAAtqB,OAAA0F,GAQA,QAAA+qB,GAAA/qB,GASA,MAAAgrB,IAAA1wB,OAAA0F,GAQA,QAAAirB,GAAAjrB,GASA,MAAA8kB,IAAAxqB,OAAA0F,GAoBA,QAAAkrB,GAAAC,GACAlkB,EAAArO,UAAA,eAAAuyB,GAmBA,QAAAC,GAAAC,EAAAC,EAAAC,GACAD,cAAAE,WACAD,EAAAD,EAAAC,aACAD,aAGA,iBAAAA,KACAA,EAAA,oBAAAG,YAAAC,MAAAD,KAAAC,MAAAJ,GAAA,GAAA7tB,UAAA,WAAA6tB,EAAA,SAGAK,GAAAN,IACAC,UACAC,gBASA,QAAAK,GAAAP,GACA,MAAAM,IAAAN,GAz2DA,GAAAQ,GAAAl5B,EAAA,MAIAqsB,GAFA6M,EAAAC,QAEAn5B,EAAA,OAEAsU,EAAAtU,EAAA,MAEA0Q,EAAA1Q,EAAA,MAEA6zB,EAAA7zB,EAAA,MAEA0tB,EAAA1tB,EAAA,MAEAyrB,EAAAzrB,EAAA,MAEAo5B,EAAAp5B,EAAA,MAEAw0B,GAAAx0B,EAAA,MAEAmtB,GAAAntB,EAAA,MAEAq5B,GAAAr5B,EAAA,MAEA4sB,GAAA5sB,EAAA,MAEAk4B,GAAAl4B,EAAA,MAEAq4B,GAAAr4B,EAAA,MAEAiyB,GAAAjyB,EAAA,MAEAmyB,GAAAnyB,EAAA,MAEAs5B,GAAAt5B,EAAA,MAEAouB,GAAApuB,EAAA,MAEAu5B,GAAAv5B,EAAA,MAEA0sB,GAAA6M,GAAA7M,SAEA8M,GAAAx5B,EAAA,MAEAy5B,GAAAz5B,EAAA,MAWA4I,GAAA0L,EAAA1L,KACA+mB,GAAAuI,GAAAvI,eAEA+J,IACArN,QAAA,SAEAuK,GAAA,IAEAc,GAAA,IAEAG,GAAA,IAKA8B,IACAC,WACAC,OAAAjD,GACAkD,UAXA,KAaAC,QACAC,OAAAtC,GACAuC,OAbA,IAcAC,MAAArC,GACAsC,UAbA,IAcAC,MAXA,MAmBAxK,GAAA,sBAEAW,GAAA,kBACAyG,GAAA,iBAkBAtL,GAAAzqB,UAAAsS,GAAA8X,EAAA,MACAK,EAAAzqB,UAAAo5B,IAAAhP,EAAA,OACAK,EAAAzqB,UAAAq5B,IAAAjP,EAAA,OACA/W,EAAA7L,MAAAijB,EAAAD,EAsHA,IAAA8O,IAAA5O,EAAA1qB,SAEAs5B,IAAAzM,SAAA,WAEA,GAAAhqB,KAAAysB,IAAA,CACA,GAAAvB,GAAAlrB,KAAAysB,IAAAvB,MACAlrB,MAAA8rB,KAAA,EACAY,GAAAC,iBAAA7vB,KAAAkD,MACAA,KAAA8rB,KAAA,EACA9rB,KAAAysB,KAAA,EACAI,EAAA/vB,KAAAkD,KAAAkrB,GACA8B,EAAAlwB,KAAAkD,KAAAkrB,KAQAuL,GAAAC,OAAA,WACA,MAAA12B,MAAAooB,MAOAqO,GAAAE,MAAA,WACA,MAAA32B,MAAAsoB,KAkBAmO,GAAAG,UAAA,SAAA1kB,EAAA2kB,EAAAC,GACA,GAAA5L,EAUA,IARA1a,EAAAlN,SAAAuzB,KACAC,EAAAD,EAAAC,WACA5L,EAAA2L,EAAA3L,OACA2L,cAGA72B,KAAA8rB,KAAA,GAEA9rB,KAAAmqB,QAAA0M,EAAA,CACA,GAAAE,GAAA,GAAAxB,IAAAv1B,KAAAspB,MACAvB,EAAA/nB,KAAA+oB,QACA/oB,KAAAmqB,OAAA,GAAAmL,GAAA,UAAAvN,EAAAgP,IACAvO,KAAA,UAAAT,EAAAgP,GAGA/2B,KAAAmqB,OAAAyM,UAAA1kB,EAAAwgB,IAEAoE,GACA92B,KAAAysB,KACAvB,UAEAlrB,KAAA8rB,KAAA,IAEAY,GAAAC,iBAAA7vB,KAAAkD,MAGAA,KAAAsoB,IAAAO,QAEA7oB,KAAAysB,KAAA,EACAzsB,KAAA8rB,KAAA,EACAe,EAAA/vB,KAAAkD,KAAAkrB,GACA8B,EAAAlwB,KAAAkD,KAAAkrB,KAQAuL,GAAAO,SAAA,WACAr2B,QAAAC,IAAA,oDAOA61B,GAAAnkB,SAAA,WACA,MAAAtS,MAAAmqB,QAOAsM,GAAAQ,UAAA,WACA,MAAAj3B,MAAAmqB,QAAAnqB,KAAAmqB,OAAA8M,aAOAR,GAAAS,SAAA,WACA,MAAAl3B,MAAAsoB,IAAA4O,YAOAT,GAAAU,UAAA,WACA,MAAAn3B,MAAAsoB,IAAA6O,aAOAV,GAAAW,oBAAA,WACA,MAAAp3B,MAAAsoB,IAAA+O,QAAAC,KAAAC,OAAA7O,kBAAA,GAUA+N,GAAAe,kBAAA,SAAAjuB,GACA,GAAAwmB,EAAA0H,gBAAA,CAIAluB,QACAA,EAAAmuB,WAAAnuB,EAAAmuB,YAAA,EACAnuB,EAAAouB,gBAAApuB,EAAAouB,iBAAA33B,KAAAmqB,OAAAjhB,IAAA,kBACA,IAAAmf,GAAAroB,KAAAsoB,IACA3B,EAAA0B,EAAAwH,QAAA+H,gBAKA,OAHApnB,GAAA1L,KAAA6hB,EAAA,SAAA5Z,GACAA,EAAAwI,eAAA,KAEA8S,EAAAgP,QAAAG,kBAAAjuB,KAQAktB,GAAAoB,cAAA,WACA,GAAA9H,EAAA+H,aAAA,CAIA,GAAAzP,GAAAroB,KAAAsoB,IACA3B,EAAA0B,EAAAwH,QAAA+H,gBAKA,OAHApnB,GAAA1L,KAAA6hB,EAAA,SAAA5Z,GACAA,EAAAwI,eAAA,KAEA8S,EAAAgP,QAAAU,cAYAtB,GAAAuB,WAAA,SAAAzuB,GACAA,OACA,IAAA0uB,GAAA1uB,EAAA0uB,kBACAjmB,EAAAhS,KAAAmqB,OACA+N,KACAr7B,EAAAmD,IACA8E,IAAAmzB,EAAA,SAAAxY,GACAzN,EAAA+Y,eACAlQ,SAAA4E,GACK,SAAA0N,GACL,GAAAxC,GAAA9tB,EAAAssB,eAAAgE,EAAAnC,SAEAL,GAAAxC,MAAA8H,SACAiI,EAAA7yB,KAAAslB,GACAA,EAAAxC,MAAA8H,QAAA,MAIA,IAAAkI,GAAA,QAAAn4B,KAAAsoB,IAAA+O,QAAAe,UAAAp4B,KAAA63B,gBAAA73B,KAAAw3B,kBAAAjuB,GAAA8uB,UAAA,UAAA9uB,KAAAvI,MAAA,OAIA,OAHA8D,IAAAozB,EAAA,SAAAvN,GACAA,EAAAxC,MAAA8H,QAAA,IAEAkI,GAWA1B,GAAA6B,oBAAA,SAAA/uB,GACA,GAAAwmB,EAAA0H,gBAAA,CAIA,GAAAxF,GAAAjyB,KAAAmoB,MACAtQ,EAAA1L,KAAAiN,IACAxB,EAAAzL,KAAAC,GAGA,IAAAilB,GAAAY,GAAA,CACA,GAAAsG,GAHAtR,IAIAuR,EAJAvR,IAKAwR,GALAxR,IAMAyR,GANAzR,IAOA0R,KACArB,EAAA/tB,KAAAmuB,YAAA,CACAlnB,GAAA1L,KAAA0sB,GAAA,SAAAhE,EAAAlS,GACA,GAAAkS,EAAArF,QAAA8J,EAAA,CACA,GAAA2G,GAAApL,EAAAgK,kBAAAhnB,EAAAjO,MAAAgH,IACAW,EAAAsjB,EAAAkJ,SAAAmC,uBACAN,GAAA1gB,EAAA3N,EAAAquB,QACAC,EAAA3gB,EAAA3N,EAAAsuB,OACAC,EAAA7gB,EAAA1N,EAAAuuB,SACAC,EAAA9gB,EAAA1N,EAAAwuB,UACAC,EAAAtzB,MACAyiB,IAAA8Q,EACAL,KAAAruB,EAAAquB,KACAC,IAAAtuB,EAAAsuB,SAIAD,GAAAjB,EACAkB,GAAAlB,EACAmB,GAAAnB,EACAoB,GAAApB,CACA,IAAA91B,GAAAi3B,EAAAF,EACA92B,EAAAi3B,EAAAF,EACAM,EAAAtoB,EAAAtM,cACA40B,GAAAt3B,QACAs3B,EAAAr3B,QACA,IAAA4mB,GAAAE,EAAAC,KAAAsQ,EAYA,OAXAh0B,IAAA6zB,EAAA,SAAAhd,GACA,GAAA9Q,GAAA,GAAA2qB,IAAAhrB,OACAvJ,OACAyJ,EAAAiR,EAAA4c,KAAAjB,EAAAiB,EACA5tB,EAAAgR,EAAA6c,IAAAlB,EAAAkB,EACA/tB,MAAAkR,EAAAmM,MAGAO,GAAAnH,IAAArW,KAEAwd,EAAA0Q,qBACAD,EAAAT,UAAA,UAAA9uB,KAAAvI,MAAA,QAEA,MAAAhB,MAAAg4B,WAAAzuB,KAuBAktB,GAAAuC,eAAAxoB,EAAAtK,MAAA+jB,EAAA,kBAoBAwM,GAAAwC,iBAAAzoB,EAAAtK,MAAA+jB,EAAA,oBAqCAwM,GAAAyC,aAAA,SAAA9b,EAAA7f,GACA,GACAkF,GADAuP,EAAAhS,KAAAmqB,MAkBA,OAhBA/M,GAAAkN,GAAAnN,YAAAnL,EAAAoL,GACA5M,EAAA1L,KAAAsY,EAAA,SAAAS,EAAA9e,GACAA,EAAAoF,QAAA,cAAAqM,EAAA1L,KAAA+Y,EAAA,SAAApD,GACA,GAAA8P,GAAA9P,EAAA0e,gBAEA,IAAA5O,KAAA6O,aACA32B,KAAA8nB,EAAA6O,aAAA77B,OACO,qBAAAwB,EAAA,CACP,GAAA4rB,GAAA3qB,KAAAipB,WAAAxO,EAAAuQ,SAEAL,MAAAyO,eACA32B,GAAAkoB,EAAAyO,aAAA77B,EAAAkd,MAGKza,OACFA,QACHyC,GAmBAg0B,GAAA4C,UAAA,SAAAjc,EAAAkc,GACA,GAAAtnB,GAAAhS,KAAAmqB,MACA/M,GAAAkN,GAAAnN,YAAAnL,EAAAoL,GACAC,gBAAA,UAEA,IAAAkQ,GAAAnQ,EAAAmQ,YACA1oB,EAAA0oB,EAAAxS,UACAiC,EAAAI,EAAAja,eAAA,mBAAAia,EAAAJ,gBAAAI,EAAAja,eAAA,aAAA0B,EAAAoY,gBAAAG,EAAArI,WAAA,IACA,cAAAiI,EAAAnY,EAAA2a,cAAAxC,EAAAsc,GAAAz0B,EAAAw0B,UAAAC,IASA7C,GAAA8C,wBAAA,SAAAnM,GACA,MAAAptB,MAAAmpB,eAAAiE,EAAApC,WASAyL,GAAA+C,qBAAA,SAAAjM,GACA,MAAAvtB,MAAAipB,WAAAsE,EAAAvC,UAGA,IAAA0B,KAKAjB,OAAA,SAAA1O,GAEA,GAAA/K,GAAAhS,KAAAmqB,OACA+C,EAAAltB,KAAAspB,KACAmH,EAAAzwB,KAAAopB,aACAf,EAAAroB,KAAAsoB,GAEA,IAAAtW,EAAA,CAKAA,EAAAynB,cAMAhJ,EAAApzB,OAAA2C,KAAAmqB,OAAAnqB,KAAAspB,MACAqF,EAAA7xB,KAAAkD,KAAAgS,EAAAkb,GACA2B,EAAA/xB,KAAAkD,KAAAgS,GACAye,EAAAhF,OAAAzZ,EAAAkb,GACAoC,EAAAxyB,KAAAkD,KAAAgS,EAAA+K,GACA0S,EAAA3yB,KAAAkD,KAAAgS,EAAA+K,EAEA,IAAA4a,GAAA3lB,EAAA9I,IAAA,kCACAmuB,EAAAhP,EAAAgP,OAEA,IAAAA,EAAAqC,gBAAArC,EAAAqC,iBACArR,EAAAsR,YAAA,GACAC,WAAAjC,QAEK,CAEL,IAAA5H,EAAA0H,gBAAA,CACA,GAAAoC,GAAAjtB,EAAAqoB,MAAA0C,EACAA,GAAA/qB,EAAAktB,UAAAD,EAAA,OAEA,IAAAA,EAAA,KACAlC,EAAA,eAIAA,EAAAoC,YAAApC,EAAAltB,OAGA4d,EAAAsR,YAAA,GACAC,WAAAjC,IAEA33B,KAAA,4BACAA,KAAAooB,KAAAnnB,MAAAE,WAAA,gBAEAnB,KAAA,0BACAqoB,EAAAsR,YAAA,GACAC,WAAA,OAIA55B,KAAA,4BACAA,KAAAooB,KAAAnnB,MAAAE,WAAAw2B,GAIA7yB,GAAA6oB,GAAA,SAAA/nB,GACAA,EAAAoM,EAAAkb,OAQA8M,WAAA,SAAAjd,GACA,GAAA/K,GAAAhS,KAAAmqB,MAEAnY,KAIAA,EAAAsb,WAAA,SAAAC,GACAA,EAAAxS,UAAAkf,mBAEA3K,EAAAxyB,KAAAkD,KAAAgS,EAAA+K,GACAkQ,EAAAnwB,KAAAkD,KAAA,aAAAgS,EAAA+K,KAOAmd,aAAA,SAAAnd,GACA,GAAA/K,GAAAhS,KAAAmqB,MAEAnY,KAIAA,EAAAsb,WAAA,SAAAC,GACAA,EAAAxS,UAAAkf,mBAEA3K,EAAAxyB,KAAAkD,KAAAgS,EAAA+K,GAAA,GACAkQ,EAAAnwB,KAAAkD,KAAA,eAAAgS,EAAA+K,KAOAod,aAAA,SAAApd,GACA,GAAA/K,GAAAhS,KAAAmqB,MAEAnY,KAIAmd,EAAAryB,KAAAkD,KAAAgS,EAAA+K,GACAkQ,EAAAnwB,KAAAkD,KAAA,eAAAgS,EAAA+K,KAOA4P,iBAAA,SAAA5P,GACA,GAAA/K,GAAAhS,KAAAmqB,MACAyD,GAAA9wB,KAAAkD,KAAA,YAAAgS,GACA4b,EAAA9wB,KAAAkD,KAAA,QAAAgS,GACA0a,GAAAjB,OAAA3uB,KAAAkD,KAAA+c,IA2CA0Z,IAAA/M,OAAA,SAAAngB,GACAvJ,KAAA8rB,KAAA,EAEA9rB,KAAAsoB,IAAAoB,OAAAngB,EAEA,IAAA6wB,GAAAp6B,KAAAmqB,QAAAnqB,KAAAmqB,OAAAkQ,YAAA,QAGA3N,IADA0N,EAAA,6BACAt9B,KAAAkD,MAEAA,KAAAs6B,YAAAt6B,KAAAs6B,WAAA5Q,SACA1pB,KAAA8rB,KAAA,CACA,IAAAZ,GAAA3hB,KAAA2hB,MACA2B,GAAA/vB,KAAAkD,KAAAkrB,GACA8B,EAAAlwB,KAAAkD,KAAAkrB,IASAuL,GAAA8D,YAAA,SAAAn4B,EAAAo4B,GASA,GARAhqB,EAAAlN,SAAAlB,KACAo4B,EAAAp4B,EACAA,EAAA,IAGAA,KAAA,UACApC,KAAAy6B,cAEAvG,GAAA9xB,GAAA,CAIA,GAAA2K,GAAAmnB,GAAA9xB,GAAApC,KAAAspB,KAAAkR,GACAnS,EAAAroB,KAAAsoB,GACAtoB,MAAAs6B,WAAAvtB,EACAsb,EAAAnH,IAAAnU,KAOA0pB,GAAAgE,YAAA,WACAz6B,KAAAs6B,YAAAt6B,KAAAsoB,IAAAmG,OAAAzuB,KAAAs6B,YACAt6B,KAAAs6B,WAAA,MAQA7D,GAAAnF,oBAAA,SAAApF,GACA,GAAAnP,GAAAvM,EAAA3M,UAAgCqoB,EAEhC,OADAnP,GAAA/b,KAAAkwB,GAAAhF,EAAAlrB,MACA+b,GAgBA0Z,GAAA/E,eAAA,SAAA3U,EAAAxN,GAOA,GANAiB,EAAAlN,SAAAiM,KACAA,GACA2b,SAAA3b,IAIA+b,GAAAvO,EAAA/b,OAKAhB,KAAAmqB,OAAA,CAKA,GAAAnqB,KAAA8rB,IAGA,WAFA9rB,MAAA2pB,gBAAAtkB,KAAA0X,EAKAkO,GAAAnuB,KAAAkD,KAAA+c,EAAAxN,EAAA2b,QAEA3b,EAAAsZ,MACA7oB,KAAAsoB,IAAAO,OAAA,IACG,IAAAtZ,EAAAsZ,OAAAkH,EAAA2K,QAAAC,QAMH36B,KAAA2oB,oBAGAkE,EAAA/vB,KAAAkD,KAAAuP,EAAA2b,QACA8B,EAAAlwB,KAAAkD,KAAAuP,EAAA2b,UAwFAuL,GAAAhnB,GAAA8X,EAAA,MACAkP,GAAAF,IAAAhP,EAAA,OACAkP,GAAAD,IAAAjP,EAAA,MA4MA,IAAAqT,KAAA,sGAKAnE,IAAAhN,YAAA,WACA3kB,GAAA81B,GAAA,SAAAC,GACA76B,KAAAsoB,IAAA7Y,GAAAorB,EAAA,SAAA9rB,GACA,GAEAqR,GAFApO,EAAAhS,KAAAsS,WACAvF,EAAAgC,EAAArQ,MAGA,kBAAAm8B,EACAza,SACO,IAAArT,GAAA,MAAAA,EAAAgI,UAAA,CACP,GAAA+lB,GAAA/tB,EAAA+tB,WAAA9oB,EAAA+oB,iBAAAhuB,EAAA6N,YACAwF,GAAA0a,KAAA/b,cAAAhS,EAAAgI,UAAAhI,EAAAiS,kBAEAjS,MAAAiuB,YACA5a,EAAA5P,EAAA3M,UAAmCkJ,EAAAiuB,WAGnC5a,KACAA,EAAAmM,MAAAxd,EACAqR,EAAApf,KAAA65B,EACA76B,KAAA4sB,QAAAiO,EAAAza,KAEKpgB,OACFA,MACH8E,GAAAosB,GAAA,SAAAC,EAAAC,GACApxB,KAAAwpB,eAAA/Z,GAAA2hB,EAAA,SAAA7E,GACAvsB,KAAA4sB,QAAAwE,EAAA7E,IACKvsB,OACFA,OAOHy2B,GAAArE,WAAA,WACA,MAAApyB,MAAAi7B,WAOAxE,GAAAyE,MAAA,WACAl7B,KAAA42B,WACA7H,YACG,IAOH0H,GAAA/H,QAAA,WACA,IAAA1uB,KAAAi7B,UAAA,CAIAj7B,KAAAi7B,WAAA,CACA,IAAA/N,GAAAltB,KAAAspB,KACAtX,EAAAhS,KAAAmqB,MACArlB,IAAA9E,KAAAkpB,iBAAA,SAAAiE,GACAA,EAAAuB,QAAA1c,EAAAkb,KAEApoB,GAAA9E,KAAAgpB,aAAA,SAAAwE,GACAA,EAAAkB,QAAA1c,EAAAkb,KAGAltB,KAAAsoB,IAAAoG,gBAEA8C,IAAAxxB,KAAAsb,MAGA9K,EAAA7L,MAAAkjB,EAAAF,EAqGA,IAAA2D,OAMA4F,MAOApH,MAMA4I,MAMA/E,MAOA9D,MAMA3B,MAKAgM,MACA1C,MACAH,MACAQ,GAAA,GAAAhM,MAAA,EACAqM,GAAA,GAAArM,MAAA,EACAkM,GAAA,qBACAmD,MAgHAiG,GAAAhJ,CAwUA0B,GA5yDA,IA4yDA6B,IACAlD,EAAA1J,IACAkL,EAAA,UAAA2B,IAEA1C,GACAjyB,KAAA,YACAurB,MAAA,YACAd,OAAA,aACCjb,EAAA5I,MACDqrB,GACAjyB,KAAA,WACAurB,MAAA,WACAd,OAAA,YACCjb,EAAA5I,KAGD,IAAAwzB,MACAn/B,GAAAo/B,QAp0DA,QAq0DAp/B,EAAA25B,gBACA35B,EAAA45B,YACA55B,EAAAusB,OACAvsB,EAAA+1B,UACA/1B,EAAAk2B,aACAl2B,EAAAk/B,cACAl/B,EAAAyyB,UACAzyB,EAAA21B,mBACA31B,EAAAq2B,kBACAr2B,EAAAs2B,gBACAt2B,EAAAu2B,uBACAv2B,EAAA02B,oBACA12B,EAAA82B,qBACA92B,EAAAg3B,iBACAh3B,EAAAm3B,2BACAn3B,EAAAs3B,gCACAt3B,EAAAy3B,iBACAz3B,EAAA43B,iBACA53B,EAAA+3B,kBACA/3B,EAAAk4B,uBACAl4B,EAAAo4B,sBACAp4B,EAAAq4B,oBACAr4B,EAAAu4B,kBACAv4B,EAAAw4B,mBACAx4B,EAAA04B,cACA14B,EAAAk5B,SACAl5B,EAAAm/B,WACA,IAAAE,IAAAp/B,EAAA,OACA,WACA,OAAA6C,KAAAu8B,IACAA,GAAAn4B,eAAApE,KACA9C,EAAA8C,GAAAu8B,GAAAv8B,QPorGMw8B,KACA,SAAUv/B,EAAQC,EAASC,GQ9jKjC,QAAAsN,GAAAD,GACAiyB,EAAA1+B,KAAAkD,KAAAuJ,GAMAvJ,KAAAgK,KAAA,KA3BA,GAAAwxB,GAAAt/B,EAAA,MAEAsU,EAAAtU,EAAA,MAEAu/B,EAAAv/B,EAAA,MAEAw/B,EAAAx/B,EAAA,MAEAy/B,EAAAz/B,EAAA,MAEA0/B,EAAAD,EAAAx+B,UAAAy+B,iBACAllB,EAAAvK,KAAAuK,IACAmlB,EAAA,GAAAJ,IAAA,EAkBAjyB,GAAArM,WACAG,YAAAkM,EACAxI,KAAA,OACA86B,aAAA,EACAC,uBAAA,EACAC,MAAA,SAAAC,EAAAC,GACA,GAAAj7B,GAAAjB,KAAAiB,MACA+I,EAAAhK,KAAAgK,MAAA6xB,EACAM,EAAAl7B,EAAAk7B,YACAC,EAAAn7B,EAAAm7B,UACAlvB,EAAAjM,EAAAiM,KACAD,EAAAhM,EAAAgM,OACAovB,EAAAD,KAAAlvB,EAAA6sB,WACAuC,EAAAH,KAAAlvB,EAAA8sB,WACAwC,EAAAH,KAAAlvB,EAAAzC,MACA+xB,EAAAL,KAAAlvB,EAAAxC,KAIA,IAHAxJ,EAAAP,KAAAu7B,EAAAj8B,KAAAk8B,GACAl8B,KAAAy8B,aAAAR,GAEAj8B,KAAA08B,QAAA,CACA,GAAA5yB,EAEAuyB,KACAvyB,KAAA9J,KAAAmK,kBACAnK,KAAA28B,cAAA17B,EAAA27B,YAAAX,EAAA/uB,EAAApD,IAGAwyB,IACAxyB,KAAA9J,KAAAmK,kBACAnK,KAAA68B,gBAAA57B,EAAA27B,YAAAX,EAAAhvB,EAAAnD,IAKAuyB,EAEAJ,EAAAa,UAAA98B,KAAA28B,cACKJ,IACLN,EAAAa,UAAAlB,EAAA9+B,KAAAoQ,EAAA+uB,IAGAK,EACAL,EAAAc,YAAA/8B,KAAA68B,gBACKL,IACLP,EAAAc,YAAAnB,EAAA9+B,KAAAmQ,EAAAgvB,GAGA,IAAAe,GAAA/7B,EAAA+7B,SACAC,EAAAh8B,EAAAg8B,eACAC,IAAAjB,EAAAkB,YAEAxb,EAAA3hB,KAAAo9B,gBACApzB,GAAAqzB,SAAA1b,EAAA,GAAAA,EAAA,IAMA3hB,KAAA87B,aAAAkB,IAAAE,GAAAf,GACAnyB,EAAAszB,UAAArB,GAEAe,IAAAE,IACAlzB,EAAAmzB,YAAAH,GACAhzB,EAAAuzB,kBAAAN,IAGAj9B,KAAAw9B,UAAAxzB,EAAAhK,KAAAsL,OAAA,GAEAtL,KAAAgK,OACAhK,KAAA87B,aAAA,KAIAG,EAAAqB,YACAt9B,KAAAgK,KAAAyzB,YAAAxB,IAGAG,GAAApyB,EAAAkD,KAAA+uB,GAEAe,GAAAE,IACAjB,EAAAkB,YAAAH,GACAf,EAAAgB,kBAGAd,GAAAnyB,EAAAiD,OAAAgvB,GAEAe,GAAAE,GAGAjB,EAAAkB,gBAGAn9B,KAAA09B,iBAAAzB,GAEA,MAAAh7B,EAAA6P,MACA9Q,KAAA29B,aAAA1B,EAAAj8B,KAAAmK,oBAKAqzB,UAAA,SAAAvB,EAAA2B,EAAAC,KACAC,gBAAA,WACA99B,KAAAgK,KAAA,GAAAyxB,IAEAtxB,gBAAA,WACA,GAAAL,GAAA9J,KAAA+9B,MACA98B,EAAAjB,KAAAiB,MACA+8B,GAAAl0B,CAEA,IAAAk0B,EAAA,CACA,GAAAh0B,GAAAhK,KAAAgK,IAEAA,KAEAA,EAAAhK,KAAAgK,KAAA,GAAAyxB,IAGAz7B,KAAA87B,cACA9xB,EAAAszB,YACAt9B,KAAAw9B,UAAAxzB,EAAAhK,KAAAsL,OAAA,IAGAxB,EAAAE,EAAAG,kBAKA,GAFAnK,KAAA+9B,MAAAj0B,EAEA7I,EAAAk7B,YAAA,CAIA,GAAA8B,GAAAj+B,KAAAk+B,kBAAAl+B,KAAAk+B,gBAAAp0B,EAAAvH,QAEA,IAAAvC,KAAA08B,SAAAsB,EAAA,CACAC,EAAAnd,KAAAhX,EAEA,IAAAq0B,GAAAl9B,EAAAsK,UAEA6yB,EAAAn9B,EAAAkX,cAAAnY,KAAAq+B,eAAA,CAEAp9B,GAAAm7B,YACA+B,EAAAhyB,KAAAC,IAAA+xB,EAAAn+B,KAAA+7B,wBAAA,IAKAqC,EAAA,QACAH,EAAAz8B,OAAA28B,EAAAC,EACAH,EAAAx8B,QAAA08B,EAAAC,EACAH,EAAAvzB,GAAAyzB,EAAAC,EAAA,EACAH,EAAAtzB,GAAAwzB,EAAAC,EAAA,GAKA,MAAAH,GAGA,MAAAn0B,IAEAw0B,QAAA,SAAA5zB,EAAAC,GACA,GAAA4zB,GAAAv+B,KAAAw+B,sBAAA9zB,EAAAC,GACAb,EAAA9J,KAAAmK,kBACAlJ,EAAAjB,KAAAiB,KAIA,IAHAyJ,EAAA6zB,EAAA,GACA5zB,EAAA4zB,EAAA,GAEAz0B,EAAAw0B,QAAA5zB,EAAAC,GAAA,CACA,GAAAjB,GAAA1J,KAAAgK,KAAAnF,IAEA,IAAA5D,EAAAk7B,YAAA,CACA,GAAA5wB,GAAAtK,EAAAsK,UACA6yB,EAAAn9B,EAAAkX,cAAAnY,KAAAq+B,eAAA,CAEA,IAAAD,EAAA,QAEAn9B,EAAAm7B,YACA7wB,EAAAY,KAAAC,IAAAb,EAAAvL,KAAA+7B,yBAGAL,EAAA+C,cAAA/0B,EAAA6B,EAAA6yB,EAAA1zB,EAAAC,IACA,SAKA,GAAA1J,EAAAm7B,UACA,MAAAV,GAAA4C,QAAA50B,EAAAgB,EAAAC,GAIA,UAMAwD,MAAA,SAAAuwB,GACA,MAAAA,IACAA,GAAA,GAIAA,IACA1+B,KAAA87B,YAAA4C,EACA1+B,KAAA+9B,MAAA,MAGA/9B,KAAA08B,SAAA,EACA18B,KAAA0N,MAAA1N,KAAA0N,KAAAixB,UAEA3+B,KAAA4+B,cACA5+B,KAAA4+B,aAAAzwB,SAQA0wB,aAAA,SAAAC,GACA,MAAA9+B,MAAA++B,QAAA,QAAAD,IAGAE,OAAA,SAAAjgC,EAAAxB,GAEA,UAAAwB,GACAiB,KAAAi/B,SAAA1hC,GACAyC,KAAA87B,aAAA,EACA97B,KAAA+9B,MAAA,MAEAvC,EAAAr+B,UAAA6hC,OAAAliC,KAAAkD,KAAAjB,EAAAxB,IAQA0hC,SAAA,SAAAlgC,EAAAxB,GACA,GAAA+N,GAAAtL,KAAAsL,KAEA,IAAAA,EAAA,CACA,GAAAkF,EAAAlN,SAAAvE,GACA,OAAAqD,KAAArD,GACAA,EAAAoE,eAAAf,KACAkJ,EAAAlJ,GAAArD,EAAAqD,QAIAkJ,GAAAvM,GAAAxB,CAGAyC,MAAAmO,OAAA,GAGA,MAAAnO,OAEAq+B,aAAA,WACA,GAAAnzB,GAAAlL,KAAAmW,SAKA,OAAAjL,IAAAwL,EAAAxL,EAAA,aAAAwL,EAAAxL,EAAA,YAAAiB,KAAAoV,KAAA7K,EAAAxL,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,SAcA1B,EAAA3F,OAAA,SAAAC,GACA,GAAAo7B,GAAA,SAAA31B,GACAC,EAAA1M,KAAAkD,KAAAuJ,GAEAzF,EAAA7C,OAEAjB,KAAAiB,MAAA6M,WAAAhK,EAAA7C,OAAA,EAIA,IAAAk+B,GAAAr7B,EAAAwH,KAEA,IAAA6zB,EAAA,CACAn/B,KAAAsL,MAAAtL,KAAAsL,SACA,IAAA8zB,GAAAp/B,KAAAsL,KAEA,QAAAlJ,KAAA+8B,IACAC,EAAAj8B,eAAAf,IAAA+8B,EAAAh8B,eAAAf,KACAg9B,EAAAh9B,GAAA+8B,EAAA/8B,IAKA0B,EAAA0kB,MAAA1kB,EAAA0kB,KAAA1rB,KAAAkD,KAAAuJ,GAGAiH,GAAAnM,SAAA66B,EAAA11B,EAEA,QAAApH,KAAA0B,GAEA,UAAA1B,GAAA,UAAAA,IACA88B,EAAA/hC,UAAAiF,GAAA0B,EAAA1B,GAIA,OAAA88B,IAGA1uB,EAAAnM,SAAAmF,EAAAgyB,EACA,IAAA6D,GAAA71B,CACAxN,GAAAC,QAAAojC,GRwlKMC,KACA,SAAUtjC,EAAQC,EAASC,ISr7KjC,SAAAqjC,GAKA,GAAAC,EAEA,qBAAAjI,QACAiI,EAAAjI,OAAAlC,QAEA,oBAAAkK,KACAC,EAAAD,EAAAlK,SAGA,oBAAAmK,KACAA,GAAA,EAGA,IAAAnK,GAAAmK,CACAvjC,GAAAo5B,YTw7K6Bv4B,KAAKb,EAASC,EAAoB,MAIzDujC,KACA,SAAUzjC,EAAQC,GUz8KxB,GAAA8zB,KAIAA,GAFA,oBAAA2P,YAGAhF,WACAiF,MACA3P,MAAA,EAEAyH,iBAAA,EACAK,cAAA,GAUA,SAAA8H,GACA,GAAAD,MACAjF,KAeAmF,EAAAD,EAAApiB,MAAA,qBAGAsiB,EAAAF,EAAApiB,MAAA,mBACAoiB,EAAApiB,MAAA,6BACAuiB,EAAAH,EAAApiB,MAAA,kBAEAmd,EAAA,kBAAAxH,KAAAyM,EAiDA,OA5BAC,KACAnF,EAAAmF,SAAA,EACAnF,EAAAW,QAAAwE,EAAA,IAKAC,IACApF,EAAAoF,IAAA,EACApF,EAAAW,QAAAyE,EAAA,IAGAC,IACArF,EAAAqF,MAAA,EACArF,EAAAW,QAAA0E,EAAA,IAKApF,IACAD,EAAAC,QAAA,IASAD,UACAiF,KACA3P,MAAA,EAGAyH,kBAAAxuB,SAAApI,cAAA,UAAAmD,WACA8zB,aAAA,oBAAAkI,SAKAC,qBAAA,gBAAA1I,UAAAmD,EAAAoF,KAAApF,EAAAqF,KAEAG,uBAAA,iBAAA3I,UAIAmD,EAAAqF,MAAArF,EAAAoF,IAAApF,EAAAW,SAAA,MAlGAqE,UAAAS,UAGA,IAAAd,GAAAtP,CAmGA/zB,GAAAC,QAAAojC,GVs9KMe,KACA,SAAUpkC,EAAQC,EAASC,GWnkLjC,QAAAid,GAAAzO,EAAAC,EAAAnJ,EAAAC,GACAD,EAAA,IACAkJ,GAAAlJ,EACAA,MAGAC,EAAA,IACAkJ,GAAAlJ,EACAA,MAOAzB,KAAA0K,IAKA1K,KAAA2K,IAKA3K,KAAAwB,QAKAxB,KAAAyB,SA5CA,GAAA4+B,GAAAnkC,EAAA,MAEA4Z,EAAA5Z,EAAA,MAKAokC,EAAAD,EAAAr1B,eACA6M,EAAA1L,KAAAiN,IACAxB,EAAAzL,KAAAC,GAsCA+M,GAAAhc,WACAG,YAAA6b,EAKAonB,MAAA,SAAAC,GACA,GAAA91B,GAAAmN,EAAA2oB,EAAA91B,EAAA1K,KAAA0K,GACAC,EAAAkN,EAAA2oB,EAAA71B,EAAA3K,KAAA2K,EACA3K,MAAAwB,MAAAoW,EAAA4oB,EAAA91B,EAAA81B,EAAAh/B,MAAAxB,KAAA0K,EAAA1K,KAAAwB,OAAAkJ,EACA1K,KAAAyB,OAAAmW,EAAA4oB,EAAA71B,EAAA61B,EAAA/+B,OAAAzB,KAAA2K,EAAA3K,KAAAyB,QAAAkJ,EACA3K,KAAA0K,IACA1K,KAAA2K,KAOAK,eAAA,WACA,GAAAy1B,MACAC,KACAC,KACAC,IACA,iBAAA11B,GAIA,GAAAA,EAAA,CAIAu1B,EAAA,GAAAE,EAAA,GAAA3gC,KAAA0K,EACA+1B,EAAA,GAAAG,EAAA,GAAA5gC,KAAA2K,EACA+1B,EAAA,GAAAE,EAAA,GAAA5gC,KAAA0K,EAAA1K,KAAAwB,MACAk/B,EAAA,GAAAC,EAAA,GAAA3gC,KAAA2K,EAAA3K,KAAAyB,OACA6+B,EAAAG,IAAAv1B,GACAo1B,EAAAI,IAAAx1B,GACAo1B,EAAAK,IAAAz1B,GACAo1B,EAAAM,IAAA11B,GACAlL,KAAA0K,EAAAmN,EAAA4oB,EAAA,GAAAC,EAAA,GAAAC,EAAA,GAAAC,EAAA,IACA5gC,KAAA2K,EAAAkN,EAAA4oB,EAAA,GAAAC,EAAA,GAAAC,EAAA,GAAAC,EAAA,GACA,IAAAC,GAAAjpB,EAAA6oB,EAAA,GAAAC,EAAA,GAAAC,EAAA,GAAAC,EAAA,IACAE,EAAAlpB,EAAA6oB,EAAA,GAAAC,EAAA,GAAAC,EAAA,GAAAC,EAAA,GACA5gC,MAAAwB,MAAAq/B,EAAA7gC,KAAA0K,EACA1K,KAAAyB,OAAAq/B,EAAA9gC,KAAA2K,OASAQ,mBAAA,SAAA8V,GACA,GAAAD,GAAAhhB,KACA+gC,EAAA9f,EAAAzf,MAAAwf,EAAAxf,MACAw/B,EAAA/f,EAAAxf,OAAAuf,EAAAvf,OACAyJ,EAAA4K,EAAAzY,QAKA,OAHAyY,GAAAmrB,UAAA/1B,MAAA8V,EAAAtW,GAAAsW,EAAArW,IACAmL,EAAA6L,MAAAzW,KAAA61B,EAAAC,IACAlrB,EAAAmrB,UAAA/1B,KAAA+V,EAAAvW,EAAAuW,EAAAtW,IACAO,GAOAg2B,UAAA,SAAAjgB,GACA,IAAAA,EACA,QAGAA,aAAA9H,KAEA8H,EAAA9H,EAAA9b,OAAA4jB,GAGA,IAAAD,GAAAhhB,KACAmhC,EAAAngB,EAAAtW,EACA02B,EAAApgB,EAAAtW,EAAAsW,EAAAxf,MACA6/B,EAAArgB,EAAArW,EACA22B,EAAAtgB,EAAArW,EAAAqW,EAAAvf,OACA8/B,EAAAtgB,EAAAvW,EACA82B,EAAAvgB,EAAAvW,EAAAuW,EAAAzf,MACAigC,EAAAxgB,EAAAtW,EACA+2B,EAAAzgB,EAAAtW,EAAAsW,EAAAxf,MACA,SAAA2/B,EAAAG,GAAAC,EAAAL,GAAAG,EAAAG,GAAAC,EAAAL,IAEA/C,QAAA,SAAA5zB,EAAAC,GACA,GAAAb,GAAA9J,IACA,OAAA0K,IAAAZ,EAAAY,MAAAZ,EAAAY,EAAAZ,EAAAtI,OAAAmJ,GAAAb,EAAAa,MAAAb,EAAAa,EAAAb,EAAArI,QAMAc,MAAA,WACA,UAAA4W,GAAAnZ,KAAA0K,EAAA1K,KAAA2K,EAAA3K,KAAAwB,MAAAxB,KAAAyB,SAMAqf,KAAA,SAAA0f,GACAxgC,KAAA0K,EAAA81B,EAAA91B,EACA1K,KAAA2K,EAAA61B,EAAA71B,EACA3K,KAAAwB,MAAAg/B,EAAAh/B,MACAxB,KAAAyB,OAAA++B,EAAA/+B,QAEAkgC,MAAA,WACA,OACAj3B,EAAA1K,KAAA0K,EACAC,EAAA3K,KAAA2K,EACAnJ,MAAAxB,KAAAwB,MACAC,OAAAzB,KAAAyB,UAaA0X,EAAA9b,OAAA,SAAAyM,GACA,UAAAqP,GAAArP,EAAAY,EAAAZ,EAAAa,EAAAb,EAAAtI,MAAAsI,EAAArI,QAGA,IAAA49B,GAAAlmB,CACAnd,GAAAC,QAAAojC,GXulLMuC,KACA,SAAU5lC,EAAQC,EAASC,GYpvLjC,QAAAwe,GAAAxI,EAAAS,EAAAX,GAKAhS,KAAA2S,cAMA3S,KAAAgS,UAMAhS,KAAAkS,SAgHA,QAAA2vB,GAAAzlC,EAAA0lC,EAAAnvB,GACA,OAAA/T,GAAA,EAAiBA,EAAAkjC,EAAAjjC,UAEjBijC,EAAAljC,IAOA,OAFAxC,KAAA,iBAAAA,KAAA0lC,EAAAljC,IAAA,OAPqCA,KAkBrC,MAJA,OAAAxC,GAAAuW,IACAvW,EAAAuW,EAAAzJ,IAAA44B,IAGA1lC,EAIA,QAAA2lC,GAAAtnB,EAAAzQ,GACA,GAAAg4B,GAAAC,EAAA/4B,IAAAuR,EAAA,YACA,OAAAunB,KAAAllC,KAAA2d,EAAAzQ,GAAAyQ,EAAA9H,YApLA,GAAAnC,GAAAtU,EAAA,MAEA6zB,EAAA7zB,EAAA,MAEA+lC,EAAA/lC,EAAA,MAEAgmC,EAAAhmC,EAAA,MAEAimC,EAAAjmC,EAAA,MAEAkmC,EAAAlmC,EAAA,MAEAmmC,EAAAnmC,EAAA,MAKAyI,EAAA6L,EAAA7L,KAqCA+V,GAAAvd,WACAG,YAAAod,EAMA8N,KAAA,KAKA8Z,YAAA,SAAApwB,GACA1B,EAAApN,MAAApD,KAAAkS,UAAA,IAQAhJ,IAAA,SAAAc,EAAAu4B,GACA,aAAAv4B,EACAhK,KAAAkS,OAGA2vB,EAAA7hC,KAAAkS,OAAAlS,KAAAwiC,UAAAx4B,IAAAu4B,GAAAR,EAAA/hC,KAAAgK,KAQAqG,WAAA,SAAAtR,EAAAwjC,GACA,GAAArwB,GAAAlS,KAAAkS,OACAhL,EAAA,MAAAgL,MAAAnT,GACA4T,GAAA4vB,GAAAR,EAAA/hC,KAAAjB,EAMA,OAJA,OAAAmI,GAAAyL,IACAzL,EAAAyL,EAAAtC,WAAAtR,IAGAmI,GAQAoL,SAAA,SAAAtI,EAAA2I,GACA,GACA8vB,GADArmC,EAAA,MAAA4N,EAAAhK,KAAAkS,OAAA2vB,EAAA7hC,KAAAkS,OAAAlI,EAAAhK,KAAAwiC,UAAAx4B,GAGA,OADA2I,OAAA8vB,EAAAV,EAAA/hC,KAAAgK,KAAAy4B,EAAAnwB,SAAAtI,GACA,GAAA0Q,GAAAte,EAAAuW,EAAA3S,KAAAgS,UAMA0wB,QAAA,WACA,aAAA1iC,KAAAkS,QAEAunB,YAAA,aAEAl3B,MAAA,WAEA,WAAAO,EADA9C,KAAA1C,aACAkT,EAAAjO,MAAAvC,KAAAkS,UAEAywB,YAAA,SAAAC,GACAX,EAAAU,YAAA3iC,KAAA4iC,IAGAJ,UAAA,SAAAx4B,GAKA,MAJA,iBAAAA,KACAA,IAAA0hB,MAAA,MAGA1hB,GAQA64B,mBAAA,SAAAb,GACAC,EAAAv6B,IAAA1H,KAAA,YAAAgiC,IAEAhtB,mBAAA,WACA,IAAA+a,EAAAC,KAAA,CACA,SAAAhwB,KAAAkS,OAAA6X,UACA,QAAA/pB,KAAAkS,OAAA6X,SACO,IAAA/pB,KAAA2S,YACP,MAAA3S,MAAA2S,YAAAqC,wBAmCAitB,EAAAa,kBAAApoB,GACA/V,EAAA+V,EAAAwnB,GACAv9B,EAAA+V,EAAAynB,GACAx9B,EAAA+V,EAAA0nB,GACAz9B,EAAA+V,EAAA2nB,EACA,IAAAhD,GAAA3kB,CACA1e,GAAAC,QAAAojC,GZoxLM0D,KACA,SAAU/mC,EAAQC,EAASC,Gax8LjC,QAAA8mC,GAAAt4B,GACA,MAAAkZ,OAAAlZ,GACA,KAGAA,KAAA,IAAAghB,MAAA,KACAhhB,EAAA,GAAA0N,QAAA,iCAA2C,QAAA1N,EAAA7L,OAAA,MAAA6L,EAAA,QAS3C,QAAAu4B,GAAAvgB,EAAAwgB,GASA,MARAxgB,OAAA,IAAAhF,cAAAtF,QAAA,iBAAAoF,EAAA2lB,GACA,MAAAA,GAAAld,gBAGAid,GAAAxgB,IACAA,IAAA0gB,OAAA,GAAAnd,cAAAvD,EAAA3b,MAAA,IAGA2b,EAKA,QAAA2gB,GAAA7gC,GACA,MAAA8gC,QAAA9gC,GAAA4V,QAAA,cAA4CA,QAAA,aAAsBA,QAAA,aAAsBA,QAAA,eAAwBA,QAAA,cAiBhH,QAAAkI,GAAAijB,EAAAC,EAAAC,GACAjzB,EAAA/M,QAAA+/B,KACAA,MAGA,IAAAE,GAAAF,EAAA3kC,MAEA,KAAA6kC,EACA,QAKA,QAFA3jB,GAAAyjB,EAAA,GAAAzjB,UAEAnhB,EAAA,EAAiBA,EAAAmhB,EAAAlhB,OAAkBD,IAAA,CACnC,GAAA+kC,GAAAC,EAAAhlC,GACAsI,EAAA28B,EAAAF,EAAA,EACAJ,KAAAnrB,QAAAyrB,EAAAF,GAAAF,EAAAJ,EAAAn8B,MAGA,OAAA48B,GAAA,EAAyBA,EAAAJ,EAAuBI,IAChD,OAAAC,GAAA,EAAmBA,EAAAhkB,EAAAlhB,OAAkBklC,IAAA,CACrC,GAAA78B,GAAAs8B,EAAAM,GAAA/jB,EAAAgkB,GACAR,KAAAnrB,QAAAyrB,EAAAD,EAAAG,GAAAD,GAAAL,EAAAJ,EAAAn8B,MAIA,MAAAq8B,GAYA,QAAAS,GAAAT,EAAAl4B,EAAAo4B,GAIA,MAHAjzB,GAAA1L,KAAAuG,EAAA,SAAA9N,EAAAwB,GACAwkC,IAAAnrB,QAAA,IAAwBrZ,EAAA,IAAY0kC,EAAAJ,EAAA9lC,QAEpCgmC,EASA,QAAAzjB,GAAAnT,EAAAs3B,GACA,MAAAt3B,GAAA,+GAAkH02B,EAAA12B,GAAA,KAA2Cs3B,GAAA,mBAuB7J,QAAAC,GAAAX,EAAAhmC,EAAA4mC,GACA,SAAAZ,GAAA,UAAAA,GAAA,YAAAA,GAAA,cAAAA,GAAA,SAAAA,IACAA,EAAA,cAGA,IAAAa,GAAAC,EAAA/pB,UAAA/c,GACA+mC,EAAAH,EAAA,SACAx5B,EAAAy5B,EAAA,MAAAE,EAAA,cACAC,EAAAH,EAAA,MAAAE,EAAA,aACAxiB,EAAAsiB,EAAA,MAAAE,EAAA,UACAE,EAAAJ,EAAA,MAAAE,EAAA,WACAp5B,EAAAk5B,EAAA,MAAAE,EAAA,aACA1iB,EAAAwiB,EAAA,MAAAE,EAAA,YAEA,OADAf,KAAAnrB,QAAA,KAAAqsB,EAAAF,IAAAnsB,QAAA,IAAAmsB,GAAAnsB,QAAA,OAAAzN,GAAAyN,QAAA,KAAAzN,EAAA,KAAAyN,QAAA,KAAAqsB,EAAA3iB,IAAA1J,QAAA,IAAA0J,GAAA1J,QAAA,KAAAqsB,EAAAD,IAAApsB,QAAA,IAAAosB,GAAApsB,QAAA,KAAAqsB,EAAAv5B,IAAAkN,QAAA,IAAAlN,GAAAkN,QAAA,KAAAqsB,EAAA7iB,IAAAxJ,QAAA,IAAAwJ,GAUA,QAAA8iB,GAAAhiB,GACA,MAAAA,KAAA0gB,OAAA,GAAAnd,cAAAvD,EAAAiiB,OAAA,GAAAjiB,EA7JA,GAAAlS,GAAAtU,EAAA,MAEA0oC,EAAA1oC,EAAA,MAEAmoC,EAAAnoC,EAAA,MAkCA+K,EAAAuJ,EAAAvJ,kBAMA28B,GAAA,6BAEAC,EAAA,SAAAgB,EAAAf,GACA,UAAWe,GAAA,MAAAf,EAAA,GAAAA,GAAA,KAwEXW,EAAA,SAAA/hB,GACA,MAAAA,GAAA,OAAAA,KAwCAoiB,EAAAF,EAAAE,aACAC,EAAAH,EAAAz6B,eACAlO,GAAA+mC,YACA/mC,EAAAgnC,cACAhnC,EAAAgL,oBACAhL,EAAAonC,aACApnC,EAAAqkB,YACArkB,EAAA+nC,kBACA/nC,EAAA6jB,mBACA7jB,EAAAioC,aACAjoC,EAAAyoC,eACAzoC,EAAA6oC,eACA7oC,EAAA8oC,eby9LMC,KACA,SAAUhpC,EAAQC,EAASC,GcvnMjC,QAAAwL,GAAA0J,EAAAhP,EAAA7E,GACA,MAAA6T,GAAA6zB,EAAA7iC,GAAA7E,EASA,QAAA2L,GAAAkI,EAAAhP,GACA,MAAAgP,GAAA6zB,EAAA7iC,GASA,QAAA8iC,GAAA9zB,EAAAhP,GACA,MAAAgP,GAAAjO,eAAA8hC,EAAA7iC,GAQA,QAAAypB,GAAApM,GACA,GAAA0lB,IACA3Y,KAAA,GACAlL,IAAA,GASA,OANA7B,KACAA,IAAAiM,MAAA0Z,GACAD,EAAA3Y,KAAA/M,EAAA,OACA0lB,EAAA7jB,IAAA7B,EAAA,QAGA0lB,EAOA,QAAAE,GAAA5lB,GACAjP,EAAArJ,OAAA,qCAAAgsB,KAAA1T,GAAA,kBAAAA,EAAA,aAOA,QAAAqjB,GAAAwC,EAAAC,GACAD,EAAAE,aAAAF,EAEAA,EAAAzhC,OAAA,SAAA4hC,GACA,GAAAvoC,GAAA8C,KAEA0lC,EAAA,WACAD,EAAAD,aAGAC,EAAAD,aAAAx/B,MAAAhG,KAAA+F,WAFA7I,EAAA8I,MAAAhG,KAAA+F,WAYA,OANAyK,GAAA3M,OAAA6hC,EAAAvoC,UAAAsoC,GACAC,EAAA7hC,OAAA7D,KAAA6D,OACA6hC,EAAAC,YACAD,EAAAE,aACAp1B,EAAAnM,SAAAqhC,EAAA1lC,MACA0lC,EAAAxoC,aACAwoC,GAUA,QAAAC,GAAA3gC,EAAAklB,GACA,GAAArkB,GAAA2K,EAAAzJ,MAAAhB,UAAA,EACA,OAAA/F,MAAA9C,WAAAC,UAAA+sB,GAAAlkB,MAAAhB,EAAAa,GAGA,QAAA+/B,GAAA5gC,EAAAklB,EAAArkB,GACA,MAAA7F,MAAA9C,WAAAC,UAAA+sB,GAAAlkB,MAAAhB,EAAAa,GAUA,QAAAggC,GAAAC,EAAAC,GA2FA,QAAAC,GAAAvmB,GACA,GAAAwmB,GAAApW,EAAApQ,EAAA+M,KAOA,OALAyZ,MAAAC,KACAD,EAAApW,EAAApQ,EAAA+M,SACAyZ,EAAAC,IAAA,GAGAD,EAlGAF,OAUA,IAAAlW,KA2FA,IAzFAiW,EAAAK,cAAA,SAAAjY,EAAAzO,GACA,GAAAA,EAIA,GAHA4lB,EAAA5lB,GACAA,EAAAoM,EAAApM,GAEAA,EAAA6B,KAEO,GAAA7B,EAAA6B,MAAA4kB,EAAA,CACP,GAAAD,GAAAD,EAAAvmB,EACAwmB,GAAAxmB,EAAA6B,KAAA4M,OAHA2B,GAAApQ,EAAA+M,MAAA0B,CAOA,OAAAA,IAGA4X,EAAA1X,SAAA,SAAAgY,EAAAtrB,EAAAurB,GACA,GAAAnY,GAAA2B,EAAAuW,EAMA,IAJAlY,KAAAgY,KACAhY,EAAApT,EAAAoT,EAAApT,GAAA,MAGAurB,IAAAnY,EACA,SAAA5mB,OAAAwT,EAAA,aAAAsrB,EAAA,KAAAtrB,GAAA,kCAAAsrB,EAAA,6BAGA,OAAAlY,IAGA4X,EAAAQ,qBAAA,SAAA7mB,GACAA,EAAAoM,EAAApM,EACA,IAAAhd,MACArG,EAAAyzB,EAAApQ,EAAA+M,KAUA,OARApwB,MAAA8pC,GACA11B,EAAA1L,KAAA1I,EAAA,SAAAmqC,EAAAvlC,GACAA,IAAAklC,GAAAzjC,EAAA4C,KAAAkhC,KAGA9jC,EAAA4C,KAAAjJ,GAGAqG,GAGAqjC,EAAAU,SAAA,SAAA/mB,GAGA,MADAA,GAAAoM,EAAApM,KACAoQ,EAAApQ,EAAA+M,OAOAsZ,EAAAW,qBAAA,WACA,GAAAC,KAIA,OAHAl2B,GAAA1L,KAAA+qB,EAAA,SAAAzzB,EAAA4E,GACA0lC,EAAArhC,KAAArE,KAEA0lC,GASAZ,EAAAa,YAAA,SAAAlnB,GACAA,EAAAoM,EAAApM,EACA,IAAArjB,GAAAyzB,EAAApQ,EAAA+M,KACA,OAAApwB,MAAA8pC,IAGAJ,EAAAja,iBAaAka,EAAAa,mBAAA,CACA,GAAAC,GAAAf,EAAAjiC,MAEAgjC,KACAf,EAAAjiC,OAAA,SAAA4hC,GACA,GAAAC,GAAAmB,EAAA/pC,KAAAkD,KAAAylC,EACA,OAAAK,GAAAK,cAAAT,EAAAD,EAAAzkC,QAKA,MAAA8kC,GAOA,QAAAnD,GAAAvmC,EAAAwmC,IA7OA,GAAAxN,GAAAl5B,EAAA,MAIAsU,GAFA4kB,EAAAC,QAEAn5B,EAAA,OAEAkpC,EAAA,IACAc,EAAA,iCACAjB,EAAA,SAqPAhpC,GAAAyL,MACAzL,EAAAiN,MACAjN,EAAAipC,SACAjpC,EAAA4vB,iBACA5vB,EAAA6mC,oBACA7mC,EAAA4pC,wBACA5pC,EAAA0mC,ed4oMMmE,KACA,SAAU9qC,EAAQC,EAASC,GetuMjC,QAAA6qC,GAAAtnB,GACA,GAAAunB,KAKA,OAJAx2B,GAAA1L,KAAAsvB,EAAAkS,qBAAA7mB,GAAA,SAAAyO,GACA+Y,EAAAjhC,MAAAghC,EAAA9Y,EAAA/wB,UAAAy4B,oBAGAplB,EAAArL,IAAA6hC,EAAA,SAAAhmC,GACA,MAAAihC,GAAApW,eAAA7qB,GAAAwrB,OAjLA,GAAAhc,GAAAtU,EAAA,MAEAwe,EAAAxe,EAAA,MAEAgrC,EAAAhrC,EAAA,MAEA+lC,EAAA/lC,EAAA,MAEA6N,EAAA7N,EAAA,MAEAirC,EAAAjrC,EAAA,MAOA+qC,EAAAj+B,MAAA7L,UAAAkI,KASA+uB,EAAA1Z,EAAA7W,QACA7C,KAAA,YAMAsa,GAAA,GAKAlZ,KAAA,GAMAyY,SAAA,GAMAC,QAAA,GAMA0T,eAAA,EAMA4Y,cAAA,KAMAp1B,QAAA,KAQAq1B,mBAMAC,IAAA,KAQAC,WAAA,KACA/B,aAAA,SAAAtzB,EAAAS,EAAAX,EAAAw1B,GACA9sB,EAAA5d,KAAAkD,KAAAkS,EAAAS,EAAAX,EAAAw1B,GACAxnC,KAAAsnC,IAAAJ,EAAAO,OAAA,mBAEAjf,KAAA,SAAAtW,EAAAS,EAAAX,EAAAw1B,GACAxnC,KAAA0nC,qBAAAx1B,EAAAF,IAEA01B,qBAAA,SAAAx1B,EAAAF,GACA,GAAAu1B,GAAAvnC,KAAAunC,WACAI,EAAAJ,EAAAx9B,EAAA69B,gBAAA11B,MACA21B,EAAA71B,EAAA81B,UACAt3B,GAAApN,MAAA8O,EAAA21B,EAAA3+B,IAAAlJ,KAAA6a,WACArK,EAAApN,MAAA8O,EAAAlS,KAAA+nC,oBAEAR,GACAx9B,EAAAi+B,iBAAA91B,EAAAy1B,EAAAJ,IAGAjF,YAAA,SAAApwB,EAAAs1B,GACAh3B,EAAApN,MAAApD,KAAAkS,UAAA,EACA,IAAAq1B,GAAAvnC,KAAAunC,UAEAA,IACAx9B,EAAAi+B,iBAAAhoC,KAAAkS,SAAAq1B,IAIAU,cAAA,SAAAC,EAAAC,KACAJ,iBAAA,WACA,IAAA9F,EAAAiD,OAAAllC,KAAA,oBAIA,IAHA,GAAAooC,MACAC,EAAAroC,KAAA1C,YAEA+qC,GAAA,CACA,GAAA94B,GAAA84B,EAAAlrC,UAAAiqC,aACA73B,IAAA64B,EAAA/iC,KAAAkK,GACA84B,IAAAnrC,WAKA,OAFAkqC,MAEAxoC,EAAAwpC,EAAAvpC,OAAA,EAAsCD,GAAA,EAAQA,IAC9CwoC,EAAA52B,EAAApN,MAAAgkC,EAAAgB,EAAAxpC,IAAA,EAGAqjC,GAAAv6B,IAAA1H,KAAA,kBAAAonC,GAGA,MAAAnF,GAAA/4B,IAAAlJ,KAAA,oBAEAsoC,uBAAA,SAAAztB,GACA,MAAA7a,MAAAgS,QAAA8L,iBACAjD,WACAM,MAAAnb,KAAAkJ,IAAA2R,EAAA,YACAS,GAAAtb,KAAAkJ,IAAA2R,EAAA,aAkBAonB,GAAA4D,sBAAAzR,GACAwS,oBAAA,IAEAM,EAAAqB,uBAAAnU,GAEA8S,EAAAsB,wBAAApU,EAAA2S,GAaAv2B,EAAA7L,MAAAyvB,EAAA+S,EACA,IAAA9H,GAAAjL,CACAp4B,GAAAC,QAAAojC,Gfs5MMoJ,KACA,SAAUzsC,EAAQC,EAASC,GgBtjNjC,QAAAwsC,GAAA/mB,EAAAlH,GACA,GAMAkuB,GACAC,EACAC,EARAC,EAAAnnB,EAAA3gB,KACAoY,EAAAqB,EAAAsuB,SACA38B,EAAAqO,EAAAuuB,SACAC,EAAA,MAAA7vB,EACA8vB,EAAA,MAAA98B,EACA+8B,EAAAxnB,EAAAynB,WA8EA,OAzEA,YAAAN,EACAH,GAAAluB,EAAAvR,IAAA,aAAArK,QAEA+pC,EAAAnuB,EAAAvR,IAAA,eAEAsH,EAAA/M,QAAAmlC,KACAA,MAAA,EAAAA,GAAA,IAGA,kBAAAA,GAAA,KACAA,GAAA,MAGAA,EAAA,GAAAvE,EAAAphB,aAAA2lB,EAAA,MACAA,EAAA,GAAAvE,EAAAphB,aAAA2lB,EAAA,MACAC,EAAAM,EAAA,GAAAA,EAAA,IAAAh9B,KAAAuK,IAAAyyB,EAAA,KAgBA,MAAA/vB,IACAA,EAAA,YAAA0vB,EAAAH,EAAA,EAAApuB,IAAA4uB,EAAA,GAAAP,EAAA,GAAAC,GAGA,MAAAz8B,IACAA,EAAA,YAAA08B,EAAAH,IAAA,EAAApuB,IAAA4uB,EAAA,GAAAP,EAAA,GAAAC,GAGA,YAAAzvB,EACAA,EAAA+vB,EAAA,GACG,mBAAA/vB,KACHA,KACAA,IAAA+vB,EAAA,GACA/8B,IAAA+8B,EAAA,MAIA,YAAA/8B,EACAA,EAAA+8B,EAAA,GACG,mBAAA/8B,KACHA,KACAgN,IAAA+vB,EAAA,GACA/8B,IAAA+8B,EAAA,OAIA,MAAA/vB,IAAAoL,SAAApL,QAAAmB,MACA,MAAAnO,IAAAoY,SAAApY,QAAAmO,KACAoH,EAAA0nB,SAAA74B,EAAAjK,MAAA6S,IAAA5I,EAAAjK,MAAA6F,IAEAqO,EAAA6uB,qBAEAlwB,EAAA,GAAAhN,EAAA,IAAA68B,IACA7vB,EAAA,GAIAA,EAAA,GAAAhN,EAAA,IAAA88B,IACA98B,EAAA,KAIAgN,EAAAhN,GAGA,QAAAm9B,GAAA5nB,EAAAlH,GACA,GAAA+uB,GAAAd,EAAA/mB,EAAAlH,GACAwuB,EAAA,MAAAxuB,EAAAsuB,SACAG,EAAA,MAAAzuB,EAAAuuB,SACAS,EAAAhvB,EAAAvR,IAAA,cAEA,SAAAyY,EAAA3gB,OACA2gB,EAAA+nB,KAAAjvB,EAAAvR,IAAA,WAGA,IAAA4/B,GAAAnnB,EAAA3gB,IACA2gB,GAAAgoB,UAAAH,EAAA,GAAAA,EAAA,IACA7nB,EAAAioB,YACAH,cACAR,SACAC,SACAW,YAAA,aAAAf,GAAA,SAAAA,EAAAruB,EAAAvR,IAAA,oBACA4gC,YAAA,aAAAhB,GAAA,SAAAA,EAAAruB,EAAAvR,IAAA,qBAOA,IAAA4d,GAAArM,EAAAvR,IAAA,WAEA,OAAA4d,GACAnF,EAAAooB,aAAApoB,EAAAooB,YAAAjjB,GAUA,QAAAkjB,GAAAvvB,EAAAwvB,GAGA,GAFAA,KAAAxvB,EAAAvR,IAAA,QAGA,OAAA+gC,GAEA,eACA,UAAAC,GAAAzvB,EAAA0vB,iBAAAljB,UAEA,aACA,UAAAmjB,EAGA,SACA,OAAAC,EAAAjc,SAAA6b,IAAAG,GAAA/sC,OAAAod,IASA,QAAA6vB,GAAAC,GACA,GAAArmB,GAAAqmB,EAAA5oB,MAAAynB,YACAhwB,EAAA8K,EAAA,GACA9X,EAAA8X,EAAA,EACA,SAAA9K,EAAA,GAAAhN,EAAA,GAAAgN,EAAA,GAAAhN,EAAA,GAYA,QAAAo+B,GAAAC,EAAAC,EAAAC,EAAAC,EAAAj5B,GACA,GAAAk5B,GACAC,EAAA,EACAC,EAAA,EACA9zB,GAAA2zB,EAAAj5B,GAAA,IAAAxF,KAAAyF,GACAo5B,EAAA,CAEAN,GAAA7rC,OAAA,KAEAmsC,EAAA7+B,KAAAmY,MAAAomB,EAAA7rC,OAAA,IAGA,QAAAD,GAAA,EAAiBA,EAAA6rC,EAAA5rC,OAAuBD,GAAAosC,EAAA,CACxC,GAAAC,GAAAR,EAAA7rC,GAGAkL,EAAA86B,EAAAz6B,gBAAAugC,EAAA9rC,GAAA+rC,EAAA,eACA7gC,GAAAY,GAAAugC,EAAA9+B,KAAA++B,IAAAj0B,GACAnN,EAAAa,GAAAsgC,EAAA9+B,KAAAg/B,IAAAl0B,GAEAnN,EAAAtI,OAAA,IACAsI,EAAArI,QAAA,IAEAopC,EAGAA,EAAA3J,UAAAp3B,IACAihC,IACAD,EAAA3+B,KAAAC,IAAA0+B,EAAAC,KAEAF,EAAAtK,MAAAz2B,GAEAihC,EAAA,GARAF,EAAA/gC,EAAAvH,QAYA,WAAAuoC,GAAAE,EAAA,EACAA,GAGAF,EAAA,GAAAE,EAAA,EASA,QAAAI,GAAAb,EAAAc,GACA,GAAA1pB,GAAA4oB,EAAA5oB,MACA+oB,EAAA/oB,EAAA2pB,iBACAC,EAAA5pB,EAAA6pB,UAEA,wBAAAH,IACAA,EAAA,SAAA9H,GACA,gBAAAr8B,GACA,MAAAq8B,GAAAnrB,QAAA,UAAmC,MAAAlR,IAAA,MAE9BmkC,GAGL76B,EAAArL,IAAAulC,EAAAW,IACG,mBAAAA,GACH76B,EAAArL,IAAAomC,EAAA,SAAAE,EAAAlrB,GACA,MAAA8qB,GAAAK,EAAAnB,EAAAkB,GAAAlrB,IACKvgB,MAEL0qC,EAIA,QAAAgB,GAAAnB,EAAAhtC,GAIA,mBAAAgtC,EAAAvpC,KAAAupC,EAAA5oB,MAAAgqB,SAAApuC,KAvQA,GAAA63B,GAAAl5B,EAAA,MAIAsU,GAFA4kB,EAAAC,QAEAn5B,EAAA,OAEA0oC,EAAA1oC,EAAA,MAEAguC,EAAAhuC,EAAA,MAEAkuC,EAAAluC,EAAA,MAEAmuC,EAAAnuC,EAAA,MAEAmoC,EAAAnoC,EAAA,KAEAA,GAAA,MAEAA,EAAA,MAwPAD,EAAAysC,iBACAzsC,EAAAstC,kBACAttC,EAAA+tC,qBACA/tC,EAAAquC,kBACAruC,EAAAuuC,uBACAvuC,EAAAmvC,qBACAnvC,EAAAyvC,mBhBolNME,KACA,SAAU5vC,EAAQC,EAASC,GiB90NjC,QAAA2vC,GAAAC,EAAA3jB,EAAA4jB,EAAAC,EAAAC,GACA,GAAAvhC,GAAA,EACAC,EAAA,CAEA,OAAAqhC,IACAA,EAAA/kB,KAGA,MAAAglB,IACAA,EAAAhlB,IAGA,IAAAilB,GAAA,CACA/jB,GAAAgkB,UAAA,SAAAz9B,EAAA6R,GACA,GAIA6rB,GACAC,EALAhgC,EAAAqC,EAAArC,SACAvC,EAAA4E,EAAAvE,kBACAmiC,EAAAnkB,EAAAokB,QAAAhsB,EAAA,GACAisB,EAAAF,KAAAniC,iBAIA,mBAAA2hC,EAAA,CACA,GAAAW,GAAA3iC,EAAAtI,OAAAgrC,KAAA9hC,EAAAZ,EAAAY,EAAA,EACA0hC,GAAA1hC,EAAA+hC,EAGAL,EAAAJ,GAAAt9B,EAAAg+B,SACAhiC,EAAA,EACA0hC,EAAAK,EACA9hC,GAAAuhC,EAAAH,EACAG,EAAApiC,EAAArI,QAGAyqC,EAAA//B,KAAAC,IAAA8/B,EAAApiC,EAAArI,YAEK,CACL,GAAAkrC,GAAA7iC,EAAArI,QAAA+qC,KAAA7hC,EAAAb,EAAAa,EAAA,EACA0hC,GAAA1hC,EAAAgiC,EAEAN,EAAAJ,GAAAv9B,EAAAg+B,SACAhiC,GAAAwhC,EAAAH,EACAphC,EAAA,EACA0hC,EAAAM,EACAT,EAAApiC,EAAAtI,OAEA0qC,EAAA//B,KAAAC,IAAA8/B,EAAApiC,EAAAtI,OAIAkN,EAAAg+B,UAIArgC,EAAA,GAAA3B,EACA2B,EAAA,GAAA1B,EACA,eAAAmhC,EAAAphC,EAAA0hC,EAAAL,EAAAphC,EAAA0hC,EAAAN,KAgDA,QAAAa,GAAAC,EAAAC,EAAAC,GACA,GAAAC,GAAAF,EAAAtrC,MACAyrC,EAAAH,EAAArrC,OACAiJ,EAAAuY,EAAA4pB,EAAAniC,EAAAsiC,GACAriC,EAAAsY,EAAA4pB,EAAAliC,EAAAsiC,GACAvhC,EAAAuX,EAAA4pB,EAAAnhC,GAAAshC,GACAnhC,EAAAoX,EAAA4pB,EAAAhhC,GAAAohC,EAMA,QALArpB,MAAAlZ,IAAAkZ,MAAAR,WAAAypB,EAAAniC,SAAA,IACAkZ,MAAAlY,IAAAkY,MAAAR,WAAAypB,EAAAnhC,UAAAshC,IACAppB,MAAAjZ,IAAAiZ,MAAAR,WAAAypB,EAAAliC,SAAA,IACAiZ,MAAA/X,IAAA+X,MAAAR,WAAAypB,EAAAhhC,UAAAohC,GACAF,EAAAluB,EAAA5X,kBAAA8lC,GAAA,IAEAvrC,MAAA2K,KAAAC,IAAAV,EAAAhB,EAAAqiC,EAAA,GAAAA,EAAA,MACAtrC,OAAA0K,KAAAC,IAAAP,EAAAlB,EAAAoiC,EAAA,GAAAA,EAAA,OAqBA,QAAAG,GAAAL,EAAAC,EAAAC,GACAA,EAAAluB,EAAA5X,kBAAA8lC,GAAA,EACA,IAAAC,GAAAF,EAAAtrC,MACAyrC,EAAAH,EAAArrC,OACA82B,EAAAtV,EAAA4pB,EAAAtU,KAAAyU,GACAxU,EAAAvV,EAAA4pB,EAAArU,IAAAyU,GACAxU,EAAAxV,EAAA4pB,EAAApU,MAAAuU,GACAtU,EAAAzV,EAAA4pB,EAAAnU,OAAAuU,GACAzrC,EAAAyhB,EAAA4pB,EAAArrC,MAAAwrC,GACAvrC,EAAAwhB,EAAA4pB,EAAAprC,OAAAwrC,GACAE,EAAAJ,EAAA,GAAAA,EAAA,GACAK,EAAAL,EAAA,GAAAA,EAAA,GACAhiC,EAAA8hC,EAAA9hC,MA8CA,QA5CA6Y,MAAApiB,KACAA,EAAAwrC,EAAAvU,EAAA2U,EAAA7U,GAGA3U,MAAAniB,KACAA,EAAAwrC,EAAAvU,EAAAyU,EAAA3U,GAGA,MAAAztB,IAQA6Y,MAAApiB,IAAAoiB,MAAAniB,KACAsJ,EAAAiiC,EAAAC,EACAzrC,EAAA,GAAAwrC,EAEAvrC,EAAA,GAAAwrC,GAKArpB,MAAApiB,KACAA,EAAAuJ,EAAAtJ,GAGAmiB,MAAAniB,KACAA,EAAAD,EAAAuJ,IAKA6Y,MAAA2U,KACAA,EAAAyU,EAAAvU,EAAAj3B,EAAA4rC,GAGAxpB,MAAA4U,KACAA,EAAAyU,EAAAvU,EAAAj3B,EAAA0rC,GAIAN,EAAAtU,MAAAsU,EAAApU,OACA,aACAF,EAAAyU,EAAA,EAAAxrC,EAAA,EAAAurC,EAAA,EACA,MAEA,aACAxU,EAAAyU,EAAAxrC,EAAA4rC,EAIA,OAAAP,EAAArU,KAAAqU,EAAAnU,QACA,aACA,aACAF,EAAAyU,EAAA,EAAAxrC,EAAA,EAAAsrC,EAAA,EACA,MAEA,cACAvU,EAAAyU,EAAAxrC,EAAA0rC,EAKA5U,KAAA,EACAC,KAAA,EAEA5U,MAAApiB,KAEAA,EAAAwrC,EAAAI,EAAA7U,GAAAE,GAAA,IAGA7U,MAAAniB,KAEAA,EAAAwrC,EAAAE,EAAA3U,GAAAE,GAAA,GAGA,IAAA5uB,GAAA,GAAAqP,GAAAof,EAAAwU,EAAA,GAAAvU,EAAAuU,EAAA,GAAAvrC,EAAAC,EAEA,OADAqI,GAAAijC,SACAjjC,EA0CA,QAAAujC,GAAAtgC,EAAA8/B,EAAAC,EAAAC,EAAAx9B,GACA,GAAAi1B,IAAAj1B,MAAA+9B,IAAA/9B,EAAA+9B,GAAA,GACAvsB,GAAAxR,MAAA+9B,IAAA/9B,EAAA+9B,GAAA,GACAC,EAAAh+B,KAAAg+B,cAAA,KAEA,IAAA/I,GAAAzjB,EAAA,CAIA,GAAAjX,EAEA,YAAAyjC,EACAzjC,EAAA,UAAAiD,EAAA/L,KAAA,GAAAmY,GAAA,KAAA0zB,EAAArrC,OAAA,GAAAqrC,EAAAprC,QAAA,GAAAsL,EAAA5C,sBAIA,IAFAL,EAAAiD,EAAA5C,kBAEA4C,EAAAygC,qBAAA,CACA,GAAAr3B,GAAApJ,EAAAkJ,mBAGAnM,KAAAvH,QACAuH,EAAAkB,eAAAmL,GAKA02B,EAAAK,EAAA18B,EAAA1M,UACAtC,MAAAsI,EAAAtI,MACAC,OAAAqI,EAAArI,QACGorC,GAAAC,EAAAC,EAIH,IAAAU,GAAA1gC,EAAAV,SACAqhC,EAAAlJ,EAAAqI,EAAAniC,EAAAZ,EAAAY,EAAA,EACAijC,EAAA5sB,EAAA8rB,EAAAliC,EAAAb,EAAAa,EAAA,CACAoC,GAAAyI,KAAA,mBAAA+3B,GAAAG,EAAAC,IAAAF,EAAA,GAAAC,EAAAD,EAAA,GAAAE,KAQA,QAAAC,GAAA17B,EAAA27B,GACA,aAAA37B,EAAA47B,EAAAD,GAAA,WAAA37B,EAAA47B,EAAAD,GAAA,WAAA37B,EAAA47B,EAAAD,GAAA,IA6BA,QAAA7F,GAAA+F,EAAAC,EAAAz+B,GASA,QAAAnM,GAAA6qC,EAAAJ,GACA,GAAAK,MACAC,EAAA,EACAC,KACAC,EAAA,CAaA,IAXAvpC,EAAAmpC,EAAA,SAAA7rC,GACAgsC,EAAAhsC,GAAA2rC,EAAA3rC,KAEA0C,EAAAmpC,EAAA,SAAA7rC,GAGAksC,EAAAN,EAAA5rC,KAAA8rC,EAAA9rC,GAAAgsC,EAAAhsC,GAAA4rC,EAAA5rC,IACAmsC,EAAAL,EAAA9rC,IAAA+rC,IACAI,EAAAH,EAAAhsC,IAAAisC,MAGAG,EAAAX,GAQA,MANAU,GAAAP,EAAAC,EAAA,IACAG,EAAAH,EAAA,SACOM,EAAAP,EAAAC,EAAA,MACPG,EAAAH,EAAA,UAGAG,CAOA,IA3BA,IA2BAC,GAAAF,EAKA,IAAAA,GAhCA,EAiCA,MAAAD,EAGA,QAAAtvC,GAAA,EAAuBA,EAAAqvC,EAAApvC,OAAkBD,IAAA,CACzC,GAAAwD,GAAA6rC,EAAArvC,EAEA,KAAA0vC,EAAAJ,EAAA9rC,IAAAksC,EAAAP,EAAA3rC,GAAA,CACA8rC,EAAA9rC,GAAA2rC,EAAA3rC,EACA,QAIA,MAAA8rC,GAjBA,MAAAE,GAqBA,QAAAE,GAAAlyC,EAAAgG,GACA,MAAAhG,GAAA+G,eAAAf,GAGA,QAAAmsC,GAAAnyC,EAAAgG,GACA,aAAAhG,EAAAgG,IAAA,SAAAhG,EAAAgG,GAGA,QAAA0e,GAAAmtB,EAAAvvC,EAAA8D,GACAsC,EAAAmpC,EAAA,SAAA7rC,GACA1D,EAAA0D,GAAAI,EAAAJ,MAxEAoO,EAAAlN,SAAAiM,UACA,IAAAi/B,GAAAj/B,EAAAi/B,YACAh+B,EAAA/M,QAAA+qC,aACA,IAAAC,GAAArrC,EAAA0qC,EAAA,MACAY,EAAAtrC,EAAA0qC,EAAA,KACAhtB,GAAAgtB,EAAA,GAAAC,EAAAU,GACA3tB,EAAAgtB,EAAA,GAAAC,EAAAW,GA6EA,QAAA9G,GAAAplC,GACA,MAAAmsC,MAA4BnsC,GAS5B,QAAAmsC,GAAAjwC,EAAA8D,GAIA,MAHAA,IAAA9D,GAAAoG,EAAA8pC,EAAA,SAAAxsC,GACAI,EAAAW,eAAAf,KAAA1D,EAAA0D,GAAAI,EAAAJ,MAEA1D,EAtdA,GAAA8R,GAAAtU,EAAA,MAEAid,EAAAjd,EAAA,MAEA2yC,EAAA3yC,EAAA,MAEA+mB,EAAA4rB,EAAA5rB,aAEApE,EAAA3iB,EAAA,MAGA4I,EAAA0L,EAAA1L,KAKA8pC,GAAA,gDAKAd,IAAA,mDAsEAgB,EAAAjD,EASAkD,EAAAv+B,EAAAtK,MAAA2lC,EAAA,YASAmD,EAAAx+B,EAAAtK,MAAA2lC,EAAA,aA4WA5vC,GAAA2yC,kBACA3yC,EAAA6xC,WACA7xC,EAAA6yC,MACA7yC,EAAA8yC,OACA9yC,EAAA+yC,OACA/yC,EAAA2wC,mBACA3wC,EAAAixC,gBACAjxC,EAAAoxC,kBACApxC,EAAA2xC,iBACA3xC,EAAA+rC,mBACA/rC,EAAA2rC,kBACA3rC,EAAA0yC,oBjB22NMM,KACA,SAAUjzC,EAAQC,EAASC,GkB9zOjC,QAAAiG,GAAAC,EAAAC,GACAC,EAAAF,GAAAC,EAUA,QAAA60B,GAAApmB,EAAA65B,GACAA,KAAAuE,CACA,IAAAnwC,GAAA+R,EAAA,IAAA65B,CAEA,IAAAwE,EAAApwC,GACA,MAAAowC,GAAApwC,EAMA,QAHAqwC,IAAAt+B,EAAA,IAAA4a,MAAA,MACAlqB,EAAA,EAEA5C,EAAA,EAAAywC,EAAAD,EAAAvwC,OAAuCD,EAAAywC,EAAOzwC,IAE9C4C,EAAA2K,KAAAC,IAAAkjC,EAAAF,EAAAxwC,GAAA+rC,GAAAnpC,QAUA,OAPA+tC,GAAAC,IACAD,EAAA,EACAJ,MAGAI,IACAJ,EAAApwC,GAAAyC,EACAA,EAeA,QAAA2I,GAAA2G,EAAA65B,EAAAr3B,EAAAC,EAAAO,EAAAtB,EAAAi9B,GACA,MAAAj9B,GAAAk9B,EAAA5+B,EAAA65B,EAAAr3B,EAAAC,EAAAO,EAAAtB,EAAAi9B,GAAAE,EAAA7+B,EAAA65B,EAAAr3B,EAAAC,EAAAO,EAAA27B,GAGA,QAAAE,GAAA7+B,EAAA65B,EAAAr3B,EAAAC,EAAAO,EAAA27B,GACA,GAAAG,GAAAC,EAAA/+B,EAAA65B,EAAA72B,EAAA27B,GACAK,EAAA5Y,EAAApmB,EAAA65B,EAEA72B,KACAg8B,GAAAh8B,EAAA,GAAAA,EAAA,GAGA,IAAAi8B,GAAAH,EAAAG,YACArlC,EAAAslC,EAAA,EAAAF,EAAAx8B,GACA3I,EAAAslC,EAAA,EAAAF,EAAAx8B,GACAzJ,EAAA,GAAAqP,GAAAzO,EAAAC,EAAAmlC,EAAAC,EAEA,OADAjmC,GAAAomC,WAAAN,EAAAM,WACApmC,EAGA,QAAA4lC,GAAA5+B,EAAA65B,EAAAr3B,EAAAC,EAAAO,EAAAtB,EAAAi9B,GACA,GAAAG,GAAAO,EAAAr/B,GACA0B,OACAi9B,WACA9E,OACAr3B,YACAQ,gBAEAg8B,EAAAF,EAAAE,WACAC,EAAAH,EAAAG,YACArlC,EAAAslC,EAAA,EAAAF,EAAAx8B,GACA3I,EAAAslC,EAAA,EAAAF,EAAAx8B,EACA,WAAA4F,GAAAzO,EAAAC,EAAAmlC,EAAAC,GAWA,QAAAC,GAAAtlC,EAAAlJ,EAAA8R,GAQA,MANA,UAAAA,EACA5I,GAAAlJ,EACG,WAAA8R,IACH5I,GAAAlJ,EAAA,GAGAkJ,EAWA,QAAAulC,GAAAtlC,EAAAlJ,EAAA8R,GAOA,MANA,WAAAA,EACA5I,GAAAlJ,EAAA,EACG,WAAA8R,IACH5I,GAAAlJ,GAGAkJ,EAWA,QAAAylC,GAAA3+B,EAAA3H,EAAAiY,GACA,GAAArX,GAAAZ,EAAAY,EACAC,EAAAb,EAAAa,EACAlJ,EAAAqI,EAAArI,OACAD,EAAAsI,EAAAtI,MACA6uC,EAAA5uC,EAAA,EACA6R,EAAA,OACAC,EAAA,KAEA,QAAA9B,GACA,WACA/G,GAAAqX,EACApX,GAAA0lC,EACA/8B,EAAA,QACAC,EAAA,QACA,MAEA,aACA7I,GAAAqX,EAAAvgB,EACAmJ,GAAA0lC,EACA98B,EAAA,QACA,MAEA,WACA7I,GAAAlJ,EAAA,EACAmJ,GAAAoX,EACAzO,EAAA,SACAC,EAAA,QACA,MAEA,cACA7I,GAAAlJ,EAAA,EACAmJ,GAAAlJ,EAAAsgB,EACAzO,EAAA,QACA,MAEA,cACA5I,GAAAlJ,EAAA,EACAmJ,GAAA0lC,EACA/8B,EAAA,SACAC,EAAA,QACA,MAEA,kBACA7I,GAAAqX,EACApX,GAAA0lC,EACA98B,EAAA,QACA,MAEA,mBACA7I,GAAAlJ,EAAAugB,EACApX,GAAA0lC,EACA/8B,EAAA,QACAC,EAAA,QACA,MAEA,iBACA7I,GAAAlJ,EAAA,EACAmJ,GAAAoX,EACAzO,EAAA,QACA,MAEA,oBACA5I,GAAAlJ,EAAA,EACAmJ,GAAAlJ,EAAAsgB,EACAzO,EAAA,SACAC,EAAA,QACA,MAEA,qBACA7I,GAAAqX,EACApX,GAAAoX,CACA,MAEA,sBACArX,GAAAlJ,EAAAugB,EACApX,GAAAoX,EACAzO,EAAA,OACA,MAEA,wBACA5I,GAAAqX,EACApX,GAAAlJ,EAAAsgB,EACAxO,EAAA,QACA,MAEA,yBACA7I,GAAAlJ,EAAAugB,EACApX,GAAAlJ,EAAAsgB,EACAzO,EAAA,QACAC,EAAA,SAIA,OACA7I,IACAC,IACA2I,YACAC,qBAqBA,QAAAuxB,GAAAh0B,EAAAk8B,EAAArC,EAAA2F,EAAAvK,GACA,IAAAiH,EACA,QAGA,IAAAoC,IAAAt+B,EAAA,IAAA4a,MAAA,KACAqa,GAAAwK,EAAAvD,EAAArC,EAAA2F,EAAAvK,EAGA,QAAAnnC,GAAA,EAAAgE,EAAAwsC,EAAAvwC,OAAyCD,EAAAgE,EAAShE,IAClDwwC,EAAAxwC,GAAA4xC,EAAApB,EAAAxwC,GAAAmnC,EAGA,OAAAqJ,GAAAz6B,KAAA,MAGA,QAAA47B,GAAAvD,EAAArC,EAAA2F,EAAAvK,GACAA,EAAAliC,KAAqBkiC,GACrBA,EAAA4E,MACA,IAAA2F,GAAA5pC,EAAA4pC,EAAA,MACAvK,GAAA0K,cAAA/pC,EAAAq/B,EAAA0K,cAAA,EACA,IAAAC,GAAA3K,EAAA2K,QAAAhqC,EAAAq/B,EAAA2K,QAAA,EAGA3K,GAAA4K,YAAAzZ,EAAA,SAAAyT,EAGA,IAAAiG,GAAA7K,EAAA6K,aAAA1Z,EAAA,IAAAyT,EACA5E,GAAA8K,YAAAnqC,EAAAq/B,EAAA8K,YAAA,GAKA,QAFAC,GAAA9D,EAAA7gC,KAAAC,IAAA,EAAA4gC,EAAA,GAEApuC,EAAA,EAAiBA,EAAA8xC,GAAAI,GAAAF,EAA6ChyC,IAC9DkyC,GAAAF,CAGA,IAAAG,GAAA7Z,EAAAoZ,EAYA,OAVAS,GAAAD,IACAR,EAAA,GACAS,EAAA,GAGAD,EAAA9D,EAAA+D,EACAhL,EAAAuK,WACAvK,EAAAgL,gBACAhL,EAAA+K,eACA/K,EAAAiH,iBACAjH,EAGA,QAAAyK,GAAAQ,EAAAjL,GACA,GAAAiH,GAAAjH,EAAAiH,eACArC,EAAA5E,EAAA4E,KACAmG,EAAA/K,EAAA+K,YAEA,KAAA9D,EACA,QAGA,IAAAzhC,GAAA2rB,EAAA8Z,EAAArG,EAEA,IAAAp/B,GAAAyhC,EACA,MAAAgE,EAGA,QAAAx0B,GAAA,GAAkBA,IAAA,CAClB,GAAAjR,GAAAulC,GAAAt0B,GAAAupB,EAAA0K,cAAA,CACAO,GAAAjL,EAAAuK,QACA,OAGA,GAAAW,GAAA,IAAAz0B,EAAA00B,EAAAF,EAAAF,EAAA/K,EAAA6K,aAAA7K,EAAA4K,aAAAplC,EAAA,EAAAY,KAAAmY,MAAA0sB,EAAAnyC,OAAAiyC,EAAAvlC,GAAA,CACAylC,KAAArM,OAAA,EAAAsM,GACA1lC,EAAA2rB,EAAA8Z,EAAArG,GAOA,MAJA,KAAAqG,IACAA,EAAAjL,EAAA8K,aAGAG,EAGA,QAAAE,GAAApgC,EAAAggC,EAAAF,EAAAD,GAIA,OAHAnvC,GAAA,EACA5C,EAAA,EAEAgE,EAAAkO,EAAAjS,OAA6BD,EAAAgE,GAAApB,EAAAsvC,EAAiClyC,IAAA,CAC9D,GAAAuyC,GAAArgC,EAAAsgC,WAAAxyC,EACA4C,IAAA,GAAA2vC,MAAA,IAAAP,EAAAD,EAGA,MAAA/xC,GASA,QAAAyyC,GAAA1G,GAEA,MAAAzT,GAAA,SAAAyT,GAUA,QAAA2E,GAAAx+B,EAAA65B,GACA,MAAAroC,GAAAgtC,YAAAx+B,EAAA65B,GAmBA,QAAAkF,GAAA/+B,EAAA65B,EAAAvpC,EAAAquC,GACA,MAAA3+B,OAAA,GACA,IAAAo/B,GAAAmB,EAAA1G,GACA2G,EAAAxgC,IAAA4a,MAAA,SACAjqB,EAAA6vC,EAAAzyC,OAAAqxC,EACAH,EAAAtuC,CAMA,IAJAL,IACA2uC,GAAA3uC,EAAA,GAAAA,EAAA,IAGA0P,GAAA2+B,EAAA,CACA,GAAA8B,GAAA9B,EAAAM,YACAyB,EAAA/B,EAAAK,UAEA,UAAAyB,GAAAxB,EAAAwB,EACAzgC,EAAA,GACAwgC,SACK,UAAAE,EAOL,OANAzL,GAAAwK,EAAAiB,GAAApwC,IAAA,GAAAA,EAAA,MAAAupC,EAAA8E,EAAAa,UACAI,QAAAjB,EAAAiB,QACAG,YAAApB,EAAAoB,cAIAjyC,EAAA,EAAAgE,EAAA0uC,EAAAzyC,OAAyCD,EAAAgE,EAAShE,IAClD0yC,EAAA1yC,GAAA4xC,EAAAc,EAAA1yC,GAAAmnC,GAKA,OACAuL,QACA7vC,SACAsuC,cACAG,cAmCA,QAAAC,GAAAr/B,EAAA7P,GACA,GAAA2uC,IACA0B,SACA9vC,MAAA,EACAC,OAAA,EAIA,IAFA,MAAAqP,OAAA,KAEAA,EACA,MAAA8+B,EAMA,KAHA,GACAntC,GADAgvC,EAAAC,EAAAD,UAAA,EAGA,OAAAhvC,EAAAivC,EAAA3rB,KAAAjV,KAAA,CACA,GAAA6gC,GAAAlvC,EAAA0Y,KAEAw2B,GAAAF,GACAG,EAAAhC,EAAA9+B,EAAA+gC,UAAAJ,EAAAE,IAGAC,EAAAhC,EAAAntC,EAAA,GAAAA,EAAA,IACAgvC,EAAAC,EAAAD,UAGAA,EAAA3gC,EAAAjS,QACA+yC,EAAAhC,EAAA9+B,EAAA+gC,UAAAJ,EAAA3gC,EAAAjS,QAGA,IAAAyyC,GAAA1B,EAAA0B,MACAQ,EAAA,EACAhB,EAAA,EAEAiB,KACAC,EAAA/wC,EAAA6S,YACA27B,EAAAxuC,EAAAwuC,SACAwC,EAAAxC,KAAAK,WACAoC,EAAAzC,KAAAM,WAEAiC,KACA,MAAAC,OAAAD,EAAA,GAAAA,EAAA,IACA,MAAAE,OAAAF,EAAA,GAAAA,EAAA,IAIA,QAAApzC,GAAA,EAAiBA,EAAA0yC,EAAAzyC,OAAkBD,IAAA,CAKnC,OAJAuzC,GAAAb,EAAA1yC,GACAsxC,EAAA,EACA3kC,EAAA,EAEAiR,EAAA,EAAmBA,EAAA21B,EAAAC,OAAAvzC,OAAwB2d,IAAA,CAC3C,GAAA61B,GAAAF,EAAAC,OAAA51B,GACA81B,EAAAD,EAAAE,WAAAtxC,EAAAuR,KAAA6/B,EAAAE,eAEAz+B,EAAAu+B,EAAAv+B,YAAAw+B,EAAAx+B,YAEA62B,EAAA0H,EAAA1H,KAAA2H,EAAA3H,MAAA1pC,EAAA0pC,KAEA6H,EAAAH,EAAA3+B,WAAAhN,EAEA4rC,EAAA5+B,WAAA29B,EAAA1G,GAOA,IANA72B,IAAA0+B,GAAA1+B,EAAA,GAAAA,EAAA,IACAu+B,EAAA5wC,OAAA+wC,EACAH,EAAAnC,WAAArpC,EAAAyrC,EAAA9+B,eAAAvS,EAAAuS,eAAAg/B,GACAH,EAAA/+B,UAAAg/B,KAAAh/B,WAAArS,EAAAqS,UACA++B,EAAA9+B,kBAAA++B,KAAA/+B,mBAAA,SAEA,MAAA2+B,GAAAJ,EAAAO,EAAAnC,WAAAgC,EACA,OACAZ,SACA9vC,MAAA,EACAC,OAAA,EAIA4wC,GAAA5+B,UAAAyjB,EAAAmb,EAAAvhC,KAAA65B,EACA,IAAA8H,GAAAH,EAAA7+B,UACAi/B,EAAA,MAAAD,GAAA,SAAAA,CAGA,qBAAAA,IAAA,MAAAA,EAAArP,OAAAqP,EAAA5zC,OAAA,GACAwzC,EAAAM,aAAAF,EACAV,EAAA1sC,KAAAgtC,GACAI,EAAA,MAEO,CACP,GAAAC,EAAA,CACAD,EAAAJ,EAAA5+B,SAGA,IAAAI,GAAAy+B,EAAAz+B,oBACA++B,EAAA/+B,KAAApJ,KAWAmoC,KACAA,EAAAC,EAAAC,eAAAF,GAEAC,EAAAE,aAAAH,KACAH,EAAAtmC,KAAAC,IAAAqmC,EAAAG,EAAApxC,MAAAgxC,EAAAI,EAAAnxC,UAKA,GAAAuxC,GAAAl/B,IAAA,GAAAA,EAAA,IACA2+B,IAAAO,CACA,IAAAC,GAAA,MAAAhB,IAAA1mC,EAAA,IAEA,OAAA0nC,KAAAR,KACAC,GAAAO,EAAAD,GACAX,EAAAvhC,KAAA,GACAuhC,EAAA5+B,UAAAg/B,EAAA,IAEAJ,EAAAvhC,KAAAg0B,EAAAuN,EAAAvhC,KAAAmiC,EAAAD,EAAArI,EAAA8E,EAAAa,UACAI,QAAAjB,EAAAiB,UAEA2B,EAAA5+B,UAAAyjB,EAAAmb,EAAAvhC,KAAA65B,GACA8H,EAAAJ,EAAA5+B,UAAAu/B,IAKAznC,GAAA8mC,EAAA7wC,MAAAixC,EACAH,IAAApC,EAAA/jC,KAAAC,IAAA8jC,EAAAmC,EAAAnC,aAGAiC,EAAA3wC,MAAA+J,EACA4mC,EAAAjC,aACA4B,GAAA5B,EACAY,EAAA3kC,KAAAC,IAAA0kC,EAAAvlC,GAGAqkC,EAAAE,WAAAF,EAAApuC,MAAAkF,EAAAzF,EAAAwS,UAAAq9B,GACAlB,EAAAG,YAAAH,EAAAnuC,OAAAiF,EAAAzF,EAAAyS,WAAAo+B,GAEAE,IACApC,EAAAE,YAAAkC,EAAA,GAAAA,EAAA,GACApC,EAAAG,aAAAiC,EAAA,GAAAA,EAAA,GAGA,QAAApzC,GAAA,EAAiBA,EAAAmzC,EAAAlzC,OAAwBD,IAAA,CACzC,GAAAyzC,GAAAN,EAAAnzC,GACA+zC,EAAAN,EAAAM,YAEAN,GAAA7wC,MAAA0xC,SAAAP,EAAA,QAAA7B,EAGA,MAAAlB,GAGA,QAAAgC,GAAAuB,EAAAzwB,EAAA6vB,GAKA,OAJAa,GAAA,KAAA1wB,EACA2wB,EAAA3wB,EAAAgJ,MAAA,MACA4lB,EAAA6B,EAAA7B,MAEA1yC,EAAA,EAAiBA,EAAAy0C,EAAAx0C,OAAiBD,IAAA,CAClC,GAAAkS,GAAAuiC,EAAAz0C,GACAyzC,GACAE,YACAzhC,OACAwiC,cAAAxiC,IAAAsiC,EAGA,IAAAx0C,EAkBA0yC,EAAAjsC,MACA+sC,QAAAC,SAnBA,CACA,GAAAD,IAAAd,IAAAzyC,OAAA,KAAAyyC,EAAA,IACAc,aACOA,OAQPmB,EAAAnB,EAAAvzC,MACA,KAAA00C,GAAAnB,EAAA,GAAAkB,aAAAlB,EAAA,GAAAC,GAEAvhC,IAAAyiC,GAAAH,IAAAhB,EAAA/sC,KAAAgtC,KAWA,QAAAmB,GAAAvyC,GAGA,OAAAA,EAAAY,UAAAZ,EAAAoS,cAAApS,EAAAmS,UAAAnS,EAAAa,YAAAb,EAAAY,UAAA,SACAZ,EAAAoS,YAAA,cAAAsB,KAAA,MAAA1T,EAAAwyC,UAAAxyC,EAAA0pC,KA/pBA,GAAAxxB,GAAAjd,EAAA,MAEA22C,EAAA32C,EAAA,MAEAw3C,EAAAx3C,EAAA,MAEA8H,EAAA0vC,EAAA1vC,WACAH,EAAA6vC,EAAA7vC,OACA6C,EAAAgtC,EAAAhtC,UACAG,EAAA6sC,EAAA7sC,UACAsoC,KACAI,EAAA,EACAC,EAAA,IACAkC,EAAA,gCACAxC,EAAA,kBAEA5sC,IAkXAA,GAAAgtC,YAAA,SAAAx+B,EAAA65B,GACA,GAAA1O,GAAAj4B,GAEA,OADAi4B,GAAA0O,QAAAuE,EACAjT,EAAAqT,YAAAx+B,IA6RA7U,EAAAizC,eACAjzC,EAAAkG,YACAlG,EAAAi7B,WACAj7B,EAAAkO,kBACAlO,EAAA+zC,cACA/zC,EAAAg0C,cACAh0C,EAAAm0C,2BACAn0C,EAAA6oC,eACA7oC,EAAAo1C,gBACAp1C,EAAAqzC,cACArzC,EAAA4zC,iBACA5zC,EAAAk0C,gBACAl0C,EAAAu3C,YlBs1OMG,KACA,SAAU33C,EAAQC,EAASC,GmB9+PjC,QAAA03C,GAAA1sC,GACA,MAAAA,IAAA2sC,GAAA3sC,EAAA2sC,EAGA,QAAAC,GAAA5sC,GACA,MAAAA,GAAA2sC,GAAA3sC,GAAA2sC,EAcA,QAAAE,GAAAC,EAAAC,EAAAC,EAAAC,EAAAhyB,GACA,GAAAiyB,GAAA,EAAAjyB,CACA,OAAAiyB,QAAAJ,EAAA,EAAA7xB,EAAA8xB,GAAA9xB,OAAAgyB,EAAA,EAAAC,EAAAF,GAcA,QAAAG,GAAAL,EAAAC,EAAAC,EAAAC,EAAAhyB,GACA,GAAAiyB,GAAA,EAAAjyB,CACA,aAAA8xB,EAAAD,GAAAI,EAAA,GAAAF,EAAAD,GAAA9xB,GAAAiyB,GAAAD,EAAAD,GAAA/xB,KAeA,QAAAmyB,GAAAN,EAAAC,EAAAC,EAAAC,EAAAjtC,EAAAqtC,GAEA,GAAAvzB,GAAAmzB,EAAA,GAAAF,EAAAC,GAAAF,EACA/yB,EAAA,GAAAizB,EAAA,EAAAD,EAAAD,GACAQ,EAAA,GAAAP,EAAAD,GACAlyB,EAAAkyB,EAAA9sC,EACAutC,EAAAxzB,IAAA,EAAAD,EAAAwzB,EACAE,EAAAzzB,EAAAuzB,EAAA,EAAAxzB,EAAAc,EACA6yB,EAAAH,IAAA,EAAAvzB,EAAAa,EACA8yB,EAAA,CAEA,IAAAhB,EAAAa,IAAAb,EAAAc,GACA,GAAAd,EAAA3yB,GACAszB,EAAA,SACK,CACL,GAAAM,IAAAL,EAAAvzB,CAEA4zB,IAAA,GAAAA,GAAA,IACAN,EAAAK,KAAAC,OAGG,CACH,GAAAC,GAAAJ,IAAA,EAAAD,EAAAE,CAEA,IAAAf,EAAAkB,GAAA,CACA,GAAAC,GAAAL,EAAAD,EACAI,GAAA5zB,EAAAD,EAAA+zB,EAEAC,GAAAD,EAAA,CAEAF,IAAA,GAAAA,GAAA,IACAN,EAAAK,KAAAC,GAGAG,GAAA,GAAAA,GAAA,IACAT,EAAAK,KAAAI,OAEK,IAAAF,EAAA,GACL,GAAAG,GAAAC,EAAAJ,GACAK,EAAAV,EAAAxzB,EAAA,IAAAD,IAAA0zB,EAAAO,GACAG,EAAAX,EAAAxzB,EAAA,IAAAD,IAAA0zB,EAAAO,EAGAE,GADAA,EAAA,GACAE,GAAAF,EAAAG,GAEAD,EAAAF,EAAAG,GAIAF,EADAA,EAAA,GACAC,GAAAD,EAAAE,GAEAD,EAAAD,EAAAE,EAGA,IAAAT,KAAA5zB,GAAAk0B,EAAAC,KAAA,EAAAp0B,EAEA6zB,IAAA,GAAAA,GAAA,IACAN,EAAAK,KAAAC,OAEK,CACL,GAAAU,IAAA,EAAAd,EAAAxzB,EAAA,EAAAD,EAAA0zB,IAAA,EAAAQ,EAAAT,QACAe,EAAArpC,KAAAspC,KAAAF,GAAA,EACAG,EAAAR,EAAAT,GACAkB,EAAAxpC,KAAA++B,IAAAsK,GACAX,IAAA5zB,EAAA,EAAAy0B,EAAAC,IAAA,EAAA30B,GACAg0B,IAAA/zB,EAAAy0B,GAAAC,EAAAC,EAAAzpC,KAAAg/B,IAAAqK,MAAA,EAAAx0B,GACA60B,IAAA50B,EAAAy0B,GAAAC,EAAAC,EAAAzpC,KAAAg/B,IAAAqK,MAAA,EAAAx0B,EAEA6zB,IAAA,GAAAA,GAAA,IACAN,EAAAK,KAAAC,GAGAG,GAAA,GAAAA,GAAA,IACAT,EAAAK,KAAAI,GAGAa,GAAA,GAAAA,GAAA,IACAtB,EAAAK,KAAAiB,IAKA,MAAAjB,GAcA,QAAAkB,GAAA9B,EAAAC,EAAAC,EAAAC,EAAA4B,GACA,GAAA90B,GAAA,EAAAizB,EAAA,GAAAD,EAAA,EAAAD,EACAhzB,EAAA,EAAAizB,EAAA,EAAAE,EAAA,EAAAH,EAAA,EAAAE,EACAM,EAAA,EAAAP,EAAA,EAAAD,EACAY,EAAA,CAEA,IAAAhB,EAAA5yB,IACA,GAAA8yB,EAAA7yB,GAAA,CACA,GAAA4zB,IAAAL,EAAAvzB,CAEA4zB,IAAA,GAAAA,GAAA,IACAkB,EAAAnB,KAAAC,QAGG,CACH,GAAAC,GAAA7zB,IAAA,EAAAD,EAAAwzB,CAEA,IAAAZ,EAAAkB,GACAiB,EAAA,IAAA90B,GAAA,EAAAD,OACK,IAAA8zB,EAAA,GACL,GAAAG,GAAAC,EAAAJ,GACAD,IAAA5zB,EAAAg0B,IAAA,EAAAj0B,GACAg0B,IAAA/zB,EAAAg0B,IAAA,EAAAj0B,EAEA6zB,IAAA,GAAAA,GAAA,IACAkB,EAAAnB,KAAAC,GAGAG,GAAA,GAAAA,GAAA,IACAe,EAAAnB,KAAAI,IAKA,MAAAJ,GAcA,QAAAoB,GAAAhC,EAAAC,EAAAC,EAAAC,EAAAhyB,EAAAvB,GACA,GAAAq1B,IAAAhC,EAAAD,GAAA7xB,EAAA6xB,EACAkC,GAAAhC,EAAAD,GAAA9xB,EAAA8xB,EACAkC,GAAAhC,EAAAD,GAAA/xB,EAAA+xB,EACAkC,GAAAF,EAAAD,GAAA9zB,EAAA8zB,EACAI,GAAAF,EAAAD,GAAA/zB,EAAA+zB,EACAI,GAAAD,EAAAD,GAAAj0B,EAAAi0B,CAEAx1B,GAAA,GAAAozB,EACApzB,EAAA,GAAAq1B,EACAr1B,EAAA,GAAAw1B,EACAx1B,EAAA,GAAA01B,EAEA11B,EAAA,GAAA01B,EACA11B,EAAA,GAAAy1B,EACAz1B,EAAA,GAAAu1B,EACAv1B,EAAA,GAAAuzB,EAoBA,QAAAoC,GAAAC,EAAAC,EAAAhrC,EAAAG,EAAAF,EAAAG,EAAA6qC,EAAAC,EAAAjsC,EAAAC,EAAAiW,GAEA,GAAAuB,GAGAy0B,EACAC,EACAC,EACAC,EALAjwB,EAAA,KACAhF,EAAAmF,GAKA+vB,GAAA,GAAAtsC,EACAssC,EAAA,GAAArsC,CAGA,QAAAssC,GAAA,EAAkBA,EAAA,EAAQA,GAAA,IAC1BC,EAAA,GAAAnD,EAAAyC,EAAA/qC,EAAAC,EAAAgrC,EAAAO,GACAC,EAAA,GAAAnD,EAAA0C,EAAA7qC,EAAAC,EAAA8qC,EAAAM,IACAH,EAAAK,EAAAH,EAAAE,IAEAp1B,IACAK,EAAA80B,EACAn1B,EAAAg1B,EAIAh1B,GAAAmF,GAEA,QAAAroB,GAAA,EAAiBA,EAAA,MACjBkoB,EAAAswB,GADyBx4C,IAKzBg4C,EAAAz0B,EAAA2E,EACA+vB,EAAA10B,EAAA2E,EAEAowB,EAAA,GAAAnD,EAAAyC,EAAA/qC,EAAAC,EAAAgrC,EAAAE,GACAM,EAAA,GAAAnD,EAAA0C,EAAA7qC,EAAAC,EAAA8qC,EAAAC,GACAE,EAAAK,EAAAD,EAAAF,GAEAJ,GAAA,GAAAE,EAAAh1B,GACAK,EAAAy0B,EACA90B,EAAAg1B,IAGAO,EAAA,GAAAtD,EAAAyC,EAAA/qC,EAAAC,EAAAgrC,EAAAG,GACAQ,EAAA,GAAAtD,EAAA0C,EAAA7qC,EAAAC,EAAA8qC,EAAAE,GACAE,EAAAI,EAAAE,EAAAL,GAEAH,GAAA,GAAAE,EAAAj1B,GACAK,EAAA00B,EACA/0B,EAAAi1B,GAEAjwB,GAAA,GAYA,OANAlG,KACAA,EAAA,GAAAmzB,EAAAyC,EAAA/qC,EAAAC,EAAAgrC,EAAAv0B,GACAvB,EAAA,GAAAmzB,EAAA0C,EAAA7qC,EAAAC,EAAA8qC,EAAAx0B,IAIA+yB,EAAApzB,GAYA,QAAAw1B,GAAAtD,EAAAC,EAAAC,EAAA/xB,GACA,GAAAiyB,GAAA,EAAAjyB,CACA,OAAAiyB,MAAAJ,EAAA,EAAA7xB,EAAA8xB,GAAA9xB,IAAA+xB,EAYA,QAAAqD,GAAAvD,EAAAC,EAAAC,EAAA/xB,GACA,aAAAA,IAAA8xB,EAAAD,GAAA7xB,GAAA+xB,EAAAD,IAaA,QAAAuD,GAAAxD,EAAAC,EAAAC,EAAAhtC,EAAAqtC,GACA,GAAAvzB,GAAAgzB,EAAA,EAAAC,EAAAC,EACAjzB,EAAA,GAAAgzB,EAAAD,GACAQ,EAAAR,EAAA9sC,EACA0tC,EAAA,CAEA,IAAAhB,EAAA5yB,IACA,GAAA8yB,EAAA7yB,GAAA,CACA,GAAA4zB,IAAAL,EAAAvzB,CAEA4zB,IAAA,GAAAA,GAAA,IACAN,EAAAK,KAAAC,QAGG,CACH,GAAAC,GAAA7zB,IAAA,EAAAD,EAAAwzB,CAEA,IAAAZ,EAAAkB,GAAA,CACA,GAAAD,IAAA5zB,GAAA,EAAAD,EAEA6zB,IAAA,GAAAA,GAAA,IACAN,EAAAK,KAAAC,OAEK,IAAAC,EAAA,GACL,GAAAG,GAAAC,EAAAJ,GACAD,IAAA5zB,EAAAg0B,IAAA,EAAAj0B,GACAg0B,IAAA/zB,EAAAg0B,IAAA,EAAAj0B,EAEA6zB,IAAA,GAAAA,GAAA,IACAN,EAAAK,KAAAC,GAGAG,GAAA,GAAAA,GAAA,IACAT,EAAAK,KAAAI,IAKA,MAAAJ,GAYA,QAAA6C,GAAAzD,EAAAC,EAAAC,GACA,GAAAwD,GAAA1D,EAAAE,EAAA,EAAAD,CAEA,YAAAyD,EAEA,IAEA1D,EAAAC,GAAAyD,EAcA,QAAAC,GAAA3D,EAAAC,EAAAC,EAAA/xB,EAAAvB,GACA,GAAAq1B,IAAAhC,EAAAD,GAAA7xB,EAAA6xB,EACAkC,GAAAhC,EAAAD,GAAA9xB,EAAA8xB,EACAmC,GAAAF,EAAAD,GAAA9zB,EAAA8zB,CAEAr1B,GAAA,GAAAozB,EACApzB,EAAA,GAAAq1B,EACAr1B,EAAA,GAAAw1B,EAEAx1B,EAAA,GAAAw1B,EACAx1B,EAAA,GAAAs1B,EACAt1B,EAAA,GAAAszB,EAkBA,QAAA0D,GAAApB,EAAAC,EAAAhrC,EAAAG,EAAAF,EAAAG,EAAAnB,EAAAC,EAAAiW,GAEA,GAAAuB,GACA2E,EAAA,KACAhF,EAAAmF,GACA+vB,GAAA,GAAAtsC,EACAssC,EAAA,GAAArsC,CAGA,QAAAssC,GAAA,EAAkBA,EAAA,EAAQA,GAAA,KAC1BC,EAAA,GAAAI,EAAAd,EAAA/qC,EAAAC,EAAAurC,GACAC,EAAA,GAAAI,EAAAb,EAAA7qC,EAAAC,EAAAorC,EACA,IAAAH,GAAAK,EAAAH,EAAAE,EAEAJ,GAAAh1B,IACAK,EAAA80B,EACAn1B,EAAAg1B,GAIAh1B,EAAAmF,GAEA,QAAAroB,GAAA,EAAiBA,EAAA,MACjBkoB,EAAAswB,GADyBx4C,IAAA,CAKzB,GAAAg4C,GAAAz0B,EAAA2E,EACA+vB,EAAA10B,EAAA2E,CAEAowB,GAAA,GAAAI,EAAAd,EAAA/qC,EAAAC,EAAAkrC,GACAM,EAAA,GAAAI,EAAAb,EAAA7qC,EAAAC,EAAA+qC,EACA,IAAAE,GAAAK,EAAAD,EAAAF,EAEA,IAAAJ,GAAA,GAAAE,EAAAh1B,EACAK,EAAAy0B,EACA90B,EAAAg1B,MACK,CAELO,EAAA,GAAAC,EAAAd,EAAA/qC,EAAAC,EAAAmrC,GACAQ,EAAA,GAAAC,EAAAb,EAAA7qC,EAAAC,EAAAgrC,EACA,IAAAE,GAAAI,EAAAE,EAAAL,EAEAH,IAAA,GAAAE,EAAAj1B,GACAK,EAAA00B,EACA/0B,EAAAi1B,GAEAjwB,GAAA,IAYA,MANAlG,KACAA,EAAA,GAAA02B,EAAAd,EAAA/qC,EAAAC,EAAAyW,GACAvB,EAAA,GAAA02B,EAAAb,EAAA7qC,EAAAC,EAAAsW,IAIA+yB,EAAApzB,GArgBA,GAAA+1B,GAAA37C,EAAA,MAEA47C,EAAAD,EAAAx6C,OACA85C,EAAAU,EAAAt1B,WAOA8yB,EAAAlpC,KAAA2Y,IACAowB,EAAA/oC,KAAAoV,KACAsyB,EAAA,KACAuD,EAAA,KACAxB,EAAAV,EAAA,GACAI,EAAA,IAEA0B,EAAAc,IAEAZ,EAAAY,IAEAT,EAAAS,GAmfA77C,GAAA83C,UACA93C,EAAAo4C,oBACAp4C,EAAAq4C,cACAr4C,EAAA65C,eACA75C,EAAA+5C,iBACA/5C,EAAAs6C,oBACAt6C,EAAAq7C,cACAr7C,EAAAs7C,wBACAt7C,EAAAu7C,kBACAv7C,EAAAw7C,oBACAx7C,EAAA07C,qBACA17C,EAAA27C,yBnB2gQMG,KACA,SAAU/7C,EAAQC,GoBrhRxB,QAAAoB,KACA,GAAAujB,GAAA,GAAAC,GAAA,EAEA,OADA9K,GAAA6K,GACAA,EAQA,QAAA7K,GAAA6K,GAOA,MANAA,GAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EASA,QAAAE,GAAAF,EAAA1V,GAOA,MANA0V,GAAA,GAAA1V,EAAA,GACA0V,EAAA,GAAA1V,EAAA,GACA0V,EAAA,GAAA1V,EAAA,GACA0V,EAAA,GAAA1V,EAAA,GACA0V,EAAA,GAAA1V,EAAA,GACA0V,EAAA,GAAA1V,EAAA,GACA0V,EAUA,QAAA5K,GAAA4K,EAAAo3B,EAAAC,GAIA,GAAAC,GAAAF,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GACAE,EAAAH,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GACAG,EAAAJ,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GACAI,EAAAL,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GACAK,EAAAN,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GACAO,EAAAP,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,EAOA,OANAp3B,GAAA,GAAAs3B,EACAt3B,EAAA,GAAAu3B,EACAv3B,EAAA,GAAAw3B,EACAx3B,EAAA,GAAAy3B,EACAz3B,EAAA,GAAA03B,EACA13B,EAAA,GAAA23B,EACA33B,EAUA,QAAAqgB,GAAArgB,EAAAI,EAAAD,GAOA,MANAH,GAAA,GAAAI,EAAA,GACAJ,EAAA,GAAAI,EAAA,GACAJ,EAAA,GAAAI,EAAA,GACAJ,EAAA,GAAAI,EAAA,GACAJ,EAAA,GAAAI,EAAA,GAAAD,EAAA,GACAH,EAAA,GAAAI,EAAA,GAAAD,EAAA,GACAH,EAUA,QAAA43B,GAAA53B,EAAAI,EAAAy3B,GACA,GAAAC,GAAA13B,EAAA,GACA23B,EAAA33B,EAAA,GACA43B,EAAA53B,EAAA,GACA63B,EAAA73B,EAAA,GACA83B,EAAA93B,EAAA,GACA+3B,EAAA/3B,EAAA,GACAg4B,EAAA7sC,KAAAg/B,IAAAsN,GACAQ,EAAA9sC,KAAA++B,IAAAuN,EAOA,OANA73B,GAAA,GAAA83B,EAAAO,EAAAJ,EAAAG,EACAp4B,EAAA,IAAA83B,EAAAM,EAAAH,EAAAI,EACAr4B,EAAA,GAAA+3B,EAAAM,EAAAH,EAAAE,EACAp4B,EAAA,IAAA+3B,EAAAK,EAAAC,EAAAH,EACAl4B,EAAA,GAAAq4B,EAAAL,EAAAI,EAAAD,EACAn4B,EAAA,GAAAq4B,EAAAF,EAAAC,EAAAJ,EACAh4B,EAUA,QAAAe,GAAAf,EAAAI,EAAAD,GACA,GAAAm4B,GAAAn4B,EAAA,GACAo4B,EAAAp4B,EAAA,EAOA,OANAH,GAAA,GAAAI,EAAA,GAAAk4B,EACAt4B,EAAA,GAAAI,EAAA,GAAAm4B,EACAv4B,EAAA,GAAAI,EAAA,GAAAk4B,EACAt4B,EAAA,GAAAI,EAAA,GAAAm4B,EACAv4B,EAAA,GAAAI,EAAA,GAAAk4B,EACAt4B,EAAA,GAAAI,EAAA,GAAAm4B,EACAv4B,EASA,QAAAxK,GAAAwK,EAAAI,GACA,GAAA03B,GAAA13B,EAAA,GACA23B,EAAA33B,EAAA,GACA43B,EAAA53B,EAAA,GACA63B,EAAA73B,EAAA,GACA83B,EAAA93B,EAAA,GACA+3B,EAAA/3B,EAAA,GACAo4B,EAAAV,EAAAI,EAAAD,EAAAF,CAEA,OAAAS,IAIAA,EAAA,EAAAA,EACAx4B,EAAA,GAAAk4B,EAAAM,EACAx4B,EAAA,IAAAi4B,EAAAO,EACAx4B,EAAA,IAAA+3B,EAAAS,EACAx4B,EAAA,GAAA83B,EAAAU,EACAx4B,EAAA,IAAA+3B,EAAAI,EAAAD,EAAAF,GAAAQ,EACAx4B,EAAA,IAAAi4B,EAAAD,EAAAF,EAAAK,GAAAK,EACAx4B,GAVA,KAlJA,GAAAC,GAAA,oBAAAuB,cAAApZ,MAAAoZ,YA+JAnmB,GAAAoB,SACApB,EAAA8Z,WACA9Z,EAAA6kB,OACA7kB,EAAA+Z,MACA/Z,EAAAglC,YACAhlC,EAAAu8C,SACAv8C,EAAA0lB,QACA1lB,EAAAma,UpBqiRMijC,KACA,SAAUr9C,EAAQC,EAASC,GqBlsRjC,QAAA28B,GAAA9rB,GAEA,MAAAA,GAAA8rB,sBAAA9rB,EAAA8rB,yBACAN,KAAA,EACAC,IAAA,GAKA,QAAA8gB,GAAAvsC,EAAAgC,EAAA6R,EAAA24B,GAiCA,MAhCA34B,SAWA24B,IAAAxpB,EAAA0H,gBACA+hB,EAAAzsC,EAAAgC,EAAA6R,GAQAmP,EAAA2K,QAAAmF,SAAA,MAAA9wB,EAAA0qC,QAAA1qC,EAAA0qC,SAAA1qC,EAAA2qC,SACA94B,EAAA+4B,IAAA5qC,EAAA0qC,OACA74B,EAAAg5B,IAAA7qC,EAAA8qC,QAEA,MAAA9qC,EAAA2qC,SACA94B,EAAA+4B,IAAA5qC,EAAA2qC,QACA94B,EAAAg5B,IAAA7qC,EAAA+qC,SAGAN,EAAAzsC,EAAAgC,EAAA6R,GAGAA,EAGA,QAAA44B,GAAAzsC,EAAAgC,EAAA6R,GAEA,GAAAkuB,GAAAjW,EAAA9rB,EACA6T,GAAA+4B,IAAA5qC,EAAAgrC,QAAAjL,EAAAvW,KACA3X,EAAAg5B,IAAA7qC,EAAAirC,QAAAlL,EAAAtW,IAQA,QAAAyhB,GAAAltC,EAAAgC,EAAAwqC,GAGA,GAFAxqC,KAAAwoB,OAAAhL,MAEA,MAAAxd,EAAA4qC,IACA,MAAA5qC,EAGA,IAAAqiB,GAAAriB,EAAA/N,IAGA,IAFAowB,KAAAjtB,QAAA,YAKG,CACH,GAAA+1C,GAAA,YAAA9oB,EAAAriB,EAAAorC,cAAA,GAAAprC,EAAAqrC,eAAA,EACAF,IAAAZ,EAAAvsC,EAAAmtC,EAAAnrC,EAAAwqC,OAJAD,GAAAvsC,EAAAgC,IAAAwqC,GACAxqC,EAAAsrC,QAAAtrC,EAAAurC,WAAAvrC,EAAAurC,WAAA,MAAAvrC,EAAAwrC,QAAA,IAUA,IAAAC,GAAAzrC,EAAAyrC,MAMA,OAJA,OAAAzrC,EAAA0rC,WAAAC,KAAAF,GAAAG,EAAAxnB,KAAApkB,EAAA/N,QACA+N,EAAA0rC,MAAA,EAAAD,EAAA,IAAAA,EAAA,IAAAA,EAAA,KAGAzrC,EAGA,QAAA6rC,GAAA7tC,EAAA3K,EAAAslB,GACAmzB,EACA9tC,EAAA6tC,iBAAAx4C,EAAAslB,GAEA3a,EAAA+tC,YAAA,KAAA14C,EAAAslB,GAIA,QAAAqzB,GAAAhuC,EAAA3K,EAAAslB,GACAmzB,EACA9tC,EAAAguC,oBAAA34C,EAAAslB,GAEA3a,EAAAiuC,YAAA,KAAA54C,EAAAslB,GAuBA,QAAAuzB,GAAAlsC,GAEA,MAAAA,GAAA0rC,MAAA,EA3IA,GAAA9yB,GAAAzrB,EAAA,KAEAD,GAAAi/C,WAAAvzB,CAEA,IAAAoI,GAAA7zB,EAAA,MAOA2+C,EAAA,oBAAAtjB,kBAAAqjB,iBACAD,EAAA,iDAoHAQ,EAAAN,EAAA,SAAA9rC,GACAA,EAAAqsC,iBACArsC,EAAAssC,kBACAtsC,EAAAusC,cAAA,GACC,SAAAvsC,GACDA,EAAAwsC,aAAA,EACAxsC,EAAAusC,cAAA,EASAr/C,GAAAq9C,gBACAr9C,EAAAg+C,iBACAh+C,EAAA2+C,mBACA3+C,EAAA8+C,sBACA9+C,EAAAk/C,OACAl/C,EAAAg/C,gBrBstRMO,KACA,SAAUx/C,EAAQC,GsBr2RxB,GAAAw/C,GAAAzyC,MAAA7L,UAAA4J,MAOA4gB,EAAA,WACA3nB,KAAA07C,cAGA/zB,GAAAxqB,WACAG,YAAAqqB,EASA6O,IAAA,SAAAjK,EAAA7E,EAAA1iB,GACA,GAAA22C,GAAA37C,KAAA07C,UAEA,KAAAh0B,IAAA6E,EACA,MAAAvsB,KAGA27C,GAAApvB,KACAovB,EAAApvB,MAGA,QAAA3tB,GAAA,EAAmBA,EAAA+8C,EAAApvB,GAAA1tB,OAAsBD,IACzC,GAAA+8C,EAAApvB,GAAA3tB,GAAA4lC,IAAA9c,EACA,MAAA1nB,KAUA,OANA27C,GAAApvB,GAAAlnB,MACAm/B,EAAA9c,EACA8O,KAAA,EACAyF,IAAAj3B,GAAAhF,OAGAA,MASAyP,GAAA,SAAA8c,EAAA7E,EAAA1iB,GACA,GAAA22C,GAAA37C,KAAA07C,UAEA,KAAAh0B,IAAA6E,EACA,MAAAvsB,KAGA27C,GAAApvB,KACAovB,EAAApvB,MAGA,QAAA3tB,GAAA,EAAmBA,EAAA+8C,EAAApvB,GAAA1tB,OAAsBD,IACzC,GAAA+8C,EAAApvB,GAAA3tB,GAAA4lC,IAAA9c,EACA,MAAA1nB,KAUA,OANA27C,GAAApvB,GAAAlnB,MACAm/B,EAAA9c,EACA8O,KAAA,EACAyF,IAAAj3B,GAAAhF,OAGAA,MAQA47C,SAAA,SAAArvB,GACA,GAAAovB,GAAA37C,KAAA07C,UACA,OAAAC,GAAApvB,IAAAovB,EAAApvB,GAAA1tB,QAQA03B,IAAA,SAAAhK,EAAA7E,GACA,GAAAi0B,GAAA37C,KAAA07C,UAEA,KAAAnvB,EAEA,MADAvsB,MAAA07C,cACA17C,IAGA,IAAA0nB,EAAA,CACA,GAAAi0B,EAAApvB,GAAA,CAGA,OAFAsvB,MAEAj9C,EAAA,EAAAywC,EAAAsM,EAAApvB,GAAA1tB,OAA6CD,EAAAywC,EAAOzwC,IACpD+8C,EAAApvB,GAAA3tB,GAAA,GAAA8oB,GACAm0B,EAAAx2C,KAAAs2C,EAAApvB,GAAA3tB,GAIA+8C,GAAApvB,GAAAsvB,EAGAF,EAAApvB,IAAA,IAAAovB,EAAApvB,GAAA1tB,cACA88C,GAAApvB,cAGAovB,GAAApvB,EAGA,OAAAvsB,OAQA4sB,QAAA,SAAA5rB,GACA,GAAAhB,KAAA07C,WAAA16C,GAAA,CACA,GAAA6E,GAAAE,UACA+1C,EAAAj2C,EAAAhH,MAEAi9C,GAAA,IACAj2C,EAAA41C,EAAA3+C,KAAA+I,EAAA,GAMA,QAHA81C,GAAA37C,KAAA07C,WAAA16C,GACA4B,EAAA+4C,EAAA98C,OAEAD,EAAA,EAAqBA,EAAAgE,GAAS,CAE9B,OAAAk5C,GACA,OACAH,EAAA/8C,GAAA,EAAA9B,KAAA6+C,EAAA/8C,GAAA,IAEA,MAEA,QACA+8C,EAAA/8C,GAAA,EAAA9B,KAAA6+C,EAAA/8C,GAAA,IAAAiH,EAAA,GAEA,MAEA,QACA81C,EAAA/8C,GAAA,EAAA9B,KAAA6+C,EAAA/8C,GAAA,IAAAiH,EAAA,GAAAA,EAAA,GAEA,MAEA,SAEA81C,EAAA/8C,GAAA,EAAAoH,MAAA21C,EAAA/8C,GAAA,IAAAiH,GAKA81C,EAAA/8C,GAAA,KACA+8C,EAAAx0B,OAAAvoB,EAAA,GAEAgE,KAEAhE,KAKA,MAAAoB,OAOA+7C,mBAAA,SAAA/6C,GACA,GAAAhB,KAAA07C,WAAA16C,GAAA,CACA,GAAA6E,GAAAE,UACA+1C,EAAAj2C,EAAAhH,MAEAi9C,GAAA,IACAj2C,EAAA41C,EAAA3+C,KAAA+I,EAAA,EAAAA,EAAAhH,OAAA,GAOA,QAJAo9B,GAAAp2B,IAAAhH,OAAA,GACA88C,EAAA37C,KAAA07C,WAAA16C,GACA4B,EAAA+4C,EAAA98C,OAEAD,EAAA,EAAqBA,EAAAgE,GAAS,CAE9B,OAAAk5C,GACA,OACAH,EAAA/8C,GAAA,EAAA9B,KAAAm/B,EAEA,MAEA,QACA0f,EAAA/8C,GAAA,EAAA9B,KAAAm/B,EAAAp2B,EAAA,GAEA,MAEA,QACA81C,EAAA/8C,GAAA,EAAA9B,KAAAm/B,EAAAp2B,EAAA,GAAAA,EAAA,GAEA,MAEA,SAEA81C,EAAA/8C,GAAA,EAAAoH,MAAAi2B,EAAAp2B,GAKA81C,EAAA/8C,GAAA,KACA+8C,EAAAx0B,OAAAvoB,EAAA,GAEAgE,KAEAhE,KAKA,MAAAoB,OAwFA,IAAAq/B,GAAA1X,CACA3rB,GAAAC,QAAAojC,GtBi3RM2c,KACA,SAAUhgD,EAAQC,EAASC,GuBhiSjC,QAAA+/C,GAAAr9C,GAIA,MAFAA,GAAAuN,KAAAX,MAAA5M,GAEAA,EAAA,IAAAA,EAAA,QAAAA,EAGA,QAAAs9C,GAAAt9C,GAIA,MAFAA,GAAAuN,KAAAX,MAAA5M,GAEAA,EAAA,IAAAA,EAAA,QAAAA,EAGA,QAAAu9C,GAAA11B,GAEA,MAAAA,GAAA,IAAAA,EAAA,IAAAA,EAGA,QAAA21B,GAAA15B,GAEA,MACAu5B,GADAv5B,EAAA7jB,QAAA,MAAA6jB,EAAA0gB,OAAA1gB,EAAA7jB,OAAA,GACAukB,WAAAV,GAAA,QAGAwwB,SAAAxwB,EAAA,KAGA,QAAA25B,GAAA35B,GAEA,MACAy5B,GADAz5B,EAAA7jB,QAAA,MAAA6jB,EAAA0gB,OAAA1gB,EAAA7jB,OAAA,GACAukB,WAAAV,GAAA,IAGAU,WAAAV,IAGA,QAAA45B,GAAAtE,EAAAC,EAAAzT,GAOA,MANAA,GAAA,EACAA,GAAA,EACGA,EAAA,IACHA,GAAA,GAGA,EAAAA,EAAA,EACAwT,GAAAC,EAAAD,GAAAxT,EAAA,EAGA,EAAAA,EAAA,EACAyT,EAGA,EAAAzT,EAAA,EACAwT,GAAAC,EAAAD,IAAA,IAAAxT,GAAA,EAGAwT,EAGA,QAAAuE,GAAAv7B,EAAAC,EAAAu7B,GACA,MAAAx7B,IAAAC,EAAAD,GAAAw7B,EAGA,QAAAC,GAAA77B,EAAA87B,EAAAvlC,EAAA8J,EAAAD,GAKA,MAJAJ,GAAA,GAAA87B,EACA97B,EAAA,GAAAzJ,EACAyJ,EAAA,GAAAK,EACAL,EAAA,GAAAI,EACAJ,EAGA,QAAA+7B,GAAA/7B,EAAAI,GAKA,MAJAJ,GAAA,GAAAI,EAAA,GACAJ,EAAA,GAAAI,EAAA,GACAJ,EAAA,GAAAI,EAAA,GACAJ,EAAA,GAAAI,EAAA,GACAJ,EAMA,QAAAg8B,GAAAC,EAAAC,GAEAC,GACAJ,EAAAI,EAAAD,GAGAC,EAAAC,EAAAC,IAAAJ,EAAAE,GAAAD,EAAA/1C,SAUA,QAAAkuB,GAAA4nB,EAAAC,GACA,GAAAD,EAAA,CAIAC,OACA,IAAAI,GAAAF,EAAA9zC,IAAA2zC,EAEA,IAAAK,EACA,MAAAP,GAAAG,EAAAI,EAIAL,IAAA,EAEA,IAAAn6B,GAAAm6B,EAAAzkC,QAAA,SAAAsF,aAEA,IAAAgF,IAAAy6B,GAGA,MAFAR,GAAAG,EAAAK,EAAAz6B,IACAk6B,EAAAC,EAAAC,GACAA,CAIA,UAAAp6B,EAAA0gB,OAAA,IA4BA,GAAAga,GAAA16B,EAAAve,QAAA,KACAk5C,EAAA36B,EAAAve,QAAA,IAEA,SAAAi5C,GAAAC,EAAA,IAAA36B,EAAA7jB,OAAA,CACA,GAAAy+C,GAAA56B,EAAAiiB,OAAA,EAAAyY,GACAh9B,EAAAsC,EAAAiiB,OAAAyY,EAAA,EAAAC,GAAAD,EAAA,IAAA1xB,MAAA,KACA6xB,EAAA,CAEA,QAAAD,GACA,WACA,OAAAl9B,EAAAvhB,OAEA,WADA49C,GAAAK,EAAA,QAIAS,GAAAlB,EAAAj8B,EAAAwL,MAIA,WACA,WAAAxL,EAAAvhB,WACA49C,GAAAK,EAAA,UAIAL,EAAAK,EAAAV,EAAAh8B,EAAA,IAAAg8B,EAAAh8B,EAAA,IAAAg8B,EAAAh8B,EAAA,IAAAm9B,GACAX,EAAAC,EAAAC,GACAA,EAEA,YACA,WAAA18B,EAAAvhB,WACA49C,GAAAK,EAAA,UAIA18B,EAAA,GAAAi8B,EAAAj8B,EAAA,IACAo9B,EAAAp9B,EAAA08B,GACAF,EAAAC,EAAAC,GACAA,EAEA,WACA,WAAA18B,EAAAvhB,WACA49C,GAAAK,EAAA,UAIAU,EAAAp9B,EAAA08B,GACAF,EAAAC,EAAAC,GACAA,EAEA,SACA,QAIAL,EAAAK,EAAA,aAnFA,CACA,OAAAp6B,EAAA7jB,OAAA,CACA,GAAA4+C,GAAAvK,SAAAxwB,EAAAiiB,OAAA,MAEA,OAAA8Y,IAAA,GAAAA,GAAA,MAKAhB,EAAAK,GAAA,KAAAW,IAAA,QAAAA,IAAA,MAAAA,GAAA,IAAAA,IAAA,KAAAA,GAAA,GAAAA,IAAA,KACAb,EAAAC,EAAAC,GACAA,OANAL,GAAAK,EAAA,SAOK,OAAAp6B,EAAA7jB,OAAA,CACL,GAAA4+C,GAAAvK,SAAAxwB,EAAAiiB,OAAA,MAEA,OAAA8Y,IAAA,GAAAA,GAAA,UAKAhB,EAAAK,GAAA,SAAAW,IAAA,UAAAA,IAAA,MAAAA,EAAA,GACAb,EAAAC,EAAAC,GACAA,OANAL,GAAAK,EAAA,YA6EA,QAAAU,GAAAE,EAAAC,GACA,GAAAnZ,IAAAphB,WAAAs6B,EAAA,qBAIA97B,EAAAy6B,EAAAqB,EAAA,IACArO,EAAAgN,EAAAqB,EAAA,IACAzF,EAAA5I,GAAA,GAAAA,GAAAztB,EAAA,GAAAytB,EAAAztB,EAAAytB,EAAAztB,EACAo2B,EAAA,EAAA3I,EAAA4I,CAQA,OAPA0F,SACAlB,EAAAkB,EAAA1B,EAAA,IAAAK,EAAAtE,EAAAC,EAAAzT,EAAA,MAAAyX,EAAA,IAAAK,EAAAtE,EAAAC,EAAAzT,IAAAyX,EAAA,IAAAK,EAAAtE,EAAAC,EAAAzT,EAAA,SAEA,IAAAkZ,EAAA7+C,SACA8+C,EAAA,GAAAD,EAAA,IAGAC,EAQA,QAAAC,GAAAD,GACA,GAAAA,EAAA,CAKA,GAUAE,GACAC,EAXAC,EAAAJ,EAAA,OACAK,EAAAL,EAAA,OACAjJ,EAAAiJ,EAAA,OACAM,EAAA9xC,KAAAiN,IAAA2kC,EAAAC,EAAAtJ,GAEAwJ,EAAA/xC,KAAAC,IAAA2xC,EAAAC,EAAAtJ,GAEAyJ,EAAAD,EAAAD,EAEAG,GAAAF,EAAAD,GAAA,CAIA,QAAAE,EACAN,EAAA,EACAC,EAAA,MACG,CAEHA,EADAM,EAAA,GACAD,GAAAD,EAAAD,GAEAE,GAAA,EAAAD,EAAAD,EAGA,IAAAI,KAAAH,EAAAH,GAAA,EAAAI,EAAA,GAAAA,EACAG,IAAAJ,EAAAF,GAAA,EAAAG,EAAA,GAAAA,EACAI,IAAAL,EAAAxJ,GAAA,EAAAyJ,EAAA,GAAAA,CAEAJ,KAAAG,EACAL,EAAAU,EAAAD,EACKN,IAAAE,EACLL,EAAA,IAAAQ,EAAAE,EACK7J,IAAAwJ,IACLL,EAAA,IAAAS,EAAAD,GAGAR,EAAA,IACAA,GAAA,GAGAA,EAAA,IACAA,GAAA,GAIA,GAAAH,IAAA,IAAAG,EAAAC,EAAAM,EAMA,OAJA,OAAAT,EAAA,IACAD,EAAAr4C,KAAAs4C,EAAA,IAGAD,GAUA,QAAA7wC,GAAAF,EAAA6xC,GACA,GAAA3kB,GAAA5E,EAAAtoB,EAEA,IAAAktB,EAAA,CACA,OAAAj7B,GAAA,EAAmBA,EAAA,EAAOA,IAE1Bi7B,EAAAj7B,GADA4/C,EAAA,EACA3kB,EAAAj7B,IAAA,EAAA4/C,GAAA,GAEA,IAAA3kB,EAAAj7B,IAAA4/C,EAAA3kB,EAAAj7B,GAAA,CAIA,OAAAk7B,GAAAD,EAAA,IAAAA,EAAAh7B,OAAA,eAUA,QAAA4/C,GAAA9xC,GACA,GAAAktB,GAAA5E,EAAAtoB,EAEA,IAAAktB,EACA,gBAAAA,EAAA,SAAAA,EAAA,SAAAA,EAAA,IAAA/wB,SAAA,IAAA/B,MAAA,GAYA,QAAA23C,GAAAC,EAAAC,EAAAh+B,GACA,GAAAg+B,KAAA//C,QAAA8/C,GAAA,GAAAA,GAAA,GAIA/9B,OACA,IAAArjB,GAAAohD,GAAAC,EAAA//C,OAAA,GACAggD,EAAA1yC,KAAAmY,MAAA/mB,GACAuhD,EAAA3yC,KAAA4yC,KAAAxhD,GACAyhD,EAAAJ,EAAAC,GACAI,EAAAL,EAAAE,GACAI,EAAA3hD,EAAAshD,CAKA,OAJAj+B,GAAA,GAAAq7B,EAAAM,EAAAyC,EAAA,GAAAC,EAAA,GAAAC,IACAt+B,EAAA,GAAAq7B,EAAAM,EAAAyC,EAAA,GAAAC,EAAA,GAAAC,IACAt+B,EAAA,GAAAq7B,EAAAM,EAAAyC,EAAA,GAAAC,EAAA,GAAAC,IACAt+B,EAAA,GAAAu7B,EAAAI,EAAAyC,EAAA,GAAAC,EAAA,GAAAC,IACAt+B,GAiBA,QAAAsB,GAAAy8B,EAAAC,EAAAO,GACA,GAAAP,KAAA//C,QAAA8/C,GAAA,GAAAA,GAAA,GAIA,GAAAphD,GAAAohD,GAAAC,EAAA//C,OAAA,GACAggD,EAAA1yC,KAAAmY,MAAA/mB,GACAuhD,EAAA3yC,KAAA4yC,KAAAxhD,GACAyhD,EAAA/pB,EAAA2pB,EAAAC,IACAI,EAAAhqB,EAAA2pB,EAAAE,IACAI,EAAA3hD,EAAAshD,EACAlyC,EAAAmtB,GAAAmiB,EAAAM,EAAAyC,EAAA,GAAAC,EAAA,GAAAC,IAAAjD,EAAAM,EAAAyC,EAAA,GAAAC,EAAA,GAAAC,IAAAjD,EAAAM,EAAAyC,EAAA,GAAAC,EAAA,GAAAC,IAAA/C,EAAAI,EAAAyC,EAAA,GAAAC,EAAA,GAAAC,KAAA,OACA,OAAAC,IACAxyC,QACAkyC,YACAC,aACAvhD,SACGoP,GAiBH,QAAAyyC,GAAAzyC,EAAA63B,EAAA5iB,EAAAytB,GAGA,GAFA1iC,EAAAsoB,EAAAtoB,GAOA,MAJAA,GAAAixC,EAAAjxC,GACA,MAAA63B,IAAA73B,EAAA,GAAAuvC,EAAA1X,IACA,MAAA5iB,IAAAjV,EAAA,GAAA0vC,EAAAz6B,IACA,MAAAytB,IAAA1iC,EAAA,GAAA0vC,EAAAhN,IACAvV,EAAA0jB,EAAA7wC,GAAA,QAWA,QAAA0yC,GAAA1yC,EAAA4wC,GAGA,IAFA5wC,EAAAsoB,EAAAtoB,KAEA,MAAA4wC,EAEA,MADA5wC,GAAA,GAAAwvC,EAAAoB,GACAzjB,EAAAntB,EAAA,QAUA,QAAAmtB,GAAAwlB,EAAAt+C,GACA,GAAAs+C,KAAAzgD,OAAA,CAIA,GAAAg+C,GAAAyC,EAAA,OAAAA,EAAA,OAAAA,EAAA,EAMA,OAJA,SAAAt+C,GAAA,SAAAA,GAAA,SAAAA,IACA67C,GAAA,IAAAyC,EAAA,IAGAt+C,EAAA,IAAA67C,EAAA,KAhmBA,GAAA0C,GAAArjD,EAAA,MAEAihD,GACAqC,aAAA,SACAC,WAAA,eACAC,cAAA,eACAC,MAAA,aACAC,YAAA,eACAC,OAAA,eACAC,OAAA,eACAC,QAAA,eACAC,OAAA,SACAC,gBAAA,eACAC,MAAA,WACAC,YAAA,cACAC,OAAA,aACAC,WAAA,eACAC,WAAA,cACAC,YAAA,aACAC,WAAA,cACAC,OAAA,cACAC,gBAAA,eACAC,UAAA,eACAC,SAAA,aACAC,MAAA,aACAC,UAAA,WACAC,UAAA,aACAC,eAAA,cACAC,UAAA,eACAC,WAAA,WACAC,UAAA,eACAC,WAAA,eACAC,aAAA,aACAC,gBAAA,aACAC,YAAA,aACAC,YAAA,cACAC,SAAA,WACAC,YAAA,eACAC,cAAA,eACAC,eAAA,aACAC,eAAA,YACAC,eAAA,YACAC,eAAA,aACAC,YAAA,aACAC,UAAA,cACAC,aAAA,aACAC,SAAA,eACAC,SAAA,eACAC,YAAA,cACAC,WAAA,aACAC,aAAA,eACAC,aAAA,aACAC,SAAA,aACAC,WAAA,eACAC,YAAA,eACAC,MAAA,aACAC,WAAA,cACAC,MAAA,eACAC,OAAA,WACAC,aAAA,cACAC,MAAA,eACAC,UAAA,eACAC,SAAA,eACAC,WAAA,aACAC,QAAA,YACAC,OAAA,eACAC,OAAA,eACAC,UAAA,eACAC,eAAA,eACAC,WAAA,aACAC,cAAA,eACAC,WAAA,eACAC,YAAA,eACAC,WAAA,eACAC,sBAAA,eACAC,WAAA,eACAC,YAAA,eACAC,WAAA,eACAC,WAAA,eACAC,aAAA,eACAC,eAAA,cACAC,cAAA,eACAC,gBAAA,eACAC,gBAAA,eACAC,gBAAA,eACAC,aAAA,eACAC,MAAA,WACAC,WAAA,aACAC,OAAA,eACAC,SAAA,aACAC,QAAA,WACAC,kBAAA,eACAC,YAAA,WACAC,cAAA,cACAC,cAAA,eACAC,gBAAA,cACAC,iBAAA,eACAC,mBAAA,aACAC,iBAAA,cACAC,iBAAA,cACAC,cAAA,aACAC,WAAA,eACAC,WAAA,eACAC,UAAA,eACAC,aAAA,eACAC,MAAA,WACAC,SAAA,eACAC,OAAA,aACAC,WAAA,cACAC,QAAA,aACAC,WAAA,YACAC,QAAA,eACAC,eAAA,eACAC,WAAA,eACAC,eAAA,eACAC,eAAA,eACAC,YAAA,eACAC,WAAA,eACAC,MAAA,cACAC,MAAA,eACAC,MAAA,eACAC,YAAA,eACAC,QAAA,aACAC,KAAA,WACAC,WAAA,eACAC,WAAA,cACAC,aAAA,aACAC,QAAA,eACAC,YAAA,cACAC,UAAA,aACAC,UAAA,eACAC,QAAA,aACAC,QAAA,eACAC,SAAA,eACAC,WAAA,cACAC,WAAA,eACAC,WAAA,eACAC,MAAA,eACAC,aAAA,aACAC,WAAA,cACAC,KAAA,eACAC,MAAA,aACAC,SAAA,eACAC,QAAA,aACAC,WAAA,cACAC,QAAA,eACAC,OAAA,eACAC,OAAA,eACAC,YAAA,eACAC,QAAA,aACAC,aAAA,eAkFA3L,EAAA,GAAAuC,GAAA,IACAxC,EAAA,KA8RA6L,EAAAlK,EAkCAmK,EAAA3mC,CA0DAjmB,GAAAg5B,QACAh5B,EAAA4Q,OACA5Q,EAAAwiD,QACAxiD,EAAAyiD,WACAziD,EAAA2sD,iBACA3sD,EAAAimB,OACAjmB,EAAA4sD,aACA5sD,EAAAmjD,YACAnjD,EAAAojD,cACApjD,EAAA69B,avB+rSMgvB,KACA,SAAU9sD,EAAQC,EAASC,GwBpyTjC,QAAA6sD,GAAA/2C,EAAAkb,GACA,GAAAzqB,IAcAumD,YACAC,gBAAA,EAMAC,oBACAC,eAKA,OAHAC,GAAA3mD,EAAAuP,EAAAkb,GAEAzqB,EAAAwmD,gBAAAI,EAAA5mD,EAAAuP,GACAvP,EAGA,QAAA2mD,GAAA3mD,EAAAuP,EAAAkb,GACA,GAAAo8B,GAAAt3C,EAAA6e,aAAA,WACA04B,EAAAv3C,EAAA6e,aAAA,eAEA24B,EAAAD,EAAArgD,IAAA,eACAugD,IAEA3kD,GAAAooB,EAAA7C,uBAAA,SAAAE,GAoCA,QAAAm/B,GAAAC,EAAAC,EAAArf,GACA,GAAAsf,GAAAtf,EAAA9vB,MAAAnI,SAAA,cAAAi3C,GACAO,EAAAD,EAAA3gD,IAAA,OAEA,IAAA4gD,IAAA,SAAAA,GAAAH,GAAAI,EAAAF,IAAA,CAIA,MAAAD,IACAA,EAAAC,EAAA3gD,IAAA,mBAGA2gD,EAAAF,EAAAK,EAAAzf,EAAA0f,EAAAV,EAAAv3C,EAAA23C,EAAAC,GAAAC,CACA,IAAAK,GAAAL,EAAA3gD,IAAA,QACAnK,EAAAorD,EAAA5f,EAAA9vB,OACA2vC,EAAAR,GAAAM,GAAA,aAAA3f,EAAAvpC,KAEAqpD,EAAA5nD,EAAAumD,SAAAjqD,IACAA,MACAwrC,OACAhgB,WACAs/B,mBACAD,iBACAQ,gBACAF,OACAI,UAAAP,EAAAF,GACAU,gBAEAC,GAAAzrD,GAAAsrD,EACA5nD,EAAAwmD,gBAAAmB,CACA,IAAAK,GAAAC,EAAAlB,EAAAjf,EAEA,UAAAkgB,EAAA,CACA,GAAAE,GAAAlB,EAAAgB,KAAAhB,EAAAgB,IACAzB,aAEA2B,GAAA3B,SAAAjqD,GAAAsrD,EACAM,EAAAC,OAAApB,EAAAiB,GAAAG,OACAP,EAAAM,cAxEA,GAAApgC,EAAAsgC,mBAAA,CAIA,GAAAC,GAAAX,EAAA5/B,EAAA9P,OACA+vC,EAAA/nD,EAAAymD,iBAAA4B,KACAroD,GAAA0mD,YAAA2B,GAAAvgC,CAGA,IAAAwgC,GAAAxgC,EAAA9P,MACAwvC,EAAAc,EAAAz4C,SAAA,UAAAg3C,EAIA,IAHAxkD,EAAAylB,EAAAygC,UAAA9kD,EAAAwjD,GAAA,SAGAn/B,EAAA0gC,gBAAA3B,GAEAW,EAAA/gD,IAAA,SAGA,GAAAgiD,GAAA,SAAAjB,EAAA/gD,IAAA,WACAiiD,EAAA,UAAAlB,EAAA/gD,IAAA,oBACAkiD,EAAA7gC,EAAA0gC,eAAAhB,EAAA/gD,IAAA,sBAEAgiD,GAAAC,IACArmD,EAAAsmD,EAAAC,SAAAnlD,EAAAwjD,GAAAyB,GAAA,QAAAD,IAGAC,GACArmD,EAAAsmD,EAAAE,UAAAplD,EAAAwjD,EAAA,iBAkDA,QAAAM,GAAAzf,EAAA0f,EAAAV,EAAAv3C,EAAA23C,EAAAC,GACA,GAAA2B,GAAAtB,EAAA33C,SAAA,eACAk5C,IACA1mD,IAAA,4HAAA2mD,GACAD,EAAAC,GAAAj7C,EAAAjO,MAAAgpD,EAAAriD,IAAAuiD,MAKAD,EAAAtB,KAAA,aAAA3f,EAAAvpC,QAAA4oD,EAGA,UAAA2B,EAAAriD,IAAA,UACAsiD,EAAAxqD,KAAA,OAGA,IAAA0qD,GAAAF,EAAAG,QAAAH,EAAAG,SAIA,IAFA,MAAAD,EAAAE,OAAAF,EAAAE,MAAA,GAEA,UAAAjC,IAEA+B,EAAAE,MAAA,GAGAhC,GAAA,CACA,GAAAiC,GAAAL,EAAAM,UAAAP,EAAAriD,IAAA,aACA2iD,IAAAr7C,EAAA1M,SAAA4nD,EAAAG,EAAA96C,WAIA,MAAAw5B,GAAA9vB,MAAAnI,SAAA,iBAAAoI,GAAA8wC,EAAAjC,EAAAv3C,IAGA,QAAAq3C,GAAA5mD,EAAAuP,GAEAA,EAAAsb,WAAA,SAAAC,GAEA,GAAAhD,GAAAgD,EAAA4L,iBACA4yB,EAAAx+B,EAAArkB,IAAA,sBACA8iD,EAAAz+B,EAAArkB,IAAA,kBAEAqhB,IAAA,SAAAwhC,IAAA,IAAAA,GAAA,SAAAA,IAAA,IAAAC,IAAA,IAAAz+B,EAAArkB,IAAA,wBAIApE,EAAArC,EAAAymD,iBAAAiB,EAAA5/B,EAAA9P,QAAA,SAAA4vC,GACA,GAAA9f,GAAA8f,EAAA9f,IAEAhgB,GAAA0hC,QAAA1hB,EAAA2hB,OAAA3hB,IACA8f,EAAAE,aAAAllD,KAAAkoB,GACA,MAAA88B,EAAA8B,kBAAA9B,EAAA8B,gBAAA,GACA9B,EAAA8B,iBAAA5+B,EAAAxS,UAAA8I,YAGG7jB,MAkBH,QAAA0qD,GAAAlB,EAAAjf,GAIA,OAHA6hB,GAAA7hB,EAAA9vB,MACAyxC,EAAA3hB,EAAA2hB,IAEAttD,EAAA,EAAiBA,EAAA4qD,EAAA3qD,OAAwBD,IAAA,CACzC,GAAAytD,GAAA7C,EAAA5qD,MAEA,IAAA0tD,EAAAD,EAAAH,EAAA,UAAAE,EAAA9wC,KAAAgxC,EAAAD,EAAAH,EAAA,aAAAE,EAAA59B,iBAAA89B,EAAAD,EAAAH,EAAA,YAAAE,EAAAhqD,MACA,MAAAxD,IAKA,QAAA0tD,GAAAC,EAAAC,GACA,cAAAD,GAAA/7C,EAAA/M,QAAA8oD,IAAA/7C,EAAArM,QAAAooD,EAAAC,IAAA,GAAAD,IAAAC,EAGA,QAAAC,GAAAL,GACA,GAAA/B,GAAAqC,EAAAN,EAEA,IAAA/B,EAAA,CAIA,GAAAR,GAAAQ,EAAAR,iBACAloC,EAAA0oC,EAAA9f,KAAA5oB,MACAzP,EAAA23C,EAAA33C,OACA8N,EAAA6pC,EAAA3gD,IAAA,UACA3L,EAAAssD,EAAA3gD,IAAA,QAEA,OAAA3L,IACAA,EAAAokB,EAAAsT,MAAA13B,GAGA,IAAA+sD,GAAAP,EAAAF,EAGA,OAAA7pC,IACA9N,EAAA8N,OAAAsqC,EAAA,cAGA,IAAA9gB,GAAA7nB,EAAAynB,YAAAriC,OACAyiC,GAAA,GAAAA,EAAA,IAAAA,EAAAmjB,WAGA,MAAApvD,GAEAA,EAAAisC,EAAA,MAEAjsC,EAAAisC,EAAA,IAGAjsC,EAAAisC,EAAA,KACAjsC,EAAAisC,EAAA,IAGAt3B,EAAA3U,QAEA+sD,IACAp4C,EAAA8N,OAAAqqC,EAAA9f,KAAA5oB,MAAAirC,UAAA,gBAIA,QAAAF,GAAAN,GACA,GAAAlD,IAAAkD,EAAAp6C,QAAA6e,aAAA,oBAA6Eq4B,gBAC7E,OAAAA,MAAAF,SAAAmB,EAAAiC,IAGA,QAAAS,GAAAT,GACA,GAAA/B,GAAAqC,EAAAN,EACA,OAAA/B,MAAAR,iBAGA,QAAAE,GAAAF,GACA,QAAAA,EAAA3gD,IAAA,eAQA,QAAAihD,GAAA1vC,GACA,MAAAA,GAAAzZ,KAAA,KAAAyZ,EAAAa,GA1RA,GAAA9K,GAAAtU,EAAA,MAEAwe,EAAAxe,EAAA,MAEA4I,EAAA0L,EAAA1L,KACAoB,EAAAsK,EAAAtK,KAwRAjK,GAAA8sD,UACA9sD,EAAAwwD,WACAxwD,EAAAywD,cACAzwD,EAAA4wD,sBACA5wD,EAAAkuD,WxBkzTM2C,KACA,SAAU9wD,EAAQC,EAASC,GyBhlUjC,QAAAmjC,GAAAuD,GAEA,OAAAhkC,GAAA,EAAiBA,EAAAgkC,EAAA/jC,OAAuBD,IACxCgkC,EAAAhkC,GAAA,KACAgkC,EAAAhkC,GAAA,GAAAgkC,EAAAhkC,GAAA,GAIA,iBAAA6b,EAAAsyC,EAAAC,GAGA,OAFA/rD,MAEArC,EAAA,EAAmBA,EAAAgkC,EAAA/jC,OAAuBD,IAAA,CAC1C,GAAAquD,GAAArqB,EAAAhkC,GAAA,EAEA,MAAAmuD,GAAAv8C,EAAArM,QAAA4oD,EAAAE,IAAA,GAAAD,GAAAx8C,EAAArM,QAAA6oD,EAAAC,GAAA,IAIA,GAAA/lD,GAAAuT,EAAApK,WAAA48C,EAEA,OAAA/lD,IACAjG,EAAA2hC,EAAAhkC,GAAA,IAAAsI,IAIA,MAAAjG,IA7BA,GAAAuP,GAAAtU,EAAA,KAiCAF,GAAAC,QAAAojC,GzB0lUM6tB,KACA,SAAUlxD,EAAQC,EAASC,G0BlnUjC,QAAAmuC,GAAA8iB,GACAntD,KAAAotD,SAAAD,MAOAntD,KAAAqtD,SAAApmC,UAOAjnB,KAAAstD,UAAA,EACAttD,KAAAwoB,MAAAxoB,KAAAwoB,KAAAxiB,MAAAhG,KAAA+F,WA1BA,GAAAk8B,GAAA/lC,EAAA,KAmCAmuC,GAAAltC,UAAA83B,MAAA,SAAA/tB,GAKA,MAAAA,IAGAmjC,EAAAltC,UAAAowD,WAAA,SAAAnrD,GACA,MAAApC,MAAAotD,SAAAhrD,IAGAioC,EAAAltC,UAAAmhC,QAAA,SAAAp3B,GACA,GAAAsiC,GAAAxpC,KAAAqtD,OACA,OAAAnmD,IAAAsiC,EAAA,IAAAtiC,GAAAsiC,EAAA,IASAa,EAAAltC,UAAA0kB,UAAA,SAAA3a,GACA,GAAAsiC,GAAAxpC,KAAAqtD,OAEA,OAAA7jB,GAAA,KAAAA,EAAA,GACA,IAGAtiC,EAAAsiC,EAAA,KAAAA,EAAA,GAAAA,EAAA,KASAa,EAAAltC,UAAAwkB,MAAA,SAAAza,GACA,GAAAsiC,GAAAxpC,KAAAqtD,OACA,OAAAnmD,IAAAsiC,EAAA,GAAAA,EAAA,IAAAA,EAAA,IAQAa,EAAAltC,UAAAqwD,YAAA,SAAAhtB,GACA,GAAAgJ,GAAAxpC,KAAAqtD,OACA7sB,GAAA,GAAAgJ,EAAA,KAAAA,EAAA,GAAAhJ,EAAA,IACAA,EAAA,GAAAgJ,EAAA,KAAAA,EAAA,GAAAhJ,EAAA,KAUA6J,EAAAltC,UAAAswD,oBAAA,SAAA5oD,EAAAqnD,GACAlsD,KAAAwtD,YAAA3oD,EAAA6oD,cAAAxB,GAAA,KAQA7hB,EAAAltC,UAAAisC,UAAA,WACA,MAAAppC,MAAAqtD,QAAAtmD,SASAsjC,EAAAltC,UAAAwsC,UAAA,SAAAgkB,EAAAC,GACA,GAAAC,GAAA7tD,KAAAqtD,OAEAzpC,OAAA+pC,KACAE,EAAA,GAAAF,GAGA/pC,MAAAgqC,KACAC,EAAA,GAAAD,IAQAvjB,EAAAltC,UAAAmuC,eAAA,WAIA,OAHAZ,MACAa,EAAAvrC,KAAAwrC,WAEA5sC,EAAA,EAAiBA,EAAA2sC,EAAA1sC,OAAkBD,IACnC8rC,EAAArlC,KAAArF,KAAA2rC,SAAAJ,EAAA3sC,IAGA,OAAA8rC,IAQAL,EAAAltC,UAAAyvD,QAAA,WACA,MAAA5sD,MAAA8tD,UAMAzjB,EAAAltC,UAAAksC,SAAA,SAAAujB,GACA5sD,KAAA8tD,SAAAlB,GAEA3qB,EAAAa,kBAAAuH,GACApI,EAAA4D,sBAAAwE,GACAzD,oBAAA,GAEA,IAAAvH,GAAAgL,CACAruC,GAAAC,QAAAojC,G1BkoUM0uB,KACA,SAAU/xD,EAAQC,G2BtyUxB,GAAAq7B,GAAA,CAEA,qBAAAC,UACAD,EAAAnrB,KAAAC,IAAAmrB,OAAA7O,kBAAA,KAgBA,IAEAA,GAAA4O,CACAr7B,GAAA+xD,UAHA,EAIA/xD,EAAAysB,oB3B4yUMulC,KACA,SAAUjyD,EAAQC,EAASC,G4Bp0UjC,GAAAsU,GAAAtU,EAAA,MAEAgyD,EAAAhyD,EAAA,MAEAid,EAAAjd,EAAA,MA2BAmc,EAAA,SAAA9O,GACAA,QACA2kD,EAAApxD,KAAAkD,KAAAuJ,EAEA,QAAAxK,KAAAwK,GACAA,EAAApG,eAAApE,KACAiB,KAAAjB,GAAAwK,EAAAxK,GAIAiB,MAAAmuD,aACAnuD,KAAAouD,UAAA,KACApuD,KAAA08B,SAAA,EAGArkB,GAAAlb,WACAG,YAAA+a,EACAhB,SAAA,EAKArW,KAAA,QAQAkqB,QAAA,EAKAmjC,SAAA,WACA,MAAAruD,MAAAmuD,UAAApnD,SAQAwlC,QAAA,SAAAhsB,GACA,MAAAvgB,MAAAmuD,UAAA5tC,IAQA+tC,YAAA,SAAAlsD,GAGA,OAFAisD,GAAAruD,KAAAmuD,UAEAvvD,EAAA,EAAmBA,EAAAyvD,EAAAxvD,OAAqBD,IACxC,GAAAyvD,EAAAzvD,GAAAwD,SACA,MAAAisD,GAAAzvD,IAQA2vD,WAAA,WACA,MAAAvuD,MAAAmuD,UAAAtvD,QAOAqiB,IAAA,SAAAxS,GAOA,MANAA,QAAA1O,MAAA0O,EAAAwH,SAAAlW,OACAA,KAAAmuD,UAAA9oD,KAAAqJ,GAEA1O,KAAAwuD,OAAA9/C,IAGA1O,MAQAyuD,UAAA,SAAA//C,EAAAggD,GACA,GAAAhgD,OAAA1O,MAAA0O,EAAAwH,SAAAlW,MAAA0uD,KAAAx4C,SAAAlW,KAAA,CACA,GAAAquD,GAAAruD,KAAAmuD,UACA5tC,EAAA8tC,EAAAlqD,QAAAuqD,EAEAnuC,IAAA,IACA8tC,EAAAlnC,OAAA5G,EAAA,EAAA7R,GAEA1O,KAAAwuD,OAAA9/C,IAIA,MAAA1O,OAEAwuD,OAAA,SAAA9/C,GACAA,EAAAwH,QACAxH,EAAAwH,OAAAuY,OAAA/f,GAGAA,EAAAwH,OAAAlW,IACA,IAAA6vB,GAAA7vB,KAAAouD,UACA/lC,EAAAroB,KAAA0N,IAEAmiB,QAAAnhB,EAAA0/C,YACAv+B,EAAA8+B,aAAAjgD,GAEAA,YAAA2J,IACA3J,EAAAkgD,qBAAA/+B,IAIAxH,KAAAsW,WAOAlQ,OAAA,SAAA/f,GACA,GAAA2Z,GAAAroB,KAAA0N,KACAmiB,EAAA7vB,KAAAouD,UACAC,EAAAruD,KAAAmuD,UACA5tC,EAAA/P,EAAArM,QAAAkqD,EAAA3/C,EAEA,OAAA6R,GAAA,EACAvgB,MAGAquD,EAAAlnC,OAAA5G,EAAA,GACA7R,EAAAwH,OAAA,KAEA2Z,IACAA,EAAAg/B,eAAAngD,GAEAA,YAAA2J,IACA3J,EAAAogD,uBAAAj/B,IAIAxH,KAAAsW,UACA3+B,OAMA+uD,UAAA,WACA,GAEArgD,GACA9P,EAHAyvD,EAAAruD,KAAAmuD,UACAt+B,EAAA7vB,KAAAouD,SAIA,KAAAxvD,EAAA,EAAeA,EAAAyvD,EAAAxvD,OAAqBD,IACpC8P,EAAA2/C,EAAAzvD,GAEAixB,IACAA,EAAAg/B,eAAAngD,GAEAA,YAAA2J,IACA3J,EAAAogD,uBAAAj/B,IAIAnhB,EAAAwH,OAAA,IAIA,OADAm4C,GAAAxvD,OAAA,EACAmB,MAQAmsC,UAAA,SAAApnC,EAAAC,GAGA,OAFAqpD,GAAAruD,KAAAmuD,UAEAvvD,EAAA,EAAmBA,EAAAyvD,EAAAxvD,OAAqBD,IAAA,CACxC,GAAA8P,GAAA2/C,EAAAzvD,EACAmG,GAAAjI,KAAAkI,EAAA0J,EAAA9P,GAGA,MAAAoB,OAQAyO,SAAA,SAAA1J,EAAAC,GACA,OAAApG,GAAA,EAAmBA,EAAAoB,KAAAmuD,UAAAtvD,OAA2BD,IAAA,CAC9C,GAAA8P,GAAA1O,KAAAmuD,UAAAvvD,EACAmG,GAAAjI,KAAAkI,EAAA0J,GAEA,UAAAA,EAAA1N,MACA0N,EAAAD,SAAA1J,EAAAC,GAIA,MAAAhF,OAEA4uD,qBAAA,SAAA/+B,GACA,OAAAjxB,GAAA,EAAmBA,EAAAoB,KAAAmuD,UAAAtvD,OAA2BD,IAAA,CAC9C,GAAA8P,GAAA1O,KAAAmuD,UAAAvvD,EACAixB,GAAA8+B,aAAAjgD,GAEAA,YAAA2J,IACA3J,EAAAkgD,qBAAA/+B,KAIAi/B,uBAAA,SAAAj/B,GACA,OAAAjxB,GAAA,EAAmBA,EAAAoB,KAAAmuD,UAAAtvD,OAA2BD,IAAA,CAC9C,GAAA8P,GAAA1O,KAAAmuD,UAAAvvD,EACAixB,GAAAg/B,eAAAngD,GAEAA,YAAA2J,IACA3J,EAAAogD,uBAAAj/B,KAIA1hB,MAAA,WAGA,MAFAnO,MAAA08B,SAAA,EACA18B,KAAA0N,MAAA1N,KAAA0N,KAAAixB,UACA3+B,MAMAmK,gBAAA,SAAA6kD,GAOA,OALAllD,GAAA,KACAmlD,EAAA,GAAA91C,GAAA,SACAk1C,EAAAW,GAAAhvD,KAAAmuD,UACAe,KAEAtwD,EAAA,EAAmBA,EAAAyvD,EAAAxvD,OAAqBD,IAAA,CACxC,GAAA8P,GAAA2/C,EAAAzvD,EAEA,KAAA8P,EAAAuhB,SAAAvhB,EAAAygD,UAAA,CAIA,GAAAC,GAAA1gD,EAAAvE,kBACAgM,EAAAzH,EAAAuH,kBAAAi5C,EAQA/4C,IACA84C,EAAAnuC,KAAAsuC,GACAH,EAAAjkD,eAAAmL,GACArM,KAAAmlD,EAAA1sD,QACAuH,EAAAy2B,MAAA0uB,KAEAnlD,KAAAslD,EAAA7sD,QACAuH,EAAAy2B,MAAA6uB,KAIA,MAAAtlD,IAAAmlD,IAGAz+C,EAAAnM,SAAAgU,EAAA61C,EACA,IAAA7uB,GAAAhnB,CACArc,GAAAC,QAAAojC,G5B00UMgwB,KACA,SAAUrzD,EAAQC,EAASC,G6BloVjC,GAAAozD,GAAApzD,EAAA,MAEAmkC,EAAAnkC,EAAA,MAEAqzD,EAAArzD,EAAA,MAEAid,EAAAjd,EAAA,MAEAk5B,EAAAl5B,EAAA,MAEAo7B,EAAAlC,EAAA1M,iBAUA8mC,GACAjrB,EAAA,EACA6Z,EAAA,EACAzJ,EAAA,EACA8a,EAAA,EACAhb,EAAA,EACAib,EAAA,EAEA3R,EAAA,GAWA3kC,KACAhN,KACAujD,KACAC,KACA/3C,EAAA1L,KAAAiN,IACAxB,EAAAzL,KAAAC,IACAyjD,EAAA1jD,KAAA++B,IACA4kB,EAAA3jD,KAAAg/B,IACA+J,EAAA/oC,KAAAoV,KACAwuC,EAAA5jD,KAAAuK,IACAs5C,EAAA,mBAAA5tC,cAMAqZ,EAAA,SAAAw0B,GACAjwD,KAAAkwD,WAAAD,EAEAjwD,KAAAkwD,YAKAlwD,KAAA6E,SAGA7E,KAAAiE,KAAA,KAQAw3B,GAAAt+B,WACAG,YAAAm+B,EACA00B,IAAA,EACAC,IAAA,EACAC,IAAA,EACAC,IAAA,EAEAC,IAAA,EACAC,IAAA,EACAC,KAAA,EACAC,UAAA,KACAC,YAAA,EACAC,SAAA,EACAC,SAAA,EAKAxzB,SAAA,SAAA0D,EAAAC,GACAhhC,KAAAuwD,IAAAR,EAAA,EAAAz4B,EAAAyJ,IAAA,EACA/gC,KAAAwwD,IAAAT,EAAA,EAAAz4B,EAAA0J,IAAA,GAEAh9B,WAAA,WACA,MAAAhE,MAAAiE,MAOAq5B,UAAA,SAAArB,GAcA,MAbAj8B,MAAAiE,KAAAg4B,EACAA,KAAAqB,YACArB,IAAAj8B,KAAAs3B,IAAA2E,EAAA3E,KAEAt3B,KAAAkwD,YACAlwD,KAAAywD,KAAA,GAGAzwD,KAAA0wD,YACA1wD,KAAA0wD,UAAA,KACA1wD,KAAA2wD,YAAA,GAGA3wD,MAQA8wD,OAAA,SAAApmD,EAAAC,GAWA,MAVA3K,MAAA+wD,QAAAvB,EAAAjrB,EAAA75B,EAAAC,GACA3K,KAAAiE,MAAAjE,KAAAiE,KAAA6sD,OAAApmD,EAAAC,GAKA3K,KAAAqwD,IAAA3lD,EACA1K,KAAAswD,IAAA3lD,EACA3K,KAAAmwD,IAAAzlD,EACA1K,KAAAowD,IAAAzlD,EACA3K,MAQAgxD,OAAA,SAAAtmD,EAAAC,GACA,GAAAsmD,GAAAlB,EAAArlD,EAAA1K,KAAAmwD,KAAAnwD,KAAAuwD,KAAAR,EAAAplD,EAAA3K,KAAAowD,KAAApwD,KAAAwwD,KACAxwD,KAAAywD,KAAA,CAYA,OAXAzwD,MAAA+wD,QAAAvB,EAAApR,EAAA1zC,EAAAC,GAEA3K,KAAAiE,MAAAgtD,IACAjxD,KAAAkxD,aAAAlxD,KAAAmxD,cAAAzmD,EAAAC,GAAA3K,KAAAiE,KAAA+sD,OAAAtmD,EAAAC,IAGAsmD,IACAjxD,KAAAmwD,IAAAzlD,EACA1K,KAAAowD,IAAAzlD,GAGA3K,MAYAoxD,cAAA,SAAA3lD,EAAAG,EAAAF,EAAAG,EAAA6qC,EAAAC,GASA,MARA32C,MAAA+wD,QAAAvB,EAAA7a,EAAAlpC,EAAAG,EAAAF,EAAAG,EAAA6qC,EAAAC,GAEA32C,KAAAiE,OACAjE,KAAAkxD,aAAAlxD,KAAAqxD,gBAAA5lD,EAAAG,EAAAF,EAAAG,EAAA6qC,EAAAC,GAAA32C,KAAAiE,KAAAmtD,cAAA3lD,EAAAG,EAAAF,EAAAG,EAAA6qC,EAAAC,IAGA32C,KAAAmwD,IAAAzZ,EACA12C,KAAAowD,IAAAzZ,EACA32C,MAUAsxD,iBAAA,SAAA7lD,EAAAG,EAAAF,EAAAG,GASA,MARA7L,MAAA+wD,QAAAvB,EAAAC,EAAAhkD,EAAAG,EAAAF,EAAAG,GAEA7L,KAAAiE,OACAjE,KAAAkxD,aAAAlxD,KAAAuxD,mBAAA9lD,EAAAG,EAAAF,EAAAG,GAAA7L,KAAAiE,KAAAqtD,iBAAA7lD,EAAAG,EAAAF,EAAAG,IAGA7L,KAAAmwD,IAAAzkD,EACA1L,KAAAowD,IAAAvkD,EACA7L,MAYAwxD,IAAA,SAAAC,EAAAC,EAAAhV,EAAAiV,EAAAC,EAAAC,GAKA,MAJA7xD,MAAA+wD,QAAAvB,EAAA/a,EAAAgd,EAAAC,EAAAhV,IAAAiV,EAAAC,EAAAD,EAAA,EAAAE,EAAA,KACA7xD,KAAAiE,MAAAjE,KAAAiE,KAAAutD,IAAAC,EAAAC,EAAAhV,EAAAiV,EAAAC,EAAAC,GACA7xD,KAAAmwD,IAAAN,EAAA+B,GAAAlV,EAAA+U,EACAzxD,KAAAowD,IAAAN,EAAA8B,GAAAlV,EAAA+U,EACAzxD,MAGA8xD,MAAA,SAAArmD,EAAAG,EAAAF,EAAAG,EAAAkmD,GAKA,MAJA/xD,MAAAiE,MACAjE,KAAAiE,KAAA6tD,MAAArmD,EAAAG,EAAAF,EAAAG,EAAAkmD,GAGA/xD,MAGA8J,KAAA,SAAAY,EAAAC,EAAAwzB,EAAAqG,GAGA,MAFAxkC,MAAAiE,MAAAjE,KAAAiE,KAAA6F,KAAAY,EAAAC,EAAAwzB,EAAAqG,GACAxkC,KAAA+wD,QAAAvB,EAAAzR,EAAArzC,EAAAC,EAAAwzB,EAAAqG,GACAxkC,MAMAgyD,UAAA,WACAhyD,KAAA+wD,QAAAvB,EAAAE,EACA,IAAAzzB,GAAAj8B,KAAAiE,KACAuyC,EAAAx2C,KAAAqwD,IACA5Z,EAAAz2C,KAAAswD,GASA,OAPAr0B,KACAj8B,KAAAkxD,cAAAlxD,KAAAmxD,cAAA3a,EAAAC,GACAxa,EAAA+1B,aAGAhyD,KAAAmwD,IAAA3Z,EACAx2C,KAAAowD,IAAA3Z,EACAz2C,MASAkN,KAAA,SAAA+uB,GACAA,KAAA/uB,OACAlN,KAAAiyD,YAOAhlD,OAAA,SAAAgvB,GACAA,KAAAhvB,SACAjN,KAAAiyD,YAQA90B,YAAA,SAAAH,GACA,GAAAA,YAAAh0B,OAAA,CACAhJ,KAAA0wD,UAAA1zB,EACAh9B,KAAA4wD,SAAA,CAGA,QAFAsB,GAAA,EAEAtzD,EAAA,EAAqBA,EAAAo+B,EAAAn+B,OAAqBD,IAC1CszD,GAAAl1B,EAAAp+B,EAGAoB,MAAA6wD,SAAAqB,EAGA,MAAAlyD,OAQAu9B,kBAAA,SAAA40B,GAEA,MADAnyD,MAAA2wD,YAAAwB,EACAnyD,MAOA4C,IAAA,WACA,MAAA5C,MAAAywD,MAMA2B,QAAA,SAAAvtD,GACA,GAAAjC,GAAAiC,EAAAhG,MAEAmB,MAAA6E,MAAA7E,KAAA6E,KAAAhG,QAAA+D,IAAAotD,IACAhwD,KAAA6E,KAAA,GAAAud,cAAAxf,GAGA,QAAAhE,GAAA,EAAmBA,EAAAgE,EAAShE,IAC5BoB,KAAA6E,KAAAjG,GAAAiG,EAAAjG,EAGAoB,MAAAywD,KAAA7tD,GAOAyvD,WAAA,SAAAroD,GACAA,YAAAhB,SACAgB,MAOA,QAJApH,GAAAoH,EAAAnL,OACAyzD,EAAA,EACAH,EAAAnyD,KAAAywD,KAEA7xD,EAAA,EAAmBA,EAAAgE,EAAShE,IAC5B0zD,GAAAtoD,EAAApL,GAAAgE,KAGAotD,IAAAhwD,KAAA6E,eAAAud,gBACApiB,KAAA6E,KAAA,GAAAud,cAAA+vC,EAAAG,GAGA,QAAA1zD,GAAA,EAAmBA,EAAAgE,EAAShE,IAG5B,OAFA2zD,GAAAvoD,EAAApL,GAAAiG,KAEAk/B,EAAA,EAAqBA,EAAAwuB,EAAA1zD,OAA2BklC,IAChD/jC,KAAA6E,KAAAstD,KAAAI,EAAAxuB,EAIA/jC,MAAAywD,KAAA0B,GAOApB,QAAA,SAAAyB,GACA,GAAAxyD,KAAAkwD,UAAA,CAIA,GAAArrD,GAAA7E,KAAA6E,IAEA7E,MAAAywD,KAAA1qD,UAAAlH,OAAAgG,EAAAhG,SAGAmB,KAAAyyD,cAEA5tD,EAAA7E,KAAA6E,KAGA,QAAAjG,GAAA,EAAmBA,EAAAmH,UAAAlH,OAAsBD,IACzCiG,EAAA7E,KAAAywD,QAAA1qD,UAAAnH,EAGAoB,MAAA0yD,SAAAF,IAEAC,YAAA,WAEA,KAAAzyD,KAAA6E,eAAAmE,QAAA,CAGA,OAFA2pD,MAEA/zD,EAAA,EAAqBA,EAAAoB,KAAAywD,KAAe7xD,IACpC+zD,EAAA/zD,GAAAoB,KAAA6E,KAAAjG,EAGAoB,MAAA6E,KAAA8tD,IASAzB,WAAA,WACA,MAAAlxD,MAAA0wD,WAEAS,cAAA,SAAA1lD,EAAAG,GACA,GAWAgnD,GAEAryC,EAbAsyC,EAAA7yD,KAAA6wD,SACAsB,EAAAnyD,KAAA2wD,YACA3zB,EAAAh9B,KAAA0wD,UACAz0B,EAAAj8B,KAAAiE,KACAuyC,EAAAx2C,KAAAmwD,IACA1Z,EAAAz2C,KAAAowD,IACA1iB,EAAAjiC,EAAA+qC,EACA7I,EAAA/hC,EAAA6qC,EACAn0B,EAAA4yB,EAAAxH,IAAAC,KACAjjC,EAAA8rC,EACA7rC,EAAA8rC,EAEAqc,EAAA91B,EAAAn+B,MAcA,KAZA6uC,GAAAprB,EACAqrB,GAAArrB,EAEA6vC,EAAA,IAEAA,EAAAU,EAAAV,GAGAA,GAAAU,EACAnoD,GAAAynD,EAAAzkB,EACA/iC,GAAAwnD,EAAAxkB,EAEAD,EAAA,GAAAhjC,GAAAe,GAAAiiC,EAAA,GAAAhjC,GAAAe,GAAA,GAAAiiC,IAAAC,EAAA,GAAAhjC,GAAAiB,GAAA+hC,EAAA,GAAAhjC,GAAAiB,IACA2U,EAAAvgB,KAAA4wD,SACAgC,EAAA51B,EAAAzc,GACA7V,GAAAgjC,EAAAklB,EACAjoD,GAAAgjC,EAAAilB,EACA5yD,KAAA4wD,UAAArwC,EAAA,GAAAuyC,EAEAplB,EAAA,GAAAhjC,EAAA8rC,GAAA9I,EAAA,GAAAhjC,EAAA8rC,GAAA7I,EAAA,GAAAhjC,EAAA8rC,GAAA9I,EAAA,GAAAhjC,EAAA8rC,GAIAxa,EAAA1b,EAAA,qBAAAmtB,GAAA,EAAA71B,EAAAnN,EAAAe,GAAAmM,EAAAlN,EAAAe,GAAAkiC,GAAA,EAAA91B,EAAAlN,EAAAiB,GAAAgM,EAAAjN,EAAAiB,GAIA8hC,GAAAhjC,EAAAe,EACAkiC,EAAAhjC,EAAAiB,EACA5L,KAAA2wD,aAAAzb,EAAAxH,IAAAC,MAGA0jB,gBAAA,SAAA5lD,EAAAG,EAAAF,EAAAG,EAAA6qC,EAAAC,GACA,GAMAx0B,GACAurB,EACAC,EAKAjjC,EACAC,EAdAkoD,EAAA7yD,KAAA6wD,SACAsB,EAAAnyD,KAAA2wD,YACA3zB,EAAAh9B,KAAA0wD,UACAz0B,EAAAj8B,KAAAiE,KACAuyC,EAAAx2C,KAAAmwD,IACA1Z,EAAAz2C,KAAAowD,IAIArc,EAAAub,EAAAvb,QACAgf,EAAA,EACAxyC,EAAAvgB,KAAA4wD,SACAkC,EAAA91B,EAAAn+B,OAGAm0D,EAAA,CASA,KAPAb,EAAA,IAEAA,EAAAU,EAAAV,GAGAA,GAAAU,EAEA1wC,EAAA,EAAeA,EAAA,EAAOA,GAAA,GACtBurB,EAAAqG,EAAAyC,EAAA/qC,EAAAC,EAAAgrC,EAAAv0B,EAAA,IAAA4xB,EAAAyC,EAAA/qC,EAAAC,EAAAgrC,EAAAv0B,GACAwrB,EAAAoG,EAAA0C,EAAA7qC,EAAAC,EAAA8qC,EAAAx0B,EAAA,IAAA4xB,EAAA0C,EAAA7qC,EAAAC,EAAA8qC,EAAAx0B,GACA4wC,GAAA7d,EAAAxH,IAAAC,IAIA,MAAUptB,EAAAuyC,MACVE,GAAAh2B,EAAAzc,IAEA4xC,GAHuB5xC,KAUvB,IAFA4B,GAAA6wC,EAAAb,GAAAY,EAEA5wC,GAAA,GACAzX,EAAAqpC,EAAAyC,EAAA/qC,EAAAC,EAAAgrC,EAAAv0B,GACAxX,EAAAopC,EAAA0C,EAAA7qC,EAAAC,EAAA8qC,EAAAx0B,GAGA5B,EAAA,EAAA0b,EAAA60B,OAAApmD,EAAAC,GAAAsxB,EAAA+0B,OAAAtmD,EAAAC,GACAwX,GAAA6a,EAAAzc,GAAAwyC,EACAxyC,KAAA,GAAAuyC,CAIAvyC,GAAA,OAAA0b,EAAA+0B,OAAAta,EAAAC,GACAjJ,EAAAgJ,EAAAhsC,EACAijC,EAAAgJ,EAAAhsC,EACA3K,KAAA2wD,aAAAzb,EAAAxH,IAAAC,MAEA4jB,mBAAA,SAAA9lD,EAAAG,EAAAF,EAAAG,GAEA,GAAA6qC,GAAAhrC,EACAirC,EAAA9qC,CACAH,MAAA,EAAAD,GAAA,EACAI,KAAA,EAAAD,GAAA,EACAH,GAAAzL,KAAAmwD,IAAA,EAAA1kD,GAAA,EACAG,GAAA5L,KAAAowD,IAAA,EAAAxkD,GAAA,EAEA5L,KAAAqxD,gBAAA5lD,EAAAG,EAAAF,EAAAG,EAAA6qC,EAAAC,IAOAsb,SAAA,WACA,GAAAptD,GAAA7E,KAAA6E,IAEAA,aAAAmE,SACAnE,EAAAhG,OAAAmB,KAAAywD,KAEAT,IACAhwD,KAAA6E,KAAA,GAAAud,cAAAvd,MAQAsF,gBAAA,WACAiP,EAAA,GAAAA,EAAA,GAAAu2C,EAAA,GAAAA,EAAA,GAAAtqC,OAAA4tC,UACA7mD,EAAA,GAAAA,EAAA,GAAAwjD,EAAA,GAAAA,EAAA,IAAAvqC,OAAA4tC,SAOA,QANApuD,GAAA7E,KAAA6E,KACAquD,EAAA,EACAC,EAAA,EACA3c,EAAA,EACAC,EAAA,EAEA73C,EAAA,EAAmBA,EAAAiG,EAAAhG,QAAiB,CACpC,GAAA2zD,GAAA3tD,EAAAjG,IAaA,QAXA,GAAAA,IAKAs0D,EAAAruD,EAAAjG,GACAu0D,EAAAtuD,EAAAjG,EAAA,GACA43C,EAAA0c,EACAzc,EAAA0c,GAGAX,GACA,IAAAhD,GAAAjrB,EAGAiS,EAAA3xC,EAAAjG,KACA63C,EAAA5xC,EAAAjG,KACAs0D,EAAA1c,EACA2c,EAAA1c,EACAkZ,EAAA,GAAAnZ,EACAmZ,EAAA,GAAAlZ,EACAmZ,EAAA,GAAApZ,EACAoZ,EAAA,GAAAnZ,CACA,MAEA,KAAA+Y,GAAApR,EACAmR,EAAA6D,SAAAF,EAAAC,EAAAtuD,EAAAjG,GAAAiG,EAAAjG,EAAA,GAAA+wD,EAAAC,GACAsD,EAAAruD,EAAAjG,KACAu0D,EAAAtuD,EAAAjG,IACA,MAEA,KAAA4wD,GAAA7a,EACA4a,EAAA8D,UAAAH,EAAAC,EAAAtuD,EAAAjG,KAAAiG,EAAAjG,KAAAiG,EAAAjG,KAAAiG,EAAAjG,KAAAiG,EAAAjG,GAAAiG,EAAAjG,EAAA,GAAA+wD,EAAAC,GACAsD,EAAAruD,EAAAjG,KACAu0D,EAAAtuD,EAAAjG,IACA,MAEA,KAAA4wD,GAAAC,EACAF,EAAA+D,cAAAJ,EAAAC,EAAAtuD,EAAAjG,KAAAiG,EAAAjG,KAAAiG,EAAAjG,GAAAiG,EAAAjG,EAAA,GAAA+wD,EAAAC,GACAsD,EAAAruD,EAAAjG,KACAu0D,EAAAtuD,EAAAjG,IACA,MAEA,KAAA4wD,GAAA/a,EAEA,GAAAgd,GAAA5sD,EAAAjG,KACA8yD,EAAA7sD,EAAAjG,KACA20D,EAAA1uD,EAAAjG,KACA40D,EAAA3uD,EAAAjG,KACA+yD,EAAA9sD,EAAAjG,KACAgzD,EAAA/sD,EAAAjG,KAAA+yD,EAGAE,GADAhtD,EAAAjG,KACA,EAAAiG,EAAAjG,KAEA,IAAAA,IAGA43C,EAAAqZ,EAAA8B,GAAA4B,EAAA9B,EACAhb,EAAAqZ,EAAA6B,GAAA6B,EAAA9B,GAGAnC,EAAAkE,QAAAhC,EAAAC,EAAA6B,EAAAC,EAAA7B,EAAAC,EAAAC,EAAAlC,EAAAC,GACAsD,EAAArD,EAAA+B,GAAA2B,EAAA9B,EACA0B,EAAArD,EAAA8B,GAAA4B,EAAA9B,CACA,MAEA,KAAAlC,GAAAzR,EACAvH,EAAA0c,EAAAruD,EAAAjG,KACA63C,EAAA0c,EAAAtuD,EAAAjG,IACA,IAAA4C,GAAAqD,EAAAjG,KACA6C,EAAAoD,EAAAjG,IAEA2wD,GAAA6D,SAAA5c,EAAAC,EAAAD,EAAAh1C,EAAAi1C,EAAAh1C,EAAAkuD,EAAAC,EACA,MAEA,KAAAJ,GAAAE,EACAwD,EAAA1c,EACA2c,EAAA1c,EAKApW,EAAAjnB,QAAAu2C,GACAtvB,EAAAj0B,QAAAwjD,GAQA,MAJA,KAAAhxD,IACAwa,EAAA,GAAAA,EAAA,GAAAhN,EAAA,GAAAA,EAAA,MAGA,GAAA+M,GAAAC,EAAA,GAAAA,EAAA,GAAAhN,EAAA,GAAAgN,EAAA,GAAAhN,EAAA,GAAAgN,EAAA,KAQAqkB,YAAA,SAAAxB,GASA,OAPAua,GAAAC,EACAyc,EAAAC,EACAzoD,EAAAC,EAHAmX,EAAA9hB,KAAA6E,KAIA6uD,EAAA1zD,KAAAuwD,IACAoD,EAAA3zD,KAAAwwD,IACA5tD,EAAA5C,KAAAywD,KAEA7xD,EAAA,EAAmBA,EAAAgE,GAAS,CAC5B,GAAA4vD,GAAA1wC,EAAAljB,IAaA,QAXA,GAAAA,IAKAs0D,EAAApxC,EAAAljB,GACAu0D,EAAArxC,EAAAljB,EAAA,GACA43C,EAAA0c,EACAzc,EAAA0c,GAGAX,GACA,IAAAhD,GAAAjrB,EACAiS,EAAA0c,EAAApxC,EAAAljB,KACA63C,EAAA0c,EAAArxC,EAAAljB,KACAq9B,EAAA60B,OAAAoC,EAAAC,EACA,MAEA,KAAA3D,GAAApR,EACA1zC,EAAAoX,EAAAljB,KACA+L,EAAAmX,EAAAljB,MAEAmxD,EAAArlD,EAAAwoD,GAAAQ,GAAA3D,EAAAplD,EAAAwoD,GAAAQ,GAAA/0D,IAAAgE,EAAA,KACAq5B,EAAA+0B,OAAAtmD,EAAAC,GACAuoD,EAAAxoD,EACAyoD,EAAAxoD,EAGA,MAEA,KAAA6kD,GAAA7a,EACA1Y,EAAAm1B,cAAAtvC,EAAAljB,KAAAkjB,EAAAljB,KAAAkjB,EAAAljB,KAAAkjB,EAAAljB,KAAAkjB,EAAAljB,KAAAkjB,EAAAljB,MACAs0D,EAAApxC,EAAAljB,EAAA,GACAu0D,EAAArxC,EAAAljB,EAAA,EACA,MAEA,KAAA4wD,GAAAC,EACAxzB,EAAAq1B,iBAAAxvC,EAAAljB,KAAAkjB,EAAAljB,KAAAkjB,EAAAljB,KAAAkjB,EAAAljB,MACAs0D,EAAApxC,EAAAljB,EAAA,GACAu0D,EAAArxC,EAAAljB,EAAA,EACA,MAEA,KAAA4wD,GAAA/a,EACA,GAAAgd,GAAA3vC,EAAAljB,KACA8yD,EAAA5vC,EAAAljB,KACA20D,EAAAzxC,EAAAljB,KACA40D,EAAA1xC,EAAAljB,KACA42C,EAAA1zB,EAAAljB,KACAg1D,EAAA9xC,EAAAljB,KACAi1D,EAAA/xC,EAAAljB,KACAk1D,EAAAhyC,EAAAljB,KACA89C,EAAA6W,EAAAC,EAAAD,EAAAC,EACAO,EAAAR,EAAAC,EAAA,EAAAD,EAAAC,EACAQ,EAAAT,EAAAC,IAAAD,EAAA,EACAU,EAAA9nD,KAAAuK,IAAA68C,EAAAC,GAAA,KACA5B,EAAApc,EAAAoe,CAEAK,IACAh4B,EAAAgF,UAAAwwB,EAAAC,GACAz1B,EAAAuc,OAAAqb,GACA53B,EAAAta,MAAAoyC,EAAAC,GACA/3B,EAAAu1B,IAAA,IAAA9U,EAAAlH,EAAAoc,EAAA,EAAAkC,GACA73B,EAAAta,MAAA,EAAAoyC,EAAA,EAAAC,GACA/3B,EAAAuc,QAAAqb,GACA53B,EAAAgF,WAAAwwB,GAAAC,IAEAz1B,EAAAu1B,IAAAC,EAAAC,EAAAhV,EAAAlH,EAAAoc,EAAA,EAAAkC,GAGA,GAAAl1D,IAGA43C,EAAAqZ,EAAAra,GAAA+d,EAAA9B,EACAhb,EAAAqZ,EAAAta,GAAAge,EAAA9B,GAGAwB,EAAArD,EAAA+B,GAAA2B,EAAA9B,EACA0B,EAAArD,EAAA8B,GAAA4B,EAAA9B,CACA,MAEA,KAAAlC,GAAAzR,EACAvH,EAAA0c,EAAApxC,EAAAljB,GACA63C,EAAA0c,EAAArxC,EAAAljB,EAAA,GACAq9B,EAAAnyB,KAAAgY,EAAAljB,KAAAkjB,EAAAljB,KAAAkjB,EAAAljB,KAAAkjB,EAAAljB,KACA,MAEA,KAAA4wD,GAAAE,EACAzzB,EAAA+1B,YACAkB,EAAA1c,EACA2c,EAAA1c,MAKAhb,EAAA+zB,KACA,IAAAnwB,GAAA5D,CACAz/B,GAAAC,QAAAojC,G7BwoVM60B,KACA,SAAUl4D,EAAQC,EAASC,G8B/3WjC,QAAAmtB,KACArpB,KAAAm0D,sBALA,GAAA3jD,GAAAtU,EAAA,MAEAk4D,IAMA/qC,GAAAlsB,WACAG,YAAA+rB,EACAhsB,OAAA,SAAA2U,EAAAkb,GACA,GAAAmnC,KACA7jD,GAAA1L,KAAAsvD,EAAA,SAAAE,EAAAtzD,GACA,GAAA2lB,GAAA2tC,EAAAj3D,OAAA2U,EAAAkb,EACAmnC,KAAApuD,OAAA0gB,SAEA3mB,KAAAm0D,mBAAAE,GAEA5oC,OAAA,SAAAzZ,EAAAkb,GACA1c,EAAA1L,KAAA9E,KAAAm0D,mBAAA,SAAA5pC,GAEAA,EAAAkB,QAAAlB,EAAAkB,OAAAzZ,EAAAkb,MAGA7C,qBAAA,WACA,MAAArqB,MAAAm0D,mBAAAptD,UAIAsiB,EAAAiK,SAAA,SAAAtyB,EAAAuzD,GACAH,EAAApzD,GAAAuzD,GAGAlrC,EAAAngB,IAAA,SAAAlI,GACA,MAAAozD,GAAApzD,GAGA,IAAAq+B,GAAAhW,CACArtB,GAAAC,QAAAojC,G9By4WMm1B,KACA,SAAUx4D,EAAQC,EAASC,G+B95WjC,QAAAu4D,GAAA5vD,GAGA,IAFA,GAAAjG,GAAA,EAEAA,EAAAiG,EAAAhG,QAAA,MAAAgG,EAAAjG,IACAA,GAGA,OAAAiG,GAAAjG,GAGA,QAAA81D,GAAA7vD,GACA,GAAA8vD,GAAAF,EAAA5vD,EACA,cAAA8vD,IAAAnkD,EAAA/M,QAAAsW,EAAA46C,IAOA,QAAAC,GAAA/vD,EAAA0oB,EAAAvb,GAEAnN,OACA,IAAAgwD,GAAAtnC,EAAArkB,IAAA,oBACAwrB,EAAAogC,EAAAD,GACAE,EAAA1hC,EAAAnqB,IAAA2rD,GACAG,GACAC,UAAA1nC,EAAArkB,IAAA,UACAgsD,QAAA3nC,EAAArkB,IAAA,eAGA8/C,EAAAt0B,KAAA7vB,EAAA0oB,EAAAvb,EAAAgjD,GACA/2C,EAAA+qC,KAAA/qC,UAEAA,KAEAA,EAAA82C,MAAAthC,kBAAAshC,EAAAthC,oBAAAshC,EAAA92C,WAAAlX,WAAA,SACAkX,EAAAk3C,EAAAl3C,EAAApZ,EAAAmwD,GAGA,IAAAI,GAAApM,IAAAoM,eAAA,EACAzuC,EAAA,GAAA0uC,GAAAp3C,EAAAsP,GACA+nC,EAAAC,EAAAvM,EAAAnkD,GACA2wD,KACAC,EAAAL,GAAA,GAAAV,EAAA7vD,GAAA,SAAAya,EAAAf,EAAAxJ,EAAA6J,GAOA,MALA3E,GAAAqF,KACAqH,EAAA+uC,eAAA,GAIA92C,IAAAw2C,EAAArgD,EAAAmF,EAAAH,EAAAuF,GAAArB,EAAAW,KACG,SAAAU,EAAAf,EAAAxJ,EAAA6J,GACH,GAAArhB,GAAAwc,EAAAuF,GACApY,EAAAgT,EAAA3c,KAAAqhB,GAAAX,EAAAW,GAEA3E,GAAAqF,KACAqH,EAAA+uC,eAAA,EAGA,IAAAC,GAAA3M,KAAA2M,kBAgBA,OAdAA,MAAAp3C,IAEA,iBAAArX,KAEAsuD,EAAAj3C,GAAAi3C,EAAAj3C,IAAAo3C,EAAAp3C,GAAA4rB,iBACAjjC,EAAAsJ,EAAArM,QAAAqxD,EAAAj3C,GAAArX,IAEA,IAAA0c,MAAA1c,KAEAA,OAKAA,EAIA,OAFAyf,GAAA+uC,eAAA,EACA/uC,EAAAivC,SAAA/wD,EAAAywD,EAAAG,GACA9uC,EAGA,QAAAkvC,GAAA5rB,GACA,mBAAAA,GAAA,SAAAA,EAGA,QAAA6rB,GAAA7rB,GACA,mBAAAA,EAAA,mBAAAA,EAAA,eA8HA,QAAAsrB,GAAA9yD,EAAAoC,GACA,GAEAkxD,GAFAT,KACAU,EAAAvzD,KAAAwb,WAAAxb,EAAA2yD,cAOA,IAJAY,IACAD,EAAAtzD,EAAAkzD,mBAAAK,EAAA5zD,OAGA2zD,EAAA,CAEA,GAAAP,GAAAO,EAAA5rB,eAEA,IAAAqrB,EAAA,CACA,GAAAS,GAAApxD,EAAAhG,MAKA,IAAA2R,EAAA/M,QAAAoB,EAAA,KAAAA,EAAA,GAAAhG,OAAA,GACAy2D,IAEA,QAAA12D,GAAA,EAAuBA,EAAAq3D,EAAar3D,IACpC02D,EAAA12D,GAAA42D,EAAA3wD,EAAAjG,GAAA6D,EAAA2yD,eAAA,QAGAE,GAAAE,EAAAzuD,MAAA,IAKA,MAAAuuD,GAtQA,GAAAlgC,GAAAl5B,EAAA,MAIAsU,GAFA4kB,EAAAC,QAEAn5B,EAAA,OAEAm5D,EAAAn5D,EAAA,MAEAi5D,EAAAj5D,EAAA,MAEAiuB,EAAAjuB,EAAA,MAEA6d,EAAAoQ,EAAApQ,iBACAG,EAAAiQ,EAAAjQ,gBACAD,EAAAkQ,EAAAlQ,iBAEAoZ,EAAAn3B,EAAA,MAgGA44D,GACAoB,YAAA,SAAArxD,EAAA0oB,EAAAvb,EAAAgjD,GACA,GAAAmB,GAAA3lD,EAAArL,KAAA,0BAAA/C,GACA,MAAA4P,GAAA8L,iBACAjD,SAAAzY,EACA+Y,MAAAoS,EAAArkB,IAAA9G,EAAA,SACAkZ,GAAAiS,EAAArkB,IAAA9G,EAAA,QACO,KAEPg0D,EAAAD,EAAA,GACAE,EAAAF,EAAA,GACAG,EAAAF,EAAAltD,IAAA,QACAqtD,EAAAF,EAAAntD,IAAA,QACA+U,IACA7b,KAAA,IACApB,KAAA80D,EAAAQ,GACAE,UAAAX,EAAAS,KAEAl0D,KAAA,IAEApB,KAAA80D,EAAAS,GACAC,UAAAX,EAAAU,KAEAE,EAAA,aAAAH,EACAI,EAAA,aAAAH,CACAt4C,GAAAk3C,EAAAl3C,EAAApZ,EAAAmwD,EACA,IAAAW,KAUA,OARAc,KACAd,EAAAjrD,EAAA0rD,GAGAM,IACAf,EAAAhrD,EAAA0rD,IAIAp4C,aACAm3C,cAAAqB,EAAA,EAAAC,EAAA,KACAf,uBAGAgB,WAAA,SAAA9xD,EAAA0oB,EAAAvb,EAAAgjD,GACA,GAAA4B,GAAA5kD,EAAA8L,iBACAjD,SAAA,aACAM,MAAAoS,EAAArkB,IAAA,mBACAoS,GAAAiS,EAAArkB,IAAA,kBACK,GACL2tD,EAAAD,EAAA1tD,IAAA,QACA4tD,EAAA,aAAAD,EACA54C,IACA7b,KAAA,SACApB,KAAA80D,EAAAe,GACAL,UAAAX,EAAAgB,IAEA54C,GAAAk3C,EAAAl3C,EAAApZ,EAAAmwD,EACA,IAAAW,KAMA,OAJAmB,KACAnB,EAAAoB,OAAAH,IAIA34C,aACAm3C,cAAA0B,EAAA,KACAnB,uBAGAqB,MAAA,SAAAnyD,EAAA0oB,EAAAvb,EAAAgjD,GACA,GAAAiC,GAAAjlD,EAAA8L,iBACAjD,SAAA,QACAM,MAAAoS,EAAArkB,IAAA,cACAoS,GAAAiS,EAAArkB,IAAA,aACK,GACLguD,EAAAD,EAAAE,cAAA,aACAC,EAAAH,EAAAE,cAAA,cACAE,EAAAD,EAAAluD,IAAA,QACAouD,EAAAJ,EAAAhuD,IAAA,QACA+U,IACA7b,KAAA,SACApB,KAAA80D,EAAAuB,GACAb,UAAAX,EAAAwB,KAEAj1D,KAAA,QACApB,KAAA80D,EAAAwB,GACAd,UAAAX,EAAAyB,KAEAC,EAAA,aAAAD,EACAE,EAAA,aAAAH,CACAp5C,GAAAk3C,EAAAl3C,EAAApZ,EAAAmwD,EACA,IAAAW,KAUA,OARA6B,KACA7B,EAAA5D,OAAAqF,GAGAG,IACA5B,EAAA8B,MAAAP,IAIAj5C,aACAm3C,cAAAmC,EAAA,EAAAC,EAAA,KACA7B,uBAGA+B,IAAA,SAAA7yD,EAAA0oB,EAAAvb,EAAAgjD,GAGA,OACA/2C,WAAAk3C,IACA/yD,KAAA,QAEAA,KAAA,QACOyC,EAAAmwD,MAuCP31B,EAAAu1B,CACA54D,GAAAC,QAAAojC,G/Bs7WMs4B,KACA,SAAU37D,EAAQC,EAASC,GgCjsXjC,GAAAk5B,GAAAl5B,EAAA,MAIAsU,GAFA4kB,EAAAC,QAEAn5B,EAAA,OAEA6zB,EAAA7zB,EAAA,MAEA07D,EAAA17D,EAAA,MAEAgoC,EAAA0zB,EAAA1zB,WACAb,EAAAu0B,EAAAv0B,WACAL,EAAA40B,EAAA50B,UACAljB,EAAA83C,EAAA93C,iBAEA+3C,EAAA37D,EAAA,MAEAwL,EAAAmwD,EAAAnwD,IACAwB,EAAA2uD,EAAA3uD,IAEAohB,EAAApuB,EAAA,MAEAk4B,EAAAl4B,EAAA,MAEA47D,EAAA57D,EAAA,MAEA67D,EAAA77D,EAAA,MAEA0rC,EAAAmwB,EAAAnwB,gBACAI,EAAA+vB,EAAA/vB,iBACAzT,EAAAH,EAAAvwB,QACA7C,KAAA,kBAKA4Z,YAAA,EAEAue,iBAAA,KAMAiO,cAAA,KAOA4wB,mBAAA,KAKAC,sBAAA,yBAQA1wB,WAAA,KACA/e,KAAA,SAAAtW,EAAAS,EAAAX,EAAAw1B,GAKAxnC,KAAA4a,YAAA5a,KAAAwuB,eACAxuB,KAAA0nC,qBAAAx1B,EAAAF,EACA,IAAAnN,GAAA7E,KAAAk4D,eAAAhmD,EAAAF,EAMAtK,GAAA1H,KAAA,sBAAA6E,GAMA7E,KAAAy5B,eAQAiO,qBAAA,SAAAx1B,EAAAF,GACA,GAAAu1B,GAAAvnC,KAAAunC,WACAI,EAAAJ,EAAAK,EAAA11B,MAKAimD,EAAAn4D,KAAA8a,OAEAsZ,GAAAoS,SAAA2xB,KACAA,GAAA,UAGA3nD,EAAApN,MAAA8O,EAAAF,EAAA81B,WAAA5+B,IAAAlJ,KAAA8a,UACAtK,EAAApN,MAAA8O,EAAAlS,KAAA+nC,oBAEAzd,EAAA9Q,gBAAAtH,EAAAy5C,OAAA,SACA3rD,KAAAo4D,kBAAAlmD,EAAArN,MAEA0iC,GACAS,EAAA91B,EAAAy1B,EAAAJ,IAGAjF,YAAA,SAAA+1B,EAAArmD,GACAqmD,EAAA7nD,EAAApN,MAAApD,KAAAkS,OAAAmmD,GAAA,GACAr4D,KAAAo4D,kBAAAC,EAAAxzD,KACA,IAAA0iC,GAAAvnC,KAAAunC,UAEAA,IACAS,EAAAhoC,KAAAkS,OAAAmmD,EAAA9wB,EAGA,IAAA1iC,GAAA7E,KAAAk4D,eAAAG,EAAArmD,EAEAnN,KACA6C,EAAA1H,KAAA,OAAA6E,GACA6C,EAAA1H,KAAA,sBAAA6E,EAAAyzD,kBAGAF,kBAAA,SAAAvzD,GAIA,GAAAA,EAGA,OAFAlG,IAAA,QAEAC,EAAA,EAAqBA,EAAAiG,EAAAhG,OAAiBD,IACtCiG,EAAAjG,IAAAiG,EAAAjG,GAAA+sD,OACArhC,EAAA9Q,gBAAA3U,EAAAjG,GAAA+sD,MAAAhtD,IAUAu5D,eAAA,aAMAn9C,QAAA,SAAAiE,GACA,GAAAna,GAAAqE,EAAAlJ,KAAA,OACA,cAAAgf,EAAAna,IAAA0zD,cAAAv5C,IAMAozC,QAAA,SAAAvtD,GACA6C,EAAA1H,KAAA,OAAA6E,IAOA2zD,WAAA,WACA,MAAAtvD,GAAAlJ,KAAA,wBAeAse,kBAAA,SAAAD,GACA,MAAAiM,GAAAhM,kBAAAte,KAAA+a,UAAAsD,IASAN,kBAAA,SAAAC,GACA,MAAAsM,GAAAvM,kBAAA/d,KAAA+a,UAAAiD,IASAy6C,YAAA,WACA,GAAAluC,GAAAvqB,KAAAm5B,gBACA,OAAA5O,MAAAkuC,aAAAluC,EAAAkuC,eAWAj4C,cAAA,SAAAzL,EAAA2jD,EAAA15C,GA4BA,GAAAna,GAAAqE,EAAAlJ,KAAA,QACAzC,EAAAyC,KAAAkf,YAAAnK,GACA4jD,EAAAnoD,EAAA/M,QAAAlG,GA7BA,SAAAA,GAYA,QAAAq7D,GAAA1xD,EAAA2xD,GACA,GAAA1+C,GAAAtV,EAAAuZ,iBAAAy6C,EAEA,IAAA1+C,IAAA,IAAAA,EAAAwE,UAAAm6C,QAAA,CAIA,GAAA1+C,GAAAD,EAAAnZ,KACA+3D,GAAAC,EAAA,MAAA7+C,EAAA8+C,aAAA9+C,EAAA/X,MAAA,sBAAAgY,EAAAlT,EAAA,YAAAkT,EAAAs+C,EAAA,GAAAx0B,EAAA,sBAAAh9B,GAAA87B,EAAA97B,GACA6xD,IAAAt2D,EAAA4C,KAAAg+B,EAAA01B,KApBA,GAAAC,GAAAxoD,EAAAlL,OAAA/H,EAAA,SAAAy7D,EAAA9xD,EAAAqZ,GACA,GAAApC,GAAAtZ,EAAAuZ,iBAAAmC,EACA,OAAAy4C,IAAA76C,IAAA,IAAAA,EAAA26C,SAAA,MAAA36C,EAAA86C,aACO,GACPx2D,KACAy2D,EAAA5uC,EAAA7L,kBAAA5Z,EAAA,UAkBA,OAjBAq0D,GAAAr6D,OAAA2R,EAAA1L,KAAAo0D,EAAA,SAAAL,GACAD,EAAA/zD,EAAAqE,IAAA2vD,EAAA9jD,GAAA8jD,KAEAroD,EAAA1L,KAAAvH,EAAAq7D,IAcAI,EAAA,YAAAv2D,EAAAkS,KAAAqkD,EAAA,eAKAz7D,GAAA8lC,EAAAL,EAAAzlC,IACA6E,EAAAyC,EAAAwa,QAAAtK,GACApI,EAAA9H,EAAA2a,cAAAzK,EAAA,QAEAvE,GAAAlN,SAAAqJ,MAAAotB,aACAptB,KAAAotB,WAAA,QAAwCptB,OAGxCA,KAAA,aACA,IAAAwsD,GAAAr5C,EAAAnT,GACAiT,EAAA5f,KAAAoC,IAQA,OANA,QAAAwd,IAEAA,EAAA,IAGAA,IAAAyjB,EAAAzjB,IAAA84C,EAAA,iBACAA,EAAAS,EAAAv5C,EAAA+4C,EAAA/4C,EAAAu5C,GAAA/2D,EAAAihC,EAAAjhC,GAAA,KAAAu2D,MAMA3jD,mBAAA,WACA,GAAA+a,EAAAC,KACA,QAGA,IAAAopC,GAAAp5D,KAAAqQ,WAAA,YAQA,OANA+oD,IACAp5D,KAAA+a,UAAA8I,QAAA7jB,KAAAqQ,WAAA,wBACA+oD,GAAA,GAIAA,GAEA3/B,YAAA,WACA/xB,EAAA1H,KAAA,OAAAkJ,EAAAlJ,KAAA,uBAAAs4D,iBAEAe,oBAAA,SAAAj3D,EAAAk3D,GACA,GAAAtnD,GAAAhS,KAAAgS,QAEArF,EAAAmrD,EAAAuB,oBAAAv8D,KAAAkD,KAAAoC,EAAAk3D,EAMA,OAJA3sD,KACAA,EAAAqF,EAAAqnD,oBAAAj3D,EAAAk3D,IAGA3sD,GAWA4sD,mBAAA,KAQAC,mBAAA,MAEAhpD,GAAA7L,MAAA4vB,EAAAjK,EAAA3P,iBACAnK,EAAA7L,MAAA4vB,EAAAujC,EACA,IAAAz4B,GAAA9K,CACAv4B,GAAAC,QAAAojC,GhCusXMo6B,KACA,SAAUz9D,EAAQC,EAASC,GiC9gYjC,GAAAmoC,GAAAnoC,EAAA,MAEA2iB,EAAA3iB,EAAA,MAEAmuC,EAAAnuC,EAAA,MAEAw9D,EAAAx9D,EAAA,MAMAy9D,EAAAt1B,EAAA74B,MAMA4+B,EAAAC,EAAAxmC,QACA7C,KAAA,WACAssD,UAAA,EACAsM,mBAAA,EACAjwB,UAAA,SAAAgkB,EAAAC,GACA,GAAAC,GAAA7tD,KAAAqtD,OAEAzpC,OAAA+pC,KACAE,EAAA,GAAAzqC,WAAAuqC,IAGA/pC,MAAAgqC,KACAC,EAAA,GAAAzqC,WAAAwqC,KAGAJ,YAAA,SAAAhtB,GACA,GAAAgJ,GAAAxpC,KAAAqtD,OACA7sB,GAAA,GAAAgJ,EAAA,KAAAA,EAAA,GAAAhJ,EAAA,IACAA,EAAA,GAAAgJ,EAAA,KAAAA,EAAA,GAAAhJ,EAAA,IAEA4J,EAAAjtC,UAAAwsC,UAAA7sC,KAAAkD,KAAAwpC,EAAA,GAAAA,EAAA,KAMAqwB,YAAA,WACA,MAAA75D,MAAAstD,WAMAvjB,YAAA,SAAAjjB,GACA9mB,KAAAstD,UAAAxmC,EAGA9mB,KAAA85D,YAAA95D,KAAAqtD,QAAAtmD,QACA/G,KAAA45D,mBAAAF,EAAAK,qBAAAjzC,IAMA0kB,SAAA,WACA,MAAAkuB,GAAAM,sBAAAh6D,KAAAstD,UAAAttD,KAAAqtD,QAAArtD,KAAA85D,YAAA95D,KAAA45D,qBAMAtuB,eAAA,WAIA,OAHAZ,MACAa,EAAAvrC,KAAAwrC,WAEA5sC,EAAA,EAAmBA,EAAA2sC,EAAA1sC,OAAkBD,IACrC8rC,EAAArlC,KAAArF,KAAA2rC,SAAAJ,EAAA3sC,IAGA,OAAA8rC,IAUAiB,SAAA,SAAA9mC,EAAA0K,GACA,SAAA1K,EACA,QAGA,IAAAwe,GAAA9T,KAAA8T,SAYA,OAVA,OAAAA,EACAA,EAAAghB,EAAAvgB,iBAAAjf,IAAA,EACK,SAAAwe,IAELA,EAAArjB,KAAA45D,oBAKA/0D,EAAA80D,EAAA90D,EAAAwe,GAAA,GACAxE,EAAAmkB,UAAAn+B,IAUAo1D,UAAA,SAAAxwB,EAAAI,EAAAC,GACAL,KAAA,CACA,IAAAD,GAAAxpC,KAAAqtD,QACAxkB,EAAAW,EAAA,GAAAA,EAAA,EAEA,IAAAhlB,SAAAqkB,GAAA,CAMAA,EAAA,IACAA,KACAW,EAAAmjB,UAGA,IAAAlqD,GAAAi3D,EAAAQ,uBAAA1wB,EAAAC,EAAAI,EAAAC,EACA9pC,MAAA45D,mBAAAn3D,EAAA03D,kBACAn6D,KAAAstD,UAAA7qD,EAAAqkB,SACA9mB,KAAA85D,YAAAr3D,EAAA23D,iBAYAxwB,WAAA,SAAAr6B,GACA,GAAAi6B,GAAAxpC,KAAAqtD,OAEA,IAAA7jB,EAAA,KAAAA,EAAA,GACA,OAAAA,EAAA,IAEA,GAAA6wB,GAAA7wB,EAAA,EAMAj6B,GAAA25B,OAIAM,EAAA,IAAA6wB,EAAA,GAHA7wB,EAAA,IAAA6wB,EAAA,EACA7wB,EAAA,IAAA6wB,EAAA,OAKA7wB,GAAA,IAIA,IAAAX,GAAAW,EAAA,GAAAA,EAAA,EAEAhlB,UAAAqkB,KACAW,EAAA,KACAA,EAAA,MAGAxpC,KAAAi6D,UAAA1qD,EAAAk6B,YAAAl6B,EAAAs6B,YAAAt6B,EAAAu6B,YAEA,IAAAhjB,GAAA9mB,KAAAstD,SAEA/9C,GAAA05B,SACAO,EAAA,GAAAmwB,EAAAxtD,KAAAmY,MAAAklB,EAAA,GAAA1iB,OAGAvX,EAAA25B,SACAM,EAAA,GAAAmwB,EAAAxtD,KAAA4yC,KAAAvV,EAAA,GAAA1iB,SAQAsjB,GAAA/sC,OAAA,WACA,UAAA+sC,GAGA,IAAA/K,GAAA+K,CACApuC,GAAAC,QAAAojC,GjCohYMi7B,KACA,SAAUt+D,EAAQC,EAASC,GkC7sYjC,QAAAurC,GAAAzmC,GAGA,OAAAA,GAAA,GAAA0oC,IAAAv9B,KAAAouD,UAAA5lD,KAAA6lD,GAOA,QAAAjyB,GAAAzC,GACA,GAAA20B,KAqBA,OAnBA30B,GAAA40B,yBAAA,SAAAj7C,EAAAk7C,GACAl7C,EAAAoM,EAAApM,GACAg7C,EAAAh7C,EAAA+M,MAAAmuC,GAGA70B,EAAA80B,iBAAA,SAAAn7C,EAAAvN,GACA,GAAAlR,GAAAkR,EAAAlR,IAEA,KAAAA,EAAA,CACA,GAAA65D,GAAAhvC,EAAApM,GAAA+M,IAEAsZ,GAAAa,YAAAlnB,IAAAg7C,EAAAI,KACA75D,EAAAy5D,EAAAI,GAAA3oD,IAIA,MAAAlR,IAGA8kC,EAaA,QAAA0C,GAAA1C,EAAAg1B,GAqEA,QAAAC,GAAAC,GACA,GAAAC,MACAC,IAuBA,OAtBA1qD,GAAA1L,KAAAk2D,EAAA,SAAA54D,GACA,GAAA+4D,GAAAC,EAAAH,EAAA74D,GACAi5D,EAAAF,EAAAE,aAAAP,EAAA14D,GACAk5D,EAAAC,EAAAF,EAAAL,EACAG,GAAAK,WAAAF,EAAAz8D,OAEA,IAAAs8D,EAAAK,YACAN,EAAA71D,KAAAjD,GAGAoO,EAAA1L,KAAAw2D,EAAA,SAAAG,GACAjrD,EAAArM,QAAAg3D,EAAAO,YAAAD,GAAA,GACAN,EAAAO,YAAAr2D,KAAAo2D,EAGA,IAAAE,GAAAP,EAAAH,EAAAQ,EAEAjrD,GAAArM,QAAAw3D,EAAAC,UAAAH,GAAA,GACAE,EAAAC,UAAAv2D,KAAAjD,QAKA64D,QACAC,eAIA,QAAAE,GAAAH,EAAA74D,GAQA,MAPA64D,GAAA74D,KACA64D,EAAA74D,IACAs5D,eACAE,eAIAX,EAAA74D,GAGA,QAAAm5D,GAAAF,EAAAL,GACA,GAAAM,KAIA,OAHA9qD,GAAA1L,KAAAu2D,EAAA,SAAAQ,GACArrD,EAAArM,QAAA62D,EAAAa,IAAA,GAAAP,EAAAj2D,KAAAw2D,KAEAP,EA3GAx1B,EAAAg2B,kBAAA,SAAAC,EAAAf,EAAAv6D,EAAAuE,GA8BA,QAAAg3D,GAAAC,GAGA,MAFAhB,EAAAgB,GAAAT,YAGAxsC,EAAA3pB,KAAA42D,GAUA,QAAAC,GAAAD,GACAE,EAAAF,IAAA,EACAD,EAAAC,GA7CA,GAAAF,EAAAl9D,OAAA,CAIA,GAAA4D,GAAAs4D,EAAAC,GACAC,EAAAx4D,EAAAw4D,MACAjsC,EAAAvsB,EAAAy4D,YACAiB,IAKA,KAJA3rD,EAAA1L,KAAAi3D,EAAA,SAAA35D,GACA+5D,EAAA/5D,IAAA,IAGA4sB,EAAAnwB,QAAA,CACA,GAAAu9D,GAAAptC,EAAApD,MACAywC,EAAApB,EAAAmB,GACAE,IAAAH,EAAAC,EAEAE,KACA77D,EAAA3D,KAAAkI,EAAAo3D,EAAAC,EAAAhB,aAAAt0D,eACAo1D,GAAAC,IAGA5rD,EAAA1L,KAAAu3D,EAAAT,UAAAU,EAAAJ,EAAAF,GAGAxrD,EAAA1L,KAAAq3D,EAAA,WACA,SAAA70D,OAAA,oCA9FA,GAAAkJ,GAAAtU,EAAA,MAEA27D,EAAA37D,EAAA,MAEA2vB,EAAAgsC,EAAAhsC,eACA6d,EAAA,EACA8wB,EAAA,GA4KAv+D,GAAAwrC,SACAxrC,EAAAssC,yBACAtsC,EAAAusC,2BlCguYM+zB,KACA,SAAUvgE,EAAQC,EAASC,GmCzqYjC,QAAAsgE,GAAA7vD,EAAA8vD,GACA,aAAAz8D,KAAAgB,KAAA,CACA,GAAA07D,GAAA18D,KAAAiB,MACA07D,EAAA38D,KAAAsL,KAEAqxD,IAAA,SAAAA,EAAAC,WACAF,EAAAzvD,OAAAN,EACK3M,KAAA68D,gBACLH,EAAAzvD,OAAAN,EACA+vD,EAAAxvD,KAAAuvD,GAAA,SAGAC,EAAAxvD,OAAAwvD,EAAAxvD,KAAAP,GACA+vD,EAAAzvD,SAAAyvD,EAAAzvD,OAAAN,IAGA3M,KAAAmO,OAAA,IAgBA,QAAA2uD,GAAAF,EAAAlyD,EAAAC,EAAAwzB,EAAAqG,EAAA73B,EAAAowD,GAEA,GAAAr6B,GAAA,IAAAk6B,EAAAz4D,QAAA,QAEAu+B,KACAk6B,IAAAj4B,OAAA,KAAAjnB,cAAAk/C,EAAAj4B,OAAA,GAGA,IAAAq4B,EAqBA,OAlBAA,GADA,IAAAJ,EAAAz4D,QAAA,YACAqxB,EAAAlrB,UAAAsyD,EAAA71D,MAAA,MAAAoS,GAAAzO,EAAAC,EAAAwzB,EAAAqG,GAAAu4B,EAAA,kBACG,IAAAH,EAAAz4D,QAAA,WACHqxB,EAAA3rB,SAAA+yD,EAAA71D,MAAA,MAAyD,GAAAoS,GAAAzO,EAAAC,EAAAwzB,EAAAqG,GAAAu4B,EAAA,kBAEzD,GAAAE,IACA3xD,OACAsxD,aACAlyD,IACAC,IACAnJ,MAAA28B,EACA18B,OAAA+iC,KAKAw4B,EAAAH,eAAAn6B,EACAs6B,EAAAE,SAAAV,EACAQ,EAAAE,SAAAvwD,GACAqwD,EAzSA,GAAAxsD,GAAAtU,EAAA,MAEAs5B,EAAAt5B,EAAA,MAEAid,EAAAjd,EAAA,MAQAihE,EAAA3nC,EAAAlsB,aACAtI,KAAA,WACAsK,OACAmmD,GAAA,EACAC,GAAA,EACAlwD,MAAA,EACAC,OAAA,GAEA+7B,UAAA,SAAAxzB,EAAAsB,GACA,GAAAmmD,GAAAnmD,EAAAmmD,GACAC,EAAApmD,EAAAomD,GACAlwD,EAAA8J,EAAA9J,MAAA,EACAC,EAAA6J,EAAA7J,OAAA,CACAuI,GAAA8mD,OAAAW,EAAAC,EAAAjwD,GACAuI,EAAAgnD,OAAAS,EAAAjwD,EAAAkwD,EAAAjwD,GACAuI,EAAAgnD,OAAAS,EAAAjwD,EAAAkwD,EAAAjwD,GACAuI,EAAAgoD,eAQAoL,EAAA5nC,EAAAlsB,aACAtI,KAAA,UACAsK,OACAmmD,GAAA,EACAC,GAAA,EACAlwD,MAAA,EACAC,OAAA,GAEA+7B,UAAA,SAAAxzB,EAAAsB,GACA,GAAAmmD,GAAAnmD,EAAAmmD,GACAC,EAAApmD,EAAAomD,GACAlwD,EAAA8J,EAAA9J,MAAA,EACAC,EAAA6J,EAAA7J,OAAA,CACAuI,GAAA8mD,OAAAW,EAAAC,EAAAjwD,GACAuI,EAAAgnD,OAAAS,EAAAjwD,EAAAkwD,GACA1nD,EAAAgnD,OAAAS,EAAAC,EAAAjwD,GACAuI,EAAAgnD,OAAAS,EAAAjwD,EAAAkwD,GACA1nD,EAAAgoD,eAQAqL,EAAA7nC,EAAAlsB,aACAtI,KAAA,MACAsK,OAEAZ,EAAA,EACAC,EAAA,EACAnJ,MAAA,EACAC,OAAA,GAEA+7B,UAAA,SAAAxzB,EAAAsB,GACA,GAAAZ,GAAAY,EAAAZ,EACAC,EAAAW,EAAAX,EACAwzB,EAAA7yB,EAAA9J,MAAA,IAEAgjC,EAAAr4B,KAAAC,IAAA+xB,EAAA7yB,EAAA7J,QACAi7C,EAAAve,EAAA,EAEAwP,EAAA+O,KAAAlY,EAAAkY,GACAgV,EAAA/mD,EAAA65B,EAAAkY,EAAA/O,EACA8pB,EAAAtrD,KAAAmxD,KAAA3vB,EAAA+O,GAEAhP,EAAAvhC,KAAA++B,IAAAusB,GAAA/a,EACA6gB,EAAApxD,KAAAg/B,IAAAssB,GACA+F,EAAArxD,KAAA++B,IAAAusB,GACAgG,EAAA,GAAA/gB,EACAghB,EAAA,GAAAhhB,CACA1yC,GAAA8mD,OAAApmD,EAAAgjC,EAAAgkB,EAAA/jB,GACA3jC,EAAAwnD,IAAA9mD,EAAAgnD,EAAAhV,EAAAvwC,KAAAyF,GAAA6lD,EAAA,EAAAtrD,KAAAyF,GAAA6lD,GACAztD,EAAAonD,cAAA1mD,EAAAgjC,EAAA6vB,EAAAE,EAAA/L,EAAA/jB,EAAA6vB,EAAAC,EAAA/yD,EAAAC,EAAA+yD,EAAAhzD,EAAAC,GACAX,EAAAonD,cAAA1mD,EAAAC,EAAA+yD,EAAAhzD,EAAAgjC,EAAA6vB,EAAAE,EAAA/L,EAAA/jB,EAAA6vB,EAAAC,EAAA/yD,EAAAgjC,EAAAgkB,EAAA/jB,GACA3jC,EAAAgoD,eAQA2L,EAAAnoC,EAAAlsB,aACAtI,KAAA,QACAsK,OACAZ,EAAA,EACAC,EAAA,EACAnJ,MAAA,EACAC,OAAA,GAEA+7B,UAAA,SAAAvB,EAAA3wB,GACA,GAAA7J,GAAA6J,EAAA7J,OACAD,EAAA8J,EAAA9J,MACAkJ,EAAAY,EAAAZ,EACAC,EAAAW,EAAAX,EACA+iC,EAAAlsC,EAAA,GACAy6B,GAAA60B,OAAApmD,EAAAC,GACAsxB,EAAA+0B,OAAAtmD,EAAAgjC,EAAA/iC,EAAAlJ,GACAw6B,EAAA+0B,OAAAtmD,EAAAC,EAAAlJ,EAAA,KACAw6B,EAAA+0B,OAAAtmD,EAAAgjC,EAAA/iC,EAAAlJ,GACAw6B,EAAA+0B,OAAAtmD,EAAAC,GACAsxB,EAAA+1B,eAQA4L,GACAzrB,KAAA3c,EAAA3c,KACA/O,KAAA0rB,EAAA5c,KACAilD,UAAAroC,EAAA5c,KACAklD,OAAAtoC,EAAA5c,KACAmlD,OAAAvoC,EAAAjd,OACAylD,QAAAZ,EACAa,IAAAZ,EACAa,MAAAP,EACAQ,SAAAhB,GAEAiB,GACAjsB,KAAA,SAAAznC,EAAAC,EAAAwzB,EAAAqG,EAAAl5B,GAEAA,EAAAG,GAAAf,EACAY,EAAAM,GAAAjB,EAAA65B,EAAA,EACAl5B,EAAAI,GAAAhB,EAAAyzB,EACA7yB,EAAAO,GAAAlB,EAAA65B,EAAA,GAEA16B,KAAA,SAAAY,EAAAC,EAAAwzB,EAAAqG,EAAAl5B,GACAA,EAAAZ,IACAY,EAAAX,IACAW,EAAA9J,MAAA28B,EACA7yB,EAAA7J,OAAA+iC,GAEAq5B,UAAA,SAAAnzD,EAAAC,EAAAwzB,EAAAqG,EAAAl5B,GACAA,EAAAZ,IACAY,EAAAX,IACAW,EAAA9J,MAAA28B,EACA7yB,EAAA7J,OAAA+iC,EACAl5B,EAAAoxC,EAAAvwC,KAAAiN,IAAA+kB,EAAAqG,GAAA,GAEAs5B,OAAA,SAAApzD,EAAAC,EAAAwzB,EAAAqG,EAAAl5B,GACA,GAAA+yD,GAAAlyD,KAAAiN,IAAA+kB,EAAAqG,EACAl5B,GAAAZ,IACAY,EAAAX,IACAW,EAAA9J,MAAA68D,EACA/yD,EAAA7J,OAAA48D,GAEAN,OAAA,SAAArzD,EAAAC,EAAAwzB,EAAAqG,EAAAl5B,GAEAA,EAAAmmD,GAAA/mD,EAAAyzB,EAAA,EACA7yB,EAAAomD,GAAA/mD,EAAA65B,EAAA,EACAl5B,EAAAoxC,EAAAvwC,KAAAiN,IAAA+kB,EAAAqG,GAAA,GAEAw5B,QAAA,SAAAtzD,EAAAC,EAAAwzB,EAAAqG,EAAAl5B,GACAA,EAAAmmD,GAAA/mD,EAAAyzB,EAAA,EACA7yB,EAAAomD,GAAA/mD,EAAA65B,EAAA,EACAl5B,EAAA9J,MAAA28B,EACA7yB,EAAA7J,OAAA+iC,GAEAy5B,IAAA,SAAAvzD,EAAAC,EAAAwzB,EAAAqG,EAAAl5B,GACAA,EAAAZ,IAAAyzB,EAAA,EACA7yB,EAAAX,IAAA65B,EAAA,EACAl5B,EAAA9J,MAAA28B,EACA7yB,EAAA7J,OAAA+iC,GAEA05B,MAAA,SAAAxzD,EAAAC,EAAAwzB,EAAAqG,EAAAl5B,GACAA,EAAAZ,IAAAyzB,EAAA,EACA7yB,EAAAX,IAAA65B,EAAA,EACAl5B,EAAA9J,MAAA28B,EACA7yB,EAAA7J,OAAA+iC,GAEA25B,SAAA,SAAAzzD,EAAAC,EAAAwzB,EAAAqG,EAAAl5B,GACAA,EAAAmmD,GAAA/mD,EAAAyzB,EAAA,EACA7yB,EAAAomD,GAAA/mD,EAAA65B,EAAA,EACAl5B,EAAA9J,MAAA28B,EACA7yB,EAAA7J,OAAA+iC,IAGA85B,IACA9tD,GAAA1L,KAAA84D,EAAA,SAAA96D,EAAAV,GACAk8D,EAAAl8D,GAAA,GAAAU,IAEA,IAAAm6D,GAAAznC,EAAAlsB,aACAtI,KAAA,SACAsK,OACAsxD,WAAA,GACAlyD,EAAA,EACAC,EAAA,EACAnJ,MAAA,EACAC,OAAA,GAEA88D,YAAA,WACA,GAAAt9D,GAAAjB,KAAAiB,KAGA,SAFAjB,KAAAsL,MAEAsxD,YAAA,WAAA37D,EAAAwQ,eACAxQ,EAAAwQ,cAAA,aACAxQ,EAAAqS,UAAA,SACArS,EAAAsS,kBAAA,WAGAiqB,UAAA,SAAAvB,EAAA3wB,EAAAuyB,GACA,GAAA++B,GAAAtxD,EAAAsxD,WACA4B,EAAAF,EAAA1B,EAEA,UAAAtxD,EAAAsxD,aACA4B,IAEA5B,EAAA,OACA4B,EAAAF,EAAA1B,IAGAwB,EAAAxB,GAAAtxD,EAAAZ,EAAAY,EAAAX,EAAAW,EAAA9J,MAAA8J,EAAA7J,OAAA+8D,EAAAlzD,OACAkzD,EAAAhhC,UAAAvB,EAAAuiC,EAAAlzD,MAAAuyB,MAqEA5hC,GAAA6gE,gBnC25YM2B,KACA,SAAUziE,EAAQC,GoC3rZxB,QAAA2sB,GAAAvmB,EAAAq8D,EAAAC,GAWA,QAAA54C,KACA64C,GAAA,GAAA/4C,OAAAg5C,UACAC,EAAA,KACAz8D,EAAA2D,MAAAszD,EAAAzzD,OAbA,GAAAk5D,GAIAC,EACA1F,EACAzzD,EACAo5D,EANAC,EAAA,EACAN,EAAA,EACAE,EAAA,IAKAJ,MAAA,CAQA,IAAA35D,GAAA,WACAg6D,GAAA,GAAAl5C,OAAAg5C,UACAvF,EAAAt5D,KACA6F,EAAAE,SACA,IAAAo5D,GAAAF,GAAAP,EACAU,EAAAH,GAAAN,CACAM,GAAA,KACAD,EAAAD,GAAAK,EAAAF,EAAAN,GAAAO,EACAE,aAAAP,GAEAM,EACAN,EAAAQ,WAAAv5C,EAAAo5C,GAEAH,GAAA,EACAj5C,IAEA+4C,EAAAQ,WAAAv5C,GAAAi5C,GAIAE,EAAAH,EAuBA,OAfAh6D,GAAAm2B,MAAA,WACA4jC,IACAO,aAAAP,GACAA,EAAA,OAQA/5D,EAAAk6D,iBAAA,SAAAM,GACAN,EAAAM,GAGAx6D,EA+BA,QAAAy6D,GAAApjE,EAAAqjE,EAAAC,EAAAC,GACA,GAAAt9D,GAAAjG,EAAAqjE,EAEA,IAAAp9D,EAAA,CAIA,GAAAu9D,GAAAv9D,EAAAw9D,IAAAx9D,EACAy9D,EAAAz9D,EAAA09D,EAGA,IAFA19D,EAAA29D,KAEAN,GAAAI,IAAAH,EAAA,CACA,SAAAD,IAAAC,EACA,MAAAvjE,GAAAqjE,GAAAG,CAGAv9D,GAAAjG,EAAAqjE,GAAA72C,EAAAg3C,EAAAF,EAAA,aAAAC,GACAt9D,EAAAw9D,GAAAD,EACAv9D,EAAA09D,GAAAJ,EACAt9D,EAAA29D,GAAAN,EAGA,MAAAr9D,IAWA,QAAA64B,GAAA9+B,EAAAqjE,GACA,GAAAp9D,GAAAjG,EAAAqjE,EAEAp9D,MAAAw9D,KACAzjE,EAAAqjE,GAAAp9D,EAAAw9D,IA7IA,GAAAA,GAAA,2BACAG,EAAA,mBACAD,EAAA,kBA+IA9jE,GAAA2sB,WACA3sB,EAAAujE,iBACAvjE,EAAAi/B,SpC8sZM+kC,KACA,SAAUjkE,EAAQC,GqC71ZxB,QAAAikE,GAAAtrB,GAGA,IAFA,GAAA8H,GAAA,EAEA9H,GAAAurB,GACAzjB,GAAA,EAAA9H,EACAA,IAAA,CAGA,OAAAA,GAAA8H,EAGA,QAAA0jB,GAAAh8D,EAAAi8D,EAAAC,EAAAC,GACA,GAAAC,GAAAH,EAAA,CAEA,IAAAG,IAAAF,EACA,QAGA,IAAAC,EAAAn8D,EAAAo8D,KAAAp8D,EAAAi8D,IAAA,GACA,KAAAG,EAAAF,GAAAC,EAAAn8D,EAAAo8D,GAAAp8D,EAAAo8D,EAAA,OACAA,GAGAC,GAAAr8D,EAAAi8D,EAAAG,OAEA,MAAAA,EAAAF,GAAAC,EAAAn8D,EAAAo8D,GAAAp8D,EAAAo8D,EAAA,QACAA,GAIA,OAAAA,GAAAH,EAGA,QAAAI,GAAAr8D,EAAAi8D,EAAAC,GAGA,IAFAA,IAEAD,EAAAC,GAAA,CACA,GAAAn+C,GAAA/d,EAAAi8D,EACAj8D,GAAAi8D,KAAAj8D,EAAAk8D,GACAl8D,EAAAk8D,KAAAn+C,GAIA,QAAAu+C,GAAAt8D,EAAAi8D,EAAAC,EAAA3S,EAAA4S,GAKA,IAJA5S,IAAA0S,GACA1S,IAGQA,EAAA2S,EAAY3S,IAAA,CAMpB,IALA,GAGAgT,GAHAC,EAAAx8D,EAAAupD,GACAp1B,EAAA8nC,EACA5nC,EAAAk1B,EAGAp1B,EAAAE,GACAkoC,EAAApoC,EAAAE,IAAA,EAEA8nC,EAAAK,EAAAx8D,EAAAu8D,IAAA,EACAloC,EAAAkoC,EAEApoC,EAAAooC,EAAA,CAIA,IAAA/rB,GAAA+Y,EAAAp1B,CAEA,QAAAqc,GACA,OACAxwC,EAAAm0B,EAAA,GAAAn0B,EAAAm0B,EAAA,EAEA,QACAn0B,EAAAm0B,EAAA,GAAAn0B,EAAAm0B,EAAA,EAEA,QACAn0B,EAAAm0B,EAAA,GAAAn0B,EAAAm0B,EACA,MAEA,SACA,KAAAqc,EAAA,GACAxwC,EAAAm0B,EAAAqc,GAAAxwC,EAAAm0B,EAAAqc,EAAA,GACAA,IAKAxwC,EAAAm0B,GAAAqoC,GAIA,QAAAC,GAAAtjE,EAAA6G,EAAAupD,EAAA9uD,EAAAiiE,EAAAP,GACA,GAAAQ,GAAA,EACAC,EAAA,EACA7O,EAAA,CAEA,IAAAoO,EAAAhjE,EAAA6G,EAAAupD,EAAAmT,IAAA,GAGA,IAFAE,EAAAniE,EAAAiiE,EAEA3O,EAAA6O,GAAAT,EAAAhjE,EAAA6G,EAAAupD,EAAAmT,EAAA3O,IAAA,GACA4O,EAAA5O,GACAA,EAAA,GAAAA,GAAA,KAEA,IACAA,EAAA6O,EAIA7O,GAAA6O,IACA7O,EAAA6O,GAGAD,GAAAD,EACA3O,GAAA2O,MACG,CAGH,IAFAE,EAAAF,EAAA,EAEA3O,EAAA6O,GAAAT,EAAAhjE,EAAA6G,EAAAupD,EAAAmT,EAAA3O,KAAA,GACA4O,EAAA5O,GACAA,EAAA,GAAAA,GAAA,KAEA,IACAA,EAAA6O,EAIA7O,GAAA6O,IACA7O,EAAA6O,EAGA,IAAArrB,GAAAorB,CACAA,GAAAD,EAAA3O,EACAA,EAAA2O,EAAAnrB,EAKA,IAFAorB,IAEAA,EAAA5O,GAAA,CACA,GAAAjnD,GAAA61D,GAAA5O,EAAA4O,IAAA,EAEAR,GAAAhjE,EAAA6G,EAAAupD,EAAAziD,IAAA,EACA61D,EAAA71D,EAAA,EAEAinD,EAAAjnD,EAIA,MAAAinD,GAGA,QAAA8O,GAAA1jE,EAAA6G,EAAAupD,EAAA9uD,EAAAiiE,EAAAP,GACA,GAAAQ,GAAA,EACAC,EAAA,EACA7O,EAAA,CAEA,IAAAoO,EAAAhjE,EAAA6G,EAAAupD,EAAAmT,IAAA,GAGA,IAFAE,EAAAF,EAAA,EAEA3O,EAAA6O,GAAAT,EAAAhjE,EAAA6G,EAAAupD,EAAAmT,EAAA3O,IAAA,GACA4O,EAAA5O,GACAA,EAAA,GAAAA,GAAA,KAEA,IACAA,EAAA6O,EAIA7O,GAAA6O,IACA7O,EAAA6O,EAGA,IAAArrB,GAAAorB,CACAA,GAAAD,EAAA3O,EACAA,EAAA2O,EAAAnrB,MACG,CAGH,IAFAqrB,EAAAniE,EAAAiiE,EAEA3O,EAAA6O,GAAAT,EAAAhjE,EAAA6G,EAAAupD,EAAAmT,EAAA3O,KAAA,GACA4O,EAAA5O,GACAA,EAAA,GAAAA,GAAA,KAEA,IACAA,EAAA6O,EAIA7O,GAAA6O,IACA7O,EAAA6O,GAGAD,GAAAD,EACA3O,GAAA2O,EAKA,IAFAC,IAEAA,EAAA5O,GAAA,CACA,GAAAjnD,GAAA61D,GAAA5O,EAAA4O,IAAA,EAEAR,GAAAhjE,EAAA6G,EAAAupD,EAAAziD,IAAA,EACAinD,EAAAjnD,EAEA61D,EAAA71D,EAAA,EAIA,MAAAinD,GAGA,QAAA+O,GAAA98D,EAAAm8D,GAmBA,QAAAY,GAAAC,EAAAC,GACAC,EAAAC,GAAAH,EACAI,EAAAD,GAAAF,EACAE,GAAA,EAGA,QAAAE,KACA,KAAAF,EAAA,IACA,GAAA3sB,GAAA2sB,EAAA,CAEA,IAAA3sB,GAAA,GAAA4sB,EAAA5sB,EAAA,IAAA4sB,EAAA5sB,GAAA4sB,EAAA5sB,EAAA,IAAAA,GAAA,GAAA4sB,EAAA5sB,EAAA,IAAA4sB,EAAA5sB,GAAA4sB,EAAA5sB,EAAA,GACA4sB,EAAA5sB,EAAA,GAAA4sB,EAAA5sB,EAAA,IACAA,QAEO,IAAA4sB,EAAA5sB,GAAA4sB,EAAA5sB,EAAA,GACP,KAGA8sB,GAAA9sB,IAIA,QAAA+sB,KACA,KAAAJ,EAAA,IACA,GAAA3sB,GAAA2sB,EAAA,CAEA3sB,GAAA,GAAA4sB,EAAA5sB,EAAA,GAAA4sB,EAAA5sB,EAAA,IACAA,IAGA8sB,EAAA9sB,IAIA,QAAA8sB,GAAA9iE,GACA,GAAAgjE,GAAAN,EAAA1iE,GACAijE,EAAAL,EAAA5iE,GACAkjE,EAAAR,EAAA1iE,EAAA,GACAmjE,EAAAP,EAAA5iE,EAAA,EACA4iE,GAAA5iE,GAAAijE,EAAAE,EAEAnjE,IAAA2iE,EAAA,IACAD,EAAA1iE,EAAA,GAAA0iE,EAAA1iE,EAAA,GACA4iE,EAAA5iE,EAAA,GAAA4iE,EAAA5iE,EAAA,IAGA2iE,GACA,IAAAx9B,GAAAk9B,EAAA78D,EAAA09D,GAAA19D,EAAAw9D,EAAAC,EAAA,EAAAtB,EACAqB,IAAA79B,EAGA,KAFA89B,GAAA99B,IAQA,KAFAg+B,EAAAlB,EAAAz8D,EAAAw9D,EAAAC,EAAA,GAAAz9D,EAAA09D,EAAAC,IAAA,EAAAxB,MAMAsB,GAAAE,EACAC,EAAAJ,EAAAC,EAAAC,EAAAC,GAEAE,EAAAL,EAAAC,EAAAC,EAAAC,IAIA,QAAAC,GAAAJ,EAAAC,EAAAC,EAAAC,GACA,GAAAnjE,GAAA,CAEA,KAAAA,EAAA,EAAeA,EAAAijE,EAAajjE,IAC5B+2C,EAAA/2C,GAAAwF,EAAAw9D,EAAAhjE,EAGA,IAAAsjE,GAAA,EACAC,EAAAL,EACAM,EAAAR,CAGA,IAFAx9D,EAAAg+D,KAAAh+D,EAAA+9D,KAEA,MAAAJ,EAAA,CAQA,OAAAF,EAAA,CACA,IAAAjjE,EAAA,EAAiBA,EAAAmjE,EAAanjE,IAC9BwF,EAAAg+D,EAAAxjE,GAAAwF,EAAA+9D,EAAAvjE,EAIA,aADAwF,EAAAg+D,EAAAL,GAAApsB,EAAAusB,IAOA,IAHA,GACAG,GAAAC,EAAAC,EADAC,EAAAC,IAGA,CACAJ,EAAA,EACAC,EAAA,EACAC,GAAA,CAEA,IACA,GAAAhC,EAAAn8D,EAAA+9D,GAAAxsB,EAAAusB,IAAA,GAKA,GAJA99D,EAAAg+D,KAAAh+D,EAAA+9D,KACAG,IACAD,EAAA,EAEA,MAAAN,EAAA,CACAQ,GAAA,CACA,YAOA,IAJAn+D,EAAAg+D,KAAAzsB,EAAAusB,KACAG,IACAC,EAAA,EAEA,MAAAT,EAAA,CACAU,GAAA,CACA,eAGOF,EAAAC,GAAAE,EAEP,IAAAD,EACA,KAGA,IAGA,QAFAF,EAAApB,EAAA78D,EAAA+9D,GAAAxsB,EAAAusB,EAAAL,EAAA,EAAAtB,IAEA,CACA,IAAA3hE,EAAA,EAAqBA,EAAAyjE,EAAYzjE,IACjCwF,EAAAg+D,EAAAxjE,GAAA+2C,EAAAusB,EAAAtjE,EAOA,IAJAwjE,GAAAC,EACAH,GAAAG,GACAR,GAAAQ,IAEA,GACAE,GAAA,CACA,QAMA,GAFAn+D,EAAAg+D,KAAAh+D,EAAA+9D,KAEA,MAAAJ,EAAA,CACAQ,GAAA,CACA,OAKA,QAFAD,EAAAzB,EAAAlrB,EAAAusB,GAAA99D,EAAA+9D,EAAAJ,EAAA,EAAAxB,IAEA,CACA,IAAA3hE,EAAA,EAAqBA,EAAA0jE,EAAY1jE,IACjCwF,EAAAg+D,EAAAxjE,GAAAwF,EAAA+9D,EAAAvjE,EAOA,IAJAwjE,GAAAE,EACAH,GAAAG,EAGA,KAFAP,GAAAO,GAEA,CACAC,GAAA,CACA,QAMA,GAFAn+D,EAAAg+D,KAAAzsB,EAAAusB,KAEA,MAAAL,EAAA,CACAU,GAAA,CACA,OAGAC,UACOH,GAAAK,GAAAJ,GAAAI,EAEP,IAAAH,EACA,KAGAC,GAAA,IACAA,EAAA,GAGAA,GAAA,EAMA,GAHAC,EAAAD,EACAC,EAAA,IAAAA,EAAA,GAEA,IAAAZ,EAAA,CACA,IAAAjjE,EAAA,EAAiBA,EAAAmjE,EAAanjE,IAC9BwF,EAAAg+D,EAAAxjE,GAAAwF,EAAA+9D,EAAAvjE,EAGAwF,GAAAg+D,EAAAL,GAAApsB,EAAAusB,OACK,QAAAL,EACL,SAAAv6D,MAEA,KAAA1I,EAAA,EAAiBA,EAAAijE,EAAajjE,IAC9BwF,EAAAg+D,EAAAxjE,GAAA+2C,EAAAusB,EAAAtjE,QA9HA,KAAAA,EAAA,EAAiBA,EAAAijE,EAAajjE,IAC9BwF,EAAAg+D,EAAAxjE,GAAA+2C,EAAAusB,EAAAtjE,GAkIA,QAAAqjE,GAAAL,EAAAC,EAAAC,EAAAC,GACA,GAAAnjE,GAAA,CAEA,KAAAA,EAAA,EAAeA,EAAAmjE,EAAanjE,IAC5B+2C,EAAA/2C,GAAAwF,EAAA09D,EAAAljE,EAGA,IAAAsjE,GAAAN,EAAAC,EAAA,EACAM,EAAAJ,EAAA,EACAK,EAAAN,EAAAC,EAAA,EACAY,EAAA,EACAC,EAAA,CAGA,IAFAx+D,EAAAg+D,KAAAh+D,EAAA89D,KAEA,MAAAL,EAAA,CAUA,OAAAE,EAAA,CAMA,IALAK,GAAAP,EACAK,GAAAL,EACAe,EAAAR,EAAA,EACAO,EAAAT,EAAA,EAEAtjE,EAAAijE,EAAA,EAA2BjjE,GAAA,EAAQA,IACnCwF,EAAAw+D,EAAAhkE,GAAAwF,EAAAu+D,EAAA/jE,EAIA,aADAwF,EAAAg+D,GAAAzsB,EAAAwsB,IAMA,IAFA,GAAAK,GAAAC,IAEA,CACA,GAAAJ,GAAA,EACAC,EAAA,EACAC,GAAA,CAEA,IACA,GAAAhC,EAAA5qB,EAAAwsB,GAAA/9D,EAAA89D,IAAA,GAKA,GAJA99D,EAAAg+D,KAAAh+D,EAAA89D,KACAG,IACAC,EAAA,EAEA,MAAAT,EAAA,CACAU,GAAA,CACA,YAOA,IAJAn+D,EAAAg+D,KAAAzsB,EAAAwsB,KACAG,IACAD,EAAA,EAEA,MAAAN,EAAA,CACAQ,GAAA,CACA,eAGOF,EAAAC,GAAAE,EAEP,IAAAD,EACA,KAGA,IAGA,QAFAF,EAAAR,EAAAZ,EAAAtrB,EAAAwsB,GAAA/9D,EAAAw9D,EAAAC,IAAA,EAAAtB,IAEA,CAOA,IANA6B,GAAAC,EACAH,GAAAG,EACAR,GAAAQ,EACAO,EAAAR,EAAA,EACAO,EAAAT,EAAA,EAEAtjE,EAAAyjE,EAAA,EAA8BzjE,GAAA,EAAQA,IACtCwF,EAAAw+D,EAAAhkE,GAAAwF,EAAAu+D,EAAA/jE,EAGA,QAAAijE,EAAA,CACAU,GAAA,CACA,QAMA,GAFAn+D,EAAAg+D,KAAAzsB,EAAAwsB,KAEA,MAAAJ,EAAA,CACAQ,GAAA,CACA,OAKA,QAFAD,EAAAP,EAAAlB,EAAAz8D,EAAA89D,GAAAvsB,EAAA,EAAAosB,IAAA,EAAAxB,IAEA,CAOA,IANA6B,GAAAE,EACAH,GAAAG,EACAP,GAAAO,EACAM,EAAAR,EAAA,EACAO,EAAAR,EAAA,EAEAvjE,EAAA,EAAqBA,EAAA0jE,EAAY1jE,IACjCwF,EAAAw+D,EAAAhkE,GAAA+2C,EAAAgtB,EAAA/jE,EAGA,IAAAmjE,GAAA,GACAQ,GAAA,CACA,QAMA,GAFAn+D,EAAAg+D,KAAAh+D,EAAA89D,KAEA,MAAAL,EAAA,CACAU,GAAA,CACA,OAGAC,UACOH,GAAAK,GAAAJ,GAAAI,EAEP,IAAAH,EACA,KAGAC,GAAA,IACAA,EAAA,GAGAA,GAAA,EASA,GANAC,EAAAD,EAEAC,EAAA,IACAA,EAAA,GAGA,IAAAV,EAAA,CAMA,IALAK,GAAAP,EACAK,GAAAL,EACAe,EAAAR,EAAA,EACAO,EAAAT,EAAA,EAEAtjE,EAAAijE,EAAA,EAA2BjjE,GAAA,EAAQA,IACnCwF,EAAAw+D,EAAAhkE,GAAAwF,EAAAu+D,EAAA/jE,EAGAwF,GAAAg+D,GAAAzsB,EAAAwsB,OACK,QAAAJ,EACL,SAAAz6D,MAIA,KAFAq7D,EAAAP,GAAAL,EAAA,GAEAnjE,EAAA,EAAiBA,EAAAmjE,EAAanjE,IAC9BwF,EAAAu+D,EAAA/jE,GAAA+2C,EAAA/2C,QAhJA,KAFA+jE,EAAAP,GAAAL,EAAA,GAEAnjE,EAAA,EAAiBA,EAAAmjE,EAAanjE,IAC9BwF,EAAAu+D,EAAA/jE,GAAA+2C,EAAA/2C,GAxPA,GAIA0iE,GACAE,EALAiB,EAAAC,EACA7jE,EAAA,EAKA0iE,EAAA,CACA1iE,GAAAuF,EAAAvF,MAMA,IAAA82C,KAEA2rB,MACAE,KA4XAxhE,KAAAyhE,YACAzhE,KAAA2hE,iBACA3hE,KAAAmhE,UAGA,QAAAz9C,GAAAtf,EAAAm8D,EAAAF,EAAAC,GACAD,IACAA,EAAA,GAGAC,IACAA,EAAAl8D,EAAAvF,OAGA,IAAAgkE,GAAAvC,EAAAD,CAEA,MAAAwC,EAAA,IAIA,GAAArB,GAAA,CAEA,IAAAqB,EAAA1C,EAGA,MAFAqB,GAAApB,EAAAh8D,EAAAi8D,EAAAC,EAAAC,OACAG,GAAAt8D,EAAAi8D,EAAAC,EAAAD,EAAAmB,EAAAjB,EAIA,IAAAuC,GAAA,GAAA5B,GAAA98D,EAAAm8D,GACAwC,EAAA7C,EAAA2C,EAEA,IAGA,IAFArB,EAAApB,EAAAh8D,EAAAi8D,EAAAC,EAAAC,IAEAwC,EAAA,CACA,GAAAC,GAAAH,CAEAG,GAAAD,IACAC,EAAAD,GAGArC,EAAAt8D,EAAAi8D,IAAA2C,EAAA3C,EAAAmB,EAAAjB,GACAiB,EAAAwB,EAGAF,EAAA3B,QAAAd,EAAAmB,GACAsB,EAAArB,YACAoB,GAAArB,EACAnB,GAAAmB,QACG,IAAAqB,EAEHC,GAAAnB,kBAnpBA,GAAAxB,GAAA,GACAuC,EAAA,CAqpBA1mE,GAAAC,QAAAynB,GrCw2ZMu/C,KACA,SAAUjnE,EAAQC,EAASC,GsC7+ajC,QAAAs/B,GAAAjyB,GACAA,QACA2kD,EAAApxD,KAAAkD,KAAAuJ,EAEA,QAAAnH,KAAAmH,GACAA,EAAApG,eAAAf,IAAA,UAAAA,IACApC,KAAAoC,GAAAmH,EAAAnH,GAQApC,MAAAiB,MAAA,GAAAiiE,GAAA35D,EAAAtI,MAAAjB,MACAA,KAAA+9B,MAAA,KAEA/9B,KAAAmjE,eApCA,GAAA3yD,GAAAtU,EAAA,MAEAgnE,EAAAhnE,EAAA,MAEAgyD,EAAAhyD,EAAA,MAEAknE,EAAAlnE,EAAA,KAkCAs/B,GAAAr+B,WACAG,YAAAk+B,EACAx6B,KAAA,cAQA07B,SAAA,EASAyyB,WAAA,EAOA7+B,EAAA,EAOAliB,GAAA,EAQAmiB,OAAA,EAQA8yC,WAAA,EAQAC,UAAA,EAQAp4C,QAAA,EAOAq4C,SAAA,EAOAC,OAAA,UAOAtrD,WAAA,EAOAkY,aAAA,EACAmuC,YAAA,SAAAtiC,KACAwnC,WAAA,SAAAxnC,KAOAD,MAAA,SAAAC,EAAAC,KAOA/xB,gBAAA,aASAm0B,QAAA,SAAA5zB,EAAAC,GACA,MAAA3K,MAAA0jE,YAAAh5D,EAAAC,IAOA8D,SAAA,SAAA1J,EAAAC,GACAD,EAAAjI,KAAAkI,EAAAhF,OAUA0jE,YAAA,SAAAh5D,EAAAC,GACA,GAAAg5D,GAAA3jE,KAAAw+B,sBAAA9zB,EAAAC,EAEA,OADA3K,MAAAmK,kBACAm0B,QAAAqlC,EAAA,GAAAA,EAAA,KAOAx1D,MAAA,WACAnO,KAAA08B,SAAA,EACA18B,KAAA+9B,MAAA,KACA/9B,KAAA0N,MAAA1N,KAAA0N,KAAAixB,WAuBAilC,aAAA,SAAA9kC,GACA,MAAA9+B,MAAA++B,QAAA,QAAAD,IAEAE,OAAA,SAAAjgC,EAAAxB,GACA,UAAAwB,EACAmvD,EAAA/wD,UAAA6hC,OAAAliC,KAAAkD,KAAAjB,EAAAxB,GAEAyC,KAAAiB,MAAAyG,IAAAnK,IAQAuN,SAAA,SAAA/L,EAAAxB,GAGA,MAFAyC,MAAAiB,MAAAyG,IAAA3I,EAAAxB,GACAyC,KAAAmO,OAAA,GACAnO,MAOA6jE,SAAA,SAAAznE,GAGA,MAFA4D,MAAAiB,MAAA,GAAAiiE,GAAA9mE,EAAA4D,MACAA,KAAAmO,OAAA,GACAnO,OAGAwQ,EAAAnM,SAAAm3B,EAAA0yB,GACA19C,EAAA7L,MAAA62B,EAAA4nC,EAEA,IAAA/jC,GAAA7D,CACAx/B,GAAAC,QAAAojC,GtCsgbMykC,KACA,SAAU9nE,EAAQC,GuC5vbxB,GAAA8nE,GAAA,SAAAhqC,GACA/5B,KAAA+5B,iBAGAgqC,GAAA5mE,WACAG,YAAAymE,EACAC,aAAA,SAAA7R,EAAAxlD,GACA3M,KAAA+5B,WAAA10B,MACA8sD,SACAxlD,WAIA,IAAA0yB,GAAA0kC,CACA/nE,GAAAC,QAAAojC,GvCqwbM4kC,KACA,SAAUjoE,EAAQC,EAASC,GwC/wbjC,QAAA42C,GAAAoxB,GACA,oBAAAA,GAAA,CACA,GAAAC,GAAAC,EAAAl7D,IAAAg7D,EACA,OAAAC,MAAA15D,MAEA,MAAAy5D,GAgBA,QAAAG,GAAAH,EAAAz5D,EAAA65D,EAAAv/D,EAAAw/D,GACA,GAAAL,EAEG,qBAAAA,GAAA,CAEH,GAAAz5D,KAAA+5D,eAAAN,IAAAI,EACA,MAAA75D,EAKA,IAAA05D,GAAAC,EAAAl7D,IAAAg7D,GACAO,GACAH,SACAv/D,KACAw/D,YAgBA,OAbAJ,IACA15D,EAAA05D,EAAA15D,OACAsoC,EAAAtoC,IAAA05D,EAAAO,QAAAr/D,KAAAo/D,MAEAh6D,MAAA,GAAAD,QACAC,EAAAG,OAAA+5D,EACAP,EAAAnnB,IAAAinB,EAAAz5D,EAAAm6D,gBACAn6D,QACAi6D,SAAAD,KAEAh6D,EAAA9I,IAAA8I,EAAA+5D,aAAAN,GAGAz5D,EAGA,MAAAy5D,GAhCA,MAAAz5D,GAoCA,QAAAk6D,KACA,GAAAR,GAAAnkE,KAAA4kE,cACA5kE,MAAA4K,OAAA5K,KAAA4kE,eAAA,IAEA,QAAAhmE,GAAA,EAAiBA,EAAAulE,EAAAO,QAAA7lE,OAAiCD,IAAA,CAClD,GAAA6lE,GAAAN,EAAAO,QAAA9lE,GACAmG,EAAA0/D,EAAA1/D,EACAA,MAAA/E,KAAAykE,EAAAF,WACAE,EAAAH,OAAAn2D,QAGAg2D,EAAAO,QAAA7lE,OAAA,EAGA,QAAAk0C,GAAAtoC,GACA,MAAAA,MAAAjJ,OAAAiJ,EAAAhJ,OAlFA,GAAA89C,GAAArjD,EAAA,MAEAkoE,EAAA,GAAA7kB,GAAA,GAmFAtjD,GAAA62C,iBACA72C,EAAAooE,sBACApoE,EAAA82C,gBxC6xbM8xB,KACA,SAAU7oE,EAAQC,EAASC,GyCl2bjC,QAAA4oE,GAAAjgE,EAAA0b,GACA,GAAAwkD,GAAAlgE,EAAA2a,cAAAe,EAAA,aACA,OAAAwkD,aAAA/7D,OAAA+7D,EAAAh+D,UAAAg+D,MAGA,QAAAC,GAAAD,GACA,OAAAA,EAAA,KAAAA,EAAA,MAWA,QAAA9H,GAAAp4D,EAAA0b,EAAA0kD,GACAzvC,EAAAnd,MAAAvb,KAAAkD,MACAA,KAAAklE,WAAArgE,EAAA0b,EAAA0kD,GAKA,QAAAE,GAAAz3B,EAAAC,GACA3tC,KAAAkW,OAAAkvD,MAAA13B,EAAAC,GA5CA,GAAAn9B,GAAAtU,EAAA,MAEAmpE,EAAAnpE,EAAA,MAEA4gE,EAAAuI,EAAAvI,aAEAtnC,EAAAt5B,EAAA,MAEA2yC,EAAA3yC,EAAA,MAEA+mB,EAAA4rB,EAAA5rB,aAEAqiD,EAAAppE,EAAA,MAEAqpE,EAAAD,EAAAC,kBA2BAC,EAAAvI,EAAA9/D,SAMAqoE,GAAAC,cAAA,SAAA7I,EAAA/3D,EAAA0b,EAAAwkD,GAEA/kE,KAAA+uD,WACA,IAAApiD,GAAA9H,EAAA2a,cAAAe,EAAA,SAOAy8C,EAAAF,EAAAF,GAAA,SAAAjwD,EACAqwD,GAAAxnD,MACApH,GAAA,IACAm1D,SAAA,EACA5hD,MAAAqjD,EAAAD,KAGA/H,EAAAoI,MAAAD,EACAnlE,KAAA0lE,YAAA9I,EACA58D,KAAAkhB,IAAA87C,IAQAwI,EAAAG,oBAAA,SAAAC,GACA5lE,KAAAusC,QAAA,GAAAh3B,cAAAqwD,IAaAJ,EAAAK,cAAA,WACA,MAAA7lE,MAAAusC,QAAA,IAQAi5B,EAAAR,SAAA,WACA,MAAAhlE,MAAAusC,QAAA,GAAA5qB,OAOA6jD,EAAAM,UAAA,WACA9lE,KAAAusC,QAAA,GAAA3f,QAAA,aAOA44C,EAAAO,SAAA,WACA/lE,KAAAusC,QAAA,GAAA3f,QAAA,WAQA44C,EAAAQ,KAAA,SAAAz1C,EAAAD,GACA,GAAA0sC,GAAAh9D,KAAAusC,QAAA,EACAywB,GAAAzsC,SACAysC,EAAA1sC,KAGAk1C,EAAAS,aAAA,SAAA5C,GACA,GAAArG,GAAAh9D,KAAAusC,QAAA,EACAywB,GAAAqG,YACArG,EAAAwG,OAAAH,EAAA,kBAqBAmC,EAAAN,WAAA,SAAArgE,EAAA0b,EAAA0kD,GACAjlE,KAAAkrB,QAAA,CACA,IAAA0xC,GAAA/3D,EAAA2a,cAAAe,EAAA,oBACAgN,EAAA1oB,EAAAqhE,UACAnB,EAAAD,EAAAjgE,EAAA0b,GACA4nB,EAAAy0B,IAAA58D,KAAA0lE,WAEA,IAAAv9B,EACAnoC,KAAAylE,cAAA7I,EAAA/3D,EAAA0b,EAAAwkD,OACG,CACH,GAAA/H,GAAAh9D,KAAAusC,QAAA,EACAywB,GAAA9xC,QAAA,EACAsK,EAAA/f,YAAAunD,GACAr7C,MAAAqjD,EAAAD,IACKx3C,EAAAhN,GAKL,GAFAvgB,KAAAmmE,cAAAthE,EAAA0b,EAAAwkD,EAAAE,GAEA98B,EAAA,CACA,GAAA60B,GAAAh9D,KAAAusC,QAAA,GACA65B,EAAAnB,KAAAmB,OACA1nE,GACAijB,MAAAq7C,EAAAr7C,MAAA5a,QAEAq/D,KAAA1nE,EAAAuC,OACAolE,QAAArJ,EAAA/7D,MAAAolE,UAEArJ,EAAAr7C,OAAA,KACAykD,IAAApJ,EAAA/7D,MAAAolE,QAAA,GACA7wC,EAAA9f,UAAAsnD,EAAAt+D,EAAA6uB,EAAAhN,GAGAvgB,KAAAsmE,aAAA/4C,EAIA,IAAAg5C,IAAA,sBACAC,GAAA,wBACAC,GAAA,kBACAC,GAAA,mBAQAlB,GAAAW,cAAA,SAAAthE,EAAA0b,EAAAwkD,EAAAE,GACA,GAAAjI,GAAAh9D,KAAAusC,QAAA,GACAhf,EAAA1oB,EAAAqhE,UACAv5D,EAAA9H,EAAA2a,cAAAe,EAAA,QAEA,WAAAy8C,EAAAh8D,MACAg8D,EAAA6G,UACA1rD,eAAA,GAIA,IAAAwuD,GAAA1B,KAAA0B,UACAC,EAAA3B,KAAA2B,eACAC,EAAA5B,KAAA4B,aACAC,EAAA7B,KAAA6B,aACAx1D,EAAA2zD,KAAA3zD,WACAy1D,EAAA9B,KAAA8B,gBACAC,EAAA/B,KAAA+B,eACAC,EAAAhC,KAAAgC,WAEA,KAAAhC,GAAApgE,EAAA6wD,cAAA,CACA,GAAAx1C,GAAA+kD,KAAA/kD,UAAA+kD,EAAA/kD,UAAArb,EAAAsb,aAAAI,EAGAomD,GAAAzmD,EAAA5N,SAAAi0D,GAAAW,cAAA,UACAN,EAAA1mD,EAAA5N,SAAAk0D,GAAAU,eACAL,EAAA3mD,EAAA7P,WAAA,gBACAy2D,EAAA5mD,EAAA7P,WAAA,gBACAiB,EAAA4O,EAAA5N,SAAAm0D,GACAM,EAAA7mD,EAAA5N,SAAAo0D,GACAM,EAAA9mD,EAAA7P,WAAA,kBACA42D,EAAA/mD,EAAA7P,WAAA,cAEAu2D,GAAAp2D,EAAA3M,UAAqC+iE,EAGrC,IAAAO,GAAAnK,EAAA/7D,KACA+7D,GAAAxnD,KAAA,YAAAqxD,GAAA,GAAA16D,KAAAyF,GAAA,QAEAk1D,GACA9J,EAAAxnD,KAAA,YAAAyN,EAAA6jD,EAAA,GAAA/B,EAAA,IAAA9hD,EAAA6jD,EAAA,GAAA/B,EAAA,MAGAkC,GAAAjK,EAAAxnD,KAAA,SAAAyxD,GAEAjK,EAAAE,SAAAvwD,EAAAs4D,KAAAmC,kBACApK,EAAAlyD,SAAA67D,EACA,IAAAN,GAAAxhE,EAAA2a,cAAAe,EAAA,UAEA,OAAA8lD,IACAc,EAAAd,UAGA,IAAAgB,GAAApC,KAAAoC,aACAC,GAAAD,GAAA9B,EAAA1gE,IAEAwiE,GAAA,MAAAC,IACA9xC,EAAA9lB,cAAAy3D,EAAAP,EAAAt1D,EAAAy1D,GACA92D,aAAAsd,EACArd,eAAAqQ,EACA7P,YAAA22D,EAAAxiE,EAAAwa,QAAAkB,GAAA1b,EAAAqE,IAAAo+D,EAAA/mD,GACA/O,YAAA,EACAtD,UAAAvB,IAIAqwD,EAAAzmC,IAAA,aAAAA,IAAA,YAAAA,IAAA,YAAAA,IAAA,UACAymC,EAAA7vD,WAAAy5D,EAGApxC,EAAAlmB,cAAA0tD,EACA,IAAAr7C,GAAAqjD,EAAAD,EAEA,IAAAiC,GAAAz5C,EAAAvY,qBAAA,CACA,GAAAuyD,GAAA,WACA,GAAAC,GAAA7lD,EAAA,GAAAA,EAAA,EACA3hB,MAAAsV,WACAqM,OAAAxV,KAAAC,IAAA,IAAAuV,EAAA,GAAAA,EAAA,MAAAxV,KAAAC,IAAA,IAAAuV,EAAA,GAAAA,EAAA,KAAA6lD,KACO,mBAGPC,EAAA,WACAznE,KAAAsV,WACAqM,SACO,kBAGPq7C,GAAAvtD,GAAA,YAAA83D,GAAA93D,GAAA,WAAAg4D,GAAAh4D,GAAA,WAAA83D,GAAA93D,GAAA,SAAAg4D,KAUAjC,EAAAkC,QAAA,SAAA3iE,EAAAwK,GACA,GAAAytD,GAAAh9D,KAAAusC,QAAA,EAEAvsC,MAAAkrB,OAAA8xC,EAAA9xC,QAAA,IAEA3b,KAAAo4D,aAAA3K,EAAA/7D,MAAA6P,KAAA,MACA0kB,EAAA/f,YAAAunD,GACA/7D,OACAolE,QAAA,GAEA1kD,OAAA,MACG3hB,KAAAsmE,aAAAtmE,KAAA+U,UAAAhQ,IAGHyL,EAAAnM,SAAA44D,EAAAznC,EAAAnd,MACA,IAAAgnB,GAAA49B,CACAjhE,GAAAC,QAAAojC,GzC23bMuoC,KACA,SAAU5rE,EAAQC,EAASC,G0C5qcjC,QAAAmjC,GAAAjiB,EAAApL,GACA,GAEAub,GAFA5V,KACAiD,EAAAwC,EAAAxC,WAGA,UAAAA,KAAA2S,EAAAvb,EAAA+oB,iBAAAngB,IACA,OACAjD,SAIA,IAAA9S,GAAA0oB,EAAAxS,UACAhG,EAAAuV,EAAAxN,eAAAjY,EAAAuY,EAEA,UAAArI,GAAAvE,EAAA/M,QAAAsR,GACA,OACA4C,SAIA,IAAA5K,GAAAlI,EAAAgjE,iBAAA9yD,GACAwV,EAAAgD,EAAA4L,gBAEA,IAAA5L,EAAAisC,mBACA7hD,EAAA4V,EAAAisC,mBAAAzkD,WACG,IAAAwV,KAAAu9C,YACHnwD,EAAA4S,EAAAu9C,YAAAjjE,EAAAkjE,UAAAv3D,EAAArL,IAAAolB,EAAAtM,WAAA,SAAAiuC,GACA,MAAA3+B,GAAAjP,kBAAA4tC,GAAA,KACKn3C,GAAA,YACF,IAAAhI,EAAA,CAEH,GAAAjD,GAAAiD,EAAA5C,kBAAA5H,OACAuH,GAAAkB,eAAA+B,EAAAoJ,WACAwB,GAAA7N,EAAAY,EAAAZ,EAAAtI,MAAA,EAAAsI,EAAAa,EAAAb,EAAArI,OAAA,GAGA,OACAkW,QACA5K,MA/CA,GAAAyD,GAAAtU,EAAA,MAEAouB,EAAApuB,EAAA,KAiDAF,GAAAC,QAAAojC,G1C2rcM2oC,KACA,SAAUhsE,EAAQC,EAASC,G2C/tcjC,QAAAo3B,GAAAv0B,EAAAmuB,EAAAxF,GACA,IAAAqI,EAAAC,KAAA,CAIA,GAAA3H,GAAA6E,EAAAyJ,OACAztB,GAAAmf,GAAA4/C,UAAA/+D,EAAAmf,GAAA4/C,YACAC,EAAA7/C,EAAA6E,IACAhkB,EAAAmf,GAAA4/C,QAAAlpE,KAAAmK,EAAAmf,GAAA4/C,QAAAlpE,QACA2oB,WAGA,QAAAwgD,GAAA7/C,EAAA6E,GAWA,QAAAi7C,GAAA/2C,EAAArsB,GACAsjB,EAAA5Y,GAAA2hB,EAAA,SAAAriB,GACA,GAAAq5D,GAAAC,EAAAn7C,EACApoB,GAAAoE,EAAAmf,GAAA4/C,QAAA,SAAAK,GACAA,GAAAvjE,EAAAujE,EAAAv5D,EAAAq5D,EAAA12C,kBAEA62C,EAAAH,EAAAI,SAAAt7C,KAhBAhkB,EAAAmf,GAAAogD,cAIAv/D,EAAAmf,GAAAogD,aAAA,EACAN,EAAA,QAAA33D,EAAAtK,MAAAwiE,EAAA,UACAP,EAAA,YAAA33D,EAAAtK,MAAAwiE,EAAA,cAEAP,EAAA,YAAAQ,IAaA,QAAAJ,GAAAC,EAAAt7C,GACA,GAEA07C,GAFAC,EAAAL,EAAAM,QAAAjqE,OACAkqE,EAAAP,EAAAQ,QAAAnqE,MAGAgqE,GACAD,EAAAJ,EAAAM,QAAAD,EAAA,GACGE,IACHH,EAAAJ,EAAAQ,QAAAD,EAAA,IAGAH,IACAA,EAAAl3C,eAAA,KACAxE,EAAAwE,eAAAk3C,IAIA,QAAAD,GAAAL,EAAAv5D,EAAA2iB,GACA42C,EAAA5gD,QAAA,aAAAgK,GAGA,QAAAg3C,GAAAO,EAAAX,EAAAv5D,EAAA2iB,GACA42C,EAAA5gD,QAAAuhD,EAAAl6D,EAAA2iB,GAGA,QAAA22C,GAAAn7C,GACA,GAAAs7C,IACAM,WACAE,YAOAt3C,EAAA,SAAA3U,GACA,GAAAg1B,GAAAy2B,EAAAzrD,EAAA/b,KAEA+wC,GACAA,EAAA1sC,KAAA0X,IAEAA,EAAA2U,iBACAxE,EAAAwE,eAAA3U,IAIA,QACA2U,iBACA82C,YASA,QAAAU,GAAAnqE,EAAAmuB,GACA,IAAA6C,EAAAC,KAAA,CAIA,GAAA3H,GAAA6E,EAAAyJ,SACAztB,EAAAmf,GAAA4/C,aAAqClpE,KAGrCmK,EAAAmf,GAAA4/C,QAAAlpE,GAAA,OApHA,GAAAyR,GAAAtU,EAAA,MAEA6zB,EAAA7zB,EAAA,MAEAouB,EAAApuB,EAAA,MAEAgN,EAAAohB,EAAA7J,aACA3b,EAAA0L,EAAA1L,IAiHA7I,GAAAq3B,WACAr3B,EAAAitE,c3CqvcMC,KACA,SAAUntE,EAAQC,EAASC,G4C91cjC,QAAAktE,GAAAvf,GACA,GAEA5oD,GAFAooE,EAAAxf,EAAA3gD,IAAA,QACAogE,EAAAzf,EAAAv3C,SAAA+2D,EAAA,QAWA,OARA,SAAAA,GACApoE,EAAAqoE,EAAAC,eACAtoE,EAAAiM,KAAA,MACG,WAAAm8D,IACHpoE,EAAAqoE,EAAAE,eACAvoE,EAAAgM,OAAA,MAGAhM,EAOA,QAAAwoE,GAAAC,EAAAtd,EAAAvC,EAAA38B,EAAAy8C,GACA,GAAApsE,GAAAssD,EAAA3gD,IAAA,SACA4H,EAAA84D,EAAArsE,EAAA6uD,EAAA7hB,KAAA6hB,EAAAp6C,QAAA63C,EAAA3gD,IAAA,sBACAma,UAAAwmC,EAAA3gD,IAAA,mBACAmX,UAAAwpC,EAAA3gD,IAAA,qBAEAoI,EAAAu4C,EAAAv3C,SAAA,SACAu3D,EAAAhrD,EAAA5X,kBAAAqK,EAAApI,IAAA,eACAyhC,EAAAr5B,EAAAmD,UACAq1D,EAAAllC,EAAAz6B,gBAAA2G,EAAA65B,GACAt+B,EAAAs9D,EAAAt9D,SACA7K,EAAAsoE,EAAAtoE,MAAAqoE,EAAA,GAAAA,EAAA,GACApoE,EAAAqoE,EAAAroE,OAAAooE,EAAA,GAAAA,EAAA,GAEAE,EAAAJ,EAAAI,KACA,WAAAA,IAAA19D,EAAA,IAAA7K,GACA,WAAAuoE,IAAA19D,EAAA,IAAA7K,EAAA,EACA,IAAAE,GAAAioE,EAAAjoE,aACA,YAAAA,IAAA2K,EAAA,IAAA5K,GACA,WAAAC,IAAA2K,EAAA,IAAA5K,EAAA,GAEAuoE,EAAA39D,EAAA7K,EAAAC,EAAAyrB,EACA,IAAA+8C,GAAA34D,EAAApI,IAAA,kBAEA+gE,IAAA,SAAAA,IACAA,EAAA7d,EAAAljD,IAAA,6BAGAwgE,EAAA/d,OACArgD,OACAZ,EAAA,EACAC,EAAA,EACAnJ,QACAC,SACAi7C,EAAAprC,EAAApI,IAAA,iBAEAmD,WAAAtF,QAEA9F,OACA6P,OACA2iC,SAAA9I,EACA18B,SAAAqD,EAAA44D,eACAz4D,aAAA,SACAvE,KAAA+8D,EACAh9D,OAAAqE,EAAApI,IAAA,8BACAqC,UAAA+F,EAAApI,IAAA,kBACAihE,WAAA74D,EAAApI,IAAA,cACAkhE,YAAA94D,EAAApI,IAAA,eACAmhE,cAAA/4D,EAAApI,IAAA,iBACAohE,cAAAh5D,EAAApI,IAAA,kBAGAkF,GAAA,IAKA,QAAA47D,GAAA39D,EAAA7K,EAAAC,EAAAyrB,GACA,GAAAq9C,GAAAr9C,EAAAgK,WACAszC,EAAAt9C,EAAAiK,WACA9qB,GAAA,GAAAF,KAAAiN,IAAA/M,EAAA,GAAA7K,EAAA+oE,GAAA/oE,EACA6K,EAAA,GAAAF,KAAAiN,IAAA/M,EAAA,GAAA5K,EAAA+oE,GAAA/oE,EACA4K,EAAA,GAAAF,KAAAC,IAAAC,EAAA,MACAA,EAAA,GAAAF,KAAAC,IAAAC,EAAA,MAaA,QAAAu9D,GAAArsE,EAAAgtC,EAAAv4B,EAAAy4D,EAAAl7D,GACA,GAAAuB,GAAAy5B,EAAA5oB,MAAAgqB,SAEApuC,GACA8lB,UAAA9T,EAAA8T,YAEAhD,EAAA9Q,EAAA8Q,SAEA,IAAAA,EAAA,CACA,GAAAD,IACA7iB,MAAAmtE,EAAAh/B,gBAAAnB,EAAAhtC,GACAotE,cAEAn6D,GAAA1L,KAAA2lE,EAAA,SAAAG,GACA,GAAA77C,GAAA/c,EAAA+oB,iBAAA6vC,EAAAhwD,aACA7F,EAAA61D,EAAA5tD,gBACA6tD,EAAA97C,KAAAhQ,cAAAhK,EACA81D,IAAAzqD,EAAAuqD,WAAAtlE,KAAAwlE,KAGAr6D,EAAApK,SAAAia,GACAvP,EAAAuP,EAAAjI,QAAA,UAAuCtH,GAClCN,EAAArK,WAAAka,KACLvP,EAAAuP,EAAAD,IAIA,MAAAtP,GAWA,QAAAg6D,GAAAvgC,EAAAhtC,EAAAwtE,GACA,GAAA50D,GAAAL,EAAAzY,QAGA,OAFAyY,GAAA0iC,OAAAriC,IAAA40D,EAAA9zD,UACAnB,EAAAmrB,UAAA9qB,IAAA40D,EAAA1+D,UACAmpB,EAAAxqB,gBAAAu/B,EAAAygC,YAAAztE,IAAAwtE,EAAAE,aAAA,IAAAF,EAAAG,gBAAA,IAAAH,EAAAI,aAAA,IAAAh1D,GAGA,QAAAi1D,GAAA7tE,EAAAmsE,EAAAqB,EAAA3e,EAAAvC,EAAA38B,GACA,GAAAm+C,GAAAC,EAAAC,gBAAAR,EAAA9zD,SAAA,EAAA8zD,EAAAG,eACAH,GAAAI,YAAAthB,EAAA3gD,IAAA,gBACAugE,EAAAC,EAAAtd,EAAAvC,EAAA38B,GACA7gB,SAAAy+D,EAAA1e,EAAA7hB,KAAAhtC,EAAAwtE,GACAhB,MAAAsB,EAAA/3D,UACA5R,cAAA2pE,EAAA93D,oBAUA,QAAAi4D,GAAAv3B,EAAAC,EAAAu3B,GAEA,MADAA,MAAA,GAEAhgE,GAAAwoC,EAAAw3B,GACA7/D,GAAAqoC,EAAA,EAAAw3B,GACA//D,GAAAwoC,EAAAu3B,GACA5/D,GAAAqoC,EAAA,EAAAu3B,IAUA,QAAAC,GAAAC,EAAAC,EAAAH,GAEA,MADAA,MAAA,GAEA/gE,EAAAihE,EAAAF,GACA9gE,EAAAghE,EAAA,EAAAF,GACAjqE,MAAAoqE,EAAAH,GACAhqE,OAAAmqE,EAAA,EAAAH,IAIA,QAAAI,GAAApa,EAAAC,EAAAoa,EAAApvB,EAAAiV,EAAAC,GACA,OACAH,KACAC,KACAoa,KACApvB,IACAiV,aACAC,WACAma,WAAA,GAhNA,GAAAv7D,GAAAtU,EAAA,MAEAs5B,EAAAt5B,EAAA,MAEA0oC,EAAA1oC,EAAA,MAEA2iB,EAAA3iB,EAAA,MAEA4Z,EAAA5Z,EAAA,MAEAwuE,EAAAxuE,EAAA,MAEAovE,EAAApvE,EAAA,KAwMAD,GAAAmtE,eACAntE,EAAAwtE,qBACAxtE,EAAA2tE,gBACA3tE,EAAA6uE,yBACA7uE,EAAAmvE,oCACAnvE,EAAAuvE,gBACAvvE,EAAAyvE,gBACAzvE,EAAA4vE,mB5Cq3cMG,KACA,SAAUhwE,EAAQC,EAASC,G6CpjdjC,QAAA+vE,GAAA7f,GACA,GAAApxB,IACAvb,cAAA2sC,EAAAvxC,SAGA,OADAmgB,GAAAoxB,EAAAvxC,SAAA,SAAAuxC,EAAA59B,eACAwM,EA2TA,QAAAkxC,GAAA38D,EAAAkC,EAAA06D,EAAA3iC,GACA,GACAl2B,GACAC,EAFA64D,EAAA5mD,EAAA2mD,EAAA58D,EAAA0H,UAGAo1D,EAAA7iC,EAAA,GAAAA,EAAA,GACA8iC,EAAA,UAAA76D,IAAA46D,GAAA,UAAA56D,GAAA46D,CAkBA,OAhBA1mD,GAAAymD,EAAAx6D,EAAA,IACA2B,EAAA+4D,EAAA,eACAh5D,EAAA,UACGqS,EAAAymD,EAAA,IAAAx6D,IACH2B,EAAA+4D,EAAA,eACAh5D,EAAA,WAEAC,EAAA,SAGAD,EADA84D,EAAA,IAAAx6D,GAAAw6D,EAAAx6D,EAAA,EACA06D,EAAA,eAEAA,EAAA,iBAKAr1D,SAAAm1D,EACA94D,YACAC,qBAIA,QAAAqoC,GAAAwQ,GACA,GAAAmgB,GAAAngB,EAAAljD,IAAA,UACA,OAAAkjD,GAAAljD,IAAA,aACAkjD,EAAAljD,IAAA,iBAAAqjE,KAAA3gB,MAGA,QAAA4gB,GAAApgB,EAAAqgB,EAAAC,GAIA,GAAAC,GAAAvgB,EAAAljD,IAAA,0BACA0jE,EAAAxgB,EAAAljD,IAAA,yBAGAujE,SACAC,OACA,IAAAG,GAAAJ,EAAA,GACAK,EAAAL,EAAA,GACAM,EAAAN,IAAA5tE,OAAA,GACAmuE,EAAAP,IAAA5tE,OAAA,GACAouE,EAAAP,EAAA,GACAQ,EAAAR,EAAA,GACAS,EAAAT,IAAA7tE,OAAA,GACAuuE,EAAAV,IAAA7tE,OAAA,IAEA,IAAA8tE,GACAU,EAAAR,GACAQ,EAAAJ,IACGK,EAAAT,EAAAC,KACHH,GACAU,EAAAP,GACAO,EAAAH,KAEAG,EAAAR,GACAQ,EAAAJ,MAIA,IAAAL,GACAS,EAAAN,GACAM,EAAAF,IACGG,EAAAN,EAAAD,KACHH,GACAS,EAAAL,GACAK,EAAAD,KAEAC,EAAAN,GACAM,EAAAF,KAKA,QAAAE,GAAAtgE,GACAA,MAAAkjB,QAAA,GAGA,QAAAq9C,GAAAC,EAAA12B,EAAA22B,GAEA,GAAAC,GAAAF,KAAApjE,kBAAA5H,QACAmrE,EAAA72B,KAAA1sC,kBAAA5H,OAEA,IAAAkrE,GAAAC,EAAA,CAMA,GAAAC,GAAAC,EAAA73D,YAIA,OAHA63D,GAAAp1B,OAAAm1B,KAAAJ,EAAAt2D,UACAw2D,EAAAziE,eAAA4iE,EAAA53D,OAAA23D,EAAAJ,EAAAt3D,sBACAy3D,EAAA1iE,eAAA4iE,EAAA53D,OAAA23D,EAAA92B,EAAA5gC,sBACAw3D,EAAAvsC,UAAAwsC,IAGA,QAAAG,GAAAC,GACA,iBAAAA,GAAA,WAAAA,EAiCA,QAAAC,GAAAC,EAAA5hB,EAAA78C,GACA,GAAAg7B,GAAA6hB,EAAA7hB,IAEA,IAAA6hB,EAAAljD,IAAA,mBAAAqhC,EAAA5oB,MAAAirC,UAAA,CAoBA,OAhBAqhB,GAAA7hB,EAAA95C,SAAA,YACA47D,EAAAD,EAAA37D,SAAA,aACA67D,EAAAF,EAAA/kE,IAAA,UACAklE,EAAAvU,EAAAoU,EAAA1+D,EAAA8+D,eACAC,EAAA/jC,EAAAgkC,eAAAN,EAAA/kE,IAAA,mBAGAqiC,EAAAhB,EAAA5oB,MAAA6pB,WACAmhC,EAAAvgB,EAAAljD,IAAA,0BACA0jE,EAAAxgB,EAAAljD,IAAA,0BACAslE,KACAC,KACA34D,EAAAk4D,EAAAU,WACAhC,KACAiC,EAAAL,EAAAzvE,OAEAD,EAAA,EAAiBA,EAAA+vE,EAAc/vE,IAE/B,IAAAgwE,EAAArkC,EAAA3rC,EAAAwvE,EAAAO,EAAAhC,EAAAC,GAAA,CAIA,GAAA3hC,GAAAqjC,EAAA1vE,EACA4vE,GAAA,GAAAvjC,EACAujC,EAAA,KACAC,EAAA,GAAAxjC,EACAwjC,EAAA,GAAAl/D,EAAAs/D,cAAAV,EAEAr4D,IACAwqB,EAAAkuC,IAAA14D,GACAwqB,EAAAmuC,IAAA34D,GAIA,IAAAg5D,GAAA,GAAAt5C,GAAA3c,KAAA2c,EAAApqB,sBAEAkM,KAAA,QAAAi0B,EAAA3sC,GACA0M,OACAG,GAAA+iE,EAAA,GACA5iE,GAAA4iE,EAAA,GACA9iE,GAAA+iE,EAAA,GACA5iE,GAAA4iE,EAAA,IAEAxtE,MAAA6C,EAAAoqE,EAAA3E,gBACAt8D,OAAAm/C,EAAAljD,IAAA,8BAEAkF,GAAA,EACA8c,QAAA,IAEA8iD,GAAA7lD,MAAAjH,IAAA4tD,GACApC,EAAArnE,KAAAypE,GAGA,MAAApC,IAGA,QAAAqC,GAAAf,EAAA5hB,EAAA78C,GACA,GAAAg7B,GAAA6hB,EAAA7hB,IAGA,IAFA/jC,EAAA+I,EAAAy/D,cAAA5iB,EAAAljD,IAAA,qBAEAqhC,EAAA5oB,MAAAirC,UAAA,CAIA,GAAAt7C,GAAA86C,EAAA95C,SAAA,aACA64D,EAAA75D,EAAApI,IAAA,UACAqiC,EAAAhB,EAAA5oB,MAAA6pB,WACAd,EAAA0hB,EAAAhhB,qBAEA6jC,GAAAzoE,EAAA+I,EAAAoC,YAAAL,EAAApI,IAAA,eAAA0I,EAAA,IACA47D,EAAAjC,EAAAh8D,EAAA0H,SAAAg4D,EAAA1/D,EAAA27D,gBACAgE,EAAA9iB,EAAAljD,IAAA,QACAujE,KACAvhD,EAAA0wB,EAAAwQ,GACA+iB,EAAA/iB,EAAAljD,IAAA,gBACAyjE,EAAAvgB,EAAAljD,IAAA,0BACA0jE,EAAAxgB,EAAAljD,IAAA,yBAoDA,OAnDApE,GAAAymC,EAAA,SAAA6jC,EAAAj0D,GACA,IAAAyzD,EAAArkC,EAAApvB,EAAA5L,EAAA8+D,cAAA9iC,EAAA1sC,OAAA8tE,EAAAC,GAAA,CAIA,GAAAyC,GAAA/9D,CAEA49D,MAAAE,IAAAF,EAAAE,GAAAr+D,YACAs+D,EAAA,GAAA30D,GAAAw0D,EAAAE,GAAAr+D,UAAAO,EAAA86C,EAAAp6C,SAGA,IAAAs9D,GAAAD,EAAAnF,gBAAA9d,EAAAljD,IAAA,4BACA+hC,EAAAV,EAAAygC,YAAAoE,GACAG,GAAAtkC,EAAA17B,EAAA07D,YAAA17D,EAAA27D,eAAAC,GACAqE,EAAAjlC,EAAA5oB,MAAAgqB,SAAAyjC,GACAK,EAAA,GAAAj6C,GAAAld,MAEAhB,KAAA,SAAA83D,EACA/iE,SAAAkjE,EACAt4D,SAAAu2D,EAAAv2D,SACAiU,SACA9c,GAAA,IAEAonB,GAAA3kB,aAAA4+D,EAAAxuE,MAAAouE,GACAv+D,KAAA45B,EAAAvvB,GACA7H,UAAA+7D,EAAAh/D,WAAA,aAAAm9D,EAAAl6D,UACAC,kBAAA87D,EAAAh/D,WAAA,qBAAAg/D,EAAAh/D,WAAA,gBAAAm9D,EAAAj6D,kBACAtF,SAAA,mBAAAqhE,KAOA,aAAA/kC,EAAAvpC,KAAAwuE,EAAA,UAAAjlC,EAAAvpC,KAAAouE,EAAA,GAAAA,EAAAj0D,GAAAm0D,IAGAH,IACAM,EAAAz0C,UAAAixC,EAAA7f,GACAqjB,EAAAz0C,UAAA00C,WAAA,YACAD,EAAAz0C,UAAAz9B,MAAAiyE,GAIAxB,EAAA2B,WAAAzuD,IAAAuuD,GAEAA,EAAAG,kBACAnD,EAAApnE,KAAAoqE,GACAzB,EAAA7lD,MAAAjH,IAAAuuD,GACAA,EAAAI,wBAEApD,GA9mBA,GAAA/4B,GAAAx3C,EAAA,MAEAsK,EAAAktC,EAAAltC,SACA1C,EAAA4vC,EAAA5vC,SACAD,EAAA6vC,EAAA7vC,OACAiB,EAAA4uC,EAAA5uC,KAEA+Z,EAAA3iB,EAAA,MAEAs5B,EAAAt5B,EAAA,MAEAwe,EAAAxe,EAAA,MAEA2yC,EAAA3yC,EAAA,MAEAypB,EAAAkpB,EAAAlpB,mBACAH,EAAAqpB,EAAArpB,UAEA6/C,EAAAnpE,EAAA,MAEA4gE,EAAAuI,EAAAvI,aAEA8Q,EAAA1xE,EAAA,MAEA27C,EAAA37C,EAAA,MAEAokC,EAAAuX,EAAA7sC,eACA4G,EAAAzF,KAAAyF,GAmDA05D,EAAA,SAAAlf,EAAA78C,GAIAvP,KAAAuP,MAKAvP,KAAAosD,YAEAtoD,EAAAyL,GACA07D,YAAA,EACA6E,cAAA,EACAjB,cAAA,EACA3D,eAAA,EACAhgD,QAAA,IAMAlrB,KAAAmoB,MAAA,GAAAqN,GAAAnd,KAEA,IAAA03D,GAAA,GAAAv6C,GAAAnd,OACAhM,SAAAkD,EAAAlD,SAAAtF,QACAkQ,SAAA1H,EAAA0H,UAIA84D,GAAAH,kBACA5vE,KAAA0uE,WAAAqB,EAAA55D,UACAnW,KAAA2vE,WAAAI,EAGAzE,GAAAnuE,WACAG,YAAAguE,EACA0E,WAAA,SAAA5tE,GACA,QAAA6tE,EAAA7tE,IAEA8e,IAAA,SAAA9e,GACA6tE,EAAA7tE,GAAAtF,KAAAkD,OAEAkwE,SAAA,WACA,MAAAlwE,MAAAmoB,OAGA,IAAA8nD,IAIAE,SAAA,WACA,GAAA5gE,GAAAvP,KAAAuP,IACA68C,EAAApsD,KAAAosD,SAEA,IAAAA,EAAAljD,IAAA,kBAIA,GAAAsgC,GAAAxpC,KAAAosD,UAAA7hB,KAAAnB,YACAtzB,EAAA9V,KAAA0uE,WACAF,GAAAhlC,EAAA,MACAilC,GAAAjlC,EAAA,KAEA1zB,KACAwqB,EAAAkuC,IAAA14D,GACAwqB,EAAAmuC,IAAA34D,GAGA,IAAAg2C,GAAAjoD,GACAusE,QAAA,SACKhkB,EAAA95C,SAAA,sBAAAi3D,eACLvpE,MAAAmoB,MAAAjH,IAAA,GAAAsU,GAAA3c,KAAA2c,EAAApqB,sBAEAkM,KAAA,OACAhM,OACAG,GAAA+iE,EAAA,GACA5iE,GAAA4iE,EAAA,GACA9iE,GAAA+iE,EAAA,GACA5iE,GAAA4iE,EAAA,IAEAxtE,MAAA6qD,EACA/vB,uBAAAxsB,EAAAwsB,wBAAA,EACA7Q,QAAA,EACA9c,GAAA,KAEA,IAAAiiE,GAAAjkB,EAAAljD,IAAA,mBACAonE,EAAAlkB,EAAAljD,IAAA,sBAEA,UAAAmnE,EAAA,CACA,iBAAAA,KAEAA,SAGA,iBAAAC,IAAA,iBAAAA,KAEAA,QAGA,IAAAC,GAAAD,EAAA,GACAE,EAAAF,EAAA,EACAxrE,KAAAyK,EAAA0H,SAAA9K,KAAAyF,GAAA,EAAA48D,IAAAj/D,EAAA0H,SAAA9K,KAAAyF,GAAA,EAAA68D,IAAA,SAAA9yD,EAAAR,GACA,YAAAk1D,EAAAl1D,IAAA,MAAAk1D,EAAAl1D,GAAA,CACA,GAAAs1D,GAAA3T,EAAAuT,EAAAl1D,IAAAo1D,EAAA,GAAAC,EAAA,EAAAD,EAAAC,EAAA1kB,EAAA7+C,QAAA,EACAwjE,GAAAj7D,MACAyB,SAAA0E,EAAA,GACAtP,SAAAsP,EAAA,GACAuP,QAAA,IAEAlrB,KAAAmoB,MAAAjH,IAAAuvD,KAEOzwE,SAOP0wE,cAAA,WACA,GAAAtkB,GAAApsD,KAAAosD,UACA78C,EAAAvP,KAAAuP,IACAm9D,EAAAqB,EAAA/tE,KAAAosD,EAAA78C,EAEAi9D,GAAApgB,EADA2iB,EAAA/uE,KAAAosD,EAAA78C,GACAm9D,IAMAiE,SAAA,WACA,GAAAphE,GAAAvP,KAAAuP,IACA68C,EAAApsD,KAAAosD,UACAhqD,EAAAoE,EAAA+I,EAAAohE,SAAAvkB,EAAAljD,IAAA,QAEA,IAAA9G,EAAA,CAIA,GASAorE,GATAM,EAAA1hB,EAAAljD,IAAA,gBACA4mE,EAAAvgE,EAAAugE,cACA9+D,EAAAo7C,EAAA95C,SAAA,iBACAy5B,EAAAqgB,EAAAljD,IAAA,cACAsgC,EAAAxpC,KAAAosD,UAAA7hB,KAAAnB,YACAwnC,EAAApnC,EAAA,GAAAA,EAAA,QACA+lC,GAAA,UAAAzB,EAAAtkC,EAAA,GAAAonC,EAAA7kC,EAAA,QAAA+hC,EAAAtkC,EAAA,GAAAonC,EAAA7kC,GAAAvC,EAAA,GAAAA,EAAA,MAEAqkC,EAAAC,GAAAv+D,EAAA07D,YAAA6E,EAAA/jC,EAAA,GAEA8kC,EAAAzkB,EAAAljD,IAAA,aAEA,OAAA2nE,IACAA,IAAAj/D,EAAA,IAGA,IAAAk/D,EAEAjD,GAAAC,GACAN,EAAAjC,EAAAh8D,EAAA0H,SAAA,MAAA45D,IAAAthE,EAAA0H,SACA64D,IAEAtC,EAAAtB,EAAA38D,EAAAu+D,EAAA+C,GAAA,EAAArnC,GAGA,OAFAsnC,EAAAvhE,EAAAuhE,0BAGAA,EAAA3kE,KAAAuK,IAAAo6D,EAAA3kE,KAAAg/B,IAAAqiC,EAAAv2D,YACAuN,SAAAssD,OAAA,OAIA,IAAAr9B,GAAAziC,EAAAyD,UACAs8D,EAAA3kB,EAAAljD,IAAA,uBACAonC,EAAAygC,EAAAzgC,SACAtE,EAAAxlC,EAAA+I,EAAAyhE,qBAAAD,EAAA/kC,SAAA8kC,GAGAG,EAAA,MAAA3gC,GAAA,MAAAtE,EAAAntB,EAAAimB,aAAA1iC,EAAA4pC,EAAAyH,EAAAnD,GACAI,QAAA,EACAG,YAAAkgC,EAAAlgC,cACKzuC,EACLmqE,EAAAngB,EAAAljD,IAAA,cACA2R,EAAAuxC,EAAAvxC,SACAq2D,GACAzxD,cAAA5E,EACAzY,OACA2d,OAAA,QAEAmxD,GAAAr2D,EAAA,SAAAuxC,EAAA59B,cACA,IAAAihD,GAAA,GAAAj6C,GAAAld,MAEAhB,KAAA,OACA65D,WAAA/uE,EACAgvE,gBAAAH,EACA5kE,SAAAkjE,EACAt4D,SAAAu2D,EAAAv2D,SACAiU,OAAA0wB,EAAAwQ,GACAh+C,GAAA,EACA0qD,QAAAyT,KAAA3gB,KAAA/nD,GACAwtE,QAAAjvE,EACAie,UAAA,WACA,MAAAje,IAEA8uE,mBACO3E,GAAA,MAEP/2C,GAAA3kB,aAAA4+D,EAAAxuE,MAAA+P,GACAF,KAAAmgE,EACAx9B,WACAxlC,SAAA+C,EAAAk5D,gBAAA9d,EAAAljD,IAAA,4BACAoK,UAAAk6D,EAAAl6D,UACAC,kBAAAi6D,EAAAj6D,oBAGA64C,EAAAljD,IAAA,kBACAumE,EAAAz0C,UAAAixC,EAAA7f,GACAqjB,EAAAz0C,UAAA00C,WAAA,WACAD,EAAAz0C,UAAA54B,QAIApC,KAAA2vE,WAAAzuD,IAAAuuD,GAEAA,EAAAG,kBACA5vE,KAAAmoB,MAAAjH,IAAAuuD,GACAA,EAAAI,wBAiBAtE,EAAAD,EAAAC,gBAAA,SAAA+F,EAAAz/D,EAAA2E,GACA,GACAlD,GACAC,EAFA64D,EAAA5mD,EAAA3T,EAAAy/D,EAsBA,OAlBA3rD,GAAAymD,IAEA74D,EAAAiD,EAAA,iBACAlD,EAAA,UACGqS,EAAAymD,EAAAx6D,IAEH2B,EAAAiD,EAAA,iBACAlD,EAAA,WAEAC,EAAA,SAGAD,EADA84D,EAAA,GAAAA,EAAAx6D,EACA4E,EAAA,iBAEAA,EAAA,mBAKAS,SAAAm1D,EACA94D,YACAC,sBAoHAq7D,EAAAtD,EAAAsD,eAAA,SAAArkC,EAAA3rC,EAAAkoB,EAAA6nD,EAAAhC,EAAAC,GACA,OAAAhuE,GAAA+tE,GAAA/tE,IAAA+vE,EAAA,GAAA/B,EACA,QAKA,IAAA2E,GACA5vD,EAAA4oB,EAAA5oB,KACA,mBAAAA,EAAA3gB,OAAA,mBAAA8lB,IAAAyqD,EAAA5vD,EAAA6pB,WAAA5sC,IAAAkoB,EAAAyqD,EAAA5vD,EAAAgqB,SAAA4lC,KAAA3yE,GAAAkoB,EAAA,KAOA+yC,EAAAyR,EAAAzR,YAAA,SAAAp/C,EAAA4zD,GACA,GAAAvnD,GAAArM,EAAAvR,IAAA,WAMA,OAJA,OAAA4d,GAAA,QAAAA,IACAA,EAAAunD,GAGAvnD,GA6IAuY,EAAAisC,CACAtvE,GAAAC,QAAAojC,G7CuldMmyC,KACA,SAAUx1E,EAAQC,EAASC,G8CroejC,QAAAu1E,GAAAC,EAAAtlB,EAAAp6C,EAAAkb,EAAAnQ,EAAA40D,GACA,GAAAzjD,GAAA0jD,EAAAC,oBAAAH,EAAAI,iBAEA,IAAA5jD,EAAA,CAIA,GAAA27B,GAAAkoB,EAAAllB,oBAAAT,EACAvC,IAAA6nB,EAAAM,eAAAN,EAAAM,aAAA,GAAA9jD,KAAAyB,OAAAy8B,EAAAvC,EAAA38B,EAAAykD,GAAAM,EAAAP,EAAAxkD,IAGA,QAAA+kD,GAAAP,EAAA1/D,EAAAkb,GACA,GAAAglD,GAAAR,EAAAM,YACAE,MAAAxjD,QAAA1c,EAAAkb,GACAwkD,EAAAM,aAAA,KAnFA,GAAA58C,GAAAl5B,EAAA,MAIAi2E,GAFA/8C,EAAAC,QAEAn5B,EAAA,OAEA61E,EAAA71E,EAAA,MAKA01E,EAAAO,EAAA99C,qBACArzB,KAAA,OAKAgxE,aAAA,KAMAF,iBAAA,KAKAniD,OAAA,SAAAy8B,EAAAp6C,EAAAkb,EAAAnQ,GAMA/c,KAAA8xE,kBAAAC,EAAAtlB,SAAAL,GACAwlB,EAAAhsC,WAAA5lC,KAAA,SAAA+F,WACA0rE,EAAAzxE,KAAAosD,EAAAp6C,EAAAkb,EAAAnQ,GAAA,IAWA00D,kBAAA,SAAArlB,EAAAp6C,EAAAkb,EAAAnQ,EAAAimD,GACAyO,EAAAzxE,KAAAosD,EAAAp6C,EAAAkb,EAAAnQ,GAAA,IAMA0R,OAAA,SAAAzc,EAAAkb,GACA,GAAAglD,GAAAlyE,KAAAgyE,YACAE,MAAAzjD,OAAAvB,GACA0kD,EAAAhsC,WAAA5lC,KAAA,SAAA+F,YAMA2oB,QAAA,SAAA1c,EAAAkb,GACA+kD,EAAAjyE,KAAAktB,GACA0kD,EAAAhsC,WAAA5lC,KAAA,UAAA+F,cAqBAqsE,IAEAR,GAAAS,yBAAA,SAAArxE,EAAAsD,GACA8tE,EAAApxE,GAAAsD,GAGAstE,EAAAC,oBAAA,SAAA7wE,GACA,MAAAA,IAAAoxE,EAAApxE,GAGA,IAAAq+B,GAAAuyC,CACA51E,GAAAC,QAAAojC,G9CgteMizC,KACA,SAAUt2E,EAAQC,EAASC,G+CzyejC,QAAA6N,GAAAwoE,EAAAnmB,EAAA78C,GACAA,OACA,IAAAijE,GAAAD,EAAAp5C,iBACAoR,EAAA6hB,EAAA7hB,KACAxgC,KACA0oE,EAAAloC,EAAAl+B,SACAqmE,EAAAnoC,EAAAooC,OAAA,SAAAF,EACAG,EAAAroC,EAAA2hB,IACApiD,EAAA0oE,EAAAK,UACAC,GAAAhpE,EAAAY,EAAAZ,EAAAY,EAAAZ,EAAAtI,MAAAsI,EAAAa,EAAAb,EAAAa,EAAAb,EAAArI,QACA8e,GACAgY,KAAA,EACAE,MAAA,EACAD,IAAA,EACAE,OAAA,EACAi6C,OAAA,GAEAI,EAAA3mB,EAAAljD,IAAA,aACA8pE,EAAA,MAAAJ,GAAAE,EAAA,GAAAC,EAAAD,EAAA,GAAAC,IAAAD,EAAA,GAAAC,EAAAD,EAAA,GAAAC,EAEA,IAAAxoC,EAAAooC,OAAA,CACA,GAAAM,GAAAT,EAAAvmB,QAAA,MAAA2mB,EAAA,QAAAroC,EAAA2oC,iBACAC,EAAAF,EAAAG,cAAAH,EAAAjI,YAAA,GACAgI,GAAAzyD,EAAA,QAAApU,KAAAC,IAAAD,KAAAiN,IAAA+5D,EAAAH,EAAA,IAAAA,EAAA,IAIAjpE,EAAAsC,UAAA,MAAAumE,EAAAI,EAAAzyD,EAAAmyD,IAAAI,EAAA,SAAAF,EAAAI,EAAAzyD,EAAAmyD,IAAAI,EAAA,IAEA/oE,EAAAkN,SAAA9K,KAAAyF,GAAA,SAAAghE,EAAA,IAEA,IAAAS,IACA76C,KAAA,EACAE,OAAA,EACAH,MAAA,EACAE,MAAA,EAEA1uB,GAAAmhE,eAAAnhE,EAAA8kE,cAAA9kE,EAAA+lE,cAAAuD,EAAAZ,GACA1oE,EAAAkhE,YAAA1gC,EAAAooC,OAAAK,EAAAzyD,EAAAkyD,IAAAO,EAAAzyD,EAAA,UAEA6rC,EAAAljD,IAAA,qBACAa,EAAA8kE,eAAA9kE,EAAA8kE,eAGAr+D,EAAAhK,SAAA+I,EAAA+jE,YAAAlnB,EAAAljD,IAAA,uBACAa,EAAAmhE,gBAAAnhE,EAAAmhE,eAIA,IAAAv5D,GAAAy6C,EAAAljD,IAAA,mBAMA,OALAa,GAAA4H,YAAA,QAAA+gE,GAAA/gE,IAEA5H,EAAAskE,cAAA9jC,EAAAgpC,mBAEAxpE,EAAAqE,GAAA,EACArE,EAhEA,GAAAyG,GAAAtU,EAAA,KAmEAD,GAAA8N,U/CwzeMypE,KACA,SAAUx3E,EAAQC,EAASC,GgD53ejC,GAAAi2E,GAAAj2E,EAAA,MAEAsU,EAAAtU,EAAA,MAEAs5B,EAAAt5B,EAAA,KAEAA,GAAA,MAEAA,EAAA,MAGAi2E,EAAA99C,qBACArzB,KAAA,OACA2uB,OAAA,SAAA4iD,EAAAvgE,GACAhS,KAAAmoB,MAAA4mC,YAEAwjB,EAAArpE,IAAA,SACAlJ,KAAAmoB,MAAAjH,IAAA,GAAAsU,GAAA5c,MACAtN,MAAAinE,EAAAp5C,iBAAA05C,UACA5xE,MAAAuP,EAAA1M,UACAoJ,KAAAqlE,EAAArpE,IAAA,oBACSqpE,EAAArL,gBACTh8C,QAAA,EACA9c,IAAA,QAKA+jE,EAAA3/C,qBAAA,SAAAtgB,GAEAA,EAAAuhE,OAAAvhE,EAAAwhE,QAAAxhE,EAAAsgE,OACAtgE,EAAAsgE,YhDo4eMmB,KACA,SAAU33E,EAAQC,EAASC,GiD55ejC,QAAA03E,GAAApqC,EAAAqqC,GACA,GAAAxV,GAAA70B,EAAA,GAAAA,EAAA,GACA5mC,EAAAixE,EACA9mC,EAAAsxB,EAAAz7D,EAAA,CACA4mC,GAAA,IAAAuD,EACAvD,EAAA,IAAAuD,EAbA,GAAAv8B,GAAAtU,EAAA,MAEAmoC,EAAAnoC,EAAA,MAEAwuE,EAAAxuE,EAAA,MAEAymB,EAAA0hB,EAAA1hB,UAUAmxD,GAAA,KAMAC,EAAA,SAAA7nB,EAAAvqC,EAAA6nB,GAKAxpC,KAAAksD,MAMAlsD,KAAA2hB,QAMA3hB,KAAAqtD,QAAA7jB,IAAA,KAKAxpC,KAAAqsE,SAAA,EAMArsE,KAAAg0E,QAAA,EAMAh0E,KAAAi0E,eAGAF,GAAA52E,WACAG,YAAAy2E,EAOAz1C,QAAA,SAAAqlC,GACA,GAAAn6B,GAAAxpC,KAAAqtD,QACAj0C,EAAAjN,KAAAiN,IAAAowB,EAAA,GAAAA,EAAA,IACAp9B,EAAAD,KAAAC,IAAAo9B,EAAA,GAAAA,EAAA,GACA,OAAAm6B,IAAAvqD,GAAAuqD,GAAAv3D,GAQA8nE,YAAA,SAAArvE,GACA,MAAA7E,MAAAs+B,QAAAt+B,KAAAgrE,YAAAnmE,KAOAukC,UAAA,WACA,MAAAppC,MAAAqtD,QAAAtmD,SAQAkd,kBAAA,SAAAC,GACA,MAAAmgB,GAAApgB,kBAAAC,GAAAlkB,KAAA2hB,MAAAynB,YAAAppC,KAAAqtD,UAQA1jB,UAAA,SAAAgkB,EAAAC,GACA,GAAApkB,GAAAxpC,KAAAqtD,OACA7jB,GAAA,GAAAmkB,EACAnkB,EAAA,GAAAokB,GASAod,YAAA,SAAAnmE,EAAAie,GACA,GAAA0mB,GAAAxpC,KAAAqtD,QACA1rC,EAAA3hB,KAAA2hB,KAQA,OAPA9c,GAAA8c,EAAAE,UAAAhd,GAEA7E,KAAAg0E,QAAA,YAAAryD,EAAA3gB,OACAwoC,IAAAziC,QACA6sE,EAAApqC,EAAA7nB,EAAAkC,UAGAlB,EAAA9d,EAAAivE,EAAAtqC,EAAA1mB,IASAqxD,YAAA,SAAAxQ,EAAA7gD,GACA,GAAA0mB,GAAAxpC,KAAAqtD,QACA1rC,EAAA3hB,KAAA2hB,KAEA3hB,MAAAg0E,QAAA,YAAAryD,EAAA3gB,OACAwoC,IAAAziC,QACA6sE,EAAApqC,EAAA7nB,EAAAkC,SAGA,IAAA1B,GAAAQ,EAAAghD,EAAAn6B,EAAAsqC,EAAAhxD,EACA,OAAA9iB,MAAA2hB,YAAAQ,IASAiyD,YAAA,SAAAz8D,EAAAmL,KAMAyrD,eAAA,SAAA8F,GACA,GAAAr0E,KAAAg0E,SAAAK,EAAA,CAIA,OAHAC,GAAAt0E,KAAAu0E,WACAC,KAEA51E,EAAA,EAAqBA,EAAA01E,EAAAz1E,OAAkBD,IACvC41E,EAAAnvE,KAAAivE,EAAA11E,GAAA,GAOA,OAJA01E,GAAA11E,EAAA,IACA41E,EAAAnvE,KAAAivE,EAAA11E,EAAA,OAGA41E,EAEA,MAAAhkE,GAAArL,IAAAnF,KAAA2hB,MAAA6pB,WAAAxrC,KAAAgrE,YAAAhrE,OAQAy0E,gBAAA,WACA,MAAAjkE,GAAArL,IAAAnF,KAAA2hB,MAAA6pB,WAAAxrC,KAAAgrE,YAAAhrE,OAYAu0E,SAAA,WAQA,OAPA/qC,GAAAxpC,KAAAopC,YACAkrC,KACA1xE,EAAA5C,KAAA2hB,MAAAkC,QACA8pC,EAAAnkB,EAAA,GACAokB,EAAApkB,EAAA,GACAX,EAAA+kB,EAAAD,EAEA/uD,EAAA,EAAmBA,EAAAgE,EAAShE,IAC5B01E,EAAAjvE,MAAAwjC,EAAAjqC,EAAAgE,EAAA+qD,EAAA9kB,GAAAjqC,EAAA,GAAAgE,EAAA+qD,GAGA,OAAA2mB,IAOAI,aAAA,WACA,GAAAC,GAAA30E,KAAAqtD,QACAnpC,EAAAlkB,KAAA2hB,MAAAynB,YACAxmC,EAAAshB,EAAA,GAAAA,EAAA,IAAAlkB,KAAAg0E,OAAA,IAEA,KAAApxE,MAAA,EACA,IAAAy7D,GAAAlyD,KAAAuK,IAAAi+D,EAAA,GAAAA,EAAA,GACA,OAAAxoE,MAAAuK,IAAA2nD,GAAAz7D,GAOAgyE,aAAA,KAMAC,UAAA,KAQAtB,iBAAA,WACA,GAAAlF,GAAAruE,KAAAi0E,cAEA,KAAA5F,EAAA,CACA,GAAAjiB,GAAApsD,KAAAya,MACAnJ,EAAA86C,EAAA95C,SAAA,YACA+7D,GAAA/8D,EAAApI,IAAA,YAEA,aAAAlJ,KAAAgB,MAAA,MAAAqtE,GAAA,SAAAA,IACAA,EAAA3D,EAAAlgC,qBAAAh6B,EAAArL,IAAAnF,KAAA2hB,MAAA6pB,WAAAxrC,KAAAgrE,YAAAhrE,MAAAosD,EAAAhhB,qBAAA95B,EAAAmD,UAAAzU,KAAA60E,UAAA70E,KAAA60E,YAAA70E,KAAA40E,eAAA50E,KAAA40E,eAAA,KAAAtjE,EAAApI,IAAA,YAGAlJ,KAAAi0E,eAAA5F,EAGA,MAAAA,IAGA,IAAAhvC,GAAA00C,CACA/3E,GAAAC,QAAAojC,GjD06eMy1C,KACA,SAAU94E,EAAQC,EAASC,GkD9qfjC,QAAAmjB,GAAAjjB,GACA,MAAAoU,GAAAlN,SAAAlH,IAAA,MAAAA,EAAAmB,MACAnB,EAAAmB,MAEAnB,EAAA,GARA,GAAAoU,GAAAtU,EAAA,MAEAwuE,EAAAxuE,EAAA,MAUAmjC,GAKA+L,mBAAA,WACA,MAAAs/B,GAAAt/B,mBAAAprC,KAAAuqC,KAAAvqC,KAAAkJ,IAAA,yBAMAihC,cAAA,WACA,mBAAAnqC,KAAAkJ,IAAA,SAAAsH,EAAArL,IAAAnF,KAAAkJ,IAAA,QAAAmW,IAOA0pB,OAAA,SAAAgsC,GACA,GAAA7iE,GAAAlS,KAAAkS,OACAkH,EAAA27D,GAAA,MAAA7iE,EAAA8iE,WAAA9iE,EAAAkH,IAAAlH,EAAA8iE,UAMA,OAJAh1E,MAAAuqC,MAAA,MAAAnxB,GAAA,YAAAA,GAAA,mBAAAA,KAAA5I,EAAAjK,MAAA6S,KACAA,EAAApZ,KAAAuqC,KAAA5oB,MAAAsT,MAAA7b,IAGAA,GAOA4vB,OAAA,SAAA+rC,GACA,GAAA7iE,GAAAlS,KAAAkS,OACA9F,EAAA2oE,GAAA,MAAA7iE,EAAA+iE,SAAA/iE,EAAA9F,IAAA8F,EAAA+iE,QAMA,OAJAj1E,MAAAuqC,MAAA,MAAAn+B,GAAA,YAAAA,GAAA,mBAAAA,KAAAoE,EAAAjK,MAAA6F,KACAA,EAAApM,KAAAuqC,KAAA5oB,MAAAsT,MAAA7oB,IAGAA,GAMAk9B,iBAAA,WACA,GAAAp3B,GAAAlS,KAAAkS,MACA,cAAAA,EAAA8iE,YAAA,MAAA9iE,EAAA+iE,WAAA/iE,EAAAyP,OAOAuzD,iBAAA1kE,EAAA5I,KAMAutE,SAAA,SAAAH,EAAAC,GACAj1E,KAAAkS,OAAA8iE,aACAh1E,KAAAkS,OAAA+iE,YAMAG,WAAA,WAEAp1E,KAAAkS,OAAA8iE,WAAAh1E,KAAAkS,OAAA+iE,SAAA,MAGAj5E,GAAAC,QAAAojC,GlDwrfMg2C,KACA,SAAUr5E,EAAQC,EAASC,GmD7tfjC,QAAAo5E,GAAA1C,EAAA1gE,GAEA,MAAAA,GAAAlR,OAAAkR,EAAArN,KAAA,oBAvDA,GAAA2L,GAAAtU,EAAA,MAEAk4B,EAAAl4B,EAAA,MAEAq5E,EAAAr5E,EAAA,MAEAs5E,EAAAt5E,EAAA,MAEAu5E,EAAArhD,EAAAvwB,QACA7C,KAAA,kBAKAupC,KAAA,KAKA/hB,KAAA,WACAitD,EAAA7vC,WAAA5lC,KAAA,OAAA+F,WACA/F,KAAAo1E,cAMA9yC,YAAA,WACAmzC,EAAA7vC,WAAA5lC,KAAA,cAAA+F,WACA/F,KAAAo1E,cAMA37C,YAAA,WACAg8C,EAAA7vC,WAAA5lC,KAAA,cAAA+F,WACA/F,KAAAo1E,cAOAF,iBAAA,WACA,MAAAl1E,MAAAgS,QAAA8L,iBACAjD,SAAA,OACAM,MAAAnb,KAAAkS,OAAAwjE,UACAp6D,GAAAtb,KAAAkS,OAAAyjE,SACK,KASLnlE,GAAApN,MAAAqyE,EAAAt4E,UAAAq4E,EACA,IAAAI,IAIAzjB,OAAA,EAEAojB,GAAA,IAAAE,EAAAH,EAAAM,GACAL,EAAA,IAAAE,EAAAH,EAAAM,EACA,IAAAv2C,GAAAo2C,CACAz5E,GAAAC,QAAAojC,GnDwxfMw2C,KACA,SAAU75E,EAAQC,EAASC,GoDzzfjC,QAAA45E,GAAA1pB,EAAAmmB,EAAAvgE,GACA,MAAAo6C,GAAA8oB,qBAAA3C,EAGA,QAAAwD,GAAAjM,EAAAtxB,GACA,GAAAw9B,GAAAx9B,EAAArsC,KAAAyF,GAAA,IACAqkE,EAAAnM,EAAAnoC,QACAu0C,EAAAD,EAAAz0E,MACA20E,EAAAF,EAAAx0E,OACA20E,EAAAF,EAAA/pE,KAAA++B,IAAA8qC,GAAAG,EAAAhqE,KAAAg/B,IAAA6qC,GACAK,EAAAH,EAAA/pE,KAAAg/B,IAAA6qC,GAAAG,EAAAhqE,KAAA++B,IAAA8qC,EAEA,OADA,IAAA78D,GAAA88D,EAAAvrE,EAAAurE,EAAAtrE,EAAAyrE,EAAAC,GAIA,QAAAC,GAAA/rC,GACA,GAGAzgC,GAHAsiD,EAAA7hB,EAAA9vB,MACAiwB,EAAA0hB,EAAAhhB,qBACAmrC,EAAAnqB,EAAA95C,SAAA,aAEA04B,EAAA,EACAwrC,EAAA9rC,EAAA7rC,MAEA23E,GAAA,KAEAxrC,EAAA7+B,KAAA4yC,KAAAy3B,EAAA,IAGA,QAAA53E,GAAA,EAAiBA,EAAA43E,EAAgB53E,GAAAosC,EACjC,IAAAT,EAAAksC,eAAA73E,GAAA,CACA,GAAA83E,GAAAH,EAAAxxC,YAAA2F,EAAA9rC,IACA+3E,EAAAZ,EAAAW,EAAAH,EAAArtE,IAAA,aACAY,KAAAy2B,MAAAo2C,GAAA7sE,EAAA6sE,EAIA,MAAA7sE,GAGA,QAAA8sE,GAAArE,EAAAvgE,EAAAkb,GAKAltB,KAAA62E,cAMA72E,KAAA82E,eAMA92E,KAAA+2E,YAMA/2E,KAAAg3E,aAEAh3E,KAAAi3E,eAAA1E,EAAAvgE,EAAAkb,GAEAltB,KAAAya,MAAA83D,EAiCA,QAAA2E,GAAAC,EAAAC,EAAA7sC,GAIA,GAAA8sC,GAAAF,EAAAC,EAEA,IAAA7sC,EAAAooC,OAAA,CAIA,GAAAO,GAAA3oC,EAAA2oC,eAEA,UAAAA,EAAA,CACA,GAAAD,GAAAoE,EAAAnE,EAMA,aAJAD,GAAAqE,EAAArE,KACA1oC,EAAAooC,QAAA,IAMA,OAAApyD,KAAA82D,GACA,GAAAA,EAAAl0E,eAAAod,GAAA,CACA,GAAA0yD,GAAAoE,EAAA92D,EAEA,IAAA0yD,IAAAqE,EAAArE,GAAA,CACAC,GAAA3yD,CACA,QAKA,MAAA2yD,IACA3oC,EAAAooC,QAAA,GAGApoC,EAAA2oC,mBAGA,QAAAoE,GAAA/sC,GACA,mBAAAA,EAAAvpC,MAAA,SAAAupC,EAAAvpC,OAAAspC,EAAAC,GAgWA,QAAAgtC,GAAAhtC,EAAAitC,GACA,GAAA7C,GAAApqC,EAAAnB,YACAquC,EAAA9C,EAAA,GAAAA,EAAA,EAEApqC,GAAA6oC,cAAA,MAAA7oC,EAAA2hB,IAAA,SAAAyX,GACA,MAAAA,GAAA6T,GACG,SAAA7T,GACH,MAAA8T,GAAA9T,EAAA6T,GAEAjtC,EAAAmtC,aAAA,MAAAntC,EAAA2hB,IAAA,SAAAyX,GACA,MAAAA,GAAA6T,GACG,SAAA7T,GACH,MAAA8T,GAAA9T,EAAA6T,GASA,QAAAG,GAAApqD,EAAAvb,GACA,MAAAxB,GAAArL,IAAAyyE,EAAA,SAAA3tC,GAEA,MADA1c,GAAA+a,uBAAA2B,GAAA,KASA,QAAA4tC,GAAAtqD,GACA,sBAAAA,EAAArkB,IAAA,oBAjjBA,GAAAksB,GAAAl5B,EAAA,MAIAsU,GAFA4kB,EAAAC,QAEAn5B,EAAA,OAEAid,EAAAjd,EAAA,MAEA67D,EAAA77D,EAAA,MAEAgxC,EAAA6qB,EAAA7qB,cAEAw9B,EAAAxuE,EAAA,MAEA47E,EAAA57E,EAAA,MAEA67E,EAAA77E,EAAA,MAEAm3B,EAAAn3B,EAAA,KAEAA,GAAA,KAQA,IAAA4I,GAAA0L,EAAA1L,KACAwlC,EAAAogC,EAAApgC,gBACAf,EAAAmhC,EAAAnhC,gBA2EAyuC,EAAApB,EAAAz5E,SACA66E,GAAAh3E,KAAA,OACAg3E,EAAAntB,oBAAA,EAEAmtB,EAAAnF,QAAA,WACA,MAAA7yE,MAAA+9B,OAGAi6C,EAAAvsD,OAAA,SAAAzZ,EAAAkb,GACA,GAAAiqD,GAAAn3E,KAAA+2E,QAEA/2E,MAAAi4E,aAAAjmE,EAAAhS,KAAAya,OAEA3V,EAAAqyE,EAAAzsE,EAAA,SAAA+oE,GACAlqC,EAAAkqC,EAAA9xD,MAAA8xD,EAAAh5D,SAEA3V,EAAAqyE,EAAAxsE,EAAA,SAAA+oE,GACAnqC,EAAAmqC,EAAA/xD,MAAA+xD,EAAAj5D,SAEA3V,EAAAqyE,EAAAzsE,EAAA,SAAA+oE,GACAyD,EAAAC,EAAA,IAAA1D,KAEA3uE,EAAAqyE,EAAAxsE,EAAA,SAAA+oE,GACAwD,EAAAC,EAAA,IAAAzD,KAIA1zE,KAAA0pB,OAAA1pB,KAAAya,MAAAyS,IAqDA8qD,EAAAtuD,OAAA,SAAA6oD,EAAArlD,EAAAgrD,GA8BA,QAAAC,KACArzE,EAAAszE,EAAA,SAAA7tC,GACA,GAAAqqC,GAAArqC,EAAAqqC,eACAprC,EAAAorC,GAAA,EAAAyD,EAAA72E,QAAA,EAAA62E,EAAA52E,QACA8e,EAAAgqB,EAAA8hC,QAAA,GACA9hC,GAAAZ,UAAAH,EAAAjpB,GAAAipB,EAAA,EAAAjpB,IACAg3D,EAAAhtC,EAAAqqC,EAAAyD,EAAA3tE,EAAA2tE,EAAA1tE,KAnCA,GAAA0tE,GAAAnrC,EAAAqlC,EAAA+F,sBACA92E,MAAA0rB,EAAAgK,WACAz1B,OAAAyrB,EAAAiK,aAEAn3B,MAAA+9B,MAAAs6C,CACA,IAAAD,GAAAp4E,KAAAg3E,SACAmB,MAEAD,GAAA3F,EAAArpE,IAAA,kBACApE,EAAAszE,EAAA,SAAA7tC,GACA,IAAAA,EAAA9vB,MAAAvR,IAAA,qBACA,GAAAqvE,GAAAjC,EAAA/rC,EAEA,IAAAguC,EAAA,CACA,GAAArsB,GAAA3hB,EAAAqqC,eAAA,iBACA7nC,EAAAxC,EAAA9vB,MAAAvR,IAAA,mBACAmvE,GAAAnsB,IAAAqsB,EAAArsB,GAAAnf,EAEA,QAAAxC,EAAAl+B,SACAgsE,EAAA1tE,GAAA4tE,EAAA92E,OAAAsrC,EACW,SAAAxC,EAAAl+B,WACXgsE,EAAA3tE,GAAA6tE,EAAA/2E,MAAAurC,OAKAorC,MAmBAH,EAAA/rB,QAAA,SAAAhiB,EAAAuuC,GACA,GAAAC,GAAAz4E,KAAA+2E,SAAA9sC,EAEA,UAAAwuC,EAAA,CACA,SAAAD,EAEA,OAAAp2E,KAAAq2E,GACA,GAAAA,EAAAt1E,eAAAf,GACA,MAAAq2E,GAAAr2E,EAKA,OAAAq2E,GAAAD,KAQAR,EAAAhtB,QAAA,WACA,MAAAhrD,MAAAg3E,UAAAjwE,SAcAixE,EAAAU,aAAA,SAAAC,EAAAC,GACA,SAAAD,GAAA,MAAAC,EAAA,CACA,GAAA75E,GAAA,IAAA45E,EAAA,IAAAC,CACA,OAAA54E,MAAA62E,WAAA93E,GAGAyR,EAAAlN,SAAAq1E,KACAC,EAAAD,EAAAC,WACAD,eAIA,QAAA/5E,GAAA,EAAAi6E,EAAA74E,KAAA82E,YAA+Cl4E,EAAAi6E,EAAAh6E,OAAsBD,IACrE,GAAAi6E,EAAAj6E,GAAAqtD,QAAA,KAAA9wC,QAAAw9D,GAAAE,EAAAj6E,GAAAqtD,QAAA,KAAA9wC,QAAAy9D,EACA,MAAAC,GAAAj6E,IAKAo5E,EAAAc,cAAA,WACA,MAAA94E,MAAA82E,YAAA/vE,SAQAixE,EAAAh/C,eAAA,SAAAhnB,EAAAoL,EAAA7f,GACA,GAAAmB,GAAAsB,KAAA+4E,mBAAA/mE,EAAAoL,EAEA,OAAA1e,GAAAs6E,UAAAt6E,EAAAs6E,UAAAlR,YAAAvqE,GAAAmB,EAAA6rC,KAAA7rC,EAAA6rC,KAAA6oC,cAAA10E,EAAA6rC,KAAAygC,YAAAztE,IAAA,MAQAy6E,EAAA/+C,iBAAA,SAAAjnB,EAAAoL,EAAA7f,GACA,GAAAmB,GAAAsB,KAAA+4E,mBAAA/mE,EAAAoL,EAEA,OAAA1e,GAAAs6E,UAAAt6E,EAAAs6E,UAAA5E,YAAA72E,GAAAmB,EAAA6rC,KAAA7rC,EAAA6rC,KAAA4pC,YAAAz1E,EAAA6rC,KAAAmtC,aAAAn6E,IAAA,MAOAy6E,EAAAe,mBAAA,SAAA/mE,EAAAoL,GACA,GAKA47D,GACAzuC,EANAhd,EAAAnQ,EAAAmQ,YACA6oC,EAAAh5C,EAAAg5C,YAAA7oC,KAAA+a,uBAAA,YACA+tB,EAAAj5C,EAAAi5C,YAAA9oC,KAAA+a,uBAAA,YACAiqC,EAAAn1D,EAAAm1D,UACA0G,EAAAj5E,KAAA82E,WAIA,IAAAvpD,EACAyrD,EAAAzrD,EAAA4L,iBACA3oB,EAAArM,QAAA80E,EAAAD,GAAA,IAAAA,EAAA,UACG,IAAA5iB,GAAAC,EACH2iB,EAAAh5E,KAAA04E,aAAAtiB,EAAA5nC,eAAA6nC,EAAA7nC,oBACG,IAAA4nC,EACH7rB,EAAAvqC,KAAAisD,QAAA,IAAAmK,EAAA5nC,oBACG,IAAA6nC,EACH9rB,EAAAvqC,KAAAisD,QAAA,IAAAoK,EAAA7nC,oBAEA,IAAA+jD,EAAA,CACA,GAAAC,GAAAD,EAAAp5C,gBAEAq5C,KAAAxyE,OACAg5E,EAAAh5E,KAAA82E,YAAA,IAIA,OACAkC,YACAzuC,SASAytC,EAAA5+C,aAAA,SAAAzhB,GACA,GAAAgsD,GAAA3jE,KAAA82E,YAAA,EAEA,IAAAnT,EACA,MAAAA,GAAAvqC,aAAAzhB,IASAqgE,EAAAf,eAAA,SAAA1E,EAAAvgE,EAAAkb,GA2CA,QAAAgsD,GAAAjvC,GACA,gBAAAmiB,EAAA7rC,GACA,GAAAu1D,EAAA1pB,EAAAmmB,EAAAvgE,GAAA,CAIA,GAAA0gE,GAAAtmB,EAAAljD,IAAA,WAEA,OAAA+gC,EAEA,QAAAyoC,GAAA,WAAAA,IAEAA,EAAA,SAEAyG,EAAAzG,KACAA,EAAA,QAAAA,EAAA,iBAKA,SAAAA,GAAA,UAAAA,IAEAA,EAAA,OAEAyG,EAAAzG,KACAA,EAAA,SAAAA,EAAA,iBAKAyG,EAAAzG,IAAA,CACA,IAAAnoC,GAAA,GAAAwtC,GAAA9tC,EAAAygC,EAAA1gC,mBAAAoiB,IAAA,KAAAA,EAAAljD,IAAA,QAAAwpE,GACA5b,EAAA,aAAAvsB,EAAAvpC,IACAupC,GAAAypC,OAAAld,GAAA1K,EAAAljD,IAAA,eACAqhC,EAAA8hC,QAAAjgB,EAAAljD,IAAA,WACAqhC,EAAAooC,OAAAvmB,EAAAljD,IAAA,mBACAqhC,EAAA2oC,gBAAA9mB,EAAAljD,IAAA,4BAEAkjD,EAAA7hB,OAEAA,EAAA9vB,MAAA2xC,EAEA7hB,EAAAioC,KAAAxyE,KAEAuqC,EAAApvB,MAAAoF,EAEAvgB,KAAAg3E,UAAA3xE,KAAAklC,GAEA4sC,EAAAltC,GAAA1pB,GAAAgqB,EACA6uC,EAAAnvC,OA3FA,GAAAkvC,IACA5gD,MAAA,EACAE,OAAA,EACAD,KAAA,EACAE,QAAA,GAEAy+C,GACAzsE,KACAC,MAEAyuE,GACA1uE,EAAA,EACAC,EAAA,EAMA,IAHAqH,EAAA+Y,cAAA,QAAAmuD,EAAA,KAAAl5E,MACAgS,EAAA+Y,cAAA,QAAAmuD,EAAA,KAAAl5E,OAEAo5E,EAAA1uE,IAAA0uE,EAAAzuE,EAIA,MAFA3K,MAAA+2E,iBACA/2E,KAAAg3E,aAIAh3E,MAAA+2E,SAAAI,EAEAryE,EAAAqyE,EAAAzsE,EAAA,SAAA+oE,EAAAkF,GACA7zE,EAAAqyE,EAAAxsE,EAAA,SAAA+oE,EAAAkF,GACA,GAAA75E,GAAA,IAAA45E,EAAA,IAAAC,EACAI,EAAA,GAAAlB,GAAA/4E,EACAi6E,GAAAxG,KAAAxyE,KACAg5E,EAAAv+D,MAAA83D,EACAvyE,KAAA62E,WAAA93E,GAAAi6E,EAEAh5E,KAAA82E,YAAAzxE,KAAA2zE,GAEAA,EAAAK,QAAA5F,GACAuF,EAAAK,QAAA3F,IACK1zE,OACFA,OA8DHg4E,EAAAC,aAAA,SAAAjmE,EAAAugE,GA2BA,QAAA/kB,GAAA3oD,EAAA0lC,EAAAhd,GACAzoB,EAAAyoB,EAAAjP,kBAAAisB,EAAA2hB,KAAA,SAAAA,GACA3hB,EAAA5oB,MAAA8rC,oBAAA5oD,EAAAqnD,KA3BA17C,EAAA1L,KAAA9E,KAAAg3E,UAAA,SAAAzsC,GACAA,EAAA5oB,MAAAgoB,UAAA1iB,YAEAjV,EAAAsb,WAAA,SAAAC,GACA,GAAAsqD,EAAAtqD,GAAA,CACA,GAAA4oC,GAAAwhB,EAAApqD,EAAAvb,GACAokD,EAAAD,EAAA,GACAE,EAAAF,EAAA,EAEA,KAAA2f,EAAA1f,EAAAmc,EAAAvgE,KAAA8jE,EAAAzf,EAAAkc,EAAAvgE,GACA,MAGA,IAAAgnE,GAAAh5E,KAAA04E,aAAAtiB,EAAA5nC,eAAA6nC,EAAA7nC,gBACA3pB,EAAA0oB,EAAAxS,UACA04D,EAAAuF,EAAA/sB,QAAA,KACAynB,EAAAsF,EAAA/sB,QAAA,IAEA,UAAApnD,EAAA7D,OACAwsD,EAAA3oD,EAAA4uE,EAAAlmD,GACAigC,EAAA3oD,EAAA6uE,EAAAnmD,MAGGvtB,OAcHg4E,EAAA/sB,eAAA,SAAAiB,GACA,GAAAb,MACAC,IAOA,OANAxmD,GAAA9E,KAAA84E,gBAAA,SAAAE,GACA,GAAAM,GAAA,MAAAptB,GAAA,SAAAA,EAAA8sB,EAAA/sB,QAAAC,GAAA8sB,EAAAvgB,cACAwa,EAAA+F,EAAAO,aAAAD,EACA9oE,GAAArM,QAAAknD,EAAAiuB,GAAA,GAAAjuB,EAAAhmD,KAAAi0E,GACA9oE,EAAArM,QAAAmnD,EAAA2nB,GAAA,GAAA3nB,EAAAjmD,KAAA4tE,MAGA5nB,WACAC,aAwBA,IAAAssB,IAAA,gBAoBAhB,GAAAv5E,OAAA,SAAA2U,EAAAkb,GACA,GAAAssD,KAuBA,OAtBAxnE,GAAA+Y,cAAA,gBAAAwnD,EAAAhyD,GACA,GAAAiyD,GAAA,GAAAoE,GAAArE,EAAAvgE,EAAAkb,EACAslD,GAAApwE,KAAA,QAAAme,EAGAiyD,EAAA9oD,OAAA6oD,EAAArlD,GAAA,GACAqlD,EAAAp5C,iBAAAq5C,EACAgH,EAAAn0E,KAAAmtE,KAGAxgE,EAAAsb,WAAA,SAAAC,GACA,GAAAsqD,EAAAtqD,GAAA,CAIA,GAAA4oC,GAAAwhB,EAAApqD,EAAAvb,GACAokD,EAAAD,EAAA,GACAE,EAAAF,EAAA,GACAoc,EAAAnc,EAAA8e,mBACA1C,EAAAD,EAAAp5C,gBACA5L,GAAA4L,iBAAAq5C,EAAAkG,aAAAtiB,EAAA5nC,eAAA6nC,EAAA7nC,mBAEAgrD,GAIA5C,EAAA34D,WAAA24D,EAAAz5E,UAAA8gB,WAAA65D,EAAA36E,UAAA8gB,WACAoV,EAAAC,SAAA,cAAAsjD,EACA,IAAAv3C,GAAAu3C,CACA56E,GAAAC,QAAAojC,GpDm2fMo6C,KACA,SAAUz9E,EAAQC,EAASC,IqDv7gBjC,SAAAqjC,GA6BA,QAAAm6C,GAAA14D,EAAAC,GACAzQ,EAAA1L,KAAA60E,EAAA1zE,OAAAgb,EAAA24D,sBAAA,SAAA3sB,GACAhsC,EAAA9d,eAAA8pD,KACAjsC,EAAAisC,GAAAhsC,EAAAgsC,MAGAjsC,EAAA44D,iBAAA34D,EAAA24D,iBAGA,QAAAC,GAAAC,GACA95E,KAAA+5E,OAAAD,MA+nBA,QAAAE,GAAA/7D,GAKA,MAJAzN,GAAA/M,QAAAwa,KACAA,OAGAA,EAmIA,QAAAg8D,GAAAC,EAAAC,GACA,GAAAC,GAAAF,EAAAj8D,WACA0I,EAAA,GAAA0uC,GAAA7kD,EAAArL,IAAAi1E,EAAAF,EAAA97D,iBAAA87D,KAAAhU,UAEAwT,GAAA/yD,EAAAuzD,EAIA,QAHArqD,GAAAlJ,EAAA0zD,YACAC,EAAAJ,EAAAG,SAEAz7E,EAAA,EAAiBA,EAAAw7E,EAAAv7E,OAA0BD,IAAA,CAC3C,GAAAstD,GAAAkuB,EAAAx7E,GACA27E,EAAAD,EAAApuB,EAEA17C,GAAArM,QAAAg2E,EAAAjuB,IAAA,EACAr8B,EAAAq8B,GAAA,GAAAquB,GAAAj9E,YAAAg9E,EAAApuB,GAAArtD,QAGAgxB,EAAAq8B,GAAAouB,EAAApuB,GAIA,MAAAvlC,GAl0BA,GAAAyO,GAAAl5B,EAAA,MAIAsU,GAFA4kB,EAAAC,QAEAn5B,EAAA,OAEAwe,EAAAxe,EAAA,MAEAs+E,EAAAt+E,EAAA,MAEAouB,EAAApuB,EAAA,MAMAoH,EAAAkN,EAAAlN,SAEAm3E,EADA,oBACAljD,QAAAgI,EAAAhI,OACAmjD,GACAC,MAHA,oBAGAF,GAAAG,aAAA5xE,MAAAyxE,EAAAG,aACAC,IAJA,oBAIAJ,GAAAK,WAAA9xE,MAAAyxE,EAAAK,WAEAC,QAAA/xE,MACAgyE,OAAAhyE,MACAiyE,KAAAjyE,OAEA2wE,GAAA,6DAeAE,GAAA18E,UAAA+9E,MAAA,EAEArB,EAAA18E,UAAA0mB,MAAA,WACA,MAAA7jB,MAAA+5E,OAAAl7E,QAGAg7E,EAAA18E,UAAAg+E,QAAA,SAAA56D,GACA,MAAAvgB,MAAA+5E,OAAAx5D,GAaA,IAAA80C,GAAA,SAAAp3C,EAAAioD,GACAjoD,MAAA,QAIA,QAHAm9D,MACAC,KAEAz8E,EAAA,EAAiBA,EAAAqf,EAAApf,OAAuBD,IAAA,CACxC,GAAA08E,GACAC,IAEA,kBAAAt9D,GAAArf,IACA08E,EAAAr9D,EAAArf,GACA28E,GACAn5E,KAAAk5E,EACAj9D,SAAAi9D,EACA98D,cAAA,EACAg4C,WAAA,EAGAx1D,KAAA,YAGAu6E,EAAAt9D,EAAArf,GACA08E,EAAAC,EAAAn5E,KACAm5E,EAAAv6E,KAAAu6E,EAAAv6E,MAAA,SAEAu6E,EAAAl9D,WACAk9D,EAAAl9D,SAAAi9D,EACAC,EAAA/8D,cAAA,IAIA+8D,EAAA58D,UAAA48D,EAAA58D,cACA08D,EAAAh2E,KAAAi2E,GACAF,EAAAE,GAAAC,EAQAv7E,KAAAie,WAAAo9D,EAMAr7E,KAAAw7E,gBAAAJ,EAKAp7E,KAAAkmE,YAKAlmE,KAAAgf,SAQAhf,KAAAy7E,WAOAz7E,KAAAq6E,YAKAr6E,KAAA07E,aAKA17E,KAAA27E,WAOA37E,KAAA47E,iBAKA57E,KAAAkvB,UAAA,KAOAlvB,KAAA67E,WAOA77E,KAAA+3D,WAOA/3D,KAAA87E,gBAOA97E,KAAA+7E,gBAOA/7E,KAAAg8E,eAMAh8E,KAAAi8E,SAMAj8E,KAAAqtD,SAGA6uB,EAAA7mB,EAAAl4D,SACA++E,GAAAl7E,KAAA,OAMAk7E,EAAAxmB,eAAA,EASAwmB,EAAAh+D,aAAA,SAAAguC,GAKA,MAJAtoC,OAAAsoC,KACAA,EAAAlsD,KAAAie,WAAAiuC,OAGAA,GAUAgwB,EAAA99D,iBAAA,SAAA8tC,GACA,MAAA17C,GAAAjO,MAAAvC,KAAAw7E,gBAAAx7E,KAAAke,aAAAguC,MAUAgwB,EAAAtmB,SAAA,SAAA/wD,EAAAywD,EAAAG,GACA5wD,QACA2L,EAAA/M,QAAAoB,KAGAA,EAAA,GAAAg1E,GAAAh1E,IAGA7E,KAAAi8E,SAAAp3E,CAEA,IAOAs3E,GAPAtsD,EAAA7vB,KAAAq6E,YACAoB,EAAAz7E,KAAAy7E,WACAx9D,EAAAje,KAAAie,WACAm+D,EAAAp8E,KAAAw7E,gBACAnd,EAAAx5D,EAAAgf,QACAw4D,KACAC,IAEAhnB,QAEA,QAAA12D,GAAA,EAAiBA,EAAAqf,EAAApf,OAAuBD,IAAA,CACxC,GAAAub,GAAAiiE,EAAAn+D,EAAArf,GACA,KAAAub,EAAAwE,UAAA49D,WAAAJ,EAAAv9E,EACA,IAAA49E,GAAA9B,EAAAvgE,EAAAnZ,KACA6uB,GAAA5R,EAAArf,IAAA,GAAA49E,GAAAne,GAGA,GAAAxhE,GAAAmD,IAEAy1D,KACA54D,EAAA64D,eAAA,GAIAD,KAAA,SAAAz7C,EAAAuE,EAAAxJ,EAAA6J,GACA,GAAArhB,GAAA+sB,EAAAvQ,iBAAAC,EAMA,OAJAsQ,GAAArQ,iBAAAD,KACAnd,EAAA64D,eAAA,GAGAprC,EAAApQ,gBAAA3c,YAAAyL,OAAAzL,EAAAqhB,GACArhB,EAAA6+E,EAAA79D,IAGA,QAAA3f,GAAA,EAAiBA,EAAAy/D,EAAUz/D,IAAA,CAU3B,OARAob,GAAAnV,EAAAs2E,QAAAv8E,GAQAmlC,EAAA,EAAmBA,EAAA9lB,EAAApf,OAAuBklC,IAAA,CAC1C,GAAAmoB,GAAAjuC,EAAA8lB,EACAlU,GAAAq8B,GAEAttD,GAAA62D,EAAAz7C,EAAAkyC,EAAAttD,EAAAmlC,GAGA03C,EAAAp2E,KAAAzG,GAIA,OAAAA,GAAA,EAAiBA,EAAAy/D,EAAUz/D,IAAA,CAC3B,GAAAob,GAAAnV,EAAAs2E,QAAAv8E,IAEA02D,EAAA12D,IAAAob,IACA,MAAAA,EAAA5X,KACAkzD,EAAA12D,GAAAob,EAAA5X,KACO,MAAA+5E,IACP7mB,EAAA12D,GAAAixB,EAAA5R,EAAAk+D,IAAAv9E,IAIA,IAAAwD,GAAAkzD,EAAA12D,IAAA,GAEA0c,EAAAtB,KAAAsB,IAEAA,GAAAlZ,IAEAk6E,EAAAl6E,GAAAk6E,EAAAl6E,IAAA,EACAkZ,EAAAlZ,EAEAk6E,EAAAl6E,GAAA,IACAkZ,GAAA,SAAAghE,EAAAl6E,IAGAk6E,EAAAl6E,MAGAkZ,IAAA+gE,EAAAz9E,GAAA0c,GAGAtb,KAAA07E,UAAApmB,EACAt1D,KAAA27E,QAAAU,GAOAH,EAAAr4D,MAAA,WACA,MAAA7jB,MAAAy7E,QAAA58E,QAWAq9E,EAAAhzE,IAAA,SAAAgjD,EAAA3rC,EAAAyO,GACA,GAAAa,GAAA7vB,KAAAq6E,SACAtlE,EAAA/U,KAAAy7E,QAAAl7D,EAEA,UAAAxL,IAAA8a,EAAAq8B,GACA,MAAA3xC,IAGA,IAAAhd,GAAAsyB,EAAAq8B,GAAAn3C,EAEA,IAAAia,EAAA,CACA,GAAAusD,GAAAv7E,KAAAw7E,gBAAAtvB,EAEA,IAAAqvB,KAAA/kB,UAGA,IAFA,GAAAtnC,GAAAlvB,KAAAkvB,UAEAA,GAAA,CAEA,GAAAutD,GAAAvtD,EAAAhmB,IAAAgjD,EAAA3rC,IAEAhjB,GAAA,GAAAk/E,EAAA,GACAl/E,GAAA,GAAAk/E,EAAA,KAEAl/E,GAAAk/E,GAGAvtD,eAKA,MAAA3xB,IAWA2+E,EAAAnU,UAAA,SAAA9pD,EAAAsC,EAAAyO,GACA,GAAAvoB,KAEA+J,GAAA/M,QAAAwa,KACA+Q,EAAAzO,EACAA,EAAAtC,EACAA,EAAAje,KAAAie,WAGA,QAAArf,GAAA,EAAAgE,EAAAqb,EAAApf,OAA0CD,EAAAgE,EAAShE,IACnD6H,EAAApB,KAAArF,KAAAkJ,IAAA+U,EAAArf,GAAA2hB,EAAAyO,GAGA,OAAAvoB,IAUAy1E,EAAA3tC,SAAA,SAAAhuB,GAIA,OAHAtC,GAAAje,KAAAie,WACAm9D,EAAAp7E,KAAAw7E,gBAEA58E,EAAA,EAAAgE,EAAAqb,EAAApf,OAA0CD,EAAAgE,EAAShE,IACnD,GACA,YAAAw8E,EAAAn9D,EAAArf,IAAAoC,MAAA4iB,MAAA5jB,KAAAkJ,IAAA+U,EAAArf,GAAA2hB,IACA,QAIA,WAUA27D,EAAAxuB,cAAA,SAAAxB,EAAAl9B,EAAAvpB,GACAymD,EAAAlsD,KAAAke,aAAAguC,EACA,IAAAwwB,GAAA18E,KAAAq6E,SAAAnuB,GACA/xC,EAAAna,KAAAoe,iBAAA8tC,EACAl9B,GAAA7U,KAAAq8C,WAAAxnC,CACA,IACAzxB,GADAo/E,GAAA38E,KAAAqtD,UAAArtD,KAAAqtD,aAAqDnB,IAAAl9B,EAGrD,IAAA2tD,EACA,MAAAA,EAIA,IAAAD,EAAA,CAIA,OAHAtjE,GAAA6N,IACA7a,GAAA6a,IAEAroB,EAAA,EAAAgE,EAAA5C,KAAA6jB,QAAuCjlB,EAAAgE,EAAShE,IAChDrB,EAAAyC,KAAAkJ,IAAAgjD,EAAAttD,EAAAowB,GAKAvpB,MAAAlI,EAAA2uD,EAAAttD,KACArB,EAAA6b,MAAA7b,GACAA,EAAA6O,MAAA7O,GAIA,OAAAyC,MAAAqtD,QAAAnB,IAAAl9B,IAAA5V,EAAAhN,GAEA,OAAA6a,WAUAi1D,EAAAU,OAAA,SAAA1wB,EAAAl9B,GACA,GAAA0tD,GAAA18E,KAAAq6E,SAAAnuB,GACAvnC,EAAA,CAEA,IAAA+3D,EACA,OAAA99E,GAAA,EAAAgE,EAAA5C,KAAA6jB,QAAuCjlB,EAAAgE,EAAShE,IAAA,CAChD,GAAArB,GAAAyC,KAAAkJ,IAAAgjD,EAAAttD,EAAAowB,EAEApL,OAAArmB,KACAonB,GAAApnB,GAKA,MAAAonB,IAWAu3D,EAAA/3E,QAAA,SAAA+nD,EAAA3uD,GACA,GAAAsyB,GAAA7vB,KAAAq6E,SACAqC,EAAA7sD,EAAAq8B,GACAuvB,EAAAz7E,KAAAy7E,OAEA,IAAAiB,EACA,OAAA99E,GAAA,EAAAgE,EAAA64E,EAAA58E,OAAyCD,EAAAgE,EAAShE,IAAA,CAClD,GAAAi+E,GAAApB,EAAA78E,EAEA,IAAA89E,EAAAG,KAAAt/E,EACA,MAAAqB,GAKA,UAUAs9E,EAAAh/D,YAAA,SAAA9a,GAIA,OAHAq5E,GAAAz7E,KAAAy7E,QACAnmB,EAAAt1D,KAAA07E,UAEA98E,EAAA,EAAAgE,EAAA64E,EAAA58E,OAAuCD,EAAAgE,EAAShE,IAAA,CAGhD,GAAA02D,EAFAmmB,EAAA78E,MAEAwD,EACA,MAAAxD,GAIA,UAUAs9E,EAAAj/D,gBAAA,SAAA4/D,GAEA,GAAApB,GAAAz7E,KAAAy7E,QAEAt8D,EAAAs8D,EAAAoB,EAEA,UAAA19D,OAAA09D,EACA,MAAAA,EAMA,KAHA,GAAAtkD,GAAA,EACAE,EAAAgjD,EAAA58E,OAAA,EAEA05B,GAAAE,GAAA,CACA,GAAAkoC,IAAApoC,EAAAE,GAAA,GAEA,IAAAgjD,EAAA9a,GAAAkc,EACAtkD,EAAAooC,EAAA,MACK,MAAA8a,EAAA9a,GAAAkc,GAGL,MAAAlc,EAFAloC,GAAAkoC,EAAA,GAMA,UAYAub,EAAAY,iBAAA,SAAA5wB,EAAA3uD,EAAAyxB,EAAA+tD,GACA,GAAAltD,GAAA7vB,KAAAq6E,SACAqC,EAAA7sD,EAAAq8B,GACA8wB,IAEA,KAAAN,EACA,MAAAM,EAGA,OAAAD,IACAA,EAAA91D,IAMA,QAHAg2D,GAAA53D,OAAA4tC,UACAiqB,GAAA,EAEAt+E,EAAA,EAAAgE,EAAA5C,KAAA6jB,QAAqCjlB,EAAAgE,EAAShE,IAAA,CAC9C,GAAAogE,GAAAzhE,EAAAyC,KAAAkJ,IAAAgjD,EAAAttD,EAAAowB,GACA1M,EAAAnW,KAAAuK,IAAAsoD,EAEAA,IAAA+d,GAAAz6D,GAAA26D,KAIA36D,EAAA26D,GAAAje,GAAA,GAAAke,EAAA,KACAD,EAAA36D,EACA46D,EAAAle,EACAge,EAAAn+E,OAAA,GAGAm+E,EAAA33E,KAAAzG,IAIA,MAAAo+E,IASAd,EAAA98D,YAAA,SAAAmB,GACA,GAAA48D,GAAAn9E,KAAAy7E,QAAAl7D,EACA,cAAA48D,GAAA,EAAAA,GASAjB,EAAA38D,eAAA,SAAAgB,GACA,MAAAvgB,MAAAi8E,SAAAd,QAAAn7E,KAAAof,YAAAmB,KASA27D,EAAA78D,QAAA,SAAAkB,GACA,MAAAvgB,MAAA07E,UAAA17E,KAAAy7E,QAAAl7D,KAAA,IASA27D,EAAAkB,MAAA,SAAA78D,GACA,MAAAvgB,MAAA27E,QAAA37E,KAAAy7E,QAAAl7D,KAAAvgB,KAAAof,YAAAmB,GAAA,IAwBA27D,EAAAp3E,KAAA,SAAAu4E,EAAAt4E,EAAAiqB,EAAAhqB,GACA,mBAAAq4E,KACAr4E,EAAAgqB,EACAA,EAAAjqB,EACAA,EAAAs4E,EACAA,MAGAA,EAAA7sE,EAAArL,IAAA60E,EAAAqD,GAAAr9E,KAAAke,aAAAle,KACA,IAAAzC,MACA+/E,EAAAD,EAAAx+E,OACA48E,EAAAz7E,KAAAy7E,OACAz2E,MAAAhF,IAEA,QAAApB,GAAA,EAAiBA,EAAA68E,EAAA58E,OAAoBD,IAErC,OAAA0+E,GACA,OACAv4E,EAAAjI,KAAAkI,EAAApG,EACA,MAEA,QACAmG,EAAAjI,KAAAkI,EAAAhF,KAAAkJ,IAAAm0E,EAAA,GAAAz+E,EAAAowB,GAAApwB,EACA,MAEA,QACAmG,EAAAjI,KAAAkI,EAAAhF,KAAAkJ,IAAAm0E,EAAA,GAAAz+E,EAAAowB,GAAAhvB,KAAAkJ,IAAAm0E,EAAA,GAAAz+E,EAAAowB,GAAApwB,EACA,MAEA,SACA,OAAAmlC,GAAA,EAAuBA,EAAAu5C,EAAav5C,IACpCxmC,EAAAwmC,GAAA/jC,KAAAkJ,IAAAm0E,EAAAt5C,GAAAnlC,EAAAowB,EAIAzxB,GAAAwmC,GAAAnlC,EACAmG,EAAAiB,MAAAhB,EAAAzH,KAaA2+E,EAAAqB,WAAA,SAAAt/D,EAAAlZ,EAAAiqB,EAAAhqB,GACA,mBAAAiZ,KACAjZ,EAAAgqB,EACAA,EAAAjqB,EACAA,EAAAkZ,EACAA,MAGAA,EAAAzN,EAAArL,IAAA60E,EAAA/7D,GAAAje,KAAAke,aAAAle,KACA,IAAAw9E,MACAjgF,KACA+/E,EAAAr/D,EAAApf,OACA48E,EAAAz7E,KAAAy7E,OACAz2E,MAAAhF,IAEA,QAAApB,GAAA,EAAiBA,EAAA68E,EAAA58E,OAAoBD,IAAA,CACrC,GAAA6+E,EAEA,IAAAH,EAEK,OAAAA,EACLG,EAAA14E,EAAAjI,KAAAkI,EAAAhF,KAAAkJ,IAAA+U,EAAA,GAAArf,EAAAowB,GAAApwB,OACK,CACL,OAAAmlC,GAAA,EAAqBA,EAAAu5C,EAAav5C,IAClCxmC,EAAAwmC,GAAA/jC,KAAAkJ,IAAA+U,EAAA8lB,GAAAnlC,EAAAowB,EAGAzxB,GAAAwmC,GAAAnlC,EACA6+E,EAAA14E,EAAAiB,MAAAhB,EAAAzH,OATAkgF,GAAA14E,EAAAjI,KAAAkI,EAAApG,EAYA6+E,IACAD,EAAAn4E,KAAAo2E,EAAA78E,IAOA,MAHAoB,MAAAy7E,QAAA+B,EAEAx9E,KAAAqtD,WACArtD,MAYAk8E,EAAAwB,SAAA,SAAAz/D,EAAAlZ,EAAAiqB,EAAAhqB,GACA,mBAAAiZ,KACAjZ,EAAAgqB,EACAA,EAAAjqB,EACAA,EAAAkZ,EACAA,KAGA,IAAAxb,KAIA,OAHAzC,MAAA8E,KAAAmZ,EAAA,WACAxb,EAAA4C,KAAAN,KAAAiB,MAAAhG,KAAA+F,aACGipB,EAAAhqB,GACHvC,GAmCAy5E,EAAA/2E,IAAA,SAAA8Y,EAAAlZ,EAAAiqB,EAAAhqB,GACAiZ,EAAAzN,EAAArL,IAAA60E,EAAA/7D,GAAAje,KAAAke,aAAAle,KACA,IAAA2mB,GAAAszD,EAAAj6E,KAAAie,GAGAw9D,EAAA90D,EAAA80D,QAAAz7E,KAAAy7E,QACA5rD,EAAAlJ,EAAA0zD,SACAsD,IAuBA,OAtBA39E,MAAA8E,KAAAmZ,EAAA,WACA,GAAAsC,GAAAxa,oBAAAlH,OAAA,GACA++E,EAAA74E,KAAAiB,MAAAhG,KAAA+F,UAEA,UAAA63E,EAAA,CAEA,iBAAAA,KACAD,EAAA,GAAAC,EACAA,EAAAD,EAGA,QAAA/+E,GAAA,EAAqBA,EAAAg/E,EAAA/+E,OAAqBD,IAAA,CAC1C,GAAAstD,GAAAjuC,EAAArf,GACA27E,EAAA1qD,EAAAq8B,GACAixB,EAAA1B,EAAAl7D,EAEAg6D,KACAA,EAAA4C,GAAAS,EAAAh/E,OAIGowB,EAAAhqB,GACH2hB,GAWAu1D,EAAA2B,WAAA,SAAAC,EAAApe,EAAAqe,EAAAC,GAYA,OAXAr3D,GAAAszD,EAAAj6E,MAAA89E,IACAjuD,EAAA7vB,KAAAq6E,SACA4D,EAAAt3D,EAAA0zD,SACA6D,EAAAl+E,KAAAy7E,QACAA,EAAA90D,EAAA80D,WACA0C,KACAC,KACAC,EAAAlyE,KAAAmY,MAAA,EAAAo7C,GACA6a,EAAA0D,EAAAH,GACAl7E,EAAA5C,KAAA6jB,QAEAjlB,EAAA,EAAiBA,EAAAixB,EAAAiuD,GAAAj/E,OAA+BD,IAChDq/E,EAAAH,GAAAl/E,GAAAixB,EAAAiuD,GAAAl/E,EAGA,QAAAA,GAAA,EAAiBA,EAAAgE,EAAShE,GAAAy/E,EAAA,CAE1BA,EAAAz7E,EAAAhE,IACAy/E,EAAAz7E,EAAAhE,EACAu/E,EAAAt/E,OAAAw/E,EAGA,QAAAt6C,GAAA,EAAmBA,EAAAs6C,EAAet6C,IAAA,CAClC,GAAAxjB,GAAA29D,EAAAt/E,EAAAmlC,EACAo6C,GAAAp6C,GAAAw2C,EAAAh6D,GACA69D,EAAAr6C,GAAAxjB,EAGA,GAAAhjB,GAAAwgF,EAAAI,GACA59D,EAAA69D,EAAAJ,EAAAG,EAAA5gF,IAAA,EAEAg9E,GAAAh6D,GAAAhjB,EACAk+E,EAAAp2E,KAAAkb,GAGA,MAAAoG,IAUAu1D,EAAA/7D,aAAA,SAAAI,GACA,GAAA2lD,GAAAlmE,KAAAkmE,SAEA,OADA3lD,GAAAvgB,KAAAy7E,QAAAl7D,GACA,GAAA7F,GAAA1a,KAAAi8E,SAAAd,QAAA56D,GAAA2lD,OAAAl0D,UASAkqE,EAAAld,KAAA,SAAAsf,GACA,GAEAp3E,GAFAm1E,EAAAr8E,KAAA27E,QACA4C,EAAAD,KAAA3C,OAKA,WAAAnB,GAAA8D,IAAA7C,WAAAz7E,KAAAy7E,QAAA,SAAAl7D,GACA,cAAArZ,EAAAq3E,EAAAh+D,IAAArZ,EAFA,QAEAqZ,GACG,SAAAA,GACH,cAAArZ,EAAAm1E,EAAA97D,IAAArZ,EAJA,QAIAqZ,KASA27D,EAAA7iD,UAAA,SAAAt6B,GACA,GAAAqwB,GAAApvB,KAAA67E,OACA,OAAAzsD,MAAArwB,IAeAm9E,EAAAsC,UAAA,SAAAz/E,EAAAmI,GACA,GAAA5D,EAAAvE,GACA,OAAAqD,KAAArD,GACAA,EAAAoE,eAAAf,IACApC,KAAAw+E,UAAAp8E,EAAArD,EAAAqD,QAOApC,MAAA67E,QAAA77E,KAAA67E,YACA77E,KAAA67E,QAAA98E,GAAAmI,GASAg1E,EAAAuC,UAAA,SAAA1/E,EAAAmI,GACA,GAAA5D,EAAAvE,GACA,OAAAqD,KAAArD,GACAA,EAAAoE,eAAAf,IACApC,KAAAy+E,UAAAr8E,EAAArD,EAAAqD,QAOApC,MAAA+3D,QAAAh5D,GAAAmI,GASAg1E,EAAAwC,UAAA,SAAA3/E,GACA,MAAAiB,MAAA+3D,QAAAh5D,IAQAm9E,EAAAyC,cAAA,SAAAp+D,GACA,MAAAvgB,MAAA+7E,aAAAx7D,IAUA27D,EAAA0C,cAAA,SAAAr+D,EAAAxW,EAAA3G,GACApD,KAAA+7E,aAAAx7D,GAAAnd,EAAAoN,EAAA3M,OAAA7D,KAAA+7E,aAAAx7D,OAA6ExW,MAO7EmyE,EAAA2C,iBAAA,WACA7+E,KAAA+7E,aAAAl9E,OAAA,GAUAq9E,EAAA18D,cAAA,SAAAe,EAAAxhB,EAAAwjC,GACA,GAAAu8C,GAAA9+E,KAAA87E,aAAAv7D,GACArZ,EAAA43E,KAAA//E,EAEA,cAAAmI,GAAAq7B,EAKAr7B,EAHAlH,KAAAq5B,UAAAt6B,IAoBAm9E,EAAA6C,cAAA,SAAAx+D,EAAAxhB,EAAAxB,GACA,GAAAuhF,GAAA9+E,KAAA87E,aAAAv7D,MAGA,IAFAvgB,KAAA87E,aAAAv7D,GAAAu+D,EAEAx7E,EAAAvE,GACA,OAAAqD,KAAArD,GACAA,EAAAoE,eAAAf,KACA08E,EAAA18E,GAAArD,EAAAqD,QAOA08E,GAAA//E,GAAAxB,GAOA2+E,EAAAjiD,eAAA,WACAj6B,KAAA67E,WACA77E,KAAA87E,gBAGA,IAAAkD,GAAA,SAAAtwE,GACAA,EAAAkM,YAAA5a,KAAA4a,YACAlM,EAAAqG,UAAA/U,KAAA+U,UACArG,EAAAsQ,SAAAhf,KAAAgf,SASAk9D,GAAA+C,iBAAA,SAAA1+D,EAAAxT,GACA,GAAAm5D,GAAAlmE,KAAAkmE,SAEAn5D,KAGAA,EAAAgI,UAAAwL,EACAxT,EAAAiS,SAAAhf,KAAAgf,SACAjS,EAAA6N,YAAAsrD,KAAAtrD,YAEA,UAAA7N,EAAA/L,MACA+L,EAAA0B,SAAAuwE,EAAAjyE,IAIA/M,KAAAg8E,YAAAz7D,GAAAxT,GAQAmvE,EAAArU,iBAAA,SAAAtnD,GACA,MAAAvgB,MAAAg8E,YAAAz7D,IAQA27D,EAAAgD,kBAAA,SAAAn6E,EAAAC,GACAwL,EAAA1L,KAAA9E,KAAAg8E,YAAA,SAAAjvE,EAAAwT,GACAxT,GACAhI,KAAAjI,KAAAkI,EAAA+H,EAAAwT,MAUA27D,EAAA5jB,aAAA,WACA,GAAA6mB,GAAA3uE,EAAArL,IAAAnF,KAAAie,WAAAje,KAAAoe,iBAAApe,MACA2mB,EAAA,GAAA0uC,GAAA8pB,EAAAn/E,KAAAkmE,UAWA,OATAv/C,GAAA0zD,SAAAr6E,KAAAq6E,SACAX,EAAA/yD,EAAA3mB,MAEA2mB,EAAA80D,QAAAz7E,KAAAy7E,QAAA10E,QAEA/G,KAAAqtD,UACA1mC,EAAA0mC,QAAA78C,EAAA3M,UAAmC7D,KAAAqtD,UAGnC1mC,GASAu1D,EAAAkD,WAAA,SAAAl1D,EAAAm1D,GACA,GAAAC,GAAAt/E,KAAAkqB,EAEA,oBAAAo1D,KAIAt/E,KAAA45E,iBAAA55E,KAAA45E,qBAEA55E,KAAA45E,iBAAAv0E,KAAA6kB,GAEAlqB,KAAAkqB,GAAA,WACA,GAAAq1D,GAAAD,EAAAt5E,MAAAhG,KAAA+F,UACA,OAAAs5E,GAAAr5E,MAAAhG,MAAAu/E,GAAAt5E,OAAAuK,EAAAzJ,MAAAhB,gBAMAm2E,EAAAsD,sBAAA,mCAEAtD,EAAAuD,mBAAA,aACA,IAAApgD,GAAAg2B,CACAr5D,GAAAC,QAAAojC,IrD07gB6BviC,KAAKb,EAASC,EAAoB,MAIzDwjF,KACA,SAAU1jF,EAAQC,EAASC,GsDzkjBjC,QAAAi5D,GAAAwqB,EAAA96E,EAAA0K,GAgHA,QAAAqwE,GAAAC,EAAAxhE,EAAAG,GACAshE,EAAAzhE,GACAwhE,EAAAlhE,UAAAN,GAAAG,GAEAqhE,EAAAxhE,WACAwhE,EAAArhE,gBACAuhE,EAAAr4E,IAAA2W,GAAA,IAIA,QAAA2hE,GAAA59E,EAAA+C,EAAA86E,GACA,GAAAA,GAAA,MAAA96E,EAAA+D,IAAA9G,GAAA,CAGA,IAFA,GAAAxD,GAAA,EAEA,MAAAuG,EAAA+D,IAAA9G,EAAAxD,IACAA,GAGAwD,IAAAxD,EAIA,MADAuG,GAAAuC,IAAAtF,GAAA,GACAA,EArIAyC,QACA0K,QACAowE,UAAA54E,OACA,IAAAmuD,IAAA3lD,EAAA2lD,aAAAnuD,QACAkuD,EAAAzkD,EAAA7I,cAAA4H,EAAA0lD,WACAirB,EAAA1vE,EAAA7I,gBACAo4E,EAAAvvE,EAAA7I,gBAEAlF,KACA09E,EAAA5wE,EAAA4wE,QAEA,UAAAA,EAAA,CACA,GAAAx5E,GAAAy5E,EAAAv7E,EAAA,GACAs7E,GAAAh0E,KAAAC,IAAAoE,EAAA/M,QAAAkD,MAAA9H,QAAA,EAAA8gF,EAAA9gF,OAAAq2D,EAAAr2D,QACAiG,EAAA66E,EAAA,SAAAU,GACA,GAAAC,GAAAD,EAAAnrB,OACAorB,KAAAH,EAAAh0E,KAAAC,IAAA+zE,EAAAG,EAAAzhF,WAKA,OAAAD,GAAA,EAAiBA,EAAAuhF,EAAcvhF,IAAA,CAC/B,GAAA2hF,GAAAn6E,EAAA8uD,EAAAt2D,KACAwD,KAAA8yD,EAAAt2D,IACKs2D,EAAAt2D,OACL4hF,EAAAD,EAAAn+E,KACAy9E,EAAAp9E,EAAA7D,IACA+f,aAGA,OAAA6hE,GAAA,MAAAN,EAAAh3E,IAAAs3E,KAIAX,EAAAz9E,KAAAy9E,EAAA5mB,YAAAunB,EACAN,EAAAx4E,IAAA84E,EAAA5hF,IAGA,MAAA2hF,EAAAv/E,OAAA6+E,EAAA7+E,KAAAu/E,EAAAv/E,MAIAi0D,EAAAnwD,KAAA,SAAA27E,EAAApiE,GACAoiE,EAAAxrB,EAAAvtD,IAAA2W,EAAA9E,EAAAknE,GAAA15E,SACAjC,EAAA27E,EAAA,SAAAC,EAAAliE,GAEApY,EAAAs6E,OAAAR,EAAAh3E,IAAAw3E,IAEA,MAAAA,KAAAP,IACAM,EAAAjiE,GAAAkiE,EACAd,EAAAn9E,EAAAi+E,GAAAriE,EAAAG,OAKA,IAAAmiE,GAAA,CACA77E,GAAA66E,EAAA,SAAAU,EAAAO,GACA,GAAAviE,GACAgiE,EACAC,EACAO,CAEAz6E,GAAAi6E,IACAhiE,EAAAgiE,EACAA,OAEAhiE,EAAAgiE,EAAAj+E,KACAi+E,EAAA7vE,EAAAjO,MAAA89E,GAEAC,EAAAD,EAAAnrB,QACA2rB,EAAAR,EAAA1hE,UACA0hE,EAAAj+E,KAAAi+E,EAAAhiE,SAAAgiE,EAAA7hE,cAAA6hE,EAAAnrB,QAAAmrB,EAAA1hE,UAAA,KAGA,IAAA8hE,GAAAlnE,EAAA07C,EAAA/rD,IAAAmV,GAEA,KAAAoiE,EAAA5hF,OACA,OAAAD,GAAA,EAAqBA,GAAA0hF,KAAAzhF,QAAA,GAA0DD,IAAA,CAC/E,KAAA+hF,EAAAl+E,EAAA5D,QAAA,MAAA4D,EAAAk+E,GAAAtiE,UACAsiE,GAGAA,GAAAl+E,EAAA5D,QAAA4hF,EAAAp7E,KAAAs7E,KAKA77E,EAAA27E,EAAA,SAAAC,EAAAliE,GACA,GAAAqhE,GAAAp9E,EAAAi+E,EACAd,GAAA97E,EAAA+7E,EAAAQ,GAAAhiE,EAAAG,GAEA,MAAAqhE,EAAAz9E,MAAAk+E,IACAT,EAAAz9E,KAAAy9E,EAAA5mB,YAAAqnB,EAAA9hE,IAGAqiE,GAAA/8E,EAAA+7E,EAAAlhE,UAAAkiE,MAMA,QAFAC,GAAAvxE,EAAAwxE,aAAA,QAEAL,EAAA,EAA4BA,EAAAP,EAAyBO,IAAA,CACrD,GAAAb,GAAAp9E,EAAAi+E,GAAAj+E,EAAAi+E,MAEA,OADAb,EAAAxhE,WACAwhE,EAAAxhE,SAAA2hE,EAAAc,EAAAf,EAAAxwE,EAAAyxE,eAAAnB,EAAArhE,cAAA,EAAAqhE,EAAAoB,cAAA,GACA,MAAApB,EAAAz9E,OAAAy9E,EAAAz9E,KAAA49E,EAAAH,EAAAxhE,SAAA6hE,IACA,MAAAL,EAAA7+E,MAAAkgF,EAAAr8E,EAAA67E,KAAAb,EAAA7+E,KAAA,WAGA,MAAAyB,GAmDA,QAAA29E,GAAA75C,GACA,MAAA/1B,GAAA/M,QAAA8iC,KAAA/1B,EAAAlN,SAAAijC,KAAAhpC,MAAAgpC,EAvNA,GAAA/1B,GAAAtU,EAAA,MAEAiuB,EAAAjuB,EAAA,MAEAqd,EAAA4Q,EAAA5Q,iBAKAzU,EAAA0L,EAAA1L,KACAsB,EAAAoK,EAAApK,SACAtC,EAAA0M,EAAA1M,SACAg8E,GACAhnB,QAAA,EACAnN,MAAA,EACA4wB,SAAA,GAkLA2E,EAAA/rB,EAAA+rB,aAAA,SAAAr8E,EAAA+Z,GACA,OAAAhgB,GAAA,EAAAgE,EAAAiC,EAAAhG,OAAoCD,EAAAgE,EAAShE,IAAA,CAC7C,GAAArB,GAAA6iF,EAAAv7E,EAAAjG,GAEA,KAAA4R,EAAA/M,QAAAlG,GACA,QAGA,IAAAA,KAAAqhB,EAGA,UAAArhB,GAAAinB,SAAAjnB,IAAA,KAAAA,EACA,QACK,IAAA6I,EAAA7I,IAAA,MAAAA,EACL,SAIA,UAOA8hC,EAAA81B,CACAn5D,GAAAC,QAAAojC,GtDoojBM8hD,KACA,SAAUnlF,EAAQC,EAASC,GuDh2jBjC,GAAA27D,GAAA37D,EAAA,MAEAwL,EAAAmwD,EAAAnwD,IACAwB,EAAA2uD,EAAA3uD,IACAm2B,GACA7P,kBAAA,WACA9nB,EAAA1H,KAAA,cACA0H,EAAA1H,KAAA,oBAEAq5D,oBAAA,SAAAj3D,EAAAk3D,GACAA,KAAAt5D,IACA,IAAAohF,GAAAl4E,EAAAowD,EAAA,eACA+nB,EAAAn4E,EAAAowD,EAAA,iBAAA5xD,EAAA4xD,EAAA,kBAEA,IAAA+nB,EAAAl+E,eAAAf,GACA,MAAAi/E,GAAAj/E,EAGA,IAAAk/E,GAAAthF,KAAAkJ,IAAA,eAEA,IAAAo4E,EAAAziF,OAAA,CAIA,GAAA8N,GAAA20E,EAAAF,EAOA,OALAh/E,KACAi/E,EAAAj/E,GAAAuK,GAGAjF,EAAA4xD,EAAA,YAAA8nB,EAAA,GAAAE,EAAAziF,QACA8N,IAGA3Q,GAAAC,QAAAojC,GvDs2jBMkiD,KACA,SAAUvlF,EAAQC,EAASC,GwD13jBjC,QAAAg+D,GAAA1wB,EAAAC,EAAAI,EAAAC,GACA,GAAArnC,MACAomC,EAAAW,EAAA,GAAAA,EAAA,GACA1iB,EAAArkB,EAAAqkB,SAAAud,EAAAhe,KAAAwiB,EAAAY,GAAA,EAEA,OAAAI,GAAA/iB,EAAA+iB,IACA/iB,EAAArkB,EAAAqkB,SAAA+iB,GAGA,MAAAC,GAAAhjB,EAAAgjB,IACAhjB,EAAArkB,EAAAqkB,SAAAgjB,EAIA,IAAAzmB,GAAA5gB,EAAA03D,kBAAAJ,EAAAjzC,EAIA,OADA06D,GADA/+E,EAAA23D,gBAAAT,EAAAxtD,KAAA4yC,KAAAvV,EAAA,GAAA1iB,KAAAzD,GAAAs2C,EAAAxtD,KAAAmY,MAAAklB,EAAA,GAAA1iB,KAAAzD,IACAmmB,GACA/mC,EAQA,QAAAs3D,GAAAjzC,GAEA,MAAAud,GAAAvgB,iBAAAgD,GAAA,EAGA,QAAAhE,GAAAs3C,EAAA75C,EAAAipB,GACA4wB,EAAA75C,GAAApU,KAAAC,IAAAD,KAAAiN,IAAAghD,EAAA75C,GAAAipB,EAAA,IAAAA,EAAA,IAIA,QAAAg4C,GAAApnB,EAAA5wB,IACAhlB,SAAA41C,EAAA,MAAAA,EAAA,GAAA5wB,EAAA,KACAhlB,SAAA41C,EAAA,MAAAA,EAAA,GAAA5wB,EAAA,IACA1mB,EAAAs3C,EAAA,EAAA5wB,GACA1mB,EAAAs3C,EAAA,EAAA5wB,GAEA4wB,EAAA,GAAAA,EAAA,KACAA,EAAA,GAAAA,EAAA,IAIA,QAAAJ,GAAAlzC,EAAA0iB,EAAA4wB,EAAAD,GACA,GAAA5uB,KAEA,KAAAzkB,EACA,MAAAykB,EAMA/B,GAAA,GAAA4wB,EAAA,IACA7uB,EAAAlmC,KAAAmkC,EAAA,GAKA,KAFA,GAAAiC,GAAA2uB,EAAA,GAEA3uB,GAAA2uB,EAAA,KACA7uB,EAAAlmC,KAAAomC,IAEAA,EAAAkuB,EAAAluB,EAAA3kB,EAAAqzC,MAEA5uB,IAAA1sC,OAAA,KAMA,GAAA0sC,EAAA1sC,OAnBA,IAoBA,QAUA,OAJA2qC,GAAA,IAAA+B,EAAA1sC,OAAA0sC,IAAA1sC,OAAA,GAAAu7D,EAAA,KACA7uB,EAAAlmC,KAAAmkC,EAAA,IAGA+B,EApGA,GAAAlH,GAAAnoC,EAAA,MAKAy9D,EAAAt1B,EAAA74B,KAkGAvP,GAAAi+D,yBACAj+D,EAAA89D,uBACA99D,EAAAulF,YACAvlF,EAAA+9D,yBxD+4jBMynB,KACA,SAAUzlF,EAAQC,EAASC,GyDh/jBjC,QAAAwlF,KAKA1hF,KAAAmoB,MAAA,GAAA9P,GAMArY,KAAAsnC,IAAAJ,EAAAO,OAAA,aAgFA,QAAAk6C,GAAA50E,EAAA5M,GACA,GAAA4M,IACAA,EAAA6f,QAAAzsB,GAEA,UAAA4M,EAAA/L,MACA,OAAApC,GAAA,EAAqBA,EAAAmO,EAAAwhD,aAAqB3vD,IAC1C+iF,EAAA50E,EAAAw/B,QAAA3tC,GAAAuB,GAaA,QAAAyhF,GAAA/8E,EAAAkY,EAAA5c,GACA,GAAA4U,GAAAuV,EAAAxN,eAAAjY,EAAAkY,EAEA,OAAAhI,EACAvE,EAAA1L,KAAAwlB,EAAA/Q,iBAAAxE,GAAA,SAAA8sE,GACAF,EAAA98E,EAAAgjE,iBAAAga,GAAA1hF,KAGA0E,EAAAq6E,kBAAA,SAAAnyE,GACA40E,EAAA50E,EAAA5M,KAjIA,GAAAqQ,GAAAtU,EAAA,MAEAmc,EAAAnc,EAAA,MAEAgrC,EAAAhrC,EAAA,MAEA+lC,EAAA/lC,EAAA,MAEAouB,EAAApuB,EAAA,KAgBAwlF,GAAAvkF,WACA6D,KAAA,QAOAwnB,KAAA,SAAAxW,EAAAkb,KASAyC,OAAA,SAAApC,EAAAvb,EAAAkb,EAAAnQ,KASA+oD,UAAA,SAAAv4C,EAAAvb,EAAAkb,EAAAnQ,GACA6kE,EAAAr0D,EAAAxS,UAAAgC,EAAA,aAUAgpD,SAAA,SAAAx4C,EAAAvb,EAAAkb,EAAAnQ,GACA6kE,EAAAr0D,EAAAxS,UAAAgC,EAAA,WAQA0R,OAAA,SAAAzc,EAAAkb,GACAltB,KAAAmoB,MAAA4mC,aAQArgC,QAAA,aAUA,IAAAozD,GAAAJ,EAAAvkF,SAEA2kF,GAAA9nD,WAAA8nD,EAAA3nD,aAAA2nD,EAAA5nD,aAAA,SAAA3M,EAAAvb,EAAAkb,EAAAnQ,GACA/c,KAAA2vB,OAAApC,EAAAvb,EAAAkb,EAAAnQ,IA2CAklB,EAAAa,kBAAA4+C,GAAA,YAEAz/C,EAAA4D,sBAAA67C,GACA96C,oBAAA,GAEA,IAAAvH,GAAAqiD,CACA1lF,GAAAC,QAAAojC,GzDggkBM0iD,KACA,SAAU/lF,EAAQC,EAASC,G0D9okBjC,GAAA8lF,GAAA9lF,EAAA,MAEAyrB,EAAAzrB,EAAA,MAEAma,EAAAna,EAAA,MAEA+lF,EAAA/lF,EAAA,MAEAsU,EAAAtU,EAAA,MASAgyD,EAAA,SAAA3kD,GAEA8M,EAAAvZ,KAAAkD,KAAAuJ,GACAoe,EAAA7qB,KAAAkD,KAAAuJ,GACA04E,EAAAnlF,KAAAkD,KAAAuJ,GAMAvJ,KAAAsb,GAAA/R,EAAA+R,IAAA0mE,IAGA9zB,GAAA/wD,WAMA6D,KAAA,UAOAoB,KAAA,GAQAsL,KAAA,KASAuiB,QAAA,EASAiyD,SAAA,KAOA9c,MAAA,SAAA13B,EAAAC,GACA,OAAA3tC,KAAAqjE,WACA,iBACA11B,EAAA,CACA,MAEA,gBACAD,EAAA,EAIA,GAAAxiC,GAAAlL,KAAAmW,SAEAjL,KACAA,EAAAlL,KAAAmW,WAAA,cAGAjL,EAAA,IAAAwiC,EACAxiC,EAAA,IAAAyiC,EACA3tC,KAAA6vE,qBACA7vE,KAAAmO,OAAA,IAMAg0E,aAAA,aAKAC,YAAA,aAKA32D,OAAA,WACAzrB,KAAA4vE,mBAOAnhE,SAAA,SAAA1J,EAAAC,KAKAg6B,OAAA,SAAAjgC,EAAAxB,GACA,gBAAAwB,GAAA,UAAAA,GAAA,WAAAA,GAEA,GAAAxB,EAAA,CACA,GAAAmB,GAAAsB,KAAAjB,EAEAL,KACAA,EAAAsB,KAAAjB,OAGAL,EAAA,GAAAnB,EAAA,GACAmB,EAAA,GAAAnB,EAAA,QAGAyC,MAAAjB,GAAAxB,GAOA8kF,KAAA,WACAriF,KAAAiwB,QAAA,EACAjwB,KAAA0N,MAAA1N,KAAA0N,KAAAixB,WAMAitB,KAAA,WACA5rD,KAAAiwB,QAAA,EACAjwB,KAAA0N,MAAA1N,KAAA0N,KAAAixB,WAOAnpB,KAAA,SAAAzW,EAAAxB,GACA,oBAAAwB,GACAiB,KAAAg/B,OAAAjgC,EAAAxB,OACK,IAAAiT,EAAAlN,SAAAvE,GACL,OAAAqD,KAAArD,GACAA,EAAAoE,eAAAf,IACApC,KAAAg/B,OAAA58B,EAAArD,EAAAqD,GAMA,OADApC,MAAAmO,OAAA,GACAnO,MAMAsiF,YAAA,SAAAJ,GACA,GAAA75D,GAAAroB,KAAA0N,IAEA2a,IACA65D,EAAAK,YAAAl6D,GAIAroB,KAAAkiF,UAAAliF,KAAAkiF,cACAliF,KAAAwiF,iBAGAxiF,KAAAkiF,WACAA,EAAAx0E,KAAA2a,EACA65D,EAAAtjD,aAAA5+B,KACAA,KAAAmO,OAAA,IAKAq0E,eAAA,WACA,GAAAN,GAAAliF,KAAAkiF,QAEAA,KACAA,EAAAx0E,MACAw0E,EAAAO,iBAAAP,EAAAx0E,MAGAw0E,EAAAx0E,KAAA,KACAw0E,EAAAtjD,aAAA,KACA5+B,KAAAkiF,SAAA,KACAliF,KAAAmO,OAAA,KASAo0E,YAAA,SAAAl6D,GACAroB,KAAA0N,KAAA2a,CAEA,IAAAq6D,GAAA1iF,KAAA0iF,SAEA,IAAAA,EACA,OAAA9jF,GAAA,EAAqBA,EAAA8jF,EAAA7jF,OAAsBD,IAC3CypB,EAAA0B,UAAA44D,YAAAD,EAAA9jF,GAIAoB,MAAAkiF,UACAliF,KAAAkiF,SAAAK,YAAAl6D,IASAo6D,iBAAA,SAAAp6D,GACAroB,KAAA0N,KAAA,IAEA,IAAAg1E,GAAA1iF,KAAA0iF,SAEA,IAAAA,EACA,OAAA9jF,GAAA,EAAqBA,EAAA8jF,EAAA7jF,OAAsBD,IAC3CypB,EAAA0B,UAAA64D,eAAAF,EAAA9jF,GAIAoB,MAAAkiF,UACAliF,KAAAkiF,SAAAO,iBAAAp6D,KAIA7X,EAAA7L,MAAAupD,EAAA+zB,GACAzxE,EAAA7L,MAAAupD,EAAA73C,GACA7F,EAAA7L,MAAAupD,EAAAvmC,EACA,IAAA0X,GAAA6uB,CACAlyD,GAAAC,QAAAojC,G1DopkBMwjD,KACA,SAAU7mF,EAAQC,EAASC,G2D94kBjC,QAAA4mF,GAAApkF,EAAAK,GACA,MAAAL,GAAAK,GAGA,QAAAgkF,GAAArkF,EAAAK,EAAAxB,GACAmB,EAAAK,GAAAxB,EAUA,QAAAylF,GAAAhvC,EAAAC,EAAA/wB,GACA,OAAA+wB,EAAAD,GAAA9wB,EAAA8wB,EAUA,QAAAivC,GAAAjvC,EAAAC,EAAA/wB,GACA,MAAAA,GAAA,GAAA+wB,EAAAD,EAWA,QAAAkvC,GAAAlvC,EAAAC,EAAA/wB,EAAAtC,EAAAuiE,GACA,GAAAvgF,GAAAoxC,EAAAn1C,MAEA,OAAAskF,EACA,OAAAvkF,GAAA,EAAmBA,EAAAgE,EAAShE,IAC5BgiB,EAAAhiB,GAAAokF,EAAAhvC,EAAAp1C,GAAAq1C,EAAAr1C,GAAAskB,OAKA,QAFAkgE,GAAAxgF,GAAAoxC,EAAA,GAAAn1C,OAEAD,EAAA,EAAmBA,EAAAgE,EAAShE,IAC5B,OAAA4d,GAAA,EAAqBA,EAAA4mE,EAAU5mE,IAC/BoE,EAAAhiB,GAAA4d,GAAAwmE,EAAAhvC,EAAAp1C,GAAA4d,GAAAy3B,EAAAr1C,GAAA4d,GAAA0G,GAQA,QAAAmgE,GAAAC,EAAAC,EAAAJ,GACA,GAAAK,GAAAF,EAAAzkF,OACA4kF,EAAAF,EAAA1kF,MAEA,IAAA2kF,IAAAC,EAAA,CAIA,GAFAD,EAAAC,EAIAH,EAAAzkF,OAAA4kF,MAGA,QAAA7kF,GAAA4kF,EAA2B5kF,EAAA6kF,EAAa7kF,IACxC0kF,EAAAj+E,KAAA,IAAA89E,EAAAI,EAAA3kF,GAAA8kF,EAAA5mF,KAAAymF,EAAA3kF,KAQA,OAFAwkF,GAAAE,EAAA,IAAAA,EAAA,GAAAzkF,OAEAD,EAAA,EAAiBA,EAAA0kF,EAAAzkF,OAAiBD,IAClC,OAAAukF,EACAv/D,MAAA0/D,EAAA1kF,MACA0kF,EAAA1kF,GAAA2kF,EAAA3kF,QAGA,QAAA4d,GAAA,EAAqBA,EAAA4mE,EAAU5mE,IAC/BoH,MAAA0/D,EAAA1kF,GAAA4d,MACA8mE,EAAA1kF,GAAA4d,GAAA+mE,EAAA3kF,GAAA4d,IAcA,QAAAmnE,GAAAL,EAAAC,EAAAJ,GACA,GAAAG,IAAAC,EACA,QAGA,IAAA3gF,GAAA0gF,EAAAzkF,MAEA,IAAA+D,IAAA2gF,EAAA1kF,OACA,QAGA,QAAAskF,GACA,OAAAvkF,GAAA,EAAmBA,EAAAgE,EAAShE,IAC5B,GAAA0kF,EAAA1kF,KAAA2kF,EAAA3kF,GACA,aAMA,QAFAwkF,GAAAE,EAAA,GAAAzkF,OAEAD,EAAA,EAAmBA,EAAAgE,EAAShE,IAC5B,OAAA4d,GAAA,EAAqBA,EAAA4mE,EAAU5mE,IAC/B,GAAA8mE,EAAA1kF,GAAA4d,KAAA+mE,EAAA3kF,GAAA4d,GACA,QAMA,UAgBA,QAAAonE,GAAA5vC,EAAAC,EAAAC,EAAAC,EAAAhyB,EAAA6yB,EAAAa,EAAAj1B,EAAAuiE,GACA,GAAAvgF,GAAAoxC,EAAAn1C,MAEA,OAAAskF,EACA,OAAAvkF,GAAA,EAAmBA,EAAAgE,EAAShE,IAC5BgiB,EAAAhiB,GAAAilF,EAAA7vC,EAAAp1C,GAAAq1C,EAAAr1C,GAAAs1C,EAAAt1C,GAAAu1C,EAAAv1C,GAAAujB,EAAA6yB,EAAAa,OAKA,QAFAutC,GAAApvC,EAAA,GAAAn1C,OAEAD,EAAA,EAAmBA,EAAAgE,EAAShE,IAC5B,OAAA4d,GAAA,EAAqBA,EAAA4mE,EAAU5mE,IAC/BoE,EAAAhiB,GAAA4d,GAAAqnE,EAAA7vC,EAAAp1C,GAAA4d,GAAAy3B,EAAAr1C,GAAA4d,GAAA03B,EAAAt1C,GAAA4d,GAAA23B,EAAAv1C,GAAA4d,GAAA2F,EAAA6yB,EAAAa,GAkBA,QAAAguC,GAAA7vC,EAAAC,EAAAC,EAAAC,EAAAhyB,EAAA6yB,EAAAa,GACA,GAAAiuC,GAAA,IAAA5vC,EAAAF,GACA7yB,EAAA,IAAAgzB,EAAAF,EACA,WAAAA,EAAAC,GAAA4vC,EAAA3iE,GAAA00B,IAAA,GAAA5B,EAAAC,GAAA,EAAA4vC,EAAA3iE,GAAA6zB,EAAA8uC,EAAA3hE,EAAA8xB,EAGA,QAAA8vC,GAAAxmF,GACA,GAAAqH,EAAArH,GAAA,CACA,GAAAqF,GAAArF,EAAAsB,MAEA,IAAA+F,EAAArH,EAAA,KAGA,OAFA4nC,MAEAvmC,EAAA,EAAqBA,EAAAgE,EAAShE,IAC9BumC,EAAA9/B,KAAAq+E,EAAA5mF,KAAAS,EAAAqB,IAGA,OAAAumC,GAGA,MAAAu+C,GAAA5mF,KAAAS,GAGA,MAAAA,GAGA,QAAAymF,GAAArmC,GAIA,MAHAA,GAAA,GAAAxxC,KAAAmY,MAAAq5B,EAAA,IACAA,EAAA,GAAAxxC,KAAAmY,MAAAq5B,EAAA,IACAA,EAAA,GAAAxxC,KAAAmY,MAAAq5B,EAAA,IACA,QAAAA,EAAAhpC,KAAA,SAGA,QAAAsvE,GAAAC,GACA,GAAAC,GAAAD,IAAArlF,OAAA,GAAAtB,KACA,OAAAqH,GAAAu/E,KAAA,QAGA,QAAAC,GAAAC,EAAAC,EAAAC,EAAAL,EAAAj3B,EAAAu3B,GACA,GAAAC,GAAAJ,EAAAK,QACAC,EAAAN,EAAAO,QACAC,EAAA,WAAAP,EACAQ,EAAAZ,EAAArlF,MAEA,IAAAimF,EAAA,CAKA,GAMAC,GANAC,EAAAd,EAAA,GAAA3mF,MACA0nF,EAAArgF,EAAAogF,GACAE,GAAA,EACAC,GAAA,EAEAhC,EAAA8B,EAAAhB,EAAAC,GAAA,CAGAA,GAAAxgE,KAAA,SAAA1C,EAAAC,GACA,MAAAD,GAAAi6D,KAAAh6D,EAAAg6D,OAEA8J,EAAAb,EAAAY,EAAA,GAAA7J,IAQA,QANAmK,MAEAC,KACAC,EAAApB,EAAA,GAAA3mF,MACAgoF,GAAA,EAEA3mF,EAAA,EAAiBA,EAAAkmF,EAAclmF,IAAA,CAC/BwmF,EAAA//E,KAAA6+E,EAAAtlF,GAAAq8E,KAAA8J,EAEA,IAAAxnF,GAAA2mF,EAAAtlF,GAAArB,KAQA,IANA0nF,GAAAtB,EAAApmF,EAAA+nF,EAAAnC,KAAA8B,GAAA1nF,IAAA+nF,IACAC,GAAA,GAGAD,EAAA/nF,EAEA,gBAAAA,GAAA,CACA,GAAAioF,GAAA74E,EAAAsoB,MAAA13B,EAEAioF,IACAjoF,EAAAioF,EACAN,GAAA,GAEAC,GAAA,EAIAE,EAAAhgF,KAAA9H,GAGA,GAAAinF,IAAAe,EAAA,CAMA,OAFApB,GAAAkB,EAAAP,EAAA,GAEAlmF,EAAA,EAAiBA,EAAAkmF,EAAA,EAAkBlmF,IACnCqmF,EACA5B,EAAAgC,EAAAzmF,GAAAulF,EAAAhB,IAEAv/D,MAAAyhE,EAAAzmF,KAAAglB,MAAAugE,IAAAgB,GAAAD,IACAG,EAAAzmF,GAAAulF,EAKAc,IAAA5B,EAAAoB,EAAAJ,EAAAoB,QAAAx4B,GAAAk3B,EAAAhB,EAGA,IAEAx1B,GACAxvB,EACA6V,EACAC,EACAC,EACAC,EAPAuxC,EAAA,EACAC,EAAA,CAQA,IAAAT,EACA,GAAAvnC,IAAA,QAGA,IAAAioC,GAAA,SAAAlnF,EAAAwkB,GAIA,GAAA2iE,EAEA,IAAA3iE,EAAA,EACA2iE,EAAA,MACK,IAAA3iE,EAAAyiE,EAAA,CAKL,IAFAh4B,EAAAxhD,KAAAiN,IAAAssE,EAAA,EAAAZ,EAAA,GAEAe,EAAAl4B,EAAyBk4B,GAAA,KACzBT,EAAAS,IAAA3iE,GADqC2iE,KAOrCA,EAAA15E,KAAAiN,IAAAysE,EAAAf,EAAA,OACK,CACL,IAAAe,EAAAH,EAA6BG,EAAAf,KAC7BM,EAAAS,GAAA3iE,GAD+C2iE,KAM/CA,EAAA15E,KAAAiN,IAAAysE,EAAA,EAAAf,EAAA,GAGAY,EAAAG,EACAF,EAAAziE,CACA,IAAAL,GAAAuiE,EAAAS,EAAA,GAAAT,EAAAS,EAEA,QAAAhjE,EAMA,GAHAsb,GAAAjb,EAAAkiE,EAAAS,IAAAhjE,EAGAgiE,EAMA,GALA5wC,EAAAoxC,EAAAQ,GACA7xC,EAAAqxC,EAAA,IAAAQ,MAAA,GACA3xC,EAAAmxC,EAAAQ,EAAAf,EAAA,EAAAA,EAAA,EAAAe,EAAA,GACA1xC,EAAAkxC,EAAAQ,EAAAf,EAAA,EAAAA,EAAA,EAAAe,EAAA,GAEAZ,EACArB,EAAA5vC,EAAAC,EAAAC,EAAAC,EAAAhW,YAAAsmD,EAAA/lF,EAAAuuD,GAAAk2B,OACO,CACP,GAAA5lF,EAEA,IAAA2nF,EACA3nF,EAAAqmF,EAAA5vC,EAAAC,EAAAC,EAAAC,EAAAhW,YAAAwf,EAAA,GACApgD,EAAAymF,EAAArmC,OACS,IAAAwnC,EAET,MAAAlC,GAAAhvC,EAAAC,EAAA/V,EAEA5gC,GAAAsmF,EAAA7vC,EAAAC,EAAAC,EAAAC,EAAAhW,aAGAwmD,EAAAjmF,EAAAuuD,EAAA1vD,OAGA,IAAA0nF,EACA/B,EAAAmC,EAAAQ,GAAAR,EAAAQ,EAAA,GAAA1nD,EAAAsmD,EAAA/lF,EAAAuuD,GAAAk2B,OACO,CACP,GAAA5lF,EAEA,IAAA2nF,EACAhC,EAAAmC,EAAAQ,GAAAR,EAAAQ,EAAA,GAAA1nD,EAAAwf,EAAA,GACApgD,EAAAymF,EAAArmC,OACS,IAAAwnC,EAET,MAAAlC,GAAAoC,EAAAQ,GAAAR,EAAAQ,EAAA,GAAA1nD,EAEA5gC,GAAAylF,EAAAqC,EAAAQ,GAAAR,EAAAQ,EAAA,GAAA1nD,GAGAwmD,EAAAjmF,EAAAuuD,EAAA1vD,KAKAuoF,EAAA,GAAAC,IACArnF,OAAA2lF,EAAAoB,QACAO,KAAAjB,EACAjmD,KAAAulD,EAAA4B,MACAvnB,MAAA2lB,EAAA6B,OACAN,UACAO,UAAA5B,GAOA,OAJAD,IAAA,WAAAA,IACAwB,EAAAxB,UAGAwB,IA7ZA,GAAAC,GAAA7pF,EAAA,MAEAyQ,EAAAzQ,EAAA,MAEAw3C,EAAAx3C,EAAA,MAEA0I,EAAA8uC,EAAA9uC,YAKA8+E,EAAA16E,MAAA7L,UAAA4J,MA8ZAq/E,EAAA,SAAA1nF,EAAAogC,EAAA2lD,EAAAE,GACA3kF,KAAAqmF,WACArmF,KAAAylF,QAAA/mF,EACAsB,KAAAimF,MAAAnnD,IAAA,EACA9+B,KAAA0kF,QAAAD,GAAA3B,EACA9iF,KAAA4kF,QAAAD,GAAA5B,EACA/iF,KAAAsmF,WAAA,EACAtmF,KAAAkmF,OAAA,EACAlmF,KAAAumF,aACAvmF,KAAAwmF,gBACAxmF,KAAAymF,aAGAL,GAAAjpF,WAOAupF,KAAA,SAAAzL,EAEAt8E,GACA,GAAAgoF,GAAA3mF,KAAAqmF,OAEA,QAAAp5B,KAAAtuD,GACA,GAAAA,EAAAwE,eAAA8pD,GAAA,CAIA,IAAA05B,EAAA15B,GAAA,CACA05B,EAAA15B,KAEA,IAAA1vD,GAAAyC,KAAA0kF,QAAA1kF,KAAAylF,QAAAx4B,EAEA,UAAA1vD,EAEA,QAOA,KAAA09E,GACA0L,EAAA15B,GAAA5nD,MACA41E,KAAA,EACA19E,MAAAwmF,EAAAxmF,KAKAopF,EAAA15B,GAAA5nD,MACA41E,OACA19E,MAAAoB,EAAAsuD,KAIA,MAAAjtD,OAQA4mF,OAAA,SAAAnmF,GAGA,MAFAT,MAAAwmF,aAAAnhF,KAAA5E,GAEAT,MAEA6mF,MAAA,WACA,OAAAjoF,GAAA,EAAmBA,EAAAoB,KAAAymF,UAAA5nF,OAA2BD,IAC9CoB,KAAAymF,UAAA7nF,GAAAioF,OAGA7mF,MAAA8mF,SAAA,GAEAC,OAAA,WACA,OAAAnoF,GAAA,EAAmBA,EAAAoB,KAAAymF,UAAA5nF,OAA2BD,IAC9CoB,KAAAymF,UAAA7nF,GAAAmoF,QAGA/mF,MAAA8mF,SAAA,GAEAE,SAAA,WACA,QAAAhnF,KAAA8mF,SAEAG,cAAA,WAEAjnF,KAAAqmF,WAEArmF,KAAAymF,UAAA5nF,OAAA,CAIA,QAHAqoF,GAAAlnF,KAAAumF,UACA3jF,EAAAskF,EAAAroF,OAEAD,EAAA,EAAmBA,EAAAgE,EAAShE,IAC5BsoF,EAAAtoF,GAAA9B,KAAAkD,OAWA2tD,MAAA,SAAA22B,EAAAE,GACA,GAWA2C,GAXAtqF,EAAAmD,KACAonF,EAAA,EAEA7C,EAAA,aACA6C,GAGAvqF,EAAAoqF,gBAMA,QAAAh6B,KAAAjtD,MAAAqmF,QACA,GAAArmF,KAAAqmF,QAAAljF,eAAA8pD,GAAA,CAIA,GAAA64B,GAAA1B,EAAApkF,KAAAskF,EAAAC,EAAAvkF,KAAAqmF,QAAAp5B,KAAAu3B,EAEAsB,KACA9lF,KAAAymF,UAAAphF,KAAAygF,GAEAsB,IAEApnF,KAAA+pB,WACA/pB,KAAA+pB,UAAAs9D,QAAAvB,GAGAqB,EAAArB,GAKA,GAAAqB,EAAA,CACA,GAAAG,GAAAH,EAAAvB,OAEAuB,GAAAvB,QAAA,SAAAlnF,EAAAwkB,GACAokE,EAAA5oF,EAAAwkB,EAEA,QAAAtkB,GAAA,EAAuBA,EAAA/B,EAAA2pF,aAAA3nF,OAA8BD,IACrD/B,EAAA2pF,aAAA5nF,GAAAF,EAAAwkB,IAYA,MAJAkkE,IACApnF,KAAAinF,gBAGAjnF,MAOAm7C,KAAA,SAAAosC,GAIA,OAHAC,GAAAxnF,KAAAymF,UACA18D,EAAA/pB,KAAA+pB,UAEAnrB,EAAA,EAAmBA,EAAA4oF,EAAA3oF,OAAqBD,IAAA,CACxC,GAAAknF,GAAA0B,EAAA5oF,EAEA2oF,IAEAzB,EAAAF,QAAA5lF,KAAAylF,QAAA,GAGA17D,KAAA09D,WAAA3B,GAGA0B,EAAA3oF,OAAA,GAQA6/D,MAAA,SAAAuc,GAEA,MADAj7E,MAAAkmF,OAAAjL,EACAj7E,MAQA0nF,KAAA,SAAA3iF,GAKA,MAJAA,IACA/E,KAAAumF,UAAAlhF,KAAAN,GAGA/E,MAMA2nF,SAAA,WACA,MAAA3nF,MAAAymF,WAGA,IAAApnD,GAAA+mD,CACApqF,GAAAC,QAAAojC,G3Di6kBMuoD,KACA,SAAU5rF,EAAQC,G4DrimBxB,GAAAojC,GAAA,oBAAA9H,iBAAAswD,uBAAAtwD,OAAAswD,sBAAAnnF,KAAA62B,SACAA,OAAAuwD,yBAAAvwD,OAAAuwD,wBAAApnF,KAAA62B,gBAAAwwD,0BAAAxwD,OAAAywD,8BAAA,SAAApiF,GACA05D,WAAA15D,EAAA,IAGA5J,GAAAC,QAAAojC,G5D2imBM4oD,KACA,SAAUjsF,EAAQC,G6D/imBxB,QAAAisF,GAAAzwB,GAOA,MANAA,IAAA0wB,EAEA1wB,EAAA,IACAA,GAAA0wB,GAGA1wB,EATA,GAAA0wB,GAAA,EAAAh8E,KAAAyF,EAYA3V,GAAAisF,mB7DujmBME,KACA,SAAUpsF,EAAQC,G8DpkmBxB,QAAAosF,GAAA7xC,EAAAC,EAAAhrC,EAAAG,EAAAlB,EAAAC,GACA,GAAAA,EAAA8rC,GAAA9rC,EAAAiB,GAAAjB,EAAA8rC,GAAA9rC,EAAAiB,EACA,QAIA,IAAAA,IAAA6qC,EACA,QAGA,IAAA6xC,GAAA18E,EAAA6qC,EAAA,KACAt0B,GAAAxX,EAAA8rC,IAAA7qC,EAAA6qC,EAOA,OALA,KAAAt0B,GAAA,IAAAA,IACAmmE,EAAA18E,EAAA6qC,EAAA,QAGAt0B,GAAA1W,EAAA+qC,KACA9rC,EAAA49E,EAAA,EAGAtsF,EAAAC,QAAAosF,G9D0kmBME,KACA,SAAUvsF,EAAQC,G+DzlmBxB,GAAAusF,GAAA,WAIAxoF,KAAAyoF,KAAA,KAKAzoF,KAAA0oF,KAAA,KACA1oF,KAAAywD,KAAA,GAGAk4B,EAAAH,EAAArrF,SAOAwrF,GAAAC,OAAA,SAAA1hF,GACA,GAAA2hF,GAAA,GAAAC,GAAA5hF,EAEA,OADAlH,MAAA+oF,YAAAF,GACAA,GAQAF,EAAAI,YAAA,SAAAF,GACA7oF,KAAAyoF,MAGAzoF,KAAA0oF,KAAA7xC,KAAAgyC,EACAA,EAAAjyC,KAAA52C,KAAA0oF,KACAG,EAAAhyC,KAAA,KACA72C,KAAA0oF,KAAAG,GALA7oF,KAAAyoF,KAAAzoF,KAAA0oF,KAAAG,EAQA7oF,KAAAywD,QAQAk4B,EAAAl6D,OAAA,SAAAo6D,GACA,GAAAjyC,GAAAiyC,EAAAjyC,KACAC,EAAAgyC,EAAAhyC,IAEAD,GACAA,EAAAC,OAGA72C,KAAAyoF,KAAA5xC,EAGAA,EACAA,EAAAD,OAGA52C,KAAA0oF,KAAA9xC,EAGAiyC,EAAAhyC,KAAAgyC,EAAAjyC,KAAA,KACA52C,KAAAywD,QAOAk4B,EAAA/lF,IAAA,WACA,MAAA5C,MAAAywD,MAOAk4B,EAAAztD,MAAA,WACAl7B,KAAAyoF,KAAAzoF,KAAA0oF,KAAA,KACA1oF,KAAAywD,KAAA,EAQA,IAAAq4B,GAAA,SAAA5hF,GAIAlH,KAAAzC,MAAA2J,EAKAlH,KAAA62C,KAKA72C,KAAA42C,MASA2I,EAAA,SAAAypC,GACAhpF,KAAAipF,MAAA,GAAAT,GACAxoF,KAAAkpF,QACAlpF,KAAAmpF,SAAAH,GAAA,GACAhpF,KAAAopF,kBAAA,MAGAC,EAAA9pC,EAAApiD,SAOAksF,GAAApsC,IAAA,SAAAl+C,EAAAxB,GACA,GAAAopB,GAAA3mB,KAAAipF,MACA9jF,EAAAnF,KAAAkpF,KACAI,EAAA,IAEA,UAAAnkF,EAAApG,GAAA,CACA,GAAA6D,GAAA+jB,EAAA/jB,MAEAimF,EAAA7oF,KAAAopF,iBAEA,IAAAxmF,GAAA5C,KAAAmpF,UAAAvmF,EAAA,GAEA,GAAA2mF,GAAA5iE,EAAA8hE,IACA9hE,GAAA8H,OAAA86D,SACApkF,GAAAokF,EAAAxqF,KACAuqF,EAAAC,EAAAhsF,MACAyC,KAAAopF,kBAAAG,EAGAV,EACAA,EAAAtrF,QAEAsrF,EAAA,GAAAC,GAAAvrF,GAGAsrF,EAAA9pF,MACA4nB,EAAAoiE,YAAAF,GACA1jF,EAAApG,GAAA8pF,EAGA,MAAAS,IAQAD,EAAAngF,IAAA,SAAAnK,GACA,GAAA8pF,GAAA7oF,KAAAkpF,KAAAnqF,GACA4nB,EAAA3mB,KAAAipF,KAEA,UAAAJ,EAOA,MALAA,KAAAliE,EAAA+hE,OACA/hE,EAAA8H,OAAAo6D,GACAliE,EAAAoiE,YAAAF,IAGAA,EAAAtrF,OAQA8rF,EAAAnuD,MAAA,WACAl7B,KAAAipF,MAAA/tD,QAEAl7B,KAAAkpF,QAGA,IAAA7pD,GAAAkgB,CACAvjD,GAAAC,QAAAojC,G/DsmmBMmqD,KACA,SAAUxtF,EAAQC,EAASC,GgEzxmBjC,QAAAutF,GAAA/xE,EAAA0B,EAAAhN,GACA,OAAAsL,EAAA7Y,OAAA,CAIA,GAKAD,GALA49C,EAAA9kC,EAAA,GACA6gB,EAAAikB,EAAA,GACA/jB,EAAA+jB,EAAA,GACAhkB,EAAAgkB,EAAA,GACA9jB,EAAA8jB,EAAA,EAGA,KAAA59C,EAAA,EAAaA,EAAA8Y,EAAA7Y,OAAmBD,IAChC49C,EAAA9kC,EAAA9Y,GACA25B,EAAA1gB,EAAA0gB,EAAAikB,EAAA,IACA/jB,EAAA7gB,EAAA6gB,EAAA+jB,EAAA,IACAhkB,EAAA3gB,EAAA2gB,EAAAgkB,EAAA,IACA9jB,EAAA9gB,EAAA8gB,EAAA8jB,EAAA,GAGApjC,GAAA,GAAAmf,EACAnf,EAAA,GAAAof,EACApsB,EAAA,GAAAqsB,EACArsB,EAAA,GAAAssB,GAaA,QAAA06B,GAAA5c,EAAAC,EAAAhrC,EAAAG,EAAAwN,EAAAhN,GACAgN,EAAA,GAAAvB,EAAA2+B,EAAA/qC,GACA2N,EAAA,GAAAvB,EAAA4+B,EAAA7qC,GACAQ,EAAA,GAAAwL,EAAA4+B,EAAA/qC,GACAW,EAAA,GAAAwL,EAAA6+B,EAAA7qC,GAoBA,QAAAynD,GAAA7c,EAAAC,EAAAhrC,EAAAG,EAAAF,EAAAG,EAAA6qC,EAAAC,EAAAv9B,EAAAhN,GACA,GAEAxN,GAFAk3C,EAAAwZ,EAAAxZ,aACA/B,EAAAub,EAAAvb,QAEAa,EAAAkB,EAAAU,EAAA/qC,EAAAC,EAAAgrC,EAAAgzC,EAMA,KALAtwE,EAAA,GAAA6N,IACA7N,EAAA,GAAA6N,IACA7a,EAAA,IAAA6a,IACA7a,EAAA,IAAA6a,IAEAroB,EAAA,EAAaA,EAAAg2C,EAAOh2C,IAAA,CACpB,GAAA8L,GAAAqpC,EAAAyC,EAAA/qC,EAAAC,EAAAgrC,EAAAgzC,EAAA9qF,GACAwa,GAAA,GAAAvB,EAAAnN,EAAA0O,EAAA,IACAhN,EAAA,GAAAwL,EAAAlN,EAAA0B,EAAA,IAKA,IAFAwoC,EAAAkB,EAAAW,EAAA7qC,EAAAC,EAAA8qC,EAAAgzC,GAEA/qF,EAAA,EAAaA,EAAAg2C,EAAOh2C,IAAA,CACpB,GAAA+L,GAAAopC,EAAA0C,EAAA7qC,EAAAC,EAAA8qC,EAAAgzC,EAAA/qF,GACAwa,GAAA,GAAAvB,EAAAlN,EAAAyO,EAAA,IACAhN,EAAA,GAAAwL,EAAAjN,EAAAyB,EAAA,IAGAgN,EAAA,GAAAvB,EAAA2+B,EAAAp9B,EAAA,IACAhN,EAAA,GAAAwL,EAAA4+B,EAAApqC,EAAA,IACAgN,EAAA,GAAAvB,EAAA6+B,EAAAt9B,EAAA,IACAhN,EAAA,GAAAwL,EAAA8+B,EAAAtqC,EAAA,IACAgN,EAAA,GAAAvB,EAAA4+B,EAAAr9B,EAAA,IACAhN,EAAA,GAAAwL,EAAA6+B,EAAArqC,EAAA,IACAgN,EAAA,GAAAvB,EAAA8+B,EAAAv9B,EAAA,IACAhN,EAAA,GAAAwL,EAAA++B,EAAAvqC,EAAA,IAgBA,QAAAknD,GAAA9c,EAAAC,EAAAhrC,EAAAG,EAAAF,EAAAG,EAAAuN,EAAAhN,GACA,GAAAqrC,GAAA6X,EAAA7X,kBACAH,EAAAgY,EAAAhY,YAEAsyC,EAAAhyE,EAAAC,EAAA4/B,EAAAjB,EAAA/qC,EAAAC,GAAA,MACAm+E,EAAAjyE,EAAAC,EAAA4/B,EAAAhB,EAAA7qC,EAAAC,GAAA,MACAnB,EAAA4sC,EAAAd,EAAA/qC,EAAAC,EAAAk+E,GACAj/E,EAAA2sC,EAAAb,EAAA7qC,EAAAC,EAAAg+E,EACAzwE,GAAA,GAAAvB,EAAA2+B,EAAA9qC,EAAAhB,GACA0O,EAAA,GAAAvB,EAAA4+B,EAAA5qC,EAAAlB,GACAyB,EAAA,GAAAwL,EAAA4+B,EAAA9qC,EAAAhB,GACA0B,EAAA,GAAAwL,EAAA6+B,EAAA5qC,EAAAlB,GAkBA,QAAA8oD,GAAA/oD,EAAAC,EAAA4oD,EAAAC,EAAA7B,EAAAC,EAAAC,EAAAz4C,EAAAhN,GACA,GAAA09E,GAAAzpD,EAAAjnB,IACA2wE,EAAA1pD,EAAAj0B,IACA4yD,EAAA7yD,KAAAuK,IAAAi7C,EAAAC,EAEA,IAAAoN,EAAAmpB,EAAA,MAAAnpB,EAAA,KAMA,MAJA5lD,GAAA,GAAA1O,EAAA6oD,EACAn6C,EAAA,GAAAzO,EAAA6oD,EACApnD,EAAA,GAAA1B,EAAA6oD,OACAnnD,EAAA,GAAAzB,EAAA6oD,EA6BA,IAzBA7F,EAAA,GAAAkC,EAAA8B,GAAA4B,EAAA7oD,EACAijD,EAAA,GAAAmC,EAAA6B,GAAA6B,EAAA7oD,EACAijD,EAAA,GAAAiC,EAAA+B,GAAA2B,EAAA7oD,EACAkjD,EAAA,GAAAkC,EAAA8B,GAAA4B,EAAA7oD,EACAm/E,EAAA1wE,EAAAu0C,EAAAC,GACAm8B,EAAA39E,EAAAuhD,EAAAC,GAEA+D,GAAAw2B,EAEAx2B,EAAA,IACAA,GAAAw2B,GAGAv2B,GAAAu2B,EAEAv2B,EAAA,IACAA,GAAAu2B,GAGAx2B,EAAAC,IAAAC,EACAD,GAAAu2B,EACGx2B,EAAAC,GAAAC,IACHF,GAAAw2B,GAGAt2B,EAAA,CACA,GAAAlc,GAAAic,CACAA,GAAAD,EACAA,EAAAhc,EAKA,OAAA8hB,GAAA,EAAqBA,EAAA7F,EAAkB6F,GAAAtrD,KAAAyF,GAAA,EACvC6lD,EAAA9F,IACAq4B,EAAA,GAAAn6B,EAAA4H,GAAAlE,EAAA7oD,EACAs/E,EAAA,GAAAl6B,EAAA2H,GAAAjE,EAAA7oD,EACAm/E,EAAA1wE,EAAA4wE,EAAA5wE,GACA2wE,EAAA39E,EAAA49E,EAAA59E,IAnNA,GAAAi0B,GAAAnkC,EAAA,MAEAozD,EAAApzD,EAAA,MAKA2b,EAAA1L,KAAAiN,IACAxB,EAAAzL,KAAAC,IACA0jD,EAAA3jD,KAAAg/B,IACA0kB,EAAA1jD,KAAA++B,IACAi9C,EAAA,EAAAh8E,KAAAyF,GACA+7C,EAAAttB,EAAAhjC,SACAuwD,EAAAvtB,EAAAhjC,SACA2sF,EAAA3pD,EAAAhjC,SAoDAqsF,KACAC,IAqJA1tF,GAAAwtF,aACAxtF,EAAAm3D,WACAn3D,EAAAo3D,YACAp3D,EAAAq3D,gBACAr3D,EAAAw3D,WhEszmBMw2B,KACA,SAAUjuF,EAAQC,GiE5gnBxB,QAAAojC,KACA,MAAA6qD,KAHA,GAAAA,GAAA,IAMAluF,GAAAC,QAAAojC,GjEyhnBM8qD,KACA,SAAUnuF,EAAQC,EAASC,GkErinBjC,GAAAk5B,GAAAl5B,EAAA,MAEA8xD,EAAA54B,EAAA44B,UAEAptD,EAAA,YAEA,KAAAotD,EACAptD,EAAA,WACA,OAAAmjC,KAAAh+B,WACA,SAAAuB,OAAAvB,UAAAg+B,KAGCiqB,EAAA,IACDptD,EAAA,WACA,OAAAmjC,KAAAh+B,WACApF,QAAAC,IAAAmF,UAAAg+B,KAKA,IAAA1E,GAAAz+B,CACA5E,GAAAC,QAAAojC,GlE2inBM+qD,KACA,SAAUpuF,EAAQC,EAASC,GmEnjnBjC,QAAAmuF,GAAA9gF,GACAiyB,EAAA1+B,KAAAkD,KAAAuJ,GAfA,GAAAiyB,GAAAt/B,EAAA,MAEAid,EAAAjd,EAAA,MAEAsU,EAAAtU,EAAA,MAEA22C,EAAA32C,EAAA,KAYAmuF,GAAAltF,WACAG,YAAA+sF,EACArpF,KAAA,QACAg7B,MAAA,SAAAC,EAAAC,GACA,GAAAj7B,GAAAjB,KAAAiB,MACAU,EAAAV,EAAAwJ,KAEAxJ,GAAAP,KAAAu7B,EAAAj8B,KAAAk8B,EACA,IAAAzxB,GAAAzK,KAAAsqF,OAAAz3C,EAAAwxB,oBAAA1iE,EAAA3B,KAAAsqF,OAAAtqF,UAAA4K,OAEA,IAAAH,GAAAooC,EAAAE,aAAAtoC,GAAA,CAWA,GAAAC,GAAAzJ,EAAAyJ,GAAA,EACAC,EAAA1J,EAAA0J,GAAA,EACAnJ,EAAAP,EAAAO,MACAC,EAAAR,EAAAQ,OACAsJ,EAAAN,EAAAjJ,MAAAiJ,EAAAhJ,MAeA,IAbA,MAAAD,GAAA,MAAAC,EAEAD,EAAAC,EAAAsJ,EACK,MAAAtJ,GAAA,MAAAD,EACLC,EAAAD,EAAAuJ,EACK,MAAAvJ,GAAA,MAAAC,IACLD,EAAAiJ,EAAAjJ,MACAC,EAAAgJ,EAAAhJ,QAIAzB,KAAAy8B,aAAAR,GAEAh7B,EAAAspF,QAAAtpF,EAAAupF,QAAA,CACA,GAAAzpD,GAAA9/B,EAAA8/B,IAAA,EACAC,EAAA//B,EAAA+/B,IAAA,CACA/E,GAAAwuD,UAAAhgF,EAAAs2B,EAAAC,EAAA//B,EAAAspF,OAAAtpF,EAAAupF,QAAA9/E,EAAAC,EAAAnJ,EAAAC,OACK,IAAAR,EAAA8/B,IAAA9/B,EAAA+/B,GAAA,CACL,GAAAD,GAAA9/B,EAAA8/B,GACAC,EAAA//B,EAAA+/B,GACAupD,EAAA/oF,EAAAu/B,EACAypD,EAAA/oF,EAAAu/B,CACA/E,GAAAwuD,UAAAhgF,EAAAs2B,EAAAC,EAAAupD,EAAAC,EAAA9/E,EAAAC,EAAAnJ,EAAAC,OAEAw6B,GAAAwuD,UAAAhgF,EAAAC,EAAAC,EAAAnJ,EAAAC,EAGAzB,MAAA09B,iBAAAzB,GAEA,MAAAh7B,EAAA6P,MACA9Q,KAAA29B,aAAA1B,EAAAj8B,KAAAmK,qBAGAA,gBAAA,WACA,GAAAlJ,GAAAjB,KAAAiB,KAMA,OAJAjB,MAAA+9B,QACA/9B,KAAA+9B,MAAA,GAAA5kB,GAAAlY,EAAAyJ,GAAA,EAAAzJ,EAAA0J,GAAA,EAAA1J,EAAAO,OAAA,EAAAP,EAAAQ,QAAA,IAGAzB,KAAA+9B,QAGAvtB,EAAAnM,SAAAgmF,EAAA7uD,EACA,IAAA6D,GAAAgrD,CACAruF,GAAAC,QAAAojC,GnEuknBMqrD,KACA,SAAU1uF,EAAQC,GoElqnBxB,GAAA0/B,GAAA,SAAAlxB,EAAAkgF,GAGA3qF,KAAAyK,QACAzK,KAAA2qF,SAEA3qF,KAAAgB,KAAA,UAGA26B,GAAAx+B,UAAAy+B,iBAAA,SAAAK,GACA,MAAAA,GAAA2uD,cAAA5qF,KAAAyK,MAAAzK,KAAA2qF,QAAA,UAGA,IAAAtrD,GAAA1D,CACA3/B,GAAAC,QAAAojC,GpEwqnBMwrD,KACA,SAAU7uF,EAAQC,GqE/qnBxB,QAAA6uF,GAAA7uD,EAAA7/B,EAAA0N,GACA,GAAAY,GAAA,MAAAtO,EAAAsO,EAAA,EAAAtO,EAAAsO,EACAgB,EAAA,MAAAtP,EAAAsP,GAAA,EAAAtP,EAAAsP,GACAf,EAAA,MAAAvO,EAAAuO,EAAA,EAAAvO,EAAAuO,EACAkB,EAAA,MAAAzP,EAAAyP,GAAA,EAAAzP,EAAAyP,EAUA,OARAzP,GAAAmjC,SACA70B,IAAAZ,EAAAtI,MAAAsI,EAAAY,EACAgB,IAAA5B,EAAAtI,MAAAsI,EAAAY,EACAC,IAAAb,EAAArI,OAAAqI,EAAAa,EACAkB,IAAA/B,EAAArI,OAAAqI,EAAAa,GAGAsxB,EAAA6uD,qBAAApgF,EAAAC,EAAAe,EAAAG,GAIA,QAAAk/E,GAAA9uD,EAAA7/B,EAAA0N,GACA,GAAAtI,GAAAsI,EAAAtI,MACAC,EAAAqI,EAAArI,OACA2X,EAAAjN,KAAAiN,IAAA5X,EAAAC,GACAiJ,EAAA,MAAAtO,EAAAsO,EAAA,GAAAtO,EAAAsO,EACAC,EAAA,MAAAvO,EAAAuO,EAAA,GAAAvO,EAAAuO,EACA+xC,EAAA,MAAAtgD,EAAAsgD,EAAA,GAAAtgD,EAAAsgD,CASA,OAPAtgD,GAAAmjC,SACA70B,IAAAlJ,EAAAsI,EAAAY,EACAC,IAAAlJ,EAAAqI,EAAAa,EACA+xC,GAAAtjC,GAGA6iB,EAAA8uD,qBAAArgF,EAAAC,EAAA,EAAAD,EAAAC,EAAA+xC,GAvCA,GAAAsuC,KAAA,0IAGA9nB,EAAA,SAAA35D,EAAA6H,GACApR,KAAA8N,WAAAvE,GAAA,GACAvJ,KAAAoR,OAsCA8xD,GAAA/lE,WACAG,YAAA4lE,EAKA9xD,KAAA,KAKAlE,KAAA,OAKAD,OAAA,KAKAo5D,QAAA,EAKArpC,SAAA,KAKAC,eAAA,EAKAktC,WAAA,EAKAE,cAAA,EAKAC,cAAA,EAKA/+D,UAAA,EAMA4M,eAAA,EAOArH,KAAA,KASA65B,KAAA,KAOA8I,SAAA,KAMArgC,UAAA,KAMAtR,WAAA,KAOAD,SAAA,KAMAwR,WAAA,KAMAM,QAAA,KAKA1F,SAAA,OAKA6E,WAAA,KAKAW,UAAA,KAMAC,WAAA,KASAV,gBAAA,EAKAQ,eAAA,KASA/B,aAAA,SAMAq4D,SAAA,KAMAp4D,WAAA,KAKA4B,UAAA,KAKAC,kBAAA,KAKAzB,aAAA,EAKAsC,gBAAA,cAKAC,eAAA,EAKAC,kBAAA,EAKAC,kBAAA,EAKAP,mBAAA,cAKAC,kBAAA,EAKAC,qBAAA,EAKAC,qBAAA,EAOA82E,eAAA,EAMAp5E,aAAA,EAUAq5E,WAAA,KAKAr3E,oBAAA,KAKAd,gBAAA,KAKAE,gBAAA,EAKAc,iBAAA,EAMAD,YAAA,KAMAtB,KAAA,KAMAi9B,SAAA,KAMA07C,MAAA,KAKAzqF,KAAA,SAAAu7B,EAAAlvB,EAAAmvB,GAKA,OAJAj7B,GAAAjB,KACAorF,EAAAlvD,KAAAj7B,MACAoqF,GAAAD,EAEAxsF,EAAA,EAAmBA,EAAAosF,EAAAnsF,OAA+BD,IAAA,CAClD,GAAA8F,GAAAsmF,EAAApsF,GACA2zC,EAAA7tC,EAAA,IAEA2mF,GAAApqF,EAAAsxC,KAAA64C,EAAA74C,MAEAtW,EAAAsW,GAAAtxC,EAAAsxC,IAAA7tC,EAAA,IAoBA,IAhBA2mF,GAAApqF,EAAAiM,OAAAk+E,EAAAl+E,QACA+uB,EAAAa,UAAA77B,EAAAiM,OAGAm+E,GAAApqF,EAAAgM,SAAAm+E,EAAAn+E,UACAgvB,EAAAc,YAAA97B,EAAAgM,SAGAo+E,GAAApqF,EAAAolE,UAAA+kB,EAAA/kB,WACApqC,EAAAqvD,YAAA,MAAArqF,EAAAolE,QAAA,EAAAplE,EAAAolE,UAGAglB,GAAApqF,EAAAkqF,QAAAC,EAAAD,SACAlvD,EAAAsvD,yBAAAtqF,EAAAkqF,OAAA,eAGAnrF,KAAAm8B,YAAA,CACA,GAAA5wB,GAAAtK,EAAAsK,SACA0wB,GAAA1wB,aAAAvL,KAAAmY,eAAApL,KAAAsxB,aAAAtxB,EAAAsxB,eAAA,KAGAjC,QAAA,WACA,GAAAlvB,GAAAlN,KAAAkN,IACA,cAAAA,GAAA,SAAAA,GAEAivB,UAAA,WACA,GAAAlvB,GAAAjN,KAAAiN,MACA,cAAAA,GAAA,SAAAA,GAAAjN,KAAAuL,UAAA,GAUAuC,WAAA,SAAA09E,EAAAnoF,GACA,GAAAmoF,EACA,OAAAppF,KAAAopF,IACAA,EAAAroF,eAAAf,KAAA,IAAAiB,KAAA,IAAAA,EAAArD,KAAAmD,eAAAf,GAAA,MAAAopF,EAAAppF,MACApC,KAAAoC,GAAAopF,EAAAppF,KAWAsF,IAAA,SAAAtL,EAAAmB,GACA,iBAAAnB,GACA4D,KAAA5D,GAAAmB,EAEAyC,KAAA8N,WAAA1R,GAAA,IAQAmG,MAAA,WACA,GAAAkpF,GAAA,GAAAzrF,MAAA1C,WAEA,OADAmuF,GAAA39E,WAAA9N,MAAA,GACAyrF,GAEA7uD,YAAA,SAAAX,EAAA7/B,EAAA0N,GAKA,OAJA0d,GAAA,WAAAprB,EAAA4E,KAAA+pF,EAAAD,EACAY,EAAAlkE,EAAAyU,EAAA7/B,EAAA0N,GACAiwB,EAAA39B,EAAA29B,WAEAn7B,EAAA,EAAmBA,EAAAm7B,EAAAl7B,OAAuBD,IAC1C8sF,EAAA1nB,aAAAjqC,EAAAn7B,GAAAuzD,OAAAp4B,EAAAn7B,GAAA+N,MAGA,OAAA++E,IAKA,QAFAC,GAAAzoB,EAAA/lE,UAEAyB,EAAA,EAAeA,EAAAosF,EAAAnsF,OAA+BD,IAAA,CAC9C,GAAA8F,GAAAsmF,EAAApsF,EAEA8F,GAAA,IAAAinF,KACAA,EAAAjnF,EAAA,IAAAA,EAAA,IAKAw+D,EAAAtmC,YAAA+uD,EAAA/uD,WACA,IAAAyC,GAAA6jC,CACAlnE,GAAAC,QAAAojC,GrE6rnBMusD,KACA,SAAU5vF,EAAQC,EAASC,GsE1moBjC,QAAAmjC,GAAAwsD,GAEA,MAAA97D,GAAA2K,QAAAoF,IAAA/P,EAAA2K,QAAAW,SAAA,cACA,GAEAywD,GAFAC,EAAA/rF,KAAAmjE,YACAliE,EAAAjB,KAAAiB,KAGA,IAAA8qF,EACA,OAAAntF,GAAA,EAAqBA,EAAAmtF,EAAAltF,OAAsBD,IAAA,CAC3C,GAAAsjF,GAAA6J,EAAAntF,GACA0M,EAAA42E,KAAA52E,MACAtK,EAAAkhF,KAAAlhF,IAEA,IAAAsK,IAAA,WAAAtK,GAAAsK,EAAAqmD,aAAArmD,EAAAsmD,UAAA,SAAA5wD,KAAAsK,EAAA9J,QAAA8J,EAAA7J,SAAA,CACA,OAAA+a,GAAA,EAAyBA,EAAAwvE,EAAAntF,OAAuB2d,IAGhDwvE,EAAAxvE,GAAA,GAAAvb,EAAA+qF,EAAAxvE,GAAA,IACAvb,EAAA+qF,EAAAxvE,GAAA,IAAAwvE,EAAAxvE,GAAA,EAGAsvE,IAAA,CACA,QAOA,GAFAD,EAAA7lF,MAAAhG,KAAA+F,WAEA+lF,EACA,OAAAtvE,GAAA,EAAqBA,EAAAwvE,EAAAntF,OAAuB2d,IAC5Cvb,EAAA+qF,EAAAxvE,GAAA,IAAAwvE,EAAAxvE,GAAA,IAGGqvE,EApDH,GAAA97D,GAAA7zB,EAAA,MAgBA8vF,IAAA,+EAuCAhwF,GAAAC,QAAAojC,GtEkooBM4sD,KACA,SAAUjwF,EAAQC,EAASC,GuEtroBjC,QAAAshC,GAAAvB,EAAA3wB,EAAA0mD,GACA,GAAAt6C,GAAApM,EAAAoM,OACAw0E,EAAA5gF,EAAA4gF,MAEA,IAAAx0E,KAAA7Y,QAAA,GACA,GAAAqtF,GAAA,WAAAA,EAAA,CACA,GAAAC,GAAAC,EAAA10E,EAAAw0E,EAAAl6B,EAAA1mD,EAAA+gF,iBACApwD,GAAA60B,OAAAp5C,EAAA,MAAAA,EAAA,MAGA,QAFA9U,GAAA8U,EAAA7Y,OAEAD,EAAA,EAAqBA,GAAAozD,EAAApvD,IAAA,GAAiChE,IAAA,CACtD,GAAA0tF,GAAAH,EAAA,EAAAvtF,GACA2tF,EAAAJ,EAAA,EAAAvtF,EAAA,GACA49C,EAAA9kC,GAAA9Y,EAAA,GAAAgE,EACAq5B,GAAAm1B,cAAAk7B,EAAA,GAAAA,EAAA,GAAAC,EAAA,GAAAA,EAAA,GAAA/vC,EAAA,GAAAA,EAAA,SAEK,CACL,WAAA0vC,IACAx0E,EAAA80E,EAAA90E,EAAAs6C,IAGA/1B,EAAA60B,OAAAp5C,EAAA,MAAAA,EAAA,MAEA,QAAA9Y,GAAA,EAAAywC,EAAA33B,EAAA7Y,OAAwCD,EAAAywC,EAAOzwC,IAC/Cq9B,EAAA+0B,OAAAt5C,EAAA9Y,GAAA,GAAA8Y,EAAA9Y,GAAA,IAIAozD,GAAA/1B,EAAA+1B,aAhCA,GAAAw6B,GAAAtwF,EAAA,MAEAkwF,EAAAlwF,EAAA,KAkCAD,GAAAuhC,avEgsoBMivD,KACA,SAAUzwF,EAAQC,GwEruoBxB,QAAAuhC,GAAAvB,EAAA3wB,GACA,GAKAohF,GACAC,EACAC,EACAC,EARAniF,EAAAY,EAAAZ,EACAC,EAAAW,EAAAX,EACAnJ,EAAA8J,EAAA9J,MACAC,EAAA6J,EAAA7J,OACAi7C,EAAApxC,EAAAoxC,CAMAl7C,GAAA,IACAkJ,GAAAlJ,EACAA,MAGAC,EAAA,IACAkJ,GAAAlJ,EACAA,MAGA,iBAAAi7C,GACAgwC,EAAAC,EAAAC,EAAAC,EAAAnwC,EACGA,YAAA1zC,OACH,IAAA0zC,EAAA79C,OACA6tF,EAAAC,EAAAC,EAAAC,EAAAnwC,EAAA,GACK,IAAAA,EAAA79C,QACL6tF,EAAAE,EAAAlwC,EAAA,GACAiwC,EAAAE,EAAAnwC,EAAA,IACK,IAAAA,EAAA79C,QACL6tF,EAAAhwC,EAAA,GACAiwC,EAAAE,EAAAnwC,EAAA,GACAkwC,EAAAlwC,EAAA,KAEAgwC,EAAAhwC,EAAA,GACAiwC,EAAAjwC,EAAA,GACAkwC,EAAAlwC,EAAA,GACAmwC,EAAAnwC,EAAA,IAGAgwC,EAAAC,EAAAC,EAAAC,EAAA,CAGA,IAAAC,EAEAJ,GAAAC,EAAAnrF,IACAsrF,EAAAJ,EAAAC,EACAD,GAAAlrF,EAAAsrF,EACAH,GAAAnrF,EAAAsrF,GAGAF,EAAAC,EAAArrF,IACAsrF,EAAAF,EAAAC,EACAD,GAAAprF,EAAAsrF,EACAD,GAAArrF,EAAAsrF,GAGAH,EAAAC,EAAAnrF,IACAqrF,EAAAH,EAAAC,EACAD,GAAAlrF,EAAAqrF,EACAF,GAAAnrF,EAAAqrF,GAGAJ,EAAAG,EAAAprF,IACAqrF,EAAAJ,EAAAG,EACAH,GAAAjrF,EAAAqrF,EACAD,GAAAprF,EAAAqrF,GAGA7wD,EAAA60B,OAAApmD,EAAAgiF,EAAA/hF,GACAsxB,EAAA+0B,OAAAtmD,EAAAlJ,EAAAmrF,EAAAhiF,GACA,IAAAgiF,GAAA1wD,EAAAq1B,iBAAA5mD,EAAAlJ,EAAAmJ,EAAAD,EAAAlJ,EAAAmJ,EAAAgiF,GACA1wD,EAAA+0B,OAAAtmD,EAAAlJ,EAAAmJ,EAAAlJ,EAAAmrF,GACA,IAAAA,GAAA3wD,EAAAq1B,iBAAA5mD,EAAAlJ,EAAAmJ,EAAAlJ,EAAAiJ,EAAAlJ,EAAAorF,EAAAjiF,EAAAlJ,GACAw6B,EAAA+0B,OAAAtmD,EAAAmiF,EAAAliF,EAAAlJ,GACA,IAAAorF,GAAA5wD,EAAAq1B,iBAAA5mD,EAAAC,EAAAlJ,EAAAiJ,EAAAC,EAAAlJ,EAAAorF,GACA5wD,EAAA+0B,OAAAtmD,EAAAC,EAAA+hF,GACA,IAAAA,GAAAzwD,EAAAq1B,iBAAA5mD,EAAAC,EAAAD,EAAAgiF,EAAA/hF,GAGA1O,EAAAuhC,axE2uoBMuvD,KACA,SAAU/wF,EAAQC,EAASC,GyE7xoBjC,QAAA8wF,GAAA/rF,GAGA,MAFAgsF,GAAAhsF,GACA6D,EAAA7D,EAAAuR,KAAAy6E,GACAhsF,EAGA,QAAAgsF,GAAAhsF,GACA,GAAAA,EAAA,CACAA,EAAA0pC,KAAA/F,EAAA4O,SAAAvyC,EACA,IAAAqS,GAAArS,EAAAqS,SACA,YAAAA,MAAA,UACArS,EAAAqS,UAAA,MAAAA,GAAA45E,EAAA55E,KAAA,MAEA,IAAAC,GAAAtS,EAAAsS,mBAAAtS,EAAAksF,YACA,YAAA55E,MAAA,UACAtS,EAAAsS,kBAAA,MAAAA,GAAA65E,EAAA75E,KAAA,KACAtS,GAAA6S,cAGA7S,EAAA6S,YAAA7M,EAAAhG,EAAA6S,eAaA,QAAAu5E,GAAA/oB,EAAAroC,EAAAnrB,EAAA7P,EAAA6I,GACA7I,EAAAuR,KAAA86E,EAAAhpB,EAAAroC,EAAAnrB,EAAA7P,EAAA6I,GAAAyjF,EAAAjpB,EAAAroC,EAAAnrB,EAAA7P,EAAA6I,GAGA,QAAAyjF,GAAAjpB,EAAAroC,EAAAnrB,EAAA7P,EAAA6I,GACA,GAAA6gC,GAAA6iD,EAAAvxD,EAAA,OAAAh7B,EAAA0pC,MAAA/F,EAAAsK,cACAp7B,EAAA7S,EAAA6S,YACA87B,EAAA00B,EAAAmpB,iBAEA79C,KAAA00B,EAAA5nC,UACAkT,EAAA00B,EAAAmpB,kBAAA7oD,EAAAiL,eAAA/+B,EAAA65B,EAAA72B,EAAA7S,EAAAwuC,UAGA,IAAAM,GAAAH,EAAAG,YACAX,EAAAQ,EAAA0B,MACApB,EAAAN,EAAAM,WACAw9C,EAAAC,EAAA59C,EAAA9uC,EAAA6I,GACA8jF,EAAAF,EAAAE,MACAC,EAAAH,EAAAG,MACAv6E,EAAAo6E,EAAAp6E,UACAC,EAAAm6E,EAAAn6E,iBAEAu6E,GAAA7xD,EAAAh7B,EAAA6I,EAAA8jF,EAAAC,EACA,IAAAE,GAAAnpD,EAAAqL,YAAA49C,EAAA99C,EAAAx8B,GACAy6E,EAAAJ,EACAK,EAAAF,EACAG,EAAAC,EAAAltF,EAEA,IAAAitF,GAAAp6E,EAAA,CAEA,GAAAL,GAAAmxB,EAAA1N,SAAApmB,EAAA65B,GACAmF,EAAAr8B,CACAK,KAAAg8B,GAAAh8B,EAAA,GAAAA,EAAA,GACA,IAAAs6E,GAAAxpD,EAAAoL,YAAA49C,EAAA99C,EAAAx8B,EACA46E,IAAAG,EAAA/pB,EAAAroC,EAAAh7B,EAAAmtF,EAAAL,EAAAj+C,EAAAC,GAEAj8B,IACAk6E,EAAAM,EAAAV,EAAAt6E,EAAAQ,GACAm6E,GAAAn6E,EAAA,IAIA05E,EAAAvxD,EAAA,YAAA3oB,GAAA,QAGAk6E,EAAAvxD,EAAA,yBAEAuxD,EAAAvxD,EAAA,aAAAh7B,EAAAoT,gBAAA,GACAm5E,EAAAvxD,EAAA,cAAAh7B,EAAAmT,iBAAA,eACAo5E,EAAAvxD,EAAA,gBAAAh7B,EAAAqT,mBAAA,GACAk5E,EAAAvxD,EAAA,gBAAAh7B,EAAAsT,mBAAA,GAEA05E,GAAA/9C,EAAA,CACA,IAAAl9B,GAAA/R,EAAA+R,gBACAF,EAAAy7E,EAAAttF,EAAA6R,WAAAE,GACA/E,EAAAugF,EAAAvtF,EAAAgN,SAEA6E,KACA06E,EAAAvxD,EAAA,YAAAjpB,GACAw6E,EAAAvxD,EAAA,cAAAnpB,IAGA7E,GACAu/E,EAAAvxD,EAAA,YAAAhuB,EAGA,QAAArP,GAAA,EAAiBA,EAAAwwC,EAAAvwC,OAAsBD,IAEvCkU,GAAAmpB,EAAAwyD,WAAAr/C,EAAAxwC,GAAAovF,EAAAC,GACAhgF,GAAAguB,EAAAyyD,SAAAt/C,EAAAxwC,GAAAovF,EAAAC,GACAA,GAAA/9C,EAIA,QAAAo9C,GAAAhpB,EAAAroC,EAAAnrB,EAAA7P,EAAA6I,GACA,GAAA8lC,GAAA00B,EAAAmpB,iBAEA79C,KAAA00B,EAAA5nC,UACAkT,EAAA00B,EAAAmpB,kBAAA7oD,EAAAuL,cAAAr/B,EAAA7P,IAGA0tF,EAAArqB,EAAAroC,EAAA2T,EAAA3uC,EAAA6I,GAGA,QAAA6kF,GAAArqB,EAAAroC,EAAA2T,EAAA3uC,EAAA6I,GACA,GAAAgnC,GAAAlB,EAAApuC,MACAsuC,EAAAF,EAAAE,WACAC,EAAAH,EAAAG,YACAj8B,EAAA7S,EAAA6S,YACA45E,EAAAC,EAAA59C,EAAA9uC,EAAA6I,GACA8jF,EAAAF,EAAAE,MACAC,EAAAH,EAAAG,MACAv6E,EAAAo6E,EAAAp6E,UACAC,EAAAm6E,EAAAn6E,iBAEAu6E,GAAA7xD,EAAAh7B,EAAA6I,EAAA8jF,EAAAC,EACA,IAAAO,GAAAxpD,EAAAoL,YAAA49C,EAAA99C,EAAAx8B,GACAy6E,EAAAnpD,EAAAqL,YAAA49C,EAAA99C,EAAAx8B,GACAq7E,EAAAR,EACAS,EAAAd,CAEAj6E,KACA86E,GAAA96E,EAAA,GACA+6E,GAAA/6E,EAAA,GAGA,IAAAg7E,GAAAF,EAAA99C,CACAq9C,GAAAltF,IAAAotF,EAAA/pB,EAAAroC,EAAAh7B,EAAAmtF,EAAAL,EAAAj+C,EAAAC,EAEA,QAAAnxC,GAAA,EAAiBA,EAAAgxC,EAAA0B,MAAAzyC,OAA+BD,IAAA,CAYhD,IAXA,GASAyzC,GATAF,EAAAvC,EAAA0B,MAAA1yC,GACAwzC,EAAAD,EAAAC,OACA28C,EAAA38C,EAAAvzC,OACAqxC,EAAAiC,EAAAjC,WACA8+C,EAAA78C,EAAA3wC,MACAq9C,EAAA,EACAowC,EAAAL,EACAM,EAAAJ,EACAhwC,EAAAiwC,EAAA,EAGAlwC,EAAAkwC,IAAA18C,EAAAD,EAAAyM,IAAAxM,EAAA/+B,WAAA,SAAA++B,EAAA/+B,YACA67E,EAAA7qB,EAAAroC,EAAAoW,EAAApxC,EAAAivC,EAAA2+C,EAAAI,EAAA,QACAD,GAAA38C,EAAA7wC,MACAytF,GAAA58C,EAAA7wC,MACAq9C,GAGA,MAAAC,GAAA,IAAAzM,EAAAD,EAAA0M,GAAA,UAAAzM,EAAA/+B,YACA67E,EAAA7qB,EAAAroC,EAAAoW,EAAApxC,EAAAivC,EAAA2+C,EAAAK,EAAA,SACAF,GAAA38C,EAAA7wC,MACA0tF,GAAA78C,EAAA7wC,MACAs9C,GAMA,KAFAmwC,IAAAn+C,GAAAm+C,EAAAL,IAAAE,EAAAI,GAAAF,GAAA,EAEAnwC,GAAAC,GACAzM,EAAAD,EAAAyM,GAEAswC,EAAA7qB,EAAAroC,EAAAoW,EAAApxC,EAAAivC,EAAA2+C,EAAAI,EAAA58C,EAAA7wC,MAAA,YACAytF,GAAA58C,EAAA7wC,MACAq9C,GAGAgwC,IAAA3+C,GAIA,QAAA49C,GAAA7xD,EAAAh7B,EAAA6I,EAAAY,EAAAC,GAEA,GAAAb,GAAA7I,EAAA4Q,aAAA,CACA,GAAAkjE,GAAA9zE,EAAAiqF,UAEA,YAAAnW,GACArqE,EAAAZ,EAAAtI,MAAA,EAAAsI,EAAAY,EACAC,EAAAb,EAAArI,OAAA,EAAAqI,EAAAa,GACKoqE,IACLrqE,EAAAqqE,EAAA,GAAAjrE,EAAAY,EACAC,EAAAoqE,EAAA,GAAAjrE,EAAAa,GAGAsxB,EAAAgF,UAAAv2B,EAAAC,GAEAsxB,EAAAuc,QAAAv3C,EAAA4Q,cACAoqB,EAAAgF,WAAAv2B,GAAAC,IAIA,QAAAwkF,GAAA7qB,EAAAroC,EAAAoW,EAAApxC,EAAAivC,EAAA2+C,EAAAnkF,EAAA4I,GACA,GAAAg/B,GAAArxC,EAAAuR,KAAA6/B,EAAAE,eAGAh/B,EAAA8+B,EAAA9+B,kBACA5I,EAAAkkF,EAAA3+C,EAAA,CAEA,SAAA38B,EACA5I,EAAAkkF,EAAAx8C,EAAA5wC,OAAA,EACG,WAAA8R,IACH5I,EAAAkkF,EAAA3+C,EAAAmC,EAAA5wC,OAAA,IAGA4wC,EAAAiB,cAAA66C,EAAA77C,IAAA+7C,EAAA/pB,EAAAroC,EAAAqW,EAAA,UAAAh/B,EAAA5I,EAAA2nC,EAAA7wC,MAAA,WAAA8R,EAAA5I,EAAA2nC,EAAA7wC,MAAA,EAAAkJ,EAAAC,EAAA0nC,EAAA5wC,OAAA,EAAA4wC,EAAA7wC,MAAA6wC,EAAA5wC,OACA,IAAAqS,GAAAu+B,EAAAv+B,WAEAA,KACApJ,EAAA4jF,EAAA5jF,EAAA4I,EAAAQ,GACAnJ,GAAA0nC,EAAA5wC,OAAA,EAAAqS,EAAA,GAAAu+B,EAAA3+B,WAAA,GAGA85E,EAAAvxD,EAAA,aAAAp1B,EAAAyrC,EAAAj+B,eAAApT,EAAAoT,eAAA,IACAm5E,EAAAvxD,EAAA,cAAAqW,EAAAl+B,iBAAAnT,EAAAmT,iBAAA,eACAo5E,EAAAvxD,EAAA,gBAAAp1B,EAAAyrC,EAAAh+B,kBAAArT,EAAAqT,kBAAA,IACAk5E,EAAAvxD,EAAA,gBAAAp1B,EAAAyrC,EAAA/9B,kBAAAtT,EAAAsT,kBAAA,IACAi5E,EAAAvxD,EAAA,YAAA3oB,GAGAk6E,EAAAvxD,EAAA,yBACAuxD,EAAAvxD,EAAA,OAAAoW,EAAA1H,MAAA/F,EAAAsK,aACA,IAAAp8B,GAAAy7E,EAAAj8C,EAAAx/B,YAAA7R,EAAA6R,WAAAE,GACA/E,EAAAugF,EAAAl8C,EAAArkC,UAAAhN,EAAAgN,UACA+E,EAAAtM,EAAA4rC,EAAAt/B,gBAAA/R,EAAA+R,gBAEAF,KACA06E,EAAAvxD,EAAA,YAAAjpB,GACAw6E,EAAAvxD,EAAA,cAAAnpB,GACAmpB,EAAAwyD,WAAAp8C,EAAAvhC,KAAApG,EAAAC,IAGAsD,IACAu/E,EAAAvxD,EAAA,YAAAhuB,GACAguB,EAAAyyD,SAAAr8C,EAAAvhC,KAAApG,EAAAC,IAIA,QAAAwjF,GAAAltF,GACA,MAAAA,GAAA4S,qBAAA5S,EAAAgS,iBAAAhS,EAAA8R,gBAKA,QAAAs7E,GAAA/pB,EAAAroC,EAAAh7B,EAAAyJ,EAAAC,EAAAnJ,EAAAC,GACA,GAAAoS,GAAA5S,EAAA4S,oBACAZ,EAAAhS,EAAAgS,gBACAF,EAAA9R,EAAA8R,gBACAq8E,EAAAhpF,EAAAyN,EAMA,IALA25E,EAAAvxD,EAAA,aAAAh7B,EAAAgT,mBAAA,GACAu5E,EAAAvxD,EAAA,cAAAh7B,EAAA+S,oBAAA,eACAw5E,EAAAvxD,EAAA,gBAAAh7B,EAAAiT,sBAAA,GACAs5E,EAAAvxD,EAAA,gBAAAh7B,EAAAkT,sBAAA,GAEAi7E,GAAAn8E,GAAAF,EAAA,CACAkpB,EAAAqB,WACA,IAAAvpB,GAAA9S,EAAA8S,gBAEAA,GAGAs7E,EAAA7xD,UAAAvB,GACAvxB,IACAC,IACAnJ,QACAC,SACAi7C,EAAA3oC,IAPAkoB,EAAAnyB,KAAAY,EAAAC,EAAAnJ,EAAAC,GAWAw6B,EAAA+1B,YAGA,GAAAo9B,EACA5B,EAAAvxD,EAAA,YAAApoB,GACAooB,EAAA/uB,WACG,IAAA5J,EAAAuQ,GAAA,CACH,GAAApJ,GAAAoJ,EAAApJ,KACAA,GAAAooC,EAAAwxB,oBAAA55D,EAAA,KAAA65D,EAAAgrB,EAAAz7E,GAEApJ,GAAAooC,EAAAE,aAAAtoC,IACAwxB,EAAAwuD,UAAAhgF,EAAAC,EAAAC,EAAAnJ,EAAAC,GAIAwR,GAAAF,IACAy6E,EAAAvxD,EAAA,YAAAhpB,GACAu6E,EAAAvxD,EAAA,cAAAlpB,GACAkpB,EAAAhvB,UAIA,QAAAqiF,GAAA7kF,EAAAoJ,GAGAA,EAAApJ,QAGA,QAAAkjF,GAAA4B,EAAAtuF,EAAA6I,GACA,GAAA8jF,GAAA3sF,EAAAyJ,GAAA,EACAmjF,EAAA5sF,EAAA0J,GAAA,EACA2I,EAAArS,EAAAqS,UACAC,EAAAtS,EAAAsS,iBAEA,IAAAzJ,EAAA,CACA,GAAA2H,GAAAxQ,EAAAwQ,YAEA,IAAAA,YAAAzI,OAEA4kF,EAAA9jF,EAAAY,EAAAuY,EAAAxR,EAAA,GAAA3H,EAAAtI,OACAqsF,EAAA/jF,EAAAa,EAAAsY,EAAAxR,EAAA,GAAA3H,EAAArI,YACK,CACL,GAAA89E,GAAA36C,EAAAwL,yBAAA3+B,EAAA3H,EAAA7I,EAAA6Q,aACA87E,GAAArO,EAAA70E,EACAmjF,EAAAtO,EAAA50E,EAEA2I,KAAAisE,EAAAjsE,UACAC,KAAAgsE,EAAAhsE,kBAKA,GAAA7B,GAAAzQ,EAAAyQ,UAEAA,KACAk8E,GAAAl8E,EAAA,GACAm8E,GAAAn8E,EAAA,IAIA,OACAk8E,QACAC,QACAv6E,YACAC,qBAIA,QAAAi6E,GAAAvxD,EAAAv3B,EAAAnH,GAMA,MAFA0+B,GAAAv3B,GAAAnH,EAEA0+B,EAAAv3B,GASA,QAAA6pF,GAAAthF,EAAA1B,GACA,aAAA0B,GAAA1B,GAAA,mBAAA0B,GAAA,SAAAA,EAAA,KACAA,EAAAxC,OAAAwC,EAAA8sB,WAAA,OAAA9sB,EAGA,QAAAuhF,GAAAthF,GACA,aAAAA,GAAA,SAAAA,EAAA,KACAA,EAAAzC,OAAAyC,EAAA6sB,WAAA,OAAA7sB,EAGA,QAAA+V,GAAA1lB,EAAAiyF,GACA,uBAAAjyF,GACAA,EAAAkyF,YAAA,QACArsE,WAAA7lB,GAAA,IAAAiyF,EAGApsE,WAAA7lB,GAGAA,EAGA,QAAA+wF,GAAA5jF,EAAA4I,EAAAQ,GACA,gBAAAR,EAAA5I,EAAAoJ,EAAA,cAAAR,EAAA5I,EAAAoJ,EAAA,KAAAA,EAAA,KAAApJ,EAAAoJ,EAAA,GASA,QAAA47E,GAAA5+E,EAAA7P,GACA,aAAA6P,OAAA7P,EAAA4S,qBAAA5S,EAAAgS,iBAAAhS,EAAA8R,iBAAA9R,EAAA6S,aA3aA,GAAA4/B,GAAAx3C,EAAA,MAEAwK,EAAAgtC,EAAAhtC,UACAG,EAAA6sC,EAAA7sC,UACA/B,EAAA4uC,EAAA5uC,KACAmC,EAAAysC,EAAAzsC,kBACAb,EAAAstC,EAAAttC,SACA9C,EAAAowC,EAAApwC,SAEAshC,EAAA1oC,EAAA,MAEAmzF,EAAAnzF,EAAA,MAEA22C,EAAA32C,EAAA,MAGAgxF,GACA30D,KAAA,EACAE,MAAA,EACAk3D,OAAA,GAEAvC,GACA50D,IAAA,EACAE,OAAA,EACAk3D,OAAA,EAsZA3zF,GAAA+wF,qBACA/wF,EAAAoxF,aACApxF,EAAAsyF,YACAtyF,EAAAuyF,UACAvyF,EAAAyzF,gBzEk0oBMG,KACA,SAAU7zF,EAAQC,EAASC,G0EzupBjC,QAAA43C,GAAA5sC,GACA,MAAAA,GAAA2sC,GAAA3sC,GAAA2sC,EAbA,GAAA/9B,GAAA5Z,EAAA,MAEAoa,EAAApa,EAAA,MAOA4zF,EAAAh6E,EAAAC,SACA89B,EAAA,KAWAx9B,EAAA,SAAA9M,GACAA,QAEAA,EAAA8C,WAMArM,KAAAqM,UAAA,MAGA,MAAA9C,EAAA0N,WAMAjX,KAAAiX,SAAA,GAGA1N,EAAAoY,QAMA3hB,KAAA2hB,OAAA,MASA3hB,KAAA+0E,OAAA/0E,KAAA+0E,QAAA,MAGAgb,EAAA15E,EAAAlZ,SACA4yF,GAAA55E,UAAA,KAMA45E,EAAAviD,mBAAA,WACA,MAAAsG,GAAA9zC,KAAAiX,WAAA68B,EAAA9zC,KAAAqM,SAAA,KAAAynC,EAAA9zC,KAAAqM,SAAA,KAAAynC,EAAA9zC,KAAA2hB,MAAA,OAAAmyB,EAAA9zC,KAAA2hB,MAAA,OAGAouE,EAAAngB,gBAAA,WACA,GAAA15D,GAAAlW,KAAAkW,OACA85E,EAAA95E,KAAAC,UACAq3B,EAAAxtC,KAAAwtC,qBACAtiC,EAAAlL,KAAAmW,SAEA,KAAAq3B,IAAAwiD,EAEA,YADA9kF,GAAA4kF,EAAA5kF,GAIAA,MAAA4K,EAAAzY,SAEAmwC,EACAxtC,KAAAiW,kBAAA/K,GAEA4kF,EAAA5kF,GAIA8kF,IACAxiD,EACA13B,EAAAE,IAAA9K,EAAAgL,EAAAC,UAAAjL,GAEA4K,EAAAgL,KAAA5V,EAAAgL,EAAAC,YAKAnW,KAAAmW,UAAAjL,EACAlL,KAAAiwF,aAAAjwF,KAAAiwF,cAAAn6E,EAAAzY,SACAyY,EAAAM,OAAApW,KAAAiwF,aAAA/kF,IAGA6kF,EAAA95E,kBAAA,SAAA/K,GACA,MAAAmL,GAAAJ,kBAAAjW,KAAAkL,IAQA6kF,EAAAtzD,aAAA,SAAAR,GACA,GAAA/wB,GAAAlL,KAAAmW,UACAmhB,EAAA2E,EAAA3E,KAAA,CAEApsB,GACA+wB,EAAAQ,aAAAnF,EAAApsB,EAAA,GAAAosB,EAAApsB,EAAA,GAAAosB,EAAApsB,EAAA,GAAAosB,EAAApsB,EAAA,GAAAosB,EAAApsB,EAAA,GAAAosB,EAAApsB,EAAA,IAEA+wB,EAAAQ,aAAAnF,EAAA,IAAAA,EAAA,MAIAy4D,EAAAryD,iBAAA,SAAAzB,GACA,GAAA3E,GAAA2E,EAAA3E,KAAA,CACA2E,GAAAQ,aAAAnF,EAAA,IAAAA,EAAA,KAGA,IAAA44D,KAKAH,GAAAlgB,mBAAA,WACA,GAAA7vE,KAAAmW,UAAA,CAIA,GAAAD,GAAAlW,KAAAkW,OACAhL,EAAAlL,KAAAmW,SAEAD,MAAAC,YAEAL,EAAAE,IAAAk6E,EAAAh6E,EAAA+5E,aAAA/kF,GACAA,EAAAglF,EAGA,IAAAnvD,GAAA71B,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GACA81B,EAAA91B,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GACAmB,EAAArM,KAAAqM,SACAsV,EAAA3hB,KAAA2hB,KAEAmyB,GAAA/S,EAAA,KACAA,EAAA50B,KAAAoV,KAAAwf,IAGA+S,EAAA9S,EAAA,KACAA,EAAA70B,KAAAoV,KAAAyf,IAGA91B,EAAA,OACA61B,MAGA71B,EAAA,OACA81B,MAGA30B,EAAA,GAAAnB,EAAA,GACAmB,EAAA,GAAAnB,EAAA,GACAyW,EAAA,GAAAof,EACApf,EAAA,GAAAqf,EACAhhC,KAAAiX,SAAA9K,KAAAgkF,OAAAjlF,EAAA,GAAA81B,EAAA91B,EAAA,GAAA61B,KAQAgvD,EAAA3yD,eAAA,WACA,GAAAlyB,GAAAlL,KAAAmW,SAEA,KAAAjL,EACA,WAGA,IAAA61B,GAAA50B,KAAAoV,KAAArW,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IACA81B,EAAA70B,KAAAoV,KAAArW,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAUA,OARAA,GAAA,OACA61B,MAGA71B,EAAA,OACA81B,OAGAD,EAAAC,IAWA+uD,EAAAvxD,sBAAA,SAAA9zB,EAAAC,GACA,GAAAyW,IAAA1W,EAAAC,GACAslF,EAAAjwF,KAAAiwF,YAMA,OAJAA,IACA35E,EAAAtL,eAAAoW,IAAA6uE,GAGA7uE,GAWA2uE,EAAAK,uBAAA,SAAA1lF,EAAAC,GACA,GAAAyW,IAAA1W,EAAAC,GACAwL,EAAAnW,KAAAmW,SAMA,OAJAA,IACAG,EAAAtL,eAAAoW,IAAAjL,GAGAiL,GAYA/K,EAAAJ,kBAAA,SAAAvX,EAAAwM,GACAA,QACA4kF,EAAA5kF,EACA,IAAA6pE,GAAAr2E,EAAAq2E,OACApzD,EAAAjjB,EAAAijB,QAAA,KACA1K,EAAAvY,EAAAuY,UAAA,EACA5K,EAAA3N,EAAA2N,WAAA,IAsBA,OApBA0oE,KAEA7pE,EAAA,IAAA6pE,EAAA,GACA7pE,EAAA,IAAA6pE,EAAA,IAGAj/D,EAAA6L,MAAAzW,IAAAyW,GAEA1K,GACAnB,EAAA0iC,OAAAttC,IAAA+L,GAGA89D,IAEA7pE,EAAA,IAAA6pE,EAAA,GACA7pE,EAAA,IAAA6pE,EAAA,IAGA7pE,EAAA,IAAAmB,EAAA,GACAnB,EAAA,IAAAmB,EAAA,GACAnB,EAGA,IAAAm0B,GAAAhpB,CACAra,GAAAC,QAAAojC,G1E2vpBMgxD,KACA,SAAUr0F,EAAQC,EAASC,G2Ev+pBjC,QAAAssB,GAAAV,EAAAve,GACA,GAAA8e,GAAA,GAAAioE,GAAAtO,IAAAl6D,EAAAve,EAEA,OADAioB,GAAAnJ,EAAA/M,IAAA+M,EACAA,EAQA,QAAAqG,GAAArG,GACA,GAAAA,EACAA,EAAAqG,cACG,CACH,OAAA3vB,KAAAyyB,GACAA,EAAAruB,eAAApE,IACAyyB,EAAAzyB,GAAA2vB,SAIA8C,MAGA,MAAAxxB,MASA,QAAAuwF,GAAAj1E,GACA,MAAAkW,GAAAlW,GAGA,QAAAk1E,GAAApuF,EAAAU,GACA2tF,EAAAruF,GAAAU,EAGA,QAAA4tF,GAAAp1E,SACAkW,GAAAlW,GAzFA,GAAA0mE,GAAA9lF,EAAA,MAEA6zB,EAAA7zB,EAAA,MAEAsU,EAAAtU,EAAA,MAEAy0F,EAAAz0F,EAAA,MAEA00F,EAAA10F,EAAA,MAEA20F,EAAA30F,EAAA,MAEA40F,EAAA50F,EAAA,MAEA60F,EAAA70F,EAAA,MAWA80F,GAAAjhE,EAAA0H,gBACAg5D,GACA73D,OAAAi4D,GAEAr/D,KA+EA8+D,EAAA,SAAAh1E,EAAAwM,EAAAve,GACAA,QAKAvJ,KAAA8nB,MAKA9nB,KAAAsb,IACA,IAAAze,GAAAmD,KACA6vB,EAAA,GAAA+gE,GACAK,EAAA1nF,EAAAkf,QAEA,IAAAuoE,EAAA,CACA,IAAAP,EAAAS,IACA,SAAA5pF,OAAA,uDAGA2pF,GAAA,UACGA,IAAAR,EAAAQ,KACHA,EAAA,SAGA,IAAA55D,GAAA,GAAAo5D,GAAAQ,GAAAnpE,EAAA+H,EAAAtmB,EACAvJ,MAAA6vB,UACA7vB,KAAAq3B,SACA,IAAA85D,GAAAphE,EAAAC,KAAA,QAAA+gE,GAAA15D,EAAA+5D,kBACApxF,MAAA0nB,QAAA,GAAAipE,GAAA9gE,EAAAwH,EAAA85D,EAAA95D,EAAAg6D,MAKArxF,KAAA+pB,UAAA,GAAA+mE,IACAQ,OACA7lE,OAAAjb,EAAA9P,KAAAV,KAAA6oB,MAAA7oB,SAGAA,KAAA+pB,UAAA4jC,QAMA3tD,KAAAuxF,aAGA,IAAAC,GAAA3hE,EAAAg/B,eACA4iC,EAAA5hE,EAAA8+B,YAEA9+B,GAAAg/B,eAAA,SAAA9hD,GACAykF,EAAA10F,KAAA+yB,EAAA9iB,GACAA,KAAA01E,iBAAA5lF,IAGAgzB,EAAA8+B,aAAA,SAAA5hD,GACA0kF,EAAA30F,KAAA+yB,EAAA9iB,GACAA,EAAAw1E,YAAA1lF,IAIAyzF,GAAAnzF,WACAG,YAAAgzF,EAMAlT,MAAA,WACA,MAAAp9E,MAAAsb,IAOA4F,IAAA,SAAAnU,GACA/M,KAAA6vB,QAAA6hE,QAAA3kF,GACA/M,KAAAuxF,eAAA,GAOA9iE,OAAA,SAAA1hB,GACA/M,KAAA6vB,QAAA8hE,QAAA5kF,GACA/M,KAAAuxF,eAAA,GAWA53D,YAAA,SAAAi4D,EAAAC,GACA7xF,KAAAq3B,QAAAsC,YAAAi4D,EAAAC,GACA7xF,KAAAuxF,eAAA,GAMAx4D,mBAAA,WAIA/4B,KAAAuxF,eAAA,EACAvxF,KAAAq3B,QAAAsH,UAKA3+B,KAAAuxF,eAAA,GAUA5yD,QAAA,WACA3+B,KAAAuxF,eAAA,GAMA1oE,MAAA,WACA7oB,KAAAuxF,eACAvxF,KAAA+4B,qBAGA/4B,KAAA8xF,oBACA9xF,KAAA+xF,2BASApkF,SAAA,SAAAZ,EAAA9L,GACAjB,KAAAq3B,QAAA1pB,WACA3N,KAAAq3B,QAAA1pB,SAAAZ,EAAA9L,GACAjB,KAAAgyF,iBAQAzjF,YAAA,SAAAxB,GACA/M,KAAAq3B,QAAA9oB,cACAvO,KAAAq3B,QAAA9oB,YAAAxB,GACA/M,KAAAgyF,iBAQAC,WAAA,WACAjyF,KAAAq3B,QAAA46D,aACAjyF,KAAAq3B,QAAA46D,aACAjyF,KAAAgyF,iBAOAA,aAAA,WACAhyF,KAAA8xF,oBAAA,GAMAC,wBAAA,WACA/xF,KAAA8xF,oBAAA,EACA9xF,KAAAq3B,QAAA26D,cAAAhyF,KAAAq3B,QAAA26D,gBAUAtoE,OAAA,SAAAngB,GACAA,QACAvJ,KAAAq3B,QAAA3N,OAAAngB,EAAA/H,MAAA+H,EAAA9H,QACAzB,KAAA0nB,QAAAgC,UAMAwoE,eAAA,WACAlyF,KAAA+pB,UAAAmR,SAMAhE,SAAA,WACA,MAAAl3B,MAAAq3B,QAAAH,YAMAC,UAAA,WACA,MAAAn3B,MAAAq3B,QAAAF,aAsBAg7D,YAAA,SAAApjF,EAAAuoB,GACA,MAAAt3B,MAAAq3B,QAAA86D,YAAApjF,EAAAuoB,IAOA86D,eAAA,SAAAnrB,GACAjnE,KAAA0nB,QAAA0qE,eAAAnrB,IASAorB,UAAA,SAAA3nF,EAAAC,GACA,MAAA3K,MAAA0nB,QAAA2qE,UAAA3nF,EAAAC,IAUA8E,GAAA,SAAAgY,EAAA6qE,EAAAttF,GACAhF,KAAA0nB,QAAAjY,GAAAgY,EAAA6qE,EAAAttF,IAQAuxB,IAAA,SAAA9O,EAAA6qE,GACAtyF,KAAA0nB,QAAA6O,IAAA9O,EAAA6qE,IASA1lE,QAAA,SAAAnF,EAAA8E,GACAvsB,KAAA0nB,QAAAkF,QAAAnF,EAAA8E,IAMA2O,MAAA,WACAl7B,KAAA6vB,QAAA8hE,UACA3xF,KAAAq3B,QAAA6D,SAMAxM,QAAA,WACA1uB,KAAA+pB,UAAAoxB,OACAn7C,KAAAk7B,QACAl7B,KAAA6vB,QAAAnB,UACA1uB,KAAAq3B,QAAA3I,UACA1uB,KAAA0nB,QAAAgH,UACA1uB,KAAA+pB,UAAA/pB,KAAA6vB,QAAA7vB,KAAAq3B,QAAAr3B,KAAA0nB,QAAA,KACAgpE,EAAA1wF,KAAAsb,MAGArf,EAAAo/B,QAzYA,QA0YAp/B,EAAAusB,OACAvsB,EAAAyyB,UACAzyB,EAAAs0F,cACAt0F,EAAAu0F,mB3E4hqBM+B,KACA,SAAUv2F,EAAQC,EAASC,G4Ez8qBjC,QAAAw0B,GAAA8hE,GACAhiF,EAAA1L,KAAA2tF,EAAA,SAAArwF,GACApC,KAAAoC,GAAAoO,EAAA9P,KAAA8xF,EAAApwF,GAAAowF,IACGxyF,MAPH,GAAAwQ,GAAAtU,EAAA,MAEAu2F,GAAA,mNAQApzD,EAAA3O,CACA10B,GAAAC,QAAAojC,G5Em9qBMqzD,KACA,SAAU12F,EAAQC,EAASC,G6E/9qBjC,GAAAi2E,GAAAj2E,EAAA,MAEAsU,EAAAtU,EAAA,MAEAy2F,EAAAz2F,EAAA,KAEAA,GAAA,MAEAA,EAAA,MAEAA,EAAA,MAEAA,EAAA,MAGAi2E,EAAAz+C,eAAAljB,EAAAtK,MAAAysF,EAAA,QAEAxgB,EAAAt+C,eAAA,SAAA7hB,GACAA,EAAA4gF,iBAAA,eAAArlE,GACAA,EAAAxS,UACAyjE,UAAA,iC7Eu+qBMqU,KACA,SAAU72F,EAAQC,EAASC,G8E5/qBjC,GAAA42F,GAAA52F,EAAA,MAEAmjC,EAAAyzD,EAAAjvF,QACA7C,KAAA,aACA40B,cAAA,gBACAm9D,cAAA,QAGA/2F,GAAAC,QAAAojC,G9EkgrBM2zD,KACA,SAAUh3F,EAAQC,EAASC,G+Ej3qBjC,QAAA+2F,GAAAl+E,EAAAm+E,EAAAnmF,GAEAA,EAAA9L,MAAA6P,KAAA,KACA0kB,EAAA/f,YAAA1I,GACAzB,OACA9J,MAAA,IAEG0xF,EAAAn+E,EAAA,WACHhI,EAAAmJ,QAAAnJ,EAAAmJ,OAAAuY,OAAA1hB,KAIA,QAAAomF,GAAAp+E,EAAAm+E,EAAAnmF,GAEAA,EAAA9L,MAAA6P,KAAA,KACA0kB,EAAA/f,YAAA1I,GACAzB,OACAoxC,EAAA3vC,EAAAzB,MAAAwgE,KAEGonB,EAAAn+E,EAAA,WACHhI,EAAAmJ,QAAAnJ,EAAAmJ,OAAAuY,OAAA1hB,KA+BA,QAAAqmF,GAAArmF,EAAAlI,EAAAkQ,EAAAmL,EAAAnW,EAAAwjB,EAAAqnD,EAAAye,GACA,GAAA1mF,GAAA9H,EAAA2a,cAAAzK,EAAA,SACAsxD,EAAAxhE,EAAA2a,cAAAzK,EAAA,WACAu+E,EAAApzE,EAAA5N,SAAA,oBACAnF,EAAA+S,EAAA5N,SAAA,sBAAAihF,iBAEAF,IACAtmF,EAAAkyB,SAAA,IAAAq0D,EAAApqF,IAAA,uBAGA6D,EAAA82D,SAAArzD,EAAA1M,UACAoJ,KAAAP,EACA05D,WACGitB,EAAAC,mBACH,IAAAtsB,GAAA/mD,EAAA7P,WAAA,SACA42D,IAAAl6D,EAAAyI,KAAA,SAAAyxD,EACA,IAAAusB,GAAA5e,EAAA7qE,EAAAtI,OAAA,iBAAAsI,EAAAvI,MAAA,gBAEA6xF,IACAI,EAAA1mF,EAAA9L,MAAAkM,EAAA+S,EAAAvT,EAAA4gB,EAAAxY,EAAAy+E,GAGAh+D,EAAAlmB,cAAAvC,EAAAI,GAIA,QAAAumF,GAAAxzE,EAAAyzE,GACA,GAAApoF,GAAA2U,EAAAhX,IAAA0qF,IAAA,CACA,OAAAznF,MAAAiN,IAAA7N,EAAAY,KAAAuK,IAAAi9E,EAAAnyF,OAAA2K,KAAAuK,IAAAi9E,EAAAlyF,SAzOA,GAAA2zB,GAAAl5B,EAAA,MAIAi2E,GAFA/8C,EAAAC,QAEAn5B,EAAA,OAEAsU,EAAAtU,EAAA,MAEAs5B,EAAAt5B,EAAA,MAEA23F,EAAA33F,EAAA,MAEAu3F,EAAAI,EAAAJ,SAEA/4E,EAAAxe,EAAA,MAEA43F,EAAA53F,EAAA,MAEA03F,GAAA,sCAGApjF,GAAA3M,OAAA6W,EAAAvd,UAAA22F,EAEA,IAAAz0D,GAAA8yC,EAAA39C,iBACAxzB,KAAA,MACA2uB,OAAA,SAAApC,EAAAvb,EAAAkb,GACA,GAAA6mE,GAAAxmE,EAAArkB,IAAA,mBAMA,OAJA,gBAAA6qF,GAAA,UAAAA,GACA/zF,KAAAg0F,QAAAzmE,EAAAvb,EAAAkb,GAGAltB,KAAAmoB,OAEAuG,QAAAle,EAAA5I,KACAosF,QAAA,SAAAzmE,EAAAvb,EAAAkb,GACA,GAKA+mE,GALA9rE,EAAAnoB,KAAAmoB,MACAtjB,EAAA0oB,EAAAxS,UACAm5E,EAAAl0F,KAAAm0F,MACAxwB,EAAAp2C,EAAA4L,iBACAmgD,EAAA3V,EAAAlL,aAGA,iBAAAkL,EAAA3iE,KACAizF,EAAA3a,EAAA1E,eACK,UAAAjR,EAAA3iE,OACLizF,EAAA,UAAA3a,EAAAptB,IAGA,IAAAgnC,GAAA3lE,EAAAvY,qBAAAuY,EAAA,IACA1oB,GAAAm6D,KAAAk1B,GAAAhzE,IAAA,SAAAnM,GACA,GAAAlQ,EAAA0pC,SAAAx5B,GAAA,CAIA,GAAAmL,GAAArb,EAAAsb,aAAApL,GACAhL,EAAA20E,EAAA/a,EAAA3iE,MAAA6D,EAAAkQ,EAAAmL,GACAnT,EAAAqnF,EAAAzwB,EAAA3iE,MAAA6D,EAAAkQ,EAAAmL,EAAAnW,EAAAkqF,EAAAf,EACAruF,GAAAo6E,iBAAAlqE,EAAAhI,GACAob,EAAAjH,IAAAnU,GACAqmF,EAAArmF,EAAAlI,EAAAkQ,EAAAmL,EAAAnW,EAAAwjB,EAAA0mE,EAAA,UAAAtwB,EAAA3iE,SACKyqB,OAAA,SAAA4oE,EAAAC,GACL,GAAAvnF,GAAAmnF,EAAArsB,iBAAAysB,EAEA,KAAAzvF,EAAA0pC,SAAA8lD,GAEA,WADAlsE,GAAAsG,OAAA1hB,EAIA,IAAAmT,GAAArb,EAAAsb,aAAAk0E,GACAtqF,EAAA20E,EAAA/a,EAAA3iE,MAAA6D,EAAAwvF,EAAAn0E,EAEAnT,GACAyoB,EAAA/f,YAAA1I,GACAzB,MAAAvB,GACSmpF,EAAAmB,GAETtnF,EAAAqnF,EAAAzwB,EAAA3iE,MAAA6D,EAAAwvF,EAAAn0E,EAAAnW,EAAAkqF,EAAAf,GAAA,GAGAruF,EAAAo6E,iBAAAoV,EAAAtnF,GAEAob,EAAAjH,IAAAnU,GACAqmF,EAAArmF,EAAAlI,EAAAwvF,EAAAn0E,EAAAnW,EAAAwjB,EAAA0mE,EAAA,UAAAtwB,EAAA3iE,QACKytB,OAAA,SAAA1Z,GACL,GAAAhI,GAAAmnF,EAAArsB,iBAAA9yD,EAEA,iBAAA4uD,EAAA3iE,KACA+L,GAAAkmF,EAAAl+E,EAAAm+E,EAAAnmF,GAEAA,GAAAomF,EAAAp+E,EAAAm+E,EAAAnmF,KAEKwnF,UACLv0F,KAAAm0F,MAAAtvF,GAEA4pB,OAAA,SAAAzc,EAAAkb,GACA,GAAA/E,GAAAnoB,KAAAmoB,MACAtjB,EAAA7E,KAAAm0F,KAEAniF,GAAA9I,IAAA,aACArE,GACAA,EAAAq6E,kBAAA,SAAAnyE,GACA,WAAAA,EAAA/L,KACAmyF,EAAApmF,EAAAgI,UAAA/C,EAAAjF,GAEAkmF,EAAAlmF,EAAAgI,UAAA/C,EAAAjF,KAKAob,EAAA4mC,eAKAqlC,GACAl+B,YAAA,SAAArxD,EAAAkQ,EAAAmL,EAAAnW,EAAA6qE,EAAAse,EAAAr+E,GACA,GAAA/K,GAAA,GAAA0rB,GAAA5c,MACAtN,MAAAkF,EAAA3M,UAA6BkG,IAG7B,IAAAmpF,EAAA,CACA,GAAAsB,GAAA1qF,EAAAwB,MACAmpF,EAAA7f,EAAA,iBACA8f,IACAF,GAAAC,GAAA,EACAC,EAAAD,GAAA1qF,EAAA0qF,GACAj/D,EAAA3gB,EAAA,2BAAA/K,GACAwB,MAAAopF,GACOxB,EAAAn+E,GAGP,MAAAjL,IAEAktD,MAAA,SAAAnyD,EAAAkQ,EAAAmL,EAAAnW,EAAA4qF,EAAAzB,EAAAr+E,GACA,GAAA+/E,GAAA,GAAAp/D,GAAAhd,QACAlN,MAAAkF,EAAA3M,UAA6BkG,IAG7B,IAAAmpF,EAAA,CACA,GAAA2B,GAAAD,EAAAtpF,MACAmpF,EAAAE,EAAA,eACAD,IACAG,GAAAJ,GAAAE,EAAA,EAAA5qF,EAAA4nD,WACA+iC,EAAAD,GAAA1qF,EAAA0qF,GACAj/D,EAAA3gB,EAAA,2BAAA+/E,GACAtpF,MAAAopF,GACOxB,EAAAn+E,GAGP,MAAA6/E,KA4BAlW,GACAxoB,YAAA,SAAArxD,EAAAkQ,EAAAmL,GACA,GAAAnW,GAAAlF,EAAA85E,cAAA5pE,GACA+/E,EAAApB,EAAAxzE,EAAAnW,GAEAgrF,EAAAhrF,EAAAvI,MAAA,OACAwzF,EAAAjrF,EAAAtI,OAAA,MACA,QACAiJ,EAAAX,EAAAW,EAAAqqF,EAAAD,EAAA,EACAnqF,EAAAZ,EAAAY,EAAAqqF,EAAAF,EAAA,EACAtzF,MAAAuI,EAAAvI,MAAAuzF,EAAAD,EACArzF,OAAAsI,EAAAtI,OAAAuzF,EAAAF,IAGA99B,MAAA,SAAAnyD,EAAAkQ,EAAAmL,GACA,GAAAnW,GAAAlF,EAAA85E,cAAA5pE,EACA,QACA08C,GAAA1nD,EAAA0nD,GACAC,GAAA3nD,EAAA2nD,GACAoa,GAAA/hE,EAAA+hE,GACApvB,EAAA3yC,EAAA2yC,EACAiV,WAAA5nD,EAAA4nD,WACAC,SAAA7nD,EAAA6nD,WAoCA51D,GAAAC,QAAAojC,G/EihrBM41D,KACA,SAAUj5F,EAAQC,EAASC,GgF9vrBjC,GAAAq4B,GAAAr4B,EAAA,MAEA04D,EAAA14D,EAAA,MAEAmjC,EAAA9K,EAAA1wB,QACA7C,KAAA,sBACAk3D,eAAA,SAAAhmD,EAAAF,GACA,MAAA4iD,GAAA1iD,EAAArN,KAAA7E,KAAAgS,IAEAkjF,kBAAA,SAAA33F,GACA,GAAAgtB,GAAAvqB,KAAAm5B,gBAEA,IAAA5O,EAAA,CAEA,GAAA4qE,GAAA5qE,EAAAu9C,YAAAvqE,GAAA,GACAsH,EAAA7E,KAAA+a,UACAo3C,EAAAttD,EAAA65E,UAAA,UACArgB,EAAAx5D,EAAA65E,UAAA,OAGA,OADAyW,GADA5qE,EAAAkuC,cAAAmc,eAAA,MACAziB,EAAAkM,EAAA,EACA82B,EAGA,OAAA56E,UAEA6sB,eACA7W,OAAA,EAEAD,EAAA,EAEA6I,iBAAA,cACAi8D,iBAAA,EAMAC,aAAA,EAEAC,YAAA,EAcA3uB,eAQA3qE,GAAAC,QAAAojC,GhFowrBMk2D,KACA,SAAUv5F,EAAQC,EAASC,GiFl0rBjC,GAAAs5F,GAAAt5F,EAAA,MAEAq3F,EAAAiC,IAAA,sEACA,2IACAn2D,GACAk0D,gBAAA,SAAAxmC,GACA,GAAA9rD,GAAAsyF,EAAAvzF,KAAA+sD,EAEA,IAAA/sD,KAAAy1F,kBAAA,CACA,GAAAz4D,GAAAh9B,KAAAy1F,mBACAz4D,KAAA/7B,EAAA+7B,YAGA,MAAA/7B,IAGAjF,GAAAC,QAAAojC,GjFw0rBMq2D,KACA,SAAU15F,EAAQC,EAASC,GkFv1rBjC,QAAAu3F,GAAApmF,EAAAF,EAAA+S,EAAAvT,EAAA4gB,EAAAxY,EAAAy+E,GACA,GAAAliF,GAAA4O,EAAA5N,SAAA,gBACAy0D,EAAA7mD,EAAA5N,SAAA,iBACAkjB,GAAA9lB,cAAArC,EAAAF,EAAAmE,EAAAy1D,GACA92D,aAAAsd,EACArd,eAAA6E,EACArE,YAAA6c,EAAArO,YAAAnK,GACAvD,YAAA,EACAtD,UAAAvB,IAEAgpF,EAAAtoF,GACAsoF,EAAAxoF,GAGA,QAAAwoF,GAAA10F,EAAAuyF,GACA,YAAAvyF,EAAAwQ,eACAxQ,EAAAwQ,aAAA+hF,GAlBA,GAAAh+D,GAAAt5B,EAAA,KAsBAD,GAAAw3F,YlF+1rBMmC,KACA,SAAU55F,EAAQC,EAASC,GmFz2rBjC,QAAA25F,GAAAC,GACA91F,KAAAmoB,MAAA,GAAAqN,GAAAnd,MACArY,KAAA+1F,YAAAD,GAAA74B,EAKA,QAAA+4B,GAAAnxF,EAAA0b,EAAA01E,GACA,GAAAt+E,GAAA9S,EAAA85E,cAAAp+D,EAKA,OAAA5I,KAAAiM,MAAAjM,EAAA,MAAAiM,MAAAjM,EAAA,OAAAs+E,KAAA11E,KAAA,SAAA1b,EAAA2a,cAAAe,EAAA,UA1BA,GAAAiV,GAAAt5B,EAAA,MAEA+gE,EAAA/gE,EAAA,MAgBAg6F,EAAAL,EAAA14F,SAiBA+4F,GAAAhxB,WAAA,SAAArgE,EAAAoxF,GACA,GAAA9tE,GAAAnoB,KAAAmoB,MACAoF,EAAA1oB,EAAAqhE,UACAguB,EAAAl0F,KAAAm0F,MACAgC,EAAAn2F,KAAA+1F,YACA9wB,GACA0B,UAAAp5C,EAAAjb,SAAA,oBAAA40D,cAAA,UACAN,eAAAr5C,EAAAjb,SAAA,sBAAA40D,eACAL,aAAAt5C,EAAArkB,IAAA,gBACA49D,aAAAv5C,EAAArkB,IAAA,gBACA89D,eAAAz5C,EAAArkB,IAAA,kBACAoI,WAAAic,EAAAjb,SAAA,gBACAy0D,gBAAAx5C,EAAAjb,SAAA,kBACA20D,YAAA15C,EAAArkB,IAAA,UAEArE,GAAAm6D,KAAAk1B,GAAAhzE,IAAA,SAAAk1E,GACA,GAAAz+E,GAAA9S,EAAA85E,cAAAyX,EAEA,IAAAJ,EAAAnxF,EAAAuxF,EAAAH,GAAA,CACA,GAAAI,GAAA,GAAAF,GAAAtxF,EAAAuxF,EAAAnxB,EACAoxB,GAAA7gF,KAAA,WAAAmC,GACA9S,EAAAo6E,iBAAAmX,EAAAC,GACAluE,EAAAjH,IAAAm1E,MAEG5qE,OAAA,SAAA2qE,EAAAE,GACH,GAAAD,GAAAnC,EAAArsB,iBAAAyuB,GACA3+E,EAAA9S,EAAA85E,cAAAyX,EAEA,KAAAJ,EAAAnxF,EAAAuxF,EAAAH,GAEA,WADA9tE,GAAAsG,OAAA4nE,EAIAA,IAIAA,EAAAnxB,WAAArgE,EAAAuxF,EAAAnxB,GACAzvC,EAAA/f,YAAA4gF,GACAhqF,SAAAsL,GACO4V,KANP8oE,EAAA,GAAAF,GAAAtxF,EAAAuxF,GACAC,EAAA7gF,KAAA,WAAAmC,IASAwQ,EAAAjH,IAAAm1E,GACAxxF,EAAAo6E,iBAAAmX,EAAAC,KACG5nE,OAAA,SAAA6nE,GACH,GAAAvpF,GAAAmnF,EAAArsB,iBAAAyuB,EACAvpF,MAAA26D,QAAA,WACAv/C,EAAAsG,OAAA1hB,OAEGwnF,UACHv0F,KAAAm0F,MAAAtvF,GAGAqxF,EAAA/7D,aAAA,WACA,GAAAt1B,GAAA7E,KAAAm0F,KAEAtvF,IAEAA,EAAAq6E,kBAAA,SAAAnyE,EAAAwT,GACA,GAAA5I,GAAA9S,EAAA85E,cAAAp+D,EACAxT,GAAAyI,KAAA,WAAAmC,MAKAu+E,EAAAznE,OAAA,SAAA8nE,GACA,GAAApuE,GAAAnoB,KAAAmoB,MACAtjB,EAAA7E,KAAAm0F,KAEAtvF,KACA0xF,EACA1xF,EAAAq6E,kBAAA,SAAAnyE,GACAA,EAAA26D,QAAA,WACAv/C,EAAAsG,OAAA1hB,OAIAob,EAAA4mC,aAKA,IAAA1vB,GAAAw2D,CACA75F,GAAAC,QAAAojC,GnF43rBMm3D,KACA,SAAUx6F,EAAQC,EAASC,GoF9+rBjC,QAAAqpE,GAAA1gE,GACA,GAAAyiE,GACAmvB,EAAAh4E,EAAA5Z,EAAA,QAEA,IAAA4xF,EAAA53F,OACAyoE,EAAAmvB,EAAA,OAMA,KAHA,GACAz3E,GADAf,EAAApZ,EAAAoZ,WAAAlX,QAGAkX,EAAApf,SAAAyoE,EAAArpD,EAAA2N,MAAA,aAAA5M,EAAAna,EAAAuZ,iBAAAkpD,GAAAtmE,OAAA,SAAAge,KAIA,MAAAsoD,GAtBA,GAAAn9C,GAAAjuB,EAAA,MAEAuiB,EAAA0L,EAAA1L,iBAuBAxiB,GAAAspE,qBpF2/rBMmxB,KACA,SAAU16F,EAAQC,EAASC,GqFrhsBjC,GAAAi2E,GAAAj2E,EAAA,MAEAsU,EAAAtU,EAAA,KAEAA,GAAA,MAEAA,EAAA,KAEA,IAAAy6F,GAAAz6F,EAAA,MAEA06F,EAAA16F,EAAA,MAEA26F,EAAA36F,EAAA,KAEAA,GAAA,MAGAi2E,EAAAt+C,eAAArjB,EAAAtK,MAAAywF,EAAA,yBACAxkB,EAAAz+C,eAAAljB,EAAAtK,MAAA0wF,EAAA,SAEAzkB,EAAAx/C,kBAAAw/C,EAAAt8C,SAAAC,UAAAE,UAAAxlB,EAAAtK,MAAA2wF,EAAA,UrF2hsBMC,KACA,SAAU96F,EAAQC,EAASC,GsFhjsBjC,GAAAk5B,GAAAl5B,EAAA,MAIA04D,GAFAx/B,EAAAC,QAEAn5B,EAAA,OAEAq4B,EAAAr4B,EAAA,MAEAmjC,EAAA9K,EAAA1wB,QACA7C,KAAA,cACA40B,cAAA,gBACAsiC,eAAA,SAAAhmD,EAAAF,GACA,MAAA4iD,GAAA1iD,EAAArN,KAAA7E,KAAAgS,IAEAo1B,eACA7W,OAAA,EAEAD,EAAA,EAEA6I,iBAAA,cACAi8D,iBAAA,EACApuB,gBAAA,EAMA+vB,cAAA,EAEAprC,OACA9xC,QACAxN,SAAA,QAOAy/C,WACAjyC,QACArY,MAAA,EACAR,KAAA,UAKAgqC,MAAA,EAEAkhD,QAAA,EACA8K,eAAA,KAEAvmB,OAAA,cAEA1L,WAAA,EAEA8B,aAAA,KAEAowB,YAAA,EAEAC,eAAA,EAEAC,cAAA,EAEAC,SAAA,OACAjiF,gBAAA,SAEAib,YAAA,EACAinE,oBAAApwE,MAIAjrB,GAAAC,QAAAojC,GtFsjsBMi4D,KACA,SAAUt7F,EAAQC,EAASC,GuFtmsBjC,QAAAq7F,GAAAC,EAAAC,GACA,GAAAD,EAAA34F,SAAA44F,EAAA54F,OAAA,CAIA,OAAAD,GAAA,EAAiBA,EAAA44F,EAAA34F,OAAoBD,IAAA,CACrC,GAAAq1C,GAAAujD,EAAA54F,GACAs1C,EAAAujD,EAAA74F,EAEA,IAAAq1C,EAAA,KAAAC,EAAA,IAAAD,EAAA,KAAAC,EAAA,GACA,OAIA,UAGA,QAAAwjD,GAAAxL,GACA,uBAAAA,OAAA,KAGA,QAAAyL,GAAAptD,GACA,GAAAf,GAAAe,EAAAqtD,iBAEA,IAAArtD,EAAAypC,OAAA,CAEA,GAAA6jB,GAAAttD,EAAAmqC,eAAA,IACA4T,EAAA9+C,EAAA,GAAAA,EAAA,OACAA,GAAA,IAAA8+C,EAAAuP,EACAruD,EAAA,IAAA8+C,EAAAuP,EAGA,MAAAruD,GAGA,QAAAsuD,GAAA5wF,GACA,MAAAA,IAAA,OAUA,QAAA6wF,GAAAxtE,EAAA1lB,GACA,GAAAy0E,GAAA/uD,EAAAkuC,cACAu/B,EAAAztE,EAAAgvD,aAAAD,GACA2e,EAAA,CAEA,KAAA3e,EAAA3G,OAAA,CACA,GAAAnpC,GAAAwuD,EAAAr2E,MAAAynB,WAEAI,GAAA,KAEAyuD,EAAAzuD,EAAA,GACKA,EAAA,OAELyuD,EAAAzuD,EAAA,IAKA,GAAA89B,GAAA0wB,EAAA9rC,IACAgsC,EAAA,MAAA5wB,GAAA,WAAAA,EAAA,GACA,OAAAziE,GAAA64E,UAAApW,GAAA,SAAApgE,EAAAqZ,GAIA,IAHA,GAAA43E,GACAjpE,EAAArqB,EAAAqqB,UAEAA,GAAA4oE,EAAA5oE,EAAAhmB,IAAAo+D,EAAA/mD,MAAAu3E,EAAA5wF,IAAA,CACAixF,EAAAjpE,CACA,OAGA,GAAAkpE,KAGA,OAFAA,GAAAF,GAAArzF,EAAAqE,IAAAowE,EAAAptB,IAAA3rC,GACA63E,EAAA,EAAAF,GAAAC,IAAAjvF,IAAAo+D,EAAA/mD,GAAA,GAAA03E,EACA1tE,EAAAu9C,YAAAswB,KACG,GAGH,QAAAC,GAAArf,EAAAsf,EAAA/qE,GACA,GAAAgrE,GAAAZ,EAAA3e,EAAA/sB,QAAA,MACAusC,EAAAb,EAAA3e,EAAA/sB,QAAA,MACA2oB,EAAAoE,EAAAvgB,cAAAmc,eACAlqE,EAAAyB,KAAAiN,IAAAm/E,EAAA,GAAAA,EAAA,IACA5tF,EAAAwB,KAAAiN,IAAAo/E,EAAA,GAAAA,EAAA,IACAh3F,EAAA2K,KAAAC,IAAAmsF,EAAA,GAAAA,EAAA,IAAA7tF,EACAjJ,EAAA0K,KAAAC,IAAAosF,EAAA,GAAAA,EAAA,IAAA7tF,EACAY,EAAAgiB,EAAArkB,IAAA,6BAEAmxD,EAAA9sC,EAAArkB,IAAA,gBAAAqC,EAAA,EAAAY,KAAAC,IAAA5K,EAAAC,EAEAmzE,IACAjqE,GAAA0vD,EACA54D,GAAA,EAAA44D,IAEA3vD,GAAA2vD,EACA74D,GAAA,EAAA64D,EAGA,IAAA6nB,GAAA,GAAA1sD,GAAA5c,MACAtN,OACAZ,IACAC,IACAnJ,QACAC,WAcA,OAVA62F,KACApW,EAAA52E,MAAAspE,EAAA,oBACAp/C,EAAA9f,UAAAwsE,GACA52E,OACA9J,QACAC,WAEK8rB,IAGL20D,EAGA,QAAAuW,GAAAzhC,EAAAshC,EAAA/qE,GACA,GAAAmrE,GAAA1hC,EAAA2hC,eACAC,EAAA5hC,EAAA6hC,gBACAC,EAAAF,EAAAxvD,YACA2vD,EAAAL,EAAAtvD,YACA4vD,EAAA7sF,KAAAyF,GAAA,IACAswE,EAAA,GAAA1sD,GAAAhd,QACAlN,OACAmmD,GAAAuF,EAAAvF,GACAC,GAAAsF,EAAAtF,GACAoa,GAAAgtB,EAAA,GACAp8C,EAAAo8C,EAAA,GACAnnC,YAAAonC,EAAA,GAAAC,EACApnC,UAAAmnC,EAAA,GAAAC,EACAjtB,UAAA2sB,EAAArsB,UAaA,OATAisB,KACApW,EAAA52E,MAAAsmD,UAAAmnC,EAAA,GAAAC,EACAxjE,EAAA9f,UAAAwsE,GACA52E,OACAsmD,UAAAmnC,EAAA,GAAAC,IAEKzrE,IAGL20D,EAGA,QAAA+W,GAAA1uE,EAAA+tE,EAAA/qE,GACA,gBAAAhD,EAAAvpB,KAAAy3F,EAAAluE,EAAA+tE,EAAA/qE,GAAA8qE,EAAA9tE,EAAA+tE,EAAA/qE,GAGA,QAAA2rE,GAAAxhF,EAAA6S,EAAA4uE,GAKA,OAJA7f,GAAA/uD,EAAAkuC,cACA2gC,EAAA,MAAA9f,EAAAptB,KAAA,WAAAotB,EAAAptB,IAAA,IACAmtC,KAEAz6F,EAAA,EAAiBA,EAAA8Y,EAAA7Y,OAAA,EAAuBD,IAAA,CACxC,GAAA06F,GAAA5hF,EAAA9Y,EAAA,GACAu2F,EAAAz9E,EAAA9Y,EACAy6F,GAAAh0F,KAAA8vF,EACA,IAAAoE,KAEA,QAAAJ,GACA,UACAI,EAAAH,GAAAE,EAAAF,GACAG,EAAA,EAAAH,GAAAjE,EAAA,EAAAiE,GAEAC,EAAAh0F,KAAAk0F,EACA,MAEA,cAEA,GAAA3J,IAAAuF,EAAAiE,GAAAE,EAAAF,IAAA,EACAI,IACAD,GAAAH,GAAAI,EAAAJ,GAAAxJ,EACA2J,EAAA,EAAAH,GAAAjE,EAAA,EAAAiE,GACAI,EAAA,EAAAJ,GAAAE,EAAA,EAAAF,GACAC,EAAAh0F,KAAAk0F,GACAF,EAAAh0F,KAAAm0F,EACA,MAEA,SACAD,EAAAH,GAAAjE,EAAAiE,GACAG,EAAA,EAAAH,GAAAE,EAAA,EAAAF,GAEAC,EAAAh0F,KAAAk0F,IAMA,MADA7hF,GAAA9Y,IAAAy6F,EAAAh0F,KAAAqS,EAAA9Y,IACAy6F,EAGA,QAAAI,GAAA50F,EAAA0lB,GACA,GAAAmvE,GAAA70F,EAAAw0B,UAAA,aAEA,IAAAqgE,KAAA76F,QAAAgG,EAAAgf,QAAA,CAOA,OAFA81E,GAEA/6F,EAAA86F,EAAA76F,OAAA,EAAyCD,GAAA,EAAQA,IAEjD,GAAA86F,EAAA96F,GAAAk/E,UAAA,GACA6b,EAAAD,EAAA96F,EACA,OAIA,GAAA+6F,GAAA,gBAAApvE,EAAAvpB,KAAA,CAUA,GAAA88E,GAAA6b,EAAA7b,UACAv/D,EAAA1Z,EAAAoZ,WAAA6/D,GACAvzC,EAAAhgB,EAAA0hC,QAAA1tC,GAEAwb,EAAAvpB,EAAArL,IAAAw0F,EAAAC,MAAA,SAAAz+C,GACA,OACAwoB,MAAAp5B,EAAA6oC,cAAA7oC,EAAAygC,YAAA7vB,EAAA59C,QACAoP,MAAAwuC,EAAAxuC,SAGAktF,EAAA9/D,EAAAl7B,OACAi7F,EAAAH,EAAAG,YAAA/yF,OAEA8yF,IAAA9/D,EAAA,GAAA4pC,MAAA5pC,EAAA8/D,EAAA,GAAAl2B,QACA5pC,EAAA4yB,UACAmtC,EAAAntC,UAGA,IAEAotC,GAAAhgE,EAAA,GAAA4pC,MAFA,GAGAq2B,EAAAjgE,EAAA8/D,EAAA,GAAAl2B,MAHA,GAIAs2B,EAAAD,EAAAD,CAEA,IAAAE,EAAA,KACA,mBAGAzpF,GAAA1L,KAAAi1B,EAAA,SAAAohB,GACAA,EAAAgX,QAAAhX,EAAAwoB,MAAAo2B,GAAAE,IAEAlgE,EAAA10B,MACA8sD,OAAA0nC,EAAA9/D,EAAA8/D,EAAA,GAAA1nC,OAAA,GACAxlD,MAAAmtF,EAAA,oBAEA//D,EAAAmgE,SAEA/nC,OAAA0nC,EAAA9/D,EAAA,GAAAo4B,OAAA,GACAxlD,MAAAmtF,EAAA,mBAMA,IAAAK,GAAA,GAAA3kE,GAAAvc,eAAA,QAAA8gB,GAAA,EAGA,OAFAogE,GAAA57E,GAAAw7E,EACAI,EAAA57E,EAAA,KAAAy7E,EACAG,IA5SA,GAAA/kE,GAAAl5B,EAAA,MAIAsU,GAFA4kB,EAAAC,QAEAn5B,EAAA,OAEA25F,EAAA35F,EAAA,MAEA+gE,EAAA/gE,EAAA,MAEAk+F,EAAAl+F,EAAA,MAEAs5B,EAAAt5B,EAAA,MAEAouB,EAAApuB,EAAA,MAEAm+F,EAAAn+F,EAAA,MAEAyc,EAAA0hF,EAAA1hF,SACAD,EAAA2hF,EAAA3hF,QAEA2V,EAAAnyB,EAAA,MA0RAmjC,EAAAhR,EAAAxqB,QACA7C,KAAA,OACAwnB,KAAA,WACA,GAAA8xE,GAAA,GAAA9kE,GAAAnd,MACAkiF,EAAA,GAAA1E,EACA71F,MAAAmoB,MAAAjH,IAAAq5E,EAAApyE,OACAnoB,KAAAw6F,YAAAD,EACAv6F,KAAAy6F,WAAAH,GAEA3qE,OAAA,SAAApC,EAAAvb,EAAAkb,GACA,GAAA3C,GAAAgD,EAAA4L,iBACAhR,EAAAnoB,KAAAmoB,MACAtjB,EAAA0oB,EAAAxS,UACAmzD,EAAA3gD,EAAAjb,SAAA,oBACAooF,EAAAntE,EAAAjb,SAAA,oBACAoF,EAAA7S,EAAA64E,SAAA74E,EAAA85E,eAAA,GACAgc,EAAA,UAAApwE,EAAAvpB,KACA45F,EAAA56F,KAAA66F,UACAN,EAAAv6F,KAAAw6F,YACAM,EAAA96F,KAAA+6F,UACAC,EAAAh7F,KAAAi7F,SACAX,EAAAt6F,KAAAy6F,WACAnC,EAAA/qE,EAAArkB,IAAA,aACAgyF,GAAAR,EAAAh4D,UACAy4D,EAAApD,EAAAxtE,EAAA1lB,GACAoyF,EAAA1pE,EAAArkB,IAAA,cAEAkyF,EAAAnE,IAAA0D,IAAAptE,EAAArkB,IAAA,kBAAAlJ,KAAAq7F,qBAAAx2F,EAAA0lB,GAGA2pE,EAAAl0F,KAAAm0F,KACAD,MAAAhV,kBAAA,SAAAnyE,EAAAwT,GACAxT,EAAAuuF,SACAnzE,EAAAsG,OAAA1hB,GACAmnF,EAAAjV,iBAAA1+D,EAAA,SAIA02E,GACAsD,EAAA9rE,SAGAtG,EAAAjH,IAAAo5E,EAEA,IAAAtvD,IAAA2vD,GAAAptE,EAAArkB,IAAA,OAEA4xF,IAAAF,EAAA55F,OAAAupB,EAAAvpB,MAAAgqC,IAAAhrC,KAAAu7F,OAiBAL,IAAAF,EAEAA,EAAAh7F,KAAAw7F,YAAA9jF,EAAAyjF,EAAA5wE,EAAA+tE,GACO0C,IAAAE,IAEPZ,EAAA7rE,OAAAusE,GACAA,EAAAh7F,KAAAi7F,SAAA,MAIAX,EAAAhY,YAAA2W,EAAA1uE,GAAA,EAAAgD,IAGA0pE,GAAAsD,EAAAr1B,WAAArgE,EAAAu2F,GAGAv2F,EAAAq6E,kBAAA,SAAAnyE,GACAA,EAAAwI,eAAA,KAIAgiF,EAAAv3F,KAAAy7F,iBAAAN,IAAA5D,EAAAv3F,KAAA07F,QAAAhkF,KACA4gF,EACAt4F,KAAA27F,iBAAA92F,EAAAs2F,EAAA5wE,EAAA2C,EAAA8d,IAGAA,IAEAtzB,EAAAwhF,EAAAxhF,EAAA6S,EAAAygB,GACAmwD,EAAAjC,EAAAiC,EAAA5wE,EAAAygB,IAGA8vD,EAAA77D,UACAvnB,WAEAsjF,KAAA/7D,UACAvnB,SACAyjF,wBArDAlE,GAAAsD,EAAAr1B,WAAArgE,EAAAu2F,GAEApwD,IAEAtzB,EAAAwhF,EAAAxhF,EAAA6S,EAAAygB,GACAmwD,EAAAjC,EAAAiC,EAAA5wE,EAAAygB,IAGA8vD,EAAA96F,KAAA47F,aAAAlkF,EAAA6S,EAAA+tE,GAEA4C,IACAF,EAAAh7F,KAAAw7F,YAAA9jF,EAAAyjF,EAAA5wE,EAAA+tE,IAGAgC,EAAAhY,YAAA2W,EAAA1uE,GAAA,EAAAgD,IA6CA,IAAAsuE,GAAApC,EAAA50F,EAAA0lB,IAAA1lB,EAAAw0B,UAAA,QACAyhE,GAAAj3B,SAAArzD,EAAA1M,SACAoqE,EAAA3E,gBACAr8D,KAAA,OACAD,OAAA4uF,EACAC,SAAA,UAEA,IAAA5P,GAAA3+D,EAAArkB,IAAA,SAQA,IAPAgjF,EAAAwL,EAAAnqE,EAAArkB,IAAA,WACA4xF,EAAA77D,UACAitD,SACA8K,eAAAzpE,EAAArkB,IAAA,kBACAiuF,aAAA5pE,EAAArkB,IAAA,kBAGA8xF,EAAA,CACA,GAAA9rE,GAAArqB,EAAAqqB,UACA6sE,EAAA,CAOA,IANAf,EAAAn3B,SAAArzD,EAAA1M,SAAA42F,EAAAlxB,gBACAt8D,KAAA2uF,EACAx1B,QAAA,GACAy1B,SAAA,WAGA5sE,EAAA,CAEA6sE,EAAArE,EADAxoE,EAAAg3C,UACAh9D,IAAA,WAGA8xF,EAAA/7D,UACAitD,SACA6P,kBACA/E,eAAAzpE,EAAArkB,IAAA,kBACAiuF,aAAA5pE,EAAArkB,IAAA,kBAIAlJ,KAAAm0F,MAAAtvF,EAEA7E,KAAA66F,UAAAtwE,EACAvqB,KAAAy7F,iBAAAN,EACAn7F,KAAA07F,QAAAhkF,EACA1X,KAAAu7F,MAAAvwD,GAEAtc,QAAA,aACAo3C,UAAA,SAAAv4C,EAAAvb,EAAAkb,EAAAnQ,GACA,GAAAlY,GAAA0oB,EAAAxS,UACAhG,EAAAuV,EAAAxN,eAAAjY,EAAAkY,EAEA,MAAAhI,YAAA/L,SAAA,MAAA+L,MAAA,GACA,GAAA07D,GAAA5rE,EAAAgjE,iBAAA9yD,EAEA,KAAA07D,EAAA,CAEA,GAAA0kB,GAAAtwF,EAAA85E,cAAA5pE,EAEA,KAAAogF,EAEA,MAGA1kB,GAAA,GAAAxT,GAAAp4D,EAAAkQ,GACA07D,EAAApkE,SAAA8oF,EACA1kB,EAAAzK,KAAAz4C,EAAArkB,IAAA,UAAAqkB,EAAArkB,IAAA,MACAunE,EAAAxgD,OAAArM,MAAAuxE,EAAA,KAAAvxE,MAAAuxE,EAAA,IACA1kB,EAAA6qB,QAAA,EACAz2F,EAAAo6E,iBAAAlqE,EAAA07D,GAEAA,EAAA9K,qBAAA,GACA3lE,KAAAmoB,MAAAjH,IAAAuvD,GAGAA,EAAA3K,gBAGAz3C,GAAAlxB,UAAA2oE,UAAAhpE,KAAAkD,KAAAutB,EAAAvb,EAAAkb,EAAAnQ,IAGAgpD,SAAA,SAAAx4C,EAAAvb,EAAAkb,EAAAnQ,GACA,GAAAlY,GAAA0oB,EAAAxS,UACAhG,EAAAuV,EAAAxN,eAAAjY,EAAAkY,EAEA,UAAAhI,MAAA,GACA,GAAA07D,GAAA5rE,EAAAgjE,iBAAA9yD,EAEA07D,KACAA,EAAA6qB,QACAz2F,EAAAo6E,iBAAAlqE,EAAA,MACA/U,KAAAmoB,MAAAsG,OAAAgiD,IAEAA,EAAA1K,gBAOA13C,GAAAlxB,UAAA4oE,SAAAjpE,KAAAkD,KAAAutB,EAAAvb,EAAAkb,EAAAnQ,IASA6+E,aAAA,SAAAlkF,GACA,GAAAojF,GAAA96F,KAAA+6F,SAiBA,OAfAD,IACA96F,KAAAy6F,WAAAhsE,OAAAqsE,GAGAA,EAAA,GAAAniF,IACArN,OACAoM,UAEAwT,QAAA,EACA9c,GAAA,KAGApO,KAAAy6F,WAAAv5E,IAAA45E,GAEA96F,KAAA+6F,UAAAD,EACAA,GASAU,YAAA,SAAA9jF,EAAAyjF,GACA,GAAAH,GAAAh7F,KAAAi7F,QAiBA,OAfAD,IACAh7F,KAAAy6F,WAAAhsE,OAAAusE,GAGAA,EAAA,GAAAtiF,IACApN,OACAoM,SACAyjF,mBAEAjwE,QAAA,IAGAlrB,KAAAy6F,WAAAv5E,IAAA85E,GAEAh7F,KAAAi7F,SAAAD,EACAA,GAMAK,qBAAA,SAAAx2F,EAAA0lB,GACA,GAAAyxE,GAAAzxE,EAAA0xE,eAAA,aAEA,IAAAD,KAAAvlB,eACA,MAAAjmE,GAAA9P,KAAAs7F,EAAAvlB,eAAAulB,IAQAL,iBAAA,SAAA92F,EAAAs2F,EAAA5wE,EAAA2C,EAAA8d,GACA,GAAA8vD,GAAA96F,KAAA+6F,UACAC,EAAAh7F,KAAAi7F,SACA1tE,EAAA1oB,EAAAqhE,UACAlH,EAAAo7B,EAAAp6F,KAAAm0F,MAAAtvF,EAAA7E,KAAAy7F,iBAAAN,EAAAn7F,KAAA66F,UAAAtwE,GACAgjD,EAAAvO,EAAAuO,QACA2uB,EAAAl9B,EAAAk9B,iBACArlD,EAAAmoB,EAAAnoB,KACAslD,EAAAn9B,EAAAm9B,aAEAnxD,KAEAuiC,EAAA2rB,EAAAl6B,EAAAuO,QAAAhjD,EAAAygB,GACAkxD,EAAAhD,EAAAl6B,EAAAk9B,iBAAA3xE,EAAAygB,GACA6L,EAAAqiD,EAAAl6B,EAAAnoB,KAAAtsB,EAAAygB,GACAmxD,EAAAjD,EAAAl6B,EAAAm9B,cAAA5xE,EAAAygB,IAMA8vD,EAAAxvF,MAAA8wF,SAAAp9B,EAAAuO,QACAutB,EAAAxvF,MAAAoM,OAAA61D,EACA/3C,EAAA/f,YAAAqlF,GACAxvF,OACAoM,OAAAm/B,IAEKtpB,GAELytE,IACAA,EAAA/7D,UACAvnB,OAAA61D,EACA4tB,gBAAAe,IAEA1mE,EAAA/f,YAAAulF,GACA1vF,OACAoM,OAAAm/B,EACAskD,gBAAAgB,IAEO5uE,GAMP,QAHA8uE,MACAC,EAAAt9B,EAAAh/C,OAEAphB,EAAA,EAAmBA,EAAA09F,EAAAz9F,OAAuBD,IAAA,CAG1C,SAFA09F,EAAA19F,GAAA4zD,IAEA,CACA,GAAAzlD,GAAAlI,EAAAgjE,iBAAAy0B,EAAA19F,GAAA29F,KAEAxvF,IACAsvF,EAAAh3F,MACA0H,KACAyvF,MAAA59F,KAOAk8F,EAAApY,WAAAoY,EAAApY,UAAA7jF,QACAi8F,EAAApY,UAAA,GAAAkE,OAAA,WACA,OAAAhoF,GAAA,EAAuBA,EAAAy9F,EAAAx9F,OAA4BD,IAAA,CACnDy9F,EAAAz9F,GAAAmO,GACAyI,KAAA,WAAAslF,EAAAxvF,MAAA8wF,SAAAC,EAAAz9F,GAAA49F,YAKA/tE,OAAA,SAAAzc,GACA,GAAAmW,GAAAnoB,KAAAmoB,MACA+rE,EAAAl0F,KAAAm0F,KAEAn0F,MAAAy6F,WAAA1rC,YAEA/uD,KAAAw6F,YAAA/rE,QAAA,GAGAylE,KAAAhV,kBAAA,SAAAnyE,EAAAwT,GACAxT,EAAAuuF,SACAnzE,EAAAsG,OAAA1hB,GACAmnF,EAAAjV,iBAAA1+D,EAAA,SAGAvgB,KAAA+6F,UAAA/6F,KAAAi7F,SAAAj7F,KAAA66F,UAAA76F,KAAA07F,QAAA17F,KAAAy7F,iBAAAz7F,KAAAm0F,MAAA,OAIAn4F,GAAAC,QAAAojC,GvFoosBMo9D,KACA,SAAUzgG,EAAQC,GwF7xtBxB,QAAA67F,GAAA5wF,GACA,MAAAA,IAAA,OAGA,QAAAw1F,GAAAnyE,EAAA1lB,EAAA0b,GAUA,IATA,GAKA43E,GALA7e,EAAA/uD,EAAAkuC,cACAu/B,EAAAztE,EAAAgvD,aAAAD,GACA2e,EAAA3e,EAAA3G,OAAA,EAAAqlB,EAAAr2E,MAAAynB,YAAA,GACAk+B,EAAA0wB,EAAA9rC,IACAgsC,EAAA,MAAA5wB,GAAA,WAAAA,EAAA,IAEAp4C,EAAArqB,EAAAqqB,UACAhoB,EAAArC,EAAAqE,IAAAo+D,EAAA/mD,GAEA2O,GAAA4oE,EAAA5oE,EAAAhmB,IAAAo+D,EAAA/mD,MAAAu3E,EAAA5wF,IAAA,CACAixF,EAAAjpE,CACA,OAGA,GAAAkpE,KAGA,OAFAA,GAAAF,GAAArzF,EAAAqE,IAAAowE,EAAAptB,IAAA3rC,GACA63E,EAAA,EAAAF,GAAAC,IAAAjvF,IAAAo+D,EAAA/mD,GAAA,GAAA03E,EACA1tE,EAAAu9C,YAAAswB,GAwBA,QAAAuE,GAAAzI,EAAAvhC,GACA,GAAAiqC,KAkBA,OAjBAjqC,GAAAqM,KAAAk1B,GAAAhzE,IAAA,SAAAX,GACAq8E,EAAAv3F,MACAmtD,IAAA,IACAjyC,UAEGkL,OAAA,SAAA2qE,EAAAE,GACHsG,EAAAv3F,MACAmtD,IAAA,IACAjyC,IAAA+1E,EACAiG,KAAAnG,MAEG3nE,OAAA,SAAAlO,GACHq8E,EAAAv3F,MACAmtD,IAAA,IACAjyC,UAEGg0E,UACHqI,EAGA,QAAAv9D,GAAA60D,EAAAvhC,EAAAkqC,EAAAC,EAAAC,EAAAC,GAiBA,OAhBAh+B,GAAA29B,EAAAzI,EAAAvhC,GAMAsqC,KACAC,KAEAC,KACAC,KACAp9E,KACAq9E,KACAC,KACAjgB,EAAA2f,EAAA/+E,WAEArf,EAAA,EAAiBA,EAAAogE,EAAAngE,OAAiBD,IAAA,CAClC,GAAA2+F,GAAAv+B,EAAApgE,GACA4+F,GAAA,CAGA,QAAAD,EAAA/qC,KACA,QACA,GAAAirC,GAAAvJ,EAAAvV,cAAA4e,EAAAh9E,KACA+4E,EAAA3mC,EAAAgsB,cAAA4e,EAAAhB,OAEA34E,MAAA65E,EAAA,KAAA75E,MAAA65E,EAAA,OACAA,EAAAnE,EAAAvyF,SAGAk2F,EAAA53F,KAAAo4F,GACAP,EAAA73F,KAAAi0F,GACA6D,EAAA93F,KAAAw3F,EAAAU,EAAAh9E,MACA68E,EAAA/3F,KAAAy3F,EAAAS,EAAAhB,OACAe,EAAAj4F,KAAAstD,EAAAvzC,YAAAm+E,EAAAhB,MACA,MAEA,SACA,GAAAh8E,GAAAg9E,EAAAh9E,GACA08E,GAAA53F,KAAA03F,EAAAj1B,aAAAnV,EAAAzpD,IAAAm0E,EAAA,GAAA98D,GAAA,GAAAoyC,EAAAzpD,IAAAm0E,EAAA,GAAA98D,GAAA,MACA28E,EAAA73F,KAAAstD,EAAAgsB,cAAAp+D,GAAAxZ,SACAo2F,EAAA93F,KAAAq3F,EAAAK,EAAApqC,EAAApyC,IACA68E,EAAA/3F,KAAAy3F,EAAAv8E,IACA+8E,EAAAj4F,KAAAstD,EAAAvzC,YAAAmB,GACA,MAEA,SACA,GAAAA,GAAAg9E,EAAAh9E,IACAs8D,EAAAqX,EAAA90E,YAAAmB,EAGAs8D,KAAAt8D,GACA08E,EAAA53F,KAAA6uF,EAAAvV,cAAAp+D,IACA28E,EAAA73F,KAAA23F,EAAAl1B,aAAAosB,EAAAhrF,IAAAm0E,EAAA,GAAA98D,GAAA,GAAA2zE,EAAAhrF,IAAAm0E,EAAA,GAAA98D,GAAA,MACA48E,EAAA93F,KAAAw3F,EAAAt8E,IACA68E,EAAA/3F,KAAAq3F,EAAAM,EAAA9I,EAAA3zE,IACA+8E,EAAAj4F,KAAAw3E,IAEA2gB,GAAA,EAMAA,IACAx9E,EAAA3a,KAAAk4F,GACAF,EAAAh4F,KAAAg4F,EAAAx+F,SAMAw+F,EAAA35E,KAAA,SAAA1C,EAAAC,GACA,MAAAq8E,GAAAt8E,GAAAs8E,EAAAr8E,IAQA,QANAy8E,MACAC,KACAC,KACAC,KACAC,KAEAl/F,EAAA,EAAiBA,EAAAy+F,EAAAx+F,OAA0BD,IAAA,CAC3C,GAAA2hB,GAAA88E,EAAAz+F,EACA8+F,GAAA9+F,GAAAq+F,EAAA18E,GACAo9E,EAAA/+F,GAAAs+F,EAAA38E,GACAq9E,EAAAh/F,GAAAu+F,EAAA58E,GACAs9E,EAAAj/F,GAAAw+F,EAAA78E,GACAu9E,EAAAl/F,GAAAohB,EAAAO,GAGA,OACAgtD,QAAAmwB,EACA7mD,KAAA8mD,EACAzB,iBAAA0B,EACAzB,cAAA0B,EACA79E,OAAA89E,GAIA9hG,EAAAC,QAAAojC,GxFsytBM0+D,KACA,SAAU/hG,EAAQC,EAASC,GyFl8tBjC,QAAA8hG,GAAAxhD,GACA,MAAA54B,OAAA44B,EAAA,KAAA54B,MAAA44B,EAAA,IAGA,QAAAyhD,GAAAhiE,EAAAvkB,EAAAi2C,EAAAuwC,EAAAC,EAAA7V,EAAA8V,EAAAC,EAAAnS,EAAA8K,EAAAG,GAIA,OAHAmH,GAAA,EACA/9E,EAAAotC,EAEA5pB,EAAA,EAAiBA,EAAAm6D,EAAYn6D,IAAA,CAC7B,GAAAyY,GAAA9kC,EAAA6I,EAEA,IAAAA,GAAA49E,GAAA59E,EAAA,EACA,KAGA,IAAAy9E,EAAAxhD,GAAA,CACA,GAAA26C,EAAA,CACA52E,GAAA+nE,CACA,UAGA,MAGA,GAAA/nE,IAAAotC,EACA1xB,EAAAqsD,EAAA,qBAAA9rC,EAAA,GAAAA,EAAA,IACA+hD,EAAAC,EAAAhiD,OAEA,IAAA0vC,EAAA,GACA,GAAAuS,GAAAl+E,EAAA+nE,EACAoW,EAAAhnF,EAAA+mF,EAEA,IAAAtH,EAEA,KAAAuH,GAAAV,EAAAtmF,EAAA+mF,KACAA,GAAAnW,EACAoW,EAAAhnF,EAAA+mF,EAIA,IAAAE,GAAA,GACAC,EAAAlnF,EAAA4mF,GACAI,EAAAhnF,EAAA+mF,EAEA,KAAAC,GAAAV,EAAAU,GACAH,EAAAjS,EAAA9vC,OACS,CAETwhD,EAAAU,KAAAvH,IACAuH,EAAAliD,GAGAnc,EAAA/e,IAAAP,EAAA29E,EAAAE,EACA,IAAAC,GACAC,CAEA,UAAA9H,GAAA,MAAAA,EAAA,CACA,GAAA9qC,GAAA,MAAA8qC,EAAA,GACA6H,GAAA1yF,KAAAuK,IAAA8lC,EAAA0P,GAAA0yC,EAAA1yC,IACA4yC,EAAA3yF,KAAAuK,IAAA8lC,EAAA0P,GAAAwyC,EAAAxyC,QAEA2yC,GAAAx+D,EAAA/d,KAAAk6B,EAAAoiD,GACAE,EAAAz+D,EAAA/d,KAAAk6B,EAAAkiD,EAIAC,GAAAG,KAAAD,GACAx9E,EAAAirE,EAAA9vC,EAAAz7B,GAAAmrE,GAAA,EAAAyS,IAIA7U,EAAA0U,IAAAH,GACAtU,EAAAyU,IAAAJ,GACAtU,EAAAwC,IAAA+R,GACAtU,EAAAuC,IAAA8R,GACAniE,EAAAm1B,cAAAotC,EAAA,GAAAA,EAAA,GAAAlS,EAAA,GAAAA,EAAA,GAAA9vC,EAAA,GAAAA,EAAA,IAEAn7B,EAAAm9E,EAAAhiD,EAAAz7B,EAAAmrE,EAAAyS,OAEA1iE,GAAA+0B,OAAAxU,EAAA,GAAAA,EAAA,GAIA8hD,GAAA/9E,EACAA,GAAA+nE,EAGA,MAAAvkD,GAGA,QAAAg7D,GAAArnF,EAAA20E,GACA,GAAA2S,IAAA/3E,SACAg4E,IAAAh4E,SAEA,IAAAolE,EACA,OAAAztF,GAAA,EAAmBA,EAAA8Y,EAAA7Y,OAAmBD,IAAA,CACtC,GAAAu2F,GAAAz9E,EAAA9Y,EAEAu2F,GAAA,GAAA6J,EAAA,KACAA,EAAA,GAAA7J,EAAA,IAGAA,EAAA,GAAA6J,EAAA,KACAA,EAAA,GAAA7J,EAAA,IAGAA,EAAA,GAAA8J,EAAA,KACAA,EAAA,GAAA9J,EAAA,IAGAA,EAAA,GAAA8J,EAAA,KACAA,EAAA,GAAA9J,EAAA,IAKA,OACA/7E,IAAAizE,EAAA2S,EAAAC,EACA7yF,IAAAigF,EAAA4S,EAAAD,GAtIA,GAAAx1F,GAAAtN,EAAA,MAEAmkC,EAAAnkC,EAAA,MAEAgjG,EAAAhjG,EAAA,MAGA4tF,EAAAzpD,EAAAjnB,IACA2wE,EAAA1pD,EAAAj0B,IACAiV,EAAAgf,EAAAhf,YACAk9E,EAAAl+D,EAAAvf,KAEAC,KACAy9E,KACAlS,KA4HA3zE,EAAAnP,EAAA3F,QACA7C,KAAA,cACAsK,OACAoM,UACAw0E,OAAA,EACAG,kBAAA,EACA2K,eAAA,KACAG,cAAA,GAEAl2F,OACAiM,KAAA,KACAD,OAAA,QAEA+uB,MAAAkjE,EAAA11F,EAAArM,UAAA6+B,OACAwB,UAAA,SAAAvB,EAAA3wB,GACA,GAAAoM,GAAApM,EAAAoM,OACA9Y,EAAA,EACAgE,EAAA8U,EAAA7Y,OACA4D,EAAAs8F,EAAArnF,EAAApM,EAAA+gF,iBAEA,IAAA/gF,EAAA6rF,aAAA,CAEA,KAAYv0F,EAAA,GACZo7F,EAAAtmF,EAAA9U,EAAA,IADqBA,KAMrB,KAAYhE,EAAAgE,GACZo7F,EAAAtmF,EAAA9Y,IADqBA,MAOrB,KAAAA,EAAAgE,GACAhE,GAAAq/F,EAAAhiE,EAAAvkB,EAAA9Y,EAAAgE,IAAA,EAAAH,EAAA2W,IAAA3W,EAAA2J,IAAAd,EAAA4gF,OAAA5gF,EAAA0rF,eAAA1rF,EAAA6rF,cAAA,KAIAz+E,EAAAlP,EAAA3F,QACA7C,KAAA,aACAsK,OACAoM,UAEAyjF,mBACAjP,OAAA,EACA6P,gBAAA,EACA1P,kBAAA,EACA2K,eAAA,KACAG,cAAA,GAEAn7D,MAAAkjE,EAAA11F,EAAArM,UAAA6+B,OACAwB,UAAA,SAAAvB,EAAA3wB,GACA,GAAAoM,GAAApM,EAAAoM,OACAyjF,EAAA7vF,EAAA6vF,gBACAv8F,EAAA,EACAgE,EAAA8U,EAAA7Y,OACAm4F,EAAA1rF,EAAA0rF,eACAznC,EAAAwvC,EAAArnF,EAAApM,EAAA+gF,kBACA8S,EAAAJ,EAAA5D,EAAA7vF,EAAA+gF,iBAEA,IAAA/gF,EAAA6rF,aAAA,CAEA,KAAYv0F,EAAA,GACZo7F,EAAAtmF,EAAA9U,EAAA,IADqBA,KAMrB,KAAYhE,EAAAgE,GACZo7F,EAAAtmF,EAAA9Y,IADqBA,MAOrB,KAAAA,EAAAgE,GAAA,CACA,GAAAmhC,GAAAk6D,EAAAhiE,EAAAvkB,EAAA9Y,EAAAgE,IAAA,EAAA2sD,EAAAn2C,IAAAm2C,EAAAnjD,IAAAd,EAAA4gF,OAAA8K,EAAA1rF,EAAA6rF,aACA8G,GAAAhiE,EAAAk/D,EAAAv8F,EAAAmlC,EAAA,EAAAA,EAAAnhC,GAAA,EAAAu8F,EAAA/lF,IAAA+lF,EAAA/yF,IAAAd,EAAAywF,gBAAA/E,EAAA1rF,EAAA6rF,cACAv4F,GAAAmlC,EAAA,EACA9H,EAAA+1B,eAIA/1D,GAAA0c,WACA1c,EAAAyc,WzFw9tBM0mF,KACA,SAAUpjG,EAAQC,EAASC,G0FzruBjCA,EAAA,MAEAA,EAAA,O1F+ruBMmjG,KACA,SAAUrjG,EAAQC,EAASC,G2FlsuBjC,GAAAi2E,GAAAj2E,EAAA,MAEAsU,EAAAtU,EAAA,MAEA61E,EAAA71E,EAAA,MAEAojG,EAAApjG,EAAA,KAEAA,GAAA,MAEAA,EAAA,MAEAA,EAAA,MAKAi2E,EAAA3/C,qBAAA,SAAAtgB,GAEA,GAAAA,EAAA,GACAA,EAAAggE,aAAA,IAAAhgE,EAAAggE,YAAArzE,UAAAqT,EAAAggE,eACA,IAAAqtB,GAAArtF,EAAAggE,YAAAqtB,IAIAA,KAAA/uF,EAAA/M,QAAA87F,KACArtF,EAAAggE,YAAAqtB,aAMAptB,EAAAx/C,kBAAAw/C,EAAAt8C,SAAAC,UAAAE,UAAA,SAAAhkB,EAAAkb,GAGAlb,EAAA6e,aAAA,eAAAq4B,iBAAA6oB,EAAAhpB,QAAA/2C,EAAAkb,KAGAilD,EAAAl/C,gBACAjyB,KAAA,oBACAurB,MAAA,oBACAd,OAAA,sBACC6zE,I3FwsuBKE,KACA,SAAUxjG,EAAQC,EAASC,G4FnvuBjC,GAAAi2E,GAAAj2E,EAAA,MAEAujG,EAAAttB,EAAAh+C,sBACAnzB,KAAA,cACAkoD,iBAAA,KACA9hB,eAEAwkB,KAAA,OAEA8zC,UAAA,KAEAnvE,OAAA,EACAD,EAAA,GACAtvB,KAAA,OAGAkpD,MAAA,EACAN,gBAAA,EACArsD,MAAA,KACAyiB,OAAA,KAaAu/E,QAGAx1E,UAAA,KACA41E,wBAAA,IACA7zC,WACAn/C,MAAA,OACAnL,MAAA,EACAR,KAAA,SAEA4+F,aACAjzF,MAAA,yBAEAg/C,OACAC,MAAA,EACAvrC,UAAA,KAEAgD,UAAA,OAEA0pB,OAAA,EACApgC,MAAA,OACAvL,SAAA,SACAu2B,gBAAA,OAEAkoE,YAAA,KACAC,YAAA,EACA31B,WAAA,EACAC,YAAA,QAMA21B,QACAn0C,MAAA,EACAo0C,KAAA,2MAEA3hC,KAAA,GAEAtxB,OAAA,GAGApgC,MAAA,OACAw9D,WAAA,EACAC,YAAA,OACAC,cAAA,EACAC,cAAA,EAEA1hD,SAAA,OAIAyW,EAAAogE,CACAzjG,GAAAC,QAAAojC,G5FyvuBM4gE,KACA,SAAUjkG,EAAQC,EAASC,G6F/0uBjC,GAAAi2E,GAAAj2E,EAAA,MAEAgkG,EAAAhkG,EAAA,MAEAikG,EAAAhuB,EAAA99C,qBACArzB,KAAA,cACA2uB,OAAA,SAAA45B,EAAAv3C,EAAAkb,GACA,GAAAo8B,GAAAt3C,EAAA6e,aAAA,WACA6uE,EAAAn2C,EAAArgD,IAAA,cAAAogD,KAAApgD,IAAA,+BAGAg3F,GAAA5sE,SAAA,cAAApG,EAAA,SAAA+7C,EAAAl6D,EAAA2iB,GAEA,SAAAguE,IAAA,UAAAz2B,GAAAy2B,EAAAv7F,QAAA8kE,IAAA,IACAv3C,GACA1wB,KAAA,oBACAioE,cACAv+D,EAAAqE,KAAA2qC,QACA/uC,EAAAoE,KAAA+qC,aASArrB,OAAA,SAAAzc,EAAAkb,GACAgzE,EAAAh3B,WAAAh8C,EAAAyJ,QAAA,eACAwpE,EAAAv6D,WAAA5lC,KAAAmqB,OAAA,SAAApkB,YAMA2oB,QAAA,SAAA1c,EAAAkb,GACAgzE,EAAAh3B,WAAA,cAAAh8C,GACAizE,EAAAv6D,WAAA5lC,KAAAmqB,OAAA,UAAApkB,cAGAs5B,EAAA8gE,CACAnkG,GAAAC,QAAAojC,G7Fq1uBM+gE,KACA,SAAUpkG,EAAQC,EAASC,G8Fz2uBjC,QAAAmkG,MAmaA,QAAA5qF,GAAAy9E,EAAAoN,EAAAvzF,EAAApO,GAEA4hG,EAAAr3F,EAAA6D,GAAAyzF,SAAA7hG,KACAuK,EAAA6D,GAAAyzF,SAAA7hG,EACA2hG,EAAA9qE,EAAA/f,YAAA1I,EAAApO,EAAAu0F,IAAAnmF,EAAAwI,gBAAAxI,EAAAyI,KAAA7W,KAIA,QAAA4hG,GAAAE,EAAAC,GACA,GAAAlwF,EAAAlN,SAAAm9F,IAAAjwF,EAAAlN,SAAAo9F,GAAA,CACA,GAAAC,IAAA,CAIA,OAHAnwF,GAAA1L,KAAA47F,EAAA,SAAA/kF,EAAA5c,GACA4hG,KAAAJ,EAAAE,EAAA1hG,GAAA4c,OAEAglF,EAEA,MAAAF,KAAAC,EAIA,QAAAE,GAAAC,EAAAh3C,GACAg3C,EAAAh3C,EAAA3gD,IAAA,+BAGA,QAAA43F,GAAAC,GACA,OACA10F,SAAA00F,EAAA10F,SAAAtF,QACAkQ,SAAA8pF,EAAA9pF,UAAA,GAIA,QAAA+pF,GAAA74E,EAAA0hC,EAAA3+B,GACA,GAAAoF,GAAAu5B,EAAA3gD,IAAA,KACAqnB,EAAAs5B,EAAA3gD,IAAA,SACAif,MAAA1Z,SAAA,SAAA1B,GACA,UAAAA,EAAA/L,OACA,MAAAsvB,IAAAvjB,EAAAujB,KACA,MAAAC,IAAAxjB,EAAAwjB,UACAxjB,EAAAme,YA/dA,GAAA1a,GAAAtU,EAAA,MAEA+lC,EAAA/lC,EAAA,MAEAs5B,EAAAt5B,EAAA,MAEA61E,EAAA71E,EAAA,MAEA+kG,EAAA/kG,EAAA,MAEAglG,EAAAhlG,EAAA,MAEAouB,EAAApuB,EAAA,MAEAgN,EAAAohB,EAAA7J,aACAle,EAAAiO,EAAAjO,MACA7B,EAAA8P,EAAA9P,IAQA2/F,GAAAljG,WAIAgkG,OAAA,KAKAC,gBAAA,KAKAC,QAAA,KAKAC,WAAA,EAKAC,WAAA,KAKAC,YAAA,KAKAC,aAAA,KAOAC,mBAAA,GAKA/xE,OAAA,SAAAy8B,EAAAvC,EAAA38B,EAAAykD,GACA,GAAAp0E,GAAAssD,EAAA3gD,IAAA,SACA8W,EAAA6pC,EAAA3gD,IAAA,SASA,IANAlJ,KAAA2hG,WAAAv1C,EACApsD,KAAA4hG,kBAAA/3C,EACA7pD,KAAAspB,KAAA4D,EAIAykD,GAAA3xE,KAAAuhG,aAAAhkG,GAAAyC,KAAAwhG,cAAAxhF,EAAA,CAIAhgB,KAAAuhG,WAAAhkG,EACAyC,KAAAwhG,YAAAxhF,CACA,IAAAmI,GAAAnoB,KAAAmhG,OACApB,EAAA//F,KAAAqhG,OAEA,KAAArhF,GAAA,SAAAA,EAIA,MAFAmI,MAAAk6D,YACA0d,KAAA1d,OAIAl6D,MAAAyjC,OACAm0C,KAAAn0C,MAEA,IAAA8d,KACA1pE,MAAA6hG,aAAAn4B,EAAAnsE,EAAA6uD,EAAAvC,EAAA38B,EAEA,IAAA40E,GAAAp4B,EAAAo4B,UAEAA,KAAA9hG,KAAAohG,iBACAphG,KAAAk7B,MAAAhO,GAGAltB,KAAAohG,gBAAAU,CACA,IAAAxB,GAAAtgG,KAAA+hG,eAAA/hG,KAAAgiG,mBAAA51C,EAAAvC,EAEA,IAAA1hC,EAKK,CACL,GAAA85E,GAAAzxF,EAAAtK,MAAAuP,EAAAo0C,EAAAy2C,EACAtgG,MAAAkiG,gBAAA/5E,EAAAuhD,EAAAu4B,EAAAp4C,GACA7pD,KAAAmiG,cAAAh6E,EAAAuhD,EAAAu4B,EAAAp4C,OAPA1hC,GAAAnoB,KAAAmhG,OAAA,GAAA3rE,GAAAnd,MACArY,KAAAoiG,gBAAAj6E,EAAAuhD,EAAAtd,EAAAvC,GACA7pD,KAAAqiG,cAAAl6E,EAAAuhD,EAAAtd,EAAAvC,GACA38B,EAAAyJ,QAAAzV,IAAAiH,EAOA64E,GAAA74E,EAAA0hC,GAAA,GAEA7pD,KAAAsiG,cAAA/kG,KAMAkxB,OAAA,SAAAvB,GACAltB,KAAAk7B,MAAAhO,IAMAwB,QAAA,SAAAxB,GACAltB,KAAAk7B,MAAAhO,IAMA80E,mBAAA,SAAA51C,EAAAvC,GACA,GAAA9/B,GAAA8/B,EAAA3gD,IAAA,aACAqhC,EAAA6hB,EAAA7hB,KACAg4D,EAAA,aAAAh4D,EAAAvpC,KACAwhG,EAAA34C,EAAA3gD,IAAA,OAEA,KAAAs5F,IAAAD,EACA,QAGA,aAAAx4E,GAAA,MAAAA,EAAA,CACA,GAAA23E,GAAA1hG,KAAA0hG,kBAEA,IAAAa,GAAAh4D,EAAAmqC,eAAAgtB,EACA,QAMA,IAAAc,EAAA,CACA,GAAAr2C,GAAA4lB,EAAArlB,YAAAN,GAAAD,gBACAwoB,EAAApqC,EAAAnB,WAEA,OAAAj9B,MAAAuK,IAAAi+D,EAAA,GAAAA,EAAA,IAAAxoB,EAAAu1C,EAGA,SAGA,WAAA33E,GAOA83E,aAAA,SAAAn4B,EAAAnsE,EAAA6uD,EAAAvC,EAAA38B,KAMAk1E,gBAAA,SAAAj6E,EAAAuhD,EAAAtd,EAAAvC,GACA,GAAA44C,GAAA/4B,EAAAg5B,OAEA,IAAAD,EAAA,CACA,GAAAE,GAAAz5F,EAAAif,GAAAw6E,UAAA,GAAAntE,GAAAitE,EAAAzhG,MAAAuB,EAAAmnE,EAAAg5B,SACAv6E,GAAAjH,IAAAyhF,KAOAN,cAAA,SAAAl6E,EAAAuhD,EAAAtd,EAAAvC,GACA,GAAA6f,EAAA/d,MAAA,CACA,GAAAk1C,GAAA33F,EAAAif,GAAA04E,QAAA,GAAArrE,GAAA5c,KAAArW,EAAAmnE,EAAA/d,OACAxjC,GAAAjH,IAAA2/E,GACAD,EAAAC,EAAAh3C,KAOAq4C,gBAAA,SAAA/5E,EAAAuhD,EAAAj0D,GACA,GAAAktF,GAAAz5F,EAAAif,GAAAw6E,SAEAA,KACAA,EAAA73F,SAAA4+D,EAAAg5B,QAAAzhG,OACAwU,EAAAktF,GACAr3F,MAAAo+D,EAAAg5B,QAAAp3F,UAQA62F,cAAA,SAAAh6E,EAAAuhD,EAAAj0D,EAAAo0C,GACA,GAAAg3C,GAAA33F,EAAAif,GAAA04E,OAEAA,KACAA,EAAA/1F,SAAA4+D,EAAA/d,MAAA1qD,OACAwU,EAAAorF,GAGAv1F,MAAAo+D,EAAA/d,MAAArgD,MACAe,SAAAq9D,EAAA/d,MAAAt/C,WAEAu0F,EAAAC,EAAAh3C,KAOAy4C,cAAA,SAAA/kG,GACA,IAAAyC,KAAAshG,WAAAthG,KAAA4iG,sBAAA,CAIA,GAAA/4C,GAAA7pD,KAAA4hG,kBAEAv5E,EAAAroB,KAAAspB,KAAAqN,QAEAopE,EAAA//F,KAAAqhG,QACAwB,EAAAh5C,EAAAv3C,SAAA,UACA0N,EAAA6pC,EAAA3gD,IAAA,SAEA,KAAA25F,EAAA35F,IAAA,UAAA8W,GAAA,SAAAA,EAGA,MAFA+/E,IAAA13E,EAAAoG,OAAAsxE,QACA//F,KAAAqhG,QAAA,KAIA,IAAAl5D,EAEAnoC,MAAAqhG,UACAl5D,GAAA,EACA43D,EAAA//F,KAAAqhG,QAAA7rE,EAAAxd,WAAA6qF,EAAA35F,IAAA,SACAs6D,OAAA,OACAH,WAAA,EACAy/B,YAAA,SAAA/zF,GAEAkyF,EAAA9lD,KAAApsC,EAAAwd,QAEAw2E,YAAAriG,EAAAV,KAAAgjG,kBAAAhjG,KAAA,KACAolE,MAAA1kE,EAAAV,KAAAgjG,kBAAAhjG,MACAijG,UAAAviG,EAAAV,KAAAkjG,iBAAAljG,QAEAqoB,EAAAnH,IAAA6+E,IAGAiB,EAAAjB,EAAAl2C,GAAA,EAEA,IAAAs5C,IAAA,yGACApD,GAAAj1F,SAAA+3F,EAAA37B,aAAA,KAAAi8B,GAEA,IAAAC,GAAAP,EAAA35F,IAAA,OAEAsH,GAAA/M,QAAA2/F,KACAA,SAGArD,EAAAvqF,KAAA,SAAA4tF,EAAA,KAAAA,EAAA,OACAlC,EAAA1hC,eAAAx/D,KAAA,yBAAA6iG,EAAA35F,IAAA,0BAEAlJ,KAAAqjG,mBAAA9lG,EAAA4qC,KAMAk7D,mBAAA,SAAA9lG,EAAA4qC,GACA1yB,EAAAzV,KAAA4hG,mBAAAz5D,GAAAnoC,KAAA+hG,eAAA/hG,KAAAqhG,QAAAP,EAAA9gG,KAAAsjG,mBAAA/lG,EAAAyC,KAAA2hG,WAAA3hG,KAAA4hG,sBAMAoB,kBAAA,SAAAt1D,EAAAC,GACA,GAAAoyD,GAAA//F,KAAAqhG,OAEA,IAAAtB,EAAA,CAIA//F,KAAAshG,WAAA,CAEA,IAAAP,GAAA/gG,KAAA4iG,sBAAA9B,EAAAf,IAAAryD,EAAAC,GAAA3tC,KAAA2hG,WAAA3hG,KAAA4hG,kBACA5hG,MAAAyhG,aAAAV,EACAhB,EAAAxqF,gBACAwqF,EAAAvqF,KAAAsrF,EAAAC,IACA73F,EAAA62F,GAAAS,SAAA,KAEAxgG,KAAAujG,2BAOAA,uBAAA,WAGA,GAFAvjG,KAAAqhG,QAEA,CAIA,GAAAmC,GAAAxjG,KAAAyhG,aACAr1C,EAAApsD,KAAA2hG,UAEA3hG,MAAAspB,KAAAoI,gBACA1wB,KAAA,oBACA0J,EAAA84F,EAAAC,YAAA,GACA94F,EAAA64F,EAAAC,YAAA,GACAC,cAAAF,EAAAE,cACA16C,WACA4pB,QAAAxmB,EAAA7hB,KAAA2hB,IACAssB,UAAApsB,EAAA59B,qBAQA00E,iBAAA,SAAA5C,GAIA,GAHAtgG,KAAAshG,WAAA,EACAthG,KAAAqhG,QAEA,CAIA,GAAA9jG,GAAAyC,KAAA4hG,kBAAA14F,IAAA,QAKAlJ,MAAAqjG,mBAAA9lG,GAIAyC,KAAAspB,KAAAoI,gBACA1wB,KAAA,cAYAsiG,mBAAA,KAWAV,sBAAA,KAKA1nE,MAAA,SAAAhO,GACAltB,KAAAuhG,WAAA,KACAvhG,KAAAwhG,YAAA,IACA,IAAAn5E,GAAA6E,EAAAyJ,QACAxO,EAAAnoB,KAAAmhG,OACApB,EAAA//F,KAAAqhG,OAEAh5E,IAAAF,IACAnoB,KAAAohG,gBAAA,KACAj5E,GAAAE,EAAAoG,OAAAtG,GACA43E,GAAA13E,EAAAoG,OAAAsxE,GACA//F,KAAAmhG,OAAA,KACAnhG,KAAAqhG,QAAA,KACArhG,KAAAyhG,aAAA,OAOAkC,QAAA,aASAC,WAAA,SAAAj4B,EAAAC,EAAAH,GAEA,MADAA,MAAA,GAEA/gE,EAAAihE,EAAAF,GACA9gE,EAAAghE,EAAA,EAAAF,GACAjqE,MAAAoqE,EAAAH,GACAhqE,OAAAmqE,EAAA,EAAAH,MAIA40B,EAAAljG,UAAAG,YAAA+iG,EA6CAp+D,EAAAa,kBAAAu9D,EACA,IAAAhhE,GAAAghE,CACArkG,GAAAC,QAAAojC,G9Fq4uBMwkE,KACA,SAAU7nG,EAAQC,EAASC,G+F9xvBjC,QAAAw8E,GAAAlG,EAAAjoC,GACA,GAAAh7B,KAEA,OADAA,GAAAg7B,EAAA2hB,IAAA,aAAA3hB,EAAApvB,MACAq3D,EAAAkG,aAAAnpE,GAyBA,QAAAu0F,GAAAv5D,GACA,YAAAA,EAAA2hB,IAAA,IA3GA,GAAA12B,GAAAt5B,EAAA,MAEAmkG,EAAAnkG,EAAA,MAEA6nG,EAAA7nG,EAAA,MAEA8nG,EAAA9nG,EAAA,MAEA01E,EAAA11E,EAAA,MAEA+nG,EAAA5D,EAAAx8F,QAIAg+F,aAAA,SAAAn4B,EAAAnsE,EAAA6uD,EAAAvC,EAAA38B,GACA,GAAAqd,GAAA6hB,EAAA7hB,KACAioC,EAAAjoC,EAAAioC,KACAnJ,EAAAxf,EAAA3gD,IAAA,QACAg7F,EAAAxrB,EAAAlG,EAAAjoC,GAAAgvC,aAAAhvC,GAAAqtD,kBACAuM,EAAA55D,EAAA6oC,cAAA7oC,EAAAygC,YAAAztE,GAAA,GAEA,IAAA8rE,GAAA,SAAAA,EAAA,CACA,GAAAlC,GAAA48B,EAAA36B,aAAAvf,GACA44C,EAAA2B,EAAA/6B,GAAA9+B,EAAA45D,EAAAD,EAAA/8B,EACAs7B,GAAAxhG,MAAAkmE,EACAuC,EAAAo4B,WAAAW,EAAAzhG,KACA0oE,EAAAg5B,QAAAD,EAGA,GAAA13B,GAAAi5B,EAAAj6F,OAAAyoE,EAAA/3D,MAAA2xC,EACA23C,GAAA34B,kCAAA7tE,EAAAmsE,EAAAqB,EAAA3e,EAAAvC,EAAA38B,IAMAo2E,mBAAA,SAAA/lG,EAAA6uD,EAAAvC,GACA,GAAAkhB,GAAAi5B,EAAAj6F,OAAAqiD,EAAA7hB,KAAAioC,KAAA/3D,MAAA2xC,GACAknB,aAAA,GAGA,OADAvI,GAAAI,YAAAthB,EAAA3gD,IAAA,kBAEAmD,SAAA03F,EAAAj5B,uBAAA1e,EAAA7hB,KAAAhtC,EAAAwtE,GACA9zD,SAAA8zD,EAAA9zD,UAAA8zD,EAAAG,eAAA,EAAA/+D,KAAAyF,GAAA,KAOAgxF,sBAAA,SAAAzsF,EAAAgoC,EAAAiO,EAAAvC,GACA,GAAAtf,GAAA6hB,EAAA7hB,KACAioC,EAAAjoC,EAAAioC,KACAmC,EAAApqC,EAAAqtD,iBAAA,GACAsM,EAAAxrB,EAAAlG,EAAAjoC,GAAAgvC,aAAAhvC,GAAAqtD,kBACAh5E,EAAA,MAAA2rB,EAAA2hB,IAAA,IACAm4C,EAAAluF,EAAA9J,QACAg4F,GAAAzlF,IAAAu/B,EAAAv/B,GACAylF,EAAAzlF,GAAAzS,KAAAiN,IAAAu7D,EAAA,GAAA0vB,EAAAzlF,IACAylF,EAAAzlF,GAAAzS,KAAAC,IAAAuoE,EAAA,GAAA0vB,EAAAzlF,GACA,IAAA0lF,IAAAJ,EAAA,GAAAA,EAAA,MACAT,GAAAa,IACAb,GAAA7kF,GAAAylF,EAAAzlF,EAEA,IAAA2lF,KACA7iG,cAAA,WAEAqoE,MAAA,UAEA,QACA19D,SAAAg4F,EACAptF,SAAAd,EAAAc,SACAwsF,cACAC,cAAAa,EAAA3lF,OAWAwlF,GACAjyD,KAAA,SAAA5H,EAAA45D,EAAAD,EAAA/8B,GACA,GAAAq9B,GAAAT,EAAAv4B,eAAA24B,EAAAD,EAAA,KAAAC,EAAAD,EAAA,IAAAJ,EAAAv5D,GAKA,OAJA/U,GAAApqB,sBACAE,MAAAk5F,EACAvjG,MAAAkmE,KAGAnmE,KAAA,OACAsK,MAAAk5F,IAGAC,OAAA,SAAAl6D,EAAA45D,EAAAD,EAAA/8B,GACA,GAAAu9B,GAAAn6D,EAAAmqC,eACA7rC,EAAAq7D,EAAA,GAAAA,EAAA,EACA,QACAljG,KAAA,OACAsK,MAAAy4F,EAAAr4B,eAAAy4B,EAAAO,EAAA,EAAAR,EAAA,KAAAQ,EAAA77D,GAAAi7D,EAAAv5D,MASAqnC,GAAAS,yBAAA,uBAAA4xB,EACA,IAAA5kE,GAAA4kE,CACAjoG,GAAAC,QAAAojC,G/Fk3vBMslE,KACA,SAAU3oG,EAAQC,EAASC,GgG57vBjC,QAAAmjC,GAAAtiB,EAAA/K,EAAAkb,GACA,GAAA+7C,GAAAlsD,EAAAksD,YACAtxD,GAAAoF,EAAArS,EAAAqS,EAAApS,GACAyS,EAAAL,EACA2U,EAAA3U,EAAA2U,gBAAAlhB,EAAA9P,KAAAwsB,EAAAwE,eAAAxE,GACAg8B,EAAAl3C,EAAA6e,aAAA,eAAAq4B,gBAGA,IAAAA,EAAA,CAIA07C,EAAAjtF,KAGAA,EAAAktF,GACAjqF,YAAAwC,EAAAxC,YAGA7F,UAAAqI,EAAArI,WACK/C,GAAA2F,MAGL,IAAAmtF,GAAAF,EAAAjtF,GAKAotF,EAAA3nF,EAAA4rC,SACAA,EAAAE,EAAAF,SACAg8C,EAAA,UAAA/7B,GAAA27B,EAAAjtF,GACAstF,KACAC,KACAC,GACAx+E,QACAxhB,QAEAigG,GACAC,YAAAn/F,EAAAm/F,EAAAH,GACAI,YAAAp/F,EAAAo/F,EAAAH,GAGArgG,GAAAokD,EAAAC,YAAA,SAAA5+B,EAAAugC,GAEA,GAAAy6C,GAAAT,GAAAv6E,EAAA6O,aAAAzhB,EACA7S,GAAAokD,mBAAA4B,GAAA,SAAAT,EAAAtrD,GACA,GAAAwrC,GAAA8f,EAAA9f,KACAi7D,EAAAC,EAAAV,EAAA16C,EAEA,KAAA26C,GAAAO,KAAAR,GAAAS,GAAA,CACA,GAAAt+F,GAAAs+F,KAAAjoG,KAEA,OAAA2J,GAAA49F,IACA59F,EAAAqjC,EAAA6pC,YAAAz8D,IAGA,MAAAzQ,GAAAw+F,EAAAr7C,EAAAnjD,EAAAk+F,GAAA,EAAAH,OAKA,IAAAU,KAsBA,OArBA7gG,GAAAkkD,EAAA,SAAA48C,EAAAC,GACA,GAAAl7C,GAAAi7C,EAAAj7C,SAEAA,KAAAu6C,EAAAW,IACA/gG,EAAA6lD,EAAA3B,SAAA,SAAA88C,EAAAC,GACA,GAAAC,GAAAd,EAAAa,EAEA,IAAAD,IAAAF,GAAAI,EAAA,CACA,GAAA9+F,GAAA8+F,EAAAzoG,KACAotD,GAAAC,SAAA1jD,EAAA0+F,EAAAr7D,KAAA5oB,MAAAsT,MAAA01B,EAAAC,OAAA1jD,EAAA++F,EAAAH,GAAAG,EAAAL,MACAD,EAAAC,EAAA7mG,KAAAmI,OAKApC,EAAA6gG,EAAA,SAAAz+F,EAAA2+F,GACAH,EAAA18C,EAAA68C,GAAA3+F,EAAAk+F,GAAA,EAAAH,KAEAiB,EAAAhB,EAAAl8C,EAAAi8C,GACAkB,EAAAhB,EAAAxtF,EAAAoF,EAAA2U,GACA00E,EAAAp9C,EAAAt3B,EAAAxE,GACA+3E,GAGA,QAAAS,GAAAr7C,EAAAg8C,EAAAjB,EAAAkB,EAAArB,GACA,GAAA16D,GAAA8f,EAAA9f,IAEA,KAAAA,EAAA5oB,MAAAirC,WAAAriB,EAAA2pC,YAAAmyB,GAAA,CAIA,IAAAh8C,EAAAD,cAEA,WADAg7C,GAAAC,YAAAh7C,EAAAg8C,EAKA,IAAA7C,GAAA+C,EAAAF,EAAAh8C,GACAm8C,EAAAhD,EAAAgD,aACAC,EAAAjD,EAAAiD,WAGAD,GAAA,UAAAvB,EAAArqF,aACApK,EAAA3M,OAAAohG,EAAAuB,EAAA,KAKAF,GAAAj8C,EAAAH,MACA3f,EAAA2pC,YAAAuyB,IAAA,MAAAA,IACAJ,EAAAI,GAIArB,EAAAC,YAAAh7C,EAAAg8C,EAAAG,EAAAvB,GAGAG,EAAAE,YAAAj7C,EAAAm5C,EAAAiD,IAGA,QAAAF,GAAAhpG,EAAA8sD,GACA,GAAA9f,GAAA8f,EAAA9f,KACA2hB,EAAA3hB,EAAA2hB,IACAu6C,EAAAlpG,EACAipG,KACAvpB,EAAA53D,OAAA4tC,UACAiqB,GAAA,CA8CA,OA7CAp4E,GAAAulD,EAAAE,aAAA,SAAAx7B,EAAAxO,GACA,GACAmmF,GACApqF,EAFA0B,EAAA+Q,EAAAzQ,kBAAA4tC,EAIA,IAAAn9B,EAAAwqC,mBAAA,CACA,GAAA92D,GAAAssB,EAAAwqC,mBAAAv7C,EAAAzgB,EAAAgtC,EACAjuB,GAAA7Z,EAAA6Z,YACAoqF,EAAAjkG,EAAAkkG,iBACK,CAKL,GAJArqF,EAAAyS,EAAAhU,UAAA+hE,iBAAA9+D,EAAA,GAAAzgB,GAEA,eAAAgtC,EAAAvpC,KAAA,UAEAsb,EAAAzd,OACA,MAGA6nG,GAAA33E,EAAAhU,UAAA7R,IAAA8U,EAAA,GAAA1B,EAAA,IAGA,SAAAoqF,GAAAliF,SAAAkiF,GAAA,CAIA,GAAA1nC,GAAAzhE,EAAAmpG,EACApkF,EAAAnW,KAAAuK,IAAAsoD,EAEA18C,IAAA26D,KACA36D,EAAA26D,GAAAje,GAAA,GAAAke,EAAA,KACAD,EAAA36D,EACA46D,EAAAle,EACAynC,EAAAC,EACAF,EAAA3nG,OAAA,GAGAiG,EAAAwX,EAAA,SAAAvH,GACAyxF,EAAAnhG,MACAuV,YAAAmU,EAAAnU,YACAoC,gBAAAjI,EACAA,UAAAga,EAAAhU,UAAAqE,YAAArK,YAMAyxF,eACAC,eAIA,QAAApB,GAAAH,EAAA76C,EAAA9sD,EAAAipG,GACAtB,EAAA76C,EAAAtrD,MACAxB,QACAipG,gBAIA,QAAAlB,GAAAH,EAAA96C,EAAAm5C,EAAAjmG,GACA,GAAAipG,GAAAhD,EAAAgD,aACAj8D,EAAA8f,EAAA9f,KACA6hB,EAAA7hB,EAAA9vB,MACAovC,EAAAQ,EAAAR,gBAGA,IAAAQ,EAAAT,gBAAA48C,EAAA3nG,OAAA,CAIA,GAAAksD,GAAAV,EAAA9/B,SAAA9P,MACAqwC,EAAA87C,EAAAz8C,QAAAY,GACA87C,EAAA1B,EAAAhgG,IAAA2lD,EAEA+7C,KACAA,EAAA1B,EAAAhgG,IAAA2lD,IACAg8C,WAAA/7C,EAAAzvC,GACAyrF,cAAAh8C,EAAAv8B,eACAw4E,aAAAj8C,EAAA/pD,KACAimG,iBAAAl8C,EAAAlwC,SACAqsF,eAEA/B,EAAAx+E,KAAAthB,KAAAwhG,IAGAA,EAAAK,WAAA7hG,MACAutE,QAAAroC,EAAA2hB,IACAssB,UAAApsB,EAAA59B,eACAyb,SAAAmiB,EAAAprD,KACAmmG,OAAA/6C,EAAA9wC,GACA/d,QAKA6pG,eACA/jF,UAAAwmC,EAAA3gD,IAAA,mBACAmX,UAAAwpC,EAAA3gD,IAAA,oBAEAuhE,kBAAA+7B,EAAAz/F,WAIA,QAAAm/F,GAAAhB,EAAAl8C,EAAAi8C,GACA,GAAAoC,GAAApC,EAAAj8C,WAEAlkD,GAAAkkD,EAAA,SAAAqB,EAAAtrD,GACA,GAAAmT,GAAAm4C,EAAAR,iBAAA33C,OACAo1F,EAAApC,EAAAnmG,EAEAuoG,KACAj9C,EAAAC,YAAAp4C,EAAA8N,OAAA,QACA9N,EAAA3U,MAAA+pG,EAAA/pG,MAEA2U,EAAAu4D,mBAAA68B,EAAAd,kBAAAz/F,UAMAsjD,EAAAC,YAAAp4C,EAAA8N,OAAA,QAIA,SAAA9N,EAAA8N,QAAAqnF,EAAAhiG,MACAutE,QAAAvoB,EAAA9f,KAAA2hB,IACAssB,UAAAnuB,EAAA9f,KAAA9vB,MAAA+T,eACAjxB,MAAA2U,EAAA3U,UAKA,QAAA4oG,GAAAhB,EAAAxtF,EAAAoF,EAAA2U,GAEA,GAAAkzE,EAAAjtF,KAAAwtF,EAAAx+E,KAAA9nB,OAIA,WAHA6yB,IACA1wB,KAAA,WASA,IAAA2zD,KAAAwwC,EAAAx+E,KAAA,GAAAugF,WAAA,QAA+Dz8B,uBAAA,MAC/D/4C,IACA1wB,KAAA,UACAoqB,eAAA,EACA1gB,EAAAiN,EAAA,GACAhN,EAAAgN,EAAA,GACA+rF,cAAA3mF,EAAA2mF,cACAr3F,SAAA0Q,EAAA1Q,SACA2Q,gBAAA23C,EAAA33C,gBACAjI,UAAA4/C,EAAA5/C,UACA6F,YAAA+5C,EAAA/5C,YACAuqF,iBAAAx+E,OAIA,QAAAy/E,GAAAp9C,EAAAt3B,EAAAxE,GAIA,GAAA7E,GAAA6E,EAAAyJ,QAEA4wE,EAAAr+F,EAAAmf,GAAA,8BACAm/E,EAAAt+F,EAAAmf,GAAA,4BAGAvjB,GAAAkkD,EAAA,SAAAqB,EAAAtrD,GACA,GAAAmT,GAAAm4C,EAAAR,iBAAA33C,MACA,UAAAA,EAAA8N,QAAAlb,EAAAoN,EAAAu4D,kBAAA,SAAAp+C,GACA,GAAAttB,GAAAstB,EAAAzR,YAAA,MAAAyR,EAAAtX,SACAyyF,GAAAzoG,GAAAstB,KAIA,IAAAo7E,MACAC,IACAl3F,GAAA1L,KAAAyiG,EAAA,SAAAl7E,EAAAttB,IACAyoG,EAAAzoG,IAAA2oG,EAAAriG,KAAAgnB,KAEA7b,EAAA1L,KAAA0iG,EAAA,SAAAn7E,EAAAttB,IACAwoG,EAAAxoG,IAAA0oG,EAAApiG,KAAAgnB,KAEAq7E,EAAA7oG,QAAAquB,EAAAwE,gBACA1wB,KAAA,WACAoqB,eAAA,EACAa,MAAAy7E,IAEAD,EAAA5oG,QAAAquB,EAAAwE,gBACA1wB,KAAA,YACAoqB,eAAA,EACAa,MAAAw7E,IAIA,QAAAhC,GAAAV,EAAA16C,GACA,OAAAzrD,GAAA,EAAiBA,GAAAmmG,OAAAlmG,OAAkCD,IAAA,CACnD,GAAA4mG,GAAAT,EAAAnmG,EAEA,IAAAyrD,EAAA9f,KAAA2hB,MAAAs5C,EAAA5yB,SAAAvoB,EAAA9f,KAAA9vB,MAAA+T,iBAAAg3E,EAAAhtB,UACA,MAAAgtB,IAKA,QAAAS,GAAA57C,GACA,GAAA+B,GAAA/B,EAAA9f,KAAA9vB,MACAkB,KACAuwC,EAAAvwC,EAAAi3D,QAAAvoB,EAAA9f,KAAA2hB,GAIA,OAHAvwC,GAAA68D,UAAA78D,EAAAuwC,EAAA,aAAAE,EAAA59B,eACA7S,EAAAg1D,SAAAh1D,EAAAuwC,EAAA,YAAAE,EAAAhqD,KACAuZ,EAAAwrF,OAAAxrF,EAAAuwC,EAAA,UAAAE,EAAA9wC,GACAK,EAGA,QAAAipF,GAAAjtF,GACA,OAAAA,GAAA,MAAAA,EAAA,IAAAiM,MAAAjM,EAAA,WAAAA,EAAA,IAAAiM,MAAAjM,EAAA,IAlYA,GAAAnH,GAAAtU,EAAA,MAEAouB,EAAApuB,EAAA,MAEA0qG,EAAA1qG,EAAA,MAEA2oG,EAAA3oG,EAAA,MAEA4I,EAAA0L,EAAA1L,KACAoB,EAAAsK,EAAAtK,MACAgD,EAAAohB,EAAA7J,YA2XAzkB,GAAAC,QAAAojC,GhGy+vBMsoE,KACA,SAAU3rG,EAAQC,EAASC,GiG/2wBjC,GAAAsU,GAAAtU,EAAA,MAEAs5B,EAAAt5B,EAAA,MAEAovE,EAAApvE,EAAA,MAEA01E,EAAA11E,EAAA,MAEA8nG,EAAA9nG,EAAA,MAEA0yE,EAAAtD,EAAAsD,eACA/U,EAAAyR,EAAAzR,YACA+tC,GAAA,uCACAC,GAAA,yBAQAC,EAAAl2B,EAAA/tE,QACA7C,KAAA,gBACA8wE,iBAAA,uBAKAniD,OAAA,SAAAy8B,EAAAp6C,EAAAkb,EAAAnQ,GACA/c,KAAAmoB,MAAA4mC,WACA,IAAAg5C,GAAA/nG,KAAAgoG,UAIA,IAHAhoG,KAAAgoG,WAAA,GAAAxyE,GAAAnd,MACArY,KAAAmoB,MAAAjH,IAAAlhB,KAAAgoG,YAEA57C,EAAAljD,IAAA,SAIA,GAAAqpE,GAAAnmB,EAAA8oB,mBACAnrE,EAAAi6F,EAAAj6F,OAAAwoE,EAAAnmB,GACA4hB,EAAA,GAAA1C,GAAAlf,EAAAriD,EACAyG,GAAA1L,KAAA8iG,EAAA55B,EAAA9sD,IAAA8sD,GAEAhuE,KAAAgoG,WAAA9mF,IAAA8sD,EAAAkC,YAEA1/D,EAAA1L,KAAA+iG,EAAA,SAAAzlG,GACAgqD,EAAAljD,IAAA9G,EAAA,UACApC,KAAA,IAAAoC,GAAAgqD,EAAAmmB,EAAAxoE,EAAAskE,gBAEKruE,MACLw1B,EAAA3e,gBAAAkxF,EAAA/nG,KAAAgoG,WAAA57C,GACA07C,EAAAniE,UAAA3lC,KAAA,SAAAosD,EAAAp6C,EAAAkb,EAAAnQ,KASAkrF,WAAA,SAAA77C,EAAAmmB,EAAAlE,GACA,GAAA9jC,GAAA6hB,EAAA7hB,IAEA,KAAAA,EAAA5oB,MAAAirC,UAAA,CAIA,GAAAs7C,GAAA97C,EAAA95C,SAAA,aACA47D,EAAAg6B,EAAA51F,SAAA,aACA61F,EAAAj6B,EAAAhlE,IAAA,SACAk/F,EAAAvuC,EAAAquC,EAAA75B,EACA85B,GAAA33F,EAAA/M,QAAA0kG,QAcA,QAbA9vB,GAAA9F,EAAAp5C,iBAAA05C,UACA+B,EAAArqC,EAAAqqC,eACAyzB,EAAA,EACA/5B,EAAA/jC,EAAAgkC,iBACAhjC,EAAAhB,EAAA5oB,MAAA6pB,WACAmhC,EAAAvgB,EAAAljD,IAAA,0BACA0jE,EAAAxgB,EAAAljD,IAAA,0BACA+qC,KACAC,KAGA4X,EAAAoiB,EAAA3E,eAEA3qE,EAAA,EAAmBA,EAAA0vE,EAAAzvE,OAAwBD,IAC3C,IAAAgwE,EAAArkC,EAAA3rC,EAAAwpG,EAAA95B,EAAAzvE,OAAA8tE,EAAAC,GAAA,CAIA,GAAA3hC,GAAAV,EAAA6oC,cAAA9E,EAAA1vE,GAEAg2E,IACA3gC,EAAA,GAAAhJ,EACAgJ,EAAA,GAAAokC,EAAA1tE,EACAupC,EAAA,GAAAjJ,EACAiJ,EAAA,GAAAmkC,EAAA1tE,EAAA0tE,EAAA52E,SAEAwyC,EAAA,GAAAokC,EAAA3tE,EACAupC,EAAA,GAAAhJ,EACAiJ,EAAA,GAAAmkC,EAAA3tE,EAAA2tE,EAAA72E,MACA0yC,EAAA,GAAAjJ,EAGA,IAAAq9D,GAAAD,IAAAF,EAAAtpG,MAEAmB,MAAAgoG,WAAA9mF,IAAA,GAAAsU,GAAA3c,KAAA2c,EAAApqB,sBACAkM,KAAA,QAAAi0B,EAAA3sC,GACA0M,OACAG,GAAAwoC,EAAA,GACAroC,GAAAqoC,EAAA,GACAvoC,GAAAwoC,EAAA,GACAroC,GAAAqoC,EAAA,IAEAjzC,MAAAuP,EAAA1M,UACAmJ,OAAAk7F,EAAAG,IACSx8C,GACT5gC,QAAA,SAWAq9E,WAAA,SAAAn8C,EAAAmmB,EAAAlE,GACA,GAAA9jC,GAAA6hB,EAAA7hB,IAEA,KAAAA,EAAA5oB,MAAAirC,UAAA,CAIA,GAAA47C,GAAAp8C,EAAA95C,SAAA,aACAooF,EAAA8N,EAAAl2F,SAAA,aACAm2F,EAAA/N,EAAAxxF,IAAA,SACAmvE,EAAA9F,EAAAp5C,iBAAA05C,UACAvE,EAAA/jC,EAAAgkC,iBACAhjC,EAAAhB,EAAA5oB,MAAA6pB,WACAk9D,EAAAn+D,EAAA6oC,cAAA9E,EAAA,IACAq6B,EAAAp+D,EAAA6oC,cAAA9E,EAAA,IACAzqD,EAAA,EACA+kF,EAAA/uC,EAAA2uC,EAAAn6B,GACAw6B,EAAAnO,EAAAlxB,cACAi/B,GAAAj4F,EAAA/M,QAAAglG,QAIA,QAHA97B,GAAAvgB,EAAAljD,IAAA,0BACA0jE,EAAAxgB,EAAAljD,IAAA,0BAEAtK,EAAA,EAAmBA,EAAA0vE,EAAAzvE,OAAwBD,IAC3C,IAAAgwE,EAAArkC,EAAA3rC,EAAAgqG,EAAAt6B,EAAAzvE,OAAA8tE,EAAAC,GAAA,CAIA,GACAliE,GACAC,EACAnJ,EACAC,EAJAwpC,EAAAV,EAAA6oC,cAAA9E,EAAA1vE,GAMA2rC,GAAAqqC,gBACAlqE,EAAAg+F,EACA/9F,EAAA0tE,EAAA1tE,EACAnJ,EAAAypC,EAAAvgC,EACAjJ,EAAA42E,EAAA52E,SAEAiJ,EAAA2tE,EAAA3tE,EACAC,EAAAg+F,EACAnnG,EAAA62E,EAAA72E,MACAC,EAAAwpC,EAAAtgC,EAGA,IAAA29F,GAAAzkF,IAAA4kF,EAAA5pG,MAEAmB,MAAAgoG,WAAA9mF,IAAA,GAAAsU,GAAA5c,MACAtB,KAAA,QAAAi0B,EAAA3sC,GACA0M,OACAZ,IACAC,IACAnJ,QACAC,UAEAR,MAAAuP,EAAA1M,UACAoJ,KAAAu7F,EAAAH,IACSO,GACT39E,QAAA,KAGAw9E,EAAAh+F,EAAAlJ,EACAmnG,EAAAh+F,EAAAlJ,MAIAqmG,GAAAjkG,QACA7C,KAAA,UAEA8mG,EAAAjkG,QACA7C,KAAA,WjGs3wBM8nG,KACA,SAAU9sG,EAAQC,EAASC,GkG7jxBjC,GAAAi2E,GAAAj2E,EAAA,MAEAs5B,EAAAt5B,EAAA,MAEA67D,EAAA77D,EAAA,MAEAgxC,EAAA6qB,EAAA7qB,aAEAilC,GAAAh+C,sBACAnzB,KAAA,QACAumC,YACAvmC,KAAA,MACAwtC,YAAA,GAEApH,eAEA7W,OAAA,EAEAD,EAAA,EACAs7B,MAAA,EACA96C,KAAA,GAIApS,OAAA,QACAqqG,QAAA,GAIAC,UAAA,QAGAzwE,KAAA,EAGAC,IAAA,EAUAb,gBAAA,gBAEAkoE,YAAA,OAEAC,YAAA,EAGA1+F,QAAA,EAEA6nG,QAAA,GACAl4F,WACAlP,SAAA,GACAC,WAAA,SACA6K,MAAA,QAEAu8F,cACAv8F,MAAA,WAKAwlE,EAAA99C,qBACArzB,KAAA,QACA2uB,OAAA,SAAAw5E,EAAAn3F,EAAAkb,GAGA,GAFAltB,KAAAmoB,MAAA4mC,YAEAo6C,EAAAjgG,IAAA,SAIA,GAAAif,GAAAnoB,KAAAmoB,MACAnX,EAAAm4F,EAAA72F,SAAA,aACA82F,EAAAD,EAAA72F,SAAA,gBACAgB,EAAA61F,EAAAjgG,IAAA,aACAikF,EAAAgc,EAAAjgG,IAAA,gBACAumE,EAAA,GAAAj6C,GAAAld,MACArX,MAAAu0B,EAAA3kB,gBAAoCG,GACpCF,KAAAq4F,EAAAjgG,IAAA,QACA+E,SAAA+C,EAAAk5D,iBAEAt2D,YAAA,IAEAxF,GAAA,KAEA07D,EAAA2F,EAAAtlE,kBACAk/F,EAAAF,EAAAjgG,IAAA,WACAogG,EAAA,GAAA9zE,GAAAld,MACArX,MAAAu0B,EAAA3kB,gBAAoCu4F,GACpCt4F,KAAAu4F,EACAp7F,SAAAm7F,EAAAl/B,eACAv/D,EAAAm/D,EAAAroE,OAAA0nG,EAAAjgG,IAAA,WACAqK,kBAAA,QAEAK,YAAA,IAEAxF,GAAA,KAEAmxF,EAAA4J,EAAAjgG,IAAA,QACAqgG,EAAAJ,EAAAjgG,IAAA,UACAumE,GAAAvkD,QAAAq0E,EACA+J,EAAAp+E,QAAAq+E,EAEAhK,GACA9vB,EAAAhgE,GAAA,mBACA8nB,OAAAiyE,KAAAjK,EAAA,IAAA4J,EAAAjgG,IAAA,aAIAqgG,GACAD,EAAA75F,GAAA,mBACA8nB,OAAAiyE,KAAAD,EAAA,IAAAJ,EAAAjgG,IAAA,gBAIAif,EAAAjH,IAAAuuD,GACA45B,GAAAlhF,EAAAjH,IAAAooF,EAEA,IAAAG,GAAAthF,EAAAhe,kBACAu/F,EAAAP,EAAA7wB,oBACAoxB,GAAAloG,MAAAioG,EAAAjoG,MACAkoG,EAAAjoG,OAAAgoG,EAAAhoG,MACA,IAAAkoG,GAAAz8D,EAAAw8D,GACAloG,MAAA0rB,EAAAgK,WACAz1B,OAAAyrB,EAAAiK,aACKgyE,EAAAjgG,IAAA,WAELoK,KAEAA,EAAA61F,EAAAjgG,IAAA,SAAAigG,EAAAjgG,IAAA,SAEA,WAAAoK,IACAA,EAAA,UAIA,UAAAA,EACAq2F,EAAAj/F,GAAAi/F,EAAAnoG,MACO,WAAA8R,IACPq2F,EAAAj/F,GAAAi/F,EAAAnoG,MAAA,IAIA2rF,IACAA,EAAAgc,EAAAjgG,IAAA,QAAAigG,EAAAjgG,IAAA,UAEA,WAAAikF,IACAA,EAAA,UAGA,WAAAA,EACAwc,EAAAh/F,GAAAg/F,EAAAloG,OACO,WAAA0rF,IACPwc,EAAAh/F,GAAAg/F,EAAAloG,OAAA,GAGA0rF,KAAA,OAGAhlE,EAAA3S,KAAA,YAAAm0F,EAAAj/F,EAAAi/F,EAAAh/F,GACA,IAAAi/F,IACAt2F,YACAC,kBAAA45E,EAEA1d,GAAA3kE,SAAA8+F,GACAN,EAAAx+F,SAAA8+F,GAGAH,EAAAthF,EAAAhe,iBACA,IAAA/I,GAAAuoG,EAAA58D,OACA9rC,EAAAkoG,EAAAjiC,cAAA,mBACAjmE,GAAAiM,KAAAi8F,EAAAjgG,IAAA,kBACA,IAAAY,GAAA,GAAA0rB,GAAA5c,MACAtN,OACAZ,EAAA++F,EAAA/+F,EAAAtJ,EAAA,GACAuJ,EAAA8+F,EAAA9+F,EAAAvJ,EAAA,GACAI,MAAAioG,EAAAjoG,MAAAJ,EAAA,GAAAA,EAAA,GACAK,OAAAgoG,EAAAhoG,OAAAL,EAAA,GAAAA,EAAA,GACAs7C,EAAAysD,EAAAjgG,IAAA,iBAEAjI,QACAiqB,QAAA,GAEAsK,GAAA1pB,qBAAAhC,GACAqe,EAAAjH,IAAApX,QlGqkxBM+/F,KACA,SAAU7tG,EAAQC,EAASC,GmGlwxBjC,GAAAi2E,GAAAj2E,EAAA,KAEAA,GAAA,MAEAA,EAAA,MAEAA,EAAA,MAYAi2E,EAAAl/C,gBACAjyB,KAAA,UACAurB,MAAA,UACAd,OAAA,2BAEA,cACA0mD,EAAAl/C,gBACAjyB,KAAA,UACAurB,MAAA,UACAd,OAAA,2BAEA,enGwwxBMq+E,KACA,SAAU9tG,EAAQC,EAASC,GoGlxxBjC,QAAA6tG,GAAA70F,GACA,GACA80F,GAAA,QAAA90F,EAAA,wCAAAA,EAAA,kCACA,OAAA1E,GAAArL,IAAA8kG,EAAA,SAAAC,GACA,MAAAA,GAAA,cAAAF,IACGr1F,KAAA,KASH,QAAAw1F,GAAAn5F,GACA,GAAAo5F,MACAvoG,EAAAmP,EAAA9H,IAAA,YACAyD,EAAAqE,EAAAk5D,cAQA,OAPAv9D,IAAAy9F,EAAA/kG,KAAA,SAAAsH,GACAy9F,EAAA/kG,KAAA,QAAA2L,EAAAyD,WACA5S,GAAAuoG,EAAA/kG,KAAA,eAAA8G,KAAAX,MAAA,EAAA3J,EAAA,SACAiD,GAAA,+BAAA1C,GACA,GAAA8E,GAAA8J,EAAA9H,IAAA9G,EACA8E,IAAAkjG,EAAA/kG,KAAA,QAAAjD,EAAA,IAAA8E,KAEAkjG,EAAAz1F,KAAA,KASA,QAAA01F,GAAAC,GACA,GAAAF,MACAG,EAAAD,EAAAphG,IAAA,sBACAyuB,EAAA2yE,EAAAphG,IAAA,mBACA8H,EAAAs5F,EAAAh4F,SAAA,aACAlR,EAAAkpG,EAAAphG,IAAA,UA4BA,OA1BAqhG,IAAAH,EAAA/kG,KAAA0kG,EAAAQ,IAEA5yE,IACA5H,EAAA0H,gBACA2yE,EAAA/kG,KAAA,oBAAAsyB,IAGAyyE,EAAA/kG,KAAA,qBAAAmlG,EAAA/rD,MAAA9mB,IACAyyE,EAAA/kG,KAAA,8BAKAP,GAAA,mCAAA1C,GACA,GAAAqoG,GAAA,UAAAroG,EACAsoG,EAAAznE,EAAAwnE,GACAvjG,EAAAojG,EAAAphG,IAAAwhG,EACA,OAAAxjG,GAAAkjG,EAAA/kG,KAAAolG,EAAA,IAAAvjG,GAAA,UAAA9E,EAAA,YAGAgoG,EAAA/kG,KAAA8kG,EAAAn5F,IAEA,MAAA5P,GACAgpG,EAAA/kG,KAAA,WAAAwZ,EAAA5X,kBAAA7F,GAAAuT,KAAA,aAGAy1F,EAAAz1F,KAAA,KAAwB,IAQxB,QAAAg2F,GAAA1kE,EAAA/Y,GACA,GAAAngB,GAAA9D,SAAApI,cAAA,OACAwnB,EAAAroB,KAAAsoB,IAAA4E,EAAAyJ,OACA32B,MAAA+M,KACA/M,KAAA4qG,GAAA19E,EAAAgK,WAAA,EACAl3B,KAAA6qG,GAAA39E,EAAAiK,YAAA,EACA8O,EAAA6kE,YAAA/9F,GACA/M,KAAA+qG,WAAA9kE,EACAjmC,KAAAgrG,OAAA,EAKAhrG,KAAAirG,YACA,IAAApuG,GAAAmD,IAEA+M,GAAAm+F,aAAA,WAEAruG,EAAAsuG,aACA9rC,aAAAxiE,EAAAouG,cACApuG,EAAAmuG,OAAA,GAGAnuG,EAAAuuG,YAAA,GAGAr+F,EAAA+1F,YAAA,SAAA/zF,GAGA,GAFAA,KAAAwoB,OAAAhL,OAEA1vB,EAAAsuG,WAAA,CAGA,GAAAzjF,GAAAW,EAAAX,OACA2jF,GAAApxD,eAAAhU,EAAAl3B,GAAA,GACA2Y,EAAA4jF,SAAA,YAAAv8F,KAIAhC,EAAAw+F,aAAA,WACA1uG,EAAAsuG,YACAtuG,EAAAmuG,OACAnuG,EAAA2uG,UAAA3uG,EAAA4uG,YAIA5uG,EAAAuuG,YAAA,GA5IA,GAAA56F,GAAAtU,EAAA,MAEAsuG,EAAAtuG,EAAA,MAEAmvG,EAAAnvG,EAAA,MAEA6zB,EAAA7zB,EAAA,MAEA2iB,EAAA3iB,EAAA,MAEA4I,EAAA0L,EAAA1L,KACAm+B,EAAApkB,EAAAokB,YACAgnE,GAAA,4BAoIAU,GAAAxtG,WACAG,YAAAqtG,EAMAQ,YAAA,EAKA1/E,OAAA,WAGA,GAAAwa,GAAAjmC,KAAA+qG,WACAW,EAAAzlE,EAAA0lE,cAAA1iG,SAAA2iG,YAAAC,iBAAA5lE,GACA6lE,EAAA7lE,EAAAhlC,KAEA,cAAA6qG,EAAAz/F,UAAA,aAAAq/F,EAAAr/F,WACAy/F,EAAAz/F,SAAA,aAMAu/C,KAAA,SAAA0+C,GACAjrC,aAAAr/D,KAAAirG,aACA,IAAAl+F,GAAA/M,KAAA+M,EACAA,GAAA9L,MAAAmpG,QAhKA,yFAgKAC,EAAAC,GACA,SAAQtqG,KAAA4qG,GAAA,UAAuB5qG,KAAA6qG,GAAA,OAAsBP,EAAAphG,IAAA,qBACrD6D,EAAA9L,MAAAM,QAAAwL,EAAAg/F,UAAA,eACA/rG,KAAAgrG,OAAA,GAEAgB,WAAA,SAAA36B,GACArxE,KAAA+M,GAAAg/F,UAAA,MAAA16B,EAAA,GAAAA,GAEA46B,aAAA,SAAAC,GACAlsG,KAAAmrG,WAAAe,GAEAC,QAAA,WACA,GAAAp/F,GAAA/M,KAAA+M,EACA,QAAAA,EAAAq/F,YAAAr/F,EAAAs/F,eAEAv7C,OAAA,SAAApmD,EAAAC,GAIA,GACA2hG,GADAjkF,EAAAroB,KAAAsoB,GAGAD,MAAAgP,UAAAi1E,EAAAjkF,EAAAgP,QAAAk1E,2BACA7hG,GAAA4hG,EAAAE,WACA7hG,GAAA2hG,EAAAG,UAGA,IAAAxrG,GAAAjB,KAAA+M,GAAA9L,KACAA,GAAAs3B,KAAA7tB,EAAA,KACAzJ,EAAAu3B,IAAA7tB,EAAA,KACA3K,KAAA4qG,GAAAlgG,EACA1K,KAAA6qG,GAAAlgG,GAEA03E,KAAA,WACAriF,KAAA+M,GAAA9L,MAAAM,QAAA,OACAvB,KAAAgrG,OAAA,GAEAQ,UAAA,SAAAvwB,IACAj7E,KAAAgrG,OAAAhrG,KAAAorG,YAAAprG,KAAAmrG,aACAlwB,GACAj7E,KAAAyrG,WAAAxwB,EAEAj7E,KAAAgrG,OAAA,EACAhrG,KAAAirG,aAAA3rC,WAAA9uD,EAAA9P,KAAAV,KAAAqiF,KAAAriF,MAAAi7E,IAEAj7E,KAAAqiF,SAIAqqB,OAAA,WACA,MAAA1sG,MAAAgrG,OAGA,IAAA3rE,GAAAsrE,CACA3uG,GAAAC,QAAAojC,GpG4yxBMstE,KACA,SAAU3wG,EAAQC,EAASC,GqGhhyBjC,GAAAi2E,GAAAj2E,EAAA,MAEAmjC,EAAA8yC,EAAAh+C,sBACAnzB,KAAA,UACA40B,cAAA,eACAwR,eACA7W,OAAA,EACAD,EAAA,EACAs7B,MAAA,EAEAghD,aAAA,EAGAhgF,QAAA,OAEA8yE,UAAA,kBACAmN,mBAAA,EACAC,YAAA,SAQAC,SAAA,EAGAC,UAAA,EAEAC,UAAA,IAEA1C,mBAAA,GACA2B,WAAA,EAEAv0E,gBAAA,qBAEAkoE,YAAA,OAEAqN,aAAA,EAEApN,YAAA,EAGA1+F,QAAA,EAEA6iC,aAAA,GAEAiuC,aAGAlxE,KAAA,OAKAupC,KAAA,OACAxgB,UAAA,OACA41E,wBAAA,IACAwN,sBAAA,iBACAthD,YACAl/C,MAAA,OACAnL,MAAA,EACAR,KAAA,SAEA+P,eAKAA,WACApE,MAAA,OACA9K,SAAA,MAKA7F,GAAAC,QAAAojC,GrGshyBM+tE,KACA,SAAUpxG,EAAQC,EAASC,GsG3hxBjC,QAAAmxG,GAAAC,GAGA,IAFA,GAAAC,GAAAD,EAAA1hF,MAEA0hF,EAAAzuG,QAAA,CACA,GAAA0tE,GAAA+gC,EAAA1hF,KAEA2gD,KACAA,YAAA7xD,KACA6xD,IAAArjE,IAAA,eAQA,iBAAAqjE,KACAA,GACAlsD,UAAAksD,IAIAghC,EAAA,GAAA7yF,GAAA6xD,EAAAghC,IAAAv7F,UAIA,MAAAu7F,GAGA,QAAAllC,GAAAtrD,EAAAmQ,GACA,MAAAnQ,GAAA2U,gBAAAlhB,EAAA9P,KAAAwsB,EAAAwE,eAAAxE,GAGA,QAAAsgF,GAAA9iG,EAAAC,EAAAoC,EAAAw9D,EAAAC,EAAAijC,EAAAC,GACA,GAAArvC,GAAAsvC,EAAA5gG,GACAvL,EAAA68D,EAAA78D,MACAC,EAAA48D,EAAA58D,MAkBA,OAhBA,OAAAgsG,IACA/iG,EAAAlJ,EAAAisG,EAAAljC,EACA7/D,GAAAlJ,EAAAisG,EAEA/iG,GAAA+iG,GAIA,MAAAC,IACA/iG,EAAAlJ,EAAAisG,EAAAljC,EACA7/D,GAAAlJ,EAAAisG,EAEA/iG,GAAA+iG,IAIAhjG,EAAAC,GAGA,QAAAijG,GAAAljG,EAAAC,EAAAoC,EAAAw9D,EAAAC,GACA,GAAAnM,GAAAsvC,EAAA5gG,GACAvL,EAAA68D,EAAA78D,MACAC,EAAA48D,EAAA58D,MAKA,OAJAiJ,GAAAyB,KAAAiN,IAAA1O,EAAAlJ,EAAA+oE,GAAA/oE,EACAmJ,EAAAwB,KAAAiN,IAAAzO,EAAAlJ,EAAA+oE,GAAA/oE,EACAiJ,EAAAyB,KAAAC,IAAA1B,EAAA,GACAC,EAAAwB,KAAAC,IAAAzB,EAAA,IACAD,EAAAC,GAGA,QAAAgjG,GAAA5gG,GACA,GAAAvL,GAAAuL,EAAAq/F,YACA3qG,EAAAsL,EAAAs/F,YAGA,IAAApjG,SAAA2iG,aAAA3iG,SAAA2iG,YAAAC,iBAAA,CACA,GAAAH,GAAAziG,SAAA2iG,YAAAC,iBAAA9+F,EAEA2+F,KACAlqG,GAAA0xC,SAAAw4D,EAAA9pG,YAAA,IAAAsxC,SAAAw4D,EAAAmC,aAAA,IAAA36D,SAAAw4D,EAAAoC,gBAAA,IAAA56D,SAAAw4D,EAAAqC,iBAAA,IACAtsG,GAAAyxC,SAAAw4D,EAAAsC,WAAA,IAAA96D,SAAAw4D,EAAAuC,cAAA,IAAA/6D,SAAAw4D,EAAAwC,eAAA,IAAAh7D,SAAAw4D,EAAAyC,kBAAA,KAIA,OACA3sG,QACAC,UAIA,QAAA2sG,GAAA/hG,EAAAvC,EAAAukG,GACA,GAAAC,GAAAD,EAAA,GACAE,EAAAF,EAAA,GAEA3jG,EAAA,EACAC,EAAA,EACA6jG,EAAA1kG,EAAAtI,MACAitG,EAAA3kG,EAAArI,MAEA,QAAA4K,GACA,aACA3B,EAAAZ,EAAAY,EAAA8jG,EAAA,EAAAF,EAAA,EACA3jG,EAAAb,EAAAa,EAAA8jG,EAAA,EAAAF,EAAA,CACA,MAEA,WACA7jG,EAAAZ,EAAAY,EAAA8jG,EAAA,EAAAF,EAAA,EACA3jG,EAAAb,EAAAa,EAAA4jG,EAdA,CAeA,MAEA,cACA7jG,EAAAZ,EAAAY,EAAA8jG,EAAA,EAAAF,EAAA,EACA3jG,EAAAb,EAAAa,EAAA8jG,EAnBA,CAoBA,MAEA,YACA/jG,EAAAZ,EAAAY,EAAA4jG,EAvBA,EAwBA3jG,EAAAb,EAAAa,EAAA8jG,EAAA,EAAAF,EAAA,CACA,MAEA,aACA7jG,EAAAZ,EAAAY,EAAA8jG,EA5BA,EA6BA7jG,EAAAb,EAAAa,EAAA8jG,EAAA,EAAAF,EAAA,EAGA,OAAA7jG,EAAAC,GAGA,QAAA+jG,GAAA3kC,GACA,iBAAAA,GAAA,WAAAA,EAxsBA,GAAAoI,GAAAj2E,EAAA,MAEAsU,EAAAtU,EAAA,MAEA6zB,EAAA7zB,EAAA,MAEAyuG,EAAAzuG,EAAA,MAEA2iB,EAAA3iB,EAAA,MAEAmoC,EAAAnoC,EAAA,MAEAs5B,EAAAt5B,EAAA,MAEA2oG,EAAA3oG,EAAA,MAEAyyG,EAAAzyG,EAAA,MAEAwe,EAAAxe,EAAA,MAEAgkG,EAAAhkG,EAAA,MAEAwuE,EAAAxuE,EAAA,MAEA0yG,EAAA1yG,EAAA,MAEAwE,EAAA8P,EAAA9P,KACAoE,EAAA0L,EAAA1L,KACAme,EAAAohB,EAAAphB,aACA4rF,EAAA,GAAAr5E,GAAA5c,MACAtN,OACAZ,GAAA,EACAC,GAAA,EACAnJ,MAAA,EACAC,OAAA,KAIA49B,EAAA8yC,EAAA99C,qBACArzB,KAAA,UACAwnB,KAAA,SAAAxW,EAAAkb,GACA,IAAA6C,EAAAC,KAAA,CAIA,GAAA8+E,GAAA,GAAAnE,GAAAz9E,EAAAwJ,SAAAxJ,EACAltB,MAAA+uG,gBAAAD,IAEAn/E,OAAA,SAAA26E,EAAAt4F,EAAAkb,GACA,IAAA6C,EAAAC,KAAA,CAKAhwB,KAAAmoB,MAAA4mC,YAMA/uD,KAAAgvG,cAAA1E,EAMAtqG,KAAAivG,SAAAj9F,EAMAhS,KAAAspB,KAAA4D,EAOAltB,KAAAkvG,oBAAA,KAMAlvG,KAAAmvG,mBAAA7E,EAAAphG,IAAA,oBACA,IAAA4lG,GAAA9uG,KAAA+uG,eACAD,GAAArjF,SACAqjF,EAAA7C,aAAA3B,EAAAphG,IAAA,cAEAlJ,KAAAovG,sBAEApvG,KAAAqvG,cAEAD,oBAAA,WACA,GAAA9E,GAAAtqG,KAAAgvG,cACAtP,EAAA4K,EAAAphG,IAAA,YACAg3F,GAAA5sE,SAAA,cAAAtzB,KAAAspB,KAAA5oB,EAAA,SAAAuoE,EAAAl6D,EAAA2iB,GAEA,SAAAguE,IACAA,EAAAv7F,QAAA8kE,IAAA,EACAjpE,KAAAsvG,SAAAvgG,EAAA2iB,GACS,UAAAu3C,GACTjpE,KAAAuvG,MAAA79E,KAGK1xB,QAELqvG,UAAA,WACA,GAAA/E,GAAAtqG,KAAAgvG,cACAh9F,EAAAhS,KAAAivG,SACA/hF,EAAAltB,KAAAspB,IAEA,UAAAtpB,KAAAwvG,QAAA,MAAAxvG,KAAAyvG,QAGA,SAAAnF,EAAAphG,IAAA,cACA,GAAArM,GAAAmD,IACAq/D,cAAAr/D,KAAA0vG,uBACA1vG,KAAA0vG,sBAAApwC,WAAA,WAIAziE,EAAA8yG,gBAAArF,EAAAt4F,EAAAkb,GACAxiB,EAAA7N,EAAA2yG,OACA7kG,EAAA9N,EAAA4yG,aAsBAE,gBAAA,SAAArF,EAAAt4F,EAAAkb,EAAAnQ,GACA,GAAAA,EAAAha,OAAA/C,KAAAsnC,MAAAvX,EAAAC,KAAA,CAIA,GAAA0B,GAAA22C,EAAAtrD,EAAAmQ,EAEAltB,MAAA4vG,QAAA,EAEA,IAAAzK,GAAApoF,EAAAooF,cAEA,IAAApoF,EAAA+7C,SAAA,MAAA/7C,EAAArS,GAAA,MAAAqS,EAAApS,EAAA,CACA,GAAAoC,GAAA8hG,CACA9hG,GAAAV,UAAA0Q,EAAArS,EAAAqS,EAAApS,GACAoC,EAAA0e,SACA1e,EAAA+rD,QAAA/7C,EAAA+7C,QAEA94D,KAAAsvG,UACA51D,QAAA38B,EAAArS,EACAovC,QAAA/8B,EAAApS,EACAjM,OAAAqO,GACO2kB,OACF,IAAAyzE,EACLnlG,KAAAsvG,UACA51D,QAAA38B,EAAArS,EACAovC,QAAA/8B,EAAApS,EACA0B,SAAA0Q,EAAA1Q,SACAkgB,SACA44E,eAAApoF,EAAAooF,eACAzB,cAAA3mF,EAAA2mF,eACOhyE,OACF,UAAA3U,EAAAnC,YAAA,CACL,GAAA5a,KAAA6vG,qBAAAvF,EAAAt4F,EAAAkb,EAAAnQ,GACA,MAGA,IAAA+yF,GAAAjL,EAAA9nF,EAAA/K,GACAy/C,EAAAq+C,EAAAn4F,MAAA,GACA+5C,EAAAo+C,EAAAn4F,MAAA,EAEA,OAAA85C,GAAA,MAAAC,GACA1xD,KAAAsvG,UACA51D,QAAA+X,EACA3X,QAAA4X,EACArlD,SAAA0Q,EAAA1Q,SACA3N,OAAAoxG,EAAA/iG,GACAwf,UACSmF,OAEJ,OAAA3U,EAAArS,GAAA,MAAAqS,EAAApS,IAGLuiB,EAAAwE,gBACA1wB,KAAA,oBACA0J,EAAAqS,EAAArS,EACAC,EAAAoS,EAAApS,IAGA3K,KAAAsvG,UACA51D,QAAA38B,EAAArS,EACAovC,QAAA/8B,EAAApS,EACA0B,SAAA0Q,EAAA1Q,SACA3N,OAAAwuB,EAAAyJ,QAAA07D,UAAAt1E,EAAArS,EAAAqS,EAAApS,GAAAjM,OACA6tB,UACOmF,MAGPq+E,gBAAA,SAAAzF,EAAAt4F,EAAAkb,EAAAnQ,GACA,GAAA+xF,GAAA9uG,KAAA+uG,eAEA/uG,MAAAmvG,oBACAL,EAAAtD,UAAAxrG,KAAAgvG,cAAA9lG,IAAA,cAGAlJ,KAAAwvG,OAAAxvG,KAAAyvG,OAAA,KAEA1yF,EAAAha,OAAA/C,KAAAsnC,KACAtnC,KAAAuvG,MAAAlnC,EAAAtrD,EAAAmQ,KAMA2iF,qBAAA,SAAAvF,EAAAt4F,EAAAkb,EAAAnQ,GACA,GAAAnC,GAAAmC,EAAAnC,YACA7F,EAAAgI,EAAAhI,UACAm0C,EAAAl3C,EAAA6e,aAAA,eAAAq4B,gBAEA,UAAAtuC,GAAA,MAAA7F,GAAA,MAAAm0C,EAAA,CAIA,GAAA37B,GAAAvb,EAAA+oB,iBAAAngB,EAEA,IAAA2S,EAAA,CAIA,GAAA1oB,GAAA0oB,EAAAxS,UACAuvF,EAAA+C,GAAAxoG,EAAAsb,aAAApL,GAAAwY,KAAA4L,sBAAwH1e,MAAA6vF,GAExH,aAAAA,EAAAphG,IAAA,WAUA,MANAgkB,GAAAwE,gBACA1wB,KAAA,oBACA4Z,cACA7F,YACA1I,SAAA0Q,EAAA1Q,YAEA,KAEAijG,SAAA,SAAAvgG,EAAA2iB,GACA,GAAA3kB,GAAAgC,EAAArQ,MAGA,IAFAsB,KAAAgvG,cAEA,CAKAhvG,KAAAwvG,OAAAzgG,EAAA2qC,QACA15C,KAAAyvG,OAAA1gG,EAAA+qC,OACA,IAAAqrD,GAAAp2F,EAAAo2F,cAEAA,MAAAtmG,OACAmB,KAAAgwG,iBAAA7K,EAAAp2F,GAEAhC,GAAA,MAAAA,EAAAgI,WACA/U,KAAAkvG,oBAAA,KAEAlvG,KAAAiwG,uBAAAlhG,EAAAhC,EAAA2kB,IAEA3kB,KAAA+rD,SACA94D,KAAAkvG,oBAAA,KAEAlvG,KAAAkwG,0BAAAnhG,EAAAhC,EAAA2kB,KAEA1xB,KAAAkvG,oBAAA,KAEAlvG,KAAAuvG,MAAA79E,MAGAy+E,YAAA,SAAA7F,EAAAvlG,GAKA,GAAA25D,GAAA4rC,EAAAphG,IAAA,YACAnE,GAAAyL,EAAA9P,KAAAqE,EAAA/E,MACAq/D,aAAAr/D,KAAAowG,aACA1xC,EAAA,EAAA1+D,KAAAowG,YAAA9wC,WAAAv6D,EAAA25D,GAAA35D,KAEAirG,iBAAA,SAAA7K,EAAAp2F,GACA,GAAAiD,GAAAhS,KAAAivG,SACA3lD,EAAAtpD,KAAAgvG,cACAr3F,GAAA5I,EAAA2qC,QAAA3qC,EAAA+qC,SACAu2D,KACAC,KACAC,EAAAlD,GAAAt+F,EAAA20F,cAAAp6C,GACAxkD,GAAAqgG,EAAA,SAAAqL,GAWA1rG,EAAA0rG,EAAAtJ,WAAA,SAAAvrF,GACA,GAAAywC,GAAAp6C,EAAA6e,aAAAlV,EAAAi3D,QAAA,OAAAj3D,EAAA68D,WACAi4B,EAAA90F,EAAApe,MACAmzG,IAEA,IAAAtkD,GAAA,MAAAqkD,EAAA,CAIA,GAAAE,GAAA/B,EAAAhlC,cAAA6mC,EAAArkD,EAAA7hB,KAAAv4B,EAAA2J,EAAA8uD,kBAAA9uD,EAAAyrF,cACA52F,GAAA1L,KAAA6W,EAAA8uD,kBAAA,SAAAG,GACA,GAAA77C,GAAA/c,EAAA+oB,iBAAA6vC,EAAAhwD,aACA7F,EAAA61D,EAAA5tD,gBACA6tD,EAAA97C,KAAAhQ,cAAAhK,EACA81D,GAAA+H,QAAAj3D,EAAAi3D,QACA/H,EAAA2N,UAAA78D,EAAA68D,UACA3N,EAAA5gC,SAAAtuB,EAAAsuB,SACA4gC,EAAAs8B,OAAAxrF,EAAAwrF,OACAt8B,EAAA4lC,UAAA/lC,EAAAh/B,gBAAA0gB,EAAA7hB,KAAAkmE,GACA5lC,EAAA+lC,eAAAD,EAEA9lC,IACAylC,EAAAjrG,KAAAwlE,GACA6lC,EAAArrG,KAAA0pB,EAAAvO,cAAAzL,GAAA,MAOA,IAAA87F,GAAAF,CACAN,GAAAhrG,MAAAwrG,EAAAhyF,EAAAwkB,WAAAwtE,GAAA,aAAAH,EAAA/7F,KAAA,eAEK3U,MAELqwG,EAAA1jD,UACA0jD,IAAA17F,KAAA,eACA,IAAAm8F,GAAA/hG,EAAA1C,QAEArM,MAAAmwG,YAAAI,EAAA,WACAvwG,KAAA+wG,+BAAA5L,GACAnlG,KAAAgxG,gBAAAT,EAAAO,EAAAn5F,EAAA,GAAAA,EAAA,GAAA3X,KAAA+uG,gBAAAuB,GAEAtwG,KAAAixG,oBAAAV,EAAAF,EAAAC,EAAAnkG,KAAAouD,SAAA5iD,EAAA,GAAAA,EAAA,GAAAm5F,MAMAb,uBAAA,SAAAlhG,EAAAhC,EAAA2kB,GACA,GAAA1f,GAAAhS,KAAAivG,SAIAr0F,EAAA7N,EAAA6N,YACA2S,EAAAvb,EAAA+oB,iBAAAngB,GAEAkgB,EAAA/tB,EAAA+tB,WAAAvN,EACAxY,EAAAhI,EAAAgI,UACAiK,EAAAjS,EAAAiS,SACAna,EAAAi2B,EAAA/f,UACAuvF,EAAA+C,GAAAxoG,EAAAsb,aAAApL,GAAA+lB,EAAAvN,MAAA4L,sBAAqI1e,MAAAza,KAAAgvG,gBACrIkC,EAAA5G,EAAAphG,IAAA,UAEA,UAAAgoG,GAAA,SAAAA,EAAA,CAIA,GAAA9wF,GAAA0a,EAAA/b,cAAAhK,EAAAiK,GACAmyF,EAAAr2E,EAAAta,cAAAzL,GAAA,EAAAiK,GACAoyF,EAAA,QAAAt2E,EAAA14B,KAAA,IAAA2S,CAEA/U,MAAAmwG,YAAA7F,EAAA,WACAtqG,KAAAixG,oBAAA3G,EAAA6G,EAAA/wF,EAAAgxF,EAAAriG,EAAA2qC,QAAA3qC,EAAA+qC,QAAA/qC,EAAA1C,SAAA0C,EAAArQ,UAKAgzB,GACA1wB,KAAA,UACAgc,gBAAAjI,EACAA,UAAAlQ,EAAAua,YAAArK,GACA6F,cACA7X,KAAA/C,KAAAsnC,QAGA4oE,0BAAA,SAAAnhG,EAAAhC,EAAA2kB,GACA,GAAA66C,GAAAx/D,EAAA+rD,OAEA,qBAAAyT,GAAA,CACA,GAAA8E,GAAA9E,CACAA,IACA8E,UAEAhxD,UAAAgxD,GAIA,GAAAggC,GAAA,GAAA32F,GAAA6xD,EAAAvsE,KAAAgvG,cAAAhvG,KAAAivG,UACAkC,EAAAE,EAAAnoG,IAAA,WACAkoG,EAAAjlG,KAAAouD,QAIAv6D,MAAAmwG,YAAAkB,EAAA,WACArxG,KAAAixG,oBAAAI,EAAAF,EAAAE,EAAAnoG,IAAA,uBAAyGkoG,EAAAriG,EAAA2qC,QAAA3qC,EAAA+qC,QAAA/qC,EAAA1C,SAAAU,KAIzG2kB,GACA1wB,KAAA,UACA+B,KAAA/C,KAAAsnC,OAGA2pE,oBAAA,SAAA3G,EAAA6G,EAAA/wF,EAAAgxF,EAAA1mG,EAAAC,EAAAmmG,EAAA/jG,GAIA,GAFA/M,KAAA4vG,QAAA,GAEAtF,EAAAphG,IAAA,gBAAAohG,EAAAphG,IAAA,SAIA,GAAA4lG,GAAA9uG,KAAA+uG,gBACA1uF,EAAAiqF,EAAAphG,IAAA,YACA4nG,MAAAxG,EAAAphG,IAAA,WACA,IAAAooG,GAAAH,CAEA,IAAA9wF,GAAA,iBAAAA,GACAixF,EAAAzyF,EAAAyB,UAAAD,EAAAD,GAAA,OACK,uBAAAC,GAAA,CACL,GAAA5f,GAAAC,EAAA,SAAA6wG,EAAAD,GACAC,IAAAvxG,KAAA4vG,UACAd,EAAA9C,WAAAsF,GAEAtxG,KAAAgxG,gBAAA1G,EAAAwG,EAAApmG,EAAAC,EAAAmkG,EAAA1uF,EAAArT,KAEO/M,KACPA,MAAA4vG,QAAAwB,EACAE,EAAAjxF,EAAAD,EAAAgxF,EAAA3wG,GAGAquG,EAAA9C,WAAAsF,GACAxC,EAAAljD,KAAA0+C,GAEAtqG,KAAAgxG,gBAAA1G,EAAAwG,EAAApmG,EAAAC,EAAAmkG,EAAA1uF,EAAArT,KAaAikG,gBAAA,SAAA1G,EAAAwG,EAAApmG,EAAAC,EAAA0mE,EAAAjxD,EAAArT,GACA,GAAAw9D,GAAAvqE,KAAAspB,KAAA4N,WAEAszC,EAAAxqE,KAAAspB,KAAA6N,WAEA25E,MAAAxG,EAAAphG,IAAA,WACA,IAAAmlG,GAAAh9B,EAAA86B,UACApiC,EAAAugC,EAAAphG,IAAA,SACAsoG,EAAAlH,EAAAphG,IAAA,iBACAY,EAAAiD,KAAA5C,kBAAA5H,OAWA,IAVAwK,GAAAjD,EAAAkB,eAAA+B,EAAAoJ,WAEA,mBAAA26F,KAEAA,KAAApmG,EAAAC,GAAAyV,EAAAixD,EAAAtkE,GAAAjD,GACA2nG,UAAAlnC,EAAAC,GACA6jC,cAAAtnG,WAIAyJ,EAAA/M,QAAAqtG,GACApmG,EAAAuY,EAAA6tF,EAAA,GAAAvmC,GACA5/D,EAAAsY,EAAA6tF,EAAA,GAAAtmC,OACK,IAAAh6D,EAAAlN,SAAAwtG,GAAA,CACLA,EAAAtvG,MAAA6sG,EAAA,GACAyC,EAAArvG,OAAA4sG,EAAA,EACA,IAAA1E,GAAAgF,EAAAzhE,cAAA4jE,GACAtvG,MAAA+oE,EACA9oE,OAAA+oE,GAEA9/D,GAAAi/F,EAAAj/F,EACAC,EAAAg/F,EAAAh/F,EACAo/D,EAAA,KAGAynC,EAAA,SAEA,qBAAAV,IAAA/jG,EAAA,CACA,GAAAwiE,GAAA6+B,EAAA0C,EAAAhnG,EAAAukG,EACA3jG,GAAA6kE,EAAA,GACA5kE,EAAA4kE,EAAA,OACO,CACP,GAAAA,GAAAi+B,EAAA9iG,EAAAC,EAAA0mE,EAAAtkE,GAAAw9D,EAAAC,EAAAT,EAAA,QAAAynC,EAAA,QACA9mG,GAAA6kE,EAAA,GACA5kE,EAAA4kE,EAAA,GAMA,GAHAxF,IAAAr/D,GAAAgkG,EAAA3kC,GAAAskC,EAAA,eAAAtkC,EAAAskC,EAAA,MACAmD,IAAA7mG,GAAA+jG,EAAA8C,GAAAnD,EAAA,gBAAAmD,EAAAnD,EAAA,MAEA/D,EAAAphG,IAAA,YACA,GAAAqmE,GAAAq+B,EAAAljG,EAAAC,EAAA0mE,EAAAtkE,GAAAw9D,EAAAC,EACA9/D,GAAA6kE,EAAA,GACA5kE,EAAA4kE,EAAA,GAGA8B,EAAAvgB,OAAApmD,EAAAC,IAIAomG,+BAAA,SAAA5L,GACA,GAAAuM,GAAA1xG,KAAAkvG,oBACAyC,IAAAD,KAAA7yG,SAAAsmG,EAAAtmG,MAkBA,OAjBA8yG,IAAA7sG,EAAA4sG,EAAA,SAAAE,EAAAC,GACA,GAAAC,GAAAF,EAAA1K,eACA6K,EAAA5M,EAAA0M,OACAG,EAAAD,EAAA7K,gBACAyK,GAAAG,EAAAjzG,SAAAmzG,EAAAnzG,SACAiG,EAAAgtG,EAAA,SAAAG,EAAAC,GACA,GAAA/2C,GAAA62C,EAAAE,OACAC,EAAAF,EAAAxnC,sBACA+S,EAAAriB,EAAAsP,uBACAknC,GAAAM,EAAA10G,QAAA49D,EAAA59D,OAAA00G,EAAAhoE,WAAAkxB,EAAAlxB,UAAAgoE,EAAA9K,SAAAhsC,EAAAgsC,QAAAgL,EAAAtzG,SAAA2+E,EAAA3+E,SACAiG,EAAAqtG,EAAA,SAAAC,EAAA51F,GACA,GAAA61F,GAAA70B,EAAAhhE,EACAm1F,IAAAS,EAAAx3F,cAAAy3F,EAAAz3F,aAAAw3F,EAAAr9F,YAAAs9F,EAAAt9F,gBAIA/U,KAAAkvG,oBAAA/J,IACAwM,GAEApC,MAAA,SAAA79E,GAKA1xB,KAAAkvG,oBAAA,KACAx9E,GACA1wB,KAAA,UACA+B,KAAA/C,KAAAsnC,OAGA5Y,QAAA,SAAA1c,EAAAkb,GACA6C,EAAAC,OAIAhwB,KAAA+uG,gBAAA1sB,OAEA6d,EAAAh3B,WAAA,cAAAh8C,MA2IAlxB,GAAAC,QAAAojC,GtG0myBMizE,KACA,SAAUt2G,EAAQC,EAASC,GuGtzzBjC,GAAAsU,GAAAtU,EAAA,MAEAkrC,GACAwkB,MAAA,EACAr7B,OAAA,EAEAD,EAAA,EAGA+7C,SAAA,EAEAjqE,KAAA,GAEA0rE,aAAA,MAEAykC,WAAA,KAEAC,cACAxmE,SAAA,KACAsE,SAAA,MACAO,YAAA,KAGA4hE,iBAEAC,QAAA,GACAxnF,QAAA,EAEAikD,cAAA,EAEArW,SACAlN,MAAA,GAEAsmB,eAEA/B,UAEAvkB,MAAA,EACA+mB,QAAA,EACAO,gBAAA,KAEApnB,WACAn/C,MAAA,OACAnL,MAAA,EACAR,KAAA,SAGAyvE,QAAA,eACA1L,YAAA,QAGA4tC,UAEA/mD,MAAA,EAEAgnD,QAAA,EAEA/zG,OAAA,EAEAitD,WACAtqD,MAAA,IAIAqxG,WACAjnD,MAAA,EAEAgnD,QAAA,EACAp6D,OAAA,EACAm0B,aAAA,KAEAC,aAAA,KAEA7/B,OAAA,EAGAlrC,SAAA,IAGAixG,WAEAlnD,MAAA,EAEAE,WACAn/C,OAAA,QACAnL,MAAA,EACAR,KAAA,UAIA+xG,WAEAnnD,MAAA,EAEAi9C,WACAl8F,OAAA,oDAIAqmG,IACAA,GAAAhX,aAAAxrF,EAAApN,OAEAwlC,aAAA,EAIAkqE,WACAlnD,MAAA,GAGA+mD,UAEAt+B,gBAAA,EACAvtD,SAAA,QAGA+rF,WACA/rF,SAAA,SAECsgB,GACD4rE,EAAAhb,UAAAxnF,EAAApN,OAEAwlC,aAAA,KAYAa,YAAA,GAICrC,GAED4rE,EAAAC,SAAAziG,EAAA1M,UACA6d,OAAA,EACAvI,IAAA,UACAhN,IAAA,WACC4mG,EAAAhb,WACDgb,EAAAE,QAAA1iG,EAAA1M,UACA6d,OAAA,EACAwxF,QAAA,IACCH,EAAAhb,UACD,IAAA34D,GAAA2zE,CACAh3G,GAAAC,QAAAojC,GvG4zzBM+zE,KACA,SAAUp3G,EAAQC,EAASC,GwG/7zBjC,QAAAmjC,GAAAsxC,EAAA0iC,EAAAC,EAAAC,GACA/iG,EAAA1L,KAAA0uG,EAAA,SAAAvpE,GACAopE,EAAAxvG,QACA7C,KAAA2vE,EAAA,QAAA1mC,EACAvC,qBAAA,SAAAx1B,EAAAF,GACA,GAAAu1B,GAAAvnC,KAAAunC,WACAI,EAAAJ,EAAAK,EAAA11B,MACA21B,EAAA71B,EAAA81B,UACAt3B,GAAApN,MAAA8O,EAAA21B,EAAA3+B,IAAA+gC,EAAA,SACAz5B,EAAApN,MAAA8O,EAAAlS,KAAA+nC,oBACA71B,EAAAlR,KAAAsyG,EAAA3iC,EAAAz+D,GAEAq1B,GACAS,EAAA91B,EAAAy1B,EAAAJ,IAGAH,cAAA52B,EAAA7M,aAAwCqvG,EAAA/oE,EAAA,QAAAspE,IAAA,OAGxCn/E,EAAAsmC,yBAAAiW,EAAA,OAAAngE,EAAAtK,MAAAotG,EAAA3iC,IAvCA,GAAAngE,GAAAtU,EAAA,MAEA82G,EAAA92G,EAAA,MAEAk4B,EAAAl4B,EAAA,MAEA67D,EAAA77D,EAAA,MAEA0rC,EAAAmwB,EAAAnwB,gBACAI,EAAA+vB,EAAA/vB,iBAEAwrE,GAAA,gCA+BAx3G,GAAAC,QAAAojC,GxGy9zBMo0E,KACA,SAAUz3G,EAAQC,EAASC,GyGpg0BjC,GAAAsU,GAAAtU,EAAA,MAEA63E,EAAA73E,EAAA,MAYA67E,EAAA,SAAA7rB,EAAAvqC,EAAA+xF,EAAAzpE,EAAA59B,GACA0nE,EAAAj3E,KAAAkD,KAAAksD,EAAAvqC,EAAA+xF,GAUA1zG,KAAAgB,KAAAipC,GAAA,QASAjqC,KAAAqM,YAAA,SAGA0rE,GAAA56E,WACAG,YAAAy6E,EAKA58D,MAAA,EAMAw3D,QAAA,EAMAl4D,MAAA,KACAm6D,aAAA,WACA,GAAAvoE,GAAArM,KAAAqM,QACA,eAAAA,GAAA,WAAAA,GAWAurF,gBAAA,SAAAp0E,GACA,GAAA2hB,GAAAnlC,KAAAopC,WAIA,OAHAjE,GAAA,GAAAnlC,KAAAozE,cAAAjuC,EAAA,IACAA,EAAA,GAAAnlC,KAAAozE,cAAAjuC,EAAA,IACA3hB,GAAA2hB,EAAA,GAAAA,EAAA,IAAAA,EAAAwnB,UACAxnB,GAEAo0C,aAAA,WACAv5E,KAAAwyE,KAAA+G,gBASA9C,eAAA,SAAAl2D,GACA,gBAAAvgB,KAAAgB,KAAA,CACA,GAAAqtE,GAAAruE,KAAAuzE,kBACA,0BAAAlF,OAAA9tD,EAAAvgB,KAAA2hB,MAAAgqB,SAAAprB,QAAA8tD,EAAA,KAOA+F,YAAA,SAAAz8D,EAAAmL,GACA,MAAA9iB,MAAAm0E,YAAAn0E,KAAA03E,aAAA//D,EAAA,MAAA3X,KAAAksD,IAAA,MAAAppC,IASA40D,aAAA,KAQAtE,cAAA,MAEA5iE,EAAAnM,SAAA0zE,EAAAhE,EACA,IAAA10C,GAAA04C,CACA/7E,GAAAC,QAAAojC,GzG0g0BMs0E,KACA,SAAU33G,EAAQC,EAASC,G0G1n0BjC,QAAA03G,GAAA1nD,GACA,MAAAlsD,MAAA6zG,MAAA3nD,GARA,GAAA17C,GAAAtU,EAAA,MAgBA43G,EAAA,SAAA1xG,GACApC,KAAA6zG,SACA7zG,KAAA+zG,YAKA/zG,KAAAoC,QAAA,GAGA0xG,GAAA32G,WACAG,YAAAw2G,EACA9yG,KAAA,YAOAirD,QAAA,SAAAC,GACA,MAAAlsD,MAAA6zG,MAAA3nD,IAOAlB,QAAA,WACA,MAAAx6C,GAAArL,IAAAnF,KAAA+zG,SAAAH,EAAA5zG,OAMAi8F,eAAA,SAAAnzD,GAEA,MADAA,KAAAprB,cACAlN,EAAA/K,OAAAzF,KAAAgrD,UAAA,SAAAzgB,GACA,MAAAA,GAAA5oB,MAAA3gB,OAAA8nC,KAQAuwC,QAAA,SAAA9uC,GACA,GAAA2hB,GAAA3hB,EAAA2hB,GACAlsD,MAAA6zG,MAAA3nD,GAAA3hB,EAEAvqC,KAAA+zG,SAAA1uG,KAAA6mD,IAQA8e,YAAA,SAAA9jE,GACA,MAAAlH,MAAAg0G,kBAAA9sG,EAAA,gBAQAitE,YAAA,SAAAjtE,GACA,MAAAlH,MAAAg0G,kBAAA9sG,EAAA,gBAEA8sG,kBAAA,SAAAC,EAAAzsF,GAIA,OAHA0sF,GAAAl0G,KAAA+zG,SACAI,EAAAF,YAAAjrG,aAEApK,EAAA,EAAmBA,EAAAs1G,EAAAr1G,OAAoBD,IAAA,CACvC,GAAAstD,GAAAgoD,EAAAt1G,GACA2rC,EAAAvqC,KAAA6zG,MAAA3nD,EACAioD,GAAAjoD,GAAA3hB,EAAA/iB,GAAAysF,EAAA/nD,IAGA,MAAAioD,IAGA,IAAA90E,GAAAy0E,CACA93G,GAAAC,QAAAojC,G1Guo0BM+0E,KACA,SAAUp4G,EAAQC,EAASC,G2Gvu0BjC,QAAA47E,GAAA11E,GACA0xG,EAAAh3G,KAAAkD,KAAAoC,GALA,GAAAoO,GAAAtU,EAAA,MAEA43G,EAAA53G,EAAA,KAMA47E,GAAA36E,WACAG,YAAAw6E,EACA92E,KAAA,cAMAid,YAAA,SAOAw6C,YAAA,WACA,MAAAz4D,MAAAi8F,eAAA,eAAAj8F,KAAAi8F,eAAA,YAAAj8F,KAAAisD,QAAA,MAQA7yB,aAAA,SAAAzhB,GACA,GAAA08F,GAAAr0G,KAAAisD,QAAA,KACAqoD,EAAAt0G,KAAAisD,QAAA,IACA,OAAAooD,GAAA/1E,QAAA+1E,EAAA38B,aAAA//D,EAAA,MAAA28F,EAAAh2E,QAAAg2E,EAAA58B,aAAA//D,EAAA,MAQAu8D,YAAA,SAAArvE,GACA,MAAA7E,MAAAisD,QAAA,KAAAioB,YAAArvE,EAAA,KAAA7E,KAAAisD,QAAA,KAAAioB,YAAArvE,EAAA,KAQAijE,YAAA,SAAAjjE,EAAAie,GACA,GAAA2wD,GAAAzzE,KAAAisD,QAAA,KACAynB,EAAA1zE,KAAAisD,QAAA,IACA,QAAAwnB,EAAAL,cAAAK,EAAAzI,YAAAnmE,EAAA,GAAAie,IAAA4wD,EAAAN,cAAAM,EAAA1I,YAAAnmE,EAAA,GAAAie,MAQAsxD,YAAA,SAAAz8D,EAAAmL,GACA,GAAA2wD,GAAAzzE,KAAAisD,QAAA,KACAynB,EAAA1zE,KAAAisD,QAAA,IACA,QAAAwnB,EAAAU,YAAAV,EAAAiE,aAAA//D,EAAA,IAAAmL,GAAA4wD,EAAAS,YAAAT,EAAAgE,aAAA//D,EAAA,IAAAmL,KAOAy2D,aAAA,SAAAhvC,GACA,MAAAvqC,MAAAisD,QAAA,MAAA1hB,EAAA2hB,IAAA,WAGA17C,EAAAnM,SAAAyzE,EAAAg8B,EACA,IAAAz0E,GAAAy4C,CACA97E,GAAAC,QAAAojC,G3Giv0BMk1E,KACA,SAAUv4G,EAAQC,EAASC,G4Gj00BjCA,EAAA,KAEA,IAAAk4B,GAAAl4B,EAAA,MAIAmjC,EAAAjL,EAAAvwB,QACA7C,KAAA,OACA40B,cAAA,iBACA2R,WAAA,MAKApO,iBAAA,KACAiO,eACAwkB,MAAA,EACAr7B,OAAA,EACAD,EAAA,EACAiI,KAAA,MACAC,IAAA,GACAC,MAAA,MACAC,OAAA,GAEA87E,cAAA,EAGA78E,gBAAA,gBACAmoE,YAAA,EACAD,YAAA,SAIA7jG,GAAAC,QAAAojC,G5Gu00BMo1E,KACA,SAAUz4G,EAAQC,EAASC,G6Gx10BjC,QAAAw4G,GAAAtyG,EAAAuyG,EAAAC,GAaA,GARA50G,KAAAoC,OAMApC,KAAA20G,aAEAC,EAIAA,KAAA,GAAAA,EAAA,QAJA,CACA,GAAA9qG,GAAA9J,KAAAmK,iBACAyqG,IAAA9qG,EAAAY,EAAAZ,EAAAtI,MAAA,EAAAsI,EAAAa,EAAAb,EAAArI,OAAA,GASAzB,KAAA2vF,OAAAilB,EAzCA,GAAAz7F,GAAAjd,EAAA,MAEAqzD,EAAArzD,EAAA,MAEAmkC,EAAAnkC,EAAA,MAEA24G,EAAA34G,EAAA,KAsCAw4G,GAAAv3G,WACAG,YAAAo3G,EACA9xE,WAAA,KAKAz4B,gBAAA,WACA,GAAAL,GAAA9J,KAAA+9B,KAEA,IAAAj0B,EACA,MAAAA,EAUA,QAPAgrG,GAAAzvF,OAAA4tC,UACA75C,GAAA07F,KACA1oG,IAAA0oG,MACAnlD,KACAC,KACA+kD,EAAA30G,KAAA20G,WAEA/1G,EAAA,EAAmBA,EAAA+1G,EAAA91G,OAAuBD,IAE1C,eAAA+1G,EAAA/1G,GAAAoC,KAAA,CAKA,GAAA+zG,GAAAJ,EAAA/1G,GAAAm2G,QACAxlD,GAAAk6B,WAAAsrB,EAAAplD,EAAAC,GACAvvB,EAAAjnB,QAAAu2C,GACAtvB,EAAAj0B,QAAAwjD,GAQA,MAJA,KAAAhxD,IACAwa,EAAA,GAAAA,EAAA,GAAAhN,EAAA,GAAAA,EAAA,MAGApM,KAAA+9B,MAAA,GAAA5kB,GAAAC,EAAA,GAAAA,EAAA,GAAAhN,EAAA,GAAAgN,EAAA,GAAAhN,EAAA,GAAAgN,EAAA,KAOAklB,QAAA,SAAAqlC,GACA,GAAA75D,GAAA9J,KAAAmK,kBACAwqG,EAAA30G,KAAA20G,UAEA,KAAA7qG,EAAAw0B,QAAAqlC,EAAA,GAAAA,EAAA,IACA,QAGAqxC,GAAA,OAAAp2G,GAAA,EAAAgE,EAAA+xG,EAAA91G,OAAqDD,EAAAgE,EAAShE,IAE9D,eAAA+1G,EAAA/1G,GAAAoC,KAAA,CAIA,GAAA+zG,GAAAJ,EAAA/1G,GAAAm2G,SACAE,EAAAN,EAAA/1G,GAAAq2G,SAEA,IAAAJ,EAAAv2E,QAAAy2E,EAAApxC,EAAA,GAAAA,EAAA,KAEA,OAAA5/B,GAAA,EAAuBA,GAAAkxE,IAAAp2G,OAAA,GAAwCklC,IAC/D,GAAA8wE,EAAAv2E,QAAA22E,EAAAlxE,IACA,QAAAixE,EAIA,WAIA,UAEAE,YAAA,SAAAxqG,EAAAC,EAAAnJ,EAAAC,GACA,GAAAqI,GAAA9J,KAAAmK,kBACAY,EAAAjB,EAAAtI,MAAAsI,EAAArI,MAEAD,GAEKC,IACLA,EAAAD,EAAAuJ,GAFAvJ,EAAAuJ,EAAAtJ,CASA,QAJA/C,GAAA,GAAAya,GAAAzO,EAAAC,EAAAnJ,EAAAC,GACA0U,EAAArM,EAAAqB,mBAAAzM,GACAi2G,EAAA30G,KAAA20G,WAEA/1G,EAAA,EAAmBA,EAAA+1G,EAAA91G,OAAuBD,IAE1C,eAAA+1G,EAAA/1G,GAAAoC,KAAA,CAOA,OAHA+zG,GAAAJ,EAAA/1G,GAAAm2G,SACAE,EAAAN,EAAA/1G,GAAAq2G,UAEAz4D,EAAA,EAAqBA,EAAAu4D,EAAAl2G,OAAqB29C,IAC1Cnc,EAAAr1B,eAAA+pG,EAAAv4D,GAAAu4D,EAAAv4D,GAAArmC,EAGA,QAAAquB,GAAA,EAAqBA,GAAAywE,IAAAp2G,OAAA,GAAwC2lC,IAC7D,OAAAgY,GAAA,EAAuBA,EAAAy4D,EAAAzwE,GAAA3lC,OAAyB29C,IAChDnc,EAAAr1B,eAAAiqG,EAAAzwE,GAAAgY,GAAAy4D,EAAAzwE,GAAAgY,GAAArmC,GAKArM,EAAA9J,KAAA+9B,MACAj0B,EAAAgX,KAAApiB,GAEAsB,KAAA2vF,QAAA7lF,EAAAY,EAAAZ,EAAAtI,MAAA,EAAAsI,EAAAa,EAAAb,EAAArI,OAAA,IAGA,IAAA49B,GAAAq1E,CACA14G,GAAAC,QAAAojC,G7G+20BM81E,KACA,SAAUn5G,EAAQC,EAASC,G8G1g1BjC,QAAAk5G,GAAAC,GACA,IAAAA,EAAAC,aACA,MAAAD,EAGA,IAAAE,GAAAF,EAAAG,SAEA,OAAAD,IACAA,EAAA,KAKA,QAFAxgF,GAAAsgF,EAAAtgF,SAEAtO,EAAA,EAAiBA,EAAAsO,EAAAl2B,OAAqB4nB,IAMtC,OALAgvF,GAAA1gF,EAAAtO,GACAivF,EAAAD,EAAAC,SACAC,EAAAD,EAAAC,YACAC,EAAAF,EAAAE,cAEAphE,EAAA,EAAmBA,EAAAmhE,EAAA92G,OAAwB21C,IAAA,CAC3C,GAAAqhE,GAAAF,EAAAnhE,EAEA,gBAAAkhE,EAAA10G,KACA20G,EAAAnhE,GAAAshE,EAAAD,EAAAD,EAAAphE,GAAA+gE,OACO,qBAAAG,EAAA10G,KACP,OAAA+0G,GAAA,EAAwBA,EAAAF,EAAAh3G,OAAwBk3G,IAAA,CAChD,GAAA/a,GAAA6a,EAAAE,EACAF,GAAAE,GAAAD,EAAA9a,EAAA4a,EAAAphE,GAAAuhE,GAAAR,IAQA,MADAF,GAAAC,cAAA,EACAD,EAGA,QAAAS,GAAAD,EAAAD,EAAAL,GAKA,OAJA9yG,MACAimG,EAAAkN,EAAA,GACAjN,EAAAiN,EAAA,GAEAh3G,EAAA,EAAiBA,EAAAi3G,EAAAh3G,OAAuBD,GAAA,GACxC,GAAA8L,GAAAmrG,EAAAzkE,WAAAxyC,GAAA,GACA+L,EAAAkrG,EAAAzkE,WAAAxyC,EAAA,KAEA8L,MAAA,MAAAA,GACAC,KAAA,MAAAA,GAEAD,GAAAg+F,EACA/9F,GAAAg+F,EACAD,EAAAh+F,EACAi+F,EAAAh+F,EAEAlI,EAAA4C,MAAAqF,EAAA6qG,EAAA5qG,EAAA4qG,IAGA,MAAA9yG,GASA,QAAA48B,GAAAxK,GAEA,MADAugF,GAAAvgF,GACArkB,EAAArL,IAAAqL,EAAA/K,OAAAovB,EAAAE,SAAA,SAAAihF,GAEA,MAAAA,GAAAN,UAAAM,EAAApzE,YAAAozE,EAAAN,SAAAC,YAAA92G,OAAA,IACG,SAAAm3G,GACH,GAAApzE,GAAAozE,EAAApzE,WACA80B,EAAAs+C,EAAAN,SACAC,EAAAj+C,EAAAi+C,YACAhB,IAEA,aAAAj9C,EAAA12D,MACA2zG,EAAAtvG,MACArE,KAAA,UAGA+zG,SAAAY,EAAA,GACAV,UAAAU,EAAA5uG,MAAA,KAIA,iBAAA2wD,EAAA12D,MACAwP,EAAA1L,KAAA6wG,EAAA,SAAAh6F,GACAA,EAAA,IACAg5F,EAAAtvG,MACArE,KAAA,UACA+zG,SAAAp5F,EAAA,GACAs5F,UAAAt5F,EAAA5U,MAAA,MAMA,IAAAkvG,GAAA,GAAAvB,GAAA9xE,EAAAxgC,KAAAuyG,EAAA/xE,EAAAgyE,GAEA,OADAqB,GAAArzE,aACAqzE,IA9GA,GAAAzlG,GAAAtU,EAAA,MAEAw4G,EAAAx4G,EAAA,KAgHAF,GAAAC,QAAAojC,G9Gwh1BM62E,KACA,SAAUl6G,EAAQC,G+G3o1BxB,QAAAk6G,GAAAx6F,GACA,MAAAA,GAWA,QAAA6+D,GAAA47B,EAAAC,EAAAC,EAAAC,EAAAvxG,GACAhF,KAAAw2G,KAAAJ,EACAp2G,KAAAy2G,KAAAJ,EACAr2G,KAAA02G,cAAAJ,GAAAH,EACAn2G,KAAA22G,cAAAJ,GAAAJ,EACAn2G,KAAAgF,UAuFA,QAAA4xG,GAAAnzF,EAAAte,EAAA0xG,EAAAC,EAAAC,GACA,OAAAn4G,GAAA,EAAiBA,EAAA6kB,EAAA5kB,OAAgBD,IAAA,CAEjC,GAAAG,GAAA,OAAAg4G,EAAAD,GAAArzF,EAAA7kB,MACAo4G,EAAA7xG,EAAApG,EAEA,OAAAi4G,GACAH,EAAAxxG,KAAAtG,GACAoG,EAAApG,GAAAH,IAEAo4G,EAAAn4G,SACAsG,EAAApG,GAAAi4G,OAGAA,EAAA3xG,KAAAzG,KAlGA47E,EAAAr9E,WACAG,YAAAk9E,EAKAt5D,IAAA,SAAAtb,GAEA,MADA5F,MAAAi3G,KAAArxG,EACA5F,MAMAyrB,OAAA,SAAA7lB,GAEA,MADA5F,MAAAk3G,QAAAtxG,EACA5F,MAMAyuB,OAAA,SAAA7oB,GAEA,MADA5F,MAAAm3G,QAAAvxG,EACA5F,MAEAu0F,QAAA,WACA,GAMA31F,GANAw3G,EAAAp2G,KAAAw2G,KACAH,EAAAr2G,KAAAy2G,KACAW,KACAC,KACAC,KACAC,IAOA,KALAX,EAAAR,EAAAgB,EAAAE,EAAA,gBAAAt3G,MACA42G,EAAAP,EAAAgB,EAAAE,EAAA,gBAAAv3G,MAIApB,EAAA,EAAeA,EAAAw3G,EAAAv3G,OAAmBD,IAAA,CAClC,GAAAG,GAAAu4G,EAAA14G,GACA2hB,EAAA82F,EAAAt4G,EAEA,UAAAwhB,EAAA,CAGA,GAAA3d,GAAA2d,EAAA1hB,MAEA+D,IACA,IAAAA,IAAAy0G,EAAAt4G,GAAA,MACAwhB,IAAA25E,WAEAmd,EAAAt4G,GAAA,KAGAiB,KAAAk3G,SAAAl3G,KAAAk3G,QAAA32F,EAAA3hB,OAEAoB,MAAAm3G,SAAAn3G,KAAAm3G,QAAAv4G,GAIA,OAAAA,GAAA,EAAmBA,EAAA24G,EAAA14G,OAA0BD,IAAA,CAC7C,GAAAG,GAAAw4G,EAAA34G,EAEA,IAAAy4G,EAAAl0G,eAAApE,GAAA,CACA,GAAAwhB,GAAA82F,EAAAt4G,EAEA,UAAAwhB,EACA,QAIA,IAAAA,EAAA1hB,OAGA,OAAA2d,GAAA,EAAA5Z,EAAA2d,EAAA1hB,OAA2C2d,EAAA5Z,EAAS4Z,IACpDxc,KAAAi3G,MAAAj3G,KAAAi3G,KAAA12F,EAAA/D,QAHAxc,MAAAi3G,MAAAj3G,KAAAi3G,KAAA12F,MA8BA,IAAA8e,GAAAm7C,CACAx+E,GAAAC,QAAAojC,G/Gip1BMm4E,KACA,SAAUx7G,EAAQC,EAASC,GgH9w1BjC,GAAAqsB,GAAArsB,EAAA,KAEAD,GAAAssB,SAEA,IAAAzS,GAAA5Z,EAAA,KAEAD,GAAA6Z,QAEA,IAAAQ,GAAApa,EAAA,KAEAD,GAAAqa,QAEA,IAAA9F,GAAAtU,EAAA,MAEA0Q,EAAA1Q,EAAA,KAEAD,GAAA0Q,MAAAC,CAEA,IAAA4oB,GAAAt5B,EAAA,KAEAD,GAAAu5B,SAEA,IAAA6O,GAAAnoC,EAAA,KAEAD,GAAA++E,OAAA32C,CAEA,IAAAxlB,GAAA3iB,EAAA,KAEAD,GAAAw7G,OAAA54F,CAEA,IAAA4W,GAAAv5B,EAAA,KAEAu5B,GAAA7M,QACA3sB,GAAA2sB,SAAA6M,EAAA7M,QAEA,IAAA8uF,GAAAx7G,EAAA,KAEAD,GAAAy9D,OAAAg+C,CAEA,IAAAC,GAAAz7G,EAAA,KAEAD,GAAAo5D,KAAAsiD,CAEA,IAAAC,GAAA17G,EAAA,KAEAD,GAAAye,MAAAk9F,CAEA,IAAAC,GAAA37G,EAAA,KAEAD,GAAA83E,KAAA8jC,CAEA,IAAAC,GAAA57G,EAAA,KAEAD,GAAA8zB,IAAA+nF,CAEA,IAAAC,GAAA77G,EAAA,KAEAD,GAAA+7G,aAAAD,CAKA,IAAAE,KACAznG,GAAA1L,MAAA,uKAAA1C,GACA61G,EAAA71G,GAAAoO,EAAApO,KAEAnG,EAAAi8G,KAAAD,GhHox1BME,KACA,SAAUn8G,EAAQC,EAASC,GiHh01BjC,QAAAk8G,GAAA7qF,GACA,GAAA1oB,GAAA0oB,EAAArkB,IAAA,OACA,OAAA0rD,GAAA/vD,EAAA0oB,IAAAvb,SAYA,QAAAqmG,GAAAn0F,EAAAhS,GACA,GAAAk6C,GAAAl6C,CAEAA,aAAAwI,KACA0xC,EAAA,GAAA1xC,GAAAxI,GACA1B,EAAA7L,MAAAynD,EAAAopB,GAGA,IAAA7zD,GAAA+oD,EAAA1gC,mBAAAoiB,EAGA,OAFAzqC,GAAAgoB,UAAAzlB,EAAA,GAAAA,EAAA,IACAwmD,EAAAnhC,gBAAA5nB,EAAAyqC,GACAzqC,EAgBA,QAAA22F,GAAA59F,GACAlK,EAAA7L,MAAA+V,EAAA86D,GAjEA,GAAAhlE,GAAAtU,EAAA,MAEA04D,EAAA14D,EAAA,MAEAwuE,EAAAxuE,EAAA,MAEAs5E,EAAAt5E,EAAA,MAEAwe,EAAAxe,EAAA,MAEAq8G,EAAAr8G,EAAA,KAEAD,GAAAk5D,mBAAAojD,CAEA,IAAAlzC,GAAAnpE,EAAA,KAEAD,GAAA6gE,aAAAuI,EAAAvI,aAoDA7gE,EAAAm8G,aACAn8G,EAAAo8G,cACAp8G,EAAAq8G,+BjH611BME,KACA,SAAUx8G,EAAQC,EAASC,GkH751BjC,QAAAu8G,GAAAlrF,GACA,MAAAA,GAAArkB,IAAA,UAAAwvG,EAAAnrF,EAAA3S,YAGA,QAAA+9F,GAAApuE,GACA,MAAAA,GAAA2hB,IAAA3hB,EAAApvB,MAcA,QAAAy9F,GAAArpG,EAAA2d,GACA,GAAA9M,MACAk5D,EAAA/pE,EAAAg7B,IAGA,iBAAA+uC,EAAAt4E,KAAA,CAMA,OAFA0jG,GAAAprB,EAAA5E,eAEA91E,EAAA,EAAiBA,EAAA2Q,EAAAsU,MAAoBjlB,IACrCwhB,EAAA/a,KAAAmL,EAAA1M,UACA4gG,YACAmU,QAXA,QAYAC,QAAAJ,EAAA95G,GACK2Q,GAML,QAHAwpG,GAAAC,EAAA54F,EAAA8M,GACAzqB,KAEA7D,EAAA,EAAiBA,EAAA2Q,EAAAsU,MAAejlB,IAAA,CAChC,GAAA+c,GAAAo9F,EAAA,MAAAL,EAAA95G,EACA+c,GAAAs9F,aAAAt9F,EAAAw2C,OAAAx2C,EAAAna,MAAA,EACAiB,EAAA4C,KAAAsW,GAGA,MAAAlZ,IAGA,QAAAy2G,GAAAC,EAAAjsF,GAqBA,MAAA8rF,GApBAxoG,EAAArL,IAAAg0G,EAAA,SAAA5rF,GACA,GAAA1oB,GAAA0oB,EAAAxS,UACAi+D,EAAAzrD,EAAA4L,iBACAmgD,EAAAN,EAAAvgB,cACAkc,EAAA2E,EAAAlwC,YACAs7D,EAAA,aAAAprB,EAAAt4E,KAAAs4E,EAAA5E,eAAAvoE,KAAAuK,IAAAi+D,EAAA,GAAAA,EAAA,IAAA9vE,EAAAgf,OAKA,QACA6gF,YACA0U,SANAn2F,EAAAsK,EAAArkB,IAAA,YAAAw7F,GAOA2U,YANAp2F,EAAAsK,EAAArkB,IAAA,eAAAw7F,GAOA4U,OANA/rF,EAAArkB,IAAA,UAOAqwG,eANAhsF,EAAArkB,IAAA,kBAOA2vG,QAAAF,EAAAr/B,GACAw/B,QAAAL,EAAAlrF,MAGAL,GAGA,QAAA8rF,GAAAQ,EAAAtsF,GAEA,GAAAusF,KACAjpG,GAAA1L,KAAA00G,EAAA,SAAAE,EAAAn5F,GACA,GAAAs4F,GAAAa,EAAAb,QACAnU,EAAAgV,EAAAhV,UACAiV,EAAAF,EAAAZ,KACAnU,YACAkV,cAAAlV,EACAmV,eAAA,EACAC,YAAA,MACA/tE,IAAA,MACAguE,WAEAA,EAAAJ,EAAAI,MACAN,GAAAZ,GAAAc,CACA,IAAAb,GAAAY,EAAAZ,OAEAiB,GAAAjB,IACAa,EAAAE,iBAGAE,EAAAjB,GAAAiB,EAAAjB,KACAt3G,MAAA,EACAwqC,SAAA,EAOA,IAAAotE,GAAAM,EAAAN,QAEAA,KAAAW,EAAAjB,GAAAt3G,QAEAu4G,EAAAjB,GAAAt3G,MAAA43G,EACAA,EAAAjtG,KAAAiN,IAAAugG,EAAAC,cAAAR,GACAO,EAAAC,eAAAR,EAGA,IAAAC,GAAAK,EAAAL,WACAA,KAAAU,EAAAjB,GAAA9sE,SAAAqtE,EACA,IAAAC,GAAAI,EAAAJ,MACA,OAAAA,IAAAK,EAAA5tE,IAAAutE,EACA,IAAAC,GAAAG,EAAAH,cACA,OAAAA,IAAAI,EAAAG,YAAAP,IAEA,IAAA92G,KAsDA,OArDA+N,GAAA1L,KAAA20G,EAAA,SAAAE,EAAA9kD,GACApyD,EAAAoyD,KACA,IAAAklD,GAAAJ,EAAAI,OACArV,EAAAiV,EAAAjV,UACAoV,EAAA72F,EAAA02F,EAAAG,YAAApV,GACAsV,EAAA/2F,EAAA02F,EAAA5tE,IAAA,GACA6tE,EAAAD,EAAAC,cACAC,EAAAF,EAAAE,eACAI,GAAAL,EAAAE,IAAAD,KAAA,GAAAG,EACAC,GAAA9tG,KAAAC,IAAA6tG,EAAA,GAEAzpG,EAAA1L,KAAAi1G,EAAA,SAAAG,EAAAlrF,GACA,GAAAgd,GAAAkuE,EAAAluE,QAEAA,MAAAiuE,IACAjuE,EAAA7/B,KAAAiN,IAAA4yB,EAAA4tE,GAEAM,EAAA14G,QACAwqC,EAAA7/B,KAAAiN,IAAA4yB,EAAAkuE,EAAA14G,QAGAo4G,GAAA5tE,EACAkuE,EAAA14G,MAAAwqC,EACA6tE,OAIAI,GAAAL,EAAAE,IAAAD,KAAA,GAAAG,GACAC,EAAA9tG,KAAAC,IAAA6tG,EAAA,EACA,IACAE,GADAC,EAAA,CAEA5pG,GAAA1L,KAAAi1G,EAAA,SAAAG,EAAA35F,GACA25F,EAAA14G,QACA04G,EAAA14G,MAAAy4G,GAGAE,EAAAD,EACAE,GAAAF,EAAA14G,OAAA,EAAAw4G,KAGAG,IACAC,GAAAD,EAAA34G,MAAAw4G,EAGA,IAAA7nD,IAAAioD,EAAA,CACA5pG,GAAA1L,KAAAi1G,EAAA,SAAAG,EAAApB,GACAr2G,EAAAoyD,GAAAikD,GAAAr2G,EAAAoyD,GAAAikD,KACA3mD,SACA3wD,MAAA04G,EAAA14G,OAEA2wD,GAAA+nD,EAAA14G,OAAA,EAAAw4G,OAGAv3G,EASA,QAAAkwF,GAAAhzE,EAAA3N,EAAAkb,GACA,GAAAmtF,GAAAnB,EAAA1oG,EAAA/K,OAAAuM,EAAAsoG,gBAAA36F,GAAA,SAAA4N,GACA,OAAAvb,EAAAuoG,iBAAAhtF,MAAA4L,kBAAA,gBAAA5L,EAAA4L,iBAAAn4B,QAEAw5G,KACAC,IACAzoG,GAAA4gF,iBAAAjzE,EAAA,SAAA4N,GAEA,mBAAAA,EAAA4L,iBAAAn4B,KAAA,CAIA,GAAA6D,GAAA0oB,EAAAxS,UACAi+D,EAAAzrD,EAAA4L,iBACAmgD,EAAAN,EAAAvgB,cACAqgD,EAAAL,EAAAlrF,GACAmtF,EAAAL,EAAA1B,EAAAr/B,IAAAw/B,GACA6B,EAAAD,EAAAvoD,OACAyoD,EAAAF,EAAAl5G,MACAw2F,EAAAhf,EAAAO,aAAAD,GACA+b,EAAA9nE,EAAArkB,IAAA,mBACA2xG,EAAAvhC,EAAA3G,OAAAqlB,EAAA5kB,cAAA4kB,EAAAhtB,YAAA,IAAAgtB,EAAAJ,kBAAA,GACAkjB,GAAAvtF,EAAAjP,kBAAA,QAAAiP,EAAAjP,kBAAA,SACAk2D,EAAA3vE,EAAA64E,SAAAo9B,EAAA,SAAApwG,EAAAC,GACA,MAAAquE,GAAAlR,aAAAp9D,EAAAC,MACK,EACL6vG,GAAA1B,GAAA0B,EAAA1B,OACA2B,EAAA3B,GAAA2B,EAAA3B,OAEAj0G,EAAA45E,WACAtsB,OAAAwoD,EACAt8C,KAAAu8C,IAEA/1G,EAAAC,KAAAyoB,EAAAjP,kBAAA05E,EAAA9rC,KAAA,YAAA3uD,EAAAgjB,GACA,IAAAqD,MAAArmB,GAAA,CAIAi9G,EAAA1B,GAAAv4F,KACAi6F,EAAA1B,GAAAv4F,IACAi8B,EAAAq+D,EAEAjmE,EAAAimE,GAGAJ,EAAA3B,GAAAv4F,IACAi8B,EAAAq+D,EAEAjmE,EAAAimE,GAKA,IAIAnwG,GACAC,EACAnJ,EACAC,EAPAq2F,EAAAv6F,GAAA,UACAomE,EAAA6Q,EAAAj0D,GACAw6F,EAAAP,EAAA1B,GAAAv4F,GAAAu3E,GACAkjB,EAAAP,EAAA3B,GAAAv4F,GAAAu3E,EAMAE,GAAApjB,gBACAlqE,EAAAqwG,EACApwG,EAAAg5D,EAAA,GAAAg3C,EACAn5G,EAAAmiE,EAAA,GAAAq3C,EACAv5G,EAAAm5G,EACAH,EAAA3B,GAAAv4F,GAAAu3E,IAAAt2F,EAEA2K,KAAAuK,IAAAlV,GAAA6zF,IACA7zF,KAAA,QAAA6zF,GAGAmlB,EAAA1B,GAAAv4F,GAAAu3E,IAAAt2F,IAEAkJ,EAAAi5D,EAAA,GAAAg3C,EACAhwG,EAAAowG,EACAv5G,EAAAo5G,EACAn5G,EAAAkiE,EAAA,GAAAq3C,EACAP,EAAA3B,GAAAv4F,GAAAu3E,IAAAr2F,EAEA0K,KAAAuK,IAAAjV,GAAA4zF,IAEA5zF,MAAA,QAAA4zF,GAGAmlB,EAAA1B,GAAAv4F,GAAAu3E,IAAAr2F,GAGAoD,EAAA+5E,cAAAr+D,GACA7V,IACAC,IACAnJ,QACAC,cAEK,KACFzB,MA/RH,GAAAwQ,GAAAtU,EAAA,MAEA2yC,EAAA3yC,EAAA,MAEA+mB,EAAA4rB,EAAA5rB,aACAy1F,EAAA,aA6RA/lB,GAAAimB,iBACA,IAAAv5E,GAAAszD,CACA32F,GAAAC,QAAAojC,GlH061BM47E,KACA,SAAUj/G,EAAQC,GmH/s2BxB,QAAAojC,GAAA1f,EAAA3N,GACAA,EAAA4gF,iBAAAjzE,EAAA,SAAA4N,GACA,GAAA1oB,GAAA0oB,EAAAxS,UACAwP,EAAAgD,EAAA4L,gBAEA,IAAA5O,EAAA,CAOA,OAHA8yD,MACAy9B,EAAAvwF,EAAAtM,WAEArf,EAAA,EAAmBA,EAAAk8G,EAAAj8G,OAAsBD,IACzCy+E,EAAAh4E,KAAAkoB,EAAAjP,kBAAAiM,EAAAtM,WAAArf,IAAA,GAGA,KAAAy+E,EAAAx+E,OACAgG,EAAAC,KAAAu4E,EAAA,YAAA3yE,EAAA6V,GAEA1b,EAAA+5E,cAAAr+D,EAAAqD,MAAAlZ,IAAA6P,SAAAgQ,EAAAu9C,YAAAp9D,MAEK,IAAA2yE,EAAAx+E,QACLgG,EAAAC,KAAAu4E,EAAA,SAAA3yE,EAAAC,EAAA4V,GAEA1b,EAAA+5E,cAAAr+D,EAAAqD,MAAAlZ,IAAAkZ,MAAAjZ,IAAA4P,SAAAgQ,EAAAu9C,aAAAp9D,EAAAC,OACO,MAKP3O,EAAAC,QAAAojC,GnHqt2BM67E,KACA,SAAUl/G,EAAQC,EAASC,GoHtu2BjC,QAAAmjC,GAAAnS,EAAA3jB,GACAA,QACAiH,EAAA1M,SAAAyF,GACAuH,KAAA,UACAnE,MAAA,UACA2iE,UAAA,OACA6rC,UAAA,2BACA5qF,OAAA,GAEA,IAAA6qF,GAAA,GAAA5lF,GAAA5c,MACA3X,OACAiM,KAAA3D,EAAA4xG,WAEA5qF,OAAAhnB,EAAAgnB,OACAD,EAAA,MAEAkhC,EAAA,GAAAh8B,GAAAzc,KACAzN,OACAqmD,YAAA//C,EAAA,EACAggD,UAAAhgD,EAAA,KACA8qC,EAAA,IAEAz7C,OACAgM,OAAA1D,EAAAoD,MACAyjE,QAAA,QACA7kE,UAAA,GAEAglB,OAAAhnB,EAAAgnB,OACAD,EAAA,QAEA+qF,EAAA,GAAA7lF,GAAA5c,MACA3X,OACAiM,KAAA,OACA4D,KAAAvH,EAAAuH,KACAW,aAAA,QACAK,aAAA,GACA7D,SAAA1E,EAAA+lE,WAEA/+C,OAAAhnB,EAAAgnB,OACAD,EAAA,OAEAkhC,GAAA3yB,cAAA,GAAA6nD,KAAA,KACA90B,SAAA,EAAAhgD,EAAA,IACG+7C,MAAA,iBACH6D,EAAA3yB,cAAA,GAAA6nD,KAAA,KACA/0B,WAAA,EAAA//C,EAAA,IACG8sD,MAAA,KAAA/Q,MAAA,gBACH,IAAAxlC,GAAA,GAAAqN,GAAAnd,KA4BA,OA3BA8P,GAAAjH,IAAAswC,GACArpC,EAAAjH,IAAAm6F,GACAlzF,EAAAjH,IAAAk6F,GAEAjzF,EAAAuB,OAAA,WACA,GAAA+nC,GAAAvkC,EAAAgK,WAAA,EACAw6B,EAAAxkC,EAAAiK,YAAA,CACAq6B,GAAAvyB,UACAwyB,KACAC,MAEA,IAAAhV,GAAA8U,EAAAlmD,MAAAoxC,CACA2+D,GAAAp8E,UACAv0B,EAAA+mD,EAAA/U,EACA/xC,EAAA+mD,EAAAhV,EACAl7C,MAAA,EAAAk7C,EACAj7C,OAAA,EAAAi7C,IAEA0+D,EAAAn8E,UACAv0B,EAAA,EACAC,EAAA,EACAnJ,MAAA0rB,EAAAgK,WACAz1B,OAAAyrB,EAAAiK,eAIAhP,EAAAuB,SACAvB,EAzFA,GAAA3X,GAAAtU,EAAA,MAEAs5B,EAAAt5B,EAAA,MAEA0V,EAAAzF,KAAAyF,EAwFA5V,GAAAC,QAAAojC,GpH0v2BMi8E,KACA,SAAUt/G,EAAQC,EAASC,GqH7z1BjC,QAAAq/G,GAAArpG,EAAA6V,GACAvX,EAAA1L,KAAAijB,EAAA,SAAAyzF,EAAAp5G,GAEAgyB,EAAAoS,SAAApkC,KACA,iBAAAo5G,GACAtpG,EAAA9P,GAAA8P,EAAA9P,GAAAoO,EAAApN,MAAA8O,EAAA9P,GAAAo5G,GAAA,GAAAhrG,EAAAjO,MAAAi5G,GAEA,MAAAtpG,EAAA9P,KACA8P,EAAA9P,GAAAo5G,MAOA,QAAAC,GAAAC,GACAA,IAGA17G,KAAAkS,UACAlS,KAAAkS,OAAAypG,GAAA,EAQA37G,KAAAmpB,eAAA3Y,EAAA7I,eACAonB,YASA/uB,KAAA47G,eAAA,KACAL,EAAAG,EAAA17G,KAAA+oB,OAAA7W,QAEA1B,EAAApN,MAAAs4G,EAAAG,GAAA,GACA77G,KAAAsiC,YAAAo5E,GASA,QAAAI,GAAAC,EAAAr1E,GACAl2B,EAAA/M,QAAAijC,KACAA,WAGA,IAAAvB,KAIA,OAHArgC,GAAA4hC,EAAA,SAAA1lC,GACAmkC,EAAAnkC,IAAA+6G,EAAA7yG,IAAAlI,QAAA+F,UAEAo+B,EAOA,QAAAy1B,GAAA//C,EAAAqtB,EAAA8zE,GAIA,MAHA9zE,GAAAlnC,KAAAknC,EAAAlnC,KAAAg7G,IAAAlhG,QACAsZ,EAAAwmC,iBAAA//C,EAAAqtB,GASA,QAAA+zE,GAAA1xD,GACA,MAAAplD,GAAAolD,EAAA,SAAAx7B,GACA,MAAAA,GAAAP,qBAQA,QAAA0tF,GAAAC,EAAA/0G,GAGA,MAAAA,GAAAjE,eAAA,WAAAsC,EAAA02G,EAAA,SAAAC,GACA,MAAAA,GAAAthG,UAAA1T,EAAA0T,UACGqhG,EAvnBH,GAAA/mF,GAAAl5B,EAAA,MAIAsU,GAFA4kB,EAAAC,QAEAn5B,EAAA,OAEAouB,EAAApuB,EAAA,MAEAwe,EAAAxe,EAAA,MAEAk4B,EAAAl4B,EAAA,MAEA2/G,EAAA3/G,EAAA,MAEAmgH,EAAAngH,EAAA,MAoBA4I,EAAA0L,EAAA1L,KACAW,EAAA+K,EAAA/K,OACAN,EAAAqL,EAAArL,IACA1B,EAAA+M,EAAA/M,QACAU,EAAAqM,EAAArM,QACAb,EAAAkN,EAAAlN,SACAq4G,EAAA,cASArmF,EAAA5a,EAAA7W,QACAvG,YAAAg4B,EACA9M,KAAA,SAAAtW,EAAAS,EAAAoV,EAAAgP,GACAhP,QACA/nB,KAAAkS,OAAA,KAOAlS,KAAA+oB,OAAA,GAAArO,GAAAqN,GAKA/nB,KAAAs8G,eAAAvlF,GAEAH,UAAA,SAAA1kB,EAAAwgB,GACAliB,EAAArJ,SAAAw0G,IAAAzpG,IAAA,gCAEAlS,KAAAs8G,eAAA1lF,UAAA1kB,EAAAwgB,GAEA1yB,KAAAq6B,YAAA,OAUAA,YAAA,SAAAr5B,GACA,GAAAo5B,IAAA,EACArD,EAAA/2B,KAAAs8G,cAEA,KAAAt7G,GAAA,aAAAA,EAAA,CACA,GAAA06G,GAAA3kF,EAAAwlF,YAAA,aAAAv7G,EAEAhB,MAAAkS,QAAA,aAAAlR,GAGAhB,KAAAy5B,cACAz5B,KAAAsiC,YAAAo5E,IAHAD,EAAA3+G,KAAAkD,KAAA07G,GAMAthF,GAAA,EAOA,GAJA,aAAAp5B,GAAA,UAAAA,GACAhB,KAAAy5B,eAGAz4B,GAAA,aAAAA,GAAA,aAAAA,EAAA,CACA,GAAAw7G,GAAAzlF,EAAA0lF,kBAAAz8G,KACAw8G,KAAAx8G,KAAAsiC,YAAAk6E,GAAApiF,GAAA,GAGA,IAAAp5B,GAAA,aAAAA,GAAA,UAAAA,EAAA,CACA,GAAA07G,GAAA3lF,EAAA4lF,eAAA38G,UAAAspB,KAEAozF,GAAA79G,QACAiG,EAAA43G,EAAA,SAAAE,GACA58G,KAAAsiC,YAAAs6E,EAAAxiF,GAAA,IACSp6B,MAIT,MAAAo6B,IAMAkI,YAAA,SAAA0L,GAoBA,QAAA6uE,GAAAhiG,EAAA+a,GACA,GAAAknF,GAAAxyF,EAAA/Q,iBAAAy0B,EAAAnzB,IACAY,EAAA6O,EAAAtP,gBAAA+gG,EAAA7yG,IAAA2R,GAAAiiG,EACAxyF,GAAA9O,cAAAC,GAEA3W,EAAA2W,EAAA,SAAAE,EAAAR,GACA,GAAA5L,GAAAoM,EAAAzJ,MAEA5O,GAAAiM,KACAoM,EAAAE,QAAAhB,WACAc,EAAAE,QAAAf,QAAA8/C,EAAA//C,EAAAtL,EAAAoM,EAAAP,SAGA,IAAAisB,GAAAy0E,EAAAC,EAAAnmF,EACA1jB,GAAA2I,MACAkhG,EAAAr0G,IAAAmT,MACA/V,EAAA2W,EAAA,SAAAokE,EAAA1kE,GACA,GAAAiS,GAAAyyD,EAAAzkE,MACA8sB,EAAA23C,EAAA3tE,MAKA,IAJA1B,EAAArJ,OAAA7D,EAAA4kC,IAAA9a,EAAA,8BAIA8a,EAGS,CACT,GAAA60E,GAAA3oF,EAAAhG,SAAAvT,EAAAglE,EAAAhkE,QAAAf,SAAA,EAEA,IAAAsS,eAAA2vF,GACA3vF,EAAAhrB,KAAAy9E,EAAAhkE,QAAAzZ,KACAgrB,EAAAkV,YAAA4F,EAAAloC,MACAotB,EAAA6a,cAAAC,GAAA,OACW,CAEX,GAAAV,GAAAh3B,EAAA3M,QACAwjC,kBACA7Y,eAAArT,GACa0kE,EAAAhkE,QACbuR,GAAA,GAAA2vF,GAAA70E,EAAAloC,UAAAwnC,GACAh3B,EAAA3M,OAAAupB,EAAAoa,GACApa,EAAA5E,KAAA0f,EAAAloC,UAAAwnC,GAKApa,EAAA6a,cAAA,cAtBA7a,GAAAkV,eAAuCtiC,MACvCotB,EAAA6a,kBAAyC,EAyBzC8zE,GAAA7yG,IAAA2R,GAAAM,GAAAiS,EACAlb,EAAA2I,GAAAM,GAAAiS,EAAAlb,QACOlS,MAEP,WAAA6a,IACA7a,KAAA47G,eAAAK,EAAAF,EAAA7yG,IAAA,YA1EA,GAAAgJ,GAAAlS,KAAAkS,OACA6pG,EAAA/7G,KAAAmpB,eACA6zF,IAEAl4G,GAAAkpC,EAAA,SAAAivE,EAAApiG,GACA,MAAAoiG,IAIA7oF,EAAAoS,SAAA3rB,GAGAmiG,EAAA33G,KAAAwV,GAFA3I,EAAA2I,GAAA,MAAA3I,EAAA2I,GAAArK,EAAAjO,MAAA06G,GAAAzsG,EAAApN,MAAA8O,EAAA2I,GAAAoiG,GAAA,MAMA7oF,EAAA0nC,kBAAAkhD,EAAA5oF,EAAAqS,uBAAAo2E,EAAA78G,MACAA,KAAA47G,eAAA57G,KAAA47G,oBAmEA3kF,UAAA,WACA,GAAA/kB,GAAA1B,EAAAjO,MAAAvC,KAAAkS,OAgBA,OAfApN,GAAAoN,EAAA,SAAA3I,EAAAsR,GACA,GAAAuZ,EAAAoS,SAAA3rB,GAAA,CAGA,OAFAtR,GAAA+gB,EAAA/Q,iBAAAhQ,GAEA3K,EAAA2K,EAAA1K,OAAA,EAAqCD,GAAA,EAAQA,IAE7C0rB,EAAA/O,UAAAhS,EAAA3K,KACA2K,EAAA4d,OAAAvoB,EAAA,EAIAsT,GAAA2I,GAAAtR,WAGA2I,GAAAypG,GACAzpG,GAMA41B,SAAA,WACA,MAAA9nC,MAAA+oB,QAQA8H,aAAA,SAAAhW,EAAA0F,GACA,GAAAoG,GAAA3mB,KAAAmpB,eAAAjgB,IAAA2R,EAEA,IAAA8L,EACA,MAAAA,GAAApG,GAAA,IAcAzC,gBAAA,SAAA1W,GACA,GAAAyT,GAAAzT,EAAAyT,QAEA,KAAAA,EACA,QAGA,IAAAM,GAAA/T,EAAA+T,MACAG,EAAAlU,EAAAkU,GACAlZ,EAAAgF,EAAAhF,KAEA86G,EAAAl9G,KAAAmpB,eAAAjgB,IAAA2R,EAEA,KAAAqiG,MAAAr+G,OACA,QAGA,IAAA4D,EAEA,UAAA0Y,EACA1X,EAAA0X,KACAA,OAGA1Y,EAAAgD,EAAAN,EAAAgW,EAAA,SAAAoF,GACA,MAAA28F,GAAA38F,KACO,SAAArZ,GACP,QAAAA,QAEK,UAAAoU,EAAA,CACL,GAAA6hG,GAAA15G,EAAA6X,EACA7Y,GAAAgD,EAAAy3G,EAAA,SAAAd,GACA,MAAAe,IAAAh5G,EAAAmX,EAAA8gG,EAAA9gG,KAAA,IAAA6hG,GAAAf,EAAA9gG,aAEK,UAAAlZ,EAAA,CACL,GAAAg7G,GAAA35G,EAAArB,EACAK,GAAAgD,EAAAy3G,EAAA,SAAAd,GACA,MAAAgB,IAAAj5G,EAAA/B,EAAAg6G,EAAAh6G,OAAA,IAAAg7G,GAAAhB,EAAAh6G,eAIAK,GAAAy6G,EAAAn2G,OAGA,OAAAm1G,GAAAz5G,EAAA2E,IA+BAi2G,eAAA,SAAAj2G,GACA,GAAA0jB,GAAA1jB,EAAA0jB,MACAjQ,EAAAzT,EAAAyT,SACAyiG,EAIA,SAAAC,GACA,GAAAC,GAAA3iG,EAAA,QACA4iG,EAAA5iG,EAAA,KACA6iG,EAAA7iG,EAAA,MACA,QAAA0iG,GAAA,MAAAA,EAAAC,IAAA,MAAAD,EAAAE,IAAA,MAAAF,EAAAG,GAMO,MALP7iG,WAEAM,MAAAoiG,EAAAC,GACAliG,GAAAiiG,EAAAE,GACAr7G,KAAAm7G,EAAAG,KAbA5yF,GACAroB,EAAA66G,EAAAt9G,KAAA8d,gBAAAw/F,GAAAt9G,KAAAmpB,eAAAjgB,IAAA2R,EACA,OAeA,UAAA0kE,GACA,MAAAn4E,GAAA3B,SAAA85E,EAAAn4E,EAAA3B,QAAA85E,GAhBA28B,EAAAz5G,EAAA2E,KA2CA2jB,cAAA,SAAAlQ,EAAA9V,EAAAC,GACA,GAAA+2G,GAAA/7G,KAAAmpB,cAEA,uBAAAtO,GACA7V,EAAAD,EACAA,EAAA8V,EACAkhG,EAAAj3G,KAAA,SAAAq3G,EAAA18F,GACA3a,EAAAq3G,EAAA,SAAAhvF,EAAAhS,GACApW,EAAAjI,KAAAkI,EAAAya,EAAA0N,EAAAhS,WAGK,IAAA3K,EAAApK,SAAAyU,GACL/V,EAAAi3G,EAAA7yG,IAAA2R,GAAA9V,EAAAC,OACK,IAAA1B,EAAAuX,GAAA,CACL,GAAA8iG,GAAA39G,KAAAq9G,eAAAxiG,EACA/V,GAAA64G,EAAA54G,EAAAC,KAQA44G,gBAAA,SAAAx7G,GACA,GAAA2sB,GAAA/uB,KAAAmpB,eAAAjgB,IAAA,SAEA,OAAAzD,GAAAspB,EAAA,SAAA8uF,GACA,MAAAA,GAAAz7G,YAQA24B,iBAAA,SAAAngB,GACA,MAAA5a,MAAAmpB,eAAAjgB,IAAA,UAAA0R,IAOA0/F,gBAAA,SAAAx/F,GACA,GAAAiU,GAAA/uB,KAAAmpB,eAAAjgB,IAAA,SAEA,OAAAzD,GAAAspB,EAAA,SAAA8uF,GACA,MAAAA,GAAA/iG,eAOAgjG,UAAA,WACA,MAAA99G,MAAAmpB,eAAAjgB,IAAA,UAAAnC,SAUAumB,WAAA,SAAAvoB,EAAAC,GAEAF,EAAA9E,KAAA47G,eAAA,SAAAmC,GACA,GAAAhvF,GAAA/uB,KAAAmpB,eAAAjgB,IAAA,UAAA60G,EAEAh5G,GAAAjI,KAAAkI,EAAA+pB,EAAAgvF,IACK/9G,OASLg+G,cAAA,SAAAj5G,EAAAC,GACAF,EAAA9E,KAAAmpB,eAAAjgB,IAAA,UAAAnE,EAAAC,IAWA4tF,iBAAA,SAAA93E,EAAA/V,EAAAC,GAEAF,EAAA9E,KAAA47G,eAAA,SAAAmC,GACA,GAAAhvF,GAAA/uB,KAAAmpB,eAAAjgB,IAAA,UAAA60G,EAEAhvF,GAAAjU,aACA/V,EAAAjI,KAAAkI,EAAA+pB,EAAAgvF,IAEK/9G,OAULi+G,oBAAA,SAAAnjG,EAAA/V,EAAAC,GACA,MAAAF,GAAA9E,KAAAs6G,gBAAAx/F,GAAA/V,EAAAC,IAMAu1G,iBAAA,SAAAhtF,GAEA,MAAA/c,GAAArM,QAAAnE,KAAA47G,eAAAruF,EAAAiB,gBAAA,GAMA0vF,wBAAA,WACA,OAAAl+G,KAAA47G,oBAAA70G,SAOAo3G,aAAA,SAAAp5G,EAAAC,GAEA,GAAAo5G,GAAA34G,EAAAzF,KAAAmpB,eAAAjgB,IAAA,UAAAnE,EAAAC,EACAhF,MAAA47G,eAAAK,EAAAmC,IAEA3kF,YAAA,WACA,GAAAsiF,GAAA/7G,KAAAmpB,cACAnpB,MAAA47G,eAAAK,EAAAF,EAAA7yG,IAAA,UACA,IAAAm1G,KACAtC,GAAAj3G,KAAA,SAAAq3G,EAAA18F,GACA4+F,EAAAh5G,KAAAoa,KAEA2U,EAAA0nC,kBAAAuiD,EAAAjqF,EAAAqS,uBAAA,SAAAhnB,EAAAmW,GACA9wB,EAAAi3G,EAAA7yG,IAAAuW,GAAA,SAAA0N,GACAA,EAAAsM,oBA+GAjpB,GAAA7L,MAAA2wB,EAAA+mF,EACA,IAAAh9E,GAAA/J,CACAt5B,GAAAC,QAAAojC,GrH612BMi/E,KACA,SAAUtiH,EAAQC,EAASC,GsHx53BjC,QAAAq5B,GAAArI,GAKAltB,KAAAspB,KAAA4D,EAMAltB,KAAAu+G,oBAMAv+G,KAAAw+G,cAMAx+G,KAAAy+G,cAQAz+G,KAAA0+G,wBAMA1+G,KAAA2+G,cAMA3+G,KAAA4+G,eAuIA,QAAAC,GAAAC,EAAApsF,EAAAqsF,GACA,GAEAC,GACAtD,EAHAuD,KACAC,KAIAC,EAAAL,EAAAM,QAaA,IAXAN,EAAApD,aACAA,EAAAoD,EAAApD,aAIAyD,GAAAL,EAAA/4E,WACA21E,QACAuD,GAAAH,EAAA/4E,aAAAh/B,SAIA+3G,EAAAO,MAAA,CACA3D,OACA,IAAA2D,GAAAP,EAAAO,KACAv6G,GAAAu6G,EAAA,SAAAC,GACAA,KAAAptG,SACAotG,EAAAx0F,MACAo0F,EAAA75G,KAAAi6G,GACSN,IAETA,EAAAM,MAyBA,MAlBA5D,KACAA,EAAAoD,GAKApD,EAAA0D,WACA1D,EAAA0D,SAAAD,GAIAr6G,GAAA42G,GAAAz1G,OAAAg5G,GAAAh5G,OAAAuK,EAAArL,IAAA+5G,EAAA,SAAAG,GACA,MAAAA,GAAAntG,UACG,SAAAA,GACHpN,EAAA4tB,EAAA,SAAA6sF,GACAA,EAAArtG,EAAA6sG,QAIArD,aACAuD,kBACAD,eACAE,aAUA,QAAAM,GAAA10F,EAAA20F,EAAAC,GACA,GAAAC,IACAn+G,MAAAi+G,EACAh+G,OAAAi+G,EACAE,YAAAH,EAAAC,GAGAG,GAAA,CAeA,OAdArvG,GAAA1L,KAAAgmB,EAAA,SAAAvtB,EAAAiY,GACA,GAAAsqG,GAAAtqG,EAAAgI,MAAAuiG,EAEA,IAAAD,KAAA,IAAAA,EAAA,IAIA,GAAAE,GAAAF,EAAA,GACAG,EAAAH,EAAA,GAAApiG,aAEA6iD,GAAAo/C,EAAAM,GAAA1iH,EAAAyiH,KACAH,GAAA,MAGAA,EAGA,QAAAt/C,GAAA2/C,EAAAC,EAAAH,GACA,cAAAA,EACAE,GAAAC,EACG,QAAAH,EACHE,GAAAC,EAGAD,IAAAC,EAIA,QAAAC,GAAAC,EAAAC,GAEA,MAAAD,GAAA1rG,KAAA,OAAA2rG,EAAA3rG,KAAA,KAyBA,QAAA2tB,GAAAi+E,EAAAvyE,GACAA,QACAlpC,EAAAkpC,EAAA,SAAAwyE,EAAA3lG,GACA,SAAA2lG,EAAA,CAIA,GAAAC,GAAAF,EAAA1lG,EAEA,IAAAuZ,EAAAoS,SAAA3rB,GAEK,CACL2lG,EAAAl2F,EAAA/Q,iBAAAinG,GACAC,EAAAn2F,EAAA/Q,iBAAAknG,EACA,IAAAhlG,GAAA6O,EAAAtP,gBAAAylG,EAAAD,EACAD,GAAA1lG,GAAA1V,EAAAsW,EAAA,SAAAE,GACA,MAAAA,GAAAzJ,QAAAyJ,EAAAP,MAAAhY,EAAAuY,EAAAP,MAAAO,EAAAzJ,QAAA,GAAAyJ,EAAAP,OAAAO,EAAAzJ,aANAquG,GAAA1lG,GAAAzX,EAAAq9G,EAAAD,GAAA,MAtYA,GAAAhwG,GAAAtU,EAAA,MAEAouB,EAAApuB,EAAA,MAEAk4B,EAAAl4B,EAAA,MAOA4I,EAAA0L,EAAA1L,KACAvC,EAAAiO,EAAAjO,MACA4C,EAAAqL,EAAArL,IACA/B,EAAAoN,EAAApN,MACA28G,EAAA,kBA+GAxqF,GAAAp4B,WACAG,YAAAi4B,EASAqB,UAAA,SAAAkoF,EAAApsF,GACAosF,EAAAv8G,EAAAu8G,GAAA,EAGA,IAAA4B,GAAA1gH,KAAA2+G,cACAgC,EAAA9B,EAAA/hH,KAAAkD,KAAA8+G,EAAApsF,GAAAguF,EACA1gH,MAAA4+G,eAAA+B,EAAAjF,WAEAgF,GAEAp+E,EAAAo+E,EAAAhF,WAAAiF,EAAAjF,YAIAiF,EAAA1B,gBAAApgH,SACA6hH,EAAAzB,gBAAA0B,EAAA1B,iBAGA0B,EAAAzB,UAAArgH,SACA6hH,EAAAxB,UAAAyB,EAAAzB,WAGAyB,EAAA3B,eACA0B,EAAA1B,aAAA2B,EAAA3B,eAGAh/G,KAAA2+G,cAAAgC,GAQApE,YAAA,SAAAqE,GACA,GAAAC,GAAA7gH,KAAA2+G,aAOA,OAJA3+G,MAAAu+G,iBAAAp5G,EAAA07G,EAAA5B,gBAAA18G,GACAvC,KAAAw+G,WAAAr5G,EAAA07G,EAAA3B,UAAA38G,GACAvC,KAAAy+G,cAAAl8G,EAAAs+G,EAAA7B,cACAh/G,KAAA0+G,wBACAn8G,EAAAq+G,EAKAC,EAAAnF,WAAA17G,KAAA4+G,iBAOAnC,kBAAA,SAAAzqG,GACA,GAAAE,GACA+sG,EAAAj/G,KAAAu+G,gBAEA,IAAAU,EAAApgH,OAAA,CAGA,GAAAiiH,GAAA9uG,EAAA6e,aAAA,WAEAiwF,KACA5uG,EAAA3P,EAAA08G,EAAA6B,EAAAC,oBAAA,IAIA,MAAA7uG,IAOAyqG,eAAA,SAAA3qG,GACA,GAAAytG,GAAAz/G,KAAAspB,KAAA4N,WAEAwoF,EAAA1/G,KAAAspB,KAAA6N,YAEA+nF,EAAAl/G,KAAAw+G,WACAQ,EAAAh/G,KAAAy+G,cACAhjC,KACAh5E,IAEA,KAAAy8G,EAAArgH,SAAAmgH,EACA,MAAAv8G,EAIA,QAAA7D,GAAA,EAAAgE,EAAAs8G,EAAArgH,OAA2CD,EAAAgE,EAAShE,IACpD4gH,EAAAN,EAAAtgH,GAAAksB,MAAA20F,EAAAC,IACAjkC,EAAAp2E,KAAAzG,EAkBA,QAZA68E,EAAA58E,QAAAmgH,IACAvjC,IAAA,IAGAA,EAAA58E,SAAAuhH,EAAA3kC,EAAAz7E,KAAA0+G,wBACAj8G,EAAA0C,EAAAs2E,EAAA,SAAAtgE,GACA,MAAA5Y,IAAA,IAAA4Y,EAAA6jG,EAAA9sG,OAAAgtG,EAAA/jG,GAAAjJ,WAKAlS,KAAA0+G,qBAAAjjC,EACAh5E,GA4JA,IAAA48B,GAAA9J,CACAv5B,GAAAC,QAAAojC,GtHs+3BM2hF,KACA,SAAUhlH,EAAQC,GuH134BxB,GAAAglH,GAAA,EAEA,qBAAAvhF,aACAuhF,EAAAvhF,UAAAuhF,UAAA,GAGA,IAAA5hF,IASA1yB,OAAA,+GAIAoE,WAIAsC,WAAA4tG,EAAAzjG,MAAA,uCAEA3b,SAAA,GACAuR,UAAA,SACAtR,WAAA,UAKAuuB,UAAA,KACAtG,UAAA,OACAm3F,kBAAA,IACAvhB,wBAAA,IACAxqF,gBAAA,iBACAg4F,sBAAA,WACAzL,mBAAA,IAEAyf,qBAAA,IACA/wF,YAAA,IAMAinE,oBAAA,IAEA+pB,QAAA,EAEAplH,GAAAC,QAAAojC,GvHg44BMgiF,KACA,SAAUrlH,EAAQC,EAASC,GwHp74BjC,GAAAs5F,GAAAt5F,EAAA,MAEAstE,EAAAgsB,IAAA,iGACAn2D,GACAmqC,aAAA,SAAAzc,EAAAC,GACA,MAAAwc,GAAAxpE,KAAA+sD,EAAAC,IAGAhxD,GAAAC,QAAAojC,GxH074BMiiF,KACA,SAAUtlH,EAAQC,GyHn84BxB,GAAAojC,IACAi5C,mBAAA,WACA,OACA//C,KAAAv4B,KAAAkJ,IAAA,QACAsvB,IAAAx4B,KAAAkJ,IAAA,OACAuvB,MAAAz4B,KAAAkJ,IAAA,SACAwvB,OAAA14B,KAAAkJ,IAAA,UACA1H,MAAAxB,KAAAkJ,IAAA,SACAzH,OAAAzB,KAAAkJ,IAAA,YAIAlN,GAAAC,QAAAojC,GzHy84BMkiF,KACA,SAAUvlH,EAAQC,EAASC,G0Ht94BjC,GAAAs5F,GAAAt5F,EAAA,MAEAgrE,EAAAsuB,IAAA,qLACAn2D,GACA6nC,aAAA,SAAAna,EAAAC,GACA,GAAA/rD,GAAAimE,EAAAlnE,KAAA+sD,EAAAC,GACAhwB,EAAAh9B,KAAAy1F,mBAEA,OADAz4D,KAAA/7B,EAAA+7B,YACA/7B,GAEAw0F,kBAAA,WACA,GAAA+rB,GAAAxhH,KAAAkJ,IAAA,aACA,iBAAAs4G,GAAA,MAAAA,EAAA,gBAAAA,GAAA,YAGAxlH,GAAAC,QAAAojC,G1H494BMoiF,KACA,SAAUzlH,EAAQC,EAASC,G2H5+4BjC,GAAAs5F,GAAAt5F,EAAA,MAEAqtE,EAAAisB,IAAA,yHACAn2D,GACAkqC,aAAA,SAAAxc,GACA,GAAA9rD,GAAAsoE,EAAAvpE,KAAA+sD,GACA/vB,EAAAh9B,KAAA0hH,YAAAzgH,EAAAsK,UAEA,OADAyxB,KAAA/7B,EAAA+7B,YACA/7B,GAEAygH,YAAA,SAAAn2G,GACA,MAAAA,IACAA,EAAA,EAGA,IAAAi2G,GAAAxhH,KAAAkJ,IAAA,QACAy4G,EAAAx1G,KAAAC,IAAAb,EAAA,GACAq2G,EAAA,EAAAr2G,CACA,iBAAAi2G,GAAA,MAAAA,EAAA,gBAAAA,GAAAI,MAAAD,MAGA3lH,GAAAC,QAAAojC,G3Hk/4BMwiF,KACA,SAAU7lH,EAAQC,EAASC,G4Hxg5BjC,GAAA0oC,GAAA1oC,EAAA,MAEA4lH,EAAA5lH,EAAA,MAEA6lH,GAAA,qBACA1iF,GAMA6qC,aAAA,SAAAh5D,GACA,GAAAc,GAAAhS,KAAAgS,OACA,OAAAhS,MAAAqQ,WAAA,YAAAa,GAAAc,IAAA9I,IAAA64G,GAAA,OAOAttG,QAAA,WACA,MAAAqtG,GAAArtG,SACArB,UAAApT,KAAAqQ,WAAA,aACAvO,WAAA9B,KAAAqQ,WAAA,cACAxO,SAAA7B,KAAAqQ,WAAA,YACAgD,WAAArT,KAAAqQ,WAAA,eACKrQ,KAAAgS,UAEL+yB,YAAA,SAAAj0B,GACA,MAAA8zB,GAAAz6B,gBAAA2G,EAAA9Q,KAAAyU,UAAAzU,KAAAqQ,WAAA,SAAArQ,KAAAqQ,WAAA,kBAAArQ,KAAAqQ,WAAA,YAAArQ,KAAAqQ,WAAA,WAAArQ,KAAAqQ,WAAA,QAAArQ,KAAAqQ,WAAA,kBAGArU,GAAAC,QAAAojC,G5H8g5BM2iF,KACA,SAAUhmH,EAAQC,EAASC,G6Hli5BjC,QAAAgN,GAAAqG,EAAAvF,GACAA,IAAA0hB,MAAA,IAGA,QAFAtvB,GAAAmT,EAEA3Q,EAAA,EAAiBA,EAAAoL,EAAAnL,QAGjB,OAFAzC,OAAA4N,EAAApL,KADkCA,KAQlC,MAAAxC,GAGA,QAAAsL,GAAA6H,EAAAvF,EAAA9C,EAAA7D,GACA2G,IAAA0hB,MAAA,IAIA,QAFA3sB,GADA3C,EAAAmT,EAGA3Q,EAAA,EAAiBA,EAAAoL,EAAAnL,OAAA,EAAqBD,IACtCG,EAAAiL,EAAApL,GAEA,MAAAxC,EAAA2C,KACA3C,EAAA2C,OAGA3C,IAAA2C,IAGAsE,GAAA,MAAAjH,EAAA4N,EAAApL,OACAxC,EAAA4N,EAAApL,IAAAsI,GAIA,QAAA+6G,GAAA/vG,GACApN,EAAAo9G,EAAA,SAAAx9G,GACAA,EAAA,IAAAwN,MAAAxN,EAAA,IAAAwN,MACAA,EAAAxN,EAAA,IAAAwN,EAAAxN,EAAA,OASA,QAAA26B,GAAAntB,EAAAiwG,GACAC,EAAAlwG,EAAAiwG,GAEAjwG,EAAA6c,OAAAxV,EAAArH,EAAA6c,QACAjqB,EAAAoN,EAAA6c,OAAA,SAAAszF,GACA,GAAA/+G,EAAA++G,GAAA,CAIA,GAAA1iG,GAAA0iG,EAAArhH,IAQA,IANA,QAAA2e,GAAA,UAAAA,GACA,MAAA0iG,EAAAC,YACAD,EAAAt2C,UAAAs2C,EAAAC,WAIA,UAAA3iG,EAAA,CACA,GAAA4iG,GAAAr5G,EAAAm5G,EAAA,gBACA,OAAAE,GAAA76G,EAAA26G,EAAA,yBAAAE,GAGA,OAAA3jH,GAAA,EAAmBA,EAAA4jH,EAAA3jH,OAAgCD,IACnD,GAAA4jH,EAAA5jH,KAAAyjH,EAAArhH,KAAA,CACAihH,EAAAI,EACA,WAKAnwG,EAAAuwG,YACAvwG,EAAAwwG,UAAAxwG,EAAAuwG,WAGA39G,EAAA69G,EAAA,SAAAC,GACA,GAAA78E,GAAA7zB,EAAA0wG,EAEA78E,KACAtiC,EAAAsiC,KACAA,OAGAjhC,EAAAihC,EAAA,SAAA7zB,GACA+vG,EAAA/vG,QAvGA,GAAAwhC,GAAAx3C,EAAA,MAEA4I,EAAA4uC,EAAA5uC,KACArB,EAAAiwC,EAAAjwC,QACAH,EAAAowC,EAAApwC,SAEA8+G,EAAAlmH,EAAA,MAEAiuB,EAAAjuB,EAAA,MAEAqd,EAAA4Q,EAAA5Q,iBA8CA2oG,IAAA,wDACAS,GAAA,sFACAH,GAAA,oKAmDAxmH,GAAAC,QAAAojC,G7Hqj5BMwjF,KACA,SAAU7mH,EAAQC,EAASC,G8H3p5BjC,QAAA4mH,GAAAvzG,GACA,GAAAwzG,GAAAxzG,KAAAo3D,SAEA,IAAAo8C,EAIA,OAAAnkH,GAAA,EAAAgE,EAAAogH,EAAAnkH,OAA+CD,EAAAgE,EAAShE,IAAA,CACxD,GAAA2zC,GAAAywE,EAAApkH,GACAqkH,EAAAF,EAAAlpG,OACAqpG,EAAAH,EAAAppG,QAEAspG,MAAA1wE,KACAhjC,EAAAgjC,GAAAhjC,EAAAgjC,OAEAhjC,EAAAgjC,GAAA14B,OAGArJ,EAAApN,MAAAmM,EAAAgjC,GAAA14B,OAAAopG,EAAA1wE,IAFAhjC,EAAAgjC,GAAA14B,OAAAopG,EAAA1wE,GAKA0wE,EAAA1wE,GAAA,MAGA2wE,KAAA3wE,KACAhjC,EAAAgjC,GAAAhjC,EAAAgjC,OAEAhjC,EAAAgjC,GAAA54B,SAGAnJ,EAAApN,MAAAmM,EAAAgjC,GAAA54B,SAAAupG,EAAA3wE,IAFAhjC,EAAAgjC,GAAA54B,SAAAupG,EAAA3wE,GAKA2wE,EAAA3wE,GAAA,OAKA,QAAA4wE,GAAA5zG,EAAA09C,GACA,GAAAm2D,GAAA9/G,EAAAiM,MAAA09C,GACAl8C,EAAAzN,EAAA8/G,MAAAryG,SAEA,IAAAA,EACA,OAAAnS,GAAA,EAAAgE,EAAA0nB,EAAAxL,mBAAAjgB,OAA8DD,EAAAgE,EAAShE,IAAA,CACvE,GAAAquD,GAAA3iC,EAAAxL,mBAAAlgB,EAEAmS,GAAA5N,eAAA8pD,KACAm2D,EAAAn2D,GAAAl8C,EAAAk8C,KAMA,QAAAo2D,GAAAC,GACAhgH,EAAAggH,KACAH,EAAAG,EAAA,UACAH,EAAAG,EAAA,aAIA,QAAAC,GAAAlB,GACA,GAAA/+G,EAAA++G,GAAA,CAIAS,EAAAT,GACAgB,EAAAhB,EAAA12D,OAEA03D,EAAAhB,EAAAmB,YAEAH,EAAAhB,EAAAoB,UACA,IAAAC,GAAArB,EAAAqB,SACAZ,GAAAY,GACAL,EAAAK,KAAA/3D,MACA,IAAAg4D,GAAAtB,EAAAsB,QACAb,GAAAT,EAAAsB,UACAN,EAAAM,KAAAh4D,MACA,IAAAi4D,GAAAvB,EAAAuB,QACAP,GAAAO,KAAAj4D,OAEAw3D,EAAAd,EAAA,aACAc,EAAAd,EAAA,SACAc,EAAAd,EAAA,SACA,IAAAx9G,GAAAw9G,EAAAx9G,IAEA,IAAAA,EACA,OAAAjG,GAAA,EAAmBA,EAAAiG,EAAAhG,OAAiBD,IACpCkkH,EAAAj+G,EAAAjG,IACAykH,EAAAx+G,EAAAjG,IAAAiG,EAAAjG,GAAA+sD,MAKA,IAAA+3D,GAAArB,EAAAqB,SAEA,IAAAA,KAAA7+G,KAGA,OAFAg/G,GAAAH,EAAA7+G,KAEAjG,EAAA,EAAmBA,EAAAilH,EAAAhlH,OAAmBD,IACtCkkH,EAAAe,EAAAjlH,IACAykH,EAAAQ,EAAAjlH,IAAAilH,EAAAjlH,GAAA+sD,MAKA,IAAAg4D,GAAAtB,EAAAsB,QAEA,IAAAA,KAAA9+G,KAGA,OAFAi/G,GAAAH,EAAA9+G,KAEAjG,EAAA,EAAmBA,EAAAklH,EAAAjlH,OAAmBD,IACtC4R,EAAA/M,QAAAqgH,EAAAllH,KACAkkH,EAAAgB,EAAAllH,GAAA,IACAykH,EAAAS,EAAAllH,GAAA,IAAAklH,EAAAllH,GAAA,GAAA+sD,OACAm3D,EAAAgB,EAAAllH,GAAA,IACAykH,EAAAS,EAAAllH,GAAA,IAAAklH,EAAAllH,GAAA,GAAA+sD,SAEAm3D,EAAAgB,EAAAllH,IACAykH,EAAAS,EAAAllH,IAAAklH,EAAAllH,GAAA+sD,SAMA,QAAAo4D,GAAAx9E,GACA,MAAA/1B,GAAA/M,QAAA8iC,cAGA,QAAAy9E,GAAAz9E,GACA,OAAA/1B,EAAA/M,QAAA8iC,KAAA,GAAAA,OAGA,QAAAlH,GAAAntB,EAAAiwG,GACAr9G,EAAAi/G,EAAA7xG,EAAA6c,QAAA,SAAAszF,GACA/+G,EAAA++G,IAAAkB,EAAAlB,IAEA,IAAAhrC,IAAA,6EACA8qC,IAAA9qC,EAAAhyE,KAAA,iDACAP,EAAAuyE,EAAA,SAAA1G,GACA7rE,EAAAi/G,EAAA7xG,EAAAy+D,IAAA,SAAAszC,GACAA,IACAd,EAAAc,EAAA,aACAd,EAAAc,EAAA/xC,YAAA,cAIAptE,EAAAi/G,EAAA7xG,EAAAgyG,UAAA,SAAAC,GACA,GAAAC,GAAAD,KAAAC,mBACAjB,GAAAiB,EAAA,aACAjB,EAAAiB,KAAAlyC,YAAA,WAEAptE,EAAAi/G,EAAA7xG,EAAAmyG,UAAA,SAAAC,GACAnB,EAAAmB,EAAA,YACAnB,EAAAmB,EAAA,cACAnB,EAAAmB,EAAA,eAGAx/G,EAAAi/G,EAAA7xG,EAAAqyG,OAAA,SAAAC,GACArB,EAAAqB,EAAA,UAEA1/G,EAAAi/G,EAAA7xG,EAAAwlD,KAAA,SAAA+sD,GACAnhH,EAAAmhH,KACApB,EAAAoB,EAAA94D,OACA7mD,EAAAi/G,EAAAU,EAAAC,SAAA,SAAAC,GACAtB,EAAAsB,EAAAh5D,YAIA03D,EAAAW,EAAA9xG,EAAAktG,UAAAzzD,OACAw3D,EAAAa,EAAA9xG,EAAAggE,aAAA,SACAixC,EAAAa,EAAA9xG,EAAA4mD,SAAAoZ,YAAA,SAlLA,GAAA1hE,GAAAtU,EAAA,MAEAouB,EAAApuB,EAAA,MAEA4I,EAAA0L,EAAA1L,KACAxB,EAAAkN,EAAAlN,SACA0/G,GAAA,iFA+KAhnH,GAAAC,QAAAojC,G9Hyq5BMulF,KACA,SAAU5oH,EAAQC,G+Hzy5BxB,QAAAojC,GAAA1f,EAAA3N,EAAAkb,GACAlb,EAAA4gF,iBAAAjzE,EAAA,SAAA4N,GACA,GAAA1oB,GAAA0oB,EAAAxS,UACAq8E,EAAA7pE,EAAArkB,IAAA,YACAqhB,EAAAgD,EAAA4L,gBAEA,oBAAA5O,EAAAvpB,MAAAo2F,EAAA,CACA,GAAA9d,GAAA/uD,EAAAkuC,cACAu/B,EAAAztE,EAAAgvD,aAAAD,GACA9vC,EAAA8vC,EAAAlwC,YAEAi1B,EAAA70B,EAAA,GAAAA,EAAA,GACAk2B,EAAAvzD,KAAAX,MAAA3G,EAAAgf,QAAAw6C,EAEA,IAAAqB,EAAA,GACA,GAAAmlD,EAEA,kBAAAztB,GACAytB,EAAAC,EAAA1tB,GACS,mBAAAA,KACTytB,EAAAztB,GAGAytB,IACAhgH,IAAAg5E,WAAAma,EAAA9rC,IAAA,EAAAwT,EAAAmlD,EAAAE,GACAx3F,EAAA6kC,QAAAvtD,OAIG7E,MAnFH,GAAA8kH,IACAE,QAAA,SAAAn/B,GAIA,OAHAlhE,GAAA,EACAd,EAAA,EAEAjlB,EAAA,EAAmBA,EAAAinF,EAAAhnF,OAAkBD,IACrCglB,MAAAiiE,EAAAjnF,MACA+lB,GAAAkhE,EAAAjnF,GACAilB,IAKA,YAAAA,EAAAtJ,IAAAoK,EAAAd,GAEAc,IAAA,SAAAkhE,GAGA,OAFAlhE,GAAA,EAEA/lB,EAAA,EAAmBA,EAAAinF,EAAAhnF,OAAkBD,IAErC+lB,GAAAkhE,EAAAjnF,IAAA,CAGA,OAAA+lB,IAEAvY,IAAA,SAAAy5E,GAGA,OAFAz5E,IAAA6a,IAEAroB,EAAA,EAAmBA,EAAAinF,EAAAhnF,OAAkBD,IACrCinF,EAAAjnF,GAAAwN,MAAAy5E,EAAAjnF,GAGA,OAAAwN,IAEAgN,IAAA,SAAAysE,GAGA,OAFAzsE,GAAA6N,IAEAroB,EAAA,EAAmBA,EAAAinF,EAAAhnF,OAAkBD,IACrCinF,EAAAjnF,GAAAwa,MAAAysE,EAAAjnF,GAGA,OAAAwa,IAIA6rG,QAAA,SAAAp/B,GACA,MAAAA,GAAA,KAIAk/B,EAAA,SAAAl/B,EAAAtoF,GACA,MAAA4O,MAAAX,MAAAq6E,EAAAhnF,OAAA,GAmCA7C,GAAAC,QAAAojC,G/Hq25BM6lF,KACA,SAAUlpH,EAAQC,EAASC,GgI5x5BjC,QAAAipH,GAAAj+G,EAAAk+G,GACA,MAAAC,GAAAn+G,EAAA4c,EAAAshG,IAjKA,GAAA50G,GAAAtU,EAAA,MAEAmuC,EAAAnuC,EAAA,MAEAmoC,EAAAnoC,EAAA,MAEAkuC,EAAAluC,EAAA,MAOAopH,EAAAj7E,EAAAltC,UACAooH,EAAAn7E,EAAAjtC,UACA2mB,EAAAugB,EAAAvgB,iBACAuhG,EAAAhhF,EAAA74B,MACAg6G,EAAAr5G,KAAAmY,MACAmhG,EAAAt5G,KAAA4yC,KACA1J,EAAAlpC,KAAA2Y,IACA4gG,EAAAv5G,KAAAvL,IACA+kH,EAAAt7E,EAAAxmC,QACA7C,KAAA,MACA0oC,KAAA,GACAlE,aAAA,WACA6E,EAAArkC,MAAAhG,KAAA+F,WACA/F,KAAA4lH,eAAA,GAAAx7E,IAMAoB,SAAA,WACA,GAAAq6E,GAAA7lH,KAAA4lH,eACAp8E,EAAAxpC,KAAAqtD,QACAlkB,EAAA08E,EAAAz8E,WACA,OAAA54B,GAAArL,IAAAogH,EAAA/5E,SAAA1uC,KAAAkD,MAAA,SAAAkH,GACA,GAAA4+G,GAAAzhF,EAAA74B,MAAA6pC,EAAAr1C,KAAA0pC,KAAAxiC,GAIA,OAFA4+G,GAAA5+G,IAAAsiC,EAAA,IAAAq8E,EAAAE,SAAAZ,EAAAW,EAAA38E,EAAA,IAAA28E,EACAA,EAAA5+G,IAAAsiC,EAAA,IAAAq8E,EAAAG,SAAAb,EAAAW,EAAA38E,EAAA,IAAA28E,GAEK9lH,OAOL2rC,SAAA45E,EAAA55E,SAMAhqB,MAAA,SAAAza,GAEA,MADAA,GAAAo+G,EAAA3jG,MAAA7kB,KAAAkD,KAAAkH,GACAmuC,EAAAr1C,KAAA0pC,KAAAxiC,IAOAyiC,UAAA,SAAAgkB,EAAAC,GACA,GAAAlkB,GAAA1pC,KAAA0pC,IACAikB,GAAA+3D,EAAA/3D,GAAA+3D,EAAAh8E,GACAkkB,EAAA83D,EAAA93D,GAAA83D,EAAAh8E,GACA67E,EAAA57E,UAAA7sC,KAAAkD,KAAA2tD,EAAAC,IAMAxkB,UAAA,WACA,GAAAM,GAAA1pC,KAAA0pC,KACAF,EAAA87E,EAAAl8E,UAAAtsC,KAAAkD,KACAwpC,GAAA,GAAA6L,EAAA3L,EAAAF,EAAA,IACAA,EAAA,GAAA6L,EAAA3L,EAAAF,EAAA,GAEA,IAAAq8E,GAAA7lH,KAAA4lH,eACAz8E,EAAA08E,EAAAz8E,WAGA,OAFAy8E,GAAAE,WAAAv8E,EAAA,GAAA27E,EAAA37E,EAAA,GAAAL,EAAA,KACA08E,EAAAG,WAAAx8E,EAAA,GAAA27E,EAAA37E,EAAA,GAAAL,EAAA,KACAK,GAMAgkB,YAAA,SAAAhkB,GACAxpC,KAAA4lH,eAAAp4D,YAAAhkB,EAEA,IAAAE,GAAA1pC,KAAA0pC,IACAF,GAAA,GAAAk8E,EAAAl8E,EAAA,IAAAk8E,EAAAh8E,GACAF,EAAA,GAAAk8E,EAAAl8E,EAAA,IAAAk8E,EAAAh8E,GACA47E,EAAA93D,YAAA1wD,KAAAkD,KAAAwpC,IAMAikB,oBAAA,SAAA5oD,EAAAqnD,GACAlsD,KAAAwtD,YAAA3oD,EAAA6oD,cAAAxB,GAAA,WAAAhlD,GACA,MAAAA,GAAA,MAQA+yD,UAAA,SAAAgsD,GACAA,KAAA,EACA,IAAAz8E,GAAAxpC,KAAAqtD,QACAxkB,EAAAW,EAAA,GAAAA,EAAA,EAEA,MAAAX,IAAA5hB,KAAA4hB,GAAA,IAIA,GAAA/hB,GAAAud,EAAAle,SAAA0iB,GACAq9E,EAAAD,EAAAp9E,EAAA/hB,CAOA,KALAo/F,GAAA,KACAp/F,GAAA,KAIAlD,MAAAkD,IAAA3a,KAAAuK,IAAAoQ,GAAA,GAAA3a,KAAAuK,IAAAoQ,GAAA,GACAA,GAAA,EAGA,IAAA8iB,IAAAvF,EAAA74B,MAAAi6G,EAAAj8E,EAAA,GAAA1iB,MAAAud,EAAA74B,MAAAg6G,EAAAh8E,EAAA,GAAA1iB,MACA9mB,MAAAstD,UAAAxmC,EACA9mB,KAAA85D,YAAAlwB,IAOAA,WAAA,SAAAr6B,GACAg2G,EAAA37E,WAAA9sC,KAAAkD,KAAAuP,EACA,IAAAs2G,GAAA7lH,KAAA4lH,cACAC,GAAAE,SAAAx2G,EAAA05B,OACA48E,EAAAG,SAAAz2G,EAAA25B,SAGA14B,GAAA1L,MAAA,gCAAAolB,GACAy7F,EAAAxoH,UAAA+sB,GAAA,SAAAhjB,GAEA,MADAA,GAAAw+G,EAAAx+G,GAAAw+G,EAAA1lH,KAAA0pC,MACA47E,EAAAp7F,GAAAptB,KAAAkD,KAAAkH,MAIAy+G,EAAAtoH,OAAA,WACA,UAAAsoH,GAOA,IAAAtmF,GAAAsmF,CACA3pH,GAAAC,QAAAojC,GhIk85BM8mF,KACA,SAAUnqH,EAAQC,EAASC,GiIxm6BjC,GAAAsU,GAAAtU,EAAA,MAEAmuC,EAAAnuC,EAAA,MASAopH,EAAAj7E,EAAAltC,UACA+sC,EAAAG,EAAAxmC,QACA7C,KAAA,UACAwnB,KAAA,SAAA3jB,EAAA2kC,GACAxpC,KAAAm0F,MAAAtvF,EACA7E,KAAAqtD,QAAA7jB,IAAA,EAAA3kC,EAAAhG,OAAA,IAEAo2B,MAAA,SAAA/tB,GACA,uBAAAA,GAAAsJ,EAAArM,QAAAnE,KAAAm0F,MAAAjtF,GACAiF,KAAAX,MAAAtE,IAEAo3B,QAAA,SAAA8nF,GAEA,MADAA,GAAApmH,KAAAi1B,MAAAmxF,GACAd,EAAAhnF,QAAAxhC,KAAAkD,KAAAomH,IAAA,MAAApmH,KAAAm0F,MAAAiyB,IAQAvkG,UAAA,SAAA3a,GACA,MAAAo+G,GAAAzjG,UAAA/kB,KAAAkD,UAAAi1B,MAAA/tB,KAEAya,MAAA,SAAAza,GACA,MAAAiF,MAAAX,MAAA85G,EAAA3jG,MAAA7kB,KAAAkD,KAAAkH,KAMAskC,SAAA,WAKA,IAJA,GAAAD,MACA/B,EAAAxpC,KAAAqtD,QACA+4D,EAAA58E,EAAA,GAEA48E,GAAA58E,EAAA,IACA+B,EAAAlmC,KAAA+gH,GACAA,GAGA,OAAA76E,IAQAI,SAAA,SAAAiJ,GACA,MAAA50C,MAAAm0F,MAAAv/C,IAMA/wB,MAAA,WACA,MAAA7jB,MAAAqtD,QAAA,GAAArtD,KAAAqtD,QAAA,MAMAI,oBAAA,SAAA5oD,EAAAqnD,GACAlsD,KAAAwtD,YAAA3oD,EAAA6oD,cAAAxB,GAAA,KAEA+N,UAAAzpD,EAAA5I,KACAgiC,WAAAp5B,EAAA5I,MAMAsiC,GAAA7sC,OAAA,WACA,UAAA6sC,GAGA,IAAA7K,GAAA6K,CACAluC,GAAAC,QAAAojC,GjI8m6BMgnF,KACA,SAAUrqH,EAAQC,EAASC,GkIxs6BjC,GAAAsU,GAAAtU,EAAA,MAEAmoC,EAAAnoC,EAAA,MAEA2iB,EAAA3iB,EAAA,MAEAoqH,EAAApqH,EAAA,MAEAkuC,EAAAluC,EAAA,MAWAqpH,EAAAn7E,EAAAjtC,UACAsoH,EAAAt5G,KAAA4yC,KACAymE,EAAAr5G,KAAAmY,MAMAiiG,EAAA,SAAAvlG,EAAAtW,EAAA21D,EAAAC,GACA,KAAAD,EAAAC,GAAA,CACA,GAAAK,GAAAN,EAAAC,IAAA,CAEAt/C,GAAA2/C,GAAA,GAAAj2D,EACA21D,EAAAM,EAAA,EAEAL,EAAAK,EAIA,MAAAN,IAQAmmD,EAAAp8E,EAAAvmC,QACA7C,KAAA,OAKA2qC,SAAA,SAAAzkC,GACA,GAAAu/G,GAAAzmH,KAAA0mH,SACAtiF,EAAA,GAAAve,MAAA3e,EACA,OAAA2X,GAAAqlB,WAAAuiF,EAAA,GAAAriF,EAAApkC,KAAAutD,WAAA,YAMA3jB,WAAA,SAAAr6B,GACA,GAAAi6B,GAAAxpC,KAAAqtD,OASA,IAPA7jB,EAAA,KAAAA,EAAA,KAEAA,EAAA,IAzCAm9E,MA0CAn9E,EAAA,IA1CAm9E,OA8CAn9E,EAAA,MAAAviB,KAAAuiB,EAAA,KAAAviB,IAAA,CACA,GAAAnF,GAAA,GAAA+D,KACA2jB,GAAA,OAAA3jB,MAAA/D,EAAA8kG,cAAA9kG,EAAA+kG,WAAA/kG,EAAAglG,WACAt9E,EAAA,GAAAA,EAAA,GAjDAm9E,MAoDA3mH,KAAAi6D,UAAA1qD,EAAAk6B,YAAAl6B,EAAAs6B,YAAAt6B,EAAAu6B,YAEA,IAAAhjB,GAAA9mB,KAAAstD,SAEA/9C,GAAA05B,SACAO,EAAA,GAAAnF,EAAA74B,MAAAg6G,EAAAh8E,EAAA,GAAA1iB,OAGAvX,EAAA25B,SACAM,EAAA,GAAAnF,EAAA74B,MAAAi6G,EAAAj8E,EAAA,GAAA1iB,QAOAmzC,UAAA,SAAAgsD,EAAAp8E,EAAAC,GACAm8E,KAAA,EACA,IAAAz8E,GAAAxpC,KAAAqtD,QACAxkB,EAAAW,EAAA,GAAAA,EAAA,GACAu9E,EAAAl+E,EAAAo9E,CAEA,OAAAp8E,GAAAk9E,EAAAl9E,IACAk9E,EAAAl9E,GAGA,MAAAC,GAAAi9E,EAAAj9E,IACAi9E,EAAAj9E,EAGA,IAAAk9E,GAAAC,EAAApoH,OACA0hB,EAAAgmG,EAAAU,EAAAF,EAAA,EAAAC,GACAxoE,EAAAyoE,EAAA96G,KAAAiN,IAAAmH,EAAAymG,EAAA,IACAlgG,EAAA03B,EAAA,EAEA,aAAAA,EAAA,IACA,GAAA0oE,GAAAr+E,EAAA/hB,CAIAA,IADAud,EAAAhe,KAAA6gG,EAAAjB,GAAA,GAIA,GAAAkB,GAAAnnH,KAAAutD,WAAA,kBAAA1nC,OAAA2jB,EAAA,KAAAA,EAAA,IAAA49E,oBAAA,IACAx9E,GAAAz9B,KAAAX,MAAAi6G,GAAAj8E,EAAA,GAAA29E,GAAArgG,KAAAqgG,GAAAh7G,KAAAX,MAAAg6G,GAAAh8E,EAAA,GAAA29E,GAAArgG,KAAAqgG,GACAb,GAAA9kC,UAAA53C,EAAAJ,GACAxpC,KAAA0mH,SAAAloE,EAEAx+C,KAAAstD,UAAAxmC,EACA9mB,KAAA85D,YAAAlwB,GAEA3U,MAAA,SAAA/tB,GAEA,OAAAm9B,EAAA/pB,UAAApT,KAGAsJ,GAAA1L,MAAA,gCAAAolB,GACAs8F,EAAArpH,UAAA+sB,GAAA,SAAAhjB,GACA,MAAAq+G,GAAAr7F,GAAAptB,KAAAkD,UAAAi1B,MAAA/tB,MAIA,IAAA+/G,KACA,WAtHA,MAuHA,WAAAI,MACA,WAAAA,MACA,WAAAA,OACA,WAAAA,MACA,eA1HAA,MA2HA,eAAAC,MACA,eAAAA,MACA,eAAAA,MACA,eAAAA,OACA,eA9HAA,OA+HA,eAAAX,OACA,eAAAA,QACA,eAAAA,QACA,cAjIAA,QAkIA,cAAAY,SACA,cAAAA,SACA,cAAAA,SACA,cAAAA,QACA,cAAAA,SACA,OAAAA,SACA,cAAAA,QACA,OAAAA,UACA,OAAAA,UACA,QAAAA,UACA,OAAAA,UACA,QAAAA,UACA,OAAAA,UACA,UAAAA,SACA,QAAAA,WACA,QAAAA,UACA,YAAAA,UACA,QAAAA,WACA,QAAAA,UACA,OAAAA,SAOAf,GAAAnpH,OAAA,SAAAod,GACA,UAAA+rG,IACApF,OAAA3mG,EAAAzI,QAAA9I,IAAA,YAIA,IAAAm2B,GAAAmnF,CACAxqH,GAAAC,QAAAojC,GlI8s6BMmoF,KACA,SAAUxrH,EAAQC,EAASC,GmI346BjC,GAAAmc,GAAAnc,EAAA,MAEAgrC,EAAAhrC,EAAA,MAEA+lC,EAAA/lC,EAAA,MAEA+F,EAAA,WAKAjC,KAAAmoB,MAAA,GAAA9P,GAMArY,KAAAsnC,IAAAJ,EAAAO,OAAA,iBAGAxlC,GAAA9E,WACAG,YAAA2E,EACAumB,KAAA,SAAAxW,EAAAkb,KACAyC,OAAA,SAAAvC,EAAApb,EAAAkb,EAAAnQ,KACA2R,QAAA,aAEA,IAAA+4F,GAAAxlH,EAAA9E,SAEAsqH,GAAAztF,WAAAytF,EAAAttF,aAAAstF,EAAAvtF,aAAA,SAAA3M,EAAAvb,EAAAkb,EAAAnQ,KAIAklB,EAAAa,kBAAA7gC,GAEAggC,EAAA4D,sBAAA5jC,GACA2kC,oBAAA,GAEA,IAAAvH,GAAAp9B,CACAjG,GAAAC,QAAAojC,GnIi56BMqoF,KACA,SAAU1rH,EAAQC,EAASC,GoIt76BjC,QAAAmjC,GAAArtB,GACA,QAAA21G,GAAAp6F,GACA,GAAAq6F,IAAAr6F,EAAA0qC,uBAAA,0BAAAvsC,MAAA,KACA7mB,EAAA0oB,EAAAxS,UACApO,EAAA4gB,EAAArkB,IAAA0+G,IACAr6F,EAAA8rC,oBAAA9rC,EAAArkB,IAAA,QAGArE,GAAA25E,UAAA,QAAA7xE,GAEAqF,EAAAuoG,iBAAAhtF,KACA,mBAAA5gB,gBAAAo3D,IACAl/D,EAAAC,KAAA,SAAAyb,GACA1b,EAAAk6E,cAAAx+D,EAAA,QAAA5T,EAAA4gB,EAAAxO,cAAAwB,OAKA1b,EAAAC,KAAA,SAAAyb,GACA,GAAAL,GAAArb,EAAAsb,aAAAI,GACA5T,EAAAuT,EAAAhX,IAAA0+G,GAAA,EAEA,OAAAj7G,GACA9H,EAAAk6E,cAAAx+D,EAAA,QAAA5T,MAMAqF,EAAAgsG,cAAA2J,GA/BA,GAAA5jD,GAAA7nE,EAAA,KAkCAF,GAAAC,QAAAojC,GpI876BMwoF,KACA,SAAU7rH,EAAQC,GqIj+6BxB,QAAAojC,GAAA1f,EAAAmoG,EAAAC,EAAA/1G,EAAAkb,GAEAlb,EAAAisG,oBAAAt+F,EAAA,SAAA4N,GACA,GAAA1oB,GAAA0oB,EAAAxS,UACA6hD,EAAArvC,EAAArkB,IAAA,WAAA4+G,EACA/iD,EAAAx3C,EAAArkB,IAAA,aACArE,GAAA25E,WACAupC,gBAAAnrD,EACA6T,OAAA7T,EACAmI,eAGA/yD,EAAAuoG,iBAAAhtF,KACA,mBAAAw3C,IACAlgE,EAAAC,KAAA,SAAAyb,GACA,GAAAtB,GAAAsO,EAAArO,YAAAqB,GAEAH,EAAAmN,EAAAxO,cAAAwB,EACA1b,GAAAk6E,cAAAx+D,EAAA,aAAAwkD,EAAA9lD,EAAAmB,MAIAvb,EAAAC,KAAA,SAAAyb,GACA,GAAAL,GAAArb,EAAAsb,aAAAI,GACAynG,EAAA9nG,EAAA7P,WAAA,aACA43G,EAAA/nG,EAAA7P,WAAA,gBAEA,OAAA23G,GACAnjH,EAAAk6E,cAAAx+D,EAAA,SAAAynG,GAGA,MAAAC,GAEApjH,EAAAk6E,cAAAx+D,EAAA,aAAA0nG,QAOAjsH,EAAAC,QAAAojC,GrIu+6BM6oF,KACA,SAAUlsH,EAAQC,EAASC,GsI//6BjC,QAAAisH,GAAAC,EAAAC,EAAA97F,GACA,OACAvrB,KAAAonH,EACA77F,QAEA7tB,OAAA2pH,EAAA3pH,OAEA4pH,UAAAD,EAAAC,UACAhtE,cAAA,EACA5B,QAAAntB,EAAAotB,IACAG,QAAAvtB,EAAAqtB,IACA2uE,aAAAh8F,EAAAg8F,aACAC,OAAAj8F,EAAAi8F,OACAC,OAAAl8F,EAAAk8F,OACAC,WAAAn8F,EAAAm8F,WACApuE,WAAA/tB,EAAA8tB,QACAprC,UAAAsd,EAAAtd,UACAwrC,MAAAluB,EAAAkuB,OAIA,QAAAkuE,MA6PA,QAAAC,GAAAC,EAAAn+G,EAAAC,GACA,GAAAk+G,IAAA3wG,UAAA,yBAAAxN,EAAAC,GAAA,CAIA,IAHA,GACAixC,GADA7uC,EAAA87G,EAGA97G,GAAA,CAIA,GAAAA,EAAAm1E,WAAAn1E,EAAAm1E,SAAA5jD,QAAA5zB,EAAAC,GACA,QAGAoC,GAAAme,SACA0wB,GAAA,GAGA7uC,IAAAmJ,OAGA,OAAA0lC,GAAAktE,EAGA,SA1TA,GAAA5Q,GAAAh8G,EAAA,MAEAmkC,EAAAnkC,EAAA,MAEA6sH,EAAA7sH,EAAA,MAEAyrB,EAAAzrB,EAAA,MASA4sH,EAAA,QAyBAH,GAAAxrH,UAAAuxB,QAAA,YAEA,IAAAs6F,IAAA,4FAWAr4B,EAAA,SAAA9gE,EAAAwH,EAAA4xF,EAAAC,GACAvhG,EAAA7qB,KAAAkD,MACAA,KAAA6vB,UACA7vB,KAAAq3B,UACAr3B,KAAAkpH,cACAD,KAAA,GAAAN,GAKA3oH,KAAAipH,QAEAA,EAAAvhG,QAAA1nB,KAOAA,KAAAmpH,YAMAnpH,KAAAopH,iBAMAppH,KAAAwvG,OAMAxvG,KAAAyvG,OACAsZ,EAAAjsH,KAAAkD,MACAk4G,EAAApzG,KAAAkkH,EAAA,SAAA5mH,GACA6mH,EAAAx5G,IAAAw5G,EAAAx5G,GAAArN,EAAApC,KAAAoC,GAAApC,OACGA,MAGH2wF,GAAAxzF,WACAG,YAAAqzF,EACA04B,UAAA,SAAA98F,GACA,GAAA7hB,GAAA6hB,EAAAotB,IACAhvC,EAAA4hB,EAAAqtB,IACA0vE,EAAAtpH,KAAAmpH,SACAI,EAAAD,EAAA5qH,MAKA6qH,OAAA77G,OACA47G,EAAAtpH,KAAAqyF,UAAAi3B,EAAA5+G,EAAA4+G,EAAA3+G,GACA4+G,EAAAD,EAAA5qH,OAGA,IAAA8qH,GAAAxpH,KAAAmpH,SAAAnpH,KAAAqyF,UAAA3nF,EAAAC,GACA8+G,EAAAD,EAAA9qH,OACAuqH,EAAAjpH,KAAAipH,KACAA,GAAAS,WAAAT,EAAAS,UAAAD,IAAAjmD,OAAA,WAEA+lD,GAAAE,IAAAF,GACAvpH,KAAA2pH,kBAAAL,EAAA,WAAA/8F,GAIAvsB,KAAA2pH,kBAAAH,EAAA,YAAAj9F,GAEAk9F,OAAAF,GACAvpH,KAAA2pH,kBAAAH,EAAA,YAAAj9F,IAGAq9F,SAAA,SAAAr9F,GACAvsB,KAAA2pH,kBAAA3pH,KAAAmpH,SAAA,WAAA58F,EAMA,IACAs9F,GADAC,EAAAv9F,EAAAw9F,WAAAx9F,EAAAy9F,aAGA,IACAF,OAAAG,iBACKH,GAAA,GAAAA,EAAAzjH,YAAAwjH,EAAAC,IAAA9pH,KAAAkpH,eAELW,GAAA7pH,KAAA4sB,QAAA,aACAL,WAOA7C,OAAA,SAAA6C,GACAvsB,KAAAmpH,aAQA7d,SAAA,SAAA7jF,EAAAyiG,GACA,GAAAxiG,GAAA1nB,KAAAynB,EACAC,MAAA5qB,KAAAkD,KAAAkqH,IAMAx7F,QAAA,WACA1uB,KAAAipH,MAAAv6F,UACA1uB,KAAA6vB,QAAA7vB,KAAAipH,MAAAjpH,KAAAq3B,QAAA,MAOA+6D,eAAA,SAAAnrB,GACA,GAAAgiD,GAAAjpH,KAAAipH,KACAA,GAAAS,WAAAT,EAAAS,UAAAziD,IAWA0iD,kBAAA,SAAAtB,EAAA5gG,EAAA8E,GACA87F,OACA,IAAAt7G,GAAAs7G,EAAA3pH,MAEA,KAAAqO,MAAAme,OAAA,CAOA,IAHA,GAAAonE,GAAA,KAAA7qE,EACA0iG,EAAAhC,EAAA1gG,EAAA4gG,EAAA97F,GAEAxf,IACAA,EAAAulF,KAAA63B,EAAA7uE,aAAAvuC,EAAAulF,GAAAx1F,KAAAiQ,EAAAo9G,IACAp9G,EAAA6f,QAAAnF,EAAA0iG,GACAp9G,IAAAmJ,QAEAi0G,EAAA7uE,gBAKA6uE,EAAA7uE,eAEAt7C,KAAA4sB,QAAAnF,EAAA0iG,GAGAnqH,KAAAq3B,SAAAr3B,KAAAq3B,QAAA+yF,eAAA,SAAAC,GACA,kBAAAA,GAAA/3B,IACA+3B,EAAA/3B,GAAAx1F,KAAAutH,EAAAF,GAGAE,EAAAz9F,SACAy9F,EAAAz9F,QAAAnF,EAAA0iG,QAcA93B,UAAA,SAAA3nF,EAAAC,EAAA2/G,GAOA,OANA3jG,GAAA3mB,KAAA6vB,QAAA+H,iBACAhX,GACAlW,IACAC,KAGA/L,EAAA+nB,EAAA9nB,OAAA,EAAiCD,GAAA,EAAQA,IAAA,CACzC,GAAA2rH,EAEA,IAAA5jG,EAAA/nB,KAAA0rH,IACA3jG,EAAA/nB,GAAAqxB,SAAAs6F,EAAA3B,EAAAjiG,EAAA/nB,GAAA8L,EAAAC,OACAiW,EAAA0nG,YAAA1nG,EAAA0nG,UAAA3hG,EAAA/nB,IAEA2rH,IAAAzB,GAAA,CACAloG,EAAAliB,OAAAioB,EAAA/nB,EACA,QAKA,MAAAgiB,KAIAs3F,EAAApzG,MAAA,8EAAA1C,GACAuuF,EAAAxzF,UAAAiF,GAAA,SAAAmqB,GAEA,GAAAi9F,GAAAxpH,KAAAqyF,UAAA9lE,EAAAotB,IAAAptB,EAAAqtB,KACA6vE,EAAAD,EAAA9qH,MAEA,kBAAA0D,EACApC,KAAAwqH,QAAAf,EACAzpH,KAAAyqH,YAAAl+F,EAAAotB,IAAAptB,EAAAqtB,KAEA55C,KAAA0qH,MAAAjB,MACK,gBAAArnH,EACLpC,KAAA0qH,MAAAjB,MACK,cAAArnH,EAAA,CACL,GAAApC,KAAAwqH,UAAAxqH,KAAA0qH,QAIA1qH,KAAAyqH,YACApqF,EAAA/d,KAAAtiB,KAAAyqH,YAAAl+F,EAAAotB,IAAAptB,EAAAqtB,MAAA,EACA,MAGA55C,MAAAyqH,WAAA,KAGAzqH,KAAA2pH,kBAAAH,EAAApnH,EAAAmqB,MA8BA2rF,EAAAvzG,MAAAgsF,EAAAhpE,GACAuwF,EAAAvzG,MAAAgsF,EAAAo4B,EACA,IAAA1pF,GAAAsxD,CACA30F,GAAAC,QAAAojC,GtIsh7BMsrF,KACA,SAAU3uH,EAAQC,EAASC,GuIz07BjC,QAAA0uH,KACA,SAYA,QAAAC,GAAAvvG,EAAA+b,EAAAC,GACA,GAAAwzF,GAAA5S,EAAAh0G,eACA1C,EAAA61B,EAAAH,WACAz1B,EAAA41B,EAAAF,YACA4zF,EAAAD,EAAA7pH,KAWA,OATA8pH,GAAA1+G,SAAA,WACA0+G,EAAAxyF,KAAA,EACAwyF,EAAAvyF,IAAA,EACAuyF,EAAAvpH,QAAA,KACAupH,EAAAtpH,SAAA,KACAqpH,EAAAtpH,QAAA81B,EACAwzF,EAAArpH,SAAA61B,EAEAwzF,EAAAh5F,aAAA,iBAAAxW,GACAwvG,EA1CA,GAAA5S,GAAAh8G,EAAA,MAEAk5B,EAAAl5B,EAAA,MAEAwsB,EAAA0M,EAAA1M,iBAEAw6C,EAAAhnE,EAAA,MAEAy/B,EAAAz/B,EAAA,MA8CA8uH,EAAA,SAAA1vG,EAAA+b,EAAAC,GACA,GAAAxP,EACAwP,MAAA5O,EAEA,iBAAApN,GACAwM,EAAA+iG,EAAAvvG,EAAA+b,EAAAC,GAEA4gF,EAAA50G,SAAAgY,KACAwM,EAAAxM,EACAA,EAAAwM,EAAAxM,IAGAtb,KAAAsb,KACAtb,KAAA8nB,KACA,IAAAgkF,GAAAhkF,EAAA7mB,KAEA6qG,KAEAhkF,EAAAmjG,cAAAL,EAEA9e,EAAA,8BACAA,EAAA,sBACAA,EAAA,gCACAA,EAAA,+CACAA,EAAA,UACAA,EAAA,SACAA,EAAA,mBAGA9rG,KAAAkrH,QAAA,KACAlrH,KAAAmrH,QAAA,KACAnrH,KAAAq3B,UACAr3B,KAAA6xF,OAAA,KAQA7xF,KAAA45B,WAAA,EAOA55B,KAAAorH,YAAA,EAOAprH,KAAAqrH,eAAA,GAMArrH,KAAAs3B,MAGA0zF,GAAA7tH,WACAG,YAAA0tH,EACAl7F,QAAA,EACA4M,SAAA,EACA4uF,YAAA,WACAtrH,KAAAi8B,IAAAj8B,KAAA8nB,IAAA9jB,WAAA,MACAhE,KAAAi8B,IAAAsvF,mBACAvrH,KAAAi8B,IAAA3E,IAAAt3B,KAAAs3B,KAEAk0F,iBAAA,WACA,GAAAl0F,GAAAt3B,KAAAs3B,GACAt3B,MAAAkrH,QAAAL,EAAA,QAAA7qH,KAAAsb,GAAAtb,KAAAq3B,QAAAC,GACAt3B,KAAAmrH,QAAAnrH,KAAAkrH,QAAAlnH,WAAA,MACAhE,KAAAmrH,QAAAI,mBAEA,GAAAj0F,GACAt3B,KAAAmrH,QAAAxpG,MAAA2V,MAQA5N,OAAA,SAAAloB,EAAAC,GACA,GAAA61B,GAAAt3B,KAAAs3B,IACAxP,EAAA9nB,KAAA8nB,IACAgkF,EAAAhkF,EAAA7mB,MACAiqH,EAAAlrH,KAAAkrH,OACApf,GAAAtqG,QAAA,KACAsqG,EAAArqG,SAAA,KACAqmB,EAAAtmB,QAAA81B,EACAxP,EAAArmB,SAAA61B,EAEA4zF,IACAA,EAAA1pH,QAAA81B,EACA4zF,EAAAzpH,SAAA61B,EAEA,GAAAA,GACAt3B,KAAAmrH,QAAAxpG,MAAA2V,OASA4D,MAAA,SAAAuwF,GACA,GAAA3jG,GAAA9nB,KAAA8nB,IACAmU,EAAAj8B,KAAAi8B,IACAz6B,EAAAsmB,EAAAtmB,MACAC,EAAAqmB,EAAArmB,OACAm4B,EAAA55B,KAAA45B,WACA8xF,EAAA1rH,KAAAorH,aAAAK,EACAJ,EAAArrH,KAAAqrH,eACA/zF,EAAAt3B,KAAAs3B,GAaA,IAXAo0F,IACA1rH,KAAAkrH,SACAlrH,KAAAwrH,mBAGAxrH,KAAAmrH,QAAA5/B,yBAAA,OACAvrF,KAAAmrH,QAAA1gC,UAAA3iE,EAAA,IAAAtmB,EAAA81B,EAAA71B,EAAA61B,IAGA2E,EAAA0vF,UAAA,IAAAnqH,EAAAC,GAEAm4B,EAAA,CACA,GAAAgyF,EAEAhyF,GAAAG,YAEA6xF,EAAAhyF,EAAAiyF,kBAAA3oD,EAAAtmC,YAAAX,EAAArC,GACAlvB,EAAA,EACAC,EAAA,EACAnJ,QACAC,WAEAm4B,EAAAiyF,iBAAAD,GAEAhyF,EAAAnvB,QACAmhH,EAAAjwF,EAAAx+B,UAAAy+B,iBAAA9+B,KAAA88B,EAAAqC,IAGAA,EAAA6vF,OACA7vF,EAAAa,UAAA8uF,GAAAhyF,EACAqC,EAAA8vF,SAAA,IAAAvqH,EAAAC,GACAw6B,EAAA+vF,UAGA,GAAAN,EAAA,CACA,GAAAR,GAAAlrH,KAAAkrH,OACAjvF,GAAA6vF,OACA7vF,EAAAqvD,YAAA+/B,EACApvF,EAAAwuD,UAAAygC,EAAA,IAAA1pH,EAAAC,GACAw6B,EAAA+vF,YAIA,IAAA3sF,GAAA2rF,CACAhvH,GAAAC,QAAAojC,GvI617BM4sF,KACA,SAAUjwH,EAAQC,EAASC,GwI1h8BjC,QAAAgwH,GAAAhlH,GACA,MAAAgsC,UAAAhsC,EAAA,IAGA,QAAAilH,GAAA9B,GACA,QAAAA,MAIAA,EAAA+B,aAIA,mBAAA/B,GAAA3gG,QAAA,mBAAA2gG,GAAA1rF,SAOA,QAAA0tF,GAAAhC,GACAA,EAAAiC,gBAGA,QAAAC,GAAAlC,GACA,GAAAA,EAAAiC,eACAjC,EAAAnvF,QAOA,QAAAsxF,GAAAz/G,EAAAvL,EAAAC,GASA,MARAwtD,GAAAnuC,KAAA/T,EAAA5C,mBAEA4C,EAAAoJ,WACA84C,EAAAjkD,eAAA+B,EAAAoJ,WAGAs2G,EAAAjrH,QACAirH,EAAAhrH,UACAwtD,EAAA/tB,UAAAurF,GAGA,QAAAC,GAAA3gC,EAAA4gC,GACA,GAAA5gC,GAAA4gC,EAEA,QAGA,KAAA5gC,IAAA4gC,GAAA5gC,EAAAltF,SAAA8tH,EAAA9tH,OACA,QAGA,QAAAD,GAAA,EAAiBA,EAAAmtF,EAAAltF,OAAsBD,IACvC,GAAAmtF,EAAAntF,KAAA+tH,EAAA/tH,GACA,SAKA,QAAAguH,GAAA7gC,EAAA9vD,GACA,OAAAr9B,GAAA,EAAiBA,EAAAmtF,EAAAltF,OAAsBD,IAAA,CACvC,GAAAsjF,GAAA6J,EAAAntF,EACAsjF,GAAAzlD,aAAAR,GACAA,EAAAqB,YACA4kD,EAAA1kD,UAAAvB,EAAAimD,EAAA52E,OACA2wB,EAAA6pD,OAEA5D,EAAAxkD,iBAAAzB,IAIA,QAAA4wF,GAAArrH,EAAAC,GACA,GAAAqrH,GAAA7jH,SAAApI,cAAA,MAGA,OADAisH,GAAA7rH,MAAAmpG,SAAA,+CAAA5oG,EAAA,eAAAC,EAAA,8CAAAkT,KAAA,KAAyK,IACzKm4G,EA7GA,GAAA13F,GAAAl5B,EAAA,MAEAwsB,EAAA0M,EAAA1M,iBAEAwvF,EAAAh8G,EAAA,MAEA0E,EAAA1E,EAAA,MAEAid,EAAAjd,EAAA,MAEA0tB,EAAA1tB,EAAA,MAEA8uH,EAAA9uH,EAAA,MAEA2rF,EAAA3rF,EAAA,MAEAsO,EAAAtO,EAAA,MA6CA+yD,EAAA,GAAA91C,GAAA,SACAszG,EAAA,GAAAtzG,GAAA,SA0DA03E,EAAA,SAAAQ,EAAAxhE,EAAAtmB,GACAvJ,KAAAgB,KAAA,QAEA,IAAA+rH,IAAA17B,EAAA27B,UACA,WAAA37B,EAAA27B,SAAA/mG,aACAjmB,MAAAitH,MAAA1jH,EAAA2uG,EAAAr0G,UAAoC0F,OAKpCvJ,KAAAs3B,IAAA/tB,EAAAmf,oBAMA1oB,KAAAktH,cAAAH,EAMA/sH,KAAAqxF,MACA,IAAA87B,GAAA97B,EAAApwF,KAEAksH,KACAA,EAAA,6CACAA,EAAA,uBAAAA,EAAA,eAAAA,EAAA,gCACA97B,EAAA0a,UAAA,IAOA/rG,KAAA6vB,SAMA,IAAAu9F,GAAAptH,KAAAqtH,eAMAC,EAAAttH,KAAAutH,UAQA,IAFAvtH,KAAAwtH,gBAEAT,EAKG,CACH,MAAAxjH,EAAA/H,QACA6vF,EAAA7vF,MAAA+H,EAAA/H,OAGA,MAAA+H,EAAA9H,SACA4vF,EAAA5vF,OAAA8H,EAAA9H,OAIA,IAAAD,GAAA6vF,EAAA7vF,MACAC,EAAA4vF,EAAA5vF,MACAzB,MAAAytH,OAAAjsH,EACAxB,KAAA0tH,QAAAjsH,CAGA,IAAAksH,GAAA,GAAA3C,GAAA35B,EAAArxF,KAAA,EACA2tH,GAAArC,cAGAgC,EAAA,GAAAK,EACAP,EAAA/nH,KAAA,GACArF,KAAA4tH,SAAAv8B,MA3BA,CACArxF,KAAAytH,OAAAztH,KAAA6tH,SAAA,GACA7tH,KAAA0tH,QAAA1tH,KAAA6tH,SAAA,EACA,IAAAf,GAAA9sH,KAAA4tH,SAAAf,EAAA7sH,KAAAytH,OAAAztH,KAAA0tH,QACAr8B,GAAAyZ,YAAAgiB,GA2BA9sH,KAAA8tH,sBAMA9tH,KAAA+tH,YACA/tH,KAAAguH,kBAGAn9B,GAAA1zF,WACAG,YAAAuzF,EACAz4D,QAAA,WACA,gBAOAsB,eAAA,WACA,MAAA15B,MAAAktH,eAMA97B,gBAAA,WACA,MAAApxF,MAAA4tH,UAEArhB,sBAAA,WACA,GAAA0hB,GAAAjuH,KAAAoxF,iBAEA,IAAA68B,EACA,OACAzhB,WAAAyhB,EAAAzhB,YAAA,EACAC,UAAAwhB,EAAAxhB,WAAA,IASA9tE,QAAA,SAAAuvF,GACA,GAAAvnG,GAAA3mB,KAAA6vB,QAAA+H,gBAAA,GACAw1F,EAAAptH,KAAAqtH,WAEArtH,MAAAmuH,WAAAxnG,EAAAunG,EAGA,QAAAtvH,GAAA,EAAmBA,EAAAwuH,EAAAvuH,OAAuBD,IAAA,CAC1C,GAAA0xB,GAAA88F,EAAAxuH,GACAyrH,EAAArqH,KAAAutH,QAAAj9F,IAEA+5F,EAAA+B,aAAA/B,EAAA1rF,SACA0rF,EAAA1rF,UAUA,MANA3+B,MAAAgyF,eAEAhyF,KAAA8tH,mBAAAjvH,QACAmB,KAAAouH,mBAGApuH,MAEA2N,SAAA,SAAAZ,EAAAI,GACA,IAAAJ,EAAAshH,WAAA,CAIA,GAAAC,GAAA,GAAAvhH,GAAAzP,aACA2D,MAAA8L,EAAA9L,MACAqK,MAAAyB,EAAAzB,OAEAgjH,GAAAC,OAAAxhH,EACAA,EAAAshH,WAAAC,EACAA,EAAAxjH,SAAAqC,GAEAnN,KAAAguH,eAAA3oH,KAAAipH,KAEA//G,YAAA,SAAAxB,GACA,GAAAuhH,GAAAvhH,EAAAshH,WACAG,EAAAxuH,KAAAguH,eACAztG,EAAA23F,EAAA/zG,QAAAqqH,EAAAF,EAEA/tG,IAAA,GACAiuG,EAAArnG,OAAA5G,EAAA,GAGAxT,EAAAshH,WAAA,MAEAp8B,WAAA,SAAAllF,GAGA,OAFAyhH,GAAAxuH,KAAAguH,eAEApvH,EAAA,EAAmBA,EAAA4vH,EAAA3vH,OAA0BD,IAAA,CAC7C,GAAAmE,GAAAyrH,EAAA5vH,GAAA2vH,MAEAxrH,KACAA,EAAAsrH,WAAA,MAIAG,EAAA3vH,OAAA,GAEAmzF,aAAA,WACA,GAAAw8B,GAAAxuH,KAAAguH,eACAprH,EAAA4rH,EAAA3vH,OACA4vH,EAAAzuH,KAAA+tH,WAGA,IAFAU,KAAAvzF,QAEAt4B,EAAA,CAIAgnB,EAAA4kG,EAAAxuH,KAAA6vB,QAAA6+F,qBAGAD,IACAA,EAAAzuH,KAAA+tH,YAAA/tH,KAAA2uH,SAAA,KAGA,IAAAr1D,KACAm1D,GAAAxyF,IAAA6vF,MAEA,QAAAltH,GAAA,EAAmBA,EAAAgE,GAAS,CAC5B,GAAAmK,GAAAyhH,EAAA5vH,GACAgwH,EAAA7hH,EAAAwhH,MAGAK,MAAAlhH,MAOA9O,IAGAgwH,EAAAz/D,YACApiD,EAAAoJ,UAAAy4G,EAAAz4G,UACApJ,EAAAkjF,aAAA2+B,EAAA3+B,aACAljF,EAAAo2D,YAAAyrD,EAAAzrD,YAEAnjE,KAAA6uH,WAAA9hH,EAAA0hH,GAAA,EAAAn1D,MAdAk1D,EAAArnG,OAAAvoB,EAAA,GACAgwH,EAAAP,WAAA,KACAzrH,KAgBA6rH,EAAAxyF,IAAA+vF,YAEAoC,iBAAA,WAaA,QAAApjF,KAEAqH,IAAAx1C,EAAAiyH,mBAAAjyH,EAAAgzB,UACAhzB,EAAAkyH,aAAAlyH,EAAAgzB,QAAA+H,kBAEA/6B,EAAAmyH,qBACAnyH,EAAAoyH,YACApnC,EAAA78C,IAEAnuC,EAAAiyH,mBAAA,GArBA,GAAAjyH,GAAAmD,IAEA,IAAAnD,EAAAmyH,oBAAA,CAMA,GAAA38E,GAAAx1C,EAAAiyH,mBAAA,GAAAjpG,KACAhpB,GAAAoyH,YACApnC,EAAA78C,KAgBAkkF,kBAAA,WACAlvH,KAAA8uH,mBAAA,EACA9uH,KAAAivH,UAAA,EACA/W,EAAApzG,KAAA9E,KAAA8tH,mBAAA,SAAAzD,GACAA,EAAA3tF,SAAA2tF,EAAAnvF,WAGAizF,WAAA,SAAAxnG,EAAAunG,GACA,MAAAA,IACAA,GAAA,GAGAluH,KAAAmvH,mBAAAxoG,GAEA3mB,KAAAkvH,oBAEAlvH,KAAAovH,iBAAA/C,GAEArsH,KAAA+uH,aAAApoG,EAAAunG,GAEAluH,KAAAovH,iBAAA7C,IAEAwC,aAAA,SAAApoG,EAAAunG,GAaA,QAAAmB,GAAAhF,GACA,GAAA/yF,GAAA2E,EAAA3E,KAAA,CACA2E,GAAA6vF,OACA7vF,EAAAqvD,YAAA,EACArvD,EAAAkuC,WAAA,EAEAmlD,EAAA5yF,SAAA,EACAT,EAAAQ,aAAA,aACAR,EAAAwuD,UAAA4/B,EAAAviG,IAAA,IAAAtmB,EAAA81B,EAAA71B,EAAA61B,GACA2E,EAAA+vF,UAGA,OAxBAsD,GACAC,EACAtzF,EAEAq9B,EAEAk2D,EAGAC,EAJAC,EAAA,EAEAluH,EAAAxB,KAAAytH,OACAhsH,EAAAzB,KAAA0tH,QAEA7nC,EAAA7lF,KAAAivH,UAcArwH,EAAA,EAAAywC,EAAA1oB,EAAA9nB,OAAoCD,EAAAywC,EAAOzwC,IAAA,CAC3C,GAAAmO,GAAA4Z,EAAA/nB,GACA+wH,EAAA3vH,KAAAktH,cAAA,EAAAngH,EAAAwjB,OACAq/F,EAAA7iH,EAAA8iH,OAkCA,IA/BAD,EAAA,GAAAJ,IACAH,EAAAG,GACAA,EAAA,MAIAD,IAAAI,IACA1zF,GACAA,EAAA+vF,UAIA1yD,KAEAi2D,EAAAI,EACAL,EAAAtvH,KAAA2uH,SAAAY,GAEAD,EAAAlD,aACAxrH,EAAA,UAAA2uH,EAAA,kCAAAD,EAAAh0G,IAGA2gB,EAAAqzF,EAAArzF,IACAA,EAAA6vF,OAEAwD,EAAAhD,cAAA,GAEAgD,EAAA5yF,SAAAwxF,IACAoB,EAAAp0F,SAIAo0F,EAAA5yF,SAAAwxF,EAAA,CAIA,GAAA0B,GAAA,GAEA,IAAAJ,EAAA,CAKA,GAJAA,EAAAxvH,KAAA8tH,mBAAA3hH,KAAAiN,IAAAs2G,IAAAI,IACAN,EAAAvzF,IAAA6vF,OACA0D,EAAAO,eAEAP,KAAAQ,WAAAR,EAAAS,cAAA,CAIArxH,EAAA4wH,EAAAU,iBAAA,CAEA,UAGAT,EAAAD,EAAAQ,WAEAR,EAAA9yF,UAEAmpD,EAAA4pC,GAGAD,EAAAQ,WAAAnqC,EAAA,EAGA+pC,IAAA/pC,GACA7lF,KAAA6uH,WAAA9hH,EAAAyiH,GAAA,EAAAA,EAAAO,iBAGA/vH,MAAA6uH,WAAA9hH,EAAAuiH,EAAApB,EAAA50D,EAGAvsD,GAAA2vB,SAAA,GAGA8yF,GACAH,EAAAG,GAIAvzF,KAAA+vF,UAKAhsH,KAAAgvH,qBAAA,EACA9W,EAAApzG,KAAA9E,KAAA8tH,mBAAA,SAAAzD,GACAA,EAAA4F,eAAA5F,EAAA2F,aACAhwH,KAAAgvH,qBAAA,IAEKhvH,OAEL6uH,WAAA,SAAA9hH,EAAAuiH,EAAAa,EAAA72D,GACA,GAAAr9B,GAAAqzF,EAAArzF,IACA/wB,EAAA6B,EAAAoJ,SAEA,KAAAm5G,EAAA5yF,SAAAyzF,KACApjH,EAAAoiD,WACA,IAAApiD,EAAA9L,MAAAolE,WAGAn7D,KAAA,IAAAA,EAAA,OACA6B,EAAAw2D,UAAAipD,EAAAz/G,EAAA/M,KAAAytH,OAAAztH,KAAA0tH,UAAA,CACA,GAAA3hC,GAAAh/E,EAAAo2D,aAEA7J,EAAA82D,gBAAAd,GAAA5C,EAAA3gC,EAAAzyB,EAAA+2D,oBAEA/2D,EAAA+2D,kBACA/2D,EAAA82D,cAAAn0F,IAAA+vF,UACA1yD,EAAA82D,cAAA92D,EAAA+2D,gBAAA,KAEA/2D,EAAAp9B,OAAA,MAIA6vD,IACA9vD,EAAA6vF,OACAc,EAAA7gC,EAAA9vD,GACAq9B,EAAA82D,cAAAd,EACAh2D,EAAA+2D,gBAAAtkC,IAIAh/E,EAAAwxD,aAAAxxD,EAAAwxD,YAAAtiC,GACAlvB,EAAAivB,MAAAC,EAAAq9B,EAAAp9B,QAAA,MACAo9B,EAAAp9B,OAAAnvB,EACAA,EAAA02D,YAAA12D,EAAA02D,WAAAxnC,KASA0yF,SAAA,SAAAp+F,GACA,GAAAvwB,KAAAktH,cACA,MAAAltH,MAAAutH,QAAA,EAGA,IAAAlD,GAAArqH,KAAAutH,QAAAh9F,EAiBA,OAfA85F,KAEAA,EAAA,GAAAW,GAAA,MAAAz6F,EAAAvwB,UAAAs3B,KACA+yF,EAAA+B,aAAA,EAEApsH,KAAAwtH,aAAAj9F,IACA2nF,EAAA90G,MAAAinH,EAAArqH,KAAAwtH,aAAAj9F,IAAA,GAGAvwB,KAAAswH,YAAA//F,EAAA85F,GAGAA,EAAAiB,eAGAjB,GAEAiG,YAAA,SAAA//F,EAAA85F,GACA,GAAAkG,GAAAvwH,KAAAutH,QACAH,EAAAptH,KAAAqtH,YACAzqH,EAAAwqH,EAAAvuH,OACA2xH,EAAA,KACA5xH,GAAA,EACAkuH,EAAA9sH,KAAA4tH,QAEA,IAAA2C,EAAAhgG,GAEA,WADA3vB,GAAA,UAAA2vB,EAAA,yBAKA,KAAA47F,EAAA9B,GAEA,WADAzpH,GAAA,mBAAA2vB,EAAA,gBAIA,IAAA3tB,EAAA,GAAA2tB,EAAA68F,EAAA,IACA,IAAAxuH,EAAA,EAAiBA,EAAAgE,EAAA,KACjBwqH,EAAAxuH,GAAA2xB,GAAA68F,EAAAxuH,EAAA,GAAA2xB,GAD8B3xB,KAM9B4xH,EAAAD,EAAAnD,EAAAxuH,IAQA,GALAwuH,EAAAjmG,OAAAvoB,EAAA,IAAA2xB,GACAggG,EAAAhgG,GAAA85F,GAIAA,EAAAoG,QACA,GAAAD,EAAA,CACA,GAAAE,GAAAF,EAAA1oG,GAEA4oG,GAAAhiE,YACAo+D,EAAA6D,aAAAtG,EAAAviG,IAAA4oG,EAAAhiE,aAEAo+D,EAAAhiB,YAAAuf,EAAAviG,SAGAglG,GAAA8D,WACA9D,EAAA6D,aAAAtG,EAAAviG,IAAAglG,EAAA8D,YAEA9D,EAAAhiB,YAAAuf,EAAAviG,MAMA+oG,UAAA,SAAA9rH,EAAAC,GACA,GACAsrB,GACA1xB,EAFAwuH,EAAAptH,KAAAqtH,WAIA,KAAAzuH,EAAA,EAAeA,EAAAwuH,EAAAvuH,OAAuBD,IACtC0xB,EAAA88F,EAAAxuH,GACAmG,EAAAjI,KAAAkI,EAAAhF,KAAAutH,QAAAj9F,OAIA8+F,iBAAA,SAAArqH,EAAAC,GACA,GACAqlH,GACA/5F,EACA1xB,EAHAwuH,EAAAptH,KAAAqtH,WAKA,KAAAzuH,EAAA,EAAeA,EAAAwuH,EAAAvuH,OAAuBD,IACtC0xB,EAAA88F,EAAAxuH,GACAyrH,EAAArqH,KAAAutH,QAAAj9F,GAEA+5F,EAAA+B,aACArnH,EAAAjI,KAAAkI,EAAAqlH,EAAA/5F,IAKA85F,eAAA,SAAArlH,EAAAC,GACA,GACAqlH,GACA/5F,EACA1xB,EAHAwuH,EAAAptH,KAAAqtH,WAKA,KAAAzuH,EAAA,EAAeA,EAAAwuH,EAAAvuH,OAAuBD,IACtC0xB,EAAA88F,EAAAxuH,GACAyrH,EAAArqH,KAAAutH,QAAAj9F,GAEA+5F,EAAA+B,aACArnH,EAAAjI,KAAAkI,EAAAqlH,EAAA/5F,IASAwgG,UAAA,WACA,MAAA9wH,MAAAutH,SAEA4B,mBAAA,SAAAxoG,GACA,GAAA2mG,GAAAttH,KAAAutH,QACAwD,EAAA/wH,KAAA8tH,mBACAkD,KACAC,IACAjxH,MAAAovH,iBAAA,SAAA/E,EAAA/5F,GACA0gG,EAAA1gG,GAAA+5F,EAAAv6F,QACAu6F,EAAAv6F,QAAA,EACAu6F,EAAA3tF,SAAA,IAEAw7E,EAAApzG,KAAAisH,EAAA,SAAA1G,EAAA9pG,GACA0wG,EAAA1wG,GAAA8pG,EAAAv6F,QACAu6F,EAAAv6F,QAAA,EACAu6F,EAAA3tF,SAAA,GAOA,QAJA8yF,GACA0B,EAFAC,EAAA,EAGAC,EAAA,EAEAxyH,EAAA,EAAAywC,EAAA1oB,EAAA9nB,OAAoCD,EAAAywC,EAAOzwC,IAAA,CAC3C,GAAAmO,GAAA4Z,EAAA/nB,GACA2xB,EAAAvwB,KAAAktH,cAAA,EAAAngH,EAAAwjB,OACA85F,EAAAiD,EAAA/8F,GACA8gG,EAAAtkH,EAAAqjB,WAQA,IANAi6F,IACAA,EAAAv6F,UACAu6F,EAAA3tF,QAAA2tF,EAAA3tF,SAAA3vB,EAAA2vB,SAIA20F,GAAA,GAEAH,IAAAG,IACAH,EAAAG,EACAD,IAGA,IAAAxB,GAAA7iH,EAAA8iH,QAAAuB,EAAA,CAEA,KAAA5B,EAAA,CACA,GAAAjvG,GAAApU,KAAAiN,IAAA+3G,EAAArB,EACAN,GAAAuB,EAAAxwG,GAEAivG,IACAA,EAAAuB,EAAAxwG,GAAA,GAAAyqG,GAAA,cAAAhrH,UAAAs3B,KACAk4F,EAAAlE,eAGAkE,EAAAS,cAAA,EAGAT,EAAA9yF,QAAA8yF,EAAA9yF,SAAA3vB,EAAA2vB,QACA8yF,EAAA1/F,UACA0/F,EAAAS,cAAA9jH,KAAAC,IAAAojH,EAAAS,cAAAL,GAEAJ,EAAAS,eAAAT,EAAAQ,aAEA3F,EAAA3tF,SAAA,OAGA3vB,GAAA8iH,SAAA,EAEAL,IACAA,EAAAU,iBAAAtxH,EACAuyH,IACA3B,EAAA,MAKAA,IACA2B,IACA3B,EAAAU,iBAAAtxH,GAIAoB,KAAAovH,iBAAA,SAAA/E,EAAA/5F,GACA0gG,EAAA1gG,KAAA+5F,EAAAv6F,UACAu6F,EAAA3tF,SAAA,KAGAq0F,EAAAlyH,OAAAsN,KAAAiN,IAAA+3G,EAhvBA,GAivBAjZ,EAAApzG,KAAAisH,EAAA,SAAA1G,EAAA9pG,GACA0wG,EAAA1wG,KAAA8pG,EAAAv6F,UACA/iB,EAAA2vB,SAAA,GAGA2tF,EAAA3tF,UACA2tF,EAAA2F,WAAA,MAQA90F,MAAA,WAEA,MADAl7B,MAAAovH,iBAAApvH,KAAAsxH,aACAtxH,MAEAsxH,YAAA,SAAAjH,GACAA,EAAAnvF,SAaAvB,YAAA,SAAApJ,EAAAshE,GACA,GAAAA,EAAA,CACA,GAAA0/B,GAAAvxH,KAAAwtH,YAEA+D,GAAAhhG,GAGA2nF,EAAA90G,MAAAmuH,EAAAhhG,GAAAshE,GAAA,GAFA0/B,EAAAhhG,GAAAshE,CAKA,IAAAw4B,GAAArqH,KAAAutH,QAAAh9F,EAEA85F,IACAnS,EAAA90G,MAAAinH,EAAAkH,EAAAhhG,IAAA,KASAihG,SAAA,SAAAjhG,GACA,GAAA+8F,GAAAttH,KAAAutH,QACAH,EAAAptH,KAAAqtH,YACAhD,EAAAiD,EAAA/8F,EAEA85F,KAIAA,EAAAviG,IAAAmiG,WAAAwH,YAAApH,EAAAviG,WACAwlG,GAAA/8F,GACA68F,EAAAjmG,OAAA+wF,EAAA/zG,QAAAipH,EAAA78F,GAAA,KAMA7G,OAAA,SAAAloB,EAAAC,GACA,GAAAqrH,GAAA9sH,KAAA4tH,QAEAd,GAAA7rH,MAAAM,QAAA,MAEA,IAAAgI,GAAAvJ,KAAAitH,KAOA,IANA,MAAAzrH,IAAA+H,EAAA/H,SACA,MAAAC,IAAA8H,EAAA9H,UACAD,EAAAxB,KAAA6tH,SAAA,GACApsH,EAAAzB,KAAA6tH,SAAA,GACAf,EAAA7rH,MAAAM,QAAA,GAEAvB,KAAAytH,QAAAjsH,GAAAC,GAAAzB,KAAA0tH,QAAA,CACAZ,EAAA7rH,MAAAO,QAAA,KACAsrH,EAAA7rH,MAAAQ,SAAA,IAEA,QAAA6Z,KAAAtb,MAAAutH,QACAvtH,KAAAutH,QAAApqH,eAAAmY,IACAtb,KAAAutH,QAAAjyG,GAAAoO,OAAAloB,EAAAC,EAIAy2G,GAAApzG,KAAA9E,KAAA8tH,mBAAA,SAAAzD,GACAA,EAAA3gG,OAAAloB,EAAAC,KAEAzB,KAAA2+B,SAAA,GAKA,MAFA3+B,MAAAytH,OAAAjsH,EACAxB,KAAA0tH,QAAAjsH,EACAzB,MAOA0xH,WAAA,SAAAnhG,GACA,GAAA85F,GAAArqH,KAAAutH,QAAAh9F,EAEA85F,IACAA,EAAAnvF,SAOAxM,QAAA,WACA1uB,KAAAqxF,KAAA0a,UAAA,GACA/rG,KAAAqxF,KAAArxF,KAAA6vB,QAAA7vB,KAAA4tH,SAAA5tH,KAAAutH,QAAA,MASA/1F,kBAAA,SAAAjuB,GAgBA,QAAAooH,GAAAC,EAAAC,GACA,GAAAzE,GAAAvwH,EAAAwwH,WAEA,OAAAuE,IACAA,GAAA3qG,IAKA,QAFA6qG,GAEAlzH,EAAA,EAAqBA,EAAAwuH,EAAAvuH,OAAuBD,IAAA,CAC5C,GAAA0xB,GAAA88F,EAAAxuH,GACAyrH,EAAAxtH,EAAA0wH,QAAAj9F,EAEA,KAAA+5F,EAAA+B,aAAA97F,EAAAshG,GAAAthG,EAAAuhG,EAAA,CACAC,EAAAzH,CACA,QAIAyH,KAAAC,iBACAC,EAAA/1F,IAAA6vF,OACAgG,EAAAC,eAAAC,EAAA/1F,KACA+1F,EAAA/1F,IAAA+vF,WAnCA,GAFAziH,QAEAvJ,KAAAktH,cACA,MAAAltH,MAAAutH,QAAA,GAAAzlG,GAGA,IAAAkqG,GAAA,GAAAhH,GAAA,QAAAhrH,KAAAuJ,EAAAmuB,YAAA13B,KAAAs3B,IACA06F,GAAA1G,cACA0G,EAAAp4F,WAAArwB,EAAAouB,gBACAq6F,EAAA92F,OAgCA,QA7BA3K,GAFA0hG,EAAAjyH,KAAA6vB,QAAA+H,gBAAA,GACA0hC,KAEAz8D,EAAAmD,KA4BApB,EAAA,EAAmBA,EAAAqzH,EAAApzH,OAAwBD,IAAA,CAC3C,GAAAmO,GAAAklH,EAAArzH,EAEAmO,GAAAwjB,aACAohG,EAAAphG,EAAAxjB,EAAAwjB,QACAA,EAAAxjB,EAAAwjB,QAGAvwB,KAAA6uH,WAAA9hH,EAAAilH,GAAA,EAAA14D,GAIA,MADAq4D,GAAAphG,EAAAtJ,KACA+qG,EAAAlqG,KAMAoP,SAAA,WACA,MAAAl3B,MAAAytH,QAMAt2F,UAAA,WACA,MAAAn3B,MAAA0tH,SAEAG,SAAA,SAAAqE,GACA,GAAA3oH,GAAAvJ,KAAAitH,MACArhD,GAAA,kBAAAsmD,GACAC,GAAA,8BAAAD,GACAE,GAAA,4BAAAF,GACAG,GAAA,gCAAAH,EAEA,UAAA3oH,EAAAqiE,IAAA,SAAAriE,EAAAqiE,GACA,MAAAxoD,YAAA7Z,EAAAqiE,GAGA,IAAAylB,GAAArxF,KAAAqxF,KAEAqa,EAAAziG,SAAA2iG,YAAAC,iBAAAxa,EACA,QAAAA,EAAA8gC,IAAAjG,EAAAxgB,EAAA9/B,KAAAsgD,EAAA76B,EAAApwF,MAAA2qE,MAAAsgD,EAAAxgB,EAAA0mB,KAAA,IAAAlG,EAAAxgB,EAAA2mB,KAAA,MAEAlgC,YAAA,SAAAnoF,EAAAstB,GACAA,KAAAt3B,KAAAs3B,GACA,IAAAsB,GAAA3vB,SAAApI,cAAA,UACAo7B,EAAArD,EAAA50B,WAAA,MACA8F,EAAAE,EAAAG,kBACAlJ,EAAA+I,EAAA/I,MACAqxH,EAAArxH,EAAAkpE,WACAE,EAAAppE,EAAAopE,cACAC,EAAArpE,EAAAqpE,cACA/+D,EAAAtK,EAAAk7B,YAAAl7B,EAAAsK,UAAA,EACAgnH,EAAApmH,KAAAC,IAAAb,EAAA,GAAA8+D,EAAAioD,GACAE,EAAArmH,KAAAC,IAAAb,EAAA,EAAA8+D,EAAAioD,GACAG,EAAAtmH,KAAAC,IAAAb,EAAA,GAAA++D,EAAAgoD,GACAI,EAAAvmH,KAAAC,IAAAb,EAAA,EAAA++D,EAAAgoD,GACA9wH,EAAAsI,EAAAtI,MAAA+wH,EAAAC,EACA/wH,EAAAqI,EAAArI,OAAAgxH,EAAAC,CACA95F,GAAAp3B,QAAA81B,EACAsB,EAAAn3B,SAAA61B,EACA2E,EAAAta,MAAA2V,KACA2E,EAAA0vF,UAAA,IAAAnqH,EAAAC,GACAw6B,EAAA3E,KACA,IAAAq7F,IACAtmH,SAAArC,EAAAqC,SACA4K,SAAAjN,EAAAiN,SACA0K,MAAA3X,EAAA2X,MAEA3X,GAAAqC,UAAAkmH,EAAAzoH,EAAAY,EAAA+nH,EAAA3oH,EAAAa,GACAX,EAAAiN,SAAA,EACAjN,EAAA2X,OAAA,KACA3X,EAAA4lE,kBAEA5lE,GACAA,EAAAgyB,MAAAC,EAGA,IAAA22F,GAAApoH,EACAqoH,EAAA,GAAAD,IACA3xH,OACAyJ,EAAA,EACAC,EAAA,EACAF,MAAAmuB,IAgBA,OAZA,OAAA+5F,EAAAtmH,WACAwmH,EAAAxmH,SAAArC,EAAAqC,SAAAsmH,EAAAtmH,UAGA,MAAAsmH,EAAA17G,WACA47G,EAAA57G,SAAAjN,EAAAiN,SAAA07G,EAAA17G,UAGA,MAAA07G,EAAAhxG,QACAkxG,EAAAlxG,MAAA3X,EAAA2X,MAAAgxG,EAAAhxG,OAGAkxG,GAGA,IAAAxzF,GAAAwxD,CACA70F,GAAAC,QAAAojC,GxI+j8BMyzF,KACA,SAAU92H,EAAQC,EAASC,GyIjl+BjC,QAAA62H,GAAA/xG,EAAAC,GACA,MAAAD,GAAAuP,SAAAtP,EAAAsP,OACAvP,EAAAsP,IAAArP,EAAAqP,EAOAtP,EAAA5S,GAAA6S,EAAA7S,GAGA4S,EAAAsP,EAAArP,EAAAqP,EAGAtP,EAAAuP,OAAAtP,EAAAsP,OAhCA,GAAA2nF,GAAAh8G,EAAA,MAEA6zB,EAAA7zB,EAAA,MAEAmc,EAAAnc,EAAA,MAEA0tB,EAAA1tB,EAAA,MAmCA00F,EAAA,WAEA5wF,KAAAgzH,UACAhzH,KAAAizH,gBACAjzH,KAAAkzH,gBAAA,EAGAtiC,GAAAzzF,WACAG,YAAAszF,EAMAniF,SAAA,SAAA1J,EAAAC,GACA,OAAApG,GAAA,EAAmBA,EAAAoB,KAAAgzH,OAAAn0H,OAAwBD,IAC3CoB,KAAAgzH,OAAAp0H,GAAA6P,SAAA1J,EAAAC,IAYA4yB,eAAA,SAAAnM,EAAA0nG,GAOA,MANAA,OAAA,EAEA1nG,GACAzrB,KAAAozH,kBAAAD,GAGAnzH,KAAAizH,cASAG,kBAAA,SAAAD,GACAnzH,KAAAkzH,gBAAA,CAIA,QAHA3+E,GAAAv0C,KAAAgzH,OACAf,EAAAjyH,KAAAizH,aAEAr0H,EAAA,EAAAgE,EAAA2xC,EAAA11C,OAAuCD,EAAAgE,EAAShE,IAChDoB,KAAAqzH,yBAAA9+E,EAAA31C,GAAA,KAAAu0H,EAGAlB,GAAApzH,OAAAmB,KAAAkzH,gBAKAnjG,EAAA0H,iBAAA7N,EAAAqoG,EAAAc,IAEAM,yBAAA,SAAAtmH,EAAAg/E,EAAAonC,GACA,IAAApmH,EAAAkjB,QAAAkjG,EAAA,CAIApmH,EAAAo1E,eAEAp1E,EAAA2vB,SACA3vB,EAAA0e,SAGA1e,EAAAq1E,aACA,IAAAkxC,GAAAvmH,EAAAm1E,QAEA,IAAAoxC,EAAA,CAGAvnC,EADAA,EACAA,EAAAhlF,UAQA,KAHA,GAAAwsH,GAAAD,EACAE,EAAAzmH,EAEAwmH,GAEAA,EAAAr9G,OAAAs9G,EACAD,EAAA3jD,kBACAmc,EAAA1mF,KAAAkuH,GACAC,EAAAD,EACAA,IAAArxC,SAIA,GAAAn1E,EAAAsK,QAAA,CAGA,OAFAg3C,GAAAthD,EAAAohD,UAEAvvD,EAAA,EAAqBA,EAAAyvD,EAAAxvD,OAAqBD,IAAA,CAC1C,GAAA8P,GAAA2/C,EAAAzvD,EAGAmO,GAAA2vB,UACAhuB,EAAAguB,SAAA,GAGA18B,KAAAqzH,yBAAA3kH,EAAAq9E,EAAAonC,GAIApmH,EAAA2vB,SAAA,MAEA3vB,GAAAo2D,YAAA4oB,EACA/rF,KAAAizH,aAAAjzH,KAAAkzH,mBAAAnmH,IAQA2kF,QAAA,SAAA3kF,GACAA,EAAAqhD,YAAApuD,OAIA+M,YAAAsL,IACAtL,EAAA6hD,qBAAA5uD,MAGAA,KAAA2uD,aAAA5hD,GAEA/M,KAAAgzH,OAAA3tH,KAAA0H,KAOA4kF,QAAA,SAAA5kF,GACA,SAAAA,EAAA,CAEA,OAAAnO,GAAA,EAAqBA,EAAAoB,KAAAgzH,OAAAn0H,OAAwBD,IAAA,CAC7C,GAAAyyF,GAAArxF,KAAAgzH,OAAAp0H,EAEAyyF,aAAAh5E,IACAg5E,EAAAviC,uBAAA9uD,MAOA,MAHAA,MAAAgzH,UACAhzH,KAAAizH,qBACAjzH,KAAAkzH,gBAAA,GAIA,GAAAnmH,YAAA/D,OACA,OAAApK,GAAA,EAAAywC,EAAAtiC,EAAAlO,OAAoCD,EAAAywC,EAAOzwC,IAC3CoB,KAAA2xF,QAAA5kF,EAAAnO,QAFA,CAQA,GAAA2hB,GAAA23F,EAAA/zG,QAAAnE,KAAAgzH,OAAAjmH,EAEAwT,IAAA,IACAvgB,KAAA6uD,eAAA9hD,GAEA/M,KAAAgzH,OAAA7rG,OAAA5G,EAAA,GAEAxT,YAAAsL,IACAtL,EAAA+hD,uBAAA9uD,SAIA2uD,aAAA,SAAA5hD,GAGA,MAFAA,GAAAqhD,UAAApuD,KACA+M,EAAAoB,OAAA,GACAnO,MAEA6uD,eAAA,SAAA9hD,GAKA,MAJAA,KACAA,EAAAqhD,UAAA,MAGApuD,MAMA0uB,QAAA,WACA1uB,KAAAyzH,YAAAzzH,KAAAgzH,OAAA,MAEAtE,oBAAAqE,EAEA,IAAA1zF,GAAAuxD,CACA50F,GAAAC,QAAAojC,GzIwm+BMq0F,KACA,SAAU13H,EAAQC,EAASC,G0Ix1+BjC,GAAAg8G,GAAAh8G,EAAA,MAEAy3H,EAAAz3H,EAAA,MAEAg/C,EAAAy4E,EAAAz4E,WAEA2sC,EAAA3rF,EAAA,MAEAkqF,EAAAlqF,EAAA,MAwCA40F,EAAA,SAAA/qD,GACAA,QACA/lC,KAAAsxF,MAAAvrD,EAAAurD,UAEAtxF,KAAA4lF,QAAA7/C,EAAA6/C,SAAA,aAGA5lF,KAAA4zH,UACA5zH,KAAA6zH,UAAA,EACA7zH,KAAA8zH,MACA9zH,KAAA+zH,YACA/zH,KAAAg0H,YACAh0H,KAAA8mF,SAAA,EACA5rC,EAAAp+C,KAAAkD,MAGA8wF,GAAA3zF,WACAG,YAAAwzF,EAMAzJ,QAAA,SAAAvB,GACA9lF,KAAA4zH,OAAAvuH,KAAAygF,IAOAnD,YAAA,SAAA0B,GACAA,EAAAt6D,UAAA/pB,IAGA,QAFAi0H,GAAA5vC,EAAAsD,WAEA/oF,EAAA,EAAmBA,EAAAq1H,EAAAp1H,OAAkBD,IACrCoB,KAAAqnF,QAAA4sC,EAAAr1H,KAQA6oF,WAAA,SAAA3B,GACA,GAAAvlE,GAAA23F,EAAA/zG,QAAAnE,KAAA4zH,OAAA9tC,EAEAvlE,IAAA,GACAvgB,KAAA4zH,OAAAzsG,OAAA5G,EAAA,IAQAqiE,eAAA,SAAAyB,GAGA,OAFA4vC,GAAA5vC,EAAAsD,WAEA/oF,EAAA,EAAmBA,EAAAq1H,EAAAp1H,OAAkBD,IACrCoB,KAAAynF,WAAAwsC,EAAAr1H,GAGAylF,GAAAt6D,UAAA,MAEAmtF,QAAA,WASA,OARAj8B,IAAA,GAAAp1D,OAAAg5C,UAAA7+D,KAAA+zH,YAEA51E,EAAA88B,EAAAj7E,KAAA8zH,MACAG,EAAAj0H,KAAA4zH,OACAhxH,EAAAqxH,EAAAp1H,OACAq1H,KACAC,KAEAv1H,EAAA,EAAmBA,EAAAgE,EAAShE,IAAA,CAC5B,GAAAknF,GAAAmuC,EAAAr1H,GACAmQ,EAAA+2E,EAAA96C,KAAAiwC,EAAA98B,EAGApvC,KACAmlH,EAAA7uH,KAAA0J,GACAolH,EAAA9uH,KAAAygF,IAKA,OAAAlnF,GAAA,EAAmBA,EAAAgE,GACnBqxH,EAAAr1H,GAAAw1H,cACAH,EAAAr1H,GAAAq1H,EAAArxH,EAAA,GACAqxH,EAAAroG,MACAhpB,KAEAhE,GAIAgE,GAAAsxH,EAAAr1H,MAEA,QAAAD,GAAA,EAAmBA,EAAAgE,EAAShE,IAC5Bu1H,EAAAv1H,GAAAy1H,KAAAH,EAAAt1H,GAGAoB,MAAA8zH,MAAA74C,EACAj7E,KAAA4lF,QAAAznC,GACAn+C,KAAA4sB,QAAA,QAAAuxB,GAEAn+C,KAAAsxF,MAAA7lE,QACAzrB,KAAAsxF,MAAA7lE,UAGA6oG,WAAA,WAIA,QAAAtpF,KACAnuC,EAAAg3H,WACAhsC,EAAA78C,IACAnuC,EAAAiqF,SAAAjqF,EAAAq6G,WANA,GAAAr6G,GAAAmD,IACAA,MAAA6zH,UAAA,EASAhsC,EAAA78C,IAMA2iB,MAAA,WACA3tD,KAAA8zH,OAAA,GAAAjuG,OAAAg5C,UACA7+D,KAAA+zH,YAAA,EAEA/zH,KAAAs0H,cAMAn5E,KAAA,WACAn7C,KAAA6zH,UAAA,GAMAhtC,MAAA,WACA7mF,KAAA8mF,UACA9mF,KAAAg0H,aAAA,GAAAnuG,OAAAg5C,UACA7+D,KAAA8mF,SAAA,IAOAC,OAAA,WACA/mF,KAAA8mF,UACA9mF,KAAA+zH,cAAA,GAAAluG,OAAAg5C,UAAA7+D,KAAAg0H,YACAh0H,KAAA8mF,SAAA,IAOA5rD,MAAA,WACAl7B,KAAA4zH,WAeA70F,QAAA,SAAArgC,EAAAqnC,GACAA,OACA,IAAAs+C,GAAA,GAAA+B,GAAA1nF,EAAAqnC,EAAAjH,KAAAiH,EAAA0+C,OAAA1+C,EAAA4+C,OAEA,OADA3kF,MAAA2iF,YAAA0B,GACAA,IAGA6zB,EAAAvzG,MAAAmsF,EAAA51C,EACA,IAAA7b,GAAAyxD,CACA90F,GAAAC,QAAAojC,G1I81+BMk1F,KACA,SAAUv4H,EAAQC,EAASC,G2I5j/BjC,QAAA6pF,GAAAhgD,GACA/lC,KAAAylF,QAAA1/C,EAAArnC,OAEAsB,KAAAw0H,MAAAzuF,EAAAigD,MAAA,IAEAhmF,KAAAkmF,OAAAngD,EAAA24B,OAAA,EAGA1+D,KAAAy0H,cAAA,EAEAz0H,KAAA8+B,KAAA,MAAAiH,EAAAjH,MAAAiH,EAAAjH,KACA9+B,KAAA+rC,IAAAhG,EAAAgG,KAAA,EACA/rC,KAAAskF,OAAAv+C,EAAAu+C,QAAA,SACAtkF,KAAA4lF,QAAA7/C,EAAA6/C,QACA5lF,KAAAmmF,UAAApgD,EAAAogD,UACAnmF,KAAA00H,UAAA3uF,EAAA2uF,UACA10H,KAAA+zH,YAAA,EACA/zH,KAAA8mF,SAAA,EAjCA,GAAA6tC,GAAAz4H,EAAA,KAoCA6pF,GAAA5oF,WACAG,YAAAyoF,EACA/6C,KAAA,SAAA4pF,EAAAC,GAQA,GALA70H,KAAAy0H,eACAz0H,KAAA80H,WAAAF,EAAA50H,KAAAkmF,OACAlmF,KAAAy0H,cAAA,GAGAz0H,KAAA8mF,QAEA,YADA9mF,KAAA+zH,aAAAc,EAIA,IAAA3xG,IAAA0xG,EAAA50H,KAAA80H,WAAA90H,KAAA+zH,aAAA/zH,KAAAw0H,KAEA,MAAAtxG,EAAA,IAIAA,EAAA/W,KAAAiN,IAAA8J,EAAA,EACA,IAAAohE,GAAAtkF,KAAAskF,OACAywC,EAAA,gBAAAzwC,GAAAqwC,EAAArwC,KACA0wC,EAAA,mBAAAD,KAAA7xG,IAGA,OAFAljB,MAAAq0H,KAAA,QAAAW,GAEA,GAAA9xG,EACAljB,KAAA8+B,MACA9+B,KAAAi1H,QAAAL,GAGA,YAKA50H,KAAAo0H,cAAA,EACA,WAGA,OAEAa,QAAA,SAAAL,GACA,GAAAxvG,IAAAwvG,EAAA50H,KAAA80H,WAAA90H,KAAA+zH,aAAA/zH,KAAAw0H,KACAx0H,MAAA80H,WAAAF,EAAAxvG,EAAAplB,KAAA+rC,IACA/rC,KAAA+zH,YAAA,EACA/zH,KAAAo0H,cAAA,GAEAC,KAAA,SAAAjjG,EAAA8jG,GACA9jG,EAAA,KAAAA,EAEApxB,KAAAoxB,IACApxB,KAAAoxB,GAAApxB,KAAAylF,QAAAyvC,IAGAruC,MAAA,WACA7mF,KAAA8mF,SAAA,GAEAC,OAAA,WACA/mF,KAAA8mF,SAAA,GAGA,IAAAznD,GAAA0mD,CACA/pF,GAAAC,QAAAojC,G3Ikl/BM81F,KACA,SAAUn5H,EAAQC,G4Ilr/BxB,GAAAqoF,IAKA8wC,OAAA,SAAArxF,GACA,MAAAA,IAOAsxF,YAAA,SAAAtxF,GACA,MAAAA,MAOAuxF,aAAA,SAAAvxF,GACA,MAAAA,IAAA,EAAAA,IAOAwxF,eAAA,SAAAxxF,GACA,OAAAA,GAAA,KACA,GAAAA,KAGA,MAAAA,KAAA,OAQAyxF,QAAA,SAAAzxF,GACA,MAAAA,QAOA0xF,SAAA,SAAA1xF,GACA,QAAAA,MAAA,GAOA2xF,WAAA,SAAA3xF,GACA,OAAAA,GAAA,KACA,GAAAA,MAGA,KAAAA,GAAA,GAAAA,IAAA,IAQA4xF,UAAA,SAAA5xF,GACA,MAAAA,UAOA6xF,WAAA,SAAA7xF,GACA,YAAAA,SAOA8xF,aAAA,SAAA9xF,GACA,OAAAA,GAAA,KACA,GAAAA,SAGA,KAAAA,GAAA,GAAAA,MAAA,IAQA+xF,UAAA,SAAA/xF,GACA,MAAAA,YAOAgyF,WAAA,SAAAhyF,GACA,QAAAA,UAAA,GAOAiyF,aAAA,SAAAjyF,GACA,OAAAA,GAAA,KACA,GAAAA,UAGA,KAAAA,GAAA,GAAAA,QAAA,IAQAkyF,aAAA,SAAAlyF,GACA,SAAA53B,KAAA++B,IAAAnH,EAAA53B,KAAAyF,GAAA,IAOAskH,cAAA,SAAAnyF,GACA,MAAA53B,MAAAg/B,IAAApH,EAAA53B,KAAAyF,GAAA,IAOAukH,gBAAA,SAAApyF,GACA,YAAA53B,KAAA++B,IAAA/+B,KAAAyF,GAAAmyB,KAQAqyF,cAAA,SAAAryF,GACA,WAAAA,EAAA,EAAA53B,KAAA2Y,IAAA,KAAAif,EAAA,IAOAsyF,eAAA,SAAAtyF,GACA,WAAAA,EAAA,IAAA53B,KAAA2Y,IAAA,MAAAif,IAOAuyF,iBAAA,SAAAvyF,GACA,WAAAA,EACA,EAGA,IAAAA,EACA,GAGAA,GAAA,KACA,GAAA53B,KAAA2Y,IAAA,KAAAif,EAAA,GAGA,MAAA53B,KAAA2Y,IAAA,OAAAif,EAAA,MAQAwyF,WAAA,SAAAxyF,GACA,SAAA53B,KAAAoV,KAAA,EAAAwiB,MAOAyyF,YAAA,SAAAzyF,GACA,MAAA53B,MAAAoV,KAAA,KAAAwiB,MAOA0yF,cAAA,SAAA1yF,GACA,OAAAA,GAAA,MACA,IAAA53B,KAAAoV,KAAA,EAAAwiB,KAAA,GAGA,IAAA53B,KAAAoV,KAAA,GAAAwiB,GAAA,GAAAA,GAAA,IAQA2yF,UAAA,SAAA3yF,GACA,GAAAniB,GACAZ,EAAA,EAGA,YAAA+iB,EACA,EAGA,IAAAA,EACA,IAGA/iB,KAAA,GACAA,EAAA,EACAY,EAAA46B,IAEA56B,EAdA,GAcAzV,KAAAmxD,KAAA,EAAAt8C,IAAA,EAAA7U,KAAAyF,KAGAoP,EAAA7U,KAAA2Y,IAAA,MAAAif,GAAA,IAAA53B,KAAAg/B,KAAApH,EAAAniB,IAAA,EAAAzV,KAAAyF,IAjBA,MAwBA+kH,WAAA,SAAA5yF,GACA,GAAAniB,GACAZ,EAAA,EAGA,YAAA+iB,EACA,EAGA,IAAAA,EACA,IAGA/iB,KAAA,GACAA,EAAA,EACAY,EAAA46B,IAEA56B,EAdA,GAcAzV,KAAAmxD,KAAA,EAAAt8C,IAAA,EAAA7U,KAAAyF,IAGAoP,EAAA7U,KAAA2Y,IAAA,MAAAif,GAAA53B,KAAAg/B,KAAApH,EAAAniB,IAAA,EAAAzV,KAAAyF,IAjBA,IAiBA,IAOAglH,aAAA,SAAA7yF,GACA,GAAAniB,GACAZ,EAAA,EAGA,YAAA+iB,EACA,EAGA,IAAAA,EACA,IAGA/iB,KAAA,GACAA,EAAA,EACAY,EAAA46B,IAEA56B,EAdA,GAcAzV,KAAAmxD,KAAA,EAAAt8C,IAAA,EAAA7U,KAAAyF,KAGAmyB,GAAA,KACA/iB,EAAA7U,KAAA2Y,IAAA,MAAAif,GAAA,IAAA53B,KAAAg/B,KAAApH,EAAAniB,IAAA,EAAAzV,KAAAyF,IAlBA,KAkBA,GAGAoP,EAAA7U,KAAA2Y,IAAA,OAAAif,GAAA,IAAA53B,KAAAg/B,KAAApH,EAAAniB,IAAA,EAAAzV,KAAAyF,IArBA,IAqBA,OAQAilH,OAAA,SAAA9yF,GACA,GAAAniB,GAAA,OACA,OAAAmiB,OAAAniB,EAAA,GAAAmiB,EAAAniB,IAOAk1G,QAAA,SAAA/yF,GACA,GAAAniB,GAAA,OACA,SAAAmiB,MAAAniB,EAAA,GAAAmiB,EAAAniB,GAAA,GAOAm1G,UAAA,SAAAhzF,GACA,GAAAniB,GAAA,SAEA,QAAAmiB,GAAA,KACAA,MAAAniB,EAAA,GAAAmiB,EAAAniB,GAAA,GAGA,KAAAmiB,GAAA,GAAAA,IAAAniB,EAAA,GAAAmiB,EAAAniB,GAAA,IAQAo1G,SAAA,SAAAjzF,GACA,SAAAugD,EAAA2yC,UAAA,EAAAlzF,IAOAkzF,UAAA,SAAAlzF,GACA,MAAAA,GAAA,OACA,OAAAA,IACKA,EAAA,OACL,QAAAA,GAAA,UAAAA,EAAA,IACKA,EAAA,SACL,QAAAA,GAAA,WAAAA,EAAA,MAEA,QAAAA,GAAA,YAAAA,EAAA,SAQAmzF,YAAA,SAAAnzF,GACA,MAAAA,GAAA,GACA,GAAAugD,EAAA0yC,SAAA,EAAAjzF,GAGA,GAAAugD,EAAA2yC,UAAA,EAAAlzF,EAAA,QAGA1E,EAAAilD,CACAtoF,GAAAC,QAAAojC,G5I6r/BM83F,KACA,SAAUn7H,EAAQC,EAASC,G6IrigCjC,QAAAuiC,GAAAgzB,EAAAC,EAAAhV,EAAAiV,EAAAC,EAAAC,EAAAtmD,EAAAb,EAAAC,GACA,OAAAY,EACA,QAGA,IAAA6rH,GAAA7rH,CACAb,IAAA+mD,EACA9mD,GAAA+mD,CACA,IAAA5vC,GAAA3V,KAAAoV,KAAA7W,IAAAC,IAEA,IAAAmX,EAAAs1G,EAAA16E,GAAA56B,EAAAs1G,EAAA16E,EACA,QAGA,IAAAvwC,KAAAuK,IAAAi7C,EAAAC,GAAAu2B,EAAA,KAEA,QAGA,IAAAt2B,EAAA,CACA,GAAAlc,GAAAgc,CACAA,GAAAu2B,EAAAt2B,GACAA,EAAAs2B,EAAAvyC,OAEAgc,GAAAu2B,EAAAv2B,GACAC,EAAAs2B,EAAAt2B,EAGAD,GAAAC,IACAA,GAAAu2B,EAGA,IAAA1wB,GAAAtrD,KAAAgkF,MAAAxlF,EAAAD,EAMA,OAJA+sD,GAAA,IACAA,GAAA0wB,GAGA1wB,GAAA9F,GAAA8F,GAAA7F,GAAA6F,EAAA0wB,GAAAx2B,GAAA8F,EAAA0wB,GAAAv2B,EAxDA,GAAAle,GAAAx3C,EAAA,MAEAgsF,EAAAx0C,EAAAw0C,gBACAC,EAAA,EAAAh8E,KAAAyF,EAwDA3V,GAAAwiC,iB7I6jgCM44F,KACA,SAAUr7H,EAAQC,EAASC,G8IxmgCjC,QAAAuiC,GAAA+X,EAAAC,EAAAhrC,EAAAG,EAAAF,EAAAG,EAAA6qC,EAAAC,EAAAprC,EAAAb,EAAAC,GACA,OAAAY,EACA,QAGA,IAAA6rH,GAAA7rH,CAEA,SAAAZ,EAAA8rC,EAAA2gF,GAAAzsH,EAAAiB,EAAAwrH,GAAAzsH,EAAAkB,EAAAurH,GAAAzsH,EAAAgsC,EAAAygF,GAAAzsH,EAAA8rC,EAAA2gF,GAAAzsH,EAAAiB,EAAAwrH,GAAAzsH,EAAAkB,EAAAurH,GAAAzsH,EAAAgsC,EAAAygF,GAAA1sH,EAAA8rC,EAAA4gF,GAAA1sH,EAAAe,EAAA2rH,GAAA1sH,EAAAgB,EAAA0rH,GAAA1sH,EAAAgsC,EAAA0gF,GAAA1sH,EAAA8rC,EAAA4gF,GAAA1sH,EAAAe,EAAA2rH,GAAA1sH,EAAAgB,EAAA0rH,GAAA1sH,EAAAgsC,EAAA0gF,IAIA9nE,EAAA/Y,kBAAAC,EAAAC,EAAAhrC,EAAAG,EAAAF,EAAAG,EAAA6qC,EAAAC,EAAAjsC,EAAAC,EAAA,OACAysH,EAAA,EA7BA,GAAA9nE,GAAApzD,EAAA,KAgCAD,GAAAwiC,iB9I+ngCM64F,KACA,SAAUt7H,EAAQC,G+IrpgCxB,QAAAwiC,GAAA+X,EAAAC,EAAAhrC,EAAAG,EAAAL,EAAAb,EAAAC,GACA,OAAAY,EACA,QAGA,IAAA6rH,GAAA7rH,EACAgsH,EAAA,EACAC,EAAAhhF,CAEA,IAAA7rC,EAAA8rC,EAAA2gF,GAAAzsH,EAAAiB,EAAAwrH,GAAAzsH,EAAA8rC,EAAA2gF,GAAAzsH,EAAAiB,EAAAwrH,GAAA1sH,EAAA8rC,EAAA4gF,GAAA1sH,EAAAe,EAAA2rH,GAAA1sH,EAAA8rC,EAAA4gF,GAAA1sH,EAAAe,EAAA2rH,EACA,QAGA,IAAA5gF,IAAA/qC,EAIA,MAAAU,MAAAuK,IAAAhM,EAAA8rC,IAAA4gF,EAAA,CAHAG,IAAA9gF,EAAA7qC,IAAA4qC,EAAA/qC,GACA+rH,GAAAhhF,EAAA5qC,EAAAH,EAAAgrC,IAAAD,EAAA/qC,EAKA,IAAAkqC,GAAA4hF,EAAA7sH,EAAAC,EAAA6sH,CAIA,OAFA7hF,MAAA4hF,IAAA,IAEAH,EAAA,EAAAA,EAAA,EAGAn7H,EAAAwiC,iB/IsqgCMg5F,KACA,SAAUz7H,EAAQC,EAASC,GgJvrgCjC,QAAAw7H,GAAA12G,EAAAC,GACA,MAAA9U,MAAAuK,IAAAsK,EAAAC,GAAA4yB,EAOA,QAAA8jF,KACA,GAAAhiF,GAAAI,EAAA,EACAA,GAAA,GAAAA,EAAA,GACAA,EAAA,GAAAJ,EAGA,QAAAiiF,GAAAphF,EAAAC,EAAAhrC,EAAAG,EAAAF,EAAAG,EAAA6qC,EAAAC,EAAAjsC,EAAAC,GAEA,GAAAA,EAAA8rC,GAAA9rC,EAAAiB,GAAAjB,EAAAkB,GAAAlB,EAAAgsC,GAAAhsC,EAAA8rC,GAAA9rC,EAAAiB,GAAAjB,EAAAkB,GAAAlB,EAAAgsC,EACA,QAGA,IAAAkhF,GAAAvoE,EAAAhb,YAAAmC,EAAA7qC,EAAAC,EAAA8qC,EAAAhsC,EAAA4pC,EAEA,QAAAsjF,EACA,QAMA,QAFAC,GAAAC,EAFA55F,EAAA,EACA65F,GAAA,EAGAp5H,EAAA,EAAmBA,EAAAi5H,EAAYj5H,IAAA,CAC/B,GAAAujB,GAAAoyB,EAAA31C,GAEAq5H,EAAA,IAAA91G,GAAA,IAAAA,EAAA,IACAmtC,GAAAvb,QAAAyC,EAAA/qC,EAAAC,EAAAgrC,EAAAv0B,GAEAzX,IAKAstH,EAAA,IACAA,EAAA1oE,EAAAxZ,aAAAW,EAAA7qC,EAAAC,EAAA8qC,EAAAZ,GAEAA,EAAA,GAAAA,EAAA,IAAAiiF,EAAA,GACAL,IAGAG,EAAAxoE,EAAAvb,QAAA0C,EAAA7qC,EAAAC,EAAA8qC,EAAAZ,EAAA,IAEAiiF,EAAA,IACAD,EAAAzoE,EAAAvb,QAAA0C,EAAA7qC,EAAAC,EAAA8qC,EAAAZ,EAAA,MAIA,GAAAiiF,EAEA71G,EAAA4zB,EAAA,GACA5X,GAAA25F,EAAArhF,EAAAwhF,KACS91G,EAAA4zB,EAAA,GACT5X,GAAA45F,EAAAD,EAAAG,KAEA95F,GAAAwY,EAAAohF,EAAAE,KAIA91G,EAAA4zB,EAAA,GACA5X,GAAA25F,EAAArhF,EAAAwhF,KAEA95F,GAAAwY,EAAAmhF,EAAAG,MAKA,MAAA95F,GAIA,QAAA+5F,GAAA1hF,EAAAC,EAAAhrC,EAAAG,EAAAF,EAAAG,EAAAnB,EAAAC,GAEA,GAAAA,EAAA8rC,GAAA9rC,EAAAiB,GAAAjB,EAAAkB,GAAAlB,EAAA8rC,GAAA9rC,EAAAiB,GAAAjB,EAAAkB,EACA,QAGA,IAAAgsH,GAAAvoE,EAAA9X,gBAAAf,EAAA7qC,EAAAC,EAAAlB,EAAA4pC,EAEA,QAAAsjF,EACA,QAEA,IAAA11G,GAAAmtC,EAAA7X,kBAAAhB,EAAA7qC,EAAAC,EAEA,IAAAsW,GAAA,GAAAA,GAAA,GAIA,OAHAgc,GAAA,EACAg6F,EAAA7oE,EAAAhY,YAAAb,EAAA7qC,EAAAC,EAAAsW,GAEAvjB,EAAA,EAAqBA,EAAAi5H,EAAYj5H,IAAA,CAEjC,GAAAq5H,GAAA,IAAA1jF,EAAA31C,IAAA,IAAA21C,EAAA31C,GAAA,KACAw5H,EAAA9oE,EAAAhY,YAAAd,EAAA/qC,EAAAC,EAAA6oC,EAAA31C,GAEAw5H,GAAA1tH,IAKA6pC,EAAA31C,GAAAujB,EACAgc,GAAAg6F,EAAA1hF,EAAAwhF,KAEA95F,GAAAtyB,EAAAssH,EAAAF,MAIA,MAAA95F,GAGA,GAAA85F,GAAA,IAAA1jF,EAAA,QAAAA,EAAA,QACA6jF,EAAA9oE,EAAAhY,YAAAd,EAAA/qC,EAAAC,EAAA6oC,EAAA,GAEA,OAAA6jF,GAAA1tH,EAEA,EAGAmB,EAAA4qC,EAAAwhF,KAOA,QAAAI,GAAA5mE,EAAAC,EAAAhV,EAAAiV,EAAAC,EAAAC,EAAAnnD,EAAAC,GAGA,IAFAA,GAAA+mD,GAEAhV,GAAA/xC,GAAA+xC,EACA,QAGA,IAAA/G,GAAAxpC,KAAAoV,KAAAm7B,IAAA/xC,IACA4pC,GAAA,IAAAoB,EACApB,EAAA,GAAAoB,CACA,IAAAqpB,GAAA7yD,KAAAuK,IAAAi7C,EAAAC,EAEA,IAAAoN,EAAA,KACA,QAGA,IAAAA,EAAAmpB,EAAA,MAEAx2B,EAAA,EACAC,EAAAu2B,CACA,IAAAG,GAAAz2B,EAAA,IAEA,OAAAnnD,IAAA6pC,EAAA,GAAAkd,GAAA/mD,GAAA6pC,EAAA,GAAAkd,EACA62B,EAEA,EAIA,GAAAz2B,EAAA,CACA,GAAAlc,GAAAgc,CACAA,GAAAu2B,EAAAt2B,GACAA,EAAAs2B,EAAAvyC,OAEAgc,GAAAu2B,EAAAv2B,GACAC,EAAAs2B,EAAAt2B,EAGAD,GAAAC,IACAA,GAAAu2B,EAKA,QAFAhqD,GAAA,EAEAv/B,EAAA,EAAiBA,EAAA,EAAOA,IAAA,CACxB,GAAAw5H,GAAA7jF,EAAA31C,EAEA,IAAAw5H,EAAA3mE,EAAA/mD,EAAA,CACA,GAAA+sD,GAAAtrD,KAAAgkF,MAAAxlF,EAAAytH,GACA9vC,EAAAz2B,EAAA,IAEA4F,GAAA,IACAA,EAAA0wB,EAAA1wB,IAGAA,GAAA9F,GAAA8F,GAAA7F,GAAA6F,EAAA0wB,GAAAx2B,GAAA8F,EAAA0wB,GAAAv2B,KACA6F,EAAAtrD,KAAAyF,GAAA,GAAA6lD,EAAA,IAAAtrD,KAAAyF,KACA02E,MAGAnqD,GAAAmqD,IAKA,MAAAnqD,GAGA,QAAAm6F,GAAAzzH,EAAA0G,EAAAgtH,EAAA7tH,EAAAC,GAOA,OANAwzB,GAAA,EACA+0B,EAAA,EACAC,EAAA,EACA3c,EAAA,EACAC,EAAA,EAEA73C,EAAA,EAAiBA,EAAAiG,EAAAhG,QAAiB,CAClC,GAAA2zD,GAAA3tD,EAAAjG,IAwBA,QAtBA4zD,IAAAhD,EAAAjrB,GAAA3lC,EAAA,IAEA25H,IACAp6F,GAAAkqD,EAAAn1B,EAAAC,EAAA3c,EAAAC,EAAA/rC,EAAAC,KAQA,GAAA/L,IAKAs0D,EAAAruD,EAAAjG,GACAu0D,EAAAtuD,EAAAjG,EAAA,GACA43C,EAAA0c,EACAzc,EAAA0c,GAGAX,GACA,IAAAhD,GAAAjrB,EAGAiS,EAAA3xC,EAAAjG,KACA63C,EAAA5xC,EAAAjG,KACAs0D,EAAA1c,EACA2c,EAAA1c,CACA,MAEA,KAAA+Y,GAAApR,EACA,GAAAm6E,GACA,GAAApmF,EAAA1T,cAAAy0B,EAAAC,EAAAtuD,EAAAjG,GAAAiG,EAAAjG,EAAA,GAAA2M,EAAAb,EAAAC,GACA,aAIAwzB,IAAAkqD,EAAAn1B,EAAAC,EAAAtuD,EAAAjG,GAAAiG,EAAAjG,EAAA,GAAA8L,EAAAC,IAAA,CAGAuoD,GAAAruD,EAAAjG,KACAu0D,EAAAtuD,EAAAjG,IACA,MAEA,KAAA4wD,GAAA7a,EACA,GAAA4jF,GACA,GAAAC,EAAA/5F,cAAAy0B,EAAAC,EAAAtuD,EAAAjG,KAAAiG,EAAAjG,KAAAiG,EAAAjG,KAAAiG,EAAAjG,KAAAiG,EAAAjG,GAAAiG,EAAAjG,EAAA,GAAA2M,EAAAb,EAAAC,GACA,aAGAwzB,IAAAy5F,EAAA1kE,EAAAC,EAAAtuD,EAAAjG,KAAAiG,EAAAjG,KAAAiG,EAAAjG,KAAAiG,EAAAjG,KAAAiG,EAAAjG,GAAAiG,EAAAjG,EAAA,GAAA8L,EAAAC,IAAA,CAGAuoD,GAAAruD,EAAAjG,KACAu0D,EAAAtuD,EAAAjG,IACA,MAEA,KAAA4wD,GAAAC,EACA,GAAA8oE,GACA,GAAAE,EAAAh6F,cAAAy0B,EAAAC,EAAAtuD,EAAAjG,KAAAiG,EAAAjG,KAAAiG,EAAAjG,GAAAiG,EAAAjG,EAAA,GAAA2M,EAAAb,EAAAC,GACA,aAGAwzB,IAAA+5F,EAAAhlE,EAAAC,EAAAtuD,EAAAjG,KAAAiG,EAAAjG,KAAAiG,EAAAjG,GAAAiG,EAAAjG,EAAA,GAAA8L,EAAAC,IAAA,CAGAuoD,GAAAruD,EAAAjG,KACAu0D,EAAAtuD,EAAAjG,IACA,MAEA,KAAA4wD,GAAA/a,EAEA,GAAAgd,GAAA5sD,EAAAjG,KACA8yD,EAAA7sD,EAAAjG,KACA20D,EAAA1uD,EAAAjG,KACA40D,EAAA3uD,EAAAjG,KACA42C,EAAA3wC,EAAAjG,KACAg1D,EAAA/uD,EAAAjG,KAGAizD,GADAhtD,EAAAjG,KACA,EAAAiG,EAAAjG,MACA6M,EAAAU,KAAA++B,IAAAsK,GAAA+d,EAAA9B,EACA7lD,EAAAO,KAAAg/B,IAAAqK,GAAAge,EAAA9B,CAEA9yD,GAAA,EACAu/B,GAAAkqD,EAAAn1B,EAAAC,EAAA1nD,EAAAG,EAAAlB,EAAAC,IAGA6rC,EAAA/qC,EACAgrC,EAAA7qC,EAIA,IAAAg/F,IAAAlgG,EAAA+mD,GAAA+B,EAAAD,EAAA9B,CAEA,IAAA8mE,GACA,GAAA/mE,EAAA/yB,cAAAgzB,EAAAC,EAAA8B,EAAAhe,IAAAoe,EAAA/B,EAAAtmD,EAAAq/F,EAAAjgG,GACA,aAGAwzB,IAAAk6F,EAAA5mE,EAAAC,EAAA8B,EAAAhe,IAAAoe,EAAA/B,EAAA+4C,EAAAjgG,EAGAuoD,GAAA/mD,KAAA++B,IAAAsK,EAAAoe,GAAAL,EAAA9B,EACA0B,EAAAhnD,KAAAg/B,IAAAqK,EAAAoe,GAAAJ,EAAA9B,CACA,MAEA,KAAAlC,GAAAzR,EACAvH,EAAA0c,EAAAruD,EAAAjG,KACA63C,EAAA0c,EAAAtuD,EAAAjG,IACA,IAAA4C,GAAAqD,EAAAjG,KACA6C,EAAAoD,EAAAjG,KACA6M,EAAA+qC,EAAAh1C,EACAoK,EAAA6qC,EAAAh1C,CAEA,IAAA82H,GACA,GAAApmF,EAAA1T,cAAA+X,EAAAC,EAAAhrC,EAAAgrC,EAAAlrC,EAAAb,EAAAC,IAAAwnC,EAAA1T,cAAAhzB,EAAAgrC,EAAAhrC,EAAAG,EAAAL,EAAAb,EAAAC,IAAAwnC,EAAA1T,cAAAhzB,EAAAG,EAAA4qC,EAAA5qC,EAAAL,EAAAb,EAAAC,IAAAwnC,EAAA1T,cAAA+X,EAAA5qC,EAAA4qC,EAAAC,EAAAlrC,EAAAb,EAAAC,GACA,aAIAwzB,IAAAkqD,EAAA58E,EAAAgrC,EAAAhrC,EAAAG,EAAAlB,EAAAC,GACAwzB,GAAAkqD,EAAA7xC,EAAA5qC,EAAA4qC,EAAAC,EAAA/rC,EAAAC,EAGA,MAEA,KAAA6kD,GAAAE,EACA,GAAA6oE,GACA,GAAApmF,EAAA1T,cAAAy0B,EAAAC,EAAA3c,EAAAC,EAAAlrC,EAAAb,EAAAC,GACA,aAIAwzB,IAAAkqD,EAAAn1B,EAAAC,EAAA3c,EAAAC,EAAA/rC,EAAAC,EAOAuoD,GAAA1c,EACA2c,EAAA1c,GASA,MAJA8hF,IAAAb,EAAAvkE,EAAA1c,KACAtY,GAAAkqD,EAAAn1B,EAAAC,EAAA3c,EAAAC,EAAA/rC,EAAAC,IAAA,GAGA,IAAAwzB,EAGA,QAAAG,GAAA50B,EAAAgB,EAAAC,GACA,MAAA2tH,GAAA5uH,EAAA,KAAAgB,EAAAC,GAGA,QAAA8zB,GAAA/0B,EAAA6B,EAAAb,EAAAC,GACA,MAAA2tH,GAAA5uH,EAAA6B,GAAA,EAAAb,EAAAC,GAtYA,GAAA8wB,GAAAv/B,EAAA,MAEAi2C,EAAAj2C,EAAA,MAEAs8H,EAAAt8H,EAAA,MAEAu8H,EAAAv8H,EAAA,MAEAs1D,EAAAt1D,EAAA,MAEAw3C,EAAAx3C,EAAA,MAEAgsF,EAAAx0C,EAAAw0C,gBAEA54B,EAAApzD,EAAA,MAEAmsF,EAAAnsF,EAAA,MAEAszD,EAAA/zB,EAAA+zB,IACA24B,EAAA,EAAAh8E,KAAAyF,GACAiiC,EAAA,KAOAU,IAAA,SACAwB,IAAA,KA6WA95C,GAAAqiC,UACAriC,EAAAwiC,iBhJmtgCMi6F,KACA,SAAU18H,EAAQC,EAASC,GiJ1lhCjC,QAAAw7H,GAAA12G,EAAAC,GACA,MAAA9U,MAAAuK,IAAAsK,EAAAC,GAAA4yB,EAGA,QAAAvV,GAAA5mB,EAAAhN,EAAAC,GACA,GAAAwzB,GAAA,EACAqe,EAAA9kC,EAAA,EAEA,KAAA8kC,EACA,QAGA,QAAA59C,GAAA,EAAiBA,EAAA8Y,EAAA7Y,OAAmBD,IAAA,CACpC,GAAAs1C,GAAAx8B,EAAA9Y,EACAu/B,IAAAkqD,EAAA7rC,EAAA,GAAAA,EAAA,GAAAtI,EAAA,GAAAA,EAAA,GAAAxpC,EAAAC,GACA6xC,EAAAtI,EAIA,GAAAF,GAAAt8B,EAAA,EAMA,OAJAggH,GAAAl7E,EAAA,GAAAxI,EAAA,KAAA0jF,EAAAl7E,EAAA,GAAAxI,EAAA,MACA7V,GAAAkqD,EAAA7rC,EAAA,GAAAA,EAAA,GAAAxI,EAAA,GAAAA,EAAA,GAAAtpC,EAAAC,IAGA,IAAAwzB,EA7BA,GAAAkqD,GAAAnsF,EAAA,MAEA23C,EAAA,IA8BA53C,GAAAqiC,WjJomhCMq6F,KACA,SAAU38H,EAAQC,EAASC,GkJpnhCjC,QAAAuiC,GAAA+X,EAAAC,EAAAhrC,EAAAG,EAAAF,EAAAG,EAAAN,EAAAb,EAAAC,GACA,OAAAY,EACA,QAGA,IAAA6rH,GAAA7rH,CAEA,SAAAZ,EAAA8rC,EAAA2gF,GAAAzsH,EAAAiB,EAAAwrH,GAAAzsH,EAAAkB,EAAAurH,GAAAzsH,EAAA8rC,EAAA2gF,GAAAzsH,EAAAiB,EAAAwrH,GAAAzsH,EAAAkB,EAAAurH,GAAA1sH,EAAA8rC,EAAA4gF,GAAA1sH,EAAAe,EAAA2rH,GAAA1sH,EAAAgB,EAAA0rH,GAAA1sH,EAAA8rC,EAAA4gF,GAAA1sH,EAAAe,EAAA2rH,GAAA1sH,EAAAgB,EAAA0rH,IAIAx/E,EAAApB,EAAAC,EAAAhrC,EAAAG,EAAAF,EAAAG,EAAAnB,EAAAC,EAAA,OACAysH,EAAA,EA7BA,GAAAwB,GAAA18H,EAAA,MAEA07C,EAAAghF,EAAAhhF,qBA8BA37C,GAAAwiC,iBlJ2ohCMo6F,KACA,SAAU78H,EAAQC,EAASC,GmJhnhCjC,QAAAomB,GAAAw2G,GACA,GAAAprF,GAAAorF,EAAA,MAAAA,EAAA,MACAnrF,EAAAmrF,EAAA,MAAAA,EAAA,KACA,OAAA3sH,MAAAoV,KAAAmsB,IAAAC,KAGA,QAAAgiD,GAAAmpC,GACA,QAAAA,EAAA,MAAAA,EAAA,UAAAA,EAAA,MAAAA,EAAA,UAnEA,GAAAztB,GAAAnvG,EAAA,MAKA68H,EAAA,WAKA/4H,KAAAg5H,UAGAD,GAAA57H,WACAG,YAAAy7H,EACAE,UAAA,SAAA1sG,EAAA7tB,EAAA2yF,GAGA,MAFArxF,MAAAk5H,SAAA3sG,EAAA7tB,EAAA2yF,GAEArxF,KAAAm5H,WAAA5sG,IAEA2O,MAAA,WAEA,MADAl7B,MAAAg5H,OAAAn6H,OAAA,EACAmB,MAEAk5H,SAAA,SAAA3sG,EAAA7tB,EAAA2yF,GACA,GAAA+nC,GAAA7sG,EAAA6sG,OAEA,IAAAA,EAAA,CAWA,OAPAC,IACA3hH,UACA0hH,WACA16H,SACA6tB,SAGA3tB,EAAA,EAAAgE,EAAAw2H,EAAAv6H,OAAyCD,EAAAgE,EAAShE,IAAA,CAClD,GAAAs7C,GAAAk/E,EAAAx6H,GACA2wE,EAAA87B,EAAA/xD,cAAA+3C,EAAAn3C,KACAm/E,GAAA3hH,OAAArS,MAAAkqE,EAAA51B,IAAA41B,EAAA31B,MACAy/E,EAAAD,QAAA/zH,KAAA60C,GAGAl6C,KAAAg5H,OAAA3zH,KAAAg0H,KAEAF,WAAA,SAAA5sG,GACA,OAAA9E,KAAA6xG,GACA,GAAAA,EAAAn2H,eAAAskB,GAAA,CACA,GAAA8xG,GAAAD,EAAA7xG,GAAAznB,KAAAg5H,OAAAzsG,EAEA,IAAAgtG,EACA,MAAAA,KAiBA,IAAAD,IACAE,MAAA,SAAAC,EAAAltG,GACA,GAAAu4D,GAAA20C,EAAA56H,MAEA,IAAAimF,EAAA,CAIA,GAAA40C,IAAAD,EAAA30C,EAAA,QAA6CptE,OAC7CiiH,GAAAF,EAAA30C,EAAA,QAA6CptE,QAAAgiH,CAE7C,IAAAC,KAAA96H,OAAA,GAAA66H,KAAA76H,OAAA,GACA,GAAA6pH,GAAApmG,EAAAo3G,GAAAp3G,EAAAq3G,IACAn1G,SAAAkkG,OAAA,GACAn8F,EAAAm8F,YACA,IAAAkR,GAAAjqC,EAAA+pC,EAGA,OAFAntG,GAAAi8F,OAAAoR,EAAA,GACArtG,EAAAk8F,OAAAmR,EAAA,IAEA54H,KAAA,QACAtC,OAAA+6H,EAAA,GAAA/6H,OACA6tB,aAMA8S,EAAA05F,CACA/8H,GAAAC,QAAAojC,GnJkrhCMw6F,KACA,SAAU79H,EAAQC,EAASC,GoJzvhCjC,QAAA49H,GAAA13H,GACA,qBAAAA,GAAA2tB,EAAA2K,QAAAmF,QAAA,iBAAAz9B,EAGA,QAAA23H,GAAA9Q,EAAA18F,EAAA+kE,GACA,GAAA0oC,GAAA/Q,EAAAgR,WACA,WAAA3oC,GAAA0oC,EAAA9+F,OACA,IAAAq+F,GAAAS,EAAAf,UAAA1sG,EAAA08F,EAAAvhG,QAAA2qE,UAAA9lE,EAAAotB,IAAAptB,EAAAqtB,IAAA,MAAAl7C,OAAAuqH,EAAAnhG,IAGA,IAFA,QAAAwpE,GAAA0oC,EAAA9+F,QAEAq+F,EAAA,CACA,GAAAv4H,GAAAu4H,EAAAv4H,IACAurB,GAAAg8F,aAAAvnH,EACAioH,EAAAvhG,QAAAiiG,mBACAjrH,OAAA66H,EAAA76H,QACKsC,EAAAu4H,EAAAhtG,QAwBL,QAAA2tG,GAAAx9H,GACAA,EAAAy9H,WAAA,EACA96D,aAAA3iE,EAAA09H,aACA19H,EAAA09H,YAAA96D,WAAA,WACA5iE,EAAAy9H,WAAA,GACG,KAqIH,QAAAE,GAAA9tG,GACA,GAAA+tG,GAAA/tG,EAAA+tG,WACA,eAAAA,GAAA,UAAAA,EAoBA,QAAAC,GAAA79H,GAWA,QAAA89H,GAAAn4H,EAAA3F,GACA,kBACA,IAAAA,EAAAy9H,UAIA,MAAA93H,GAAA2D,MAAAtJ,EAAAqJ,YAhBAyK,EAAA1L,KAAA21H,EAAA,SAAAr4H,GACA1F,EAAAg+H,UAAAt4H,GAAAoO,EAAA9P,KAAAi6H,EAAAv4H,GAAA1F,KAEA8T,EAAA1L,KAAA81H,EAAA,SAAAx4H,GACA1F,EAAAg+H,UAAAt4H,GAAAoO,EAAA9P,KAAAi6H,EAAAv4H,GAAA1F,KAEA8T,EAAA1L,KAAA+1H,EAAA,SAAAz4H,GACA1F,EAAAg+H,UAAAt4H,GAAAo4H,EAAAG,EAAAv4H,GAAA1F,KAcA,QAAAo+H,GAAAhzG,GA2DA,QAAAizG,GAAA/R,EAAAtsH,GACA8T,EAAA1L,KAAAkkH,EAAA,SAAA5mH,GACAw4C,EAAA9yB,EAAAgyG,EAAA13H,GAAA1F,EAAAg+H,UAAAt4H,KACK1F,GA7DLirB,EAAA7qB,KAAAkD,MACAA,KAAA8nB,MAMA9nB,KAAAm6H,WAAA,EAMAn6H,KAAAo6H,YAMAp6H,KAAAi6H,YAAA,GAAAlB,GACA/4H,KAAA06H,aACAH,EAAAv6H,MAEA+vB,EAAAmQ,uBAQA66F,EAAAH,EAAA56H,OAcA+vB,EAAAkQ,sBACA86F,EAAAN,EAAAz6H,MASA+6H,EAAAF,EAAA76H,OAjTA,GAAA2zH,GAAAz3H,EAAA,MAEA0+C,EAAA+4E,EAAA/4E,iBACAG,EAAA44E,EAAA54E,oBACAd,EAAA05E,EAAA15E,eAEAzpC,EAAAtU,EAAA,MAEAyrB,EAAAzrB,EAAA,MAEA6zB,EAAA7zB,EAAA,MAEA68H,EAAA78H,EAAA,MAGA2+H,GAAA,4FACAJ,GAAA,qCACAO,GACAC,YAAA,EACAC,UAAA,EACAC,YAAA,EACAC,WAAA,GAEAR,EAAApqH,EAAArL,IAAA01H,EAAA,SAAAz4H,GACA,GAAAi5H,GAAAj5H,EAAAgW,QAAA,kBACA,OAAA4iH,GAAAK,KAAAj5H,IAkDAu4H,GAMAtR,UAAA,SAAA98F,GACAA,EAAA0tB,EAAAj6C,KAAA8nB,IAAAyE,GACAvsB,KAAA4sB,QAAA,YAAAL,IAQAq9F,SAAA,SAAAr9F,GACAA,EAAA0tB,EAAAj6C,KAAA8nB,IAAAyE,EACA,IAAAu9F,GAAAv9F,EAAAw9F,WAAAx9F,EAAAy9F,aAEA,IAAAF,GAAA9pH,KAAA8nB,IACA,KAAAgiG,GAAA,GAAAA,EAAAzjH,UAAA,CAEA,GAAAyjH,IAAA9pH,KAAA8nB,IACA,MAGAgiG,KAAAG,WAIAjqH,KAAA4sB,QAAA,WAAAL,IAQA+uG,WAAA,SAAA/uG,GAGAA,EAAA0tB,EAAAj6C,KAAA8nB,IAAAyE,GAGAA,EAAAtd,WAAA,EACAjP,KAAAopH,iBAAA,GAAAvjG,MACAk0G,EAAA/5H,KAAAusB,EAAA,SAGAouG,EAAAtR,UAAAvsH,KAAAkD,KAAAusB,GACAouG,EAAAY,UAAAz+H,KAAAkD,KAAAusB,GACA2tG,EAAAl6H,OAQAw7H,UAAA,SAAAjvG,GACAA,EAAA0tB,EAAAj6C,KAAA8nB,IAAAyE,GAGAA,EAAAtd,WAAA,EACA8qH,EAAA/5H,KAAAusB,EAAA,UAIAouG,EAAAtR,UAAAvsH,KAAAkD,KAAAusB,GACA2tG,EAAAl6H,OAQAy7H,SAAA,SAAAlvG,GACAA,EAAA0tB,EAAAj6C,KAAA8nB,IAAAyE,GAGAA,EAAAtd,WAAA,EACA8qH,EAAA/5H,KAAAusB,EAAA,OACAouG,EAAAe,QAAA5+H,KAAAkD,KAAAusB,IAUA,GAAA1G,MAAA7lB,KAAAopH,iBA3JA,KA4JAuR,EAAAgB,MAAA7+H,KAAAkD,KAAAusB,GAGA2tG,EAAAl6H,OAEAi7H,YAAA,SAAA1uG,GACAouG,EAAAY,UAAAz+H,KAAAkD,KAAAusB,IAIA4uG,YAAA,SAAA5uG,GAMA8tG,EAAA9tG,IACAouG,EAAAtR,UAAAvsH,KAAAkD,KAAAusB,IAGA2uG,UAAA,SAAA3uG,GACAouG,EAAAe,QAAA5+H,KAAAkD,KAAAusB,IAEA6uG,WAAA,SAAA7uG,GAMA8tG,EAAA9tG,IACAouG,EAAA/Q,SAAA9sH,KAAAkD,KAAAusB,IAcA/b,GAAA1L,MAAA,8EAAA1C,GACAu4H,EAAAv4H,GAAA,SAAAmqB,GACAA,EAAA0tB,EAAAj6C,KAAA8nB,IAAAyE,GACAvsB,KAAA4sB,QAAAxqB,EAAAmqB,KAkGA,IAAAqvG,GAAAd,EAAA39H,SAEAy+H,GAAAltG,QAAA,WAGA,OAFAs6F,GAAA6R,EAAA50H,OAAAw0H,GAEA77H,EAAA,EAAiBA,EAAAoqH,EAAAnqH,OAAyBD,IAAA,CAC1C,GAAAwD,GAAA4mH,EAAApqH,EACAm8C,GAAA/6C,KAAA8nB,IAAAgyG,EAAA13H,GAAApC,KAAA06H,UAAAt4H,MAIAw5H,EAAAlS,UAAA,SAAAziD,GACAjnE,KAAA8nB,IAAA7mB,MAAAuiE,OAAAyD,GAAA,WAGAz2D,EAAA7L,MAAAm2H,EAAAnzG,EACA,IAAA0X,GAAAy7F,CACA9+H,GAAAC,QAAAojC,GpJ2xhCMw8F,KACA,SAAU7/H,EAAQC,EAASC,GqJxmiCjC,GAAAsN,GAAAtN,EAAA,MAGAmjC,EAAA71B,EAAA3F,QACA7C,KAAA,WACAsK,OACAwwH,MAAA,MAEAC,iBAAA,WAIA,OAHAr9F,GAAA1+B,KAAA87B,YACAggG,EAAA97H,KAAAsL,MAAAwwH,MAEAl9H,EAAA,EAAmBA,EAAAk9H,EAAAj9H,OAAkBD,IAErC8/B,KAAAo9F,EAAAl9H,GAAAk9B,WAGA97B,MAAA87B,YAAA4C,EACA1+B,KAAA08B,QAAA18B,KAAA08B,SAAAgC,GAEA6/B,YAAA,WACAv+D,KAAA+7H,kBAKA,QAHAD,GAAA97H,KAAAsL,MAAAwwH,UACAn6G,EAAA3hB,KAAAo9B,iBAEAx+B,EAAA,EAAmBA,EAAAk9H,EAAAj9H,OAAkBD,IACrCk9H,EAAAl9H,GAAAoL,MACA8xH,EAAAl9H,GAAAk/B,kBAGAg+F,EAAAl9H,GAAAoL,KAAAqzB,SAAA1b,EAAA,GAAAA,EAAA,KAGA6b,UAAA,SAAAvB,EAAA3wB,GAGA,OAFAwwH,GAAAxwH,EAAAwwH,UAEAl9H,EAAA,EAAmBA,EAAAk9H,EAAAj9H,OAAkBD,IACrCk9H,EAAAl9H,GAAA4+B,UAAAvB,EAAA6/F,EAAAl9H,GAAA0M,OAAA,IAGAm4D,WAAA,WAGA,OAFAq4D,GAAA97H,KAAAsL,MAAAwwH,UAEAl9H,EAAA,EAAmBA,EAAAk9H,EAAAj9H,OAAkBD,IACrCk9H,EAAAl9H,GAAAk9B,aAAA,GAGA3xB,gBAAA,WAGA,MAFAnK,MAAA+7H,mBAEAvyH,EAAArM,UAAAgN,gBAAArN,KAAAkD,QAIAhE,GAAAC,QAAAojC,GrJ8miCM28F,KACA,SAAUhgI,EAAQC,EAASC,GsJtqiCjC,GAAAsU,GAAAtU,EAAA,MAEA6nE,EAAA7nE,EAAA,MAWA+c,EAAA,SAAAvO,EAAAC,EAAAe,EAAAG,EAAAkuB,EAAAkiG,GAIAj8H,KAAA0K,EAAA,MAAAA,EAAA,EAAAA,EACA1K,KAAA2K,EAAA,MAAAA,EAAA,EAAAA,EACA3K,KAAA0L,GAAA,MAAAA,EAAA,EAAAA,EACA1L,KAAA6L,GAAA,MAAAA,EAAA,EAAAA,EAEA7L,KAAAgB,KAAA,SAEAhB,KAAAu/B,OAAA08F,IAAA,EACAl4D,EAAAjnE,KAAAkD,KAAA+5B,GAGA9gB,GAAA9b,WACAG,YAAA2b,GAEAzI,EAAAnM,SAAA4U,EAAA8qD,EACA,IAAA1kC,GAAApmB,CACAjd,GAAAC,QAAAojC,GtJ4qiCM68F,KACA,SAAUlgI,EAAQC,EAASC,GuJ9siCjC,GAAAsU,GAAAtU,EAAA,MAEA6nE,EAAA7nE,EAAA,MAUAgd,EAAA,SAAAxO,EAAAC,EAAA+xC,EAAA3iB,EAAAkiG,GAIAj8H,KAAA0K,EAAA,MAAAA,EAAA,GAAAA,EACA1K,KAAA2K,EAAA,MAAAA,EAAA,GAAAA,EACA3K,KAAA08C,EAAA,MAAAA,EAAA,GAAAA,EAEA18C,KAAAgB,KAAA,SAEAhB,KAAAu/B,OAAA08F,IAAA,EACAl4D,EAAAjnE,KAAAkD,KAAA+5B,GAGA7gB,GAAA/b,WACAG,YAAA4b,GAEA1I,EAAAnM,SAAA6U,EAAA6qD,EACA,IAAA1kC,GAAAnmB,CACAld,GAAAC,QAAAojC,GvJotiCM88F,KACA,SAAUngI,EAAQC,EAASC,GwJpviCjC,GAAAs/B,GAAAt/B,EAAA,MAEAsU,EAAAtU,EAAA,MAEA0oC,EAAA1oC,EAAA,MAEAkgI,EAAAlgI,EAAA,MAQAoc,EAAA,SAAA/O,GAEAiyB,EAAA1+B,KAAAkD,KAAAuJ,GAGA+O,GAAAnb,WACAG,YAAAgb,EACAtX,KAAA,OACAg7B,MAAA,SAAAC,EAAAC,GACA,GAAAj7B,GAAAjB,KAAAiB,KAEAjB,MAAA08B,SAAA0/F,EAAApvC,mBAAA/rF,GAAA,GAEAA,EAAAiM,KAAAjM,EAAAgM,OAAAhM,EAAAkpE,WAAAlpE,EAAAmpE,YAAAnpE,EAAAopE,cAAAppE,EAAAqpE,cAAA,IACA,IAAAx5D,GAAA7P,EAAA6P,IAEA,OAAAA,OAAA,IAEA7P,EAAAP,KAAAu7B,EAAAj8B,KAAAk8B,GAEAkgG,EAAA1sC,aAAA5+E,EAAA7P,KAIAjB,KAAAy8B,aAAAR,GACAmgG,EAAA/uC,WAAArtF,KAAAi8B,EAAAnrB,EAAA7P,GACAjB,KAAA09B,iBAAAzB,KAEA9xB,gBAAA,WACA,GAAAlJ,GAAAjB,KAAAiB,KAIA,IAFAjB,KAAA08B,SAAA0/F,EAAApvC,mBAAA/rF,GAAA,IAEAjB,KAAA+9B,MAAA,CACA,GAAAjtB,GAAA7P,EAAA6P,IACA,OAAAA,KAAA,GAAAA,EAAA,EACA,IAAAhH,GAAA86B,EAAAz6B,gBAAAlJ,EAAA6P,KAAA,GAAA7P,EAAA0pC,KAAA1pC,EAAAqS,UAAArS,EAAAsS,kBAAAtS,EAAA6S,YAAA7S,EAAAuR,KAIA,IAHA1I,EAAAY,GAAAzJ,EAAAyJ,GAAA,EACAZ,EAAAa,GAAA1J,EAAA0J,GAAA,EAEAyxH,EAAA7tC,UAAAttF,EAAA6R,WAAA7R,EAAA+R,iBAAA,CACA,GAAAmrB,GAAAl9B,EAAA+R,eACAlJ,GAAAY,GAAAyzB,EAAA,EACAr0B,EAAAa,GAAAwzB,EAAA,EACAr0B,EAAAtI,OAAA28B,EACAr0B,EAAArI,QAAA08B,EAGAn+B,KAAA+9B,MAAAj0B,EAGA,MAAA9J,MAAA+9B,QAGAvtB,EAAAnM,SAAAiU,EAAAkjB,EACA,IAAA6D,GAAA/mB,CACAtc,GAAAC,QAAAojC,GxJ0viCMg9F,KACA,SAAUrgI,EAAQC,EAASC,GyJpyiCjC,QAAAmjC,GAAA3nB,EAAAw0E,EAAAowC,EAAAC,GACA,GAIAC,GACAC,EACArjH,EAAAhN,EANAswH,KACA37G,KACAI,KACAC,IAKA,IAAAm7G,EAAA,CACAnjH,GAAA6N,SACA7a,IAAA6a,SAEA,QAAAroB,GAAA,EAAAgE,EAAA8U,EAAA7Y,OAAwCD,EAAAgE,EAAShE,IACjD+9H,EAAAvjH,IAAA1B,EAAA9Y,IACAg+H,EAAAxwH,IAAAsL,EAAA9Y,GAIA+9H,GAAAvjH,IAAAmjH,EAAA,IACAK,EAAAxwH,IAAAmwH,EAAA,IAGA,OAAA39H,GAAA,EAAAgE,EAAA8U,EAAA7Y,OAAsCD,EAAAgE,EAAShE,IAAA,CAC/C,GAAA+Y,GAAAD,EAAA9Y,EAEA,IAAA09H,EACAE,EAAA9kH,EAAA9Y,IAAA,EAAAgE,EAAA,GACA65H,EAAA/kH,GAAA9Y,EAAA,GAAAgE,OACK,CACL,OAAAhE,OAAAgE,EAAA,GACA85H,EAAAr3H,KAAAw3H,EAAAnlH,EAAA9Y,IACA,UAEA49H,EAAA9kH,EAAA9Y,EAAA,GACA69H,EAAA/kH,EAAA9Y,EAAA,GAIAk+H,EAAA/7G,EAAA07G,EAAAD,GAEAO,EAAAh8G,IAAAmrE,EACA,IAAA8wC,GAAAC,EAAAtlH,EAAA6kH,GACA1lF,EAAAmmF,EAAAtlH,EAAA8kH,GACA93G,EAAAq4G,EAAAlmF,CAEA,KAAAnyB,IACAq4G,GAAAr4G,EACAmyB,GAAAnyB,GAGAo4G,EAAA57G,EAAAJ,GAAAi8G,GACAD,EAAA37G,EAAAL,EAAA+1B,EACA,IAAA0nD,GAAA0+B,KAAAvlH,EAAAwJ,GACAmrE,EAAA4wC,KAAAvlH,EAAAyJ,EAEAm7G,KACAK,EAAAp+B,IAAAplF,GACAujH,EAAAn+B,IAAApyF,GACAwwH,EAAAtwC,IAAAlzE,GACAujH,EAAArwC,IAAAlgF,IAGAswH,EAAAr3H,KAAAm5F,GACAk+B,EAAAr3H,KAAAinF,GAOA,MAJAgwC,IACAI,EAAAr3H,KAAAq3H,EAAA3vG,SAGA2vG,EApGA,GAAA7kF,GAAA37C,EAAA,MAEAygI,EAAA9kF,EAAAz+B,IACAwjH,EAAA/kF,EAAAzrC,IACA2wH,EAAAllF,EAAAl2B,MACAs7G,EAAAplF,EAAA91B,SACAm7G,EAAArlF,EAAA32B,IACA27G,EAAAhlF,EAAAt1C,MACAu6H,EAAAjlF,EAAAv2B,GA+FAtlB,GAAAC,QAAAojC,GzJu0iCM89F,KACA,SAAUnhI,EAAQC,EAASC,G0Jh6iCjC,QAAAkhI,GAAAppF,EAAAC,EAAAC,EAAAC,EAAAhyB,EAAA6yB,EAAAa,GACA,GAAAiuC,GAAA,IAAA5vC,EAAAF,GACA7yB,EAAA,IAAAgzB,EAAAF,EACA,WAAAA,EAAAC,GAAA4vC,EAAA3iE,GAAA00B,IAAA,GAAA5B,EAAAC,GAAA,EAAA4vC,EAAA3iE,GAAA6zB,EAAA8uC,EAAA3hE,EAAA8xB,EAUA,QAAA5U,GAAA3nB,EAAA4kH,GAKA,OAJA15H,GAAA8U,EAAA7Y,OACAsmC,KACApjB,EAAA,EAEAnjB,EAAA,EAAiBA,EAAAgE,EAAShE,IAC1BmjB,GAAAk7G,EAAAvlH,EAAA9Y,EAAA,GAAA8Y,EAAA9Y,GAGA,IAAAy+H,GAAAt7G,EAAA,CACAs7G,KAAAz6H,IAAAy6H,CAEA,QAAAz+H,GAAA,EAAiBA,EAAAy+H,EAAUz+H,IAAA,CAC3B,GAGAo1C,GAEAE,EACAC,EANAo7B,EAAA3wE,GAAAy+H,EAAA,IAAAf,EAAA15H,IAAA,GACA2d,EAAApU,KAAAmY,MAAAirD,GACApxC,EAAAoxC,EAAAhvD,EAEA0zB,EAAAv8B,EAAA6I,EAAA3d,EAIA05H,IAKAtoF,EAAAt8B,GAAA6I,EAAA,EAAA3d,MACAsxC,EAAAx8B,GAAA6I,EAAA,GAAA3d,GACAuxC,EAAAz8B,GAAA6I,EAAA,GAAA3d,KANAoxC,EAAAt8B,EAAA,IAAA6I,MAAA,GACA2zB,EAAAx8B,EAAA6I,EAAA3d,EAAA,EAAAA,EAAA,EAAA2d,EAAA,GACA4zB,EAAAz8B,EAAA6I,EAAA3d,EAAA,EAAAA,EAAA,EAAA2d,EAAA,GAOA,IAAA+8G,GAAAn/F,IACAo/F,EAAAp/F,EAAAm/F,CACAn4F,GAAA9/B,MAAA+3H,EAAAppF,EAAA,GAAAC,EAAA,GAAAC,EAAA,GAAAC,EAAA,GAAAhW,EAAAm/F,EAAAC,GAAAH,EAAAppF,EAAA,GAAAC,EAAA,GAAAC,EAAA,GAAAC,EAAA,GAAAhW,EAAAm/F,EAAAC,KAGA,MAAAp4F,GAhEA,GAAA0S,GAAA37C,EAAA,MAEA+gI,EAAAplF,EAAA91B,QAiEA/lB,GAAAC,QAAAojC,G1Jq7iCMm+F,KACA,SAAUxhI,EAAQC,EAASC,G2Jz/iCjC,GAAAkgI,GAAAlgI,EAAA,MAEAid,EAAAjd,EAAA,MAMA+yD,EAAA,GAAA91C,GAEAiqD,EAAA,YAEAA,GAAAjmE,WACAG,YAAA8lE,EAOAzlC,aAAA,SAAA1B,EAAAnyB,GACA,GAAA7I,GAAAjB,KAAAiB,KACA6I,GAAA7I,EAAA6oE,UAAAhgE,EAEA9J,KAAA08B,SAAA0/F,EAAApvC,mBAAA/rF,GAAA,EACA,IAAA6P,GAAA7P,EAAA6P,IAIA,IAFA,MAAAA,OAAA,IAEAsrH,EAAA1sC,aAAA5+E,EAAA7P,GAAA,CAKAg7B,EAAA6vF,MAEA,IAAA31G,GAAAnW,KAAAmW,SAEAlV,GAAAgqF,cAOAjrF,KAAAy8B,aAAAR,GANA9lB,IACA84C,EAAAnuC,KAAAhX,GACAmlD,EAAAjkD,eAAAmL,GACArM,EAAAmlD,GAOAmtE,EAAA/uC,WAAArtF,KAAAi8B,EAAAnrB,EAAA7P,EAAA6I,GACAmyB,EAAA+vF,YAGA,IAAA3sF,GAAA+jC,CACApnE,GAAAC,QAAAojC,G3J+/iCMo+F,KACA,SAAUzhI,EAAQC,EAASC,G4JtjjCjC,GAAAsN,GAAAtN,EAAA,MAMAmjC,EAAA71B,EAAA3F,QACA7C,KAAA,MACAsK,OACAmmD,GAAA,EACAC,GAAA,EACAhV,EAAA,EACAiV,WAAA,EACAC,SAAA,EAAAzlD,KAAAyF,GACAm6D,WAAA,GAEA9qE,OACAgM,OAAA,OACAC,KAAA,MAEAswB,UAAA,SAAAvB,EAAA3wB,GACA,GAAAZ,GAAAY,EAAAmmD,GACA9mD,EAAAW,EAAAomD,GACAhV,EAAAvwC,KAAAC,IAAAd,EAAAoxC,EAAA,GACAiV,EAAArmD,EAAAqmD,WACAC,EAAAtmD,EAAAsmD,SACAma,EAAAzgE,EAAAygE,UACA2xD,EAAAvxH,KAAA++B,IAAAymB,GACAgsE,EAAAxxH,KAAAg/B,IAAAwmB,EACA11B,GAAA60B,OAAA4sE,EAAAhhF,EAAAhyC,EAAAizH,EAAAjhF,EAAA/xC,GACAsxB,EAAAu1B,IAAA9mD,EAAAC,EAAA+xC,EAAAiV,EAAAC,GAAAma,KAIA/vE,GAAAC,QAAAojC,G5J4jjCMu+F,KACA,SAAU5hI,EAAQC,EAASC,G6J5kjCjC,QAAA2hI,GAAAvyH,EAAA6W,EAAA27G,GACA,GAAAC,GAAAzyH,EAAAyyH,KACAC,EAAA1yH,EAAA0yH,IAEA,eAAAD,GAAA,OAAAC,IACAF,EAAAzpF,EAAAN,GAAAzoC,EAAAG,GAAAH,EAAA2yH,KAAA3yH,EAAAyyH,KAAAzyH,EAAAI,GAAAyW,IAAA27G,EAAAzpF,EAAAN,GAAAzoC,EAAAM,GAAAN,EAAA4yH,KAAA5yH,EAAA0yH,KAAA1yH,EAAAO,GAAAsW,MAEA27G,EAAAvmF,EAAAD,GAAAhsC,EAAAG,GAAAH,EAAA2yH,KAAA3yH,EAAAI,GAAAyW,IAAA27G,EAAAvmF,EAAAD,GAAAhsC,EAAAM,GAAAN,EAAA4yH,KAAA5yH,EAAAO,GAAAsW,IA1BA,GAAA3Y,GAAAtN,EAAA,MAEAmkC,EAAAnkC,EAAA,MAEA08H,EAAA18H,EAAA,MAEAy7C,EAAAihF,EAAAjhF,mBACA3B,EAAA4iF,EAAA5iF,eACAsB,EAAAshF,EAAAthF,YACAvD,EAAA6kF,EAAA7kF,QACAwD,EAAAqhF,EAAArhF,sBACAlD,EAAAukF,EAAAvkF,kBAMAzzB,KAaAye,EAAA71B,EAAA3F,QACA7C,KAAA,eACAsK,OACAG,GAAA,EACAG,GAAA,EACAF,GAAA,EACAG,GAAA,EACAoyH,KAAA,EACAC,KAAA,EAIAh7G,QAAA,GAEAjiB,OACAgM,OAAA,OACAC,KAAA,MAEAswB,UAAA,SAAAvB,EAAA3wB,GACA,GAAAG,GAAAH,EAAAG,GACAG,EAAAN,EAAAM,GACAF,EAAAJ,EAAAI,GACAG,EAAAP,EAAAO,GACAoyH,EAAA3yH,EAAA2yH,KACAC,EAAA5yH,EAAA4yH,KACAH,EAAAzyH,EAAAyyH,KACAC,EAAA1yH,EAAA0yH,KACA96G,EAAA5X,EAAA4X,OAEA,KAAAA,IAIA+Y,EAAA60B,OAAArlD,EAAAG,GAEA,MAAAmyH,GAAA,MAAAC,GACA96G,EAAA,IACAy0B,EAAAlsC,EAAAwyH,EAAAvyH,EAAAwX,EAAAtC,GACAq9G,EAAAr9G,EAAA,GACAlV,EAAAkV,EAAA,GACA+2B,EAAA/rC,EAAAsyH,EAAAryH,EAAAqX,EAAAtC,GACAs9G,EAAAt9G,EAAA,GACA/U,EAAA+U,EAAA,IAGAqb,EAAAq1B,iBAAA2sE,EAAAC,EAAAxyH,EAAAG,KAEAqX,EAAA,IACA8yB,EAAAvqC,EAAAwyH,EAAAF,EAAAryH,EAAAwX,EAAAtC,GACAq9G,EAAAr9G,EAAA,GACAm9G,EAAAn9G,EAAA,GACAlV,EAAAkV,EAAA,GACAo1B,EAAApqC,EAAAsyH,EAAAF,EAAAnyH,EAAAqX,EAAAtC,GACAs9G,EAAAt9G,EAAA,GACAo9G,EAAAp9G,EAAA,GACA/U,EAAA+U,EAAA,IAGAqb,EAAAm1B,cAAA6sE,EAAAC,EAAAH,EAAAC,EAAAtyH,EAAAG,MASAsyH,QAAA,SAAAh8G,GACA,MAAA07G,GAAA79H,KAAAsL,MAAA6W,GAAA,IAQAi8G,UAAA,SAAAj8G,GACA,GAAAq6B,GAAAqhF,EAAA79H,KAAAsL,MAAA6W,GAAA,EACA,OAAAke,GAAAxe,UAAA26B,OAIAxgD,GAAAC,QAAAojC,G7JqmjCMg/F,KACA,SAAUriI,EAAQC,EAASC,G8JttjCjC,GAAAsN,GAAAtN,EAAA,MAMAmjC,EAAA71B,EAAA3F,QACA7C,KAAA,SACAsK,OACAmmD,GAAA,EACAC,GAAA,EACAhV,EAAA,GAEAlf,UAAA,SAAAvB,EAAA3wB,EAAAuyB,GAGAA,GACA5B,EAAA60B,OAAAxlD,EAAAmmD,GAAAnmD,EAAAoxC,EAAApxC,EAAAomD,IAUAz1B,EAAAu1B,IAAAlmD,EAAAmmD,GAAAnmD,EAAAomD,GAAApmD,EAAAoxC,EAAA,IAAAvwC,KAAAyF,IAAA,KAIA5V,GAAAC,QAAAojC,G9J4tjCMi/F,KACA,SAAUtiI,EAAQC,EAASC,G+J5vjCjC,GAAAsN,GAAAtN,EAAA,MAMAmjC,EAAA71B,EAAA3F,QACA7C,KAAA,OACAsK,OAEAG,GAAA,EACAG,GAAA,EAEAF,GAAA,EACAG,GAAA,EACAqX,QAAA,GAEAjiB,OACAgM,OAAA,OACAC,KAAA,MAEAswB,UAAA,SAAAvB,EAAA3wB,GACA,GAAAG,GAAAH,EAAAG,GACAG,EAAAN,EAAAM,GACAF,EAAAJ,EAAAI,GACAG,EAAAP,EAAAO,GACAqX,EAAA5X,EAAA4X,OAEA,KAAAA,IAIA+Y,EAAA60B,OAAArlD,EAAAG,GAEAsX,EAAA,IACAxX,EAAAD,GAAA,EAAAyX,GAAAxX,EAAAwX,EACArX,EAAAD,GAAA,EAAAsX,GAAArX,EAAAqX,GAGA+Y,EAAA+0B,OAAAtlD,EAAAG,KAQAsyH,QAAA,SAAA3hF,GACA,GAAAlxC,GAAAtL,KAAAsL,KACA,QAAAA,EAAAG,IAAA,EAAA+wC,GAAAlxC,EAAAI,GAAA8wC,EAAAlxC,EAAAM,IAAA,EAAA4wC,GAAAlxC,EAAAO,GAAA2wC,KAIAxgD,GAAAC,QAAAojC,G/JkwjCMk/F,KACA,SAAUviI,EAAQC,EAASC,GgKxzjCjC,GAAAsN,GAAAtN,EAAA,MAEAsiI,EAAAtiI,EAAA,MAMAmjC,EAAA71B,EAAA3F,QACA7C,KAAA,UACAsK,OACAoM,OAAA,KACAw0E,QAAA,EACAG,iBAAA,MAEA7uD,UAAA,SAAAvB,EAAA3wB,GACAkzH,EAAAhhG,UAAAvB,EAAA3wB,GAAA,KAIAtP,GAAAC,QAAAojC,GhK8zjCMo/F,KACA,SAAUziI,EAAQC,EAASC,GiKn1jCjC,GAAAsN,GAAAtN,EAAA,MAEAsiI,EAAAtiI,EAAA,MAKAmjC,EAAA71B,EAAA3F,QACA7C,KAAA,WACAsK,OACAoM,OAAA,KACAw0E,QAAA,EACAG,iBAAA,MAEAprF,OACAgM,OAAA,OACAC,KAAA,MAEAswB,UAAA,SAAAvB,EAAA3wB,GACAkzH,EAAAhhG,UAAAvB,EAAA3wB,GAAA,KAIAtP,GAAAC,QAAAojC,GjKy1jCMq/F,KACA,SAAU1iI,EAAQC,EAASC,GkKj3jCjC,GAAAsN,GAAAtN,EAAA,MAEAmzF,EAAAnzF,EAAA,MAMAmjC,EAAA71B,EAAA3F,QACA7C,KAAA,OACAsK,OAMAoxC,EAAA,EACAhyC,EAAA,EACAC,EAAA,EACAnJ,MAAA,EACAC,OAAA,GAEA+7B,UAAA,SAAAvB,EAAA3wB,GACA,GAAAZ,GAAAY,EAAAZ,EACAC,EAAAW,EAAAX,EACAnJ,EAAA8J,EAAA9J,MACAC,EAAA6J,EAAA7J,MAEA6J,GAAAoxC,EAGA2yC,EAAA7xD,UAAAvB,EAAA3wB,GAFA2wB,EAAAnyB,KAAAY,EAAAC,EAAAnJ,EAAAC,GAKAw6B,EAAA+1B,cAKAh2D,GAAAC,QAAAojC,GlKu3jCMs/F,KACA,SAAU3iI,EAAQC,EAASC,GmK/5jCjC,GAAAsN,GAAAtN,EAAA,MAMAmjC,EAAA71B,EAAA3F,QACA7C,KAAA,OACAsK,OACAmmD,GAAA,EACAC,GAAA,EACAhV,EAAA,EACAovB,GAAA,GAEAtuC,UAAA,SAAAvB,EAAA3wB,GACA,GAAAZ,GAAAY,EAAAmmD,GACA9mD,EAAAW,EAAAomD,GACAy2B,EAAA,EAAAh8E,KAAAyF,EACAqqB,GAAA60B,OAAApmD,EAAAY,EAAAoxC,EAAA/xC,GACAsxB,EAAAu1B,IAAA9mD,EAAAC,EAAAW,EAAAoxC,EAAA,EAAAyrC,GAAA,GACAlsD,EAAA60B,OAAApmD,EAAAY,EAAAwgE,GAAAnhE,GACAsxB,EAAAu1B,IAAA9mD,EAAAC,EAAAW,EAAAwgE,GAAA,EAAAqc,GAAA,KAIAnsF,GAAAC,QAAAojC,GnKq6jCMu/F,KACA,SAAU5iI,EAAQC,EAASC,GoK/7jCjC,GAAAsN,GAAAtN,EAAA,MAEAgjG,EAAAhjG,EAAA,MAMAmjC,EAAA71B,EAAA3F,QACA7C,KAAA,SACAsK,OACAmmD,GAAA,EACAC,GAAA,EACAoa,GAAA,EACApvB,EAAA,EACAiV,WAAA,EACAC,SAAA,EAAAzlD,KAAAyF,GACAm6D,WAAA,GAEA/vC,MAAAkjE,EAAA11F,EAAArM,UAAA6+B,OACAwB,UAAA,SAAAvB,EAAA3wB,GACA,GAAAZ,GAAAY,EAAAmmD,GACA9mD,EAAAW,EAAAomD,GACAoa,EAAA3/D,KAAAC,IAAAd,EAAAwgE,IAAA,KACApvB,EAAAvwC,KAAAC,IAAAd,EAAAoxC,EAAA,GACAiV,EAAArmD,EAAAqmD,WACAC,EAAAtmD,EAAAsmD,SACAma,EAAAzgE,EAAAygE,UACA2xD,EAAAvxH,KAAA++B,IAAAymB,GACAgsE,EAAAxxH,KAAAg/B,IAAAwmB,EACA11B,GAAA60B,OAAA4sE,EAAA5xD,EAAAphE,EAAAizH,EAAA7xD,EAAAnhE,GACAsxB,EAAA+0B,OAAA0sE,EAAAhhF,EAAAhyC,EAAAizH,EAAAjhF,EAAA/xC,GACAsxB,EAAAu1B,IAAA9mD,EAAAC,EAAA+xC,EAAAiV,EAAAC,GAAAma,GACA9vC,EAAA+0B,OAAA7kD,KAAA++B,IAAA0mB,GAAAka,EAAAphE,EAAAyB,KAAAg/B,IAAAymB,GAAAka,EAAAnhE,GAEA,IAAAmhE,GACA7vC,EAAAu1B,IAAA9mD,EAAAC,EAAAmhE,EAAAla,EAAAD,EAAAoa,GAGA9vC,EAAA+1B,cAIAh2D,GAAAC,QAAAojC,GpKq8jCMw/F,KACA,SAAU7iI,EAAQC,EAASC,GqKj/jCjC,GAAAkqF,GAAAlqF,EAAA,MAEA0E,EAAA1E,EAAA,MAEAw3C,EAAAx3C,EAAA,MAEAkK,EAAAstC,EAAAttC,SACAD,EAAAutC,EAAAvtC,WACA7C,EAAAowC,EAAApwC,SACAsB,EAAA8uC,EAAA9uC,YACAT,EAAAuvC,EAAAvvC,QAMA89E,EAAA,WAKAjiF,KAAA0iF,aAGAT,GAAA9kF,WACAG,YAAA2kF,EAcAljD,QAAA,SAAA/0B,EAAA80B,GACA,GAAApgC,GACAogI,GAAA,EACA/xH,EAAA/M,KACAqoB,EAAAroB,KAAA0N,IAEA,IAAA1D,EAAA,CACA,GAAA+0H,GAAA/0H,EAAA0hB,MAAA,KACAhnB,EAAAqI,CAEA+xH,GAAA,UAAAC,EAAA,EAEA,QAAAngI,GAAA,EAAAywC,EAAA0vF,EAAAlgI,OAA8CD,EAAAywC,EAAOzwC,IACrD8F,IAIAA,IAAAq6H,EAAAngI,IAGA8F,KACAhG,EAAAgG,OAGAhG,GAAAqO,CAGA,KAAArO,EAEA,WADAkC,GAAA,aAAAoJ,EAAA,+BAAA+C,EAAAuO,GAIA,IAAAonE,GAAA31E,EAAA21E,UACA2B,EAAA,GAAA+B,GAAA1nF,EAAAogC,EAaA,OAZAulD,GAAAuC,OAAA,SAAAloF,GACAqO,EAAAoB,MAAA2wH,KACKp3C,KAAA,WAELhF,EAAAv7D,OAAAhjB,EAAAu+E,EAAA2B,GAAA,KAEA3B,EAAAr9E,KAAAg/E,GAEAh8D,GACAA,EAAA0B,UAAA44D,YAAA0B,GAGAA,GAOA9uE,cAAA,SAAAgyE,GAIA,OAHA7E,GAAA1iF,KAAA0iF,UACA9/E,EAAA8/E,EAAA7jF,OAEAD,EAAA,EAAmBA,EAAAgE,EAAShE,IAC5B8jF,EAAA9jF,GAAAu8C,KAAAosC,EAIA,OADA7E,GAAA7jF,OAAA,EACAmB,MAiCAsV,UAAA,SAAA5W,EAAAu8E,EAAAvc,EAAA4lB,EAAA7jF,EAAA+jF,GAkCA,QAAAkD,OACA7jE,GAGApjB,OApCA2F,EAAAs4D,IACAj+D,EAAA6jF,EACAA,EAAA5lB,EACAA,EAAA,GAEAv4D,EAAAm+E,IACA7jF,EAAA6jF,EACAA,EAAA,SACA5lB,EAAA,GAEAv4D,EAAAu4D,IACAj+D,EAAAi+D,EACAA,EAAA,GAEAv4D,EAAA80E,IACAx6E,EAAAw6E,EACAA,EAAA,KAEAA,IACAA,EAAA,KAIAj7E,KAAAuV,gBAEAvV,KAAAg/H,kBAAA,GAAAh/H,KAAAtB,EAAAu8E,EAAAvc,EAIA,IAAAgkB,GAAA1iF,KAAA0iF,UAAA37E,QACA8c,EAAA6+D,EAAA7jF,MAYAglB,IACApjB,MAKA,QAAA7B,GAAA,EAAmBA,EAAA8jF,EAAA7jF,OAAsBD,IACzC8jF,EAAA9jF,GAAA8oF,QAAA/5B,MAAA22B,EAAAE,IA6BAw6C,kBAAA,SAAAh1H,EAAAxH,EAAA9D,EAAAu8E,EAAAvc,GACA,GAAAugE,MACAC,EAAA,CAEA,QAAA98H,KAAA1D,GACA,GAAAA,EAAAyE,eAAAf,GAIA,SAAAI,EAAAJ,GACAkB,EAAA5E,EAAA0D,MAAAwC,EAAAlG,EAAA0D,IACApC,KAAAg/H,kBAAAh1H,IAAA,IAAA5H,IAAAI,EAAAJ,GAAA1D,EAAA0D,GAAA64E,EAAAvc,IAEAugE,EAAA78H,GAAA1D,EAAA0D,GACA88H,SAEO,UAAAxgI,EAAA0D,GAGP,GAAA4H,EAES,CAET,GAAArL,KACAA,GAAAqL,MACArL,EAAAqL,GAAA5H,GAAA1D,EAAA0D,GACApC,KAAAwV,KAAA7W,OANAqB,MAAAwV,KAAApT,EAAA1D,EAAA0D,GAeA,OAJA88H,GAAA,GACAl/H,KAAA++B,QAAA/0B,GAAA,GAAA08E,KAAA,MAAAzL,EAAA,IAAAA,EAAAgkD,GAAAvgE,SAAA,GAGA1+D,MAGA,IAAAq/B,GAAA4iD,CACAjmF,GAAAC,QAAAojC,GrKu/jCM8/F,KACA,SAAUnjI,EAAQC,GsKnvkCxB,QAAA8sH,KACA/oH,KAAAyP,GAAA,YAAAzP,KAAAo/H,WAAAp/H,MACAA,KAAAyP,GAAA,YAAAzP,KAAAq/H,MAAAr/H,MACAA,KAAAyP,GAAA,UAAAzP,KAAAs/H,SAAAt/H,MACAA,KAAAyP,GAAA,YAAAzP,KAAAs/H,SAAAt/H,MAgEA,QAAAqL,GAAA3M,EAAAqQ,GACA,OACArQ,SACA4pH,UAAAv5G,KAAAu5G,WA7DAS,EAAA5rH,WACAG,YAAAyrH,EACAqW,WAAA,SAAArwH,GACA,GAAAwwH,GAAAxwH,EAAArQ,MAEA6gI,MAAAl8D,YACArjE,KAAAw/H,gBAAAD,EACAA,EAAAj8D,UAAA,EACAtjE,KAAA4qG,GAAA77F,EAAA2qC,QACA15C,KAAA6qG,GAAA97F,EAAA+qC,QACA95C,KAAA2pH,kBAAAt+G,EAAAk0H,EAAAxwH,GAAA,YAAAA,EAAAwd,SAGA8yG,MAAA,SAAAtwH,GACA,GAAAwwH,GAAAv/H,KAAAw/H,eAEA,IAAAD,EAAA,CACA,GAAA70H,GAAAqE,EAAA2qC,QACA/uC,EAAAoE,EAAA+qC,QACApM,EAAAhjC,EAAA1K,KAAA4qG,GACAj9D,EAAAhjC,EAAA3K,KAAA6qG,EACA7qG,MAAA4qG,GAAAlgG,EACA1K,KAAA6qG,GAAAlgG,EACA40H,EAAAn6D,MAAA13B,EAAAC,EAAA5+B,GACA/O,KAAA2pH,kBAAAt+G,EAAAk0H,EAAAxwH,GAAA,OAAAA,EAAAwd,MACA,IAAAkzG,GAAAz/H,KAAAqyF,UAAA3nF,EAAAC,EAAA40H,GAAA7gI,OACAghI,EAAA1/H,KAAA2/H,WACA3/H,MAAA2/H,YAAAF,EAEAF,IAAAE,IACAC,GAAAD,IAAAC,GACA1/H,KAAA2pH,kBAAAt+G,EAAAq0H,EAAA3wH,GAAA,YAAAA,EAAAwd,OAGAkzG,OAAAC,GACA1/H,KAAA2pH,kBAAAt+G,EAAAo0H,EAAA1wH,GAAA,YAAAA,EAAAwd,UAKA+yG,SAAA,SAAAvwH,GACA,GAAAwwH,GAAAv/H,KAAAw/H,eAEAD,KACAA,EAAAj8D,UAAA,GAGAtjE,KAAA2pH,kBAAAt+G,EAAAk0H,EAAAxwH,GAAA,UAAAA,EAAAwd,OAEAvsB,KAAA2/H,aACA3/H,KAAA2pH,kBAAAt+G,EAAArL,KAAA2/H,YAAA5wH,GAAA,OAAAA,EAAAwd,OAGAvsB,KAAAw/H,gBAAA,KACAx/H,KAAA2/H,YAAA,MAWA,IAAAtgG,GAAA0pF,CACA/sH,GAAAC,QAAAojC,GtK2vkCMugG,KACA,SAAU5jI,EAAQC,EAASC,GuKjzkCjC,QAAA2jI,GAAAp0H,EAAAG,EAAAF,EAAAG,EAAAi0H,EAAAhsE,EAAAP,EAAAC,EAAAusE,EAAAvtE,EAAAxoD,GACA,GAAA6pD,GAAAksE,GAAAnuH,EAAA,KACAouH,EAAAnwE,EAAAgE,IAAApoD,EAAAC,GAAA,EAAAokD,EAAA+D,IAAAjoD,EAAAC,GAAA,EACAo0H,GAAA,EAAAnwE,EAAA+D,IAAApoD,EAAAC,GAAA,EAAAmkD,EAAAgE,IAAAjoD,EAAAC,GAAA,EACAq0H,EAAAF,KAAAzsE,KAAA0sE,KAAAzsE,IAEA0sE,GAAA,IACA3sE,GAAAre,EAAAgrF,GACA1sE,GAAAte,EAAAgrF,GAGA,IAAAz5G,IAAAq5G,IAAAhsE,GAAA,KAAA5e,GAAAqe,KAAAC,KAAAD,KAAA0sE,KAAAzsE,KAAAwsE,OAAAzsE,KAAA0sE,KAAAzsE,KAAAwsE,QAAA,EACAG,EAAA15G,EAAA8sC,EAAA0sE,EAAAzsE,EACA4sE,EAAA35G,GAAA+sC,EAAAwsE,EAAAzsE,EACA9B,GAAAhmD,EAAAC,GAAA,EAAAmkD,EAAAgE,GAAAssE,EAAArwE,EAAA+D,GAAAusE,EACA1uE,GAAA9lD,EAAAC,GAAA,EAAAikD,EAAA+D,GAAAssE,EAAAtwE,EAAAgE,GAAAusE,EACA5qF,EAAA6qF,GAAA,OAAAL,EAAAG,GAAA5sE,GAAA0sE,EAAAG,GAAA5sE,IACA8sE,IAAAN,EAAAG,GAAA5sE,GAAA0sE,EAAAG,GAAA5sE,GACAzyC,KAAA,EAAAi/G,EAAAG,GAAA5sE,IAAA,EAAA0sE,EAAAG,GAAA5sE,GACAI,EAAAysE,EAAAC,EAAAv/G,EAEAw/G,GAAAD,EAAAv/G,KAAA,IACA6yC,EAAAhiD,GAGA2uH,EAAAD,EAAAv/G,IAAA,IACA6yC,EAAA,GAGA,IAAAE,GAAAF,EAAA,IACAA,GAAA,EAAAhiD,GAGA,IAAAkiD,GAAAF,EAAA,IACAA,GAAA,EAAAhiD,GAGA5H,EAAA+mD,QAAAyB,EAAAf,EAAAC,EAAA6B,EAAAC,EAAAhe,EAAAoe,EAAAC,EAAAC,GAGA,QAAA0sE,GAAA37H,GACA,IAAAA,EACA,QAIA,IACA+vC,GADA6rF,EAAA57H,EAAAuT,QAAA,WAAAA,QAAA,WAAAA,QAAA,UAAAA,QAAA,UAGA,KAAAw8B,EAAA,EAAaA,EAAA8rF,EAAA7hI,OAAe+1C,IAC5B6rF,IAAAroH,QAAA,GAAAuoH,QAAAD,EAAA9rF,GAAA,SAAA8rF,EAAA9rF,GAIA,IAMAgsF,GANAn9G,EAAAg9G,EAAA/0G,MAAA,KAEAm1G,EAAA,EACAC,EAAA,EACA92H,EAAA,GAAAyxB,GACA+zB,EAAA/zB,EAAA+zB,GAGA,KAAA5a,EAAA,EAAaA,EAAAnxB,EAAA5kB,OAAgB+1C,IAAA,CAC7B,GAIA4d,GAJA9vC,EAAAe,EAAAmxB,GACAJ,EAAA9xB,EAAA0gB,OAAA,GACA7M,EAAA,EACAimB,EAAA95B,EAAA3b,MAAA,GAAAqR,QAAA,aAAAsT,MAAA,IAGA8wB,GAAA39C,OAAA,QAAA29C,EAAA,IACAA,EAAAzvB,OAGA,QAAAnuB,GAAA,EAAmBA,EAAA49C,EAAA39C,OAAcD,IACjC49C,EAAA59C,GAAAwkB,WAAAo5B,EAAA59C,GAGA,MAAA23B,EAAAimB,EAAA39C,SAAA+kB,MAAA44B,EAAAjmB,MACA3S,MAAA44B,EAAA,KADA,CAKA,GAAAukF,GACAC,EACAztE,EACAC,EACAK,EACAisE,EACAhsE,EACAroD,EAAAo1H,EACAj1H,EAAAk1H,CAEA,QAAAtsF,GACA,QACAqsF,GAAArkF,EAAAjmB,KACAuqG,GAAAtkF,EAAAjmB,KACAi8B,EAAAhD,EAAApR,EACAp0C,EAAA+mD,QAAAyB,EAAAquE,EAAAC,EACA,MAEA,SACAD,EAAArkF,EAAAjmB,KACAuqG,EAAAtkF,EAAAjmB,KACAi8B,EAAAhD,EAAApR,EACAp0C,EAAA+mD,QAAAyB,EAAAquE,EAAAC,EACA,MAEA,SACAD,GAAArkF,EAAAjmB,KACAuqG,GAAAtkF,EAAAjmB,KACAi8B,EAAAhD,EAAAjrB,EACAv6B,EAAA+mD,QAAAyB,EAAAquE,EAAAC,GACAtsF,EAAA,GACA,MAEA,SACAqsF,EAAArkF,EAAAjmB,KACAuqG,EAAAtkF,EAAAjmB,KACAi8B,EAAAhD,EAAAjrB,EACAv6B,EAAA+mD,QAAAyB,EAAAquE,EAAAC,GACAtsF,EAAA,GACA,MAEA,SACAqsF,GAAArkF,EAAAjmB,KACAi8B,EAAAhD,EAAApR,EACAp0C,EAAA+mD,QAAAyB,EAAAquE,EAAAC,EACA,MAEA,SACAD,EAAArkF,EAAAjmB,KACAi8B,EAAAhD,EAAApR,EACAp0C,EAAA+mD,QAAAyB,EAAAquE,EAAAC,EACA,MAEA,SACAA,GAAAtkF,EAAAjmB,KACAi8B,EAAAhD,EAAApR,EACAp0C,EAAA+mD,QAAAyB,EAAAquE,EAAAC,EACA,MAEA,SACAA,EAAAtkF,EAAAjmB,KACAi8B,EAAAhD,EAAApR,EACAp0C,EAAA+mD,QAAAyB,EAAAquE,EAAAC,EACA,MAEA,SACAtuE,EAAAhD,EAAA7a,EACA3qC,EAAA+mD,QAAAyB,EAAAhW,EAAAjmB,KAAAimB,EAAAjmB,KAAAimB,EAAAjmB,KAAAimB,EAAAjmB,KAAAimB,EAAAjmB,KAAAimB,EAAAjmB,MACAsqG,EAAArkF,EAAAjmB,EAAA,GACAuqG,EAAAtkF,EAAAjmB,EAAA,EACA,MAEA,SACAi8B,EAAAhD,EAAA7a,EACA3qC,EAAA+mD,QAAAyB,EAAAhW,EAAAjmB,KAAAsqG,EAAArkF,EAAAjmB,KAAAuqG,EAAAtkF,EAAAjmB,KAAAsqG,EAAArkF,EAAAjmB,KAAAuqG,EAAAtkF,EAAAjmB,KAAAsqG,EAAArkF,EAAAjmB,KAAAuqG,GACAD,GAAArkF,EAAAjmB,EAAA,GACAuqG,GAAAtkF,EAAAjmB,EAAA,EACA,MAEA,SACAwqG,EAAAF,EACAG,EAAAF,CACA,IAAAl+H,GAAAoH,EAAApH,MACA8G,EAAAM,EAAAnF,IAEA+7H,KAAApxE,EAAA7a,IACAosF,GAAAF,EAAAn3H,EAAA9G,EAAA,GACAo+H,GAAAF,EAAAp3H,EAAA9G,EAAA,IAGA4vD,EAAAhD,EAAA7a,EACAlpC,EAAA+wC,EAAAjmB,KACA3qB,EAAA4wC,EAAAjmB,KACAsqG,EAAArkF,EAAAjmB,KACAuqG,EAAAtkF,EAAAjmB,KACAvsB,EAAA+mD,QAAAyB,EAAAuuE,EAAAC,EAAAv1H,EAAAG,EAAAi1H,EAAAC,EACA,MAEA,SACAC,EAAAF,EACAG,EAAAF,CACA,IAAAl+H,GAAAoH,EAAApH,MACA8G,EAAAM,EAAAnF,IAEA+7H,KAAApxE,EAAA7a,IACAosF,GAAAF,EAAAn3H,EAAA9G,EAAA,GACAo+H,GAAAF,EAAAp3H,EAAA9G,EAAA,IAGA4vD,EAAAhD,EAAA7a,EACAlpC,EAAAo1H,EAAArkF,EAAAjmB,KACA3qB,EAAAk1H,EAAAtkF,EAAAjmB,KACAsqG,GAAArkF,EAAAjmB,KACAuqG,GAAAtkF,EAAAjmB,KACAvsB,EAAA+mD,QAAAyB,EAAAuuE,EAAAC,EAAAv1H,EAAAG,EAAAi1H,EAAAC,EACA,MAEA,SACAr1H,EAAA+wC,EAAAjmB,KACA3qB,EAAA4wC,EAAAjmB,KACAsqG,EAAArkF,EAAAjmB,KACAuqG,EAAAtkF,EAAAjmB,KACAi8B,EAAAhD,EAAAC,EACAzlD,EAAA+mD,QAAAyB,EAAA/mD,EAAAG,EAAAi1H,EAAAC,EACA,MAEA,SACAr1H,EAAA+wC,EAAAjmB,KAAAsqG,EACAj1H,EAAA4wC,EAAAjmB,KAAAuqG,EACAD,GAAArkF,EAAAjmB,KACAuqG,GAAAtkF,EAAAjmB,KACAi8B,EAAAhD,EAAAC,EACAzlD,EAAA+mD,QAAAyB,EAAA/mD,EAAAG,EAAAi1H,EAAAC,EACA,MAEA,SACAC,EAAAF,EACAG,EAAAF,CACA,IAAAl+H,GAAAoH,EAAApH,MACA8G,EAAAM,EAAAnF,IAEA+7H,KAAApxE,EAAAC,IACAsxE,GAAAF,EAAAn3H,EAAA9G,EAAA,GACAo+H,GAAAF,EAAAp3H,EAAA9G,EAAA,IAGAi+H,EAAArkF,EAAAjmB,KACAuqG,EAAAtkF,EAAAjmB,KACAi8B,EAAAhD,EAAAC,EACAzlD,EAAA+mD,QAAAyB,EAAAuuE,EAAAC,EAAAH,EAAAC,EACA,MAEA,SACAC,EAAAF,EACAG,EAAAF,CACA,IAAAl+H,GAAAoH,EAAApH,MACA8G,EAAAM,EAAAnF,IAEA+7H,KAAApxE,EAAAC,IACAsxE,GAAAF,EAAAn3H,EAAA9G,EAAA,GACAo+H,GAAAF,EAAAp3H,EAAA9G,EAAA,IAGAi+H,GAAArkF,EAAAjmB,KACAuqG,GAAAtkF,EAAAjmB,KACAi8B,EAAAhD,EAAAC,EACAzlD,EAAA+mD,QAAAyB,EAAAuuE,EAAAC,EAAAH,EAAAC,EACA,MAEA,SACAvtE,EAAA/W,EAAAjmB,KACAi9B,EAAAhX,EAAAjmB,KACAs9B,EAAArX,EAAAjmB,KACAupG,EAAAtjF,EAAAjmB,KACAu9B,EAAAtX,EAAAjmB,KACA9qB,EAAAo1H,EAAAj1H,EAAAk1H,EACAD,EAAArkF,EAAAjmB,KACAuqG,EAAAtkF,EAAAjmB,KACAi8B,EAAAhD,EAAA/a,EACAorF,EAAAp0H,EAAAG,EAAAi1H,EAAAC,EAAAhB,EAAAhsE,EAAAP,EAAAC,EAAAK,EAAArB,EAAAxoD,EACA,MAEA,SACAupD,EAAA/W,EAAAjmB,KACAi9B,EAAAhX,EAAAjmB,KACAs9B,EAAArX,EAAAjmB,KACAupG,EAAAtjF,EAAAjmB,KACAu9B,EAAAtX,EAAAjmB,KACA9qB,EAAAo1H,EAAAj1H,EAAAk1H,EACAD,GAAArkF,EAAAjmB,KACAuqG,GAAAtkF,EAAAjmB,KACAi8B,EAAAhD,EAAA/a,EACAorF,EAAAp0H,EAAAG,EAAAi1H,EAAAC,EAAAhB,EAAAhsE,EAAAP,EAAAC,EAAAK,EAAArB,EAAAxoD,IAKA,MAAAwqC,GAAA,MAAAA,IACAge,EAAAhD,EAAAE,EACA1lD,EAAA+mD,QAAAyB,IAGAouE,EAAApuE,EAIA,MADAxoD,GAAAioD,WACAjoD,EAIA,QAAAi3H,GAAAv+G,EAAAnZ,GACA,GAAA23H,GAAAV,EAAA99G,EAuBA,OAtBAnZ,SAEAA,EAAAi0B,UAAA,SAAAxzB,GACA,GAAAA,EAAAooD,QAAA,CACApoD,EAAAooD,QAAA8uE,EAAAr8H,KAEA,IAAAo3B,GAAAjyB,EAAAhG,YAEAi4B,IACAjyB,EAAAyzB,YAAAxB,OAEK,CACL,GAAAA,GAAAjyB,CACAk3H,GAAAzjG,YAAAxB,KAIA1yB,EAAAyB,eAAA,SAAAE,GACAi2H,EAAAD,EAAAh2H,GACAlL,KAAAmO,OAAA,IAGA5E,EASA,QAAAU,GAAAyY,EAAAnZ,GACA,UAAAC,GAAAy3H,EAAAv+G,EAAAnZ,IASA,QAAAK,GAAA8Y,EAAAnZ,GACA,MAAAC,GAAA3F,OAAAo9H,EAAAv+G,EAAAnZ,IAUA,QAAA8P,GAAA+nH,EAAA73H,GAIA,OAHA83H,MACAz+H,EAAAw+H,EAAAviI,OAEAD,EAAA,EAAiBA,EAAAgE,EAAShE,IAAA,CAC1B,GAAA0iI,GAAAF,EAAAxiI,EAEA0iI,GAAAt3H,MACAs3H,EAAAxjG,kBAGAwjG,EAAAxlG,aACAwlG,EAAA9jG,UAAA8jG,EAAAt3H,KAAAs3H,EAAAh2H,OAAA,GAGA+1H,EAAAh8H,KAAAi8H,EAAAt3H,MAGA,GAAAu3H,GAAA,GAAA/3H,GAAAD,EAcA,OAZAg4H,GAAAzjG,kBAEAyjG,EAAA/jG,UAAA,SAAAxzB,GACAA,EAAAqoD,WAAAgvE,EAEA,IAAAplG,GAAAjyB,EAAAhG,YAEAi4B,IACAjyB,EAAAyzB,YAAAxB,IAIAslG,EAnZA,GAAA/3H,GAAAtN,EAAA,MAEAu/B,EAAAv/B,EAAA,MAEAilI,EAAAjlI,EAAA,MAGAwkI,GAAA,iFACAxrF,EAAA/oC,KAAAoV,KACAuuC,EAAA3jD,KAAAg/B,IACA0kB,EAAA1jD,KAAA++B,IACAt5B,EAAAzF,KAAAyF,GAEA4vH,EAAA,SAAAzgH,GACA,MAAA5U,MAAAoV,KAAAR,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,KAGAw/G,EAAA,SAAAD,EAAAv/G,GACA,OAAAu/G,EAAA,GAAAv/G,EAAA,GAAAu/G,EAAA,GAAAv/G,EAAA,KAAAygH,EAAAlB,GAAAkB,EAAAzgH,KAGAs/G,EAAA,SAAAC,EAAAv/G,GACA,OAAAu/G,EAAA,GAAAv/G,EAAA,GAAAu/G,EAAA,GAAAv/G,EAAA,SAAA5U,KAAAspC,KAAA8qF,EAAAD,EAAAv/G,IAgYA9kB,GAAAgO,mBACAhO,EAAA2N,mBACA3N,EAAAod,avKg1kCMooH,KACA,SAAUzlI,EAAQC,EAASC,GwK/tlCjC,QAAAmjC,GAAAr1B,EAAAkB,GACA,GACAsnD,GACAkvE,EACA9iI,EACA4d,EACAunB,EACAyY,EANA33C,EAAAmF,EAAAnF,KAOA0/B,EAAAirB,EAAAjrB,EACAoQ,EAAA6a,EAAA7a,EACAyJ,EAAAoR,EAAApR,EACAL,EAAAyR,EAAAzR,EACAtJ,EAAA+a,EAAA/a,EACAgb,EAAAD,EAAAC,CAEA,KAAA7wD,EAAA,EAAA4d,EAAA,EAAoB5d,EAAAiG,EAAAhG,QAAiB,CAKrC,OAJA2zD,EAAA3tD,EAAAjG,KACA4d,EAAA5d,EACA8iI,EAAA,EAEAlvE,GACA,IAAAjuB,GAIA,IAAA6Z,GACAsjF,EAAA,CACA,MAEA,KAAA/sF,GACA+sF,EAAA,CACA,MAEA,KAAAjyE,GACAiyE,EAAA,CACA,MAEA,KAAAjtF,GACA,GAAA/pC,GAAAQ,EAAA,GACAP,EAAAO,EAAA,GACA61B,EAAAmU,EAAAhqC,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IACA81B,EAAAkU,EAAAhqC,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IACAusD,EAAAkqE,GAAAz2H,EAAA,GAAA81B,EAAA91B,EAAA,GAAA61B,EAEAl8B,GAAAjG,IAAAmiC,EACAl8B,EAAAjG,MAAA8L,EAEA7F,EAAAjG,IAAAoiC,EACAn8B,EAAAjG,MAAA+L,EAGA9F,EAAAjG,MAAAmiC,EACAl8B,EAAAjG,MAAAoiC,EAEAn8B,EAAAjG,MAAA64D,EAEA5yD,EAAAjG,MAAA64D,EAEA74D,GAAA,EACA4d,EAAA5d,CACA,MAEA,KAAAm/C,GAEAvB,EAAA,GAAA33C,EAAAjG,KACA49C,EAAA,GAAA33C,EAAAjG,KACA0hC,EAAAkc,IAAAtxC,GACArG,EAAA2X,KAAAggC,EAAA,GACA33C,EAAA2X,KAAAggC,EAAA,GAEAA,EAAA,IAAA33C,EAAAjG,KACA49C,EAAA,IAAA33C,EAAAjG,KACA0hC,EAAAkc,IAAAtxC,GACArG,EAAA2X,KAAAggC,EAAA,GACA33C,EAAA2X,KAAAggC,EAAA,GAGA,IAAAzY,EAAA,EAAeA,EAAA29F,EAAY39F,IAAA,CAC3B,GAAAyY,GAAA9kC,EAAAqsB,EACAyY,GAAA,GAAA33C,EAAAjG,KACA49C,EAAA,GAAA33C,EAAAjG,KACA0hC,EAAAkc,IAAAtxC,GAEArG,EAAA2X,KAAAggC,EAAA,GACA33C,EAAA2X,KAAAggC,EAAA,KA9FA,GAAA/gB,GAAAv/B,EAAA,MAEA27C,EAAA37C,EAAA,MAEAokC,EAAAuX,EAAA7sC,eACAwkD,EAAA/zB,EAAA+zB,IACA93C,aACAw9B,EAAA/oC,KAAAoV,KACAogH,EAAAx1H,KAAAgkF,KA2FAn0F,GAAAC,QAAAojC,GxK+ulCMuiG,KACA,SAAU5lI,EAAQC,EAASC,GyKn1lCjCD,EAAAD,EAAAC,QAAAC,EAAA,QAAAw+C,IAKAz+C,EAAAoJ,MAAArJ,EAAA4C,EAAA,+ZAAob,MzK41lC9aijI,KACA,SAAU7lI,EAAQC,EAASC,G0K/1lCjC,GAAAm1E,GAAAn1E,EAAA,KACA,kBAAAm1E,SAAAr1E,EAAA4C,EAAAyyE,EAAA,KAEA,IAEAtrC,IAAe+7F,KAAA,EACf/7F,GAAA5vB,cAHAA,EAKAja,GAAA,IAAAm1E,EAAAtrC,EACAsrC,GAAA0wD,SAAA/lI,EAAAC,QAAAo1E,EAAA0wD,S1Kq3lCMC,KACA,SAAUhmI,EAAQC,EAASC,G2Kl4lCjCF,EAAAC,QAAAC,EAAAsgD,EAAA,iC3Kw4lCMylF,KACA,SAAUjmI,EAAQC,EAASC,G4Kz4lCjCF,EAAAC,QAAAC,EAAAsgD,EAAA,iC5K+4lCM0lF,KACA,SAAUlmI,EAAQC,EAASC,G6Kh5lCjCF,EAAAC,QAAAC,EAAAsgD,EAAA","file":"static/js/3.5bf7afd4.chunk.js","sourcesContent":["webpackJsonp([3],{\n\n/***/ 1382:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(exports,\"__esModule\",{value:true});var _card=__webpack_require__(168);var _card2=_interopRequireDefault(_card);var _row=__webpack_require__(45);var _row2=_interopRequireDefault(_row);var _col=__webpack_require__(52);var _col2=_interopRequireDefault(_col);var _select=__webpack_require__(21);var _select2=_interopRequireDefault(_select);var _tabs=__webpack_require__(29);var _tabs2=_interopRequireDefault(_tabs);var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();__webpack_require__(262);__webpack_require__(51);__webpack_require__(56);__webpack_require__(27);__webpack_require__(31);var _react=__webpack_require__(0);var _react2=_interopRequireDefault(_react);var _utils=__webpack_require__(20);var _echarts=__webpack_require__(1490);var _echarts2=_interopRequireDefault(_echarts);__webpack_require__(1676);__webpack_require__(1684);__webpack_require__(1698);__webpack_require__(1697);var _bie=__webpack_require__(2381);var _bie2=_interopRequireDefault(_bie);var _line=__webpack_require__(2387);var _line2=_interopRequireDefault(_line);var _bar=__webpack_require__(2380);var _bar2=_interopRequireDefault(_bar);var _createHashHistory=__webpack_require__(57);var _createHashHistory2=_interopRequireDefault(_createHashHistory);__webpack_require__(2353);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _objectDestructuringEmpty(obj){if(obj==null)throw new TypeError(\"Cannot destructure undefined\");}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return call&&(typeof call===\"object\"||typeof call===\"function\")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function, not \"+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var TabPane=_tabs2.default.TabPane;var Option=_select2.default.Option;var ShowCustomerDetails=function(_React$Component){_inherits(ShowCustomerDetails,_React$Component);function ShowCustomerDetails(props){_classCallCheck(this,ShowCustomerDetails);var _this2=_possibleConstructorReturn(this,(ShowCustomerDetails.__proto__||Object.getPrototypeOf(ShowCustomerDetails)).call(this,props));_this2.state={cust:{},addr:[],order:[],fileList:[],statistics:{}};_this2.callback=_this2.callback.bind(_this2);return _this2;}_createClass(ShowCustomerDetails,[{key:'callback',value:function callback(key){console.log(key);}},{key:'componentDidMount',value:function componentDidMount(){var _this=this;}},{key:'render',value:function render(){_objectDestructuringEmpty(this.state);var props={action:'//jsonplaceholder.typicode.com/posts/',listType:\"picture-card\"};return _react2.default.createElement('div',null,_react2.default.createElement(_card2.default,{hoverable:true,title:'\\u6570\\u636E\\u62A5\\u8868',type:'card'},_react2.default.createElement(_row2.default,{style:{marginBottom:'5px'}},_react2.default.createElement('div',{style:{background:'rgb(240, 242, 245)',padding:'10px',boxSizing:'border-box',boxShadow:'0 0 2px rgb(212,212,200)'}},_react2.default.createElement('span',{style:{display:'table-cell',width:'150px',height:'150px',verticalAlign:'middle'}},_react2.default.createElement('img',{src:_bie2.default})),_react2.default.createElement('span',{style:{display:'table-cell',width:'100%',paddingLeft:'60px',verticalAlign:'middle'}},_react2.default.createElement(_row2.default,null,_react2.default.createElement(_col2.default,null,_react2.default.createElement('div',{style:{fontSize:'18px',fontWeight:'600'}},'\\u7F3A\\u9677\\u5206\\u5E03\\u56FE'))),_react2.default.createElement(_row2.default,{style:{marginTop:'25px'}},_react2.default.createElement(_col2.default,null,_react2.default.createElement('div',{className:'tbox-content'},_react2.default.createElement('div',{className:'my-fb'},_react2.default.createElement('ul',null,_react2.default.createElement('li',null,'\\u7F3A\\u9677\\u72B6\\u6001\\u5206\\u5E03\\u56FE'),_react2.default.createElement('li',null,'\\u7F3A\\u9677\\u4E25\\u91CD\\u7EA7\\u522B\\u5206\\u5E03\\u56FE'),_react2.default.createElement('li',null,'\\u7F3A\\u9677\\u6839\\u6E90\\u5206\\u5E03\\u56FE'))))))))),_react2.default.createElement(_row2.default,{style:{marginBottom:'5px'}},_react2.default.createElement('div',{style:{background:'rgb(240, 242, 245)',padding:'10px',boxSizing:'border-box',boxShadow:'0 0 2px rgb(212,212,200)'}},_react2.default.createElement('span',{style:{display:'table-cell',width:'150px',height:'150px',verticalAlign:'middle'}},_react2.default.createElement('img',{src:_line2.default})),_react2.default.createElement('span',{style:{display:'table-cell',width:'100%',paddingLeft:'60px',verticalAlign:'middle'}},_react2.default.createElement(_row2.default,null,_react2.default.createElement(_col2.default,null,_react2.default.createElement('div',{style:{fontSize:'18px',fontWeight:'600'}},'\\u7F3A\\u9677\\u5206\\u5E03\\u56FE'))),_react2.default.createElement(_row2.default,{style:{marginTop:'25px'}},_react2.default.createElement(_col2.default,null,_react2.default.createElement('div',{className:'tbox-content'},_react2.default.createElement('div',{className:'my-fb'},_react2.default.createElement('ul',null,_react2.default.createElement('li',null,'\\u7F3A\\u9677\\u72B6\\u6001\\u5206\\u5E03\\u56FE'),_react2.default.createElement('li',null,'\\u7F3A\\u9677\\u4E25\\u91CD\\u7EA7\\u522B\\u5206\\u5E03\\u56FE'),_react2.default.createElement('li',null,'\\u7F3A\\u9677\\u6839\\u6E90\\u5206\\u5E03\\u56FE'))))))))),_react2.default.createElement(_row2.default,null,_react2.default.createElement('div',{style:{background:'rgb(240, 242, 245)',padding:'10px',boxSizing:'border-box',boxShadow:'0 0 2px rgb(212,212,200)'}},_react2.default.createElement('span',{style:{display:'table-cell',width:'150px',height:'150px',verticalAlign:'middle'}},_react2.default.createElement('img',{src:_bar2.default})),_react2.default.createElement('span',{style:{display:'table-cell',width:'100%',paddingLeft:'60px',verticalAlign:'middle'}},_react2.default.createElement(_row2.default,null,_react2.default.createElement(_col2.default,null,_react2.default.createElement('div',{style:{fontSize:'18px',fontWeight:'600'}},'\\u7F3A\\u9677\\u5206\\u5E03\\u56FE'))),_react2.default.createElement(_row2.default,{style:{marginTop:'25px'}},_react2.default.createElement(_col2.default,null,_react2.default.createElement('div',{className:'tbox-content'},_react2.default.createElement('div',{className:'my-fb'},_react2.default.createElement('ul',null,_react2.default.createElement('li',null,'\\u7F3A\\u9677\\u72B6\\u6001\\u5206\\u5E03\\u56FE'),_react2.default.createElement('li',null,'\\u7F3A\\u9677\\u4E25\\u91CD\\u7EA7\\u522B\\u5206\\u5E03\\u56FE'),_react2.default.createElement('li',null,'\\u7F3A\\u9677\\u6839\\u6E90\\u5206\\u5E03\\u56FE'))))))))),_react2.default.createElement(_row2.default,null)));}}]);return ShowCustomerDetails;}(_react2.default.Component);exports.default=ShowCustomerDetails;module.exports=exports['default'];\n\n/***/ }),\n\n/***/ 1479:\n/***/ (function(module, exports) {\n\n/**\n * @module zrender/core/util\n */\n// 用于处理merge时无法遍历Date等对象的问题\nvar BUILTIN_OBJECT = {\n  '[object Function]': 1,\n  '[object RegExp]': 1,\n  '[object Date]': 1,\n  '[object Error]': 1,\n  '[object CanvasGradient]': 1,\n  '[object CanvasPattern]': 1,\n  // For node-canvas\n  '[object Image]': 1,\n  '[object Canvas]': 1\n};\nvar TYPED_ARRAY = {\n  '[object Int8Array]': 1,\n  '[object Uint8Array]': 1,\n  '[object Uint8ClampedArray]': 1,\n  '[object Int16Array]': 1,\n  '[object Uint16Array]': 1,\n  '[object Int32Array]': 1,\n  '[object Uint32Array]': 1,\n  '[object Float32Array]': 1,\n  '[object Float64Array]': 1\n};\nvar objToString = Object.prototype.toString;\nvar arrayProto = Array.prototype;\nvar nativeForEach = arrayProto.forEach;\nvar nativeFilter = arrayProto.filter;\nvar nativeSlice = arrayProto.slice;\nvar nativeMap = arrayProto.map;\nvar nativeReduce = arrayProto.reduce; // Avoid assign to an exported variable, for transforming to cjs.\n\nvar methods = {};\n\nfunction $override(name, fn) {\n  methods[name] = fn;\n}\n/**\n * Those data types can be cloned:\n *     Plain object, Array, TypedArray, number, string, null, undefined.\n * Those data types will be assgined using the orginal data:\n *     BUILTIN_OBJECT\n * Instance of user defined class will be cloned to a plain object, without\n * properties in prototype.\n * Other data types is not supported (not sure what will happen).\n *\n * Caution: do not support clone Date, for performance consideration.\n * (There might be a large number of date in `series.data`).\n * So date should not be modified in and out of echarts.\n *\n * @param {*} source\n * @return {*} new\n */\n\n\nfunction clone(source) {\n  if (source == null || typeof source != 'object') {\n    return source;\n  }\n\n  var result = source;\n  var typeStr = objToString.call(source);\n\n  if (typeStr === '[object Array]') {\n    result = [];\n\n    for (var i = 0, len = source.length; i < len; i++) {\n      result[i] = clone(source[i]);\n    }\n  } else if (TYPED_ARRAY[typeStr]) {\n    var Ctor = source.constructor;\n\n    if (source.constructor.from) {\n      result = Ctor.from(source);\n    } else {\n      result = new Ctor(source.length);\n\n      for (var i = 0, len = source.length; i < len; i++) {\n        result[i] = clone(source[i]);\n      }\n    }\n  } else if (!BUILTIN_OBJECT[typeStr] && !isPrimitive(source) && !isDom(source)) {\n    result = {};\n\n    for (var key in source) {\n      if (source.hasOwnProperty(key)) {\n        result[key] = clone(source[key]);\n      }\n    }\n  }\n\n  return result;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} target\n * @param {*} source\n * @param {boolean} [overwrite=false]\n */\n\n\nfunction merge(target, source, overwrite) {\n  // We should escapse that source is string\n  // and enter for ... in ...\n  if (!isObject(source) || !isObject(target)) {\n    return overwrite ? clone(source) : target;\n  }\n\n  for (var key in source) {\n    if (source.hasOwnProperty(key)) {\n      var targetProp = target[key];\n      var sourceProp = source[key];\n\n      if (isObject(sourceProp) && isObject(targetProp) && !isArray(sourceProp) && !isArray(targetProp) && !isDom(sourceProp) && !isDom(targetProp) && !isBuiltInObject(sourceProp) && !isBuiltInObject(targetProp) && !isPrimitive(sourceProp) && !isPrimitive(targetProp)) {\n        // 如果需要递归覆盖，就递归调用merge\n        merge(targetProp, sourceProp, overwrite);\n      } else if (overwrite || !(key in target)) {\n        // 否则只处理overwrite为true，或者在目标对象中没有此属性的情况\n        // NOTE，在 target[key] 不存在的时候也是直接覆盖\n        target[key] = clone(source[key], true);\n      }\n    }\n  }\n\n  return target;\n}\n/**\n * @param {Array} targetAndSources The first item is target, and the rests are source.\n * @param {boolean} [overwrite=false]\n * @return {*} target\n */\n\n\nfunction mergeAll(targetAndSources, overwrite) {\n  var result = targetAndSources[0];\n\n  for (var i = 1, len = targetAndSources.length; i < len; i++) {\n    result = merge(result, targetAndSources[i], overwrite);\n  }\n\n  return result;\n}\n/**\n * @param {*} target\n * @param {*} source\n * @memberOf module:zrender/core/util\n */\n\n\nfunction extend(target, source) {\n  for (var key in source) {\n    if (source.hasOwnProperty(key)) {\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n/**\n * @param {*} target\n * @param {*} source\n * @param {boolean} [overlay=false]\n * @memberOf module:zrender/core/util\n */\n\n\nfunction defaults(target, source, overlay) {\n  for (var key in source) {\n    if (source.hasOwnProperty(key) && (overlay ? source[key] != null : target[key] == null)) {\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nvar createCanvas = function () {\n  return methods.createCanvas();\n};\n\nmethods.createCanvas = function () {\n  return document.createElement('canvas');\n}; // FIXME\n\n\nvar _ctx;\n\nfunction getContext() {\n  if (!_ctx) {\n    // Use util.createCanvas instead of createCanvas\n    // because createCanvas may be overwritten in different environment\n    _ctx = createCanvas().getContext('2d');\n  }\n\n  return _ctx;\n}\n/**\n * 查询数组中元素的index\n * @memberOf module:zrender/core/util\n */\n\n\nfunction indexOf(array, value) {\n  if (array) {\n    if (array.indexOf) {\n      return array.indexOf(value);\n    }\n\n    for (var i = 0, len = array.length; i < len; i++) {\n      if (array[i] === value) {\n        return i;\n      }\n    }\n  }\n\n  return -1;\n}\n/**\n * 构造类继承关系\n *\n * @memberOf module:zrender/core/util\n * @param {Function} clazz 源类\n * @param {Function} baseClazz 基类\n */\n\n\nfunction inherits(clazz, baseClazz) {\n  var clazzPrototype = clazz.prototype;\n\n  function F() {}\n\n  F.prototype = baseClazz.prototype;\n  clazz.prototype = new F();\n\n  for (var prop in clazzPrototype) {\n    clazz.prototype[prop] = clazzPrototype[prop];\n  }\n\n  clazz.prototype.constructor = clazz;\n  clazz.superClass = baseClazz;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Object|Function} target\n * @param {Object|Function} sorce\n * @param {boolean} overlay\n */\n\n\nfunction mixin(target, source, overlay) {\n  target = 'prototype' in target ? target.prototype : target;\n  source = 'prototype' in source ? source.prototype : source;\n  defaults(target, source, overlay);\n}\n/**\n * Consider typed array.\n * @param {Array|TypedArray} data\n */\n\n\nfunction isArrayLike(data) {\n  if (!data) {\n    return;\n  }\n\n  if (typeof data == 'string') {\n    return false;\n  }\n\n  return typeof data.length == 'number';\n}\n/**\n * 数组或对象遍历\n * @memberOf module:zrender/core/util\n * @param {Object|Array} obj\n * @param {Function} cb\n * @param {*} [context]\n */\n\n\nfunction each(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.forEach && obj.forEach === nativeForEach) {\n    obj.forEach(cb, context);\n  } else if (obj.length === +obj.length) {\n    for (var i = 0, len = obj.length; i < len; i++) {\n      cb.call(context, obj[i], i, obj);\n    }\n  } else {\n    for (var key in obj) {\n      if (obj.hasOwnProperty(key)) {\n        cb.call(context, obj[key], key, obj);\n      }\n    }\n  }\n}\n/**\n * 数组映射\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {*} [context]\n * @return {Array}\n */\n\n\nfunction map(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.map && obj.map === nativeMap) {\n    return obj.map(cb, context);\n  } else {\n    var result = [];\n\n    for (var i = 0, len = obj.length; i < len; i++) {\n      result.push(cb.call(context, obj[i], i, obj));\n    }\n\n    return result;\n  }\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {Object} [memo]\n * @param {*} [context]\n * @return {Array}\n */\n\n\nfunction reduce(obj, cb, memo, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.reduce && obj.reduce === nativeReduce) {\n    return obj.reduce(cb, memo, context);\n  } else {\n    for (var i = 0, len = obj.length; i < len; i++) {\n      memo = cb.call(context, memo, obj[i], i, obj);\n    }\n\n    return memo;\n  }\n}\n/**\n * 数组过滤\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {*} [context]\n * @return {Array}\n */\n\n\nfunction filter(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.filter && obj.filter === nativeFilter) {\n    return obj.filter(cb, context);\n  } else {\n    var result = [];\n\n    for (var i = 0, len = obj.length; i < len; i++) {\n      if (cb.call(context, obj[i], i, obj)) {\n        result.push(obj[i]);\n      }\n    }\n\n    return result;\n  }\n}\n/**\n * 数组项查找\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {*} [context]\n * @return {*}\n */\n\n\nfunction find(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  for (var i = 0, len = obj.length; i < len; i++) {\n    if (cb.call(context, obj[i], i, obj)) {\n      return obj[i];\n    }\n  }\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Function} func\n * @param {*} context\n * @return {Function}\n */\n\n\nfunction bind(func, context) {\n  var args = nativeSlice.call(arguments, 2);\n  return function () {\n    return func.apply(context, args.concat(nativeSlice.call(arguments)));\n  };\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Function} func\n * @return {Function}\n */\n\n\nfunction curry(func) {\n  var args = nativeSlice.call(arguments, 1);\n  return function () {\n    return func.apply(this, args.concat(nativeSlice.call(arguments)));\n  };\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isArray(value) {\n  return objToString.call(value) === '[object Array]';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isFunction(value) {\n  return typeof value === 'function';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isString(value) {\n  return objToString.call(value) === '[object String]';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isObject(value) {\n  // Avoid a V8 JIT bug in Chrome 19-20.\n  // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n  var type = typeof value;\n  return type === 'function' || !!value && type == 'object';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isBuiltInObject(value) {\n  return !!BUILTIN_OBJECT[objToString.call(value)];\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isDom(value) {\n  return typeof value === 'object' && typeof value.nodeType === 'number' && typeof value.ownerDocument === 'object';\n}\n/**\n * Whether is exactly NaN. Notice isNaN('a') returns true.\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction eqNaN(value) {\n  return value !== value;\n}\n/**\n * If value1 is not null, then return value1, otherwise judget rest of values.\n * Low performance.\n * @memberOf module:zrender/core/util\n * @return {*} Final value\n */\n\n\nfunction retrieve(values) {\n  for (var i = 0, len = arguments.length; i < len; i++) {\n    if (arguments[i] != null) {\n      return arguments[i];\n    }\n  }\n}\n\nfunction retrieve2(value0, value1) {\n  return value0 != null ? value0 : value1;\n}\n\nfunction retrieve3(value0, value1, value2) {\n  return value0 != null ? value0 : value1 != null ? value1 : value2;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Array} arr\n * @param {number} startIndex\n * @param {number} endIndex\n * @return {Array}\n */\n\n\nfunction slice() {\n  return Function.call.apply(nativeSlice, arguments);\n}\n/**\n * Normalize css liked array configuration\n * e.g.\n *  3 => [3, 3, 3, 3]\n *  [4, 2] => [4, 2, 4, 2]\n *  [4, 3, 2] => [4, 3, 2, 3]\n * @param {number|Array.<number>} val\n * @return {Array.<number>}\n */\n\n\nfunction normalizeCssArray(val) {\n  if (typeof val === 'number') {\n    return [val, val, val, val];\n  }\n\n  var len = val.length;\n\n  if (len === 2) {\n    // vertical | horizontal\n    return [val[0], val[1], val[0], val[1]];\n  } else if (len === 3) {\n    // top | horizontal | bottom\n    return [val[0], val[1], val[2], val[1]];\n  }\n\n  return val;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {boolean} condition\n * @param {string} message\n */\n\n\nfunction assert(condition, message) {\n  if (!condition) {\n    throw new Error(message);\n  }\n}\n\nvar primitiveKey = '__ec_primitive__';\n/**\n * Set an object as primitive to be ignored traversing children in clone or merge\n */\n\nfunction setAsPrimitive(obj) {\n  obj[primitiveKey] = true;\n}\n\nfunction isPrimitive(obj) {\n  return obj[primitiveKey];\n}\n/**\n * @constructor\n * @param {Object} obj Only apply `ownProperty`.\n */\n\n\nfunction HashMap(obj) {\n  obj && each(obj, function (value, key) {\n    this.set(key, value);\n  }, this);\n} // Add prefix to avoid conflict with Object.prototype.\n\n\nvar HASH_MAP_PREFIX = '_ec_';\nvar HASH_MAP_PREFIX_LENGTH = 4;\nHashMap.prototype = {\n  constructor: HashMap,\n  // Do not provide `has` method to avoid defining what is `has`.\n  // (We usually treat `null` and `undefined` as the same, different\n  // from ES6 Map).\n  get: function (key) {\n    return this[HASH_MAP_PREFIX + key];\n  },\n  set: function (key, value) {\n    this[HASH_MAP_PREFIX + key] = value; // Comparing with invocation chaining, `return value` is more commonly\n    // used in this case: `var someVal = map.set('a', genVal());`\n\n    return value;\n  },\n  // Although util.each can be performed on this hashMap directly, user\n  // should not use the exposed keys, who are prefixed.\n  each: function (cb, context) {\n    context !== void 0 && (cb = bind(cb, context));\n\n    for (var prefixedKey in this) {\n      this.hasOwnProperty(prefixedKey) && cb(this[prefixedKey], prefixedKey.slice(HASH_MAP_PREFIX_LENGTH));\n    }\n  },\n  // Do not use this method if performance sensitive.\n  removeKey: function (key) {\n    delete this[HASH_MAP_PREFIX + key];\n  }\n};\n\nfunction createHashMap(obj) {\n  return new HashMap(obj);\n}\n\nfunction noop() {}\n\nexports.$override = $override;\nexports.clone = clone;\nexports.merge = merge;\nexports.mergeAll = mergeAll;\nexports.extend = extend;\nexports.defaults = defaults;\nexports.createCanvas = createCanvas;\nexports.getContext = getContext;\nexports.indexOf = indexOf;\nexports.inherits = inherits;\nexports.mixin = mixin;\nexports.isArrayLike = isArrayLike;\nexports.each = each;\nexports.map = map;\nexports.reduce = reduce;\nexports.filter = filter;\nexports.find = find;\nexports.bind = bind;\nexports.curry = curry;\nexports.isArray = isArray;\nexports.isFunction = isFunction;\nexports.isString = isString;\nexports.isObject = isObject;\nexports.isBuiltInObject = isBuiltInObject;\nexports.isDom = isDom;\nexports.eqNaN = eqNaN;\nexports.retrieve = retrieve;\nexports.retrieve2 = retrieve2;\nexports.retrieve3 = retrieve3;\nexports.slice = slice;\nexports.normalizeCssArray = normalizeCssArray;\nexports.assert = assert;\nexports.setAsPrimitive = setAsPrimitive;\nexports.isPrimitive = isPrimitive;\nexports.createHashMap = createHashMap;\nexports.noop = noop;\n\n/***/ }),\n\n/***/ 1483:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1479);\n\nvar pathTool = __webpack_require__(1790);\n\nvar colorTool = __webpack_require__(1533);\n\nvar matrix = __webpack_require__(1525);\n\nvar vector = __webpack_require__(1485);\n\nvar Path = __webpack_require__(1493);\n\nvar Transformable = __webpack_require__(1649);\n\nvar Image = __webpack_require__(1642);\n\nexports.Image = Image;\n\nvar Group = __webpack_require__(1556);\n\nexports.Group = Group;\n\nvar Text = __webpack_require__(1775);\n\nexports.Text = Text;\n\nvar Circle = __webpack_require__(1781);\n\nexports.Circle = Circle;\n\nvar Sector = __webpack_require__(1787);\n\nexports.Sector = Sector;\n\nvar Ring = __webpack_require__(1786);\n\nexports.Ring = Ring;\n\nvar Polygon = __webpack_require__(1783);\n\nexports.Polygon = Polygon;\n\nvar Polyline = __webpack_require__(1784);\n\nexports.Polyline = Polyline;\n\nvar Rect = __webpack_require__(1785);\n\nexports.Rect = Rect;\n\nvar Line = __webpack_require__(1782);\n\nexports.Line = Line;\n\nvar BezierCurve = __webpack_require__(1780);\n\nexports.BezierCurve = BezierCurve;\n\nvar Arc = __webpack_require__(1779);\n\nexports.Arc = Arc;\n\nvar CompoundPath = __webpack_require__(1772);\n\nexports.CompoundPath = CompoundPath;\n\nvar LinearGradient = __webpack_require__(1773);\n\nexports.LinearGradient = LinearGradient;\n\nvar RadialGradient = __webpack_require__(1774);\n\nexports.RadialGradient = RadialGradient;\n\nvar BoundingRect = __webpack_require__(1497);\n\nexports.BoundingRect = BoundingRect;\nvar round = Math.round;\nvar mathMax = Math.max;\nvar mathMin = Math.min;\nvar EMPTY_OBJ = {};\n/**\n * Extend shape with parameters\n */\n\nfunction extendShape(opts) {\n  return Path.extend(opts);\n}\n/**\n * Extend path\n */\n\n\nfunction extendPath(pathData, opts) {\n  return pathTool.extendFromString(pathData, opts);\n}\n/**\n * Create a path element from path data string\n * @param {string} pathData\n * @param {Object} opts\n * @param {module:zrender/core/BoundingRect} rect\n * @param {string} [layout=cover] 'center' or 'cover'\n */\n\n\nfunction makePath(pathData, opts, rect, layout) {\n  var path = pathTool.createFromString(pathData, opts);\n  var boundingRect = path.getBoundingRect();\n\n  if (rect) {\n    if (layout === 'center') {\n      rect = centerGraphic(rect, boundingRect);\n    }\n\n    resizePath(path, rect);\n  }\n\n  return path;\n}\n/**\n * Create a image element from image url\n * @param {string} imageUrl image url\n * @param {Object} opts options\n * @param {module:zrender/core/BoundingRect} rect constrain rect\n * @param {string} [layout=cover] 'center' or 'cover'\n */\n\n\nfunction makeImage(imageUrl, rect, layout) {\n  var path = new Image({\n    style: {\n      image: imageUrl,\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height\n    },\n    onload: function (img) {\n      if (layout === 'center') {\n        var boundingRect = {\n          width: img.width,\n          height: img.height\n        };\n        path.setStyle(centerGraphic(rect, boundingRect));\n      }\n    }\n  });\n  return path;\n}\n/**\n * Get position of centered element in bounding box.\n *\n * @param  {Object} rect         element local bounding box\n * @param  {Object} boundingRect constraint bounding box\n * @return {Object} element position containing x, y, width, and height\n */\n\n\nfunction centerGraphic(rect, boundingRect) {\n  // Set rect to center, keep width / height ratio.\n  var aspect = boundingRect.width / boundingRect.height;\n  var width = rect.height * aspect;\n  var height;\n\n  if (width <= rect.width) {\n    height = rect.height;\n  } else {\n    width = rect.width;\n    height = width / aspect;\n  }\n\n  var cx = rect.x + rect.width / 2;\n  var cy = rect.y + rect.height / 2;\n  return {\n    x: cx - width / 2,\n    y: cy - height / 2,\n    width: width,\n    height: height\n  };\n}\n\nvar mergePath = pathTool.mergePath;\n/**\n * Resize a path to fit the rect\n * @param {module:zrender/graphic/Path} path\n * @param {Object} rect\n */\n\nfunction resizePath(path, rect) {\n  if (!path.applyTransform) {\n    return;\n  }\n\n  var pathRect = path.getBoundingRect();\n  var m = pathRect.calculateTransform(rect);\n  path.applyTransform(m);\n}\n/**\n * Sub pixel optimize line for canvas\n *\n * @param {Object} param\n * @param {Object} [param.shape]\n * @param {number} [param.shape.x1]\n * @param {number} [param.shape.y1]\n * @param {number} [param.shape.x2]\n * @param {number} [param.shape.y2]\n * @param {Object} [param.style]\n * @param {number} [param.style.lineWidth]\n * @return {Object} Modified param\n */\n\n\nfunction subPixelOptimizeLine(param) {\n  var shape = param.shape;\n  var lineWidth = param.style.lineWidth;\n\n  if (round(shape.x1 * 2) === round(shape.x2 * 2)) {\n    shape.x1 = shape.x2 = subPixelOptimize(shape.x1, lineWidth, true);\n  }\n\n  if (round(shape.y1 * 2) === round(shape.y2 * 2)) {\n    shape.y1 = shape.y2 = subPixelOptimize(shape.y1, lineWidth, true);\n  }\n\n  return param;\n}\n/**\n * Sub pixel optimize rect for canvas\n *\n * @param {Object} param\n * @param {Object} [param.shape]\n * @param {number} [param.shape.x]\n * @param {number} [param.shape.y]\n * @param {number} [param.shape.width]\n * @param {number} [param.shape.height]\n * @param {Object} [param.style]\n * @param {number} [param.style.lineWidth]\n * @return {Object} Modified param\n */\n\n\nfunction subPixelOptimizeRect(param) {\n  var shape = param.shape;\n  var lineWidth = param.style.lineWidth;\n  var originX = shape.x;\n  var originY = shape.y;\n  var originWidth = shape.width;\n  var originHeight = shape.height;\n  shape.x = subPixelOptimize(shape.x, lineWidth, true);\n  shape.y = subPixelOptimize(shape.y, lineWidth, true);\n  shape.width = Math.max(subPixelOptimize(originX + originWidth, lineWidth, false) - shape.x, originWidth === 0 ? 0 : 1);\n  shape.height = Math.max(subPixelOptimize(originY + originHeight, lineWidth, false) - shape.y, originHeight === 0 ? 0 : 1);\n  return param;\n}\n/**\n * Sub pixel optimize for canvas\n *\n * @param {number} position Coordinate, such as x, y\n * @param {number} lineWidth Should be nonnegative integer.\n * @param {boolean=} positiveOrNegative Default false (negative).\n * @return {number} Optimized position.\n */\n\n\nfunction subPixelOptimize(position, lineWidth, positiveOrNegative) {\n  // Assure that (position + lineWidth / 2) is near integer edge,\n  // otherwise line will be fuzzy in canvas.\n  var doubledPosition = round(position * 2);\n  return (doubledPosition + round(lineWidth)) % 2 === 0 ? doubledPosition / 2 : (doubledPosition + (positiveOrNegative ? 1 : -1)) / 2;\n}\n\nfunction hasFillOrStroke(fillOrStroke) {\n  return fillOrStroke != null && fillOrStroke != 'none';\n}\n\nfunction liftColor(color) {\n  return typeof color === 'string' ? colorTool.lift(color, -0.1) : color;\n}\n/**\n * @private\n */\n\n\nfunction cacheElementStl(el) {\n  if (el.__hoverStlDirty) {\n    var stroke = el.style.stroke;\n    var fill = el.style.fill; // Create hoverStyle on mouseover\n\n    var hoverStyle = el.__hoverStl;\n    hoverStyle.fill = hoverStyle.fill || (hasFillOrStroke(fill) ? liftColor(fill) : null);\n    hoverStyle.stroke = hoverStyle.stroke || (hasFillOrStroke(stroke) ? liftColor(stroke) : null);\n    var normalStyle = {};\n\n    for (var name in hoverStyle) {\n      // See comment in `doSingleEnterHover`.\n      if (hoverStyle[name] != null) {\n        normalStyle[name] = el.style[name];\n      }\n    }\n\n    el.__normalStl = normalStyle;\n    el.__hoverStlDirty = false;\n  }\n}\n/**\n * @private\n */\n\n\nfunction doSingleEnterHover(el) {\n  if (el.__isHover) {\n    return;\n  }\n\n  cacheElementStl(el);\n\n  if (el.useHoverLayer) {\n    el.__zr && el.__zr.addHover(el, el.__hoverStl);\n  } else {\n    var style = el.style;\n    var insideRollbackOpt = style.insideRollbackOpt; // Consider case: only `position: 'top'` is set on emphasis, then text\n    // color should be returned to `autoColor`, rather than remain '#fff'.\n    // So we should rollback then apply again after style merging.\n\n    insideRollbackOpt && rollbackInsideStyle(style); // styles can be:\n    // {\n    //     label: {\n    //         normal: {\n    //             show: false,\n    //             position: 'outside',\n    //             fontSize: 18\n    //         },\n    //         emphasis: {\n    //             show: true\n    //         }\n    //     }\n    // },\n    // where properties of `emphasis` may not appear in `normal`. We previously use\n    // module:echarts/util/model#defaultEmphasis to merge `normal` to `emphasis`.\n    // But consider rich text and setOption in merge mode, it is impossible to cover\n    // all properties in merge. So we use merge mode when setting style here, where\n    // only properties that is not `null/undefined` can be set. The disadventage:\n    // null/undefined can not be used to remove style any more in `emphasis`.\n\n    style.extendFrom(el.__hoverStl); // Do not save `insideRollback`.\n\n    if (insideRollbackOpt) {\n      applyInsideStyle(style, style.insideOriginalTextPosition, insideRollbackOpt); // textFill may be rollbacked to null.\n\n      if (style.textFill == null) {\n        style.textFill = insideRollbackOpt.autoColor;\n      }\n    }\n\n    el.dirty(false);\n    el.z2 += 1;\n  }\n\n  el.__isHover = true;\n}\n/**\n * @inner\n */\n\n\nfunction doSingleLeaveHover(el) {\n  if (!el.__isHover) {\n    return;\n  }\n\n  var normalStl = el.__normalStl;\n\n  if (el.useHoverLayer) {\n    el.__zr && el.__zr.removeHover(el);\n  } else {\n    // Consider null/undefined value, should use\n    // `setStyle` but not `extendFrom(stl, true)`.\n    normalStl && el.setStyle(normalStl);\n    el.z2 -= 1;\n  }\n\n  el.__isHover = false;\n}\n/**\n * @inner\n */\n\n\nfunction doEnterHover(el) {\n  el.type === 'group' ? el.traverse(function (child) {\n    if (child.type !== 'group') {\n      doSingleEnterHover(child);\n    }\n  }) : doSingleEnterHover(el);\n}\n\nfunction doLeaveHover(el) {\n  el.type === 'group' ? el.traverse(function (child) {\n    if (child.type !== 'group') {\n      doSingleLeaveHover(child);\n    }\n  }) : doSingleLeaveHover(el);\n}\n/**\n * @inner\n */\n\n\nfunction setElementHoverStl(el, hoverStl) {\n  // If element has sepcified hoverStyle, then use it instead of given hoverStyle\n  // Often used when item group has a label element and it's hoverStyle is different\n  el.__hoverStl = el.hoverStyle || hoverStl || {};\n  el.__hoverStlDirty = true;\n\n  if (el.__isHover) {\n    cacheElementStl(el);\n  }\n}\n/**\n * @inner\n */\n\n\nfunction onElementMouseOver(e) {\n  if (this.__hoverSilentOnTouch && e.zrByTouch) {\n    return;\n  } // Only if element is not in emphasis status\n\n\n  !this.__isEmphasis && doEnterHover(this);\n}\n/**\n * @inner\n */\n\n\nfunction onElementMouseOut(e) {\n  if (this.__hoverSilentOnTouch && e.zrByTouch) {\n    return;\n  } // Only if element is not in emphasis status\n\n\n  !this.__isEmphasis && doLeaveHover(this);\n}\n/**\n * @inner\n */\n\n\nfunction enterEmphasis() {\n  this.__isEmphasis = true;\n  doEnterHover(this);\n}\n/**\n * @inner\n */\n\n\nfunction leaveEmphasis() {\n  this.__isEmphasis = false;\n  doLeaveHover(this);\n}\n/**\n * Set hover style of element.\n * This method can be called repeatly without side-effects.\n * @param {module:zrender/Element} el\n * @param {Object} [hoverStyle]\n * @param {Object} [opt]\n * @param {boolean} [opt.hoverSilentOnTouch=false]\n *        In touch device, mouseover event will be trigger on touchstart event\n *        (see module:zrender/dom/HandlerProxy). By this mechanism, we can\n *        conviniently use hoverStyle when tap on touch screen without additional\n *        code for compatibility.\n *        But if the chart/component has select feature, which usually also use\n *        hoverStyle, there might be conflict between 'select-highlight' and\n *        'hover-highlight' especially when roam is enabled (see geo for example).\n *        In this case, hoverSilentOnTouch should be used to disable hover-highlight\n *        on touch device.\n */\n\n\nfunction setHoverStyle(el, hoverStyle, opt) {\n  el.__hoverSilentOnTouch = opt && opt.hoverSilentOnTouch;\n  el.type === 'group' ? el.traverse(function (child) {\n    if (child.type !== 'group') {\n      setElementHoverStl(child, hoverStyle);\n    }\n  }) : setElementHoverStl(el, hoverStyle); // Duplicated function will be auto-ignored, see Eventful.js.\n\n  el.on('mouseover', onElementMouseOver).on('mouseout', onElementMouseOut); // Emphasis, normal can be triggered manually\n\n  el.on('emphasis', enterEmphasis).on('normal', leaveEmphasis);\n}\n/**\n * @param {Object|module:zrender/graphic/Style} normalStyle\n * @param {Object} emphasisStyle\n * @param {module:echarts/model/Model} normalModel\n * @param {module:echarts/model/Model} emphasisModel\n * @param {Object} opt Check `opt` of `setTextStyleCommon` to find other props.\n * @param {Object} [opt.defaultText]\n * @param {module:echarts/model/Model} [opt.labelFetcher] Fetch text by\n *      `opt.labelFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n * @param {module:echarts/model/Model} [opt.labelDataIndex] Fetch text by\n *      `opt.textFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n * @param {module:echarts/model/Model} [opt.labelDimIndex] Fetch text by\n *      `opt.textFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n * @param {Object} [normalSpecified]\n * @param {Object} [emphasisSpecified]\n */\n\n\nfunction setLabelStyle(normalStyle, emphasisStyle, normalModel, emphasisModel, opt, normalSpecified, emphasisSpecified) {\n  opt = opt || EMPTY_OBJ;\n  var labelFetcher = opt.labelFetcher;\n  var labelDataIndex = opt.labelDataIndex;\n  var labelDimIndex = opt.labelDimIndex; // This scenario, `label.normal.show = true; label.emphasis.show = false`,\n  // is not supported util someone requests.\n\n  var showNormal = normalModel.getShallow('show');\n  var showEmphasis = emphasisModel.getShallow('show'); // Consider performance, only fetch label when necessary.\n  // If `normal.show` is `false` and `emphasis.show` is `true` and `emphasis.formatter` is not set,\n  // label should be displayed, where text is fetched by `normal.formatter` or `opt.defaultText`.\n\n  var baseText = showNormal || showEmphasis ? zrUtil.retrieve2(labelFetcher ? labelFetcher.getFormattedLabel(labelDataIndex, 'normal', null, labelDimIndex) : null, opt.defaultText) : null;\n  var normalStyleText = showNormal ? baseText : null;\n  var emphasisStyleText = showEmphasis ? zrUtil.retrieve2(labelFetcher ? labelFetcher.getFormattedLabel(labelDataIndex, 'emphasis', null, labelDimIndex) : null, baseText) : null; // Optimize: If style.text is null, text will not be drawn.\n\n  if (normalStyleText != null || emphasisStyleText != null) {\n    // Always set `textStyle` even if `normalStyle.text` is null, because default\n    // values have to be set on `normalStyle`.\n    // If we set default values on `emphasisStyle`, consider case:\n    // Firstly, `setOption(... label: {normal: {text: null}, emphasis: {show: true}} ...);`\n    // Secondly, `setOption(... label: {noraml: {show: true, text: 'abc', color: 'red'} ...);`\n    // Then the 'red' will not work on emphasis.\n    setTextStyle(normalStyle, normalModel, normalSpecified, opt);\n    setTextStyle(emphasisStyle, emphasisModel, emphasisSpecified, opt, true);\n  }\n\n  normalStyle.text = normalStyleText;\n  emphasisStyle.text = emphasisStyleText;\n}\n/**\n * Set basic textStyle properties.\n * @param {Object|module:zrender/graphic/Style} textStyle\n * @param {module:echarts/model/Model} model\n * @param {Object} [specifiedTextStyle] Can be overrided by settings in model.\n * @param {Object} [opt] See `opt` of `setTextStyleCommon`.\n * @param {boolean} [isEmphasis]\n */\n\n\nfunction setTextStyle(textStyle, textStyleModel, specifiedTextStyle, opt, isEmphasis) {\n  setTextStyleCommon(textStyle, textStyleModel, opt, isEmphasis);\n  specifiedTextStyle && zrUtil.extend(textStyle, specifiedTextStyle);\n  textStyle.host && textStyle.host.dirty && textStyle.host.dirty(false);\n  return textStyle;\n}\n/**\n * Set text option in the style.\n * @deprecated\n * @param {Object} textStyle\n * @param {module:echarts/model/Model} labelModel\n * @param {string|boolean} defaultColor Default text color.\n *        If set as false, it will be processed as a emphasis style.\n */\n\n\nfunction setText(textStyle, labelModel, defaultColor) {\n  var opt = {\n    isRectText: true\n  };\n  var isEmphasis;\n\n  if (defaultColor === false) {\n    isEmphasis = true;\n  } else {\n    // Support setting color as 'auto' to get visual color.\n    opt.autoColor = defaultColor;\n  }\n\n  setTextStyleCommon(textStyle, labelModel, opt, isEmphasis);\n  textStyle.host && textStyle.host.dirty && textStyle.host.dirty(false);\n}\n/**\n * {\n *      disableBox: boolean, Whether diable drawing box of block (outer most).\n *      isRectText: boolean,\n *      autoColor: string, specify a color when color is 'auto',\n *              for textFill, textStroke, textBackgroundColor, and textBorderColor.\n *              If autoColor specified, it is used as default textFill.\n *      useInsideStyle:\n *              `true`: Use inside style (textFill, textStroke, textStrokeWidth)\n *                  if `textFill` is not specified.\n *              `false`: Do not use inside style.\n *              `null/undefined`: use inside style if `isRectText` is true and\n *                  `textFill` is not specified and textPosition contains `'inside'`.\n *      forceRich: boolean\n * }\n */\n\n\nfunction setTextStyleCommon(textStyle, textStyleModel, opt, isEmphasis) {\n  // Consider there will be abnormal when merge hover style to normal style if given default value.\n  opt = opt || EMPTY_OBJ;\n\n  if (opt.isRectText) {\n    var textPosition = textStyleModel.getShallow('position') || (isEmphasis ? null : 'inside'); // 'outside' is not a valid zr textPostion value, but used\n    // in bar series, and magric type should be considered.\n\n    textPosition === 'outside' && (textPosition = 'top');\n    textStyle.textPosition = textPosition;\n    textStyle.textOffset = textStyleModel.getShallow('offset');\n    var labelRotate = textStyleModel.getShallow('rotate');\n    labelRotate != null && (labelRotate *= Math.PI / 180);\n    textStyle.textRotation = labelRotate;\n    textStyle.textDistance = zrUtil.retrieve2(textStyleModel.getShallow('distance'), isEmphasis ? null : 5);\n  }\n\n  var ecModel = textStyleModel.ecModel;\n  var globalTextStyle = ecModel && ecModel.option.textStyle; // Consider case:\n  // {\n  //     data: [{\n  //         value: 12,\n  //         label: {\n  //             normal: {\n  //                 rich: {\n  //                     // no 'a' here but using parent 'a'.\n  //                 }\n  //             }\n  //         }\n  //     }],\n  //     rich: {\n  //         a: { ... }\n  //     }\n  // }\n\n  var richItemNames = getRichItemNames(textStyleModel);\n  var richResult;\n\n  if (richItemNames) {\n    richResult = {};\n\n    for (var name in richItemNames) {\n      if (richItemNames.hasOwnProperty(name)) {\n        // Cascade is supported in rich.\n        var richTextStyle = textStyleModel.getModel(['rich', name]); // In rich, never `disableBox`.\n\n        setTokenTextStyle(richResult[name] = {}, richTextStyle, globalTextStyle, opt, isEmphasis);\n      }\n    }\n  }\n\n  textStyle.rich = richResult;\n  setTokenTextStyle(textStyle, textStyleModel, globalTextStyle, opt, isEmphasis, true);\n\n  if (opt.forceRich && !opt.textStyle) {\n    opt.textStyle = {};\n  }\n\n  return textStyle;\n} // Consider case:\n// {\n//     data: [{\n//         value: 12,\n//         label: {\n//             normal: {\n//                 rich: {\n//                     // no 'a' here but using parent 'a'.\n//                 }\n//             }\n//         }\n//     }],\n//     rich: {\n//         a: { ... }\n//     }\n// }\n\n\nfunction getRichItemNames(textStyleModel) {\n  // Use object to remove duplicated names.\n  var richItemNameMap;\n\n  while (textStyleModel && textStyleModel !== textStyleModel.ecModel) {\n    var rich = (textStyleModel.option || EMPTY_OBJ).rich;\n\n    if (rich) {\n      richItemNameMap = richItemNameMap || {};\n\n      for (var name in rich) {\n        if (rich.hasOwnProperty(name)) {\n          richItemNameMap[name] = 1;\n        }\n      }\n    }\n\n    textStyleModel = textStyleModel.parentModel;\n  }\n\n  return richItemNameMap;\n}\n\nfunction setTokenTextStyle(textStyle, textStyleModel, globalTextStyle, opt, isEmphasis, isBlock) {\n  // In merge mode, default value should not be given.\n  globalTextStyle = !isEmphasis && globalTextStyle || EMPTY_OBJ;\n  textStyle.textFill = getAutoColor(textStyleModel.getShallow('color'), opt) || globalTextStyle.color;\n  textStyle.textStroke = getAutoColor(textStyleModel.getShallow('textBorderColor'), opt) || globalTextStyle.textBorderColor;\n  textStyle.textStrokeWidth = zrUtil.retrieve2(textStyleModel.getShallow('textBorderWidth'), globalTextStyle.textBorderWidth);\n\n  if (!isEmphasis) {\n    if (isBlock) {\n      // Always set `insideRollback`, for clearing previous.\n      var originalTextPosition = textStyle.textPosition;\n      textStyle.insideRollback = applyInsideStyle(textStyle, originalTextPosition, opt); // Save original textPosition, because style.textPosition will be repalced by\n      // real location (like [10, 30]) in zrender.\n\n      textStyle.insideOriginalTextPosition = originalTextPosition;\n      textStyle.insideRollbackOpt = opt;\n    } // Set default finally.\n\n\n    if (textStyle.textFill == null) {\n      textStyle.textFill = opt.autoColor;\n    }\n  } // Do not use `getFont` here, because merge should be supported, where\n  // part of these properties may be changed in emphasis style, and the\n  // others should remain their original value got from normal style.\n\n\n  textStyle.fontStyle = textStyleModel.getShallow('fontStyle') || globalTextStyle.fontStyle;\n  textStyle.fontWeight = textStyleModel.getShallow('fontWeight') || globalTextStyle.fontWeight;\n  textStyle.fontSize = textStyleModel.getShallow('fontSize') || globalTextStyle.fontSize;\n  textStyle.fontFamily = textStyleModel.getShallow('fontFamily') || globalTextStyle.fontFamily;\n  textStyle.textAlign = textStyleModel.getShallow('align');\n  textStyle.textVerticalAlign = textStyleModel.getShallow('verticalAlign') || textStyleModel.getShallow('baseline');\n  textStyle.textLineHeight = textStyleModel.getShallow('lineHeight');\n  textStyle.textWidth = textStyleModel.getShallow('width');\n  textStyle.textHeight = textStyleModel.getShallow('height');\n  textStyle.textTag = textStyleModel.getShallow('tag');\n\n  if (!isBlock || !opt.disableBox) {\n    textStyle.textBackgroundColor = getAutoColor(textStyleModel.getShallow('backgroundColor'), opt);\n    textStyle.textPadding = textStyleModel.getShallow('padding');\n    textStyle.textBorderColor = getAutoColor(textStyleModel.getShallow('borderColor'), opt);\n    textStyle.textBorderWidth = textStyleModel.getShallow('borderWidth');\n    textStyle.textBorderRadius = textStyleModel.getShallow('borderRadius');\n    textStyle.textBoxShadowColor = textStyleModel.getShallow('shadowColor');\n    textStyle.textBoxShadowBlur = textStyleModel.getShallow('shadowBlur');\n    textStyle.textBoxShadowOffsetX = textStyleModel.getShallow('shadowOffsetX');\n    textStyle.textBoxShadowOffsetY = textStyleModel.getShallow('shadowOffsetY');\n  }\n\n  textStyle.textShadowColor = textStyleModel.getShallow('textShadowColor') || globalTextStyle.textShadowColor;\n  textStyle.textShadowBlur = textStyleModel.getShallow('textShadowBlur') || globalTextStyle.textShadowBlur;\n  textStyle.textShadowOffsetX = textStyleModel.getShallow('textShadowOffsetX') || globalTextStyle.textShadowOffsetX;\n  textStyle.textShadowOffsetY = textStyleModel.getShallow('textShadowOffsetY') || globalTextStyle.textShadowOffsetY;\n}\n\nfunction getAutoColor(color, opt) {\n  return color !== 'auto' ? color : opt && opt.autoColor ? opt.autoColor : null;\n}\n\nfunction applyInsideStyle(textStyle, textPosition, opt) {\n  var useInsideStyle = opt.useInsideStyle;\n  var insideRollback;\n\n  if (textStyle.textFill == null && useInsideStyle !== false && (useInsideStyle === true || opt.isRectText && textPosition // textPosition can be [10, 30]\n  && typeof textPosition === 'string' && textPosition.indexOf('inside') >= 0)) {\n    insideRollback = {\n      textFill: null,\n      textStroke: textStyle.textStroke,\n      textStrokeWidth: textStyle.textStrokeWidth\n    };\n    textStyle.textFill = '#fff'; // Consider text with #fff overflow its container.\n\n    if (textStyle.textStroke == null) {\n      textStyle.textStroke = opt.autoColor;\n      textStyle.textStrokeWidth == null && (textStyle.textStrokeWidth = 2);\n    }\n  }\n\n  return insideRollback;\n}\n\nfunction rollbackInsideStyle(style) {\n  var insideRollback = style.insideRollback;\n\n  if (insideRollback) {\n    style.textFill = insideRollback.textFill;\n    style.textStroke = insideRollback.textStroke;\n    style.textStrokeWidth = insideRollback.textStrokeWidth;\n  }\n}\n\nfunction getFont(opt, ecModel) {\n  // ecModel or default text style model.\n  var gTextStyleModel = ecModel || ecModel.getModel('textStyle');\n  return [// FIXME in node-canvas fontWeight is before fontStyle\n  opt.fontStyle || gTextStyleModel && gTextStyleModel.getShallow('fontStyle') || '', opt.fontWeight || gTextStyleModel && gTextStyleModel.getShallow('fontWeight') || '', (opt.fontSize || gTextStyleModel && gTextStyleModel.getShallow('fontSize') || 12) + 'px', opt.fontFamily || gTextStyleModel && gTextStyleModel.getShallow('fontFamily') || 'sans-serif'].join(' ');\n}\n\nfunction animateOrSetProps(isUpdate, el, props, animatableModel, dataIndex, cb) {\n  if (typeof dataIndex === 'function') {\n    cb = dataIndex;\n    dataIndex = null;\n  } // Do not check 'animation' property directly here. Consider this case:\n  // animation model is an `itemModel`, whose does not have `isAnimationEnabled`\n  // but its parent model (`seriesModel`) does.\n\n\n  var animationEnabled = animatableModel && animatableModel.isAnimationEnabled();\n\n  if (animationEnabled) {\n    var postfix = isUpdate ? 'Update' : '';\n    var duration = animatableModel.getShallow('animationDuration' + postfix);\n    var animationEasing = animatableModel.getShallow('animationEasing' + postfix);\n    var animationDelay = animatableModel.getShallow('animationDelay' + postfix);\n\n    if (typeof animationDelay === 'function') {\n      animationDelay = animationDelay(dataIndex, animatableModel.getAnimationDelayParams ? animatableModel.getAnimationDelayParams(el, dataIndex) : null);\n    }\n\n    if (typeof duration === 'function') {\n      duration = duration(dataIndex);\n    }\n\n    duration > 0 ? el.animateTo(props, duration, animationDelay || 0, animationEasing, cb, !!cb) : (el.stopAnimation(), el.attr(props), cb && cb());\n  } else {\n    el.stopAnimation();\n    el.attr(props);\n    cb && cb();\n  }\n}\n/**\n * Update graphic element properties with or without animation according to the\n * configuration in series.\n *\n * Caution: this method will stop previous animation.\n * So if do not use this method to one element twice before\n * animation starts, unless you know what you are doing.\n *\n * @param {module:zrender/Element} el\n * @param {Object} props\n * @param {module:echarts/model/Model} [animatableModel]\n * @param {number} [dataIndex]\n * @param {Function} [cb]\n * @example\n *     graphic.updateProps(el, {\n *         position: [100, 100]\n *     }, seriesModel, dataIndex, function () { console.log('Animation done!'); });\n *     // Or\n *     graphic.updateProps(el, {\n *         position: [100, 100]\n *     }, seriesModel, function () { console.log('Animation done!'); });\n */\n\n\nfunction updateProps(el, props, animatableModel, dataIndex, cb) {\n  animateOrSetProps(true, el, props, animatableModel, dataIndex, cb);\n}\n/**\n * Init graphic element properties with or without animation according to the\n * configuration in series.\n *\n * Caution: this method will stop previous animation.\n * So if do not use this method to one element twice before\n * animation starts, unless you know what you are doing.\n *\n * @param {module:zrender/Element} el\n * @param {Object} props\n * @param {module:echarts/model/Model} [animatableModel]\n * @param {number} [dataIndex]\n * @param {Function} cb\n */\n\n\nfunction initProps(el, props, animatableModel, dataIndex, cb) {\n  animateOrSetProps(false, el, props, animatableModel, dataIndex, cb);\n}\n/**\n * Get transform matrix of target (param target),\n * in coordinate of its ancestor (param ancestor)\n *\n * @param {module:zrender/mixin/Transformable} target\n * @param {module:zrender/mixin/Transformable} [ancestor]\n */\n\n\nfunction getTransform(target, ancestor) {\n  var mat = matrix.identity([]);\n\n  while (target && target !== ancestor) {\n    matrix.mul(mat, target.getLocalTransform(), mat);\n    target = target.parent;\n  }\n\n  return mat;\n}\n/**\n * Apply transform to an vertex.\n * @param {Array.<number>} target [x, y]\n * @param {Array.<number>|TypedArray.<number>|Object} transform Can be:\n *      + Transform matrix: like [1, 0, 0, 1, 0, 0]\n *      + {position, rotation, scale}, the same as `zrender/Transformable`.\n * @param {boolean=} invert Whether use invert matrix.\n * @return {Array.<number>} [x, y]\n */\n\n\nfunction applyTransform(target, transform, invert) {\n  if (transform && !zrUtil.isArrayLike(transform)) {\n    transform = Transformable.getLocalTransform(transform);\n  }\n\n  if (invert) {\n    transform = matrix.invert([], transform);\n  }\n\n  return vector.applyTransform([], target, transform);\n}\n/**\n * @param {string} direction 'left' 'right' 'top' 'bottom'\n * @param {Array.<number>} transform Transform matrix: like [1, 0, 0, 1, 0, 0]\n * @param {boolean=} invert Whether use invert matrix.\n * @return {string} Transformed direction. 'left' 'right' 'top' 'bottom'\n */\n\n\nfunction transformDirection(direction, transform, invert) {\n  // Pick a base, ensure that transform result will not be (0, 0).\n  var hBase = transform[4] === 0 || transform[5] === 0 || transform[0] === 0 ? 1 : Math.abs(2 * transform[4] / transform[0]);\n  var vBase = transform[4] === 0 || transform[5] === 0 || transform[2] === 0 ? 1 : Math.abs(2 * transform[4] / transform[2]);\n  var vertex = [direction === 'left' ? -hBase : direction === 'right' ? hBase : 0, direction === 'top' ? -vBase : direction === 'bottom' ? vBase : 0];\n  vertex = applyTransform(vertex, transform, invert);\n  return Math.abs(vertex[0]) > Math.abs(vertex[1]) ? vertex[0] > 0 ? 'right' : 'left' : vertex[1] > 0 ? 'bottom' : 'top';\n}\n/**\n * Apply group transition animation from g1 to g2.\n * If no animatableModel, no animation.\n */\n\n\nfunction groupTransition(g1, g2, animatableModel, cb) {\n  if (!g1 || !g2) {\n    return;\n  }\n\n  function getElMap(g) {\n    var elMap = {};\n    g.traverse(function (el) {\n      if (!el.isGroup && el.anid) {\n        elMap[el.anid] = el;\n      }\n    });\n    return elMap;\n  }\n\n  function getAnimatableProps(el) {\n    var obj = {\n      position: vector.clone(el.position),\n      rotation: el.rotation\n    };\n\n    if (el.shape) {\n      obj.shape = zrUtil.extend({}, el.shape);\n    }\n\n    return obj;\n  }\n\n  var elMap1 = getElMap(g1);\n  g2.traverse(function (el) {\n    if (!el.isGroup && el.anid) {\n      var oldEl = elMap1[el.anid];\n\n      if (oldEl) {\n        var newProp = getAnimatableProps(el);\n        el.attr(getAnimatableProps(oldEl));\n        updateProps(el, newProp, animatableModel, el.dataIndex);\n      } // else {\n      //     if (el.previousProps) {\n      //         graphic.updateProps\n      //     }\n      // }\n\n    }\n  });\n}\n/**\n * @param {Array.<Array.<number>>} points Like: [[23, 44], [53, 66], ...]\n * @param {Object} rect {x, y, width, height}\n * @return {Array.<Array.<number>>} A new clipped points.\n */\n\n\nfunction clipPointsByRect(points, rect) {\n  return zrUtil.map(points, function (point) {\n    var x = point[0];\n    x = mathMax(x, rect.x);\n    x = mathMin(x, rect.x + rect.width);\n    var y = point[1];\n    y = mathMax(y, rect.y);\n    y = mathMin(y, rect.y + rect.height);\n    return [x, y];\n  });\n}\n/**\n * @param {Object} targetRect {x, y, width, height}\n * @param {Object} rect {x, y, width, height}\n * @return {Object} A new clipped rect. If rect size are negative, return undefined.\n */\n\n\nfunction clipRectByRect(targetRect, rect) {\n  var x = mathMax(targetRect.x, rect.x);\n  var x2 = mathMin(targetRect.x + targetRect.width, rect.x + rect.width);\n  var y = mathMax(targetRect.y, rect.y);\n  var y2 = mathMin(targetRect.y + targetRect.height, rect.y + rect.height);\n\n  if (x2 >= x && y2 >= y) {\n    return {\n      x: x,\n      y: y,\n      width: x2 - x,\n      height: y2 - y\n    };\n  }\n}\n/**\n * @param {string} iconStr Support 'image://' or 'path://' or direct svg path.\n * @param {Object} [opt] Properties of `module:zrender/Element`, except `style`.\n * @param {Object} [rect] {x, y, width, height}\n * @return {module:zrender/Element} Icon path or image element.\n */\n\n\nfunction createIcon(iconStr, opt, rect) {\n  opt = zrUtil.extend({\n    rectHover: true\n  }, opt);\n  var style = opt.style = {\n    strokeNoScale: true\n  };\n  rect = rect || {\n    x: -1,\n    y: -1,\n    width: 2,\n    height: 2\n  };\n\n  if (iconStr) {\n    return iconStr.indexOf('image://') === 0 ? (style.image = iconStr.slice(8), zrUtil.defaults(style, rect), new Image(opt)) : makePath(iconStr.replace('path://', ''), opt, rect, 'center');\n  }\n}\n\nexports.extendShape = extendShape;\nexports.extendPath = extendPath;\nexports.makePath = makePath;\nexports.makeImage = makeImage;\nexports.mergePath = mergePath;\nexports.resizePath = resizePath;\nexports.subPixelOptimizeLine = subPixelOptimizeLine;\nexports.subPixelOptimizeRect = subPixelOptimizeRect;\nexports.subPixelOptimize = subPixelOptimize;\nexports.setHoverStyle = setHoverStyle;\nexports.setLabelStyle = setLabelStyle;\nexports.setTextStyle = setTextStyle;\nexports.setText = setText;\nexports.getFont = getFont;\nexports.updateProps = updateProps;\nexports.initProps = initProps;\nexports.getTransform = getTransform;\nexports.applyTransform = applyTransform;\nexports.transformDirection = transformDirection;\nexports.groupTransition = groupTransition;\nexports.clipPointsByRect = clipPointsByRect;\nexports.clipRectByRect = clipRectByRect;\nexports.createIcon = createIcon;\n\n/***/ }),\n\n/***/ 1484:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1479);\n\nvar formatUtil = __webpack_require__(1499);\n\nvar nubmerUtil = __webpack_require__(1486);\n\nvar Model = __webpack_require__(1498);\n\nvar each = zrUtil.each;\nvar isObject = zrUtil.isObject;\n/**\n * If value is not array, then translate it to array.\n * @param  {*} value\n * @return {Array} [value] or value\n */\n\nfunction normalizeToArray(value) {\n  return value instanceof Array ? value : value == null ? [] : [value];\n}\n/**\n * Sync default option between normal and emphasis like `position` and `show`\n * In case some one will write code like\n *     label: {\n *         normal: {\n *             show: false,\n *             position: 'outside',\n *             fontSize: 18\n *         },\n *         emphasis: {\n *             show: true\n *         }\n *     }\n * @param {Object} opt\n * @param {Array.<string>} subOpts\n */\n\n\nfunction defaultEmphasis(opt, subOpts) {\n  if (opt) {\n    var emphasisOpt = opt.emphasis = opt.emphasis || {};\n    var normalOpt = opt.normal = opt.normal || {}; // Default emphasis option from normal\n\n    for (var i = 0, len = subOpts.length; i < len; i++) {\n      var subOptName = subOpts[i];\n\n      if (!emphasisOpt.hasOwnProperty(subOptName) && normalOpt.hasOwnProperty(subOptName)) {\n        emphasisOpt[subOptName] = normalOpt[subOptName];\n      }\n    }\n  }\n}\n\nvar TEXT_STYLE_OPTIONS = ['fontStyle', 'fontWeight', 'fontSize', 'fontFamily', 'rich', 'tag', 'color', 'textBorderColor', 'textBorderWidth', 'width', 'height', 'lineHeight', 'align', 'verticalAlign', 'baseline', 'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY', 'textShadowColor', 'textShadowBlur', 'textShadowOffsetX', 'textShadowOffsetY', 'backgroundColor', 'borderColor', 'borderWidth', 'borderRadius', 'padding']; // modelUtil.LABEL_OPTIONS = modelUtil.TEXT_STYLE_OPTIONS.concat([\n//     'position', 'offset', 'rotate', 'origin', 'show', 'distance', 'formatter',\n//     'fontStyle', 'fontWeight', 'fontSize', 'fontFamily',\n//     // FIXME: deprecated, check and remove it.\n//     'textStyle'\n// ]);\n\n/**\n * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n * This helper method retieves value from data.\n * @param {string|number|Date|Array|Object} dataItem\n * @return {number|string|Date|Array.<number|string|Date>}\n */\n\nfunction getDataItemValue(dataItem) {\n  // Performance sensitive.\n  return dataItem && (dataItem.value == null ? dataItem : dataItem.value);\n}\n/**\n * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n * This helper method determine if dataItem has extra option besides value\n * @param {string|number|Date|Array|Object} dataItem\n */\n\n\nfunction isDataItemOption(dataItem) {\n  return isObject(dataItem) && !(dataItem instanceof Array); // // markLine data can be array\n  // && !(dataItem[0] && isObject(dataItem[0]) && !(dataItem[0] instanceof Array));\n}\n/**\n * This helper method convert value in data.\n * @param {string|number|Date} value\n * @param {Object|string} [dimInfo] If string (like 'x'), dimType defaults 'number'.\n */\n\n\nfunction converDataValue(value, dimInfo) {\n  // Performance sensitive.\n  var dimType = dimInfo && dimInfo.type;\n\n  if (dimType === 'ordinal') {\n    return value;\n  }\n\n  if (dimType === 'time' // spead up when using timestamp\n  && typeof value !== 'number' && value != null && value !== '-') {\n    value = +nubmerUtil.parseDate(value);\n  } // dimType defaults 'number'.\n  // If dimType is not ordinal and value is null or undefined or NaN or '-',\n  // parse to NaN.\n\n\n  return value == null || value === '' ? NaN : +value; // If string (like '-'), using '+' parse to NaN\n}\n/**\n * Create a model proxy to be used in tooltip for edge data, markLine data, markPoint data.\n * @param {module:echarts/data/List} data\n * @param {Object} opt\n * @param {string} [opt.seriesIndex]\n * @param {Object} [opt.name]\n * @param {Object} [opt.mainType]\n * @param {Object} [opt.subType]\n */\n\n\nfunction createDataFormatModel(data, opt) {\n  var model = new Model();\n  zrUtil.mixin(model, dataFormatMixin);\n  model.seriesIndex = opt.seriesIndex;\n  model.name = opt.name || '';\n  model.mainType = opt.mainType;\n  model.subType = opt.subType;\n\n  model.getData = function () {\n    return data;\n  };\n\n  return model;\n} // PENDING A little ugly\n\n\nvar dataFormatMixin = {\n  /**\n   * Get params for formatter\n   * @param {number} dataIndex\n   * @param {string} [dataType]\n   * @return {Object}\n   */\n  getDataParams: function (dataIndex, dataType) {\n    var data = this.getData(dataType);\n    var rawValue = this.getRawValue(dataIndex, dataType);\n    var rawDataIndex = data.getRawIndex(dataIndex);\n    var name = data.getName(dataIndex, true);\n    var itemOpt = data.getRawDataItem(dataIndex);\n    var color = data.getItemVisual(dataIndex, 'color');\n    return {\n      componentType: this.mainType,\n      componentSubType: this.subType,\n      seriesType: this.mainType === 'series' ? this.subType : null,\n      seriesIndex: this.seriesIndex,\n      seriesId: this.id,\n      seriesName: this.name,\n      name: name,\n      dataIndex: rawDataIndex,\n      data: itemOpt,\n      dataType: dataType,\n      value: rawValue,\n      color: color,\n      marker: formatUtil.getTooltipMarker(color),\n      // Param name list for mapping `a`, `b`, `c`, `d`, `e`\n      $vars: ['seriesName', 'name', 'value']\n    };\n  },\n\n  /**\n   * Format label\n   * @param {number} dataIndex\n   * @param {string} [status='normal'] 'normal' or 'emphasis'\n   * @param {string} [dataType]\n   * @param {number} [dimIndex]\n   * @param {string} [labelProp='label']\n   * @return {string}\n   */\n  getFormattedLabel: function (dataIndex, status, dataType, dimIndex, labelProp) {\n    status = status || 'normal';\n    var data = this.getData(dataType);\n    var itemModel = data.getItemModel(dataIndex);\n    var params = this.getDataParams(dataIndex, dataType);\n\n    if (dimIndex != null && params.value instanceof Array) {\n      params.value = params.value[dimIndex];\n    }\n\n    var formatter = itemModel.get([labelProp || 'label', status, 'formatter']);\n\n    if (typeof formatter === 'function') {\n      params.status = status;\n      return formatter(params);\n    } else if (typeof formatter === 'string') {\n      return formatUtil.formatTpl(formatter, params);\n    }\n  },\n\n  /**\n   * Get raw value in option\n   * @param {number} idx\n   * @param {string} [dataType]\n   * @return {Object}\n   */\n  getRawValue: function (idx, dataType) {\n    var data = this.getData(dataType);\n    var dataItem = data.getRawDataItem(idx);\n\n    if (dataItem != null) {\n      return isObject(dataItem) && !(dataItem instanceof Array) ? dataItem.value : dataItem;\n    }\n  },\n\n  /**\n   * Should be implemented.\n   * @param {number} dataIndex\n   * @param {boolean} [multipleSeries=false]\n   * @param {number} [dataType]\n   * @return {string} tooltip string\n   */\n  formatTooltip: zrUtil.noop\n};\n/**\n * Mapping to exists for merge.\n *\n * @public\n * @param {Array.<Object>|Array.<module:echarts/model/Component>} exists\n * @param {Object|Array.<Object>} newCptOptions\n * @return {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n *                          index of which is the same as exists.\n */\n\nfunction mappingToExists(exists, newCptOptions) {\n  // Mapping by the order by original option (but not order of\n  // new option) in merge mode. Because we should ensure\n  // some specified index (like xAxisIndex) is consistent with\n  // original option, which is easy to understand, espatially in\n  // media query. And in most case, merge option is used to\n  // update partial option but not be expected to change order.\n  newCptOptions = (newCptOptions || []).slice();\n  var result = zrUtil.map(exists || [], function (obj, index) {\n    return {\n      exist: obj\n    };\n  }); // Mapping by id or name if specified.\n\n  each(newCptOptions, function (cptOption, index) {\n    if (!isObject(cptOption)) {\n      return;\n    } // id has highest priority.\n\n\n    for (var i = 0; i < result.length; i++) {\n      if (!result[i].option // Consider name: two map to one.\n      && cptOption.id != null && result[i].exist.id === cptOption.id + '') {\n        result[i].option = cptOption;\n        newCptOptions[index] = null;\n        return;\n      }\n    }\n\n    for (var i = 0; i < result.length; i++) {\n      var exist = result[i].exist;\n\n      if (!result[i].option // Consider name: two map to one.\n      // Can not match when both ids exist but different.\n      && (exist.id == null || cptOption.id == null) && cptOption.name != null && !isIdInner(cptOption) && !isIdInner(exist) && exist.name === cptOption.name + '') {\n        result[i].option = cptOption;\n        newCptOptions[index] = null;\n        return;\n      }\n    }\n  }); // Otherwise mapping by index.\n\n  each(newCptOptions, function (cptOption, index) {\n    if (!isObject(cptOption)) {\n      return;\n    }\n\n    var i = 0;\n\n    for (; i < result.length; i++) {\n      var exist = result[i].exist;\n\n      if (!result[i].option // Existing model that already has id should be able to\n      // mapped to (because after mapping performed model may\n      // be assigned with a id, whish should not affect next\n      // mapping), except those has inner id.\n      && !isIdInner(exist) // Caution:\n      // Do not overwrite id. But name can be overwritten,\n      // because axis use name as 'show label text'.\n      // 'exist' always has id and name and we dont\n      // need to check it.\n      && cptOption.id == null) {\n        result[i].option = cptOption;\n        break;\n      }\n    }\n\n    if (i >= result.length) {\n      result.push({\n        option: cptOption\n      });\n    }\n  });\n  return result;\n}\n/**\n * Make id and name for mapping result (result of mappingToExists)\n * into `keyInfo` field.\n *\n * @public\n * @param {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n *                          which order is the same as exists.\n * @return {Array.<Object>} The input.\n */\n\n\nfunction makeIdAndName(mapResult) {\n  // We use this id to hash component models and view instances\n  // in echarts. id can be specified by user, or auto generated.\n  // The id generation rule ensures new view instance are able\n  // to mapped to old instance when setOption are called in\n  // no-merge mode. So we generate model id by name and plus\n  // type in view id.\n  // name can be duplicated among components, which is convenient\n  // to specify multi components (like series) by one name.\n  // Ensure that each id is distinct.\n  var idMap = zrUtil.createHashMap();\n  each(mapResult, function (item, index) {\n    var existCpt = item.exist;\n    existCpt && idMap.set(existCpt.id, item);\n  });\n  each(mapResult, function (item, index) {\n    var opt = item.option;\n    zrUtil.assert(!opt || opt.id == null || !idMap.get(opt.id) || idMap.get(opt.id) === item, 'id duplicates: ' + (opt && opt.id));\n    opt && opt.id != null && idMap.set(opt.id, item);\n    !item.keyInfo && (item.keyInfo = {});\n  }); // Make name and id.\n\n  each(mapResult, function (item, index) {\n    var existCpt = item.exist;\n    var opt = item.option;\n    var keyInfo = item.keyInfo;\n\n    if (!isObject(opt)) {\n      return;\n    } // name can be overwitten. Consider case: axis.name = '20km'.\n    // But id generated by name will not be changed, which affect\n    // only in that case: setOption with 'not merge mode' and view\n    // instance will be recreated, which can be accepted.\n\n\n    keyInfo.name = opt.name != null ? opt.name + '' : existCpt ? existCpt.name : '\\0-'; // name may be displayed on screen, so use '-'.\n\n    if (existCpt) {\n      keyInfo.id = existCpt.id;\n    } else if (opt.id != null) {\n      keyInfo.id = opt.id + '';\n    } else {\n      // Consider this situatoin:\n      //  optionA: [{name: 'a'}, {name: 'a'}, {..}]\n      //  optionB [{..}, {name: 'a'}, {name: 'a'}]\n      // Series with the same name between optionA and optionB\n      // should be mapped.\n      var idNum = 0;\n\n      do {\n        keyInfo.id = '\\0' + keyInfo.name + '\\0' + idNum++;\n      } while (idMap.get(keyInfo.id));\n    }\n\n    idMap.set(keyInfo.id, item);\n  });\n}\n/**\n * @public\n * @param {Object} cptOption\n * @return {boolean}\n */\n\n\nfunction isIdInner(cptOption) {\n  return isObject(cptOption) && cptOption.id && (cptOption.id + '').indexOf('\\0_ec_\\0') === 0;\n}\n/**\n * A helper for removing duplicate items between batchA and batchB,\n * and in themselves, and categorize by series.\n *\n * @param {Array.<Object>} batchA Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n * @param {Array.<Object>} batchB Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n * @return {Array.<Array.<Object>, Array.<Object>>} result: [resultBatchA, resultBatchB]\n */\n\n\nfunction compressBatches(batchA, batchB) {\n  var mapA = {};\n  var mapB = {};\n  makeMap(batchA || [], mapA);\n  makeMap(batchB || [], mapB, mapA);\n  return [mapToArray(mapA), mapToArray(mapB)];\n\n  function makeMap(sourceBatch, map, otherMap) {\n    for (var i = 0, len = sourceBatch.length; i < len; i++) {\n      var seriesId = sourceBatch[i].seriesId;\n      var dataIndices = normalizeToArray(sourceBatch[i].dataIndex);\n      var otherDataIndices = otherMap && otherMap[seriesId];\n\n      for (var j = 0, lenj = dataIndices.length; j < lenj; j++) {\n        var dataIndex = dataIndices[j];\n\n        if (otherDataIndices && otherDataIndices[dataIndex]) {\n          otherDataIndices[dataIndex] = null;\n        } else {\n          (map[seriesId] || (map[seriesId] = {}))[dataIndex] = 1;\n        }\n      }\n    }\n  }\n\n  function mapToArray(map, isData) {\n    var result = [];\n\n    for (var i in map) {\n      if (map.hasOwnProperty(i) && map[i] != null) {\n        if (isData) {\n          result.push(+i);\n        } else {\n          var dataIndices = mapToArray(map[i], true);\n          dataIndices.length && result.push({\n            seriesId: i,\n            dataIndex: dataIndices\n          });\n        }\n      }\n    }\n\n    return result;\n  }\n}\n/**\n * @param {module:echarts/data/List} data\n * @param {Object} payload Contains dataIndex (means rawIndex) / dataIndexInside / name\n *                         each of which can be Array or primary type.\n * @return {number|Array.<number>} dataIndex If not found, return undefined/null.\n */\n\n\nfunction queryDataIndex(data, payload) {\n  if (payload.dataIndexInside != null) {\n    return payload.dataIndexInside;\n  } else if (payload.dataIndex != null) {\n    return zrUtil.isArray(payload.dataIndex) ? zrUtil.map(payload.dataIndex, function (value) {\n      return data.indexOfRawIndex(value);\n    }) : data.indexOfRawIndex(payload.dataIndex);\n  } else if (payload.name != null) {\n    return zrUtil.isArray(payload.name) ? zrUtil.map(payload.name, function (value) {\n      return data.indexOfName(value);\n    }) : data.indexOfName(payload.name);\n  }\n}\n/**\n * Enable property storage to any host object.\n * Notice: Serialization is not supported.\n *\n * For example:\n * var get = modelUitl.makeGetter();\n *\n * function some(hostObj) {\n *      get(hostObj)._someProperty = 1212;\n *      ...\n * }\n *\n * @return {Function}\n */\n\n\nvar makeGetter = function () {\n  var index = 0;\n  return function () {\n    var key = '\\0__ec_prop_getter_' + index++;\n    return function (hostObj) {\n      return hostObj[key] || (hostObj[key] = {});\n    };\n  };\n}();\n/**\n * @param {module:echarts/model/Global} ecModel\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex, seriesId, seriesName,\n *            geoIndex, geoId, geoName,\n *            bmapIndex, bmapId, bmapName,\n *            xAxisIndex, xAxisId, xAxisName,\n *            yAxisIndex, yAxisId, yAxisName,\n *            gridIndex, gridId, gridName,\n *            ... (can be extended)\n *        }\n *        Each properties can be number|string|Array.<number>|Array.<string>\n *        For example, a finder could be\n *        {\n *            seriesIndex: 3,\n *            geoId: ['aa', 'cc'],\n *            gridName: ['xx', 'rr']\n *        }\n *        xxxIndex can be set as 'all' (means all xxx) or 'none' (means not specify)\n *        If nothing or null/undefined specified, return nothing.\n * @param {Object} [opt]\n * @param {string} [opt.defaultMainType]\n * @param {Array.<string>} [opt.includeMainTypes]\n * @return {Object} result like:\n *        {\n *            seriesModels: [seriesModel1, seriesModel2],\n *            seriesModel: seriesModel1, // The first model\n *            geoModels: [geoModel1, geoModel2],\n *            geoModel: geoModel1, // The first model\n *            ...\n *        }\n */\n\n\nfunction parseFinder(ecModel, finder, opt) {\n  if (zrUtil.isString(finder)) {\n    var obj = {};\n    obj[finder + 'Index'] = 0;\n    finder = obj;\n  }\n\n  var defaultMainType = opt && opt.defaultMainType;\n\n  if (defaultMainType && !has(finder, defaultMainType + 'Index') && !has(finder, defaultMainType + 'Id') && !has(finder, defaultMainType + 'Name')) {\n    finder[defaultMainType + 'Index'] = 0;\n  }\n\n  var result = {};\n  each(finder, function (value, key) {\n    var value = finder[key]; // Exclude 'dataIndex' and other illgal keys.\n\n    if (key === 'dataIndex' || key === 'dataIndexInside') {\n      result[key] = value;\n      return;\n    }\n\n    var parsedKey = key.match(/^(\\w+)(Index|Id|Name)$/) || [];\n    var mainType = parsedKey[1];\n    var queryType = (parsedKey[2] || '').toLowerCase();\n\n    if (!mainType || !queryType || value == null || queryType === 'index' && value === 'none' || opt && opt.includeMainTypes && zrUtil.indexOf(opt.includeMainTypes, mainType) < 0) {\n      return;\n    }\n\n    var queryParam = {\n      mainType: mainType\n    };\n\n    if (queryType !== 'index' || value !== 'all') {\n      queryParam[queryType] = value;\n    }\n\n    var models = ecModel.queryComponents(queryParam);\n    result[mainType + 'Models'] = models;\n    result[mainType + 'Model'] = models[0];\n  });\n  return result;\n}\n/**\n * @see {module:echarts/data/helper/completeDimensions}\n * @param {module:echarts/data/List} data\n * @param {string|number} dataDim\n * @return {string}\n */\n\n\nfunction dataDimToCoordDim(data, dataDim) {\n  var dimensions = data.dimensions;\n  dataDim = data.getDimension(dataDim);\n\n  for (var i = 0; i < dimensions.length; i++) {\n    var dimItem = data.getDimensionInfo(dimensions[i]);\n\n    if (dimItem.name === dataDim) {\n      return dimItem.coordDim;\n    }\n  }\n}\n/**\n * @see {module:echarts/data/helper/completeDimensions}\n * @param {module:echarts/data/List} data\n * @param {string} coordDim\n * @return {Array.<string>} data dimensions on the coordDim.\n */\n\n\nfunction coordDimToDataDim(data, coordDim) {\n  var dataDim = [];\n  each(data.dimensions, function (dimName) {\n    var dimItem = data.getDimensionInfo(dimName);\n\n    if (dimItem.coordDim === coordDim) {\n      dataDim[dimItem.coordDimIndex] = dimItem.name;\n    }\n  });\n  return dataDim;\n}\n/**\n * @see {module:echarts/data/helper/completeDimensions}\n * @param {module:echarts/data/List} data\n * @param {string} otherDim Can be `otherDims`\n *                        like 'label' or 'tooltip'.\n * @return {Array.<string>} data dimensions on the otherDim.\n */\n\n\nfunction otherDimToDataDim(data, otherDim) {\n  var dataDim = [];\n  each(data.dimensions, function (dimName) {\n    var dimItem = data.getDimensionInfo(dimName);\n    var otherDims = dimItem.otherDims;\n    var dimIndex = otherDims[otherDim];\n\n    if (dimIndex != null && dimIndex !== false) {\n      dataDim[dimIndex] = dimItem.name;\n    }\n  });\n  return dataDim;\n}\n\nfunction has(obj, prop) {\n  return obj && obj.hasOwnProperty(prop);\n}\n\nexports.normalizeToArray = normalizeToArray;\nexports.defaultEmphasis = defaultEmphasis;\nexports.TEXT_STYLE_OPTIONS = TEXT_STYLE_OPTIONS;\nexports.getDataItemValue = getDataItemValue;\nexports.isDataItemOption = isDataItemOption;\nexports.converDataValue = converDataValue;\nexports.createDataFormatModel = createDataFormatModel;\nexports.dataFormatMixin = dataFormatMixin;\nexports.mappingToExists = mappingToExists;\nexports.makeIdAndName = makeIdAndName;\nexports.isIdInner = isIdInner;\nexports.compressBatches = compressBatches;\nexports.queryDataIndex = queryDataIndex;\nexports.makeGetter = makeGetter;\nexports.parseFinder = parseFinder;\nexports.dataDimToCoordDim = dataDimToCoordDim;\nexports.coordDimToDataDim = coordDimToDataDim;\nexports.otherDimToDataDim = otherDimToDataDim;\n\n/***/ }),\n\n/***/ 1485:\n/***/ (function(module, exports) {\n\nvar ArrayCtor = typeof Float32Array === 'undefined' ? Array : Float32Array;\n/**\n * 创建一个向量\n * @param {number} [x=0]\n * @param {number} [y=0]\n * @return {Vector2}\n */\n\nfunction create(x, y) {\n  var out = new ArrayCtor(2);\n\n  if (x == null) {\n    x = 0;\n  }\n\n  if (y == null) {\n    y = 0;\n  }\n\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\n * 复制向量数据\n * @param {Vector2} out\n * @param {Vector2} v\n * @return {Vector2}\n */\n\n\nfunction copy(out, v) {\n  out[0] = v[0];\n  out[1] = v[1];\n  return out;\n}\n/**\n * 克隆一个向量\n * @param {Vector2} v\n * @return {Vector2}\n */\n\n\nfunction clone(v) {\n  var out = new ArrayCtor(2);\n  out[0] = v[0];\n  out[1] = v[1];\n  return out;\n}\n/**\n * 设置向量的两个项\n * @param {Vector2} out\n * @param {number} a\n * @param {number} b\n * @return {Vector2} 结果\n */\n\n\nfunction set(out, a, b) {\n  out[0] = a;\n  out[1] = b;\n  return out;\n}\n/**\n * 向量相加\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\n\nfunction add(out, v1, v2) {\n  out[0] = v1[0] + v2[0];\n  out[1] = v1[1] + v2[1];\n  return out;\n}\n/**\n * 向量缩放后相加\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @param {number} a\n */\n\n\nfunction scaleAndAdd(out, v1, v2, a) {\n  out[0] = v1[0] + v2[0] * a;\n  out[1] = v1[1] + v2[1] * a;\n  return out;\n}\n/**\n * 向量相减\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\n\nfunction sub(out, v1, v2) {\n  out[0] = v1[0] - v2[0];\n  out[1] = v1[1] - v2[1];\n  return out;\n}\n/**\n * 向量长度\n * @param {Vector2} v\n * @return {number}\n */\n\n\nfunction len(v) {\n  return Math.sqrt(lenSquare(v));\n}\n\nvar length = len; // jshint ignore:line\n\n/**\n * 向量长度平方\n * @param {Vector2} v\n * @return {number}\n */\n\nfunction lenSquare(v) {\n  return v[0] * v[0] + v[1] * v[1];\n}\n\nvar lengthSquare = lenSquare;\n/**\n * 向量乘法\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\nfunction mul(out, v1, v2) {\n  out[0] = v1[0] * v2[0];\n  out[1] = v1[1] * v2[1];\n  return out;\n}\n/**\n * 向量除法\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\n\nfunction div(out, v1, v2) {\n  out[0] = v1[0] / v2[0];\n  out[1] = v1[1] / v2[1];\n  return out;\n}\n/**\n * 向量点乘\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @return {number}\n */\n\n\nfunction dot(v1, v2) {\n  return v1[0] * v2[0] + v1[1] * v2[1];\n}\n/**\n * 向量缩放\n * @param {Vector2} out\n * @param {Vector2} v\n * @param {number} s\n */\n\n\nfunction scale(out, v, s) {\n  out[0] = v[0] * s;\n  out[1] = v[1] * s;\n  return out;\n}\n/**\n * 向量归一化\n * @param {Vector2} out\n * @param {Vector2} v\n */\n\n\nfunction normalize(out, v) {\n  var d = len(v);\n\n  if (d === 0) {\n    out[0] = 0;\n    out[1] = 0;\n  } else {\n    out[0] = v[0] / d;\n    out[1] = v[1] / d;\n  }\n\n  return out;\n}\n/**\n * 计算向量间距离\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @return {number}\n */\n\n\nfunction distance(v1, v2) {\n  return Math.sqrt((v1[0] - v2[0]) * (v1[0] - v2[0]) + (v1[1] - v2[1]) * (v1[1] - v2[1]));\n}\n\nvar dist = distance;\n/**\n * 向量距离平方\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @return {number}\n */\n\nfunction distanceSquare(v1, v2) {\n  return (v1[0] - v2[0]) * (v1[0] - v2[0]) + (v1[1] - v2[1]) * (v1[1] - v2[1]);\n}\n\nvar distSquare = distanceSquare;\n/**\n * 求负向量\n * @param {Vector2} out\n * @param {Vector2} v\n */\n\nfunction negate(out, v) {\n  out[0] = -v[0];\n  out[1] = -v[1];\n  return out;\n}\n/**\n * 插值两个点\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @param {number} t\n */\n\n\nfunction lerp(out, v1, v2, t) {\n  out[0] = v1[0] + t * (v2[0] - v1[0]);\n  out[1] = v1[1] + t * (v2[1] - v1[1]);\n  return out;\n}\n/**\n * 矩阵左乘向量\n * @param {Vector2} out\n * @param {Vector2} v\n * @param {Vector2} m\n */\n\n\nfunction applyTransform(out, v, m) {\n  var x = v[0];\n  var y = v[1];\n  out[0] = m[0] * x + m[2] * y + m[4];\n  out[1] = m[1] * x + m[3] * y + m[5];\n  return out;\n}\n/**\n * 求两个向量最小值\n * @param  {Vector2} out\n * @param  {Vector2} v1\n * @param  {Vector2} v2\n */\n\n\nfunction min(out, v1, v2) {\n  out[0] = Math.min(v1[0], v2[0]);\n  out[1] = Math.min(v1[1], v2[1]);\n  return out;\n}\n/**\n * 求两个向量最大值\n * @param  {Vector2} out\n * @param  {Vector2} v1\n * @param  {Vector2} v2\n */\n\n\nfunction max(out, v1, v2) {\n  out[0] = Math.max(v1[0], v2[0]);\n  out[1] = Math.max(v1[1], v2[1]);\n  return out;\n}\n\nexports.create = create;\nexports.copy = copy;\nexports.clone = clone;\nexports.set = set;\nexports.add = add;\nexports.scaleAndAdd = scaleAndAdd;\nexports.sub = sub;\nexports.len = len;\nexports.length = length;\nexports.lenSquare = lenSquare;\nexports.lengthSquare = lengthSquare;\nexports.mul = mul;\nexports.div = div;\nexports.dot = dot;\nexports.scale = scale;\nexports.normalize = normalize;\nexports.distance = distance;\nexports.dist = dist;\nexports.distanceSquare = distanceSquare;\nexports.distSquare = distSquare;\nexports.negate = negate;\nexports.lerp = lerp;\nexports.applyTransform = applyTransform;\nexports.min = min;\nexports.max = max;\n\n/***/ }),\n\n/***/ 1486:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1479);\n\nvar RADIAN_EPSILON = 1e-4;\n\nfunction _trim(str) {\n  return str.replace(/^\\s+/, '').replace(/\\s+$/, '');\n}\n/**\n * Linear mapping a value from domain to range\n * @memberOf module:echarts/util/number\n * @param  {(number|Array.<number>)} val\n * @param  {Array.<number>} domain Domain extent domain[0] can be bigger than domain[1]\n * @param  {Array.<number>} range  Range extent range[0] can be bigger than range[1]\n * @param  {boolean} clamp\n * @return {(number|Array.<number>}\n */\n\n\nfunction linearMap(val, domain, range, clamp) {\n  var subDomain = domain[1] - domain[0];\n  var subRange = range[1] - range[0];\n\n  if (subDomain === 0) {\n    return subRange === 0 ? range[0] : (range[0] + range[1]) / 2;\n  } // Avoid accuracy problem in edge, such as\n  // 146.39 - 62.83 === 83.55999999999999.\n  // See echarts/test/ut/spec/util/number.js#linearMap#accuracyError\n  // It is a little verbose for efficiency considering this method\n  // is a hotspot.\n\n\n  if (clamp) {\n    if (subDomain > 0) {\n      if (val <= domain[0]) {\n        return range[0];\n      } else if (val >= domain[1]) {\n        return range[1];\n      }\n    } else {\n      if (val >= domain[0]) {\n        return range[0];\n      } else if (val <= domain[1]) {\n        return range[1];\n      }\n    }\n  } else {\n    if (val === domain[0]) {\n      return range[0];\n    }\n\n    if (val === domain[1]) {\n      return range[1];\n    }\n  }\n\n  return (val - domain[0]) / subDomain * subRange + range[0];\n}\n/**\n * Convert a percent string to absolute number.\n * Returns NaN if percent is not a valid string or number\n * @memberOf module:echarts/util/number\n * @param {string|number} percent\n * @param {number} all\n * @return {number}\n */\n\n\nfunction parsePercent(percent, all) {\n  switch (percent) {\n    case 'center':\n    case 'middle':\n      percent = '50%';\n      break;\n\n    case 'left':\n    case 'top':\n      percent = '0%';\n      break;\n\n    case 'right':\n    case 'bottom':\n      percent = '100%';\n      break;\n  }\n\n  if (typeof percent === 'string') {\n    if (_trim(percent).match(/%$/)) {\n      return parseFloat(percent) / 100 * all;\n    }\n\n    return parseFloat(percent);\n  }\n\n  return percent == null ? NaN : +percent;\n}\n/**\n * (1) Fix rounding error of float numbers.\n * (2) Support return string to avoid scientific notation like '3.5e-7'.\n *\n * @param {number} x\n * @param {number} [precision]\n * @param {boolean} [returnStr]\n * @return {number|string}\n */\n\n\nfunction round(x, precision, returnStr) {\n  if (precision == null) {\n    precision = 10;\n  } // Avoid range error\n\n\n  precision = Math.min(Math.max(0, precision), 20);\n  x = (+x).toFixed(precision);\n  return returnStr ? x : +x;\n}\n\nfunction asc(arr) {\n  arr.sort(function (a, b) {\n    return a - b;\n  });\n  return arr;\n}\n/**\n * Get precision\n * @param {number} val\n */\n\n\nfunction getPrecision(val) {\n  val = +val;\n\n  if (isNaN(val)) {\n    return 0;\n  } // It is much faster than methods converting number to string as follows\n  //      var tmp = val.toString();\n  //      return tmp.length - 1 - tmp.indexOf('.');\n  // especially when precision is low\n\n\n  var e = 1;\n  var count = 0;\n\n  while (Math.round(val * e) / e !== val) {\n    e *= 10;\n    count++;\n  }\n\n  return count;\n}\n/**\n * @param {string|number} val\n * @return {number}\n */\n\n\nfunction getPrecisionSafe(val) {\n  var str = val.toString(); // Consider scientific notation: '3.4e-12' '3.4e+12'\n\n  var eIndex = str.indexOf('e');\n\n  if (eIndex > 0) {\n    var precision = +str.slice(eIndex + 1);\n    return precision < 0 ? -precision : 0;\n  } else {\n    var dotIndex = str.indexOf('.');\n    return dotIndex < 0 ? 0 : str.length - 1 - dotIndex;\n  }\n}\n/**\n * Minimal dicernible data precisioin according to a single pixel.\n *\n * @param {Array.<number>} dataExtent\n * @param {Array.<number>} pixelExtent\n * @return {number} precision\n */\n\n\nfunction getPixelPrecision(dataExtent, pixelExtent) {\n  var log = Math.log;\n  var LN10 = Math.LN10;\n  var dataQuantity = Math.floor(log(dataExtent[1] - dataExtent[0]) / LN10);\n  var sizeQuantity = Math.round(log(Math.abs(pixelExtent[1] - pixelExtent[0])) / LN10); // toFixed() digits argument must be between 0 and 20.\n\n  var precision = Math.min(Math.max(-dataQuantity + sizeQuantity, 0), 20);\n  return !isFinite(precision) ? 20 : precision;\n}\n/**\n * Get a data of given precision, assuring the sum of percentages\n * in valueList is 1.\n * The largest remainer method is used.\n * https://en.wikipedia.org/wiki/Largest_remainder_method\n *\n * @param {Array.<number>} valueList a list of all data\n * @param {number} idx index of the data to be processed in valueList\n * @param {number} precision integer number showing digits of precision\n * @return {number} percent ranging from 0 to 100\n */\n\n\nfunction getPercentWithPrecision(valueList, idx, precision) {\n  if (!valueList[idx]) {\n    return 0;\n  }\n\n  var sum = zrUtil.reduce(valueList, function (acc, val) {\n    return acc + (isNaN(val) ? 0 : val);\n  }, 0);\n\n  if (sum === 0) {\n    return 0;\n  }\n\n  var digits = Math.pow(10, precision);\n  var votesPerQuota = zrUtil.map(valueList, function (val) {\n    return (isNaN(val) ? 0 : val) / sum * digits * 100;\n  });\n  var targetSeats = digits * 100;\n  var seats = zrUtil.map(votesPerQuota, function (votes) {\n    // Assign automatic seats.\n    return Math.floor(votes);\n  });\n  var currentSum = zrUtil.reduce(seats, function (acc, val) {\n    return acc + val;\n  }, 0);\n  var remainder = zrUtil.map(votesPerQuota, function (votes, idx) {\n    return votes - seats[idx];\n  }); // Has remainding votes.\n\n  while (currentSum < targetSeats) {\n    // Find next largest remainder.\n    var max = Number.NEGATIVE_INFINITY;\n    var maxId = null;\n\n    for (var i = 0, len = remainder.length; i < len; ++i) {\n      if (remainder[i] > max) {\n        max = remainder[i];\n        maxId = i;\n      }\n    } // Add a vote to max remainder.\n\n\n    ++seats[maxId];\n    remainder[maxId] = 0;\n    ++currentSum;\n  }\n\n  return seats[idx] / digits;\n} // Number.MAX_SAFE_INTEGER, ie do not support.\n\n\nvar MAX_SAFE_INTEGER = 9007199254740991;\n/**\n * To 0 - 2 * PI, considering negative radian.\n * @param {number} radian\n * @return {number}\n */\n\nfunction remRadian(radian) {\n  var pi2 = Math.PI * 2;\n  return (radian % pi2 + pi2) % pi2;\n}\n/**\n * @param {type} radian\n * @return {boolean}\n */\n\n\nfunction isRadianAroundZero(val) {\n  return val > -RADIAN_EPSILON && val < RADIAN_EPSILON;\n}\n\nvar TIME_REG = /^(?:(\\d{4})(?:[-\\/](\\d{1,2})(?:[-\\/](\\d{1,2})(?:[T ](\\d{1,2})(?::(\\d\\d)(?::(\\d\\d)(?:[.,](\\d+))?)?)?(Z|[\\+\\-]\\d\\d:?\\d\\d)?)?)?)?)?$/; // jshint ignore:line\n\n/**\n * @param {string|Date|number} value These values can be accepted:\n *   + An instance of Date, represent a time in its own time zone.\n *   + Or string in a subset of ISO 8601, only including:\n *     + only year, month, date: '2012-03', '2012-03-01', '2012-03-01 05', '2012-03-01 05:06',\n *     + separated with T or space: '2012-03-01T12:22:33.123', '2012-03-01 12:22:33.123',\n *     + time zone: '2012-03-01T12:22:33Z', '2012-03-01T12:22:33+8000', '2012-03-01T12:22:33-05:00',\n *     all of which will be treated as local time if time zone is not specified\n *     (see <https://momentjs.com/>).\n *   + Or other string format, including (all of which will be treated as loacal time):\n *     '2012', '2012-3-1', '2012/3/1', '2012/03/01',\n *     '2009/6/12 2:00', '2009/6/12 2:05:08', '2009/6/12 2:05:08.123'\n *   + a timestamp, which represent a time in UTC.\n * @return {Date} date\n */\n\nfunction parseDate(value) {\n  if (value instanceof Date) {\n    return value;\n  } else if (typeof value === 'string') {\n    // Different browsers parse date in different way, so we parse it manually.\n    // Some other issues:\n    // new Date('1970-01-01') is UTC,\n    // new Date('1970/01/01') and new Date('1970-1-01') is local.\n    // See issue #3623\n    var match = TIME_REG.exec(value);\n\n    if (!match) {\n      // return Invalid Date.\n      return new Date(NaN);\n    } // Use local time when no timezone offset specifed.\n\n\n    if (!match[8]) {\n      // match[n] can only be string or undefined.\n      // But take care of '12' + 1 => '121'.\n      return new Date(+match[1], +(match[2] || 1) - 1, +match[3] || 1, +match[4] || 0, +(match[5] || 0), +match[6] || 0, +match[7] || 0);\n    } // Timezoneoffset of Javascript Date has considered DST (Daylight Saving Time,\n    // https://tc39.github.io/ecma262/#sec-daylight-saving-time-adjustment).\n    // For example, system timezone is set as \"Time Zone: America/Toronto\",\n    // then these code will get different result:\n    // `new Date(1478411999999).getTimezoneOffset();  // get 240`\n    // `new Date(1478412000000).getTimezoneOffset();  // get 300`\n    // So we should not use `new Date`, but use `Date.UTC`.\n    else {\n        var hour = +match[4] || 0;\n\n        if (match[8].toUpperCase() !== 'Z') {\n          hour -= match[8].slice(0, 3);\n        }\n\n        return new Date(Date.UTC(+match[1], +(match[2] || 1) - 1, +match[3] || 1, hour, +(match[5] || 0), +match[6] || 0, +match[7] || 0));\n      }\n  } else if (value == null) {\n    return new Date(NaN);\n  }\n\n  return new Date(Math.round(value));\n}\n/**\n * Quantity of a number. e.g. 0.1, 1, 10, 100\n *\n * @param  {number} val\n * @return {number}\n */\n\n\nfunction quantity(val) {\n  return Math.pow(10, quantityExponent(val));\n}\n\nfunction quantityExponent(val) {\n  return Math.floor(Math.log(val) / Math.LN10);\n}\n/**\n * find a “nice” number approximately equal to x. Round the number if round = true,\n * take ceiling if round = false. The primary observation is that the “nicest”\n * numbers in decimal are 1, 2, and 5, and all power-of-ten multiples of these numbers.\n *\n * See \"Nice Numbers for Graph Labels\" of Graphic Gems.\n *\n * @param  {number} val Non-negative value.\n * @param  {boolean} round\n * @return {number}\n */\n\n\nfunction nice(val, round) {\n  var exponent = quantityExponent(val);\n  var exp10 = Math.pow(10, exponent);\n  var f = val / exp10; // 1 <= f < 10\n\n  var nf;\n\n  if (round) {\n    if (f < 1.5) {\n      nf = 1;\n    } else if (f < 2.5) {\n      nf = 2;\n    } else if (f < 4) {\n      nf = 3;\n    } else if (f < 7) {\n      nf = 5;\n    } else {\n      nf = 10;\n    }\n  } else {\n    if (f < 1) {\n      nf = 1;\n    } else if (f < 2) {\n      nf = 2;\n    } else if (f < 3) {\n      nf = 3;\n    } else if (f < 5) {\n      nf = 5;\n    } else {\n      nf = 10;\n    }\n  }\n\n  val = nf * exp10; // Fix 3 * 0.1 === 0.30000000000000004 issue (see IEEE 754).\n  // 20 is the uppper bound of toFixed.\n\n  return exponent >= -20 ? +val.toFixed(exponent < 0 ? -exponent : 0) : val;\n}\n/**\n * Order intervals asc, and split them when overlap.\n * expect(numberUtil.reformIntervals([\n *     {interval: [18, 62], close: [1, 1]},\n *     {interval: [-Infinity, -70], close: [0, 0]},\n *     {interval: [-70, -26], close: [1, 1]},\n *     {interval: [-26, 18], close: [1, 1]},\n *     {interval: [62, 150], close: [1, 1]},\n *     {interval: [106, 150], close: [1, 1]},\n *     {interval: [150, Infinity], close: [0, 0]}\n * ])).toEqual([\n *     {interval: [-Infinity, -70], close: [0, 0]},\n *     {interval: [-70, -26], close: [1, 1]},\n *     {interval: [-26, 18], close: [0, 1]},\n *     {interval: [18, 62], close: [0, 1]},\n *     {interval: [62, 150], close: [0, 1]},\n *     {interval: [150, Infinity], close: [0, 0]}\n * ]);\n * @param {Array.<Object>} list, where `close` mean open or close\n *        of the interval, and Infinity can be used.\n * @return {Array.<Object>} The origin list, which has been reformed.\n */\n\n\nfunction reformIntervals(list) {\n  list.sort(function (a, b) {\n    return littleThan(a, b, 0) ? -1 : 1;\n  });\n  var curr = -Infinity;\n  var currClose = 1;\n\n  for (var i = 0; i < list.length;) {\n    var interval = list[i].interval;\n    var close = list[i].close;\n\n    for (var lg = 0; lg < 2; lg++) {\n      if (interval[lg] <= curr) {\n        interval[lg] = curr;\n        close[lg] = !lg ? 1 - currClose : 1;\n      }\n\n      curr = interval[lg];\n      currClose = close[lg];\n    }\n\n    if (interval[0] === interval[1] && close[0] * close[1] !== 1) {\n      list.splice(i, 1);\n    } else {\n      i++;\n    }\n  }\n\n  return list;\n\n  function littleThan(a, b, lg) {\n    return a.interval[lg] < b.interval[lg] || a.interval[lg] === b.interval[lg] && (a.close[lg] - b.close[lg] === (!lg ? 1 : -1) || !lg && littleThan(a, b, 1));\n  }\n}\n/**\n * parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n * ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n * subtraction forces infinities to NaN\n *\n * @param {*} v\n * @return {boolean}\n */\n\n\nfunction isNumeric(v) {\n  return v - parseFloat(v) >= 0;\n}\n\nexports.linearMap = linearMap;\nexports.parsePercent = parsePercent;\nexports.round = round;\nexports.asc = asc;\nexports.getPrecision = getPrecision;\nexports.getPrecisionSafe = getPrecisionSafe;\nexports.getPixelPrecision = getPixelPrecision;\nexports.getPercentWithPrecision = getPercentWithPrecision;\nexports.MAX_SAFE_INTEGER = MAX_SAFE_INTEGER;\nexports.remRadian = remRadian;\nexports.isRadianAroundZero = isRadianAroundZero;\nexports.parseDate = parseDate;\nexports.quantity = quantity;\nexports.nice = nice;\nexports.reformIntervals = reformIntervals;\nexports.isNumeric = isNumeric;\n\n/***/ }),\n\n/***/ 1490:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(1494);\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrender = __webpack_require__(1650);\n\nvar zrUtil = __webpack_require__(1479);\n\nvar colorTool = __webpack_require__(1533);\n\nvar env = __webpack_require__(1495);\n\nvar timsort = __webpack_require__(1574);\n\nvar Eventful = __webpack_require__(1532);\n\nvar GlobalModel = __webpack_require__(1716);\n\nvar ExtensionAPI = __webpack_require__(1675);\n\nvar CoordinateSystemManager = __webpack_require__(1564);\n\nvar OptionManager = __webpack_require__(1717);\n\nvar backwardCompat = __webpack_require__(1724);\n\nvar ComponentModel = __webpack_require__(1508);\n\nvar SeriesModel = __webpack_require__(1566);\n\nvar ComponentView = __webpack_require__(1730);\n\nvar ChartView = __webpack_require__(1618);\n\nvar graphic = __webpack_require__(1483);\n\nvar modelUtil = __webpack_require__(1484);\n\nvar _throttle = __webpack_require__(1570);\n\nvar throttle = _throttle.throttle;\n\nvar seriesColor = __webpack_require__(1731);\n\nvar loadingDefault = __webpack_require__(1715);\n\n/*!\n * ECharts, a javascript interactive chart library.\n *\n * Copyright (c) 2015, Baidu Inc.\n * All rights reserved.\n *\n * LICENSE\n * https://github.com/ecomfe/echarts/blob/master/LICENSE.txt\n */\nvar each = zrUtil.each;\nvar parseClassType = ComponentModel.parseClassType;\nvar version = '3.8.5';\nvar dependencies = {\n  zrender: '3.7.4'\n};\nvar PRIORITY_PROCESSOR_FILTER = 1000;\nvar PRIORITY_PROCESSOR_STATISTIC = 5000;\nvar PRIORITY_VISUAL_LAYOUT = 1000;\nvar PRIORITY_VISUAL_GLOBAL = 2000;\nvar PRIORITY_VISUAL_CHART = 3000;\nvar PRIORITY_VISUAL_COMPONENT = 4000; // FIXME\n// necessary?\n\nvar PRIORITY_VISUAL_BRUSH = 5000;\nvar PRIORITY = {\n  PROCESSOR: {\n    FILTER: PRIORITY_PROCESSOR_FILTER,\n    STATISTIC: PRIORITY_PROCESSOR_STATISTIC\n  },\n  VISUAL: {\n    LAYOUT: PRIORITY_VISUAL_LAYOUT,\n    GLOBAL: PRIORITY_VISUAL_GLOBAL,\n    CHART: PRIORITY_VISUAL_CHART,\n    COMPONENT: PRIORITY_VISUAL_COMPONENT,\n    BRUSH: PRIORITY_VISUAL_BRUSH\n  }\n}; // Main process have three entries: `setOption`, `dispatchAction` and `resize`,\n// where they must not be invoked nestedly, except the only case: invoke\n// dispatchAction with updateMethod \"none\" in main process.\n// This flag is used to carry out this rule.\n// All events will be triggered out side main process (i.e. when !this[IN_MAIN_PROCESS]).\n\nvar IN_MAIN_PROCESS = '__flagInMainProcess';\nvar HAS_GRADIENT_OR_PATTERN_BG = '__hasGradientOrPatternBg';\nvar OPTION_UPDATED = '__optionUpdated';\nvar ACTION_REG = /^[a-zA-Z0-9_]+$/;\n\nfunction createRegisterEventWithLowercaseName(method) {\n  return function (eventName, handler, context) {\n    // Event name is all lowercase\n    eventName = eventName && eventName.toLowerCase();\n    Eventful.prototype[method].call(this, eventName, handler, context);\n  };\n}\n/**\n * @module echarts~MessageCenter\n */\n\n\nfunction MessageCenter() {\n  Eventful.call(this);\n}\n\nMessageCenter.prototype.on = createRegisterEventWithLowercaseName('on');\nMessageCenter.prototype.off = createRegisterEventWithLowercaseName('off');\nMessageCenter.prototype.one = createRegisterEventWithLowercaseName('one');\nzrUtil.mixin(MessageCenter, Eventful);\n/**\n * @module echarts~ECharts\n */\n\nfunction ECharts(dom, theme, opts) {\n  opts = opts || {}; // Get theme by name\n\n  if (typeof theme === 'string') {\n    theme = themeStorage[theme];\n  }\n  /**\n   * @type {string}\n   */\n\n\n  this.id;\n  /**\n   * Group id\n   * @type {string}\n   */\n\n  this.group;\n  /**\n   * @type {HTMLElement}\n   * @private\n   */\n\n  this._dom = dom;\n  var defaultRenderer = 'canvas';\n\n  /**\n   * @type {module:zrender/ZRender}\n   * @private\n   */\n  var zr = this._zr = zrender.init(dom, {\n    renderer: opts.renderer || defaultRenderer,\n    devicePixelRatio: opts.devicePixelRatio,\n    width: opts.width,\n    height: opts.height\n  });\n  /**\n   * Expect 60 pfs.\n   * @type {Function}\n   * @private\n   */\n\n  this._throttledZrFlush = throttle(zrUtil.bind(zr.flush, zr), 17);\n  var theme = zrUtil.clone(theme);\n  theme && backwardCompat(theme, true);\n  /**\n   * @type {Object}\n   * @private\n   */\n\n  this._theme = theme;\n  /**\n   * @type {Array.<module:echarts/view/Chart>}\n   * @private\n   */\n\n  this._chartsViews = [];\n  /**\n   * @type {Object.<string, module:echarts/view/Chart>}\n   * @private\n   */\n\n  this._chartsMap = {};\n  /**\n   * @type {Array.<module:echarts/view/Component>}\n   * @private\n   */\n\n  this._componentsViews = [];\n  /**\n   * @type {Object.<string, module:echarts/view/Component>}\n   * @private\n   */\n\n  this._componentsMap = {};\n  /**\n   * @type {module:echarts/CoordinateSystem}\n   * @private\n   */\n\n  this._coordSysMgr = new CoordinateSystemManager();\n  /**\n   * @type {module:echarts/ExtensionAPI}\n   * @private\n   */\n\n  this._api = createExtensionAPI(this);\n  Eventful.call(this);\n  /**\n   * @type {module:echarts~MessageCenter}\n   * @private\n   */\n\n  this._messageCenter = new MessageCenter(); // Init mouse events\n\n  this._initEvents(); // In case some people write `window.onresize = chart.resize`\n\n\n  this.resize = zrUtil.bind(this.resize, this); // Can't dispatch action during rendering procedure\n\n  this._pendingActions = []; // Sort on demand\n\n  function prioritySortFunc(a, b) {\n    return a.prio - b.prio;\n  }\n\n  timsort(visualFuncs, prioritySortFunc);\n  timsort(dataProcessorFuncs, prioritySortFunc);\n  zr.animation.on('frame', this._onframe, this); // ECharts instance can be used as value.\n\n  zrUtil.setAsPrimitive(this);\n}\n\nvar echartsProto = ECharts.prototype;\n\nechartsProto._onframe = function () {\n  // Lazy update\n  if (this[OPTION_UPDATED]) {\n    var silent = this[OPTION_UPDATED].silent;\n    this[IN_MAIN_PROCESS] = true;\n    updateMethods.prepareAndUpdate.call(this);\n    this[IN_MAIN_PROCESS] = false;\n    this[OPTION_UPDATED] = false;\n    flushPendingActions.call(this, silent);\n    triggerUpdatedEvent.call(this, silent);\n  }\n};\n/**\n * @return {HTMLElement}\n */\n\n\nechartsProto.getDom = function () {\n  return this._dom;\n};\n/**\n * @return {module:zrender~ZRender}\n */\n\n\nechartsProto.getZr = function () {\n  return this._zr;\n};\n/**\n * Usage:\n * chart.setOption(option, notMerge, lazyUpdate);\n * chart.setOption(option, {\n *     notMerge: ...,\n *     lazyUpdate: ...,\n *     silent: ...\n * });\n *\n * @param {Object} option\n * @param {Object|boolean} [opts] opts or notMerge.\n * @param {boolean} [opts.notMerge=false]\n * @param {boolean} [opts.lazyUpdate=false] Useful when setOption frequently.\n */\n\n\nechartsProto.setOption = function (option, notMerge, lazyUpdate) {\n  var silent;\n\n  if (zrUtil.isObject(notMerge)) {\n    lazyUpdate = notMerge.lazyUpdate;\n    silent = notMerge.silent;\n    notMerge = notMerge.notMerge;\n  }\n\n  this[IN_MAIN_PROCESS] = true;\n\n  if (!this._model || notMerge) {\n    var optionManager = new OptionManager(this._api);\n    var theme = this._theme;\n    var ecModel = this._model = new GlobalModel(null, null, theme, optionManager);\n    ecModel.init(null, null, theme, optionManager);\n  }\n\n  this._model.setOption(option, optionPreprocessorFuncs);\n\n  if (lazyUpdate) {\n    this[OPTION_UPDATED] = {\n      silent: silent\n    };\n    this[IN_MAIN_PROCESS] = false;\n  } else {\n    updateMethods.prepareAndUpdate.call(this); // Ensure zr refresh sychronously, and then pixel in canvas can be\n    // fetched after `setOption`.\n\n    this._zr.flush();\n\n    this[OPTION_UPDATED] = false;\n    this[IN_MAIN_PROCESS] = false;\n    flushPendingActions.call(this, silent);\n    triggerUpdatedEvent.call(this, silent);\n  }\n};\n/**\n * @DEPRECATED\n */\n\n\nechartsProto.setTheme = function () {\n  console.log('ECharts#setTheme() is DEPRECATED in ECharts 3.0');\n};\n/**\n * @return {module:echarts/model/Global}\n */\n\n\nechartsProto.getModel = function () {\n  return this._model;\n};\n/**\n * @return {Object}\n */\n\n\nechartsProto.getOption = function () {\n  return this._model && this._model.getOption();\n};\n/**\n * @return {number}\n */\n\n\nechartsProto.getWidth = function () {\n  return this._zr.getWidth();\n};\n/**\n * @return {number}\n */\n\n\nechartsProto.getHeight = function () {\n  return this._zr.getHeight();\n};\n/**\n * @return {number}\n */\n\n\nechartsProto.getDevicePixelRatio = function () {\n  return this._zr.painter.dpr || window.devicePixelRatio || 1;\n};\n/**\n * Get canvas which has all thing rendered\n * @param {Object} opts\n * @param {string} [opts.backgroundColor]\n * @return {string}\n */\n\n\nechartsProto.getRenderedCanvas = function (opts) {\n  if (!env.canvasSupported) {\n    return;\n  }\n\n  opts = opts || {};\n  opts.pixelRatio = opts.pixelRatio || 1;\n  opts.backgroundColor = opts.backgroundColor || this._model.get('backgroundColor');\n  var zr = this._zr;\n  var list = zr.storage.getDisplayList(); // Stop animations\n\n  zrUtil.each(list, function (el) {\n    el.stopAnimation(true);\n  });\n  return zr.painter.getRenderedCanvas(opts);\n};\n/**\n * Get svg data url\n * @return {string}\n */\n\n\nechartsProto.getSvgDataUrl = function () {\n  if (!env.svgSupported) {\n    return;\n  }\n\n  var zr = this._zr;\n  var list = zr.storage.getDisplayList(); // Stop animations\n\n  zrUtil.each(list, function (el) {\n    el.stopAnimation(true);\n  });\n  return zr.painter.pathToSvg();\n};\n/**\n * @return {string}\n * @param {Object} opts\n * @param {string} [opts.type='png']\n * @param {string} [opts.pixelRatio=1]\n * @param {string} [opts.backgroundColor]\n * @param {string} [opts.excludeComponents]\n */\n\n\nechartsProto.getDataURL = function (opts) {\n  opts = opts || {};\n  var excludeComponents = opts.excludeComponents;\n  var ecModel = this._model;\n  var excludesComponentViews = [];\n  var self = this;\n  each(excludeComponents, function (componentType) {\n    ecModel.eachComponent({\n      mainType: componentType\n    }, function (component) {\n      var view = self._componentsMap[component.__viewId];\n\n      if (!view.group.ignore) {\n        excludesComponentViews.push(view);\n        view.group.ignore = true;\n      }\n    });\n  });\n  var url = this._zr.painter.getType() === 'svg' ? this.getSvgDataUrl() : this.getRenderedCanvas(opts).toDataURL('image/' + (opts && opts.type || 'png'));\n  each(excludesComponentViews, function (view) {\n    view.group.ignore = false;\n  });\n  return url;\n};\n/**\n * @return {string}\n * @param {Object} opts\n * @param {string} [opts.type='png']\n * @param {string} [opts.pixelRatio=1]\n * @param {string} [opts.backgroundColor]\n */\n\n\nechartsProto.getConnectedDataURL = function (opts) {\n  if (!env.canvasSupported) {\n    return;\n  }\n\n  var groupId = this.group;\n  var mathMin = Math.min;\n  var mathMax = Math.max;\n  var MAX_NUMBER = Infinity;\n\n  if (connectedGroups[groupId]) {\n    var left = MAX_NUMBER;\n    var top = MAX_NUMBER;\n    var right = -MAX_NUMBER;\n    var bottom = -MAX_NUMBER;\n    var canvasList = [];\n    var dpr = opts && opts.pixelRatio || 1;\n    zrUtil.each(instances, function (chart, id) {\n      if (chart.group === groupId) {\n        var canvas = chart.getRenderedCanvas(zrUtil.clone(opts));\n        var boundingRect = chart.getDom().getBoundingClientRect();\n        left = mathMin(boundingRect.left, left);\n        top = mathMin(boundingRect.top, top);\n        right = mathMax(boundingRect.right, right);\n        bottom = mathMax(boundingRect.bottom, bottom);\n        canvasList.push({\n          dom: canvas,\n          left: boundingRect.left,\n          top: boundingRect.top\n        });\n      }\n    });\n    left *= dpr;\n    top *= dpr;\n    right *= dpr;\n    bottom *= dpr;\n    var width = right - left;\n    var height = bottom - top;\n    var targetCanvas = zrUtil.createCanvas();\n    targetCanvas.width = width;\n    targetCanvas.height = height;\n    var zr = zrender.init(targetCanvas);\n    each(canvasList, function (item) {\n      var img = new graphic.Image({\n        style: {\n          x: item.left * dpr - left,\n          y: item.top * dpr - top,\n          image: item.dom\n        }\n      });\n      zr.add(img);\n    });\n    zr.refreshImmediately();\n    return targetCanvas.toDataURL('image/' + (opts && opts.type || 'png'));\n  } else {\n    return this.getDataURL(opts);\n  }\n};\n/**\n * Convert from logical coordinate system to pixel coordinate system.\n * See CoordinateSystem#convertToPixel.\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            geoIndex / geoId, geoName,\n *            bmapIndex / bmapId / bmapName,\n *            xAxisIndex / xAxisId / xAxisName,\n *            yAxisIndex / yAxisId / yAxisName,\n *            gridIndex / gridId / gridName,\n *            ... (can be extended)\n *        }\n * @param {Array|number} value\n * @return {Array|number} result\n */\n\n\nechartsProto.convertToPixel = zrUtil.curry(doConvertPixel, 'convertToPixel');\n/**\n * Convert from pixel coordinate system to logical coordinate system.\n * See CoordinateSystem#convertFromPixel.\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            geoIndex / geoId / geoName,\n *            bmapIndex / bmapId / bmapName,\n *            xAxisIndex / xAxisId / xAxisName,\n *            yAxisIndex / yAxisId / yAxisName\n *            gridIndex / gridId / gridName,\n *            ... (can be extended)\n *        }\n * @param {Array|number} value\n * @return {Array|number} result\n */\n\nechartsProto.convertFromPixel = zrUtil.curry(doConvertPixel, 'convertFromPixel');\n\nfunction doConvertPixel(methodName, finder, value) {\n  var ecModel = this._model;\n\n  var coordSysList = this._coordSysMgr.getCoordinateSystems();\n\n  var result;\n  finder = modelUtil.parseFinder(ecModel, finder);\n\n  for (var i = 0; i < coordSysList.length; i++) {\n    var coordSys = coordSysList[i];\n\n    if (coordSys[methodName] && (result = coordSys[methodName](ecModel, finder, value)) != null) {\n      return result;\n    }\n  }\n}\n/**\n * Is the specified coordinate systems or components contain the given pixel point.\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            geoIndex / geoId / geoName,\n *            bmapIndex / bmapId / bmapName,\n *            xAxisIndex / xAxisId / xAxisName,\n *            yAxisIndex / yAxisId / yAxisName,\n *            gridIndex / gridId / gridName,\n *            ... (can be extended)\n *        }\n * @param {Array|number} value\n * @return {boolean} result\n */\n\n\nechartsProto.containPixel = function (finder, value) {\n  var ecModel = this._model;\n  var result;\n  finder = modelUtil.parseFinder(ecModel, finder);\n  zrUtil.each(finder, function (models, key) {\n    key.indexOf('Models') >= 0 && zrUtil.each(models, function (model) {\n      var coordSys = model.coordinateSystem;\n\n      if (coordSys && coordSys.containPoint) {\n        result |= !!coordSys.containPoint(value);\n      } else if (key === 'seriesModels') {\n        var view = this._chartsMap[model.__viewId];\n\n        if (view && view.containPoint) {\n          result |= view.containPoint(value, model);\n        } else {}\n      } else {}\n    }, this);\n  }, this);\n  return !!result;\n};\n/**\n * Get visual from series or data.\n * @param {string|Object} finder\n *        If string, e.g., 'series', means {seriesIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            dataIndex / dataIndexInside\n *        }\n *        If dataIndex is not specified, series visual will be fetched,\n *        but not data item visual.\n *        If all of seriesIndex, seriesId, seriesName are not specified,\n *        visual will be fetched from first series.\n * @param {string} visualType 'color', 'symbol', 'symbolSize'\n */\n\n\nechartsProto.getVisual = function (finder, visualType) {\n  var ecModel = this._model;\n  finder = modelUtil.parseFinder(ecModel, finder, {\n    defaultMainType: 'series'\n  });\n  var seriesModel = finder.seriesModel;\n  var data = seriesModel.getData();\n  var dataIndexInside = finder.hasOwnProperty('dataIndexInside') ? finder.dataIndexInside : finder.hasOwnProperty('dataIndex') ? data.indexOfRawIndex(finder.dataIndex) : null;\n  return dataIndexInside != null ? data.getItemVisual(dataIndexInside, visualType) : data.getVisual(visualType);\n};\n/**\n * Get view of corresponding component model\n * @param  {module:echarts/model/Component} componentModel\n * @return {module:echarts/view/Component}\n */\n\n\nechartsProto.getViewOfComponentModel = function (componentModel) {\n  return this._componentsMap[componentModel.__viewId];\n};\n/**\n * Get view of corresponding series model\n * @param  {module:echarts/model/Series} seriesModel\n * @return {module:echarts/view/Chart}\n */\n\n\nechartsProto.getViewOfSeriesModel = function (seriesModel) {\n  return this._chartsMap[seriesModel.__viewId];\n};\n\nvar updateMethods = {\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  update: function (payload) {\n    // console.profile && console.profile('update');\n    var ecModel = this._model;\n    var api = this._api;\n    var coordSysMgr = this._coordSysMgr;\n    var zr = this._zr; // update before setOption\n\n    if (!ecModel) {\n      return;\n    } // Fixme First time update ?\n\n\n    ecModel.restoreData(); // TODO\n    // Save total ecModel here for undo/redo (after restoring data and before processing data).\n    // Undo (restoration of total ecModel) can be carried out in 'action' or outside API call.\n    // Create new coordinate system each update\n    // In LineView may save the old coordinate system and use it to get the orignal point\n\n    coordSysMgr.create(this._model, this._api);\n    processData.call(this, ecModel, api);\n    stackSeriesData.call(this, ecModel);\n    coordSysMgr.update(ecModel, api);\n    doVisualEncoding.call(this, ecModel, payload);\n    doRender.call(this, ecModel, payload); // Set background\n\n    var backgroundColor = ecModel.get('backgroundColor') || 'transparent';\n    var painter = zr.painter; // TODO all use clearColor ?\n\n    if (painter.isSingleCanvas && painter.isSingleCanvas()) {\n      zr.configLayer(0, {\n        clearColor: backgroundColor\n      });\n    } else {\n      // In IE8\n      if (!env.canvasSupported) {\n        var colorArr = colorTool.parse(backgroundColor);\n        backgroundColor = colorTool.stringify(colorArr, 'rgb');\n\n        if (colorArr[3] === 0) {\n          backgroundColor = 'transparent';\n        }\n      }\n\n      if (backgroundColor.colorStops || backgroundColor.image) {\n        // Gradient background\n        // FIXME Fixed layer？\n        zr.configLayer(0, {\n          clearColor: backgroundColor\n        });\n        this[HAS_GRADIENT_OR_PATTERN_BG] = true;\n        this._dom.style.background = 'transparent';\n      } else {\n        if (this[HAS_GRADIENT_OR_PATTERN_BG]) {\n          zr.configLayer(0, {\n            clearColor: null\n          });\n        }\n\n        this[HAS_GRADIENT_OR_PATTERN_BG] = false;\n        this._dom.style.background = backgroundColor;\n      }\n    }\n\n    each(postUpdateFuncs, function (func) {\n      func(ecModel, api);\n    }); // console.profile && console.profileEnd('update');\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateView: function (payload) {\n    var ecModel = this._model; // update before setOption\n\n    if (!ecModel) {\n      return;\n    }\n\n    ecModel.eachSeries(function (seriesModel) {\n      seriesModel.getData().clearAllVisual();\n    });\n    doVisualEncoding.call(this, ecModel, payload);\n    invokeUpdateMethod.call(this, 'updateView', ecModel, payload);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateVisual: function (payload) {\n    var ecModel = this._model; // update before setOption\n\n    if (!ecModel) {\n      return;\n    }\n\n    ecModel.eachSeries(function (seriesModel) {\n      seriesModel.getData().clearAllVisual();\n    });\n    doVisualEncoding.call(this, ecModel, payload, true);\n    invokeUpdateMethod.call(this, 'updateVisual', ecModel, payload);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateLayout: function (payload) {\n    var ecModel = this._model; // update before setOption\n\n    if (!ecModel) {\n      return;\n    }\n\n    doLayout.call(this, ecModel, payload);\n    invokeUpdateMethod.call(this, 'updateLayout', ecModel, payload);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  prepareAndUpdate: function (payload) {\n    var ecModel = this._model;\n    prepareView.call(this, 'component', ecModel);\n    prepareView.call(this, 'chart', ecModel);\n    updateMethods.update.call(this, payload);\n  }\n};\n/**\n * @private\n */\n\nfunction updateDirectly(ecIns, method, payload, mainType, subType) {\n  var ecModel = ecIns._model; // broadcast\n\n  if (!mainType) {\n    each(ecIns._componentsViews.concat(ecIns._chartsViews), callView);\n    return;\n  }\n\n  var query = {};\n  query[mainType + 'Id'] = payload[mainType + 'Id'];\n  query[mainType + 'Index'] = payload[mainType + 'Index'];\n  query[mainType + 'Name'] = payload[mainType + 'Name'];\n  var condition = {\n    mainType: mainType,\n    query: query\n  };\n  subType && (condition.subType = subType); // subType may be '' by parseClassType;\n  // If dispatchAction before setOption, do nothing.\n\n  ecModel && ecModel.eachComponent(condition, function (model, index) {\n    callView(ecIns[mainType === 'series' ? '_chartsMap' : '_componentsMap'][model.__viewId]);\n  }, ecIns);\n\n  function callView(view) {\n    view && view.__alive && view[method] && view[method](view.__model, ecModel, ecIns._api, payload);\n  }\n}\n/**\n * Resize the chart\n * @param {Object} opts\n * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n * @param {boolean} [opts.silent=false]\n */\n\n\nechartsProto.resize = function (opts) {\n  this[IN_MAIN_PROCESS] = true;\n\n  this._zr.resize(opts);\n\n  var optionChanged = this._model && this._model.resetOption('media');\n\n  var updateMethod = optionChanged ? 'prepareAndUpdate' : 'update';\n  updateMethods[updateMethod].call(this); // Resize loading effect\n\n  this._loadingFX && this._loadingFX.resize();\n  this[IN_MAIN_PROCESS] = false;\n  var silent = opts && opts.silent;\n  flushPendingActions.call(this, silent);\n  triggerUpdatedEvent.call(this, silent);\n};\n/**\n * Show loading effect\n * @param  {string} [name='default']\n * @param  {Object} [cfg]\n */\n\n\nechartsProto.showLoading = function (name, cfg) {\n  if (zrUtil.isObject(name)) {\n    cfg = name;\n    name = '';\n  }\n\n  name = name || 'default';\n  this.hideLoading();\n\n  if (!loadingEffects[name]) {\n    return;\n  }\n\n  var el = loadingEffects[name](this._api, cfg);\n  var zr = this._zr;\n  this._loadingFX = el;\n  zr.add(el);\n};\n/**\n * Hide loading effect\n */\n\n\nechartsProto.hideLoading = function () {\n  this._loadingFX && this._zr.remove(this._loadingFX);\n  this._loadingFX = null;\n};\n/**\n * @param {Object} eventObj\n * @return {Object}\n */\n\n\nechartsProto.makeActionFromEvent = function (eventObj) {\n  var payload = zrUtil.extend({}, eventObj);\n  payload.type = eventActionMap[eventObj.type];\n  return payload;\n};\n/**\n * @pubilc\n * @param {Object} payload\n * @param {string} [payload.type] Action type\n * @param {Object|boolean} [opt] If pass boolean, means opt.silent\n * @param {boolean} [opt.silent=false] Whether trigger events.\n * @param {boolean} [opt.flush=undefined]\n *                  true: Flush immediately, and then pixel in canvas can be fetched\n *                      immediately. Caution: it might affect performance.\n *                  false: Not not flush.\n *                  undefined: Auto decide whether perform flush.\n */\n\n\nechartsProto.dispatchAction = function (payload, opt) {\n  if (!zrUtil.isObject(opt)) {\n    opt = {\n      silent: !!opt\n    };\n  }\n\n  if (!actions[payload.type]) {\n    return;\n  } // Avoid dispatch action before setOption. Especially in `connect`.\n\n\n  if (!this._model) {\n    return;\n  } // May dispatchAction in rendering procedure\n\n\n  if (this[IN_MAIN_PROCESS]) {\n    this._pendingActions.push(payload);\n\n    return;\n  }\n\n  doDispatchAction.call(this, payload, opt.silent);\n\n  if (opt.flush) {\n    this._zr.flush(true);\n  } else if (opt.flush !== false && env.browser.weChat) {\n    // In WeChat embeded browser, `requestAnimationFrame` and `setInterval`\n    // hang when sliding page (on touch event), which cause that zr does not\n    // refresh util user interaction finished, which is not expected.\n    // But `dispatchAction` may be called too frequently when pan on touch\n    // screen, which impacts performance if do not throttle them.\n    this._throttledZrFlush();\n  }\n\n  flushPendingActions.call(this, opt.silent);\n  triggerUpdatedEvent.call(this, opt.silent);\n};\n\nfunction doDispatchAction(payload, silent) {\n  var payloadType = payload.type;\n  var escapeConnect = payload.escapeConnect;\n  var actionWrap = actions[payloadType];\n  var actionInfo = actionWrap.actionInfo;\n  var cptType = (actionInfo.update || 'update').split(':');\n  var updateMethod = cptType.pop();\n  cptType = cptType[0] != null && parseClassType(cptType[0]);\n  this[IN_MAIN_PROCESS] = true;\n  var payloads = [payload];\n  var batched = false; // Batch action\n\n  if (payload.batch) {\n    batched = true;\n    payloads = zrUtil.map(payload.batch, function (item) {\n      item = zrUtil.defaults(zrUtil.extend({}, item), payload);\n      item.batch = null;\n      return item;\n    });\n  }\n\n  var eventObjBatch = [];\n  var eventObj;\n  var isHighDown = payloadType === 'highlight' || payloadType === 'downplay';\n  each(payloads, function (batchItem) {\n    // Action can specify the event by return it.\n    eventObj = actionWrap.action(batchItem, this._model, this._api); // Emit event outside\n\n    eventObj = eventObj || zrUtil.extend({}, batchItem); // Convert type to eventType\n\n    eventObj.type = actionInfo.event || eventObj.type;\n    eventObjBatch.push(eventObj); // light update does not perform data process, layout and visual.\n\n    if (isHighDown) {\n      // method, payload, mainType, subType\n      updateDirectly(this, updateMethod, batchItem, 'series');\n    } else if (cptType) {\n      updateDirectly(this, updateMethod, batchItem, cptType.main, cptType.sub);\n    }\n  }, this);\n\n  if (updateMethod !== 'none' && !isHighDown && !cptType) {\n    // Still dirty\n    if (this[OPTION_UPDATED]) {\n      // FIXME Pass payload ?\n      updateMethods.prepareAndUpdate.call(this, payload);\n      this[OPTION_UPDATED] = false;\n    } else {\n      updateMethods[updateMethod].call(this, payload);\n    }\n  } // Follow the rule of action batch\n\n\n  if (batched) {\n    eventObj = {\n      type: actionInfo.event || payloadType,\n      escapeConnect: escapeConnect,\n      batch: eventObjBatch\n    };\n  } else {\n    eventObj = eventObjBatch[0];\n  }\n\n  this[IN_MAIN_PROCESS] = false;\n  !silent && this._messageCenter.trigger(eventObj.type, eventObj);\n}\n\nfunction flushPendingActions(silent) {\n  var pendingActions = this._pendingActions;\n\n  while (pendingActions.length) {\n    var payload = pendingActions.shift();\n    doDispatchAction.call(this, payload, silent);\n  }\n}\n\nfunction triggerUpdatedEvent(silent) {\n  !silent && this.trigger('updated');\n}\n/**\n * Register event\n * @method\n */\n\n\nechartsProto.on = createRegisterEventWithLowercaseName('on');\nechartsProto.off = createRegisterEventWithLowercaseName('off');\nechartsProto.one = createRegisterEventWithLowercaseName('one');\n/**\n * @param {string} methodName\n * @private\n */\n\nfunction invokeUpdateMethod(methodName, ecModel, payload) {\n  var api = this._api; // Update all components\n\n  each(this._componentsViews, function (component) {\n    var componentModel = component.__model;\n    component[methodName](componentModel, ecModel, api, payload);\n    updateZ(componentModel, component);\n  }, this); // Upate all charts\n\n  ecModel.eachSeries(function (seriesModel, idx) {\n    var chart = this._chartsMap[seriesModel.__viewId];\n    chart[methodName](seriesModel, ecModel, api, payload);\n    updateZ(seriesModel, chart);\n    updateProgressiveAndBlend(seriesModel, chart);\n  }, this); // If use hover layer\n\n  updateHoverLayerStatus(this._zr, ecModel); // Post render\n\n  each(postUpdateFuncs, function (func) {\n    func(ecModel, api);\n  });\n}\n/**\n * Prepare view instances of charts and components\n * @param  {module:echarts/model/Global} ecModel\n * @private\n */\n\n\nfunction prepareView(type, ecModel) {\n  var isComponent = type === 'component';\n  var viewList = isComponent ? this._componentsViews : this._chartsViews;\n  var viewMap = isComponent ? this._componentsMap : this._chartsMap;\n  var zr = this._zr;\n\n  for (var i = 0; i < viewList.length; i++) {\n    viewList[i].__alive = false;\n  }\n\n  ecModel[isComponent ? 'eachComponent' : 'eachSeries'](function (componentType, model) {\n    if (isComponent) {\n      if (componentType === 'series') {\n        return;\n      }\n    } else {\n      model = componentType;\n    } // Consider: id same and type changed.\n\n\n    var viewId = '_ec_' + model.id + '_' + model.type;\n    var view = viewMap[viewId];\n\n    if (!view) {\n      var classType = parseClassType(model.type);\n      var Clazz = isComponent ? ComponentView.getClass(classType.main, classType.sub) : ChartView.getClass(classType.sub);\n\n      if (Clazz) {\n        view = new Clazz();\n        view.init(ecModel, this._api);\n        viewMap[viewId] = view;\n        viewList.push(view);\n        zr.add(view.group);\n      } else {\n        // Error\n        return;\n      }\n    }\n\n    model.__viewId = view.__id = viewId;\n    view.__alive = true;\n    view.__model = model;\n    view.group.__ecComponentInfo = {\n      mainType: model.mainType,\n      index: model.componentIndex\n    };\n  }, this);\n\n  for (var i = 0; i < viewList.length;) {\n    var view = viewList[i];\n\n    if (!view.__alive) {\n      zr.remove(view.group);\n      view.dispose(ecModel, this._api);\n      viewList.splice(i, 1);\n      delete viewMap[view.__id];\n      view.__id = view.group.__ecComponentInfo = null;\n    } else {\n      i++;\n    }\n  }\n}\n/**\n * Processor data in each series\n *\n * @param {module:echarts/model/Global} ecModel\n * @private\n */\n\n\nfunction processData(ecModel, api) {\n  each(dataProcessorFuncs, function (process) {\n    process.func(ecModel, api);\n  });\n}\n/**\n * @private\n */\n\n\nfunction stackSeriesData(ecModel) {\n  var stackedDataMap = {};\n  ecModel.eachSeries(function (series) {\n    var stack = series.get('stack');\n    var data = series.getData();\n\n    if (stack && data.type === 'list') {\n      var previousStack = stackedDataMap[stack]; // Avoid conflict with Object.prototype\n\n      if (stackedDataMap.hasOwnProperty(stack) && previousStack) {\n        data.stackedOn = previousStack;\n      }\n\n      stackedDataMap[stack] = data;\n    }\n  });\n}\n/**\n * Layout before each chart render there series, special visual encoding stage\n *\n * @param {module:echarts/model/Global} ecModel\n * @private\n */\n\n\nfunction doLayout(ecModel, payload) {\n  var api = this._api;\n  each(visualFuncs, function (visual) {\n    if (visual.isLayout) {\n      visual.func(ecModel, api, payload);\n    }\n  });\n}\n/**\n * Encode visual infomation from data after data processing\n *\n * @param {module:echarts/model/Global} ecModel\n * @param {object} layout\n * @param {boolean} [excludesLayout]\n * @private\n */\n\n\nfunction doVisualEncoding(ecModel, payload, excludesLayout) {\n  var api = this._api;\n  ecModel.clearColorPalette();\n  ecModel.eachSeries(function (seriesModel) {\n    seriesModel.clearColorPalette();\n  });\n  each(visualFuncs, function (visual) {\n    (!excludesLayout || !visual.isLayout) && visual.func(ecModel, api, payload);\n  });\n}\n/**\n * Render each chart and component\n * @private\n */\n\n\nfunction doRender(ecModel, payload) {\n  var api = this._api; // Render all components\n\n  each(this._componentsViews, function (componentView) {\n    var componentModel = componentView.__model;\n    componentView.render(componentModel, ecModel, api, payload);\n    updateZ(componentModel, componentView);\n  }, this);\n  each(this._chartsViews, function (chart) {\n    chart.__alive = false;\n  }, this); // Render all charts\n\n  ecModel.eachSeries(function (seriesModel, idx) {\n    var chartView = this._chartsMap[seriesModel.__viewId];\n    chartView.__alive = true;\n    chartView.render(seriesModel, ecModel, api, payload);\n    chartView.group.silent = !!seriesModel.get('silent');\n    updateZ(seriesModel, chartView);\n    updateProgressiveAndBlend(seriesModel, chartView);\n  }, this); // If use hover layer\n\n  updateHoverLayerStatus(this._zr, ecModel); // Remove groups of unrendered charts\n\n  each(this._chartsViews, function (chart) {\n    if (!chart.__alive) {\n      chart.remove(ecModel, api);\n    }\n  }, this);\n}\n\nvar MOUSE_EVENT_NAMES = ['click', 'dblclick', 'mouseover', 'mouseout', 'mousemove', 'mousedown', 'mouseup', 'globalout', 'contextmenu'];\n/**\n * @private\n */\n\nechartsProto._initEvents = function () {\n  each(MOUSE_EVENT_NAMES, function (eveName) {\n    this._zr.on(eveName, function (e) {\n      var ecModel = this.getModel();\n      var el = e.target;\n      var params; // no e.target when 'globalout'.\n\n      if (eveName === 'globalout') {\n        params = {};\n      } else if (el && el.dataIndex != null) {\n        var dataModel = el.dataModel || ecModel.getSeriesByIndex(el.seriesIndex);\n        params = dataModel && dataModel.getDataParams(el.dataIndex, el.dataType) || {};\n      } // If element has custom eventData of components\n      else if (el && el.eventData) {\n          params = zrUtil.extend({}, el.eventData);\n        }\n\n      if (params) {\n        params.event = e;\n        params.type = eveName;\n        this.trigger(eveName, params);\n      }\n    }, this);\n  }, this);\n  each(eventActionMap, function (actionType, eventType) {\n    this._messageCenter.on(eventType, function (event) {\n      this.trigger(eventType, event);\n    }, this);\n  }, this);\n};\n/**\n * @return {boolean}\n */\n\n\nechartsProto.isDisposed = function () {\n  return this._disposed;\n};\n/**\n * Clear\n */\n\n\nechartsProto.clear = function () {\n  this.setOption({\n    series: []\n  }, true);\n};\n/**\n * Dispose instance\n */\n\n\nechartsProto.dispose = function () {\n  if (this._disposed) {\n    return;\n  }\n\n  this._disposed = true;\n  var api = this._api;\n  var ecModel = this._model;\n  each(this._componentsViews, function (component) {\n    component.dispose(ecModel, api);\n  });\n  each(this._chartsViews, function (chart) {\n    chart.dispose(ecModel, api);\n  }); // Dispose after all views disposed\n\n  this._zr.dispose();\n\n  delete instances[this.id];\n};\n\nzrUtil.mixin(ECharts, Eventful);\n\nfunction updateHoverLayerStatus(zr, ecModel) {\n  var storage = zr.storage;\n  var elCount = 0;\n  storage.traverse(function (el) {\n    if (!el.isGroup) {\n      elCount++;\n    }\n  });\n\n  if (elCount > ecModel.get('hoverLayerThreshold') && !env.node) {\n    storage.traverse(function (el) {\n      if (!el.isGroup) {\n        el.useHoverLayer = true;\n      }\n    });\n  }\n}\n/**\n * Update chart progressive and blend.\n * @param {module:echarts/model/Series|module:echarts/model/Component} model\n * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n */\n\n\nfunction updateProgressiveAndBlend(seriesModel, chartView) {\n  // Progressive configuration\n  var elCount = 0;\n  chartView.group.traverse(function (el) {\n    if (el.type !== 'group' && !el.ignore) {\n      elCount++;\n    }\n  });\n  var frameDrawNum = +seriesModel.get('progressive');\n  var needProgressive = elCount > seriesModel.get('progressiveThreshold') && frameDrawNum && !env.node;\n\n  if (needProgressive) {\n    chartView.group.traverse(function (el) {\n      // FIXME marker and other components\n      if (!el.isGroup) {\n        el.progressive = needProgressive ? Math.floor(elCount++ / frameDrawNum) : -1;\n\n        if (needProgressive) {\n          el.stopAnimation(true);\n        }\n      }\n    });\n  } // Blend configration\n\n\n  var blendMode = seriesModel.get('blendMode') || null;\n  chartView.group.traverse(function (el) {\n    // FIXME marker and other components\n    if (!el.isGroup) {\n      el.setStyle('blend', blendMode);\n    }\n  });\n}\n/**\n * @param {module:echarts/model/Series|module:echarts/model/Component} model\n * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n */\n\n\nfunction updateZ(model, view) {\n  var z = model.get('z');\n  var zlevel = model.get('zlevel'); // Set z and zlevel\n\n  view.group.traverse(function (el) {\n    if (el.type !== 'group') {\n      z != null && (el.z = z);\n      zlevel != null && (el.zlevel = zlevel);\n    }\n  });\n}\n\nfunction createExtensionAPI(ecInstance) {\n  var coordSysMgr = ecInstance._coordSysMgr;\n  return zrUtil.extend(new ExtensionAPI(ecInstance), {\n    // Inject methods\n    getCoordinateSystems: zrUtil.bind(coordSysMgr.getCoordinateSystems, coordSysMgr),\n    getComponentByElement: function (el) {\n      while (el) {\n        var modelInfo = el.__ecComponentInfo;\n\n        if (modelInfo != null) {\n          return ecInstance._model.getComponent(modelInfo.mainType, modelInfo.index);\n        }\n\n        el = el.parent;\n      }\n    }\n  });\n}\n/**\n * @type {Object} key: actionType.\n * @inner\n */\n\n\nvar actions = {};\n/**\n * Map eventType to actionType\n * @type {Object}\n */\n\nvar eventActionMap = {};\n/**\n * Data processor functions of each stage\n * @type {Array.<Object.<string, Function>>}\n * @inner\n */\n\nvar dataProcessorFuncs = [];\n/**\n * @type {Array.<Function>}\n * @inner\n */\n\nvar optionPreprocessorFuncs = [];\n/**\n * @type {Array.<Function>}\n * @inner\n */\n\nvar postUpdateFuncs = [];\n/**\n * Visual encoding functions of each stage\n * @type {Array.<Object.<string, Function>>}\n * @inner\n */\n\nvar visualFuncs = [];\n/**\n * Theme storage\n * @type {Object.<key, Object>}\n */\n\nvar themeStorage = {};\n/**\n * Loading effects\n */\n\nvar loadingEffects = {};\nvar instances = {};\nvar connectedGroups = {};\nvar idBase = new Date() - 0;\nvar groupIdBase = new Date() - 0;\nvar DOM_ATTRIBUTE_KEY = '_echarts_instance_';\nvar mapDataStores = {};\n\nfunction enableConnect(chart) {\n  var STATUS_PENDING = 0;\n  var STATUS_UPDATING = 1;\n  var STATUS_UPDATED = 2;\n  var STATUS_KEY = '__connectUpdateStatus';\n\n  function updateConnectedChartsStatus(charts, status) {\n    for (var i = 0; i < charts.length; i++) {\n      var otherChart = charts[i];\n      otherChart[STATUS_KEY] = status;\n    }\n  }\n\n  zrUtil.each(eventActionMap, function (actionType, eventType) {\n    chart._messageCenter.on(eventType, function (event) {\n      if (connectedGroups[chart.group] && chart[STATUS_KEY] !== STATUS_PENDING) {\n        if (event && event.escapeConnect) {\n          return;\n        }\n\n        var action = chart.makeActionFromEvent(event);\n        var otherCharts = [];\n        zrUtil.each(instances, function (otherChart) {\n          if (otherChart !== chart && otherChart.group === chart.group) {\n            otherCharts.push(otherChart);\n          }\n        });\n        updateConnectedChartsStatus(otherCharts, STATUS_PENDING);\n        each(otherCharts, function (otherChart) {\n          if (otherChart[STATUS_KEY] !== STATUS_UPDATING) {\n            otherChart.dispatchAction(action);\n          }\n        });\n        updateConnectedChartsStatus(otherCharts, STATUS_UPDATED);\n      }\n    });\n  });\n}\n/**\n * @param {HTMLElement} dom\n * @param {Object} [theme]\n * @param {Object} opts\n * @param {number} [opts.devicePixelRatio] Use window.devicePixelRatio by default\n * @param {string} [opts.renderer] Currently only 'canvas' is supported.\n * @param {number} [opts.width] Use clientWidth of the input `dom` by default.\n *                              Can be 'auto' (the same as null/undefined)\n * @param {number} [opts.height] Use clientHeight of the input `dom` by default.\n *                               Can be 'auto' (the same as null/undefined)\n */\n\n\nfunction init(dom, theme, opts) {\n  var existInstance = getInstanceByDom(dom);\n\n  if (existInstance) {\n    return existInstance;\n  }\n\n  var chart = new ECharts(dom, theme, opts);\n  chart.id = 'ec_' + idBase++;\n  instances[chart.id] = chart;\n\n  if (dom.setAttribute) {\n    dom.setAttribute(DOM_ATTRIBUTE_KEY, chart.id);\n  } else {\n    dom[DOM_ATTRIBUTE_KEY] = chart.id;\n  }\n\n  enableConnect(chart);\n  return chart;\n}\n/**\n * @return {string|Array.<module:echarts~ECharts>} groupId\n */\n\n\nfunction connect(groupId) {\n  // Is array of charts\n  if (zrUtil.isArray(groupId)) {\n    var charts = groupId;\n    groupId = null; // If any chart has group\n\n    zrUtil.each(charts, function (chart) {\n      if (chart.group != null) {\n        groupId = chart.group;\n      }\n    });\n    groupId = groupId || 'g_' + groupIdBase++;\n    zrUtil.each(charts, function (chart) {\n      chart.group = groupId;\n    });\n  }\n\n  connectedGroups[groupId] = true;\n  return groupId;\n}\n/**\n * @DEPRECATED\n * @return {string} groupId\n */\n\n\nfunction disConnect(groupId) {\n  connectedGroups[groupId] = false;\n}\n/**\n * @return {string} groupId\n */\n\n\nvar disconnect = disConnect;\n/**\n * Dispose a chart instance\n * @param  {module:echarts~ECharts|HTMLDomElement|string} chart\n */\n\nfunction dispose(chart) {\n  if (typeof chart === 'string') {\n    chart = instances[chart];\n  } else if (!(chart instanceof ECharts)) {\n    // Try to treat as dom\n    chart = getInstanceByDom(chart);\n  }\n\n  if (chart instanceof ECharts && !chart.isDisposed()) {\n    chart.dispose();\n  }\n}\n/**\n * @param  {HTMLElement} dom\n * @return {echarts~ECharts}\n */\n\n\nfunction getInstanceByDom(dom) {\n  var key;\n\n  if (dom.getAttribute) {\n    key = dom.getAttribute(DOM_ATTRIBUTE_KEY);\n  } else {\n    key = dom[DOM_ATTRIBUTE_KEY];\n  }\n\n  return instances[key];\n}\n/**\n * @param {string} key\n * @return {echarts~ECharts}\n */\n\n\nfunction getInstanceById(key) {\n  return instances[key];\n}\n/**\n * Register theme\n */\n\n\nfunction registerTheme(name, theme) {\n  themeStorage[name] = theme;\n}\n/**\n * Register option preprocessor\n * @param {Function} preprocessorFunc\n */\n\n\nfunction registerPreprocessor(preprocessorFunc) {\n  optionPreprocessorFuncs.push(preprocessorFunc);\n}\n/**\n * @param {number} [priority=1000]\n * @param {Function} processorFunc\n */\n\n\nfunction registerProcessor(priority, processorFunc) {\n  if (typeof priority === 'function') {\n    processorFunc = priority;\n    priority = PRIORITY_PROCESSOR_FILTER;\n  }\n\n  dataProcessorFuncs.push({\n    prio: priority,\n    func: processorFunc\n  });\n}\n/**\n * Register postUpdater\n * @param {Function} postUpdateFunc\n */\n\n\nfunction registerPostUpdate(postUpdateFunc) {\n  postUpdateFuncs.push(postUpdateFunc);\n}\n/**\n * Usage:\n * registerAction('someAction', 'someEvent', function () { ... });\n * registerAction('someAction', function () { ... });\n * registerAction(\n *     {type: 'someAction', event: 'someEvent', update: 'updateView'},\n *     function () { ... }\n * );\n *\n * @param {(string|Object)} actionInfo\n * @param {string} actionInfo.type\n * @param {string} [actionInfo.event]\n * @param {string} [actionInfo.update]\n * @param {string} [eventName]\n * @param {Function} action\n */\n\n\nfunction registerAction(actionInfo, eventName, action) {\n  if (typeof eventName === 'function') {\n    action = eventName;\n    eventName = '';\n  }\n\n  var actionType = zrUtil.isObject(actionInfo) ? actionInfo.type : [actionInfo, actionInfo = {\n    event: eventName\n  }][0]; // Event name is all lowercase\n\n  actionInfo.event = (actionInfo.event || actionType).toLowerCase();\n  eventName = actionInfo.event; // Validate action type and event name.\n\n  zrUtil.assert(ACTION_REG.test(actionType) && ACTION_REG.test(eventName));\n\n  if (!actions[actionType]) {\n    actions[actionType] = {\n      action: action,\n      actionInfo: actionInfo\n    };\n  }\n\n  eventActionMap[eventName] = actionType;\n}\n/**\n * @param {string} type\n * @param {*} CoordinateSystem\n */\n\n\nfunction registerCoordinateSystem(type, CoordinateSystem) {\n  CoordinateSystemManager.register(type, CoordinateSystem);\n}\n/**\n * Get dimensions of specified coordinate system.\n * @param {string} type\n * @return {Array.<string|Object>}\n */\n\n\nfunction getCoordinateSystemDimensions(type) {\n  var coordSysCreator = CoordinateSystemManager.get(type);\n\n  if (coordSysCreator) {\n    return coordSysCreator.getDimensionsInfo ? coordSysCreator.getDimensionsInfo() : coordSysCreator.dimensions.slice();\n  }\n}\n/**\n * Layout is a special stage of visual encoding\n * Most visual encoding like color are common for different chart\n * But each chart has it's own layout algorithm\n *\n * @param {number} [priority=1000]\n * @param {Function} layoutFunc\n */\n\n\nfunction registerLayout(priority, layoutFunc) {\n  if (typeof priority === 'function') {\n    layoutFunc = priority;\n    priority = PRIORITY_VISUAL_LAYOUT;\n  }\n\n  visualFuncs.push({\n    prio: priority,\n    func: layoutFunc,\n    isLayout: true\n  });\n}\n/**\n * @param {number} [priority=3000]\n * @param {Function} visualFunc\n */\n\n\nfunction registerVisual(priority, visualFunc) {\n  if (typeof priority === 'function') {\n    visualFunc = priority;\n    priority = PRIORITY_VISUAL_CHART;\n  }\n\n  visualFuncs.push({\n    prio: priority,\n    func: visualFunc\n  });\n}\n/**\n * @param {string} name\n */\n\n\nfunction registerLoading(name, loadingFx) {\n  loadingEffects[name] = loadingFx;\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendComponentModel(opts\n/*, superClass*/\n) {\n  // var Clazz = ComponentModel;\n  // if (superClass) {\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n  // }\n  return ComponentModel.extend(opts);\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendComponentView(opts\n/*, superClass*/\n) {\n  // var Clazz = ComponentView;\n  // if (superClass) {\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ComponentView.getClass(classType.main, classType.sub, true);\n  // }\n  return ComponentView.extend(opts);\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendSeriesModel(opts\n/*, superClass*/\n) {\n  // var Clazz = SeriesModel;\n  // if (superClass) {\n  //     superClass = 'series.' + superClass.replace('series.', '');\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n  // }\n  return SeriesModel.extend(opts);\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendChartView(opts\n/*, superClass*/\n) {\n  // var Clazz = ChartView;\n  // if (superClass) {\n  //     superClass = superClass.replace('series.', '');\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ChartView.getClass(classType.main, true);\n  // }\n  return ChartView.extend(opts);\n}\n/**\n * ZRender need a canvas context to do measureText.\n * But in node environment canvas may be created by node-canvas.\n * So we need to specify how to create a canvas instead of using document.createElement('canvas')\n *\n * Be careful of using it in the browser.\n *\n * @param {Function} creator\n * @example\n *     var Canvas = require('canvas');\n *     var echarts = require('echarts');\n *     echarts.setCanvasCreator(function () {\n *         // Small size is enough.\n *         return new Canvas(32, 32);\n *     });\n */\n\n\nfunction setCanvasCreator(creator) {\n  zrUtil.$override('createCanvas', creator);\n}\n/**\n * @param {string} mapName\n * @param {Object|string} geoJson\n * @param {Object} [specialAreas]\n *\n * @example\n *     $.get('USA.json', function (geoJson) {\n *         echarts.registerMap('USA', geoJson);\n *         // Or\n *         echarts.registerMap('USA', {\n *             geoJson: geoJson,\n *             specialAreas: {}\n *         })\n *     });\n */\n\n\nfunction registerMap(mapName, geoJson, specialAreas) {\n  if (geoJson.geoJson && !geoJson.features) {\n    specialAreas = geoJson.specialAreas;\n    geoJson = geoJson.geoJson;\n  }\n\n  if (typeof geoJson === 'string') {\n    geoJson = typeof JSON !== 'undefined' && JSON.parse ? JSON.parse(geoJson) : new Function('return (' + geoJson + ');')();\n  }\n\n  mapDataStores[mapName] = {\n    geoJson: geoJson,\n    specialAreas: specialAreas\n  };\n}\n/**\n * @param {string} mapName\n * @return {Object}\n */\n\n\nfunction getMap(mapName) {\n  return mapDataStores[mapName];\n}\n\nregisterVisual(PRIORITY_VISUAL_GLOBAL, seriesColor);\nregisterPreprocessor(backwardCompat);\nregisterLoading('default', loadingDefault); // Default actions\n\nregisterAction({\n  type: 'highlight',\n  event: 'highlight',\n  update: 'highlight'\n}, zrUtil.noop);\nregisterAction({\n  type: 'downplay',\n  event: 'downplay',\n  update: 'downplay'\n}, zrUtil.noop); // For backward compatibility, where the namespace `dataTool` will\n// be mounted on `echarts` is the extension `dataTool` is imported.\n\nvar dataTool = {};\nexports.version = version;\nexports.dependencies = dependencies;\nexports.PRIORITY = PRIORITY;\nexports.init = init;\nexports.connect = connect;\nexports.disConnect = disConnect;\nexports.disconnect = disconnect;\nexports.dispose = dispose;\nexports.getInstanceByDom = getInstanceByDom;\nexports.getInstanceById = getInstanceById;\nexports.registerTheme = registerTheme;\nexports.registerPreprocessor = registerPreprocessor;\nexports.registerProcessor = registerProcessor;\nexports.registerPostUpdate = registerPostUpdate;\nexports.registerAction = registerAction;\nexports.registerCoordinateSystem = registerCoordinateSystem;\nexports.getCoordinateSystemDimensions = getCoordinateSystemDimensions;\nexports.registerLayout = registerLayout;\nexports.registerVisual = registerVisual;\nexports.registerLoading = registerLoading;\nexports.extendComponentModel = extendComponentModel;\nexports.extendComponentView = extendComponentView;\nexports.extendSeriesModel = extendSeriesModel;\nexports.extendChartView = extendChartView;\nexports.setCanvasCreator = setCanvasCreator;\nexports.registerMap = registerMap;\nexports.getMap = getMap;\nexports.dataTool = dataTool;\nvar ___ec_export = __webpack_require__(1711);\n(function () {\n    for (var key in ___ec_export) {\n        if (___ec_export.hasOwnProperty(key)) {\n            exports[key] = ___ec_export[key];\n        }\n    }\n})();\n\n/***/ }),\n\n/***/ 1493:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Displayable = __webpack_require__(1575);\n\nvar zrUtil = __webpack_require__(1479);\n\nvar PathProxy = __webpack_require__(1557);\n\nvar pathContain = __webpack_require__(1767);\n\nvar Pattern = __webpack_require__(1643);\n\nvar getCanvasPattern = Pattern.prototype.getCanvasPattern;\nvar abs = Math.abs;\nvar pathProxyForDraw = new PathProxy(true);\n/**\n * @alias module:zrender/graphic/Path\n * @extends module:zrender/graphic/Displayable\n * @constructor\n * @param {Object} opts\n */\n\nfunction Path(opts) {\n  Displayable.call(this, opts);\n  /**\n   * @type {module:zrender/core/PathProxy}\n   * @readOnly\n   */\n\n  this.path = null;\n}\n\nPath.prototype = {\n  constructor: Path,\n  type: 'path',\n  __dirtyPath: true,\n  strokeContainThreshold: 5,\n  brush: function (ctx, prevEl) {\n    var style = this.style;\n    var path = this.path || pathProxyForDraw;\n    var hasStroke = style.hasStroke();\n    var hasFill = style.hasFill();\n    var fill = style.fill;\n    var stroke = style.stroke;\n    var hasFillGradient = hasFill && !!fill.colorStops;\n    var hasStrokeGradient = hasStroke && !!stroke.colorStops;\n    var hasFillPattern = hasFill && !!fill.image;\n    var hasStrokePattern = hasStroke && !!stroke.image;\n    style.bind(ctx, this, prevEl);\n    this.setTransform(ctx);\n\n    if (this.__dirty) {\n      var rect; // Update gradient because bounding rect may changed\n\n      if (hasFillGradient) {\n        rect = rect || this.getBoundingRect();\n        this._fillGradient = style.getGradient(ctx, fill, rect);\n      }\n\n      if (hasStrokeGradient) {\n        rect = rect || this.getBoundingRect();\n        this._strokeGradient = style.getGradient(ctx, stroke, rect);\n      }\n    } // Use the gradient or pattern\n\n\n    if (hasFillGradient) {\n      // PENDING If may have affect the state\n      ctx.fillStyle = this._fillGradient;\n    } else if (hasFillPattern) {\n      ctx.fillStyle = getCanvasPattern.call(fill, ctx);\n    }\n\n    if (hasStrokeGradient) {\n      ctx.strokeStyle = this._strokeGradient;\n    } else if (hasStrokePattern) {\n      ctx.strokeStyle = getCanvasPattern.call(stroke, ctx);\n    }\n\n    var lineDash = style.lineDash;\n    var lineDashOffset = style.lineDashOffset;\n    var ctxLineDash = !!ctx.setLineDash; // Update path sx, sy\n\n    var scale = this.getGlobalScale();\n    path.setScale(scale[0], scale[1]); // Proxy context\n    // Rebuild path in following 2 cases\n    // 1. Path is dirty\n    // 2. Path needs javascript implemented lineDash stroking.\n    //    In this case, lineDash information will not be saved in PathProxy\n\n    if (this.__dirtyPath || lineDash && !ctxLineDash && hasStroke) {\n      path.beginPath(ctx); // Setting line dash before build path\n\n      if (lineDash && !ctxLineDash) {\n        path.setLineDash(lineDash);\n        path.setLineDashOffset(lineDashOffset);\n      }\n\n      this.buildPath(path, this.shape, false); // Clear path dirty flag\n\n      if (this.path) {\n        this.__dirtyPath = false;\n      }\n    } else {\n      // Replay path building\n      ctx.beginPath();\n      this.path.rebuildPath(ctx);\n    }\n\n    hasFill && path.fill(ctx);\n\n    if (lineDash && ctxLineDash) {\n      ctx.setLineDash(lineDash);\n      ctx.lineDashOffset = lineDashOffset;\n    }\n\n    hasStroke && path.stroke(ctx);\n\n    if (lineDash && ctxLineDash) {\n      // PENDING\n      // Remove lineDash\n      ctx.setLineDash([]);\n    }\n\n    this.restoreTransform(ctx); // Draw rect text\n\n    if (style.text != null) {\n      this.drawRectText(ctx, this.getBoundingRect());\n    }\n  },\n  // When bundling path, some shape may decide if use moveTo to begin a new subpath or closePath\n  // Like in circle\n  buildPath: function (ctx, shapeCfg, inBundle) {},\n  createPathProxy: function () {\n    this.path = new PathProxy();\n  },\n  getBoundingRect: function () {\n    var rect = this._rect;\n    var style = this.style;\n    var needsUpdateRect = !rect;\n\n    if (needsUpdateRect) {\n      var path = this.path;\n\n      if (!path) {\n        // Create path on demand.\n        path = this.path = new PathProxy();\n      }\n\n      if (this.__dirtyPath) {\n        path.beginPath();\n        this.buildPath(path, this.shape, false);\n      }\n\n      rect = path.getBoundingRect();\n    }\n\n    this._rect = rect;\n\n    if (style.hasStroke()) {\n      // Needs update rect with stroke lineWidth when\n      // 1. Element changes scale or lineWidth\n      // 2. Shape is changed\n      var rectWithStroke = this._rectWithStroke || (this._rectWithStroke = rect.clone());\n\n      if (this.__dirty || needsUpdateRect) {\n        rectWithStroke.copy(rect); // FIXME Must after updateTransform\n\n        var w = style.lineWidth; // PENDING, Min line width is needed when line is horizontal or vertical\n\n        var lineScale = style.strokeNoScale ? this.getLineScale() : 1; // Only add extra hover lineWidth when there are no fill\n\n        if (!style.hasFill()) {\n          w = Math.max(w, this.strokeContainThreshold || 4);\n        } // Consider line width\n        // Line scale can't be 0;\n\n\n        if (lineScale > 1e-10) {\n          rectWithStroke.width += w / lineScale;\n          rectWithStroke.height += w / lineScale;\n          rectWithStroke.x -= w / lineScale / 2;\n          rectWithStroke.y -= w / lineScale / 2;\n        }\n      } // Return rect with stroke\n\n\n      return rectWithStroke;\n    }\n\n    return rect;\n  },\n  contain: function (x, y) {\n    var localPos = this.transformCoordToLocal(x, y);\n    var rect = this.getBoundingRect();\n    var style = this.style;\n    x = localPos[0];\n    y = localPos[1];\n\n    if (rect.contain(x, y)) {\n      var pathData = this.path.data;\n\n      if (style.hasStroke()) {\n        var lineWidth = style.lineWidth;\n        var lineScale = style.strokeNoScale ? this.getLineScale() : 1; // Line scale can't be 0;\n\n        if (lineScale > 1e-10) {\n          // Only add extra hover lineWidth when there are no fill\n          if (!style.hasFill()) {\n            lineWidth = Math.max(lineWidth, this.strokeContainThreshold);\n          }\n\n          if (pathContain.containStroke(pathData, lineWidth / lineScale, x, y)) {\n            return true;\n          }\n        }\n      }\n\n      if (style.hasFill()) {\n        return pathContain.contain(pathData, x, y);\n      }\n    }\n\n    return false;\n  },\n\n  /**\n   * @param  {boolean} dirtyPath\n   */\n  dirty: function (dirtyPath) {\n    if (dirtyPath == null) {\n      dirtyPath = true;\n    } // Only mark dirty, not mark clean\n\n\n    if (dirtyPath) {\n      this.__dirtyPath = dirtyPath;\n      this._rect = null;\n    }\n\n    this.__dirty = true;\n    this.__zr && this.__zr.refresh(); // Used as a clipping path\n\n    if (this.__clipTarget) {\n      this.__clipTarget.dirty();\n    }\n  },\n\n  /**\n   * Alias for animate('shape')\n   * @param {boolean} loop\n   */\n  animateShape: function (loop) {\n    return this.animate('shape', loop);\n  },\n  // Overwrite attrKV\n  attrKV: function (key, value) {\n    // FIXME\n    if (key === 'shape') {\n      this.setShape(value);\n      this.__dirtyPath = true;\n      this._rect = null;\n    } else {\n      Displayable.prototype.attrKV.call(this, key, value);\n    }\n  },\n\n  /**\n   * @param {Object|string} key\n   * @param {*} value\n   */\n  setShape: function (key, value) {\n    var shape = this.shape; // Path from string may not have shape\n\n    if (shape) {\n      if (zrUtil.isObject(key)) {\n        for (var name in key) {\n          if (key.hasOwnProperty(name)) {\n            shape[name] = key[name];\n          }\n        }\n      } else {\n        shape[key] = value;\n      }\n\n      this.dirty(true);\n    }\n\n    return this;\n  },\n  getLineScale: function () {\n    var m = this.transform; // Get the line scale.\n    // Determinant of `m` means how much the area is enlarged by the\n    // transformation. So its square root can be used as a scale factor\n    // for width.\n\n    return m && abs(m[0] - 1) > 1e-10 && abs(m[3] - 1) > 1e-10 ? Math.sqrt(abs(m[0] * m[3] - m[2] * m[1])) : 1;\n  }\n};\n/**\n * 扩展一个 Path element, 比如星形，圆等。\n * Extend a path element\n * @param {Object} props\n * @param {string} props.type Path type\n * @param {Function} props.init Initialize\n * @param {Function} props.buildPath Overwrite buildPath method\n * @param {Object} [props.style] Extended default style config\n * @param {Object} [props.shape] Extended default shape config\n */\n\nPath.extend = function (defaults) {\n  var Sub = function (opts) {\n    Path.call(this, opts);\n\n    if (defaults.style) {\n      // Extend default style\n      this.style.extendFrom(defaults.style, false);\n    } // Extend default shape\n\n\n    var defaultShape = defaults.shape;\n\n    if (defaultShape) {\n      this.shape = this.shape || {};\n      var thisShape = this.shape;\n\n      for (var name in defaultShape) {\n        if (!thisShape.hasOwnProperty(name) && defaultShape.hasOwnProperty(name)) {\n          thisShape[name] = defaultShape[name];\n        }\n      }\n    }\n\n    defaults.init && defaults.init.call(this, opts);\n  };\n\n  zrUtil.inherits(Sub, Path); // FIXME 不能 extend position, rotation 等引用对象\n\n  for (var name in defaults) {\n    // Extending prototype values and methods\n    if (name !== 'style' && name !== 'shape') {\n      Sub.prototype[name] = defaults[name];\n    }\n  }\n\n  return Sub;\n};\n\nzrUtil.inherits(Path, Displayable);\nvar _default = Path;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1494:\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {// (1) The code `if (__DEV__) ...` can be removed by build tool.\n// (2) If intend to use `__DEV__`, this module should be imported. Use a global\n// variable `__DEV__` may cause that miss the declaration (see #6535), or the\n// declaration is behind of the using position (for example in `Model.extent`,\n// And tools like rollup can not analysis the dependency if not import).\nvar dev; // In browser\n\nif (typeof window !== 'undefined') {\n  dev = window.__DEV__;\n} // In node\nelse if (typeof global !== 'undefined') {\n    dev = global.__DEV__;\n  }\n\nif (typeof dev === 'undefined') {\n  dev = true;\n}\n\nvar __DEV__ = dev;\nexports.__DEV__ = __DEV__;\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(22)))\n\n/***/ }),\n\n/***/ 1495:\n/***/ (function(module, exports) {\n\n/**\n * echarts设备环境识别\n *\n * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\n * @author firede[firede@firede.us]\n * @desc thanks zepto.\n */\nvar env = {};\n\nif (typeof navigator === 'undefined') {\n  // In node\n  env = {\n    browser: {},\n    os: {},\n    node: true,\n    // Assume canvas is supported\n    canvasSupported: true,\n    svgSupported: true\n  };\n} else {\n  env = detect(navigator.userAgent);\n}\n\nvar _default = env; // Zepto.js\n// (c) 2010-2013 Thomas Fuchs\n// Zepto.js may be freely distributed under the MIT license.\n\nfunction detect(ua) {\n  var os = {};\n  var browser = {}; // var webkit = ua.match(/Web[kK]it[\\/]{0,1}([\\d.]+)/);\n  // var android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/);\n  // var ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n  // var ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n  // var iphone = !ipad && ua.match(/(iPhone\\sOS)\\s([\\d_]+)/);\n  // var webos = ua.match(/(webOS|hpwOS)[\\s\\/]([\\d.]+)/);\n  // var touchpad = webos && ua.match(/TouchPad/);\n  // var kindle = ua.match(/Kindle\\/([\\d.]+)/);\n  // var silk = ua.match(/Silk\\/([\\d._]+)/);\n  // var blackberry = ua.match(/(BlackBerry).*Version\\/([\\d.]+)/);\n  // var bb10 = ua.match(/(BB10).*Version\\/([\\d.]+)/);\n  // var rimtabletos = ua.match(/(RIM\\sTablet\\sOS)\\s([\\d.]+)/);\n  // var playbook = ua.match(/PlayBook/);\n  // var chrome = ua.match(/Chrome\\/([\\d.]+)/) || ua.match(/CriOS\\/([\\d.]+)/);\n\n  var firefox = ua.match(/Firefox\\/([\\d.]+)/); // var safari = webkit && ua.match(/Mobile\\//) && !chrome;\n  // var webview = ua.match(/(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/) && !chrome;\n\n  var ie = ua.match(/MSIE\\s([\\d.]+)/) // IE 11 Trident/7.0; rv:11.0\n  || ua.match(/Trident\\/.+?rv:(([\\d.]+))/);\n  var edge = ua.match(/Edge\\/([\\d.]+)/); // IE 12 and 12+\n\n  var weChat = /micromessenger/i.test(ua); // Todo: clean this up with a better OS/browser seperation:\n  // - discern (more) between multiple browsers on android\n  // - decide if kindle fire in silk mode is android or not\n  // - Firefox on Android doesn't specify the Android version\n  // - possibly devide in os, device and browser hashes\n  // if (browser.webkit = !!webkit) browser.version = webkit[1];\n  // if (android) os.android = true, os.version = android[2];\n  // if (iphone && !ipod) os.ios = os.iphone = true, os.version = iphone[2].replace(/_/g, '.');\n  // if (ipad) os.ios = os.ipad = true, os.version = ipad[2].replace(/_/g, '.');\n  // if (ipod) os.ios = os.ipod = true, os.version = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\n  // if (webos) os.webos = true, os.version = webos[2];\n  // if (touchpad) os.touchpad = true;\n  // if (blackberry) os.blackberry = true, os.version = blackberry[2];\n  // if (bb10) os.bb10 = true, os.version = bb10[2];\n  // if (rimtabletos) os.rimtabletos = true, os.version = rimtabletos[2];\n  // if (playbook) browser.playbook = true;\n  // if (kindle) os.kindle = true, os.version = kindle[1];\n  // if (silk) browser.silk = true, browser.version = silk[1];\n  // if (!silk && os.android && ua.match(/Kindle Fire/)) browser.silk = true;\n  // if (chrome) browser.chrome = true, browser.version = chrome[1];\n\n  if (firefox) {\n    browser.firefox = true;\n    browser.version = firefox[1];\n  } // if (safari && (ua.match(/Safari/) || !!os.ios)) browser.safari = true;\n  // if (webview) browser.webview = true;\n\n\n  if (ie) {\n    browser.ie = true;\n    browser.version = ie[1];\n  }\n\n  if (edge) {\n    browser.edge = true;\n    browser.version = edge[1];\n  } // It is difficult to detect WeChat in Win Phone precisely, because ua can\n  // not be set on win phone. So we do not consider Win Phone.\n\n\n  if (weChat) {\n    browser.weChat = true;\n  } // os.tablet = !!(ipad || playbook || (android && !ua.match(/Mobile/)) ||\n  //     (firefox && ua.match(/Tablet/)) || (ie && !ua.match(/Phone/) && ua.match(/Touch/)));\n  // os.phone  = !!(!os.tablet && !os.ipod && (android || iphone || webos ||\n  //     (chrome && ua.match(/Android/)) || (chrome && ua.match(/CriOS\\/([\\d.]+)/)) ||\n  //     (firefox && ua.match(/Mobile/)) || (ie && ua.match(/Touch/))));\n\n\n  return {\n    browser: browser,\n    os: os,\n    node: false,\n    // 原生canvas支持，改极端点了\n    // canvasSupported : !(browser.ie && parseFloat(browser.version) < 9)\n    canvasSupported: !!document.createElement('canvas').getContext,\n    svgSupported: typeof SVGRect !== 'undefined',\n    // @see <http://stackoverflow.com/questions/4817029/whats-the-best-way-to-detect-a-touch-screen-device-using-javascript>\n    // works on most browsers\n    // IE10/11 does not support touch event, and MS Edge supports them but not by\n    // default, so we dont check navigator.maxTouchPoints for them here.\n    touchEventsSupported: 'ontouchstart' in window && !browser.ie && !browser.edge,\n    // <http://caniuse.com/#search=pointer%20event>.\n    pointerEventsSupported: 'onpointerdown' in window // Firefox supports pointer but not by default, only MS browsers are reliable on pointer\n    // events currently. So we dont use that on other browsers unless tested sufficiently.\n    // Although IE 10 supports pointer event, it use old style and is different from the\n    // standard. So we exclude that. (IE 10 is hardly used on touch device)\n    && (browser.edge || browser.ie && browser.version >= 11)\n  };\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1497:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar vec2 = __webpack_require__(1485);\n\nvar matrix = __webpack_require__(1525);\n\n/**\n * @module echarts/core/BoundingRect\n */\nvar v2ApplyTransform = vec2.applyTransform;\nvar mathMin = Math.min;\nvar mathMax = Math.max;\n/**\n * @alias module:echarts/core/BoundingRect\n */\n\nfunction BoundingRect(x, y, width, height) {\n  if (width < 0) {\n    x = x + width;\n    width = -width;\n  }\n\n  if (height < 0) {\n    y = y + height;\n    height = -height;\n  }\n  /**\n   * @type {number}\n   */\n\n\n  this.x = x;\n  /**\n   * @type {number}\n   */\n\n  this.y = y;\n  /**\n   * @type {number}\n   */\n\n  this.width = width;\n  /**\n   * @type {number}\n   */\n\n  this.height = height;\n}\n\nBoundingRect.prototype = {\n  constructor: BoundingRect,\n\n  /**\n   * @param {module:echarts/core/BoundingRect} other\n   */\n  union: function (other) {\n    var x = mathMin(other.x, this.x);\n    var y = mathMin(other.y, this.y);\n    this.width = mathMax(other.x + other.width, this.x + this.width) - x;\n    this.height = mathMax(other.y + other.height, this.y + this.height) - y;\n    this.x = x;\n    this.y = y;\n  },\n\n  /**\n   * @param {Array.<number>} m\n   * @methods\n   */\n  applyTransform: function () {\n    var lt = [];\n    var rb = [];\n    var lb = [];\n    var rt = [];\n    return function (m) {\n      // In case usage like this\n      // el.getBoundingRect().applyTransform(el.transform)\n      // And element has no transform\n      if (!m) {\n        return;\n      }\n\n      lt[0] = lb[0] = this.x;\n      lt[1] = rt[1] = this.y;\n      rb[0] = rt[0] = this.x + this.width;\n      rb[1] = lb[1] = this.y + this.height;\n      v2ApplyTransform(lt, lt, m);\n      v2ApplyTransform(rb, rb, m);\n      v2ApplyTransform(lb, lb, m);\n      v2ApplyTransform(rt, rt, m);\n      this.x = mathMin(lt[0], rb[0], lb[0], rt[0]);\n      this.y = mathMin(lt[1], rb[1], lb[1], rt[1]);\n      var maxX = mathMax(lt[0], rb[0], lb[0], rt[0]);\n      var maxY = mathMax(lt[1], rb[1], lb[1], rt[1]);\n      this.width = maxX - this.x;\n      this.height = maxY - this.y;\n    };\n  }(),\n\n  /**\n   * Calculate matrix of transforming from self to target rect\n   * @param  {module:zrender/core/BoundingRect} b\n   * @return {Array.<number>}\n   */\n  calculateTransform: function (b) {\n    var a = this;\n    var sx = b.width / a.width;\n    var sy = b.height / a.height;\n    var m = matrix.create(); // 矩阵右乘\n\n    matrix.translate(m, m, [-a.x, -a.y]);\n    matrix.scale(m, m, [sx, sy]);\n    matrix.translate(m, m, [b.x, b.y]);\n    return m;\n  },\n\n  /**\n   * @param {(module:echarts/core/BoundingRect|Object)} b\n   * @return {boolean}\n   */\n  intersect: function (b) {\n    if (!b) {\n      return false;\n    }\n\n    if (!(b instanceof BoundingRect)) {\n      // Normalize negative width/height.\n      b = BoundingRect.create(b);\n    }\n\n    var a = this;\n    var ax0 = a.x;\n    var ax1 = a.x + a.width;\n    var ay0 = a.y;\n    var ay1 = a.y + a.height;\n    var bx0 = b.x;\n    var bx1 = b.x + b.width;\n    var by0 = b.y;\n    var by1 = b.y + b.height;\n    return !(ax1 < bx0 || bx1 < ax0 || ay1 < by0 || by1 < ay0);\n  },\n  contain: function (x, y) {\n    var rect = this;\n    return x >= rect.x && x <= rect.x + rect.width && y >= rect.y && y <= rect.y + rect.height;\n  },\n\n  /**\n   * @return {module:echarts/core/BoundingRect}\n   */\n  clone: function () {\n    return new BoundingRect(this.x, this.y, this.width, this.height);\n  },\n\n  /**\n   * Copy from another rect\n   */\n  copy: function (other) {\n    this.x = other.x;\n    this.y = other.y;\n    this.width = other.width;\n    this.height = other.height;\n  },\n  plain: function () {\n    return {\n      x: this.x,\n      y: this.y,\n      width: this.width,\n      height: this.height\n    };\n  }\n};\n/**\n * @param {Object|module:zrender/core/BoundingRect} rect\n * @param {number} rect.x\n * @param {number} rect.y\n * @param {number} rect.width\n * @param {number} rect.height\n * @return {module:zrender/core/BoundingRect}\n */\n\nBoundingRect.create = function (rect) {\n  return new BoundingRect(rect.x, rect.y, rect.width, rect.height);\n};\n\nvar _default = BoundingRect;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1498:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1479);\n\nvar env = __webpack_require__(1495);\n\nvar clazzUtil = __webpack_require__(1505);\n\nvar lineStyleMixin = __webpack_require__(1722);\n\nvar areaStyleMixin = __webpack_require__(1719);\n\nvar textStyleMixin = __webpack_require__(1723);\n\nvar itemStyleMixin = __webpack_require__(1721);\n\n/**\n * @module echarts/model/Model\n */\nvar mixin = zrUtil.mixin;\n/**\n * @alias module:echarts/model/Model\n * @constructor\n * @param {Object} option\n * @param {module:echarts/model/Model} [parentModel]\n * @param {module:echarts/model/Global} [ecModel]\n */\n\nfunction Model(option, parentModel, ecModel) {\n  /**\n   * @type {module:echarts/model/Model}\n   * @readOnly\n   */\n  this.parentModel = parentModel;\n  /**\n   * @type {module:echarts/model/Global}\n   * @readOnly\n   */\n\n  this.ecModel = ecModel;\n  /**\n   * @type {Object}\n   * @protected\n   */\n\n  this.option = option; // Simple optimization\n  // if (this.init) {\n  //     if (arguments.length <= 4) {\n  //         this.init(option, parentModel, ecModel, extraOpt);\n  //     }\n  //     else {\n  //         this.init.apply(this, arguments);\n  //     }\n  // }\n}\n\nModel.prototype = {\n  constructor: Model,\n\n  /**\n   * Model 的初始化函数\n   * @param {Object} option\n   */\n  init: null,\n\n  /**\n   * 从新的 Option merge\n   */\n  mergeOption: function (option) {\n    zrUtil.merge(this.option, option, true);\n  },\n\n  /**\n   * @param {string|Array.<string>} path\n   * @param {boolean} [ignoreParent=false]\n   * @return {*}\n   */\n  get: function (path, ignoreParent) {\n    if (path == null) {\n      return this.option;\n    }\n\n    return doGet(this.option, this.parsePath(path), !ignoreParent && getParent(this, path));\n  },\n\n  /**\n   * @param {string} key\n   * @param {boolean} [ignoreParent=false]\n   * @return {*}\n   */\n  getShallow: function (key, ignoreParent) {\n    var option = this.option;\n    var val = option == null ? option : option[key];\n    var parentModel = !ignoreParent && getParent(this, key);\n\n    if (val == null && parentModel) {\n      val = parentModel.getShallow(key);\n    }\n\n    return val;\n  },\n\n  /**\n   * @param {string|Array.<string>} [path]\n   * @param {module:echarts/model/Model} [parentModel]\n   * @return {module:echarts/model/Model}\n   */\n  getModel: function (path, parentModel) {\n    var obj = path == null ? this.option : doGet(this.option, path = this.parsePath(path));\n    var thisParentModel;\n    parentModel = parentModel || (thisParentModel = getParent(this, path)) && thisParentModel.getModel(path);\n    return new Model(obj, parentModel, this.ecModel);\n  },\n\n  /**\n   * If model has option\n   */\n  isEmpty: function () {\n    return this.option == null;\n  },\n  restoreData: function () {},\n  // Pending\n  clone: function () {\n    var Ctor = this.constructor;\n    return new Ctor(zrUtil.clone(this.option));\n  },\n  setReadOnly: function (properties) {\n    clazzUtil.setReadOnly(this, properties);\n  },\n  // If path is null/undefined, return null/undefined.\n  parsePath: function (path) {\n    if (typeof path === 'string') {\n      path = path.split('.');\n    }\n\n    return path;\n  },\n\n  /**\n   * @param {Function} getParentMethod\n   *        param {Array.<string>|string} path\n   *        return {module:echarts/model/Model}\n   */\n  customizeGetParent: function (getParentMethod) {\n    clazzUtil.set(this, 'getParent', getParentMethod);\n  },\n  isAnimationEnabled: function () {\n    if (!env.node) {\n      if (this.option.animation != null) {\n        return !!this.option.animation;\n      } else if (this.parentModel) {\n        return this.parentModel.isAnimationEnabled();\n      }\n    }\n  }\n};\n\nfunction doGet(obj, pathArr, parentModel) {\n  for (var i = 0; i < pathArr.length; i++) {\n    // Ignore empty\n    if (!pathArr[i]) {\n      continue;\n    } // obj could be number/string/... (like 0)\n\n\n    obj = obj && typeof obj === 'object' ? obj[pathArr[i]] : null;\n\n    if (obj == null) {\n      break;\n    }\n  }\n\n  if (obj == null && parentModel) {\n    obj = parentModel.get(pathArr);\n  }\n\n  return obj;\n} // `path` can be null/undefined\n\n\nfunction getParent(model, path) {\n  var getParentMethod = clazzUtil.get(model, 'getParent');\n  return getParentMethod ? getParentMethod.call(model, path) : model.parentModel;\n} // Enable Model.extend.\n\n\nclazzUtil.enableClassExtend(Model);\nmixin(Model, lineStyleMixin);\nmixin(Model, areaStyleMixin);\nmixin(Model, textStyleMixin);\nmixin(Model, itemStyleMixin);\nvar _default = Model;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1499:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1479);\n\nvar textContain = __webpack_require__(1523);\n\nvar numberUtil = __webpack_require__(1486);\n\n/**\n * 每三位默认加,格式化\n * @param {string|number} x\n * @return {string}\n */\nfunction addCommas(x) {\n  if (isNaN(x)) {\n    return '-';\n  }\n\n  x = (x + '').split('.');\n  return x[0].replace(/(\\d{1,3})(?=(?:\\d{3})+(?!\\d))/g, '$1,') + (x.length > 1 ? '.' + x[1] : '');\n}\n/**\n * @param {string} str\n * @param {boolean} [upperCaseFirst=false]\n * @return {string} str\n */\n\n\nfunction toCamelCase(str, upperCaseFirst) {\n  str = (str || '').toLowerCase().replace(/-(.)/g, function (match, group1) {\n    return group1.toUpperCase();\n  });\n\n  if (upperCaseFirst && str) {\n    str = str.charAt(0).toUpperCase() + str.slice(1);\n  }\n\n  return str;\n}\n\nvar normalizeCssArray = zrUtil.normalizeCssArray;\n\nfunction encodeHTML(source) {\n  return String(source).replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\"/g, '&quot;').replace(/'/g, '&#39;');\n}\n\nvar TPL_VAR_ALIAS = ['a', 'b', 'c', 'd', 'e', 'f', 'g'];\n\nvar wrapVar = function (varName, seriesIdx) {\n  return '{' + varName + (seriesIdx == null ? '' : seriesIdx) + '}';\n};\n/**\n * Template formatter\n * @param {string} tpl\n * @param {Array.<Object>|Object} paramsList\n * @param {boolean} [encode=false]\n * @return {string}\n */\n\n\nfunction formatTpl(tpl, paramsList, encode) {\n  if (!zrUtil.isArray(paramsList)) {\n    paramsList = [paramsList];\n  }\n\n  var seriesLen = paramsList.length;\n\n  if (!seriesLen) {\n    return '';\n  }\n\n  var $vars = paramsList[0].$vars || [];\n\n  for (var i = 0; i < $vars.length; i++) {\n    var alias = TPL_VAR_ALIAS[i];\n    var val = wrapVar(alias, 0);\n    tpl = tpl.replace(wrapVar(alias), encode ? encodeHTML(val) : val);\n  }\n\n  for (var seriesIdx = 0; seriesIdx < seriesLen; seriesIdx++) {\n    for (var k = 0; k < $vars.length; k++) {\n      var val = paramsList[seriesIdx][$vars[k]];\n      tpl = tpl.replace(wrapVar(TPL_VAR_ALIAS[k], seriesIdx), encode ? encodeHTML(val) : val);\n    }\n  }\n\n  return tpl;\n}\n/**\n * simple Template formatter\n *\n * @param {string} tpl\n * @param {Object} param\n * @param {boolean} [encode=false]\n * @return {string}\n */\n\n\nfunction formatTplSimple(tpl, param, encode) {\n  zrUtil.each(param, function (value, key) {\n    tpl = tpl.replace('{' + key + '}', encode ? encodeHTML(value) : value);\n  });\n  return tpl;\n}\n/**\n * @param {string} color\n * @param {string} [extraCssText]\n * @return {string}\n */\n\n\nfunction getTooltipMarker(color, extraCssText) {\n  return color ? '<span style=\"display:inline-block;margin-right:5px;' + 'border-radius:10px;width:9px;height:9px;background-color:' + encodeHTML(color) + ';' + (extraCssText || '') + '\"></span>' : '';\n}\n/**\n * @param {string} str\n * @return {string}\n * @inner\n */\n\n\nvar s2d = function (str) {\n  return str < 10 ? '0' + str : str;\n};\n/**\n * ISO Date format\n * @param {string} tpl\n * @param {number} value\n * @param {boolean} [isUTC=false] Default in local time.\n *           see `module:echarts/scale/Time`\n *           and `module:echarts/util/number#parseDate`.\n * @inner\n */\n\n\nfunction formatTime(tpl, value, isUTC) {\n  if (tpl === 'week' || tpl === 'month' || tpl === 'quarter' || tpl === 'half-year' || tpl === 'year') {\n    tpl = 'MM-dd\\nyyyy';\n  }\n\n  var date = numberUtil.parseDate(value);\n  var utc = isUTC ? 'UTC' : '';\n  var y = date['get' + utc + 'FullYear']();\n  var M = date['get' + utc + 'Month']() + 1;\n  var d = date['get' + utc + 'Date']();\n  var h = date['get' + utc + 'Hours']();\n  var m = date['get' + utc + 'Minutes']();\n  var s = date['get' + utc + 'Seconds']();\n  tpl = tpl.replace('MM', s2d(M)).replace('M', M).replace('yyyy', y).replace('yy', y % 100).replace('dd', s2d(d)).replace('d', d).replace('hh', s2d(h)).replace('h', h).replace('mm', s2d(m)).replace('m', m).replace('ss', s2d(s)).replace('s', s);\n  return tpl;\n}\n/**\n * Capital first\n * @param {string} str\n * @return {string}\n */\n\n\nfunction capitalFirst(str) {\n  return str ? str.charAt(0).toUpperCase() + str.substr(1) : str;\n}\n\nvar truncateText = textContain.truncateText;\nvar getTextRect = textContain.getBoundingRect;\nexports.addCommas = addCommas;\nexports.toCamelCase = toCamelCase;\nexports.normalizeCssArray = normalizeCssArray;\nexports.encodeHTML = encodeHTML;\nexports.formatTpl = formatTpl;\nexports.formatTplSimple = formatTplSimple;\nexports.getTooltipMarker = getTooltipMarker;\nexports.formatTime = formatTime;\nexports.capitalFirst = capitalFirst;\nexports.truncateText = truncateText;\nexports.getTextRect = getTextRect;\n\n/***/ }),\n\n/***/ 1505:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(1494);\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = __webpack_require__(1479);\n\nvar TYPE_DELIMITER = '.';\nvar IS_CONTAINER = '___EC__COMPONENT__CONTAINER___';\nvar MEMBER_PRIFIX = '\\0ec_\\0';\n/**\n * Hide private class member.\n * The same behavior as `host[name] = value;` (can be right-value)\n * @public\n */\n\nfunction set(host, name, value) {\n  return host[MEMBER_PRIFIX + name] = value;\n}\n/**\n * Hide private class member.\n * The same behavior as `host[name];`\n * @public\n */\n\n\nfunction get(host, name) {\n  return host[MEMBER_PRIFIX + name];\n}\n/**\n * For hidden private class member.\n * The same behavior as `host.hasOwnProperty(name);`\n * @public\n */\n\n\nfunction hasOwn(host, name) {\n  return host.hasOwnProperty(MEMBER_PRIFIX + name);\n}\n/**\n * Notice, parseClassType('') should returns {main: '', sub: ''}\n * @public\n */\n\n\nfunction parseClassType(componentType) {\n  var ret = {\n    main: '',\n    sub: ''\n  };\n\n  if (componentType) {\n    componentType = componentType.split(TYPE_DELIMITER);\n    ret.main = componentType[0] || '';\n    ret.sub = componentType[1] || '';\n  }\n\n  return ret;\n}\n/**\n * @public\n */\n\n\nfunction checkClassType(componentType) {\n  zrUtil.assert(/^[a-zA-Z0-9_]+([.][a-zA-Z0-9_]+)?$/.test(componentType), 'componentType \"' + componentType + '\" illegal');\n}\n/**\n * @public\n */\n\n\nfunction enableClassExtend(RootClass, mandatoryMethods) {\n  RootClass.$constructor = RootClass;\n\n  RootClass.extend = function (proto) {\n    var superClass = this;\n\n    var ExtendedClass = function () {\n      if (!proto.$constructor) {\n        superClass.apply(this, arguments);\n      } else {\n        proto.$constructor.apply(this, arguments);\n      }\n    };\n\n    zrUtil.extend(ExtendedClass.prototype, proto);\n    ExtendedClass.extend = this.extend;\n    ExtendedClass.superCall = superCall;\n    ExtendedClass.superApply = superApply;\n    zrUtil.inherits(ExtendedClass, this);\n    ExtendedClass.superClass = superClass;\n    return ExtendedClass;\n  };\n} // superCall should have class info, which can not be fetch from 'this'.\n// Consider this case:\n// class A has method f,\n// class B inherits class A, overrides method f, f call superApply('f'),\n// class C inherits class B, do not overrides method f,\n// then when method of class C is called, dead loop occured.\n\n\nfunction superCall(context, methodName) {\n  var args = zrUtil.slice(arguments, 2);\n  return this.superClass.prototype[methodName].apply(context, args);\n}\n\nfunction superApply(context, methodName, args) {\n  return this.superClass.prototype[methodName].apply(context, args);\n}\n/**\n * @param {Object} entity\n * @param {Object} options\n * @param {boolean} [options.registerWhenExtend]\n * @public\n */\n\n\nfunction enableClassManagement(entity, options) {\n  options = options || {};\n  /**\n   * Component model classes\n   * key: componentType,\n   * value:\n   *     componentClass, when componentType is 'xxx'\n   *     or Object.<subKey, componentClass>, when componentType is 'xxx.yy'\n   * @type {Object}\n   */\n\n  var storage = {};\n\n  entity.registerClass = function (Clazz, componentType) {\n    if (componentType) {\n      checkClassType(componentType);\n      componentType = parseClassType(componentType);\n\n      if (!componentType.sub) {\n        storage[componentType.main] = Clazz;\n      } else if (componentType.sub !== IS_CONTAINER) {\n        var container = makeContainer(componentType);\n        container[componentType.sub] = Clazz;\n      }\n    }\n\n    return Clazz;\n  };\n\n  entity.getClass = function (componentMainType, subType, throwWhenNotFound) {\n    var Clazz = storage[componentMainType];\n\n    if (Clazz && Clazz[IS_CONTAINER]) {\n      Clazz = subType ? Clazz[subType] : null;\n    }\n\n    if (throwWhenNotFound && !Clazz) {\n      throw new Error(!subType ? componentMainType + '.' + 'type should be specified.' : 'Component ' + componentMainType + '.' + (subType || '') + ' not exists. Load it first.');\n    }\n\n    return Clazz;\n  };\n\n  entity.getClassesByMainType = function (componentType) {\n    componentType = parseClassType(componentType);\n    var result = [];\n    var obj = storage[componentType.main];\n\n    if (obj && obj[IS_CONTAINER]) {\n      zrUtil.each(obj, function (o, type) {\n        type !== IS_CONTAINER && result.push(o);\n      });\n    } else {\n      result.push(obj);\n    }\n\n    return result;\n  };\n\n  entity.hasClass = function (componentType) {\n    // Just consider componentType.main.\n    componentType = parseClassType(componentType);\n    return !!storage[componentType.main];\n  };\n  /**\n   * @return {Array.<string>} Like ['aa', 'bb'], but can not be ['aa.xx']\n   */\n\n\n  entity.getAllClassMainTypes = function () {\n    var types = [];\n    zrUtil.each(storage, function (obj, type) {\n      types.push(type);\n    });\n    return types;\n  };\n  /**\n   * If a main type is container and has sub types\n   * @param  {string}  mainType\n   * @return {boolean}\n   */\n\n\n  entity.hasSubTypes = function (componentType) {\n    componentType = parseClassType(componentType);\n    var obj = storage[componentType.main];\n    return obj && obj[IS_CONTAINER];\n  };\n\n  entity.parseClassType = parseClassType;\n\n  function makeContainer(componentType) {\n    var container = storage[componentType.main];\n\n    if (!container || !container[IS_CONTAINER]) {\n      container = storage[componentType.main] = {};\n      container[IS_CONTAINER] = true;\n    }\n\n    return container;\n  }\n\n  if (options.registerWhenExtend) {\n    var originalExtend = entity.extend;\n\n    if (originalExtend) {\n      entity.extend = function (proto) {\n        var ExtendedClass = originalExtend.call(this, proto);\n        return entity.registerClass(ExtendedClass, proto.type);\n      };\n    }\n  }\n\n  return entity;\n}\n/**\n * @param {string|Array.<string>} properties\n */\n\n\nfunction setReadOnly(obj, properties) {// FIXME It seems broken in IE8 simulation of IE11\n  // if (!zrUtil.isArray(properties)) {\n  //     properties = properties != null ? [properties] : [];\n  // }\n  // zrUtil.each(properties, function (prop) {\n  //     var value = obj[prop];\n  //     Object.defineProperty\n  //         && Object.defineProperty(obj, prop, {\n  //             value: value, writable: false\n  //         });\n  //     zrUtil.isArray(obj[prop])\n  //         && Object.freeze\n  //         && Object.freeze(obj[prop]);\n  // });\n}\n\nexports.set = set;\nexports.get = get;\nexports.hasOwn = hasOwn;\nexports.parseClassType = parseClassType;\nexports.enableClassExtend = enableClassExtend;\nexports.enableClassManagement = enableClassManagement;\nexports.setReadOnly = setReadOnly;\n\n/***/ }),\n\n/***/ 1508:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1479);\n\nvar Model = __webpack_require__(1498);\n\nvar componentUtil = __webpack_require__(1568);\n\nvar clazzUtil = __webpack_require__(1505);\n\nvar layout = __webpack_require__(1517);\n\nvar boxLayoutMixin = __webpack_require__(1720);\n\n/**\n * Component model\n *\n * @module echarts/model/Component\n */\nvar arrayPush = Array.prototype.push;\n/**\n * @alias module:echarts/model/Component\n * @constructor\n * @param {Object} option\n * @param {module:echarts/model/Model} parentModel\n * @param {module:echarts/model/Model} ecModel\n */\n\nvar ComponentModel = Model.extend({\n  type: 'component',\n\n  /**\n   * @readOnly\n   * @type {string}\n   */\n  id: '',\n\n  /**\n   * @readOnly\n   */\n  name: '',\n\n  /**\n   * @readOnly\n   * @type {string}\n   */\n  mainType: '',\n\n  /**\n   * @readOnly\n   * @type {string}\n   */\n  subType: '',\n\n  /**\n   * @readOnly\n   * @type {number}\n   */\n  componentIndex: 0,\n\n  /**\n   * @type {Object}\n   * @protected\n   */\n  defaultOption: null,\n\n  /**\n   * @type {module:echarts/model/Global}\n   * @readOnly\n   */\n  ecModel: null,\n\n  /**\n   * key: componentType\n   * value:  Component model list, can not be null.\n   * @type {Object.<string, Array.<module:echarts/model/Model>>}\n   * @readOnly\n   */\n  dependentModels: [],\n\n  /**\n   * @type {string}\n   * @readOnly\n   */\n  uid: null,\n\n  /**\n   * Support merge layout params.\n   * Only support 'box' now (left/right/top/bottom/width/height).\n   * @type {string|Object} Object can be {ignoreSize: true}\n   * @readOnly\n   */\n  layoutMode: null,\n  $constructor: function (option, parentModel, ecModel, extraOpt) {\n    Model.call(this, option, parentModel, ecModel, extraOpt);\n    this.uid = componentUtil.getUID('componentModel');\n  },\n  init: function (option, parentModel, ecModel, extraOpt) {\n    this.mergeDefaultAndTheme(option, ecModel);\n  },\n  mergeDefaultAndTheme: function (option, ecModel) {\n    var layoutMode = this.layoutMode;\n    var inputPositionParams = layoutMode ? layout.getLayoutParams(option) : {};\n    var themeModel = ecModel.getTheme();\n    zrUtil.merge(option, themeModel.get(this.mainType));\n    zrUtil.merge(option, this.getDefaultOption());\n\n    if (layoutMode) {\n      layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n    }\n  },\n  mergeOption: function (option, extraOpt) {\n    zrUtil.merge(this.option, option, true);\n    var layoutMode = this.layoutMode;\n\n    if (layoutMode) {\n      layout.mergeLayoutParam(this.option, option, layoutMode);\n    }\n  },\n  // Hooker after init or mergeOption\n  optionUpdated: function (newCptOption, isInit) {},\n  getDefaultOption: function () {\n    if (!clazzUtil.hasOwn(this, '__defaultOption')) {\n      var optList = [];\n      var Class = this.constructor;\n\n      while (Class) {\n        var opt = Class.prototype.defaultOption;\n        opt && optList.push(opt);\n        Class = Class.superClass;\n      }\n\n      var defaultOption = {};\n\n      for (var i = optList.length - 1; i >= 0; i--) {\n        defaultOption = zrUtil.merge(defaultOption, optList[i], true);\n      }\n\n      clazzUtil.set(this, '__defaultOption', defaultOption);\n    }\n\n    return clazzUtil.get(this, '__defaultOption');\n  },\n  getReferringComponents: function (mainType) {\n    return this.ecModel.queryComponents({\n      mainType: mainType,\n      index: this.get(mainType + 'Index', true),\n      id: this.get(mainType + 'Id', true)\n    });\n  }\n}); // Reset ComponentModel.extend, add preConstruct.\n// clazzUtil.enableClassExtend(\n//     ComponentModel,\n//     function (option, parentModel, ecModel, extraOpt) {\n//         // Set dependentModels, componentIndex, name, id, mainType, subType.\n//         zrUtil.extend(this, extraOpt);\n//         this.uid = componentUtil.getUID('componentModel');\n//         // this.setReadOnly([\n//         //     'type', 'id', 'uid', 'name', 'mainType', 'subType',\n//         //     'dependentModels', 'componentIndex'\n//         // ]);\n//     }\n// );\n// Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n\nclazzUtil.enableClassManagement(ComponentModel, {\n  registerWhenExtend: true\n});\ncomponentUtil.enableSubTypeDefaulter(ComponentModel); // Add capability of ComponentModel.topologicalTravel.\n\ncomponentUtil.enableTopologicalTravel(ComponentModel, getDependencies);\n\nfunction getDependencies(componentType) {\n  var deps = [];\n  zrUtil.each(ComponentModel.getClassesByMainType(componentType), function (Clazz) {\n    arrayPush.apply(deps, Clazz.prototype.dependencies || []);\n  }); // Ensure main type\n\n  return zrUtil.map(deps, function (type) {\n    return clazzUtil.parseClassType(type).main;\n  });\n}\n\nzrUtil.mixin(ComponentModel, boxLayoutMixin);\nvar _default = ComponentModel;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1516:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(1494);\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = __webpack_require__(1479);\n\nvar textContain = __webpack_require__(1523);\n\nvar OrdinalScale = __webpack_require__(1728);\n\nvar IntervalScale = __webpack_require__(1567);\n\nvar Scale = __webpack_require__(1539);\n\nvar numberUtil = __webpack_require__(1486);\n\n__webpack_require__(1729);\n\n__webpack_require__(1727);\n\n/**\n * Get axis scale extent before niced.\n * Item of returned array can only be number (including Infinity and NaN).\n */\nfunction getScaleExtent(scale, model) {\n  var scaleType = scale.type;\n  var min = model.getMin();\n  var max = model.getMax();\n  var fixMin = min != null;\n  var fixMax = max != null;\n  var originalExtent = scale.getExtent();\n  var axisDataLen;\n  var boundaryGap;\n  var span;\n\n  if (scaleType === 'ordinal') {\n    axisDataLen = (model.get('data') || []).length;\n  } else {\n    boundaryGap = model.get('boundaryGap');\n\n    if (!zrUtil.isArray(boundaryGap)) {\n      boundaryGap = [boundaryGap || 0, boundaryGap || 0];\n    }\n\n    if (typeof boundaryGap[0] === 'boolean') {\n      boundaryGap = [0, 0];\n    }\n\n    boundaryGap[0] = numberUtil.parsePercent(boundaryGap[0], 1);\n    boundaryGap[1] = numberUtil.parsePercent(boundaryGap[1], 1);\n    span = originalExtent[1] - originalExtent[0] || Math.abs(originalExtent[0]);\n  } // Notice: When min/max is not set (that is, when there are null/undefined,\n  // which is the most common case), these cases should be ensured:\n  // (1) For 'ordinal', show all axis.data.\n  // (2) For others:\n  //      + `boundaryGap` is applied (if min/max set, boundaryGap is\n  //      disabled).\n  //      + If `needCrossZero`, min/max should be zero, otherwise, min/max should\n  //      be the result that originalExtent enlarged by boundaryGap.\n  // (3) If no data, it should be ensured that `scale.setBlank` is set.\n  // FIXME\n  // (1) When min/max is 'dataMin' or 'dataMax', should boundaryGap be able to used?\n  // (2) When `needCrossZero` and all data is positive/negative, should it be ensured\n  // that the results processed by boundaryGap are positive/negative?\n\n\n  if (min == null) {\n    min = scaleType === 'ordinal' ? axisDataLen ? 0 : NaN : originalExtent[0] - boundaryGap[0] * span;\n  }\n\n  if (max == null) {\n    max = scaleType === 'ordinal' ? axisDataLen ? axisDataLen - 1 : NaN : originalExtent[1] + boundaryGap[1] * span;\n  }\n\n  if (min === 'dataMin') {\n    min = originalExtent[0];\n  } else if (typeof min === 'function') {\n    min = min({\n      min: originalExtent[0],\n      max: originalExtent[1]\n    });\n  }\n\n  if (max === 'dataMax') {\n    max = originalExtent[1];\n  } else if (typeof max === 'function') {\n    max = max({\n      min: originalExtent[0],\n      max: originalExtent[1]\n    });\n  }\n\n  (min == null || !isFinite(min)) && (min = NaN);\n  (max == null || !isFinite(max)) && (max = NaN);\n  scale.setBlank(zrUtil.eqNaN(min) || zrUtil.eqNaN(max)); // Evaluate if axis needs cross zero\n\n  if (model.getNeedCrossZero()) {\n    // Axis is over zero and min is not set\n    if (min > 0 && max > 0 && !fixMin) {\n      min = 0;\n    } // Axis is under zero and max is not set\n\n\n    if (min < 0 && max < 0 && !fixMax) {\n      max = 0;\n    }\n  }\n\n  return [min, max];\n}\n\nfunction niceScaleExtent(scale, model) {\n  var extent = getScaleExtent(scale, model);\n  var fixMin = model.getMin() != null;\n  var fixMax = model.getMax() != null;\n  var splitNumber = model.get('splitNumber');\n\n  if (scale.type === 'log') {\n    scale.base = model.get('logBase');\n  }\n\n  var scaleType = scale.type;\n  scale.setExtent(extent[0], extent[1]);\n  scale.niceExtent({\n    splitNumber: splitNumber,\n    fixMin: fixMin,\n    fixMax: fixMax,\n    minInterval: scaleType === 'interval' || scaleType === 'time' ? model.get('minInterval') : null,\n    maxInterval: scaleType === 'interval' || scaleType === 'time' ? model.get('maxInterval') : null\n  }); // If some one specified the min, max. And the default calculated interval\n  // is not good enough. He can specify the interval. It is often appeared\n  // in angle axis with angle 0 - 360. Interval calculated in interval scale is hard\n  // to be 60.\n  // FIXME\n\n  var interval = model.get('interval');\n\n  if (interval != null) {\n    scale.setInterval && scale.setInterval(interval);\n  }\n}\n/**\n * @param {module:echarts/model/Model} model\n * @param {string} [axisType] Default retrieve from model.type\n * @return {module:echarts/scale/*}\n */\n\n\nfunction createScaleByModel(model, axisType) {\n  axisType = axisType || model.get('type');\n\n  if (axisType) {\n    switch (axisType) {\n      // Buildin scale\n      case 'category':\n        return new OrdinalScale(model.getCategories(), [Infinity, -Infinity]);\n\n      case 'value':\n        return new IntervalScale();\n      // Extended scale, like time and log\n\n      default:\n        return (Scale.getClass(axisType) || IntervalScale).create(model);\n    }\n  }\n}\n/**\n * Check if the axis corss 0\n */\n\n\nfunction ifAxisCrossZero(axis) {\n  var dataExtent = axis.scale.getExtent();\n  var min = dataExtent[0];\n  var max = dataExtent[1];\n  return !(min > 0 && max > 0 || min < 0 && max < 0);\n}\n/**\n * @param {Array.<number>} tickCoords In axis self coordinate.\n * @param {Array.<string>} labels\n * @param {string} font\n * @param {number} axisRotate 0: towards right horizontally, clock-wise is negative.\n * @param {number} [labelRotate=0] 0: towards right horizontally, clock-wise is negative.\n * @return {number}\n */\n\n\nfunction getAxisLabelInterval(tickCoords, labels, font, axisRotate, labelRotate) {\n  var textSpaceTakenRect;\n  var autoLabelInterval = 0;\n  var accumulatedLabelInterval = 0;\n  var rotation = (axisRotate - labelRotate) / 180 * Math.PI;\n  var step = 1;\n\n  if (labels.length > 40) {\n    // Simple optimization for large amount of labels\n    step = Math.floor(labels.length / 40);\n  }\n\n  for (var i = 0; i < tickCoords.length; i += step) {\n    var tickCoord = tickCoords[i]; // Not precise, do not consider align and vertical align\n    // and each distance from axis line yet.\n\n    var rect = textContain.getBoundingRect(labels[i], font, 'center', 'top');\n    rect.x += tickCoord * Math.cos(rotation);\n    rect.y += tickCoord * Math.sin(rotation); // Magic number\n\n    rect.width *= 1.3;\n    rect.height *= 1.3;\n\n    if (!textSpaceTakenRect) {\n      textSpaceTakenRect = rect.clone();\n    } // There is no space for current label;\n    else if (textSpaceTakenRect.intersect(rect)) {\n        accumulatedLabelInterval++;\n        autoLabelInterval = Math.max(autoLabelInterval, accumulatedLabelInterval);\n      } else {\n        textSpaceTakenRect.union(rect); // Reset\n\n        accumulatedLabelInterval = 0;\n      }\n  }\n\n  if (autoLabelInterval === 0 && step > 1) {\n    return step;\n  }\n\n  return (autoLabelInterval + 1) * step - 1;\n}\n/**\n * @param {Object} axis\n * @param {Function} labelFormatter\n * @return {Array.<string>}\n */\n\n\nfunction getFormattedLabels(axis, labelFormatter) {\n  var scale = axis.scale;\n  var labels = scale.getTicksLabels();\n  var ticks = scale.getTicks();\n\n  if (typeof labelFormatter === 'string') {\n    labelFormatter = function (tpl) {\n      return function (val) {\n        return tpl.replace('{value}', val != null ? val : '');\n      };\n    }(labelFormatter); // Consider empty array\n\n\n    return zrUtil.map(labels, labelFormatter);\n  } else if (typeof labelFormatter === 'function') {\n    return zrUtil.map(ticks, function (tick, idx) {\n      return labelFormatter(getAxisRawValue(axis, tick), idx);\n    }, this);\n  } else {\n    return labels;\n  }\n}\n\nfunction getAxisRawValue(axis, value) {\n  // In category axis with data zoom, tick is not the original\n  // index of axis.data. So tick should not be exposed to user\n  // in category axis.\n  return axis.type === 'category' ? axis.scale.getLabel(value) : value;\n}\n\nexports.getScaleExtent = getScaleExtent;\nexports.niceScaleExtent = niceScaleExtent;\nexports.createScaleByModel = createScaleByModel;\nexports.ifAxisCrossZero = ifAxisCrossZero;\nexports.getAxisLabelInterval = getAxisLabelInterval;\nexports.getFormattedLabels = getFormattedLabels;\nexports.getAxisRawValue = getAxisRawValue;\n\n/***/ }),\n\n/***/ 1517:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1479);\n\nvar BoundingRect = __webpack_require__(1497);\n\nvar _number = __webpack_require__(1486);\n\nvar parsePercent = _number.parsePercent;\n\nvar formatUtil = __webpack_require__(1499);\n\n// Layout helpers for each component positioning\nvar each = zrUtil.each;\n/**\n * @public\n */\n\nvar LOCATION_PARAMS = ['left', 'right', 'top', 'bottom', 'width', 'height'];\n/**\n * @public\n */\n\nvar HV_NAMES = [['width', 'left', 'right'], ['height', 'top', 'bottom']];\n\nfunction boxLayout(orient, group, gap, maxWidth, maxHeight) {\n  var x = 0;\n  var y = 0;\n\n  if (maxWidth == null) {\n    maxWidth = Infinity;\n  }\n\n  if (maxHeight == null) {\n    maxHeight = Infinity;\n  }\n\n  var currentLineMaxSize = 0;\n  group.eachChild(function (child, idx) {\n    var position = child.position;\n    var rect = child.getBoundingRect();\n    var nextChild = group.childAt(idx + 1);\n    var nextChildRect = nextChild && nextChild.getBoundingRect();\n    var nextX;\n    var nextY;\n\n    if (orient === 'horizontal') {\n      var moveX = rect.width + (nextChildRect ? -nextChildRect.x + rect.x : 0);\n      nextX = x + moveX; // Wrap when width exceeds maxWidth or meet a `newline` group\n      // FIXME compare before adding gap?\n\n      if (nextX > maxWidth || child.newline) {\n        x = 0;\n        nextX = moveX;\n        y += currentLineMaxSize + gap;\n        currentLineMaxSize = rect.height;\n      } else {\n        // FIXME: consider rect.y is not `0`?\n        currentLineMaxSize = Math.max(currentLineMaxSize, rect.height);\n      }\n    } else {\n      var moveY = rect.height + (nextChildRect ? -nextChildRect.y + rect.y : 0);\n      nextY = y + moveY; // Wrap when width exceeds maxHeight or meet a `newline` group\n\n      if (nextY > maxHeight || child.newline) {\n        x += currentLineMaxSize + gap;\n        y = 0;\n        nextY = moveY;\n        currentLineMaxSize = rect.width;\n      } else {\n        currentLineMaxSize = Math.max(currentLineMaxSize, rect.width);\n      }\n    }\n\n    if (child.newline) {\n      return;\n    }\n\n    position[0] = x;\n    position[1] = y;\n    orient === 'horizontal' ? x = nextX + gap : y = nextY + gap;\n  });\n}\n/**\n * VBox or HBox layouting\n * @param {string} orient\n * @param {module:zrender/container/Group} group\n * @param {number} gap\n * @param {number} [width=Infinity]\n * @param {number} [height=Infinity]\n */\n\n\nvar box = boxLayout;\n/**\n * VBox layouting\n * @param {module:zrender/container/Group} group\n * @param {number} gap\n * @param {number} [width=Infinity]\n * @param {number} [height=Infinity]\n */\n\nvar vbox = zrUtil.curry(boxLayout, 'vertical');\n/**\n * HBox layouting\n * @param {module:zrender/container/Group} group\n * @param {number} gap\n * @param {number} [width=Infinity]\n * @param {number} [height=Infinity]\n */\n\nvar hbox = zrUtil.curry(boxLayout, 'horizontal');\n/**\n * If x or x2 is not specified or 'center' 'left' 'right',\n * the width would be as long as possible.\n * If y or y2 is not specified or 'middle' 'top' 'bottom',\n * the height would be as long as possible.\n *\n * @param {Object} positionInfo\n * @param {number|string} [positionInfo.x]\n * @param {number|string} [positionInfo.y]\n * @param {number|string} [positionInfo.x2]\n * @param {number|string} [positionInfo.y2]\n * @param {Object} containerRect {width, height}\n * @param {string|number} margin\n * @return {Object} {width, height}\n */\n\nfunction getAvailableSize(positionInfo, containerRect, margin) {\n  var containerWidth = containerRect.width;\n  var containerHeight = containerRect.height;\n  var x = parsePercent(positionInfo.x, containerWidth);\n  var y = parsePercent(positionInfo.y, containerHeight);\n  var x2 = parsePercent(positionInfo.x2, containerWidth);\n  var y2 = parsePercent(positionInfo.y2, containerHeight);\n  (isNaN(x) || isNaN(parseFloat(positionInfo.x))) && (x = 0);\n  (isNaN(x2) || isNaN(parseFloat(positionInfo.x2))) && (x2 = containerWidth);\n  (isNaN(y) || isNaN(parseFloat(positionInfo.y))) && (y = 0);\n  (isNaN(y2) || isNaN(parseFloat(positionInfo.y2))) && (y2 = containerHeight);\n  margin = formatUtil.normalizeCssArray(margin || 0);\n  return {\n    width: Math.max(x2 - x - margin[1] - margin[3], 0),\n    height: Math.max(y2 - y - margin[0] - margin[2], 0)\n  };\n}\n/**\n * Parse position info.\n *\n * @param {Object} positionInfo\n * @param {number|string} [positionInfo.left]\n * @param {number|string} [positionInfo.top]\n * @param {number|string} [positionInfo.right]\n * @param {number|string} [positionInfo.bottom]\n * @param {number|string} [positionInfo.width]\n * @param {number|string} [positionInfo.height]\n * @param {number|string} [positionInfo.aspect] Aspect is width / height\n * @param {Object} containerRect\n * @param {string|number} [margin]\n *\n * @return {module:zrender/core/BoundingRect}\n */\n\n\nfunction getLayoutRect(positionInfo, containerRect, margin) {\n  margin = formatUtil.normalizeCssArray(margin || 0);\n  var containerWidth = containerRect.width;\n  var containerHeight = containerRect.height;\n  var left = parsePercent(positionInfo.left, containerWidth);\n  var top = parsePercent(positionInfo.top, containerHeight);\n  var right = parsePercent(positionInfo.right, containerWidth);\n  var bottom = parsePercent(positionInfo.bottom, containerHeight);\n  var width = parsePercent(positionInfo.width, containerWidth);\n  var height = parsePercent(positionInfo.height, containerHeight);\n  var verticalMargin = margin[2] + margin[0];\n  var horizontalMargin = margin[1] + margin[3];\n  var aspect = positionInfo.aspect; // If width is not specified, calculate width from left and right\n\n  if (isNaN(width)) {\n    width = containerWidth - right - horizontalMargin - left;\n  }\n\n  if (isNaN(height)) {\n    height = containerHeight - bottom - verticalMargin - top;\n  }\n\n  if (aspect != null) {\n    // If width and height are not given\n    // 1. Graph should not exceeds the container\n    // 2. Aspect must be keeped\n    // 3. Graph should take the space as more as possible\n    // FIXME\n    // Margin is not considered, because there is no case that both\n    // using margin and aspect so far.\n    if (isNaN(width) && isNaN(height)) {\n      if (aspect > containerWidth / containerHeight) {\n        width = containerWidth * 0.8;\n      } else {\n        height = containerHeight * 0.8;\n      }\n    } // Calculate width or height with given aspect\n\n\n    if (isNaN(width)) {\n      width = aspect * height;\n    }\n\n    if (isNaN(height)) {\n      height = width / aspect;\n    }\n  } // If left is not specified, calculate left from right and width\n\n\n  if (isNaN(left)) {\n    left = containerWidth - right - width - horizontalMargin;\n  }\n\n  if (isNaN(top)) {\n    top = containerHeight - bottom - height - verticalMargin;\n  } // Align left and top\n\n\n  switch (positionInfo.left || positionInfo.right) {\n    case 'center':\n      left = containerWidth / 2 - width / 2 - margin[3];\n      break;\n\n    case 'right':\n      left = containerWidth - width - horizontalMargin;\n      break;\n  }\n\n  switch (positionInfo.top || positionInfo.bottom) {\n    case 'middle':\n    case 'center':\n      top = containerHeight / 2 - height / 2 - margin[0];\n      break;\n\n    case 'bottom':\n      top = containerHeight - height - verticalMargin;\n      break;\n  } // If something is wrong and left, top, width, height are calculated as NaN\n\n\n  left = left || 0;\n  top = top || 0;\n\n  if (isNaN(width)) {\n    // Width may be NaN if only one value is given except width\n    width = containerWidth - horizontalMargin - left - (right || 0);\n  }\n\n  if (isNaN(height)) {\n    // Height may be NaN if only one value is given except height\n    height = containerHeight - verticalMargin - top - (bottom || 0);\n  }\n\n  var rect = new BoundingRect(left + margin[3], top + margin[0], width, height);\n  rect.margin = margin;\n  return rect;\n}\n/**\n * Position a zr element in viewport\n *  Group position is specified by either\n *  {left, top}, {right, bottom}\n *  If all properties exists, right and bottom will be igonred.\n *\n * Logic:\n *     1. Scale (against origin point in parent coord)\n *     2. Rotate (against origin point in parent coord)\n *     3. Traslate (with el.position by this method)\n * So this method only fixes the last step 'Traslate', which does not affect\n * scaling and rotating.\n *\n * If be called repeatly with the same input el, the same result will be gotten.\n *\n * @param {module:zrender/Element} el Should have `getBoundingRect` method.\n * @param {Object} positionInfo\n * @param {number|string} [positionInfo.left]\n * @param {number|string} [positionInfo.top]\n * @param {number|string} [positionInfo.right]\n * @param {number|string} [positionInfo.bottom]\n * @param {number|string} [positionInfo.width] Only for opt.boundingModel: 'raw'\n * @param {number|string} [positionInfo.height] Only for opt.boundingModel: 'raw'\n * @param {Object} containerRect\n * @param {string|number} margin\n * @param {Object} [opt]\n * @param {Array.<number>} [opt.hv=[1,1]] Only horizontal or only vertical.\n * @param {Array.<number>} [opt.boundingMode='all']\n *        Specify how to calculate boundingRect when locating.\n *        'all': Position the boundingRect that is transformed and uioned\n *               both itself and its descendants.\n *               This mode simplies confine the elements in the bounding\n *               of their container (e.g., using 'right: 0').\n *        'raw': Position the boundingRect that is not transformed and only itself.\n *               This mode is useful when you want a element can overflow its\n *               container. (Consider a rotated circle needs to be located in a corner.)\n *               In this mode positionInfo.width/height can only be number.\n */\n\n\nfunction positionElement(el, positionInfo, containerRect, margin, opt) {\n  var h = !opt || !opt.hv || opt.hv[0];\n  var v = !opt || !opt.hv || opt.hv[1];\n  var boundingMode = opt && opt.boundingMode || 'all';\n\n  if (!h && !v) {\n    return;\n  }\n\n  var rect;\n\n  if (boundingMode === 'raw') {\n    rect = el.type === 'group' ? new BoundingRect(0, 0, +positionInfo.width || 0, +positionInfo.height || 0) : el.getBoundingRect();\n  } else {\n    rect = el.getBoundingRect();\n\n    if (el.needLocalTransform()) {\n      var transform = el.getLocalTransform(); // Notice: raw rect may be inner object of el,\n      // which should not be modified.\n\n      rect = rect.clone();\n      rect.applyTransform(transform);\n    }\n  } // The real width and height can not be specified but calculated by the given el.\n\n\n  positionInfo = getLayoutRect(zrUtil.defaults({\n    width: rect.width,\n    height: rect.height\n  }, positionInfo), containerRect, margin); // Because 'tranlate' is the last step in transform\n  // (see zrender/core/Transformable#getLocalTransfrom),\n  // we can just only modify el.position to get final result.\n\n  var elPos = el.position;\n  var dx = h ? positionInfo.x - rect.x : 0;\n  var dy = v ? positionInfo.y - rect.y : 0;\n  el.attr('position', boundingMode === 'raw' ? [dx, dy] : [elPos[0] + dx, elPos[1] + dy]);\n}\n/**\n * @param {Object} option Contains some of the properties in HV_NAMES.\n * @param {number} hvIdx 0: horizontal; 1: vertical.\n */\n\n\nfunction sizeCalculable(option, hvIdx) {\n  return option[HV_NAMES[hvIdx][0]] != null || option[HV_NAMES[hvIdx][1]] != null && option[HV_NAMES[hvIdx][2]] != null;\n}\n/**\n * Consider Case:\n * When defulat option has {left: 0, width: 100}, and we set {right: 0}\n * through setOption or media query, using normal zrUtil.merge will cause\n * {right: 0} does not take effect.\n *\n * @example\n * ComponentModel.extend({\n *     init: function () {\n *         ...\n *         var inputPositionParams = layout.getLayoutParams(option);\n *         this.mergeOption(inputPositionParams);\n *     },\n *     mergeOption: function (newOption) {\n *         newOption && zrUtil.merge(thisOption, newOption, true);\n *         layout.mergeLayoutParam(thisOption, newOption);\n *     }\n * });\n *\n * @param {Object} targetOption\n * @param {Object} newOption\n * @param {Object|string} [opt]\n * @param {boolean|Array.<boolean>} [opt.ignoreSize=false] Used for the components\n *  that width (or height) should not be calculated by left and right (or top and bottom).\n */\n\n\nfunction mergeLayoutParam(targetOption, newOption, opt) {\n  !zrUtil.isObject(opt) && (opt = {});\n  var ignoreSize = opt.ignoreSize;\n  !zrUtil.isArray(ignoreSize) && (ignoreSize = [ignoreSize, ignoreSize]);\n  var hResult = merge(HV_NAMES[0], 0);\n  var vResult = merge(HV_NAMES[1], 1);\n  copy(HV_NAMES[0], targetOption, hResult);\n  copy(HV_NAMES[1], targetOption, vResult);\n\n  function merge(names, hvIdx) {\n    var newParams = {};\n    var newValueCount = 0;\n    var merged = {};\n    var mergedValueCount = 0;\n    var enoughParamNumber = 2;\n    each(names, function (name) {\n      merged[name] = targetOption[name];\n    });\n    each(names, function (name) {\n      // Consider case: newOption.width is null, which is\n      // set by user for removing width setting.\n      hasProp(newOption, name) && (newParams[name] = merged[name] = newOption[name]);\n      hasValue(newParams, name) && newValueCount++;\n      hasValue(merged, name) && mergedValueCount++;\n    });\n\n    if (ignoreSize[hvIdx]) {\n      // Only one of left/right is premitted to exist.\n      if (hasValue(newOption, names[1])) {\n        merged[names[2]] = null;\n      } else if (hasValue(newOption, names[2])) {\n        merged[names[1]] = null;\n      }\n\n      return merged;\n    } // Case: newOption: {width: ..., right: ...},\n    // or targetOption: {right: ...} and newOption: {width: ...},\n    // There is no conflict when merged only has params count\n    // little than enoughParamNumber.\n\n\n    if (mergedValueCount === enoughParamNumber || !newValueCount) {\n      return merged;\n    } // Case: newOption: {width: ..., right: ...},\n    // Than we can make sure user only want those two, and ignore\n    // all origin params in targetOption.\n    else if (newValueCount >= enoughParamNumber) {\n        return newParams;\n      } else {\n        // Chose another param from targetOption by priority.\n        for (var i = 0; i < names.length; i++) {\n          var name = names[i];\n\n          if (!hasProp(newParams, name) && hasProp(targetOption, name)) {\n            newParams[name] = targetOption[name];\n            break;\n          }\n        }\n\n        return newParams;\n      }\n  }\n\n  function hasProp(obj, name) {\n    return obj.hasOwnProperty(name);\n  }\n\n  function hasValue(obj, name) {\n    return obj[name] != null && obj[name] !== 'auto';\n  }\n\n  function copy(names, target, source) {\n    each(names, function (name) {\n      target[name] = source[name];\n    });\n  }\n}\n/**\n * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n * @param {Object} source\n * @return {Object} Result contains those props.\n */\n\n\nfunction getLayoutParams(source) {\n  return copyLayoutParams({}, source);\n}\n/**\n * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n * @param {Object} source\n * @return {Object} Result contains those props.\n */\n\n\nfunction copyLayoutParams(target, source) {\n  source && target && each(LOCATION_PARAMS, function (name) {\n    source.hasOwnProperty(name) && (target[name] = source[name]);\n  });\n  return target;\n}\n\nexports.LOCATION_PARAMS = LOCATION_PARAMS;\nexports.HV_NAMES = HV_NAMES;\nexports.box = box;\nexports.vbox = vbox;\nexports.hbox = hbox;\nexports.getAvailableSize = getAvailableSize;\nexports.getLayoutRect = getLayoutRect;\nexports.positionElement = positionElement;\nexports.sizeCalculable = sizeCalculable;\nexports.mergeLayoutParam = mergeLayoutParam;\nexports.getLayoutParams = getLayoutParams;\nexports.copyLayoutParams = copyLayoutParams;\n\n/***/ }),\n\n/***/ 1523:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar BoundingRect = __webpack_require__(1497);\n\nvar imageHelper = __webpack_require__(1577);\n\nvar _util = __webpack_require__(1479);\n\nvar getContext = _util.getContext;\nvar extend = _util.extend;\nvar retrieve2 = _util.retrieve2;\nvar retrieve3 = _util.retrieve3;\nvar textWidthCache = {};\nvar textWidthCacheCounter = 0;\nvar TEXT_CACHE_MAX = 5000;\nvar STYLE_REG = /\\{([a-zA-Z0-9_]+)\\|([^}]*)\\}/g;\nvar DEFAULT_FONT = '12px sans-serif'; // Avoid assign to an exported variable, for transforming to cjs.\n\nvar methods = {};\n\nfunction $override(name, fn) {\n  methods[name] = fn;\n}\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @return {number} width\n */\n\n\nfunction getWidth(text, font) {\n  font = font || DEFAULT_FONT;\n  var key = text + ':' + font;\n\n  if (textWidthCache[key]) {\n    return textWidthCache[key];\n  }\n\n  var textLines = (text + '').split('\\n');\n  var width = 0;\n\n  for (var i = 0, l = textLines.length; i < l; i++) {\n    // textContain.measureText may be overrided in SVG or VML\n    width = Math.max(measureText(textLines[i], font).width, width);\n  }\n\n  if (textWidthCacheCounter > TEXT_CACHE_MAX) {\n    textWidthCacheCounter = 0;\n    textWidthCache = {};\n  }\n\n  textWidthCacheCounter++;\n  textWidthCache[key] = width;\n  return width;\n}\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @param {string} [textAlign='left']\n * @param {string} [textVerticalAlign='top']\n * @param {Array.<number>} [textPadding]\n * @param {Object} [rich]\n * @param {Object} [truncate]\n * @return {Object} {x, y, width, height, lineHeight}\n */\n\n\nfunction getBoundingRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) {\n  return rich ? getRichTextRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) : getPlainTextRect(text, font, textAlign, textVerticalAlign, textPadding, truncate);\n}\n\nfunction getPlainTextRect(text, font, textAlign, textVerticalAlign, textPadding, truncate) {\n  var contentBlock = parsePlainText(text, font, textPadding, truncate);\n  var outerWidth = getWidth(text, font);\n\n  if (textPadding) {\n    outerWidth += textPadding[1] + textPadding[3];\n  }\n\n  var outerHeight = contentBlock.outerHeight;\n  var x = adjustTextX(0, outerWidth, textAlign);\n  var y = adjustTextY(0, outerHeight, textVerticalAlign);\n  var rect = new BoundingRect(x, y, outerWidth, outerHeight);\n  rect.lineHeight = contentBlock.lineHeight;\n  return rect;\n}\n\nfunction getRichTextRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) {\n  var contentBlock = parseRichText(text, {\n    rich: rich,\n    truncate: truncate,\n    font: font,\n    textAlign: textAlign,\n    textPadding: textPadding\n  });\n  var outerWidth = contentBlock.outerWidth;\n  var outerHeight = contentBlock.outerHeight;\n  var x = adjustTextX(0, outerWidth, textAlign);\n  var y = adjustTextY(0, outerHeight, textVerticalAlign);\n  return new BoundingRect(x, y, outerWidth, outerHeight);\n}\n/**\n * @public\n * @param {number} x\n * @param {number} width\n * @param {string} [textAlign='left']\n * @return {number} Adjusted x.\n */\n\n\nfunction adjustTextX(x, width, textAlign) {\n  // FIXME Right to left language\n  if (textAlign === 'right') {\n    x -= width;\n  } else if (textAlign === 'center') {\n    x -= width / 2;\n  }\n\n  return x;\n}\n/**\n * @public\n * @param {number} y\n * @param {number} height\n * @param {string} [textVerticalAlign='top']\n * @return {number} Adjusted y.\n */\n\n\nfunction adjustTextY(y, height, textVerticalAlign) {\n  if (textVerticalAlign === 'middle') {\n    y -= height / 2;\n  } else if (textVerticalAlign === 'bottom') {\n    y -= height;\n  }\n\n  return y;\n}\n/**\n * @public\n * @param {stirng} textPosition\n * @param {Object} rect {x, y, width, height}\n * @param {number} distance\n * @return {Object} {x, y, textAlign, textVerticalAlign}\n */\n\n\nfunction adjustTextPositionOnRect(textPosition, rect, distance) {\n  var x = rect.x;\n  var y = rect.y;\n  var height = rect.height;\n  var width = rect.width;\n  var halfHeight = height / 2;\n  var textAlign = 'left';\n  var textVerticalAlign = 'top';\n\n  switch (textPosition) {\n    case 'left':\n      x -= distance;\n      y += halfHeight;\n      textAlign = 'right';\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'right':\n      x += distance + width;\n      y += halfHeight;\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'top':\n      x += width / 2;\n      y -= distance;\n      textAlign = 'center';\n      textVerticalAlign = 'bottom';\n      break;\n\n    case 'bottom':\n      x += width / 2;\n      y += height + distance;\n      textAlign = 'center';\n      break;\n\n    case 'inside':\n      x += width / 2;\n      y += halfHeight;\n      textAlign = 'center';\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'insideLeft':\n      x += distance;\n      y += halfHeight;\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'insideRight':\n      x += width - distance;\n      y += halfHeight;\n      textAlign = 'right';\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'insideTop':\n      x += width / 2;\n      y += distance;\n      textAlign = 'center';\n      break;\n\n    case 'insideBottom':\n      x += width / 2;\n      y += height - distance;\n      textAlign = 'center';\n      textVerticalAlign = 'bottom';\n      break;\n\n    case 'insideTopLeft':\n      x += distance;\n      y += distance;\n      break;\n\n    case 'insideTopRight':\n      x += width - distance;\n      y += distance;\n      textAlign = 'right';\n      break;\n\n    case 'insideBottomLeft':\n      x += distance;\n      y += height - distance;\n      textVerticalAlign = 'bottom';\n      break;\n\n    case 'insideBottomRight':\n      x += width - distance;\n      y += height - distance;\n      textAlign = 'right';\n      textVerticalAlign = 'bottom';\n      break;\n  }\n\n  return {\n    x: x,\n    y: y,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n}\n/**\n * Show ellipsis if overflow.\n *\n * @public\n * @param  {string} text\n * @param  {string} containerWidth\n * @param  {string} font\n * @param  {number} [ellipsis='...']\n * @param  {Object} [options]\n * @param  {number} [options.maxIterations=3]\n * @param  {number} [options.minChar=0] If truncate result are less\n *                  then minChar, ellipsis will not show, which is\n *                  better for user hint in some cases.\n * @param  {number} [options.placeholder=''] When all truncated, use the placeholder.\n * @return {string}\n */\n\n\nfunction truncateText(text, containerWidth, font, ellipsis, options) {\n  if (!containerWidth) {\n    return '';\n  }\n\n  var textLines = (text + '').split('\\n');\n  options = prepareTruncateOptions(containerWidth, font, ellipsis, options); // FIXME\n  // It is not appropriate that every line has '...' when truncate multiple lines.\n\n  for (var i = 0, len = textLines.length; i < len; i++) {\n    textLines[i] = truncateSingleLine(textLines[i], options);\n  }\n\n  return textLines.join('\\n');\n}\n\nfunction prepareTruncateOptions(containerWidth, font, ellipsis, options) {\n  options = extend({}, options);\n  options.font = font;\n  var ellipsis = retrieve2(ellipsis, '...');\n  options.maxIterations = retrieve2(options.maxIterations, 2);\n  var minChar = options.minChar = retrieve2(options.minChar, 0); // FIXME\n  // Other languages?\n\n  options.cnCharWidth = getWidth('国', font); // FIXME\n  // Consider proportional font?\n\n  var ascCharWidth = options.ascCharWidth = getWidth('a', font);\n  options.placeholder = retrieve2(options.placeholder, ''); // Example 1: minChar: 3, text: 'asdfzxcv', truncate result: 'asdf', but not: 'a...'.\n  // Example 2: minChar: 3, text: '维度', truncate result: '维', but not: '...'.\n\n  var contentWidth = containerWidth = Math.max(0, containerWidth - 1); // Reserve some gap.\n\n  for (var i = 0; i < minChar && contentWidth >= ascCharWidth; i++) {\n    contentWidth -= ascCharWidth;\n  }\n\n  var ellipsisWidth = getWidth(ellipsis);\n\n  if (ellipsisWidth > contentWidth) {\n    ellipsis = '';\n    ellipsisWidth = 0;\n  }\n\n  contentWidth = containerWidth - ellipsisWidth;\n  options.ellipsis = ellipsis;\n  options.ellipsisWidth = ellipsisWidth;\n  options.contentWidth = contentWidth;\n  options.containerWidth = containerWidth;\n  return options;\n}\n\nfunction truncateSingleLine(textLine, options) {\n  var containerWidth = options.containerWidth;\n  var font = options.font;\n  var contentWidth = options.contentWidth;\n\n  if (!containerWidth) {\n    return '';\n  }\n\n  var lineWidth = getWidth(textLine, font);\n\n  if (lineWidth <= containerWidth) {\n    return textLine;\n  }\n\n  for (var j = 0;; j++) {\n    if (lineWidth <= contentWidth || j >= options.maxIterations) {\n      textLine += options.ellipsis;\n      break;\n    }\n\n    var subLength = j === 0 ? estimateLength(textLine, contentWidth, options.ascCharWidth, options.cnCharWidth) : lineWidth > 0 ? Math.floor(textLine.length * contentWidth / lineWidth) : 0;\n    textLine = textLine.substr(0, subLength);\n    lineWidth = getWidth(textLine, font);\n  }\n\n  if (textLine === '') {\n    textLine = options.placeholder;\n  }\n\n  return textLine;\n}\n\nfunction estimateLength(text, contentWidth, ascCharWidth, cnCharWidth) {\n  var width = 0;\n  var i = 0;\n\n  for (var len = text.length; i < len && width < contentWidth; i++) {\n    var charCode = text.charCodeAt(i);\n    width += 0 <= charCode && charCode <= 127 ? ascCharWidth : cnCharWidth;\n  }\n\n  return i;\n}\n/**\n * @public\n * @param {string} font\n * @return {number} line height\n */\n\n\nfunction getLineHeight(font) {\n  // FIXME A rough approach.\n  return getWidth('国', font);\n}\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @return {Object} width\n */\n\n\nfunction measureText(text, font) {\n  return methods.measureText(text, font);\n} // Avoid assign to an exported variable, for transforming to cjs.\n\n\nmethods.measureText = function (text, font) {\n  var ctx = getContext();\n  ctx.font = font || DEFAULT_FONT;\n  return ctx.measureText(text);\n};\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @param {Object} [truncate]\n * @return {Object} block: {lineHeight, lines, height, outerHeight}\n *  Notice: for performance, do not calculate outerWidth util needed.\n */\n\n\nfunction parsePlainText(text, font, padding, truncate) {\n  text != null && (text += '');\n  var lineHeight = getLineHeight(font);\n  var lines = text ? text.split('\\n') : [];\n  var height = lines.length * lineHeight;\n  var outerHeight = height;\n\n  if (padding) {\n    outerHeight += padding[0] + padding[2];\n  }\n\n  if (text && truncate) {\n    var truncOuterHeight = truncate.outerHeight;\n    var truncOuterWidth = truncate.outerWidth;\n\n    if (truncOuterHeight != null && outerHeight > truncOuterHeight) {\n      text = '';\n      lines = [];\n    } else if (truncOuterWidth != null) {\n      var options = prepareTruncateOptions(truncOuterWidth - (padding ? padding[1] + padding[3] : 0), font, truncate.ellipsis, {\n        minChar: truncate.minChar,\n        placeholder: truncate.placeholder\n      }); // FIXME\n      // It is not appropriate that every line has '...' when truncate multiple lines.\n\n      for (var i = 0, len = lines.length; i < len; i++) {\n        lines[i] = truncateSingleLine(lines[i], options);\n      }\n    }\n  }\n\n  return {\n    lines: lines,\n    height: height,\n    outerHeight: outerHeight,\n    lineHeight: lineHeight\n  };\n}\n/**\n * For example: 'some text {a|some text}other text{b|some text}xxx{c|}xxx'\n * Also consider 'bbbb{a|xxx\\nzzz}xxxx\\naaaa'.\n *\n * @public\n * @param {string} text\n * @param {Object} style\n * @return {Object} block\n * {\n *      width,\n *      height,\n *      lines: [{\n *          lineHeight,\n *          width,\n *          tokens: [[{\n *              styleName,\n *              text,\n *              width,      // include textPadding\n *              height,     // include textPadding\n *              textWidth, // pure text width\n *              textHeight, // pure text height\n *              lineHeihgt,\n *              font,\n *              textAlign,\n *              textVerticalAlign\n *          }], [...], ...]\n *      }, ...]\n * }\n * If styleName is undefined, it is plain text.\n */\n\n\nfunction parseRichText(text, style) {\n  var contentBlock = {\n    lines: [],\n    width: 0,\n    height: 0\n  };\n  text != null && (text += '');\n\n  if (!text) {\n    return contentBlock;\n  }\n\n  var lastIndex = STYLE_REG.lastIndex = 0;\n  var result;\n\n  while ((result = STYLE_REG.exec(text)) != null) {\n    var matchedIndex = result.index;\n\n    if (matchedIndex > lastIndex) {\n      pushTokens(contentBlock, text.substring(lastIndex, matchedIndex));\n    }\n\n    pushTokens(contentBlock, result[2], result[1]);\n    lastIndex = STYLE_REG.lastIndex;\n  }\n\n  if (lastIndex < text.length) {\n    pushTokens(contentBlock, text.substring(lastIndex, text.length));\n  }\n\n  var lines = contentBlock.lines;\n  var contentHeight = 0;\n  var contentWidth = 0; // For `textWidth: 100%`\n\n  var pendingList = [];\n  var stlPadding = style.textPadding;\n  var truncate = style.truncate;\n  var truncateWidth = truncate && truncate.outerWidth;\n  var truncateHeight = truncate && truncate.outerHeight;\n\n  if (stlPadding) {\n    truncateWidth != null && (truncateWidth -= stlPadding[1] + stlPadding[3]);\n    truncateHeight != null && (truncateHeight -= stlPadding[0] + stlPadding[2]);\n  } // Calculate layout info of tokens.\n\n\n  for (var i = 0; i < lines.length; i++) {\n    var line = lines[i];\n    var lineHeight = 0;\n    var lineWidth = 0;\n\n    for (var j = 0; j < line.tokens.length; j++) {\n      var token = line.tokens[j];\n      var tokenStyle = token.styleName && style.rich[token.styleName] || {}; // textPadding should not inherit from style.\n\n      var textPadding = token.textPadding = tokenStyle.textPadding; // textFont has been asigned to font by `normalizeStyle`.\n\n      var font = token.font = tokenStyle.font || style.font; // textHeight can be used when textVerticalAlign is specified in token.\n\n      var tokenHeight = token.textHeight = retrieve2( // textHeight should not be inherited, consider it can be specified\n      // as box height of the block.\n      tokenStyle.textHeight, getLineHeight(font));\n      textPadding && (tokenHeight += textPadding[0] + textPadding[2]);\n      token.height = tokenHeight;\n      token.lineHeight = retrieve3(tokenStyle.textLineHeight, style.textLineHeight, tokenHeight);\n      token.textAlign = tokenStyle && tokenStyle.textAlign || style.textAlign;\n      token.textVerticalAlign = tokenStyle && tokenStyle.textVerticalAlign || 'middle';\n\n      if (truncateHeight != null && contentHeight + token.lineHeight > truncateHeight) {\n        return {\n          lines: [],\n          width: 0,\n          height: 0\n        };\n      }\n\n      token.textWidth = getWidth(token.text, font);\n      var tokenWidth = tokenStyle.textWidth;\n      var tokenWidthNotSpecified = tokenWidth == null || tokenWidth === 'auto'; // Percent width, can be `100%`, can be used in drawing separate\n      // line when box width is needed to be auto.\n\n      if (typeof tokenWidth === 'string' && tokenWidth.charAt(tokenWidth.length - 1) === '%') {\n        token.percentWidth = tokenWidth;\n        pendingList.push(token);\n        tokenWidth = 0; // Do not truncate in this case, because there is no user case\n        // and it is too complicated.\n      } else {\n        if (tokenWidthNotSpecified) {\n          tokenWidth = token.textWidth; // FIXME: If image is not loaded and textWidth is not specified, calling\n          // `getBoundingRect()` will not get correct result.\n\n          var textBackgroundColor = tokenStyle.textBackgroundColor;\n          var bgImg = textBackgroundColor && textBackgroundColor.image; // Use cases:\n          // (1) If image is not loaded, it will be loaded at render phase and call\n          // `dirty()` and `textBackgroundColor.image` will be replaced with the loaded\n          // image, and then the right size will be calculated here at the next tick.\n          // See `graphic/helper/text.js`.\n          // (2) If image loaded, and `textBackgroundColor.image` is image src string,\n          // use `imageHelper.findExistImage` to find cached image.\n          // `imageHelper.findExistImage` will always be called here before\n          // `imageHelper.createOrUpdateImage` in `graphic/helper/text.js#renderRichText`\n          // which ensures that image will not be rendered before correct size calcualted.\n\n          if (bgImg) {\n            bgImg = imageHelper.findExistImage(bgImg);\n\n            if (imageHelper.isImageReady(bgImg)) {\n              tokenWidth = Math.max(tokenWidth, bgImg.width * tokenHeight / bgImg.height);\n            }\n          }\n        }\n\n        var paddingW = textPadding ? textPadding[1] + textPadding[3] : 0;\n        tokenWidth += paddingW;\n        var remianTruncWidth = truncateWidth != null ? truncateWidth - lineWidth : null;\n\n        if (remianTruncWidth != null && remianTruncWidth < tokenWidth) {\n          if (!tokenWidthNotSpecified || remianTruncWidth < paddingW) {\n            token.text = '';\n            token.textWidth = tokenWidth = 0;\n          } else {\n            token.text = truncateText(token.text, remianTruncWidth - paddingW, font, truncate.ellipsis, {\n              minChar: truncate.minChar\n            });\n            token.textWidth = getWidth(token.text, font);\n            tokenWidth = token.textWidth + paddingW;\n          }\n        }\n      }\n\n      lineWidth += token.width = tokenWidth;\n      tokenStyle && (lineHeight = Math.max(lineHeight, token.lineHeight));\n    }\n\n    line.width = lineWidth;\n    line.lineHeight = lineHeight;\n    contentHeight += lineHeight;\n    contentWidth = Math.max(contentWidth, lineWidth);\n  }\n\n  contentBlock.outerWidth = contentBlock.width = retrieve2(style.textWidth, contentWidth);\n  contentBlock.outerHeight = contentBlock.height = retrieve2(style.textHeight, contentHeight);\n\n  if (stlPadding) {\n    contentBlock.outerWidth += stlPadding[1] + stlPadding[3];\n    contentBlock.outerHeight += stlPadding[0] + stlPadding[2];\n  }\n\n  for (var i = 0; i < pendingList.length; i++) {\n    var token = pendingList[i];\n    var percentWidth = token.percentWidth; // Should not base on outerWidth, because token can not be placed out of padding.\n\n    token.width = parseInt(percentWidth, 10) / 100 * contentWidth;\n  }\n\n  return contentBlock;\n}\n\nfunction pushTokens(block, str, styleName) {\n  var isEmptyStr = str === '';\n  var strs = str.split('\\n');\n  var lines = block.lines;\n\n  for (var i = 0; i < strs.length; i++) {\n    var text = strs[i];\n    var token = {\n      styleName: styleName,\n      text: text,\n      isLineHolder: !text && !isEmptyStr\n    }; // The first token should be appended to the last line.\n\n    if (!i) {\n      var tokens = (lines[lines.length - 1] || (lines[0] = {\n        tokens: []\n      })).tokens; // Consider cases:\n      // (1) ''.split('\\n') => ['', '\\n', ''], the '' at the first item\n      // (which is a placeholder) should be replaced by new token.\n      // (2) A image backage, where token likes {a|}.\n      // (3) A redundant '' will affect textAlign in line.\n      // (4) tokens with the same tplName should not be merged, because\n      // they should be displayed in different box (with border and padding).\n\n      var tokensLen = tokens.length;\n      tokensLen === 1 && tokens[0].isLineHolder ? tokens[0] = token : // Consider text is '', only insert when it is the \"lineHolder\" or\n      // \"emptyStr\". Otherwise a redundant '' will affect textAlign in line.\n      (text || !tokensLen || isEmptyStr) && tokens.push(token);\n    } // Other tokens always start a new line.\n    else {\n        // If there is '', insert it as a placeholder.\n        lines.push({\n          tokens: [token]\n        });\n      }\n  }\n}\n\nfunction makeFont(style) {\n  // FIXME in node-canvas fontWeight is before fontStyle\n  // Use `fontSize` `fontFamily` to check whether font properties are defined.\n  return (style.fontSize || style.fontFamily) && [style.fontStyle, style.fontWeight, (style.fontSize || 12) + 'px', // If font properties are defined, `fontFamily` should not be ignored.\n  style.fontFamily || 'sans-serif'].join(' ') || style.textFont || style.font;\n}\n\nexports.DEFAULT_FONT = DEFAULT_FONT;\nexports.$override = $override;\nexports.getWidth = getWidth;\nexports.getBoundingRect = getBoundingRect;\nexports.adjustTextX = adjustTextX;\nexports.adjustTextY = adjustTextY;\nexports.adjustTextPositionOnRect = adjustTextPositionOnRect;\nexports.truncateText = truncateText;\nexports.getLineHeight = getLineHeight;\nexports.measureText = measureText;\nexports.parsePlainText = parsePlainText;\nexports.parseRichText = parseRichText;\nexports.makeFont = makeFont;\n\n/***/ }),\n\n/***/ 1524:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _vector = __webpack_require__(1485);\n\nvar v2Create = _vector.create;\nvar v2DistSquare = _vector.distSquare;\n\n/**\n * 曲线辅助模块\n * @module zrender/core/curve\n * @author pissang(https://www.github.com/pissang)\n */\nvar mathPow = Math.pow;\nvar mathSqrt = Math.sqrt;\nvar EPSILON = 1e-8;\nvar EPSILON_NUMERIC = 1e-4;\nvar THREE_SQRT = mathSqrt(3);\nvar ONE_THIRD = 1 / 3; // 临时变量\n\nvar _v0 = v2Create();\n\nvar _v1 = v2Create();\n\nvar _v2 = v2Create();\n\nfunction isAroundZero(val) {\n  return val > -EPSILON && val < EPSILON;\n}\n\nfunction isNotAroundZero(val) {\n  return val > EPSILON || val < -EPSILON;\n}\n/**\n * 计算三次贝塞尔值\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction cubicAt(p0, p1, p2, p3, t) {\n  var onet = 1 - t;\n  return onet * onet * (onet * p0 + 3 * t * p1) + t * t * (t * p3 + 3 * onet * p2);\n}\n/**\n * 计算三次贝塞尔导数值\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction cubicDerivativeAt(p0, p1, p2, p3, t) {\n  var onet = 1 - t;\n  return 3 * (((p1 - p0) * onet + 2 * (p2 - p1) * t) * onet + (p3 - p2) * t * t);\n}\n/**\n * 计算三次贝塞尔方程根，使用盛金公式\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} val\n * @param  {Array.<number>} roots\n * @return {number} 有效根数目\n */\n\n\nfunction cubicRootAt(p0, p1, p2, p3, val, roots) {\n  // Evaluate roots of cubic functions\n  var a = p3 + 3 * (p1 - p2) - p0;\n  var b = 3 * (p2 - p1 * 2 + p0);\n  var c = 3 * (p1 - p0);\n  var d = p0 - val;\n  var A = b * b - 3 * a * c;\n  var B = b * c - 9 * a * d;\n  var C = c * c - 3 * b * d;\n  var n = 0;\n\n  if (isAroundZero(A) && isAroundZero(B)) {\n    if (isAroundZero(b)) {\n      roots[0] = 0;\n    } else {\n      var t1 = -c / b; //t1, t2, t3, b is not zero\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    }\n  } else {\n    var disc = B * B - 4 * A * C;\n\n    if (isAroundZero(disc)) {\n      var K = B / A;\n      var t1 = -b / a + K; // t1, a is not zero\n\n      var t2 = -K / 2; // t2, t3\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        roots[n++] = t2;\n      }\n    } else if (disc > 0) {\n      var discSqrt = mathSqrt(disc);\n      var Y1 = A * b + 1.5 * a * (-B + discSqrt);\n      var Y2 = A * b + 1.5 * a * (-B - discSqrt);\n\n      if (Y1 < 0) {\n        Y1 = -mathPow(-Y1, ONE_THIRD);\n      } else {\n        Y1 = mathPow(Y1, ONE_THIRD);\n      }\n\n      if (Y2 < 0) {\n        Y2 = -mathPow(-Y2, ONE_THIRD);\n      } else {\n        Y2 = mathPow(Y2, ONE_THIRD);\n      }\n\n      var t1 = (-b - (Y1 + Y2)) / (3 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    } else {\n      var T = (2 * A * b - 3 * a * B) / (2 * mathSqrt(A * A * A));\n      var theta = Math.acos(T) / 3;\n      var ASqrt = mathSqrt(A);\n      var tmp = Math.cos(theta);\n      var t1 = (-b - 2 * ASqrt * tmp) / (3 * a);\n      var t2 = (-b + ASqrt * (tmp + THREE_SQRT * Math.sin(theta))) / (3 * a);\n      var t3 = (-b + ASqrt * (tmp - THREE_SQRT * Math.sin(theta))) / (3 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        roots[n++] = t2;\n      }\n\n      if (t3 >= 0 && t3 <= 1) {\n        roots[n++] = t3;\n      }\n    }\n  }\n\n  return n;\n}\n/**\n * 计算三次贝塞尔方程极限值的位置\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {Array.<number>} extrema\n * @return {number} 有效数目\n */\n\n\nfunction cubicExtrema(p0, p1, p2, p3, extrema) {\n  var b = 6 * p2 - 12 * p1 + 6 * p0;\n  var a = 9 * p1 + 3 * p3 - 3 * p0 - 9 * p2;\n  var c = 3 * p1 - 3 * p0;\n  var n = 0;\n\n  if (isAroundZero(a)) {\n    if (isNotAroundZero(b)) {\n      var t1 = -c / b;\n\n      if (t1 >= 0 && t1 <= 1) {\n        extrema[n++] = t1;\n      }\n    }\n  } else {\n    var disc = b * b - 4 * a * c;\n\n    if (isAroundZero(disc)) {\n      extrema[0] = -b / (2 * a);\n    } else if (disc > 0) {\n      var discSqrt = mathSqrt(disc);\n      var t1 = (-b + discSqrt) / (2 * a);\n      var t2 = (-b - discSqrt) / (2 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        extrema[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        extrema[n++] = t2;\n      }\n    }\n  }\n\n  return n;\n}\n/**\n * 细分三次贝塞尔曲线\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @param  {Array.<number>} out\n */\n\n\nfunction cubicSubdivide(p0, p1, p2, p3, t, out) {\n  var p01 = (p1 - p0) * t + p0;\n  var p12 = (p2 - p1) * t + p1;\n  var p23 = (p3 - p2) * t + p2;\n  var p012 = (p12 - p01) * t + p01;\n  var p123 = (p23 - p12) * t + p12;\n  var p0123 = (p123 - p012) * t + p012; // Seg0\n\n  out[0] = p0;\n  out[1] = p01;\n  out[2] = p012;\n  out[3] = p0123; // Seg1\n\n  out[4] = p0123;\n  out[5] = p123;\n  out[6] = p23;\n  out[7] = p3;\n}\n/**\n * 投射点到三次贝塞尔曲线上，返回投射距离。\n * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {number} x3\n * @param {number} y3\n * @param {number} x\n * @param {number} y\n * @param {Array.<number>} [out] 投射点\n * @return {number}\n */\n\n\nfunction cubicProjectPoint(x0, y0, x1, y1, x2, y2, x3, y3, x, y, out) {\n  // http://pomax.github.io/bezierinfo/#projections\n  var t;\n  var interval = 0.005;\n  var d = Infinity;\n  var prev;\n  var next;\n  var d1;\n  var d2;\n  _v0[0] = x;\n  _v0[1] = y; // 先粗略估计一下可能的最小距离的 t 值\n  // PENDING\n\n  for (var _t = 0; _t < 1; _t += 0.05) {\n    _v1[0] = cubicAt(x0, x1, x2, x3, _t);\n    _v1[1] = cubicAt(y0, y1, y2, y3, _t);\n    d1 = v2DistSquare(_v0, _v1);\n\n    if (d1 < d) {\n      t = _t;\n      d = d1;\n    }\n  }\n\n  d = Infinity; // At most 32 iteration\n\n  for (var i = 0; i < 32; i++) {\n    if (interval < EPSILON_NUMERIC) {\n      break;\n    }\n\n    prev = t - interval;\n    next = t + interval; // t - interval\n\n    _v1[0] = cubicAt(x0, x1, x2, x3, prev);\n    _v1[1] = cubicAt(y0, y1, y2, y3, prev);\n    d1 = v2DistSquare(_v1, _v0);\n\n    if (prev >= 0 && d1 < d) {\n      t = prev;\n      d = d1;\n    } else {\n      // t + interval\n      _v2[0] = cubicAt(x0, x1, x2, x3, next);\n      _v2[1] = cubicAt(y0, y1, y2, y3, next);\n      d2 = v2DistSquare(_v2, _v0);\n\n      if (next <= 1 && d2 < d) {\n        t = next;\n        d = d2;\n      } else {\n        interval *= 0.5;\n      }\n    }\n  } // t\n\n\n  if (out) {\n    out[0] = cubicAt(x0, x1, x2, x3, t);\n    out[1] = cubicAt(y0, y1, y2, y3, t);\n  } // console.log(interval, i);\n\n\n  return mathSqrt(d);\n}\n/**\n * 计算二次方贝塞尔值\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction quadraticAt(p0, p1, p2, t) {\n  var onet = 1 - t;\n  return onet * (onet * p0 + 2 * t * p1) + t * t * p2;\n}\n/**\n * 计算二次方贝塞尔导数值\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction quadraticDerivativeAt(p0, p1, p2, t) {\n  return 2 * ((1 - t) * (p1 - p0) + t * (p2 - p1));\n}\n/**\n * 计算二次方贝塞尔方程根\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @param  {Array.<number>} roots\n * @return {number} 有效根数目\n */\n\n\nfunction quadraticRootAt(p0, p1, p2, val, roots) {\n  var a = p0 - 2 * p1 + p2;\n  var b = 2 * (p1 - p0);\n  var c = p0 - val;\n  var n = 0;\n\n  if (isAroundZero(a)) {\n    if (isNotAroundZero(b)) {\n      var t1 = -c / b;\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    }\n  } else {\n    var disc = b * b - 4 * a * c;\n\n    if (isAroundZero(disc)) {\n      var t1 = -b / (2 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    } else if (disc > 0) {\n      var discSqrt = mathSqrt(disc);\n      var t1 = (-b + discSqrt) / (2 * a);\n      var t2 = (-b - discSqrt) / (2 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        roots[n++] = t2;\n      }\n    }\n  }\n\n  return n;\n}\n/**\n * 计算二次贝塞尔方程极限值\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @return {number}\n */\n\n\nfunction quadraticExtremum(p0, p1, p2) {\n  var divider = p0 + p2 - 2 * p1;\n\n  if (divider === 0) {\n    // p1 is center of p0 and p2\n    return 0.5;\n  } else {\n    return (p0 - p1) / divider;\n  }\n}\n/**\n * 细分二次贝塞尔曲线\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @param  {Array.<number>} out\n */\n\n\nfunction quadraticSubdivide(p0, p1, p2, t, out) {\n  var p01 = (p1 - p0) * t + p0;\n  var p12 = (p2 - p1) * t + p1;\n  var p012 = (p12 - p01) * t + p01; // Seg0\n\n  out[0] = p0;\n  out[1] = p01;\n  out[2] = p012; // Seg1\n\n  out[3] = p012;\n  out[4] = p12;\n  out[5] = p2;\n}\n/**\n * 投射点到二次贝塞尔曲线上，返回投射距离。\n * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {number} x\n * @param {number} y\n * @param {Array.<number>} out 投射点\n * @return {number}\n */\n\n\nfunction quadraticProjectPoint(x0, y0, x1, y1, x2, y2, x, y, out) {\n  // http://pomax.github.io/bezierinfo/#projections\n  var t;\n  var interval = 0.005;\n  var d = Infinity;\n  _v0[0] = x;\n  _v0[1] = y; // 先粗略估计一下可能的最小距离的 t 值\n  // PENDING\n\n  for (var _t = 0; _t < 1; _t += 0.05) {\n    _v1[0] = quadraticAt(x0, x1, x2, _t);\n    _v1[1] = quadraticAt(y0, y1, y2, _t);\n    var d1 = v2DistSquare(_v0, _v1);\n\n    if (d1 < d) {\n      t = _t;\n      d = d1;\n    }\n  }\n\n  d = Infinity; // At most 32 iteration\n\n  for (var i = 0; i < 32; i++) {\n    if (interval < EPSILON_NUMERIC) {\n      break;\n    }\n\n    var prev = t - interval;\n    var next = t + interval; // t - interval\n\n    _v1[0] = quadraticAt(x0, x1, x2, prev);\n    _v1[1] = quadraticAt(y0, y1, y2, prev);\n    var d1 = v2DistSquare(_v1, _v0);\n\n    if (prev >= 0 && d1 < d) {\n      t = prev;\n      d = d1;\n    } else {\n      // t + interval\n      _v2[0] = quadraticAt(x0, x1, x2, next);\n      _v2[1] = quadraticAt(y0, y1, y2, next);\n      var d2 = v2DistSquare(_v2, _v0);\n\n      if (next <= 1 && d2 < d) {\n        t = next;\n        d = d2;\n      } else {\n        interval *= 0.5;\n      }\n    }\n  } // t\n\n\n  if (out) {\n    out[0] = quadraticAt(x0, x1, x2, t);\n    out[1] = quadraticAt(y0, y1, y2, t);\n  } // console.log(interval, i);\n\n\n  return mathSqrt(d);\n}\n\nexports.cubicAt = cubicAt;\nexports.cubicDerivativeAt = cubicDerivativeAt;\nexports.cubicRootAt = cubicRootAt;\nexports.cubicExtrema = cubicExtrema;\nexports.cubicSubdivide = cubicSubdivide;\nexports.cubicProjectPoint = cubicProjectPoint;\nexports.quadraticAt = quadraticAt;\nexports.quadraticDerivativeAt = quadraticDerivativeAt;\nexports.quadraticRootAt = quadraticRootAt;\nexports.quadraticExtremum = quadraticExtremum;\nexports.quadraticSubdivide = quadraticSubdivide;\nexports.quadraticProjectPoint = quadraticProjectPoint;\n\n/***/ }),\n\n/***/ 1525:\n/***/ (function(module, exports) {\n\n/**\n * 3x2矩阵操作类\n * @exports zrender/tool/matrix\n */\nvar ArrayCtor = typeof Float32Array === 'undefined' ? Array : Float32Array;\n/**\n * 创建一个单位矩阵\n * @return {Float32Array|Array.<number>}\n */\n\nfunction create() {\n  var out = new ArrayCtor(6);\n  identity(out);\n  return out;\n}\n/**\n * 设置矩阵为单位矩阵\n * @param {Float32Array|Array.<number>} out\n */\n\n\nfunction identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n/**\n * 复制矩阵\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} m\n */\n\n\nfunction copy(out, m) {\n  out[0] = m[0];\n  out[1] = m[1];\n  out[2] = m[2];\n  out[3] = m[3];\n  out[4] = m[4];\n  out[5] = m[5];\n  return out;\n}\n/**\n * 矩阵相乘\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} m1\n * @param {Float32Array|Array.<number>} m2\n */\n\n\nfunction mul(out, m1, m2) {\n  // Consider matrix.mul(m, m2, m);\n  // where out is the same as m2.\n  // So use temp variable to escape error.\n  var out0 = m1[0] * m2[0] + m1[2] * m2[1];\n  var out1 = m1[1] * m2[0] + m1[3] * m2[1];\n  var out2 = m1[0] * m2[2] + m1[2] * m2[3];\n  var out3 = m1[1] * m2[2] + m1[3] * m2[3];\n  var out4 = m1[0] * m2[4] + m1[2] * m2[5] + m1[4];\n  var out5 = m1[1] * m2[4] + m1[3] * m2[5] + m1[5];\n  out[0] = out0;\n  out[1] = out1;\n  out[2] = out2;\n  out[3] = out3;\n  out[4] = out4;\n  out[5] = out5;\n  return out;\n}\n/**\n * 平移变换\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n * @param {Float32Array|Array.<number>} v\n */\n\n\nfunction translate(out, a, v) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4] + v[0];\n  out[5] = a[5] + v[1];\n  return out;\n}\n/**\n * 旋转变换\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n * @param {number} rad\n */\n\n\nfunction rotate(out, a, rad) {\n  var aa = a[0];\n  var ac = a[2];\n  var atx = a[4];\n  var ab = a[1];\n  var ad = a[3];\n  var aty = a[5];\n  var st = Math.sin(rad);\n  var ct = Math.cos(rad);\n  out[0] = aa * ct + ab * st;\n  out[1] = -aa * st + ab * ct;\n  out[2] = ac * ct + ad * st;\n  out[3] = -ac * st + ct * ad;\n  out[4] = ct * atx + st * aty;\n  out[5] = ct * aty - st * atx;\n  return out;\n}\n/**\n * 缩放变换\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n * @param {Float32Array|Array.<number>} v\n */\n\n\nfunction scale(out, a, v) {\n  var vx = v[0];\n  var vy = v[1];\n  out[0] = a[0] * vx;\n  out[1] = a[1] * vy;\n  out[2] = a[2] * vx;\n  out[3] = a[3] * vy;\n  out[4] = a[4] * vx;\n  out[5] = a[5] * vy;\n  return out;\n}\n/**\n * 求逆矩阵\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n */\n\n\nfunction invert(out, a) {\n  var aa = a[0];\n  var ac = a[2];\n  var atx = a[4];\n  var ab = a[1];\n  var ad = a[3];\n  var aty = a[5];\n  var det = aa * ad - ab * ac;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = ad * det;\n  out[1] = -ab * det;\n  out[2] = -ac * det;\n  out[3] = aa * det;\n  out[4] = (ac * aty - ad * atx) * det;\n  out[5] = (ab * atx - aa * aty) * det;\n  return out;\n}\n\nexports.create = create;\nexports.identity = identity;\nexports.copy = copy;\nexports.mul = mul;\nexports.translate = translate;\nexports.rotate = rotate;\nexports.scale = scale;\nexports.invert = invert;\n\n/***/ }),\n\n/***/ 1531:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Eventful = __webpack_require__(1532);\n\nexports.Dispatcher = Eventful;\n\nvar env = __webpack_require__(1495);\n\n/**\n * 事件辅助类\n * @module zrender/core/event\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n */\nvar isDomLevel2 = typeof window !== 'undefined' && !!window.addEventListener;\nvar MOUSE_EVENT_REG = /^(?:mouse|pointer|contextmenu|drag|drop)|click/;\n\nfunction getBoundingClientRect(el) {\n  // BlackBerry 5, iOS 3 (original iPhone) don't have getBoundingRect\n  return el.getBoundingClientRect ? el.getBoundingClientRect() : {\n    left: 0,\n    top: 0\n  };\n} // `calculate` is optional, default false\n\n\nfunction clientToLocal(el, e, out, calculate) {\n  out = out || {}; // According to the W3C Working Draft, offsetX and offsetY should be relative\n  // to the padding edge of the target element. The only browser using this convention\n  // is IE. Webkit uses the border edge, Opera uses the content edge, and FireFox does\n  // not support the properties.\n  // (see http://www.jacklmoore.com/notes/mouse-position/)\n  // In zr painter.dom, padding edge equals to border edge.\n  // FIXME\n  // When mousemove event triggered on ec tooltip, target is not zr painter.dom, and\n  // offsetX/Y is relative to e.target, where the calculation of zrX/Y via offsetX/Y\n  // is too complex. So css-transfrom dont support in this case temporarily.\n\n  if (calculate || !env.canvasSupported) {\n    defaultGetZrXY(el, e, out);\n  } // Caution: In FireFox, layerX/layerY Mouse position relative to the closest positioned\n  // ancestor element, so we should make sure el is positioned (e.g., not position:static).\n  // BTW1, Webkit don't return the same results as FF in non-simple cases (like add\n  // zoom-factor, overflow / opacity layers, transforms ...)\n  // BTW2, (ev.offsetY || ev.pageY - $(ev.target).offset().top) is not correct in preserve-3d.\n  // <https://bugs.jquery.com/ticket/8523#comment:14>\n  // BTW3, In ff, offsetX/offsetY is always 0.\n  else if (env.browser.firefox && e.layerX != null && e.layerX !== e.offsetX) {\n      out.zrX = e.layerX;\n      out.zrY = e.layerY;\n    } // For IE6+, chrome, safari, opera. (When will ff support offsetX?)\n    else if (e.offsetX != null) {\n        out.zrX = e.offsetX;\n        out.zrY = e.offsetY;\n      } // For some other device, e.g., IOS safari.\n      else {\n          defaultGetZrXY(el, e, out);\n        }\n\n  return out;\n}\n\nfunction defaultGetZrXY(el, e, out) {\n  // This well-known method below does not support css transform.\n  var box = getBoundingClientRect(el);\n  out.zrX = e.clientX - box.left;\n  out.zrY = e.clientY - box.top;\n}\n/**\n * 如果存在第三方嵌入的一些dom触发的事件，或touch事件，需要转换一下事件坐标.\n * `calculate` is optional, default false.\n */\n\n\nfunction normalizeEvent(el, e, calculate) {\n  e = e || window.event;\n\n  if (e.zrX != null) {\n    return e;\n  }\n\n  var eventType = e.type;\n  var isTouch = eventType && eventType.indexOf('touch') >= 0;\n\n  if (!isTouch) {\n    clientToLocal(el, e, e, calculate);\n    e.zrDelta = e.wheelDelta ? e.wheelDelta / 120 : -(e.detail || 0) / 3;\n  } else {\n    var touch = eventType != 'touchend' ? e.targetTouches[0] : e.changedTouches[0];\n    touch && clientToLocal(el, touch, e, calculate);\n  } // Add which for click: 1 === left; 2 === middle; 3 === right; otherwise: 0;\n  // See jQuery: https://github.com/jquery/jquery/blob/master/src/event.js\n  // If e.which has been defined, if may be readonly,\n  // see: https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/which\n\n\n  var button = e.button;\n\n  if (e.which == null && button !== undefined && MOUSE_EVENT_REG.test(e.type)) {\n    e.which = button & 1 ? 1 : button & 2 ? 3 : button & 4 ? 2 : 0;\n  }\n\n  return e;\n}\n\nfunction addEventListener(el, name, handler) {\n  if (isDomLevel2) {\n    el.addEventListener(name, handler);\n  } else {\n    el.attachEvent('on' + name, handler);\n  }\n}\n\nfunction removeEventListener(el, name, handler) {\n  if (isDomLevel2) {\n    el.removeEventListener(name, handler);\n  } else {\n    el.detachEvent('on' + name, handler);\n  }\n}\n/**\n * preventDefault and stopPropagation.\n * Notice: do not do that in zrender. Upper application\n * do that if necessary.\n *\n * @memberOf module:zrender/core/event\n * @method\n * @param {Event} e : event对象\n */\n\n\nvar stop = isDomLevel2 ? function (e) {\n  e.preventDefault();\n  e.stopPropagation();\n  e.cancelBubble = true;\n} : function (e) {\n  e.returnValue = false;\n  e.cancelBubble = true;\n};\n\nfunction notLeftMouse(e) {\n  // If e.which is undefined, considered as left mouse event.\n  return e.which > 1;\n} // 做向上兼容\n\n\nexports.clientToLocal = clientToLocal;\nexports.normalizeEvent = normalizeEvent;\nexports.addEventListener = addEventListener;\nexports.removeEventListener = removeEventListener;\nexports.stop = stop;\nexports.notLeftMouse = notLeftMouse;\n\n/***/ }),\n\n/***/ 1532:\n/***/ (function(module, exports) {\n\n/**\n * 事件扩展\n * @module zrender/mixin/Eventful\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\nvar arrySlice = Array.prototype.slice;\n/**\n * 事件分发器\n * @alias module:zrender/mixin/Eventful\n * @constructor\n */\n\nvar Eventful = function () {\n  this._$handlers = {};\n};\n\nEventful.prototype = {\n  constructor: Eventful,\n\n  /**\n   * 单次触发绑定，trigger后销毁\n   *\n   * @param {string} event 事件名\n   * @param {Function} handler 响应函数\n   * @param {Object} context\n   */\n  one: function (event, handler, context) {\n    var _h = this._$handlers;\n\n    if (!handler || !event) {\n      return this;\n    }\n\n    if (!_h[event]) {\n      _h[event] = [];\n    }\n\n    for (var i = 0; i < _h[event].length; i++) {\n      if (_h[event][i].h === handler) {\n        return this;\n      }\n    }\n\n    _h[event].push({\n      h: handler,\n      one: true,\n      ctx: context || this\n    });\n\n    return this;\n  },\n\n  /**\n   * 绑定事件\n   * @param {string} event 事件名\n   * @param {Function} handler 事件处理函数\n   * @param {Object} [context]\n   */\n  on: function (event, handler, context) {\n    var _h = this._$handlers;\n\n    if (!handler || !event) {\n      return this;\n    }\n\n    if (!_h[event]) {\n      _h[event] = [];\n    }\n\n    for (var i = 0; i < _h[event].length; i++) {\n      if (_h[event][i].h === handler) {\n        return this;\n      }\n    }\n\n    _h[event].push({\n      h: handler,\n      one: false,\n      ctx: context || this\n    });\n\n    return this;\n  },\n\n  /**\n   * 是否绑定了事件\n   * @param  {string}  event\n   * @return {boolean}\n   */\n  isSilent: function (event) {\n    var _h = this._$handlers;\n    return _h[event] && _h[event].length;\n  },\n\n  /**\n   * 解绑事件\n   * @param {string} event 事件名\n   * @param {Function} [handler] 事件处理函数\n   */\n  off: function (event, handler) {\n    var _h = this._$handlers;\n\n    if (!event) {\n      this._$handlers = {};\n      return this;\n    }\n\n    if (handler) {\n      if (_h[event]) {\n        var newList = [];\n\n        for (var i = 0, l = _h[event].length; i < l; i++) {\n          if (_h[event][i]['h'] != handler) {\n            newList.push(_h[event][i]);\n          }\n        }\n\n        _h[event] = newList;\n      }\n\n      if (_h[event] && _h[event].length === 0) {\n        delete _h[event];\n      }\n    } else {\n      delete _h[event];\n    }\n\n    return this;\n  },\n\n  /**\n   * 事件分发\n   *\n   * @param {string} type 事件类型\n   */\n  trigger: function (type) {\n    if (this._$handlers[type]) {\n      var args = arguments;\n      var argLen = args.length;\n\n      if (argLen > 3) {\n        args = arrySlice.call(args, 1);\n      }\n\n      var _h = this._$handlers[type];\n      var len = _h.length;\n\n      for (var i = 0; i < len;) {\n        // Optimize advise from backbone\n        switch (argLen) {\n          case 1:\n            _h[i]['h'].call(_h[i]['ctx']);\n\n            break;\n\n          case 2:\n            _h[i]['h'].call(_h[i]['ctx'], args[1]);\n\n            break;\n\n          case 3:\n            _h[i]['h'].call(_h[i]['ctx'], args[1], args[2]);\n\n            break;\n\n          default:\n            // have more than 2 given arguments\n            _h[i]['h'].apply(_h[i]['ctx'], args);\n\n            break;\n        }\n\n        if (_h[i]['one']) {\n          _h.splice(i, 1);\n\n          len--;\n        } else {\n          i++;\n        }\n      }\n    }\n\n    return this;\n  },\n\n  /**\n   * 带有context的事件分发, 最后一个参数是事件回调的context\n   * @param {string} type 事件类型\n   */\n  triggerWithContext: function (type) {\n    if (this._$handlers[type]) {\n      var args = arguments;\n      var argLen = args.length;\n\n      if (argLen > 4) {\n        args = arrySlice.call(args, 1, args.length - 1);\n      }\n\n      var ctx = args[args.length - 1];\n      var _h = this._$handlers[type];\n      var len = _h.length;\n\n      for (var i = 0; i < len;) {\n        // Optimize advise from backbone\n        switch (argLen) {\n          case 1:\n            _h[i]['h'].call(ctx);\n\n            break;\n\n          case 2:\n            _h[i]['h'].call(ctx, args[1]);\n\n            break;\n\n          case 3:\n            _h[i]['h'].call(ctx, args[1], args[2]);\n\n            break;\n\n          default:\n            // have more than 2 given arguments\n            _h[i]['h'].apply(ctx, args);\n\n            break;\n        }\n\n        if (_h[i]['one']) {\n          _h.splice(i, 1);\n\n          len--;\n        } else {\n          i++;\n        }\n      }\n    }\n\n    return this;\n  }\n}; // 对象可以通过 onxxxx 绑定事件\n\n/**\n * @event module:zrender/mixin/Eventful#onclick\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmouseover\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmouseout\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmousemove\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmousewheel\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmousedown\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmouseup\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondrag\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragstart\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragend\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragenter\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragleave\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragover\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondrop\n * @type {Function}\n * @default null\n */\n\nvar _default = Eventful;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1533:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar LRU = __webpack_require__(1638);\n\nvar kCSSColorTable = {\n  'transparent': [0, 0, 0, 0],\n  'aliceblue': [240, 248, 255, 1],\n  'antiquewhite': [250, 235, 215, 1],\n  'aqua': [0, 255, 255, 1],\n  'aquamarine': [127, 255, 212, 1],\n  'azure': [240, 255, 255, 1],\n  'beige': [245, 245, 220, 1],\n  'bisque': [255, 228, 196, 1],\n  'black': [0, 0, 0, 1],\n  'blanchedalmond': [255, 235, 205, 1],\n  'blue': [0, 0, 255, 1],\n  'blueviolet': [138, 43, 226, 1],\n  'brown': [165, 42, 42, 1],\n  'burlywood': [222, 184, 135, 1],\n  'cadetblue': [95, 158, 160, 1],\n  'chartreuse': [127, 255, 0, 1],\n  'chocolate': [210, 105, 30, 1],\n  'coral': [255, 127, 80, 1],\n  'cornflowerblue': [100, 149, 237, 1],\n  'cornsilk': [255, 248, 220, 1],\n  'crimson': [220, 20, 60, 1],\n  'cyan': [0, 255, 255, 1],\n  'darkblue': [0, 0, 139, 1],\n  'darkcyan': [0, 139, 139, 1],\n  'darkgoldenrod': [184, 134, 11, 1],\n  'darkgray': [169, 169, 169, 1],\n  'darkgreen': [0, 100, 0, 1],\n  'darkgrey': [169, 169, 169, 1],\n  'darkkhaki': [189, 183, 107, 1],\n  'darkmagenta': [139, 0, 139, 1],\n  'darkolivegreen': [85, 107, 47, 1],\n  'darkorange': [255, 140, 0, 1],\n  'darkorchid': [153, 50, 204, 1],\n  'darkred': [139, 0, 0, 1],\n  'darksalmon': [233, 150, 122, 1],\n  'darkseagreen': [143, 188, 143, 1],\n  'darkslateblue': [72, 61, 139, 1],\n  'darkslategray': [47, 79, 79, 1],\n  'darkslategrey': [47, 79, 79, 1],\n  'darkturquoise': [0, 206, 209, 1],\n  'darkviolet': [148, 0, 211, 1],\n  'deeppink': [255, 20, 147, 1],\n  'deepskyblue': [0, 191, 255, 1],\n  'dimgray': [105, 105, 105, 1],\n  'dimgrey': [105, 105, 105, 1],\n  'dodgerblue': [30, 144, 255, 1],\n  'firebrick': [178, 34, 34, 1],\n  'floralwhite': [255, 250, 240, 1],\n  'forestgreen': [34, 139, 34, 1],\n  'fuchsia': [255, 0, 255, 1],\n  'gainsboro': [220, 220, 220, 1],\n  'ghostwhite': [248, 248, 255, 1],\n  'gold': [255, 215, 0, 1],\n  'goldenrod': [218, 165, 32, 1],\n  'gray': [128, 128, 128, 1],\n  'green': [0, 128, 0, 1],\n  'greenyellow': [173, 255, 47, 1],\n  'grey': [128, 128, 128, 1],\n  'honeydew': [240, 255, 240, 1],\n  'hotpink': [255, 105, 180, 1],\n  'indianred': [205, 92, 92, 1],\n  'indigo': [75, 0, 130, 1],\n  'ivory': [255, 255, 240, 1],\n  'khaki': [240, 230, 140, 1],\n  'lavender': [230, 230, 250, 1],\n  'lavenderblush': [255, 240, 245, 1],\n  'lawngreen': [124, 252, 0, 1],\n  'lemonchiffon': [255, 250, 205, 1],\n  'lightblue': [173, 216, 230, 1],\n  'lightcoral': [240, 128, 128, 1],\n  'lightcyan': [224, 255, 255, 1],\n  'lightgoldenrodyellow': [250, 250, 210, 1],\n  'lightgray': [211, 211, 211, 1],\n  'lightgreen': [144, 238, 144, 1],\n  'lightgrey': [211, 211, 211, 1],\n  'lightpink': [255, 182, 193, 1],\n  'lightsalmon': [255, 160, 122, 1],\n  'lightseagreen': [32, 178, 170, 1],\n  'lightskyblue': [135, 206, 250, 1],\n  'lightslategray': [119, 136, 153, 1],\n  'lightslategrey': [119, 136, 153, 1],\n  'lightsteelblue': [176, 196, 222, 1],\n  'lightyellow': [255, 255, 224, 1],\n  'lime': [0, 255, 0, 1],\n  'limegreen': [50, 205, 50, 1],\n  'linen': [250, 240, 230, 1],\n  'magenta': [255, 0, 255, 1],\n  'maroon': [128, 0, 0, 1],\n  'mediumaquamarine': [102, 205, 170, 1],\n  'mediumblue': [0, 0, 205, 1],\n  'mediumorchid': [186, 85, 211, 1],\n  'mediumpurple': [147, 112, 219, 1],\n  'mediumseagreen': [60, 179, 113, 1],\n  'mediumslateblue': [123, 104, 238, 1],\n  'mediumspringgreen': [0, 250, 154, 1],\n  'mediumturquoise': [72, 209, 204, 1],\n  'mediumvioletred': [199, 21, 133, 1],\n  'midnightblue': [25, 25, 112, 1],\n  'mintcream': [245, 255, 250, 1],\n  'mistyrose': [255, 228, 225, 1],\n  'moccasin': [255, 228, 181, 1],\n  'navajowhite': [255, 222, 173, 1],\n  'navy': [0, 0, 128, 1],\n  'oldlace': [253, 245, 230, 1],\n  'olive': [128, 128, 0, 1],\n  'olivedrab': [107, 142, 35, 1],\n  'orange': [255, 165, 0, 1],\n  'orangered': [255, 69, 0, 1],\n  'orchid': [218, 112, 214, 1],\n  'palegoldenrod': [238, 232, 170, 1],\n  'palegreen': [152, 251, 152, 1],\n  'paleturquoise': [175, 238, 238, 1],\n  'palevioletred': [219, 112, 147, 1],\n  'papayawhip': [255, 239, 213, 1],\n  'peachpuff': [255, 218, 185, 1],\n  'peru': [205, 133, 63, 1],\n  'pink': [255, 192, 203, 1],\n  'plum': [221, 160, 221, 1],\n  'powderblue': [176, 224, 230, 1],\n  'purple': [128, 0, 128, 1],\n  'red': [255, 0, 0, 1],\n  'rosybrown': [188, 143, 143, 1],\n  'royalblue': [65, 105, 225, 1],\n  'saddlebrown': [139, 69, 19, 1],\n  'salmon': [250, 128, 114, 1],\n  'sandybrown': [244, 164, 96, 1],\n  'seagreen': [46, 139, 87, 1],\n  'seashell': [255, 245, 238, 1],\n  'sienna': [160, 82, 45, 1],\n  'silver': [192, 192, 192, 1],\n  'skyblue': [135, 206, 235, 1],\n  'slateblue': [106, 90, 205, 1],\n  'slategray': [112, 128, 144, 1],\n  'slategrey': [112, 128, 144, 1],\n  'snow': [255, 250, 250, 1],\n  'springgreen': [0, 255, 127, 1],\n  'steelblue': [70, 130, 180, 1],\n  'tan': [210, 180, 140, 1],\n  'teal': [0, 128, 128, 1],\n  'thistle': [216, 191, 216, 1],\n  'tomato': [255, 99, 71, 1],\n  'turquoise': [64, 224, 208, 1],\n  'violet': [238, 130, 238, 1],\n  'wheat': [245, 222, 179, 1],\n  'white': [255, 255, 255, 1],\n  'whitesmoke': [245, 245, 245, 1],\n  'yellow': [255, 255, 0, 1],\n  'yellowgreen': [154, 205, 50, 1]\n};\n\nfunction clampCssByte(i) {\n  // Clamp to integer 0 .. 255.\n  i = Math.round(i); // Seems to be what Chrome does (vs truncation).\n\n  return i < 0 ? 0 : i > 255 ? 255 : i;\n}\n\nfunction clampCssAngle(i) {\n  // Clamp to integer 0 .. 360.\n  i = Math.round(i); // Seems to be what Chrome does (vs truncation).\n\n  return i < 0 ? 0 : i > 360 ? 360 : i;\n}\n\nfunction clampCssFloat(f) {\n  // Clamp to float 0.0 .. 1.0.\n  return f < 0 ? 0 : f > 1 ? 1 : f;\n}\n\nfunction parseCssInt(str) {\n  // int or percentage.\n  if (str.length && str.charAt(str.length - 1) === '%') {\n    return clampCssByte(parseFloat(str) / 100 * 255);\n  }\n\n  return clampCssByte(parseInt(str, 10));\n}\n\nfunction parseCssFloat(str) {\n  // float or percentage.\n  if (str.length && str.charAt(str.length - 1) === '%') {\n    return clampCssFloat(parseFloat(str) / 100);\n  }\n\n  return clampCssFloat(parseFloat(str));\n}\n\nfunction cssHueToRgb(m1, m2, h) {\n  if (h < 0) {\n    h += 1;\n  } else if (h > 1) {\n    h -= 1;\n  }\n\n  if (h * 6 < 1) {\n    return m1 + (m2 - m1) * h * 6;\n  }\n\n  if (h * 2 < 1) {\n    return m2;\n  }\n\n  if (h * 3 < 2) {\n    return m1 + (m2 - m1) * (2 / 3 - h) * 6;\n  }\n\n  return m1;\n}\n\nfunction lerpNumber(a, b, p) {\n  return a + (b - a) * p;\n}\n\nfunction setRgba(out, r, g, b, a) {\n  out[0] = r;\n  out[1] = g;\n  out[2] = b;\n  out[3] = a;\n  return out;\n}\n\nfunction copyRgba(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n\nvar colorCache = new LRU(20);\nvar lastRemovedArr = null;\n\nfunction putToCache(colorStr, rgbaArr) {\n  // Reuse removed array\n  if (lastRemovedArr) {\n    copyRgba(lastRemovedArr, rgbaArr);\n  }\n\n  lastRemovedArr = colorCache.put(colorStr, lastRemovedArr || rgbaArr.slice());\n}\n/**\n * @param {string} colorStr\n * @param {Array.<number>} out\n * @return {Array.<number>}\n * @memberOf module:zrender/util/color\n */\n\n\nfunction parse(colorStr, rgbaArr) {\n  if (!colorStr) {\n    return;\n  }\n\n  rgbaArr = rgbaArr || [];\n  var cached = colorCache.get(colorStr);\n\n  if (cached) {\n    return copyRgba(rgbaArr, cached);\n  } // colorStr may be not string\n\n\n  colorStr = colorStr + ''; // Remove all whitespace, not compliant, but should just be more accepting.\n\n  var str = colorStr.replace(/ /g, '').toLowerCase(); // Color keywords (and transparent) lookup.\n\n  if (str in kCSSColorTable) {\n    copyRgba(rgbaArr, kCSSColorTable[str]);\n    putToCache(colorStr, rgbaArr);\n    return rgbaArr;\n  } // #abc and #abc123 syntax.\n\n\n  if (str.charAt(0) === '#') {\n    if (str.length === 4) {\n      var iv = parseInt(str.substr(1), 16); // TODO(deanm): Stricter parsing.\n\n      if (!(iv >= 0 && iv <= 0xfff)) {\n        setRgba(rgbaArr, 0, 0, 0, 1);\n        return; // Covers NaN.\n      }\n\n      setRgba(rgbaArr, (iv & 0xf00) >> 4 | (iv & 0xf00) >> 8, iv & 0xf0 | (iv & 0xf0) >> 4, iv & 0xf | (iv & 0xf) << 4, 1);\n      putToCache(colorStr, rgbaArr);\n      return rgbaArr;\n    } else if (str.length === 7) {\n      var iv = parseInt(str.substr(1), 16); // TODO(deanm): Stricter parsing.\n\n      if (!(iv >= 0 && iv <= 0xffffff)) {\n        setRgba(rgbaArr, 0, 0, 0, 1);\n        return; // Covers NaN.\n      }\n\n      setRgba(rgbaArr, (iv & 0xff0000) >> 16, (iv & 0xff00) >> 8, iv & 0xff, 1);\n      putToCache(colorStr, rgbaArr);\n      return rgbaArr;\n    }\n\n    return;\n  }\n\n  var op = str.indexOf('('),\n      ep = str.indexOf(')');\n\n  if (op !== -1 && ep + 1 === str.length) {\n    var fname = str.substr(0, op);\n    var params = str.substr(op + 1, ep - (op + 1)).split(',');\n    var alpha = 1; // To allow case fallthrough.\n\n    switch (fname) {\n      case 'rgba':\n        if (params.length !== 4) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        alpha = parseCssFloat(params.pop());\n      // jshint ignore:line\n      // Fall through.\n\n      case 'rgb':\n        if (params.length !== 3) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        setRgba(rgbaArr, parseCssInt(params[0]), parseCssInt(params[1]), parseCssInt(params[2]), alpha);\n        putToCache(colorStr, rgbaArr);\n        return rgbaArr;\n\n      case 'hsla':\n        if (params.length !== 4) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        params[3] = parseCssFloat(params[3]);\n        hsla2rgba(params, rgbaArr);\n        putToCache(colorStr, rgbaArr);\n        return rgbaArr;\n\n      case 'hsl':\n        if (params.length !== 3) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        hsla2rgba(params, rgbaArr);\n        putToCache(colorStr, rgbaArr);\n        return rgbaArr;\n\n      default:\n        return;\n    }\n  }\n\n  setRgba(rgbaArr, 0, 0, 0, 1);\n  return;\n}\n/**\n * @param {Array.<number>} hsla\n * @param {Array.<number>} rgba\n * @return {Array.<number>} rgba\n */\n\n\nfunction hsla2rgba(hsla, rgba) {\n  var h = (parseFloat(hsla[0]) % 360 + 360) % 360 / 360; // 0 .. 1\n  // NOTE(deanm): According to the CSS spec s/l should only be\n  // percentages, but we don't bother and let float or percentage.\n\n  var s = parseCssFloat(hsla[1]);\n  var l = parseCssFloat(hsla[2]);\n  var m2 = l <= 0.5 ? l * (s + 1) : l + s - l * s;\n  var m1 = l * 2 - m2;\n  rgba = rgba || [];\n  setRgba(rgba, clampCssByte(cssHueToRgb(m1, m2, h + 1 / 3) * 255), clampCssByte(cssHueToRgb(m1, m2, h) * 255), clampCssByte(cssHueToRgb(m1, m2, h - 1 / 3) * 255), 1);\n\n  if (hsla.length === 4) {\n    rgba[3] = hsla[3];\n  }\n\n  return rgba;\n}\n/**\n * @param {Array.<number>} rgba\n * @return {Array.<number>} hsla\n */\n\n\nfunction rgba2hsla(rgba) {\n  if (!rgba) {\n    return;\n  } // RGB from 0 to 255\n\n\n  var R = rgba[0] / 255;\n  var G = rgba[1] / 255;\n  var B = rgba[2] / 255;\n  var vMin = Math.min(R, G, B); // Min. value of RGB\n\n  var vMax = Math.max(R, G, B); // Max. value of RGB\n\n  var delta = vMax - vMin; // Delta RGB value\n\n  var L = (vMax + vMin) / 2;\n  var H;\n  var S; // HSL results from 0 to 1\n\n  if (delta === 0) {\n    H = 0;\n    S = 0;\n  } else {\n    if (L < 0.5) {\n      S = delta / (vMax + vMin);\n    } else {\n      S = delta / (2 - vMax - vMin);\n    }\n\n    var deltaR = ((vMax - R) / 6 + delta / 2) / delta;\n    var deltaG = ((vMax - G) / 6 + delta / 2) / delta;\n    var deltaB = ((vMax - B) / 6 + delta / 2) / delta;\n\n    if (R === vMax) {\n      H = deltaB - deltaG;\n    } else if (G === vMax) {\n      H = 1 / 3 + deltaR - deltaB;\n    } else if (B === vMax) {\n      H = 2 / 3 + deltaG - deltaR;\n    }\n\n    if (H < 0) {\n      H += 1;\n    }\n\n    if (H > 1) {\n      H -= 1;\n    }\n  }\n\n  var hsla = [H * 360, S, L];\n\n  if (rgba[3] != null) {\n    hsla.push(rgba[3]);\n  }\n\n  return hsla;\n}\n/**\n * @param {string} color\n * @param {number} level\n * @return {string}\n * @memberOf module:zrender/util/color\n */\n\n\nfunction lift(color, level) {\n  var colorArr = parse(color);\n\n  if (colorArr) {\n    for (var i = 0; i < 3; i++) {\n      if (level < 0) {\n        colorArr[i] = colorArr[i] * (1 - level) | 0;\n      } else {\n        colorArr[i] = (255 - colorArr[i]) * level + colorArr[i] | 0;\n      }\n    }\n\n    return stringify(colorArr, colorArr.length === 4 ? 'rgba' : 'rgb');\n  }\n}\n/**\n * @param {string} color\n * @return {string}\n * @memberOf module:zrender/util/color\n */\n\n\nfunction toHex(color) {\n  var colorArr = parse(color);\n\n  if (colorArr) {\n    return ((1 << 24) + (colorArr[0] << 16) + (colorArr[1] << 8) + +colorArr[2]).toString(16).slice(1);\n  }\n}\n/**\n * Map value to color. Faster than lerp methods because color is represented by rgba array.\n * @param {number} normalizedValue A float between 0 and 1.\n * @param {Array.<Array.<number>>} colors List of rgba color array\n * @param {Array.<number>} [out] Mapped gba color array\n * @return {Array.<number>} will be null/undefined if input illegal.\n */\n\n\nfunction fastLerp(normalizedValue, colors, out) {\n  if (!(colors && colors.length) || !(normalizedValue >= 0 && normalizedValue <= 1)) {\n    return;\n  }\n\n  out = out || [];\n  var value = normalizedValue * (colors.length - 1);\n  var leftIndex = Math.floor(value);\n  var rightIndex = Math.ceil(value);\n  var leftColor = colors[leftIndex];\n  var rightColor = colors[rightIndex];\n  var dv = value - leftIndex;\n  out[0] = clampCssByte(lerpNumber(leftColor[0], rightColor[0], dv));\n  out[1] = clampCssByte(lerpNumber(leftColor[1], rightColor[1], dv));\n  out[2] = clampCssByte(lerpNumber(leftColor[2], rightColor[2], dv));\n  out[3] = clampCssFloat(lerpNumber(leftColor[3], rightColor[3], dv));\n  return out;\n}\n/**\n * @deprecated\n */\n\n\nvar fastMapToColor = fastLerp;\n/**\n * @param {number} normalizedValue A float between 0 and 1.\n * @param {Array.<string>} colors Color list.\n * @param {boolean=} fullOutput Default false.\n * @return {(string|Object)} Result color. If fullOutput,\n *                           return {color: ..., leftIndex: ..., rightIndex: ..., value: ...},\n * @memberOf module:zrender/util/color\n */\n\nfunction lerp(normalizedValue, colors, fullOutput) {\n  if (!(colors && colors.length) || !(normalizedValue >= 0 && normalizedValue <= 1)) {\n    return;\n  }\n\n  var value = normalizedValue * (colors.length - 1);\n  var leftIndex = Math.floor(value);\n  var rightIndex = Math.ceil(value);\n  var leftColor = parse(colors[leftIndex]);\n  var rightColor = parse(colors[rightIndex]);\n  var dv = value - leftIndex;\n  var color = stringify([clampCssByte(lerpNumber(leftColor[0], rightColor[0], dv)), clampCssByte(lerpNumber(leftColor[1], rightColor[1], dv)), clampCssByte(lerpNumber(leftColor[2], rightColor[2], dv)), clampCssFloat(lerpNumber(leftColor[3], rightColor[3], dv))], 'rgba');\n  return fullOutput ? {\n    color: color,\n    leftIndex: leftIndex,\n    rightIndex: rightIndex,\n    value: value\n  } : color;\n}\n/**\n * @deprecated\n */\n\n\nvar mapToColor = lerp;\n/**\n * @param {string} color\n * @param {number=} h 0 ~ 360, ignore when null.\n * @param {number=} s 0 ~ 1, ignore when null.\n * @param {number=} l 0 ~ 1, ignore when null.\n * @return {string} Color string in rgba format.\n * @memberOf module:zrender/util/color\n */\n\nfunction modifyHSL(color, h, s, l) {\n  color = parse(color);\n\n  if (color) {\n    color = rgba2hsla(color);\n    h != null && (color[0] = clampCssAngle(h));\n    s != null && (color[1] = parseCssFloat(s));\n    l != null && (color[2] = parseCssFloat(l));\n    return stringify(hsla2rgba(color), 'rgba');\n  }\n}\n/**\n * @param {string} color\n * @param {number=} alpha 0 ~ 1\n * @return {string} Color string in rgba format.\n * @memberOf module:zrender/util/color\n */\n\n\nfunction modifyAlpha(color, alpha) {\n  color = parse(color);\n\n  if (color && alpha != null) {\n    color[3] = clampCssFloat(alpha);\n    return stringify(color, 'rgba');\n  }\n}\n/**\n * @param {Array.<number>} arrColor like [12,33,44,0.4]\n * @param {string} type 'rgba', 'hsva', ...\n * @return {string} Result color. (If input illegal, return undefined).\n */\n\n\nfunction stringify(arrColor, type) {\n  if (!arrColor || !arrColor.length) {\n    return;\n  }\n\n  var colorStr = arrColor[0] + ',' + arrColor[1] + ',' + arrColor[2];\n\n  if (type === 'rgba' || type === 'hsva' || type === 'hsla') {\n    colorStr += ',' + arrColor[3];\n  }\n\n  return type + '(' + colorStr + ')';\n}\n\nexports.parse = parse;\nexports.lift = lift;\nexports.toHex = toHex;\nexports.fastLerp = fastLerp;\nexports.fastMapToColor = fastMapToColor;\nexports.lerp = lerp;\nexports.mapToColor = mapToColor;\nexports.modifyHSL = modifyHSL;\nexports.modifyAlpha = modifyAlpha;\nexports.stringify = stringify;\n\n/***/ }),\n\n/***/ 1537:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1479);\n\nvar Model = __webpack_require__(1498);\n\nvar each = zrUtil.each;\nvar curry = zrUtil.curry; // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n// allAxesInfo should be updated when setOption performed.\n\nfunction collect(ecModel, api) {\n  var result = {\n    /**\n     * key: makeKey(axis.model)\n     * value: {\n     *      axis,\n     *      coordSys,\n     *      axisPointerModel,\n     *      triggerTooltip,\n     *      involveSeries,\n     *      snap,\n     *      seriesModels,\n     *      seriesDataCount\n     * }\n     */\n    axesInfo: {},\n    seriesInvolved: false,\n\n    /**\n     * key: makeKey(coordSys.model)\n     * value: Object: key makeKey(axis.model), value: axisInfo\n     */\n    coordSysAxesInfo: {},\n    coordSysMap: {}\n  };\n  collectAxesInfo(result, ecModel, api); // Check seriesInvolved for performance, in case too many series in some chart.\n\n  result.seriesInvolved && collectSeriesInfo(result, ecModel);\n  return result;\n}\n\nfunction collectAxesInfo(result, ecModel, api) {\n  var globalTooltipModel = ecModel.getComponent('tooltip');\n  var globalAxisPointerModel = ecModel.getComponent('axisPointer'); // links can only be set on global.\n\n  var linksOption = globalAxisPointerModel.get('link', true) || [];\n  var linkGroups = []; // Collect axes info.\n\n  each(api.getCoordinateSystems(), function (coordSys) {\n    // Some coordinate system do not support axes, like geo.\n    if (!coordSys.axisPointerEnabled) {\n      return;\n    }\n\n    var coordSysKey = makeKey(coordSys.model);\n    var axesInfoInCoordSys = result.coordSysAxesInfo[coordSysKey] = {};\n    result.coordSysMap[coordSysKey] = coordSys; // Set tooltip (like 'cross') is a convienent way to show axisPointer\n    // for user. So we enable seting tooltip on coordSys model.\n\n    var coordSysModel = coordSys.model;\n    var baseTooltipModel = coordSysModel.getModel('tooltip', globalTooltipModel);\n    each(coordSys.getAxes(), curry(saveTooltipAxisInfo, false, null)); // If axis tooltip used, choose tooltip axis for each coordSys.\n    // Notice this case: coordSys is `grid` but not `cartesian2D` here.\n\n    if (coordSys.getTooltipAxes && globalTooltipModel // If tooltip.showContent is set as false, tooltip will not\n    // show but axisPointer will show as normal.\n    && baseTooltipModel.get('show')) {\n      // Compatible with previous logic. But series.tooltip.trigger: 'axis'\n      // or series.data[n].tooltip.trigger: 'axis' are not support any more.\n      var triggerAxis = baseTooltipModel.get('trigger') === 'axis';\n      var cross = baseTooltipModel.get('axisPointer.type') === 'cross';\n      var tooltipAxes = coordSys.getTooltipAxes(baseTooltipModel.get('axisPointer.axis'));\n\n      if (triggerAxis || cross) {\n        each(tooltipAxes.baseAxes, curry(saveTooltipAxisInfo, cross ? 'cross' : true, triggerAxis));\n      }\n\n      if (cross) {\n        each(tooltipAxes.otherAxes, curry(saveTooltipAxisInfo, 'cross', false));\n      }\n    } // fromTooltip: true | false | 'cross'\n    // triggerTooltip: true | false | null\n\n\n    function saveTooltipAxisInfo(fromTooltip, triggerTooltip, axis) {\n      var axisPointerModel = axis.model.getModel('axisPointer', globalAxisPointerModel);\n      var axisPointerShow = axisPointerModel.get('show');\n\n      if (!axisPointerShow || axisPointerShow === 'auto' && !fromTooltip && !isHandleTrigger(axisPointerModel)) {\n        return;\n      }\n\n      if (triggerTooltip == null) {\n        triggerTooltip = axisPointerModel.get('triggerTooltip');\n      }\n\n      axisPointerModel = fromTooltip ? makeAxisPointerModel(axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip) : axisPointerModel;\n      var snap = axisPointerModel.get('snap');\n      var key = makeKey(axis.model);\n      var involveSeries = triggerTooltip || snap || axis.type === 'category'; // If result.axesInfo[key] exist, override it (tooltip has higher priority).\n\n      var axisInfo = result.axesInfo[key] = {\n        key: key,\n        axis: axis,\n        coordSys: coordSys,\n        axisPointerModel: axisPointerModel,\n        triggerTooltip: triggerTooltip,\n        involveSeries: involveSeries,\n        snap: snap,\n        useHandle: isHandleTrigger(axisPointerModel),\n        seriesModels: []\n      };\n      axesInfoInCoordSys[key] = axisInfo;\n      result.seriesInvolved |= involveSeries;\n      var groupIndex = getLinkGroupIndex(linksOption, axis);\n\n      if (groupIndex != null) {\n        var linkGroup = linkGroups[groupIndex] || (linkGroups[groupIndex] = {\n          axesInfo: {}\n        });\n        linkGroup.axesInfo[key] = axisInfo;\n        linkGroup.mapper = linksOption[groupIndex].mapper;\n        axisInfo.linkGroup = linkGroup;\n      }\n    }\n  });\n}\n\nfunction makeAxisPointerModel(axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip) {\n  var tooltipAxisPointerModel = baseTooltipModel.getModel('axisPointer');\n  var volatileOption = {};\n  each(['type', 'snap', 'lineStyle', 'shadowStyle', 'label', 'animation', 'animationDurationUpdate', 'animationEasingUpdate', 'z'], function (field) {\n    volatileOption[field] = zrUtil.clone(tooltipAxisPointerModel.get(field));\n  }); // category axis do not auto snap, otherwise some tick that do not\n  // has value can not be hovered. value/time/log axis default snap if\n  // triggered from tooltip and trigger tooltip.\n\n  volatileOption.snap = axis.type !== 'category' && !!triggerTooltip; // Compatibel with previous behavior, tooltip axis do not show label by default.\n  // Only these properties can be overrided from tooltip to axisPointer.\n\n  if (tooltipAxisPointerModel.get('type') === 'cross') {\n    volatileOption.type = 'line';\n  }\n\n  var labelOption = volatileOption.label || (volatileOption.label = {}); // Follow the convention, do not show label when triggered by tooltip by default.\n\n  labelOption.show == null && (labelOption.show = false);\n\n  if (fromTooltip === 'cross') {\n    // When 'cross', both axes show labels.\n    labelOption.show = true; // If triggerTooltip, this is a base axis, which should better not use cross style\n    // (cross style is dashed by default)\n\n    if (!triggerTooltip) {\n      var crossStyle = volatileOption.lineStyle = tooltipAxisPointerModel.get('crossStyle');\n      crossStyle && zrUtil.defaults(labelOption, crossStyle.textStyle);\n    }\n  }\n\n  return axis.model.getModel('axisPointer', new Model(volatileOption, globalAxisPointerModel, ecModel));\n}\n\nfunction collectSeriesInfo(result, ecModel) {\n  // Prepare data for axis trigger\n  ecModel.eachSeries(function (seriesModel) {\n    // Notice this case: this coordSys is `cartesian2D` but not `grid`.\n    var coordSys = seriesModel.coordinateSystem;\n    var seriesTooltipTrigger = seriesModel.get('tooltip.trigger', true);\n    var seriesTooltipShow = seriesModel.get('tooltip.show', true);\n\n    if (!coordSys || seriesTooltipTrigger === 'none' || seriesTooltipTrigger === false || seriesTooltipTrigger === 'item' || seriesTooltipShow === false || seriesModel.get('axisPointer.show', true) === false) {\n      return;\n    }\n\n    each(result.coordSysAxesInfo[makeKey(coordSys.model)], function (axisInfo) {\n      var axis = axisInfo.axis;\n\n      if (coordSys.getAxis(axis.dim) === axis) {\n        axisInfo.seriesModels.push(seriesModel);\n        axisInfo.seriesDataCount == null && (axisInfo.seriesDataCount = 0);\n        axisInfo.seriesDataCount += seriesModel.getData().count();\n      }\n    });\n  }, this);\n}\n/**\n * For example:\n * {\n *     axisPointer: {\n *         links: [{\n *             xAxisIndex: [2, 4],\n *             yAxisIndex: 'all'\n *         }, {\n *             xAxisId: ['a5', 'a7'],\n *             xAxisName: 'xxx'\n *         }]\n *     }\n * }\n */\n\n\nfunction getLinkGroupIndex(linksOption, axis) {\n  var axisModel = axis.model;\n  var dim = axis.dim;\n\n  for (var i = 0; i < linksOption.length; i++) {\n    var linkOption = linksOption[i] || {};\n\n    if (checkPropInLink(linkOption[dim + 'AxisId'], axisModel.id) || checkPropInLink(linkOption[dim + 'AxisIndex'], axisModel.componentIndex) || checkPropInLink(linkOption[dim + 'AxisName'], axisModel.name)) {\n      return i;\n    }\n  }\n}\n\nfunction checkPropInLink(linkPropValue, axisPropValue) {\n  return linkPropValue === 'all' || zrUtil.isArray(linkPropValue) && zrUtil.indexOf(linkPropValue, axisPropValue) >= 0 || linkPropValue === axisPropValue;\n}\n\nfunction fixValue(axisModel) {\n  var axisInfo = getAxisInfo(axisModel);\n\n  if (!axisInfo) {\n    return;\n  }\n\n  var axisPointerModel = axisInfo.axisPointerModel;\n  var scale = axisInfo.axis.scale;\n  var option = axisPointerModel.option;\n  var status = axisPointerModel.get('status');\n  var value = axisPointerModel.get('value'); // Parse init value for category and time axis.\n\n  if (value != null) {\n    value = scale.parse(value);\n  }\n\n  var useHandle = isHandleTrigger(axisPointerModel); // If `handle` used, `axisPointer` will always be displayed, so value\n  // and status should be initialized.\n\n  if (status == null) {\n    option.status = useHandle ? 'show' : 'hide';\n  }\n\n  var extent = scale.getExtent().slice();\n  extent[0] > extent[1] && extent.reverse();\n\n  if ( // Pick a value on axis when initializing.\n  value == null // If both `handle` and `dataZoom` are used, value may be out of axis extent,\n  // where we should re-pick a value to keep `handle` displaying normally.\n  || value > extent[1]) {\n    // Make handle displayed on the end of the axis when init, which looks better.\n    value = extent[1];\n  }\n\n  if (value < extent[0]) {\n    value = extent[0];\n  }\n\n  option.value = value;\n\n  if (useHandle) {\n    option.status = axisInfo.axis.scale.isBlank() ? 'hide' : 'show';\n  }\n}\n\nfunction getAxisInfo(axisModel) {\n  var coordSysAxesInfo = (axisModel.ecModel.getComponent('axisPointer') || {}).coordSysAxesInfo;\n  return coordSysAxesInfo && coordSysAxesInfo.axesInfo[makeKey(axisModel)];\n}\n\nfunction getAxisPointerModel(axisModel) {\n  var axisInfo = getAxisInfo(axisModel);\n  return axisInfo && axisInfo.axisPointerModel;\n}\n\nfunction isHandleTrigger(axisPointerModel) {\n  return !!axisPointerModel.get('handle.show');\n}\n/**\n * @param {module:echarts/model/Model} model\n * @return {string} unique key\n */\n\n\nfunction makeKey(model) {\n  return model.type + '||' + model.id;\n}\n\nexports.collect = collect;\nexports.fixValue = fixValue;\nexports.getAxisInfo = getAxisInfo;\nexports.getAxisPointerModel = getAxisPointerModel;\nexports.makeKey = makeKey;\n\n/***/ }),\n\n/***/ 1538:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1479);\n\n// TODO Parse shadow style\n// TODO Only shallow path support\nfunction _default(properties) {\n  // Normalize\n  for (var i = 0; i < properties.length; i++) {\n    if (!properties[i][1]) {\n      properties[i][1] = properties[i][0];\n    }\n  }\n\n  return function (model, excludes, includes) {\n    var style = {};\n\n    for (var i = 0; i < properties.length; i++) {\n      var propName = properties[i][1];\n\n      if (excludes && zrUtil.indexOf(excludes, propName) >= 0 || includes && zrUtil.indexOf(includes, propName) < 0) {\n        continue;\n      }\n\n      var val = model.getShallow(propName);\n\n      if (val != null) {\n        style[properties[i][0]] = val;\n      }\n    }\n\n    return style;\n  };\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1539:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar clazzUtil = __webpack_require__(1505);\n\n/**\n * // Scale class management\n * @module echarts/scale/Scale\n */\n\n/**\n * @param {Object} [setting]\n */\nfunction Scale(setting) {\n  this._setting = setting || {};\n  /**\n   * Extent\n   * @type {Array.<number>}\n   * @protected\n   */\n\n  this._extent = [Infinity, -Infinity];\n  /**\n   * Step is calculated in adjustExtent\n   * @type {Array.<number>}\n   * @protected\n   */\n\n  this._interval = 0;\n  this.init && this.init.apply(this, arguments);\n}\n/**\n * Parse input val to valid inner number.\n * @param {*} val\n * @return {number}\n */\n\n\nScale.prototype.parse = function (val) {\n  // Notice: This would be a trap here, If the implementation\n  // of this method depends on extent, and this method is used\n  // before extent set (like in dataZoom), it would be wrong.\n  // Nevertheless, parse does not depend on extent generally.\n  return val;\n};\n\nScale.prototype.getSetting = function (name) {\n  return this._setting[name];\n};\n\nScale.prototype.contain = function (val) {\n  var extent = this._extent;\n  return val >= extent[0] && val <= extent[1];\n};\n/**\n * Normalize value to linear [0, 1], return 0.5 if extent span is 0\n * @param {number} val\n * @return {number}\n */\n\n\nScale.prototype.normalize = function (val) {\n  var extent = this._extent;\n\n  if (extent[1] === extent[0]) {\n    return 0.5;\n  }\n\n  return (val - extent[0]) / (extent[1] - extent[0]);\n};\n/**\n * Scale normalized value\n * @param {number} val\n * @return {number}\n */\n\n\nScale.prototype.scale = function (val) {\n  var extent = this._extent;\n  return val * (extent[1] - extent[0]) + extent[0];\n};\n/**\n * Set extent from data\n * @param {Array.<number>} other\n */\n\n\nScale.prototype.unionExtent = function (other) {\n  var extent = this._extent;\n  other[0] < extent[0] && (extent[0] = other[0]);\n  other[1] > extent[1] && (extent[1] = other[1]); // not setExtent because in log axis it may transformed to power\n  // this.setExtent(extent[0], extent[1]);\n};\n/**\n * Set extent from data\n * @param {module:echarts/data/List} data\n * @param {string} dim\n */\n\n\nScale.prototype.unionExtentFromData = function (data, dim) {\n  this.unionExtent(data.getDataExtent(dim, true));\n};\n/**\n * Get extent\n * @return {Array.<number>}\n */\n\n\nScale.prototype.getExtent = function () {\n  return this._extent.slice();\n};\n/**\n * Set extent\n * @param {number} start\n * @param {number} end\n */\n\n\nScale.prototype.setExtent = function (start, end) {\n  var thisExtent = this._extent;\n\n  if (!isNaN(start)) {\n    thisExtent[0] = start;\n  }\n\n  if (!isNaN(end)) {\n    thisExtent[1] = end;\n  }\n};\n/**\n * @return {Array.<string>}\n */\n\n\nScale.prototype.getTicksLabels = function () {\n  var labels = [];\n  var ticks = this.getTicks();\n\n  for (var i = 0; i < ticks.length; i++) {\n    labels.push(this.getLabel(ticks[i]));\n  }\n\n  return labels;\n};\n/**\n * When axis extent depends on data and no data exists,\n * axis ticks should not be drawn, which is named 'blank'.\n */\n\n\nScale.prototype.isBlank = function () {\n  return this._isBlank;\n},\n/**\n * When axis extent depends on data and no data exists,\n * axis ticks should not be drawn, which is named 'blank'.\n */\nScale.prototype.setBlank = function (isBlank) {\n  this._isBlank = isBlank;\n};\nclazzUtil.enableClassExtend(Scale);\nclazzUtil.enableClassManagement(Scale, {\n  registerWhenExtend: true\n});\nvar _default = Scale;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1555:\n/***/ (function(module, exports) {\n\nvar dpr = 1; // If in browser environment\n\nif (typeof window !== 'undefined') {\n  dpr = Math.max(window.devicePixelRatio || 1, 1);\n}\n/**\n * config默认配置项\n * @exports zrender/config\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n */\n\n/**\n * debug日志选项：catchBrushException为true下有效\n * 0 : 不生成debug数据，发布用\n * 1 : 异常抛出，调试用\n * 2 : 控制台输出，调试用\n */\n\n\nvar debugMode = 0; // retina 屏幕优化\n\nvar devicePixelRatio = dpr;\nexports.debugMode = debugMode;\nexports.devicePixelRatio = devicePixelRatio;\n\n/***/ }),\n\n/***/ 1556:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1479);\n\nvar Element = __webpack_require__(1633);\n\nvar BoundingRect = __webpack_require__(1497);\n\n/**\n * Group是一个容器，可以插入子节点，Group的变换也会被应用到子节点上\n * @module zrender/graphic/Group\n * @example\n *     var Group = require('zrender/container/Group');\n *     var Circle = require('zrender/graphic/shape/Circle');\n *     var g = new Group();\n *     g.position[0] = 100;\n *     g.position[1] = 100;\n *     g.add(new Circle({\n *         style: {\n *             x: 100,\n *             y: 100,\n *             r: 20,\n *         }\n *     }));\n *     zr.add(g);\n */\n\n/**\n * @alias module:zrender/graphic/Group\n * @constructor\n * @extends module:zrender/mixin/Transformable\n * @extends module:zrender/mixin/Eventful\n */\nvar Group = function (opts) {\n  opts = opts || {};\n  Element.call(this, opts);\n\n  for (var key in opts) {\n    if (opts.hasOwnProperty(key)) {\n      this[key] = opts[key];\n    }\n  }\n\n  this._children = [];\n  this.__storage = null;\n  this.__dirty = true;\n};\n\nGroup.prototype = {\n  constructor: Group,\n  isGroup: true,\n\n  /**\n   * @type {string}\n   */\n  type: 'group',\n\n  /**\n   * 所有子孙元素是否响应鼠标事件\n   * @name module:/zrender/container/Group#silent\n   * @type {boolean}\n   * @default false\n   */\n  silent: false,\n\n  /**\n   * @return {Array.<module:zrender/Element>}\n   */\n  children: function () {\n    return this._children.slice();\n  },\n\n  /**\n   * 获取指定 index 的儿子节点\n   * @param  {number} idx\n   * @return {module:zrender/Element}\n   */\n  childAt: function (idx) {\n    return this._children[idx];\n  },\n\n  /**\n   * 获取指定名字的儿子节点\n   * @param  {string} name\n   * @return {module:zrender/Element}\n   */\n  childOfName: function (name) {\n    var children = this._children;\n\n    for (var i = 0; i < children.length; i++) {\n      if (children[i].name === name) {\n        return children[i];\n      }\n    }\n  },\n\n  /**\n   * @return {number}\n   */\n  childCount: function () {\n    return this._children.length;\n  },\n\n  /**\n   * 添加子节点到最后\n   * @param {module:zrender/Element} child\n   */\n  add: function (child) {\n    if (child && child !== this && child.parent !== this) {\n      this._children.push(child);\n\n      this._doAdd(child);\n    }\n\n    return this;\n  },\n\n  /**\n   * 添加子节点在 nextSibling 之前\n   * @param {module:zrender/Element} child\n   * @param {module:zrender/Element} nextSibling\n   */\n  addBefore: function (child, nextSibling) {\n    if (child && child !== this && child.parent !== this && nextSibling && nextSibling.parent === this) {\n      var children = this._children;\n      var idx = children.indexOf(nextSibling);\n\n      if (idx >= 0) {\n        children.splice(idx, 0, child);\n\n        this._doAdd(child);\n      }\n    }\n\n    return this;\n  },\n  _doAdd: function (child) {\n    if (child.parent) {\n      child.parent.remove(child);\n    }\n\n    child.parent = this;\n    var storage = this.__storage;\n    var zr = this.__zr;\n\n    if (storage && storage !== child.__storage) {\n      storage.addToStorage(child);\n\n      if (child instanceof Group) {\n        child.addChildrenToStorage(storage);\n      }\n    }\n\n    zr && zr.refresh();\n  },\n\n  /**\n   * 移除子节点\n   * @param {module:zrender/Element} child\n   */\n  remove: function (child) {\n    var zr = this.__zr;\n    var storage = this.__storage;\n    var children = this._children;\n    var idx = zrUtil.indexOf(children, child);\n\n    if (idx < 0) {\n      return this;\n    }\n\n    children.splice(idx, 1);\n    child.parent = null;\n\n    if (storage) {\n      storage.delFromStorage(child);\n\n      if (child instanceof Group) {\n        child.delChildrenFromStorage(storage);\n      }\n    }\n\n    zr && zr.refresh();\n    return this;\n  },\n\n  /**\n   * 移除所有子节点\n   */\n  removeAll: function () {\n    var children = this._children;\n    var storage = this.__storage;\n    var child;\n    var i;\n\n    for (i = 0; i < children.length; i++) {\n      child = children[i];\n\n      if (storage) {\n        storage.delFromStorage(child);\n\n        if (child instanceof Group) {\n          child.delChildrenFromStorage(storage);\n        }\n      }\n\n      child.parent = null;\n    }\n\n    children.length = 0;\n    return this;\n  },\n\n  /**\n   * 遍历所有子节点\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  eachChild: function (cb, context) {\n    var children = this._children;\n\n    for (var i = 0; i < children.length; i++) {\n      var child = children[i];\n      cb.call(context, child, i);\n    }\n\n    return this;\n  },\n\n  /**\n   * 深度优先遍历所有子孙节点\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  traverse: function (cb, context) {\n    for (var i = 0; i < this._children.length; i++) {\n      var child = this._children[i];\n      cb.call(context, child);\n\n      if (child.type === 'group') {\n        child.traverse(cb, context);\n      }\n    }\n\n    return this;\n  },\n  addChildrenToStorage: function (storage) {\n    for (var i = 0; i < this._children.length; i++) {\n      var child = this._children[i];\n      storage.addToStorage(child);\n\n      if (child instanceof Group) {\n        child.addChildrenToStorage(storage);\n      }\n    }\n  },\n  delChildrenFromStorage: function (storage) {\n    for (var i = 0; i < this._children.length; i++) {\n      var child = this._children[i];\n      storage.delFromStorage(child);\n\n      if (child instanceof Group) {\n        child.delChildrenFromStorage(storage);\n      }\n    }\n  },\n  dirty: function () {\n    this.__dirty = true;\n    this.__zr && this.__zr.refresh();\n    return this;\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getBoundingRect: function (includeChildren) {\n    // TODO Caching\n    var rect = null;\n    var tmpRect = new BoundingRect(0, 0, 0, 0);\n    var children = includeChildren || this._children;\n    var tmpMat = [];\n\n    for (var i = 0; i < children.length; i++) {\n      var child = children[i];\n\n      if (child.ignore || child.invisible) {\n        continue;\n      }\n\n      var childRect = child.getBoundingRect();\n      var transform = child.getLocalTransform(tmpMat); // TODO\n      // The boundingRect cacluated by transforming original\n      // rect may be bigger than the actual bundingRect when rotation\n      // is used. (Consider a circle rotated aginst its center, where\n      // the actual boundingRect should be the same as that not be\n      // rotated.) But we can not find better approach to calculate\n      // actual boundingRect yet, considering performance.\n\n      if (transform) {\n        tmpRect.copy(childRect);\n        tmpRect.applyTransform(transform);\n        rect = rect || tmpRect.clone();\n        rect.union(tmpRect);\n      } else {\n        rect = rect || childRect.clone();\n        rect.union(childRect);\n      }\n    }\n\n    return rect || tmpRect;\n  }\n};\nzrUtil.inherits(Group, Element);\nvar _default = Group;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1557:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar curve = __webpack_require__(1524);\n\nvar vec2 = __webpack_require__(1485);\n\nvar bbox = __webpack_require__(1639);\n\nvar BoundingRect = __webpack_require__(1497);\n\nvar _config = __webpack_require__(1555);\n\nvar dpr = _config.devicePixelRatio;\n\n/**\n * Path 代理，可以在`buildPath`中用于替代`ctx`, 会保存每个path操作的命令到pathCommands属性中\n * 可以用于 isInsidePath 判断以及获取boundingRect\n *\n * @module zrender/core/PathProxy\n * @author Yi Shen (http://www.github.com/pissang)\n */\n// TODO getTotalLength, getPointAtLength\nvar CMD = {\n  M: 1,\n  L: 2,\n  C: 3,\n  Q: 4,\n  A: 5,\n  Z: 6,\n  // Rect\n  R: 7\n}; // var CMD_MEM_SIZE = {\n//     M: 3,\n//     L: 3,\n//     C: 7,\n//     Q: 5,\n//     A: 9,\n//     R: 5,\n//     Z: 1\n// };\n\nvar min = [];\nvar max = [];\nvar min2 = [];\nvar max2 = [];\nvar mathMin = Math.min;\nvar mathMax = Math.max;\nvar mathCos = Math.cos;\nvar mathSin = Math.sin;\nvar mathSqrt = Math.sqrt;\nvar mathAbs = Math.abs;\nvar hasTypedArray = typeof Float32Array != 'undefined';\n/**\n * @alias module:zrender/core/PathProxy\n * @constructor\n */\n\nvar PathProxy = function (notSaveData) {\n  this._saveData = !(notSaveData || false);\n\n  if (this._saveData) {\n    /**\n     * Path data. Stored as flat array\n     * @type {Array.<Object>}\n     */\n    this.data = [];\n  }\n\n  this._ctx = null;\n};\n/**\n * 快速计算Path包围盒（并不是最小包围盒）\n * @return {Object}\n */\n\n\nPathProxy.prototype = {\n  constructor: PathProxy,\n  _xi: 0,\n  _yi: 0,\n  _x0: 0,\n  _y0: 0,\n  // Unit x, Unit y. Provide for avoiding drawing that too short line segment\n  _ux: 0,\n  _uy: 0,\n  _len: 0,\n  _lineDash: null,\n  _dashOffset: 0,\n  _dashIdx: 0,\n  _dashSum: 0,\n\n  /**\n   * @readOnly\n   */\n  setScale: function (sx, sy) {\n    this._ux = mathAbs(1 / dpr / sx) || 0;\n    this._uy = mathAbs(1 / dpr / sy) || 0;\n  },\n  getContext: function () {\n    return this._ctx;\n  },\n\n  /**\n   * @param  {CanvasRenderingContext2D} ctx\n   * @return {module:zrender/core/PathProxy}\n   */\n  beginPath: function (ctx) {\n    this._ctx = ctx;\n    ctx && ctx.beginPath();\n    ctx && (this.dpr = ctx.dpr); // Reset\n\n    if (this._saveData) {\n      this._len = 0;\n    }\n\n    if (this._lineDash) {\n      this._lineDash = null;\n      this._dashOffset = 0;\n    }\n\n    return this;\n  },\n\n  /**\n   * @param  {number} x\n   * @param  {number} y\n   * @return {module:zrender/core/PathProxy}\n   */\n  moveTo: function (x, y) {\n    this.addData(CMD.M, x, y);\n    this._ctx && this._ctx.moveTo(x, y); // x0, y0, xi, yi 是记录在 _dashedXXXXTo 方法中使用\n    // xi, yi 记录当前点, x0, y0 在 closePath 的时候回到起始点。\n    // 有可能在 beginPath 之后直接调用 lineTo，这时候 x0, y0 需要\n    // 在 lineTo 方法中记录，这里先不考虑这种情况，dashed line 也只在 IE10- 中不支持\n\n    this._x0 = x;\n    this._y0 = y;\n    this._xi = x;\n    this._yi = y;\n    return this;\n  },\n\n  /**\n   * @param  {number} x\n   * @param  {number} y\n   * @return {module:zrender/core/PathProxy}\n   */\n  lineTo: function (x, y) {\n    var exceedUnit = mathAbs(x - this._xi) > this._ux || mathAbs(y - this._yi) > this._uy // Force draw the first segment\n    || this._len < 5;\n    this.addData(CMD.L, x, y);\n\n    if (this._ctx && exceedUnit) {\n      this._needsDash() ? this._dashedLineTo(x, y) : this._ctx.lineTo(x, y);\n    }\n\n    if (exceedUnit) {\n      this._xi = x;\n      this._yi = y;\n    }\n\n    return this;\n  },\n\n  /**\n   * @param  {number} x1\n   * @param  {number} y1\n   * @param  {number} x2\n   * @param  {number} y2\n   * @param  {number} x3\n   * @param  {number} y3\n   * @return {module:zrender/core/PathProxy}\n   */\n  bezierCurveTo: function (x1, y1, x2, y2, x3, y3) {\n    this.addData(CMD.C, x1, y1, x2, y2, x3, y3);\n\n    if (this._ctx) {\n      this._needsDash() ? this._dashedBezierTo(x1, y1, x2, y2, x3, y3) : this._ctx.bezierCurveTo(x1, y1, x2, y2, x3, y3);\n    }\n\n    this._xi = x3;\n    this._yi = y3;\n    return this;\n  },\n\n  /**\n   * @param  {number} x1\n   * @param  {number} y1\n   * @param  {number} x2\n   * @param  {number} y2\n   * @return {module:zrender/core/PathProxy}\n   */\n  quadraticCurveTo: function (x1, y1, x2, y2) {\n    this.addData(CMD.Q, x1, y1, x2, y2);\n\n    if (this._ctx) {\n      this._needsDash() ? this._dashedQuadraticTo(x1, y1, x2, y2) : this._ctx.quadraticCurveTo(x1, y1, x2, y2);\n    }\n\n    this._xi = x2;\n    this._yi = y2;\n    return this;\n  },\n\n  /**\n   * @param  {number} cx\n   * @param  {number} cy\n   * @param  {number} r\n   * @param  {number} startAngle\n   * @param  {number} endAngle\n   * @param  {boolean} anticlockwise\n   * @return {module:zrender/core/PathProxy}\n   */\n  arc: function (cx, cy, r, startAngle, endAngle, anticlockwise) {\n    this.addData(CMD.A, cx, cy, r, r, startAngle, endAngle - startAngle, 0, anticlockwise ? 0 : 1);\n    this._ctx && this._ctx.arc(cx, cy, r, startAngle, endAngle, anticlockwise);\n    this._xi = mathCos(endAngle) * r + cx;\n    this._yi = mathSin(endAngle) * r + cx;\n    return this;\n  },\n  // TODO\n  arcTo: function (x1, y1, x2, y2, radius) {\n    if (this._ctx) {\n      this._ctx.arcTo(x1, y1, x2, y2, radius);\n    }\n\n    return this;\n  },\n  // TODO\n  rect: function (x, y, w, h) {\n    this._ctx && this._ctx.rect(x, y, w, h);\n    this.addData(CMD.R, x, y, w, h);\n    return this;\n  },\n\n  /**\n   * @return {module:zrender/core/PathProxy}\n   */\n  closePath: function () {\n    this.addData(CMD.Z);\n    var ctx = this._ctx;\n    var x0 = this._x0;\n    var y0 = this._y0;\n\n    if (ctx) {\n      this._needsDash() && this._dashedLineTo(x0, y0);\n      ctx.closePath();\n    }\n\n    this._xi = x0;\n    this._yi = y0;\n    return this;\n  },\n\n  /**\n   * Context 从外部传入，因为有可能是 rebuildPath 完之后再 fill。\n   * stroke 同样\n   * @param {CanvasRenderingContext2D} ctx\n   * @return {module:zrender/core/PathProxy}\n   */\n  fill: function (ctx) {\n    ctx && ctx.fill();\n    this.toStatic();\n  },\n\n  /**\n   * @param {CanvasRenderingContext2D} ctx\n   * @return {module:zrender/core/PathProxy}\n   */\n  stroke: function (ctx) {\n    ctx && ctx.stroke();\n    this.toStatic();\n  },\n\n  /**\n   * 必须在其它绘制命令前调用\n   * Must be invoked before all other path drawing methods\n   * @return {module:zrender/core/PathProxy}\n   */\n  setLineDash: function (lineDash) {\n    if (lineDash instanceof Array) {\n      this._lineDash = lineDash;\n      this._dashIdx = 0;\n      var lineDashSum = 0;\n\n      for (var i = 0; i < lineDash.length; i++) {\n        lineDashSum += lineDash[i];\n      }\n\n      this._dashSum = lineDashSum;\n    }\n\n    return this;\n  },\n\n  /**\n   * 必须在其它绘制命令前调用\n   * Must be invoked before all other path drawing methods\n   * @return {module:zrender/core/PathProxy}\n   */\n  setLineDashOffset: function (offset) {\n    this._dashOffset = offset;\n    return this;\n  },\n\n  /**\n   *\n   * @return {boolean}\n   */\n  len: function () {\n    return this._len;\n  },\n\n  /**\n   * 直接设置 Path 数据\n   */\n  setData: function (data) {\n    var len = data.length;\n\n    if (!(this.data && this.data.length == len) && hasTypedArray) {\n      this.data = new Float32Array(len);\n    }\n\n    for (var i = 0; i < len; i++) {\n      this.data[i] = data[i];\n    }\n\n    this._len = len;\n  },\n\n  /**\n   * 添加子路径\n   * @param {module:zrender/core/PathProxy|Array.<module:zrender/core/PathProxy>} path\n   */\n  appendPath: function (path) {\n    if (!(path instanceof Array)) {\n      path = [path];\n    }\n\n    var len = path.length;\n    var appendSize = 0;\n    var offset = this._len;\n\n    for (var i = 0; i < len; i++) {\n      appendSize += path[i].len();\n    }\n\n    if (hasTypedArray && this.data instanceof Float32Array) {\n      this.data = new Float32Array(offset + appendSize);\n    }\n\n    for (var i = 0; i < len; i++) {\n      var appendPathData = path[i].data;\n\n      for (var k = 0; k < appendPathData.length; k++) {\n        this.data[offset++] = appendPathData[k];\n      }\n    }\n\n    this._len = offset;\n  },\n\n  /**\n   * 填充 Path 数据。\n   * 尽量复用而不申明新的数组。大部分图形重绘的指令数据长度都是不变的。\n   */\n  addData: function (cmd) {\n    if (!this._saveData) {\n      return;\n    }\n\n    var data = this.data;\n\n    if (this._len + arguments.length > data.length) {\n      // 因为之前的数组已经转换成静态的 Float32Array\n      // 所以不够用时需要扩展一个新的动态数组\n      this._expandData();\n\n      data = this.data;\n    }\n\n    for (var i = 0; i < arguments.length; i++) {\n      data[this._len++] = arguments[i];\n    }\n\n    this._prevCmd = cmd;\n  },\n  _expandData: function () {\n    // Only if data is Float32Array\n    if (!(this.data instanceof Array)) {\n      var newData = [];\n\n      for (var i = 0; i < this._len; i++) {\n        newData[i] = this.data[i];\n      }\n\n      this.data = newData;\n    }\n  },\n\n  /**\n   * If needs js implemented dashed line\n   * @return {boolean}\n   * @private\n   */\n  _needsDash: function () {\n    return this._lineDash;\n  },\n  _dashedLineTo: function (x1, y1) {\n    var dashSum = this._dashSum;\n    var offset = this._dashOffset;\n    var lineDash = this._lineDash;\n    var ctx = this._ctx;\n    var x0 = this._xi;\n    var y0 = this._yi;\n    var dx = x1 - x0;\n    var dy = y1 - y0;\n    var dist = mathSqrt(dx * dx + dy * dy);\n    var x = x0;\n    var y = y0;\n    var dash;\n    var nDash = lineDash.length;\n    var idx;\n    dx /= dist;\n    dy /= dist;\n\n    if (offset < 0) {\n      // Convert to positive offset\n      offset = dashSum + offset;\n    }\n\n    offset %= dashSum;\n    x -= offset * dx;\n    y -= offset * dy;\n\n    while (dx > 0 && x <= x1 || dx < 0 && x >= x1 || dx == 0 && (dy > 0 && y <= y1 || dy < 0 && y >= y1)) {\n      idx = this._dashIdx;\n      dash = lineDash[idx];\n      x += dx * dash;\n      y += dy * dash;\n      this._dashIdx = (idx + 1) % nDash; // Skip positive offset\n\n      if (dx > 0 && x < x0 || dx < 0 && x > x0 || dy > 0 && y < y0 || dy < 0 && y > y0) {\n        continue;\n      }\n\n      ctx[idx % 2 ? 'moveTo' : 'lineTo'](dx >= 0 ? mathMin(x, x1) : mathMax(x, x1), dy >= 0 ? mathMin(y, y1) : mathMax(y, y1));\n    } // Offset for next lineTo\n\n\n    dx = x - x1;\n    dy = y - y1;\n    this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n  },\n  // Not accurate dashed line to\n  _dashedBezierTo: function (x1, y1, x2, y2, x3, y3) {\n    var dashSum = this._dashSum;\n    var offset = this._dashOffset;\n    var lineDash = this._lineDash;\n    var ctx = this._ctx;\n    var x0 = this._xi;\n    var y0 = this._yi;\n    var t;\n    var dx;\n    var dy;\n    var cubicAt = curve.cubicAt;\n    var bezierLen = 0;\n    var idx = this._dashIdx;\n    var nDash = lineDash.length;\n    var x;\n    var y;\n    var tmpLen = 0;\n\n    if (offset < 0) {\n      // Convert to positive offset\n      offset = dashSum + offset;\n    }\n\n    offset %= dashSum; // Bezier approx length\n\n    for (t = 0; t < 1; t += 0.1) {\n      dx = cubicAt(x0, x1, x2, x3, t + 0.1) - cubicAt(x0, x1, x2, x3, t);\n      dy = cubicAt(y0, y1, y2, y3, t + 0.1) - cubicAt(y0, y1, y2, y3, t);\n      bezierLen += mathSqrt(dx * dx + dy * dy);\n    } // Find idx after add offset\n\n\n    for (; idx < nDash; idx++) {\n      tmpLen += lineDash[idx];\n\n      if (tmpLen > offset) {\n        break;\n      }\n    }\n\n    t = (tmpLen - offset) / bezierLen;\n\n    while (t <= 1) {\n      x = cubicAt(x0, x1, x2, x3, t);\n      y = cubicAt(y0, y1, y2, y3, t); // Use line to approximate dashed bezier\n      // Bad result if dash is long\n\n      idx % 2 ? ctx.moveTo(x, y) : ctx.lineTo(x, y);\n      t += lineDash[idx] / bezierLen;\n      idx = (idx + 1) % nDash;\n    } // Finish the last segment and calculate the new offset\n\n\n    idx % 2 !== 0 && ctx.lineTo(x3, y3);\n    dx = x3 - x;\n    dy = y3 - y;\n    this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n  },\n  _dashedQuadraticTo: function (x1, y1, x2, y2) {\n    // Convert quadratic to cubic using degree elevation\n    var x3 = x2;\n    var y3 = y2;\n    x2 = (x2 + 2 * x1) / 3;\n    y2 = (y2 + 2 * y1) / 3;\n    x1 = (this._xi + 2 * x1) / 3;\n    y1 = (this._yi + 2 * y1) / 3;\n\n    this._dashedBezierTo(x1, y1, x2, y2, x3, y3);\n  },\n\n  /**\n   * 转成静态的 Float32Array 减少堆内存占用\n   * Convert dynamic array to static Float32Array\n   */\n  toStatic: function () {\n    var data = this.data;\n\n    if (data instanceof Array) {\n      data.length = this._len;\n\n      if (hasTypedArray) {\n        this.data = new Float32Array(data);\n      }\n    }\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getBoundingRect: function () {\n    min[0] = min[1] = min2[0] = min2[1] = Number.MAX_VALUE;\n    max[0] = max[1] = max2[0] = max2[1] = -Number.MAX_VALUE;\n    var data = this.data;\n    var xi = 0;\n    var yi = 0;\n    var x0 = 0;\n    var y0 = 0;\n\n    for (var i = 0; i < data.length;) {\n      var cmd = data[i++];\n\n      if (i == 1) {\n        // 如果第一个命令是 L, C, Q\n        // 则 previous point 同绘制命令的第一个 point\n        //\n        // 第一个命令为 Arc 的情况下会在后面特殊处理\n        xi = data[i];\n        yi = data[i + 1];\n        x0 = xi;\n        y0 = yi;\n      }\n\n      switch (cmd) {\n        case CMD.M:\n          // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n          // 在 closePath 的时候使用\n          x0 = data[i++];\n          y0 = data[i++];\n          xi = x0;\n          yi = y0;\n          min2[0] = x0;\n          min2[1] = y0;\n          max2[0] = x0;\n          max2[1] = y0;\n          break;\n\n        case CMD.L:\n          bbox.fromLine(xi, yi, data[i], data[i + 1], min2, max2);\n          xi = data[i++];\n          yi = data[i++];\n          break;\n\n        case CMD.C:\n          bbox.fromCubic(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], min2, max2);\n          xi = data[i++];\n          yi = data[i++];\n          break;\n\n        case CMD.Q:\n          bbox.fromQuadratic(xi, yi, data[i++], data[i++], data[i], data[i + 1], min2, max2);\n          xi = data[i++];\n          yi = data[i++];\n          break;\n\n        case CMD.A:\n          // TODO Arc 判断的开销比较大\n          var cx = data[i++];\n          var cy = data[i++];\n          var rx = data[i++];\n          var ry = data[i++];\n          var startAngle = data[i++];\n          var endAngle = data[i++] + startAngle; // TODO Arc 旋转\n\n          var psi = data[i++];\n          var anticlockwise = 1 - data[i++];\n\n          if (i == 1) {\n            // 直接使用 arc 命令\n            // 第一个命令起点还未定义\n            x0 = mathCos(startAngle) * rx + cx;\n            y0 = mathSin(startAngle) * ry + cy;\n          }\n\n          bbox.fromArc(cx, cy, rx, ry, startAngle, endAngle, anticlockwise, min2, max2);\n          xi = mathCos(endAngle) * rx + cx;\n          yi = mathSin(endAngle) * ry + cy;\n          break;\n\n        case CMD.R:\n          x0 = xi = data[i++];\n          y0 = yi = data[i++];\n          var width = data[i++];\n          var height = data[i++]; // Use fromLine\n\n          bbox.fromLine(x0, y0, x0 + width, y0 + height, min2, max2);\n          break;\n\n        case CMD.Z:\n          xi = x0;\n          yi = y0;\n          break;\n      } // Union\n\n\n      vec2.min(min, min, min2);\n      vec2.max(max, max, max2);\n    } // No data\n\n\n    if (i === 0) {\n      min[0] = min[1] = max[0] = max[1] = 0;\n    }\n\n    return new BoundingRect(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n  },\n\n  /**\n   * Rebuild path from current data\n   * Rebuild path will not consider javascript implemented line dash.\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  rebuildPath: function (ctx) {\n    var d = this.data;\n    var x0, y0;\n    var xi, yi;\n    var x, y;\n    var ux = this._ux;\n    var uy = this._uy;\n    var len = this._len;\n\n    for (var i = 0; i < len;) {\n      var cmd = d[i++];\n\n      if (i == 1) {\n        // 如果第一个命令是 L, C, Q\n        // 则 previous point 同绘制命令的第一个 point\n        //\n        // 第一个命令为 Arc 的情况下会在后面特殊处理\n        xi = d[i];\n        yi = d[i + 1];\n        x0 = xi;\n        y0 = yi;\n      }\n\n      switch (cmd) {\n        case CMD.M:\n          x0 = xi = d[i++];\n          y0 = yi = d[i++];\n          ctx.moveTo(xi, yi);\n          break;\n\n        case CMD.L:\n          x = d[i++];\n          y = d[i++]; // Not draw too small seg between\n\n          if (mathAbs(x - xi) > ux || mathAbs(y - yi) > uy || i === len - 1) {\n            ctx.lineTo(x, y);\n            xi = x;\n            yi = y;\n          }\n\n          break;\n\n        case CMD.C:\n          ctx.bezierCurveTo(d[i++], d[i++], d[i++], d[i++], d[i++], d[i++]);\n          xi = d[i - 2];\n          yi = d[i - 1];\n          break;\n\n        case CMD.Q:\n          ctx.quadraticCurveTo(d[i++], d[i++], d[i++], d[i++]);\n          xi = d[i - 2];\n          yi = d[i - 1];\n          break;\n\n        case CMD.A:\n          var cx = d[i++];\n          var cy = d[i++];\n          var rx = d[i++];\n          var ry = d[i++];\n          var theta = d[i++];\n          var dTheta = d[i++];\n          var psi = d[i++];\n          var fs = d[i++];\n          var r = rx > ry ? rx : ry;\n          var scaleX = rx > ry ? 1 : rx / ry;\n          var scaleY = rx > ry ? ry / rx : 1;\n          var isEllipse = Math.abs(rx - ry) > 1e-3;\n          var endAngle = theta + dTheta;\n\n          if (isEllipse) {\n            ctx.translate(cx, cy);\n            ctx.rotate(psi);\n            ctx.scale(scaleX, scaleY);\n            ctx.arc(0, 0, r, theta, endAngle, 1 - fs);\n            ctx.scale(1 / scaleX, 1 / scaleY);\n            ctx.rotate(-psi);\n            ctx.translate(-cx, -cy);\n          } else {\n            ctx.arc(cx, cy, r, theta, endAngle, 1 - fs);\n          }\n\n          if (i == 1) {\n            // 直接使用 arc 命令\n            // 第一个命令起点还未定义\n            x0 = mathCos(theta) * rx + cx;\n            y0 = mathSin(theta) * ry + cy;\n          }\n\n          xi = mathCos(endAngle) * rx + cx;\n          yi = mathSin(endAngle) * ry + cy;\n          break;\n\n        case CMD.R:\n          x0 = xi = d[i];\n          y0 = yi = d[i + 1];\n          ctx.rect(d[i++], d[i++], d[i++], d[i++]);\n          break;\n\n        case CMD.Z:\n          ctx.closePath();\n          xi = x0;\n          yi = y0;\n      }\n    }\n  }\n};\nPathProxy.CMD = CMD;\nvar _default = PathProxy;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1564:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1479);\n\nvar coordinateSystemCreators = {};\n\nfunction CoordinateSystemManager() {\n  this._coordinateSystems = [];\n}\n\nCoordinateSystemManager.prototype = {\n  constructor: CoordinateSystemManager,\n  create: function (ecModel, api) {\n    var coordinateSystems = [];\n    zrUtil.each(coordinateSystemCreators, function (creater, type) {\n      var list = creater.create(ecModel, api);\n      coordinateSystems = coordinateSystems.concat(list || []);\n    });\n    this._coordinateSystems = coordinateSystems;\n  },\n  update: function (ecModel, api) {\n    zrUtil.each(this._coordinateSystems, function (coordSys) {\n      // FIXME MUST have\n      coordSys.update && coordSys.update(ecModel, api);\n    });\n  },\n  getCoordinateSystems: function () {\n    return this._coordinateSystems.slice();\n  }\n};\n\nCoordinateSystemManager.register = function (type, coordinateSystemCreator) {\n  coordinateSystemCreators[type] = coordinateSystemCreator;\n};\n\nCoordinateSystemManager.get = function (type) {\n  return coordinateSystemCreators[type];\n};\n\nvar _default = CoordinateSystemManager;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1565:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(1494);\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = __webpack_require__(1479);\n\nvar List = __webpack_require__(1614);\n\nvar completeDimensions = __webpack_require__(1615);\n\nvar _model = __webpack_require__(1484);\n\nvar getDataItemValue = _model.getDataItemValue;\nvar converDataValue = _model.converDataValue;\nvar isDataItemOption = _model.isDataItemOption;\n\nvar CoordinateSystem = __webpack_require__(1564);\n\nfunction firstDataNotNull(data) {\n  var i = 0;\n\n  while (i < data.length && data[i] == null) {\n    i++;\n  }\n\n  return data[i];\n}\n\nfunction ifNeedCompleteOrdinalData(data) {\n  var sampleItem = firstDataNotNull(data);\n  return sampleItem != null && !zrUtil.isArray(getDataItemValue(sampleItem));\n}\n/**\n * Helper function to create a list from option data\n */\n\n\nfunction createListFromArray(data, seriesModel, ecModel) {\n  // If data is undefined\n  data = data || [];\n  var coordSysName = seriesModel.get('coordinateSystem');\n  var creator = creators[coordSysName];\n  var registeredCoordSys = CoordinateSystem.get(coordSysName);\n  var completeDimOpt = {\n    encodeDef: seriesModel.get('encode'),\n    dimsDef: seriesModel.get('dimensions')\n  }; // FIXME\n\n  var axesInfo = creator && creator(data, seriesModel, ecModel, completeDimOpt);\n  var dimensions = axesInfo && axesInfo.dimensions;\n\n  if (!dimensions) {\n    // Get dimensions from registered coordinate system\n    dimensions = registeredCoordSys && (registeredCoordSys.getDimensionsInfo ? registeredCoordSys.getDimensionsInfo() : registeredCoordSys.dimensions.slice()) || ['x', 'y'];\n    dimensions = completeDimensions(dimensions, data, completeDimOpt);\n  }\n\n  var categoryIndex = axesInfo ? axesInfo.categoryIndex : -1;\n  var list = new List(dimensions, seriesModel);\n  var nameList = createNameList(axesInfo, data);\n  var categories = {};\n  var dimValueGetter = categoryIndex >= 0 && ifNeedCompleteOrdinalData(data) ? function (itemOpt, dimName, dataIndex, dimIndex) {\n    // If any dataItem is like { value: 10 }\n    if (isDataItemOption(itemOpt)) {\n      list.hasItemOption = true;\n    } // Use dataIndex as ordinal value in categoryAxis\n\n\n    return dimIndex === categoryIndex ? dataIndex : converDataValue(getDataItemValue(itemOpt), dimensions[dimIndex]);\n  } : function (itemOpt, dimName, dataIndex, dimIndex) {\n    var value = getDataItemValue(itemOpt);\n    var val = converDataValue(value && value[dimIndex], dimensions[dimIndex]); // If any dataItem is like { value: 10 }\n\n    if (isDataItemOption(itemOpt)) {\n      list.hasItemOption = true;\n    }\n\n    var categoryAxesModels = axesInfo && axesInfo.categoryAxesModels;\n\n    if (categoryAxesModels && categoryAxesModels[dimName]) {\n      // If given value is a category string\n      if (typeof val === 'string') {\n        // Lazy get categories\n        categories[dimName] = categories[dimName] || categoryAxesModels[dimName].getCategories();\n        val = zrUtil.indexOf(categories[dimName], val);\n\n        if (val < 0 && !isNaN(val)) {\n          // In case some one write '1', '2' istead of 1, 2\n          val = +val;\n        }\n      }\n    }\n\n    return val;\n  };\n  list.hasItemOption = false;\n  list.initData(data, nameList, dimValueGetter);\n  return list;\n}\n\nfunction isStackable(axisType) {\n  return axisType !== 'category' && axisType !== 'time';\n}\n\nfunction getDimTypeByAxis(axisType) {\n  return axisType === 'category' ? 'ordinal' : axisType === 'time' ? 'time' : 'float';\n}\n/**\n * Creaters for each coord system.\n */\n\n\nvar creators = {\n  cartesian2d: function (data, seriesModel, ecModel, completeDimOpt) {\n    var axesModels = zrUtil.map(['xAxis', 'yAxis'], function (name) {\n      return ecModel.queryComponents({\n        mainType: name,\n        index: seriesModel.get(name + 'Index'),\n        id: seriesModel.get(name + 'Id')\n      })[0];\n    });\n    var xAxisModel = axesModels[0];\n    var yAxisModel = axesModels[1];\n    var xAxisType = xAxisModel.get('type');\n    var yAxisType = yAxisModel.get('type');\n    var dimensions = [{\n      name: 'x',\n      type: getDimTypeByAxis(xAxisType),\n      stackable: isStackable(xAxisType)\n    }, {\n      name: 'y',\n      // If two category axes\n      type: getDimTypeByAxis(yAxisType),\n      stackable: isStackable(yAxisType)\n    }];\n    var isXAxisCateogry = xAxisType === 'category';\n    var isYAxisCategory = yAxisType === 'category';\n    dimensions = completeDimensions(dimensions, data, completeDimOpt);\n    var categoryAxesModels = {};\n\n    if (isXAxisCateogry) {\n      categoryAxesModels.x = xAxisModel;\n    }\n\n    if (isYAxisCategory) {\n      categoryAxesModels.y = yAxisModel;\n    }\n\n    return {\n      dimensions: dimensions,\n      categoryIndex: isXAxisCateogry ? 0 : isYAxisCategory ? 1 : -1,\n      categoryAxesModels: categoryAxesModels\n    };\n  },\n  singleAxis: function (data, seriesModel, ecModel, completeDimOpt) {\n    var singleAxisModel = ecModel.queryComponents({\n      mainType: 'singleAxis',\n      index: seriesModel.get('singleAxisIndex'),\n      id: seriesModel.get('singleAxisId')\n    })[0];\n    var singleAxisType = singleAxisModel.get('type');\n    var isCategory = singleAxisType === 'category';\n    var dimensions = [{\n      name: 'single',\n      type: getDimTypeByAxis(singleAxisType),\n      stackable: isStackable(singleAxisType)\n    }];\n    dimensions = completeDimensions(dimensions, data, completeDimOpt);\n    var categoryAxesModels = {};\n\n    if (isCategory) {\n      categoryAxesModels.single = singleAxisModel;\n    }\n\n    return {\n      dimensions: dimensions,\n      categoryIndex: isCategory ? 0 : -1,\n      categoryAxesModels: categoryAxesModels\n    };\n  },\n  polar: function (data, seriesModel, ecModel, completeDimOpt) {\n    var polarModel = ecModel.queryComponents({\n      mainType: 'polar',\n      index: seriesModel.get('polarIndex'),\n      id: seriesModel.get('polarId')\n    })[0];\n    var angleAxisModel = polarModel.findAxisModel('angleAxis');\n    var radiusAxisModel = polarModel.findAxisModel('radiusAxis');\n    var radiusAxisType = radiusAxisModel.get('type');\n    var angleAxisType = angleAxisModel.get('type');\n    var dimensions = [{\n      name: 'radius',\n      type: getDimTypeByAxis(radiusAxisType),\n      stackable: isStackable(radiusAxisType)\n    }, {\n      name: 'angle',\n      type: getDimTypeByAxis(angleAxisType),\n      stackable: isStackable(angleAxisType)\n    }];\n    var isAngleAxisCateogry = angleAxisType === 'category';\n    var isRadiusAxisCateogry = radiusAxisType === 'category';\n    dimensions = completeDimensions(dimensions, data, completeDimOpt);\n    var categoryAxesModels = {};\n\n    if (isRadiusAxisCateogry) {\n      categoryAxesModels.radius = radiusAxisModel;\n    }\n\n    if (isAngleAxisCateogry) {\n      categoryAxesModels.angle = angleAxisModel;\n    }\n\n    return {\n      dimensions: dimensions,\n      categoryIndex: isAngleAxisCateogry ? 1 : isRadiusAxisCateogry ? 0 : -1,\n      categoryAxesModels: categoryAxesModels\n    };\n  },\n  geo: function (data, seriesModel, ecModel, completeDimOpt) {\n    // TODO Region\n    // 多个散点图系列在同一个地区的时候\n    return {\n      dimensions: completeDimensions([{\n        name: 'lng'\n      }, {\n        name: 'lat'\n      }], data, completeDimOpt)\n    };\n  }\n};\n\nfunction createNameList(result, data) {\n  var nameList = [];\n  var categoryDim = result && result.dimensions[result.categoryIndex];\n  var categoryAxisModel;\n\n  if (categoryDim) {\n    categoryAxisModel = result.categoryAxesModels[categoryDim.name];\n  }\n\n  if (categoryAxisModel) {\n    // FIXME Two category axis\n    var categories = categoryAxisModel.getCategories();\n\n    if (categories) {\n      var dataLen = data.length; // Ordered data is given explicitly like\n      // [[3, 0.2], [1, 0.3], [2, 0.15]]\n      // or given scatter data,\n      // pick the category\n\n      if (zrUtil.isArray(data[0]) && data[0].length > 1) {\n        nameList = [];\n\n        for (var i = 0; i < dataLen; i++) {\n          nameList[i] = categories[data[i][result.categoryIndex || 0]];\n        }\n      } else {\n        nameList = categories.slice(0);\n      }\n    }\n  }\n\n  return nameList;\n}\n\nvar _default = createListFromArray;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1566:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(1494);\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = __webpack_require__(1479);\n\nvar env = __webpack_require__(1495);\n\nvar _format = __webpack_require__(1499);\n\nvar formatTime = _format.formatTime;\nvar encodeHTML = _format.encodeHTML;\nvar addCommas = _format.addCommas;\nvar getTooltipMarker = _format.getTooltipMarker;\n\nvar _clazz = __webpack_require__(1505);\n\nvar set = _clazz.set;\nvar get = _clazz.get;\n\nvar modelUtil = __webpack_require__(1484);\n\nvar ComponentModel = __webpack_require__(1508);\n\nvar colorPaletteMixin = __webpack_require__(1616);\n\nvar _layout = __webpack_require__(1517);\n\nvar getLayoutParams = _layout.getLayoutParams;\nvar mergeLayoutParam = _layout.mergeLayoutParam;\nvar SeriesModel = ComponentModel.extend({\n  type: 'series.__base__',\n\n  /**\n   * @readOnly\n   */\n  seriesIndex: 0,\n  // coodinateSystem will be injected in the echarts/CoordinateSystem\n  coordinateSystem: null,\n\n  /**\n   * @type {Object}\n   * @protected\n   */\n  defaultOption: null,\n\n  /**\n   * Data provided for legend\n   * @type {Function}\n   */\n  // PENDING\n  legendDataProvider: null,\n\n  /**\n   * Access path of color for visual\n   */\n  visualColorAccessPath: 'itemStyle.normal.color',\n\n  /**\n   * Support merge layout params.\n   * Only support 'box' now (left/right/top/bottom/width/height).\n   * @type {string|Object} Object can be {ignoreSize: true}\n   * @readOnly\n   */\n  layoutMode: null,\n  init: function (option, parentModel, ecModel, extraOpt) {\n    /**\n     * @type {number}\n     * @readOnly\n     */\n    this.seriesIndex = this.componentIndex;\n    this.mergeDefaultAndTheme(option, ecModel);\n    var data = this.getInitialData(option, ecModel);\n\n    /**\n     * @type {module:echarts/data/List|module:echarts/data/Tree|module:echarts/data/Graph}\n     * @private\n     */\n    set(this, 'dataBeforeProcessed', data); // If we reverse the order (make data firstly, and then make\n    // dataBeforeProcessed by cloneShallow), cloneShallow will\n    // cause data.graph.data !== data when using\n    // module:echarts/data/Graph or module:echarts/data/Tree.\n    // See module:echarts/data/helper/linkList\n\n    this.restoreData();\n  },\n\n  /**\n   * Util for merge default and theme to option\n   * @param  {Object} option\n   * @param  {module:echarts/model/Global} ecModel\n   */\n  mergeDefaultAndTheme: function (option, ecModel) {\n    var layoutMode = this.layoutMode;\n    var inputPositionParams = layoutMode ? getLayoutParams(option) : {}; // Backward compat: using subType on theme.\n    // But if name duplicate between series subType\n    // (for example: parallel) add component mainType,\n    // add suffix 'Series'.\n\n    var themeSubType = this.subType;\n\n    if (ComponentModel.hasClass(themeSubType)) {\n      themeSubType += 'Series';\n    }\n\n    zrUtil.merge(option, ecModel.getTheme().get(this.subType));\n    zrUtil.merge(option, this.getDefaultOption()); // Default label emphasis `show`\n\n    modelUtil.defaultEmphasis(option.label, ['show']);\n    this.fillDataTextStyle(option.data);\n\n    if (layoutMode) {\n      mergeLayoutParam(option, inputPositionParams, layoutMode);\n    }\n  },\n  mergeOption: function (newSeriesOption, ecModel) {\n    newSeriesOption = zrUtil.merge(this.option, newSeriesOption, true);\n    this.fillDataTextStyle(newSeriesOption.data);\n    var layoutMode = this.layoutMode;\n\n    if (layoutMode) {\n      mergeLayoutParam(this.option, newSeriesOption, layoutMode);\n    }\n\n    var data = this.getInitialData(newSeriesOption, ecModel); // TODO Merge data?\n\n    if (data) {\n      set(this, 'data', data);\n      set(this, 'dataBeforeProcessed', data.cloneShallow());\n    }\n  },\n  fillDataTextStyle: function (data) {\n    // Default data label emphasis `show`\n    // FIXME Tree structure data ?\n    // FIXME Performance ?\n    if (data) {\n      var props = ['show'];\n\n      for (var i = 0; i < data.length; i++) {\n        if (data[i] && data[i].label) {\n          modelUtil.defaultEmphasis(data[i].label, props);\n        }\n      }\n    }\n  },\n\n  /**\n   * Init a data structure from data related option in series\n   * Must be overwritten\n   */\n  getInitialData: function () {},\n\n  /**\n   * @param {string} [dataType]\n   * @return {module:echarts/data/List}\n   */\n  getData: function (dataType) {\n    var data = get(this, 'data');\n    return dataType == null ? data : data.getLinkedData(dataType);\n  },\n\n  /**\n   * @param {module:echarts/data/List} data\n   */\n  setData: function (data) {\n    set(this, 'data', data);\n  },\n\n  /**\n   * Get data before processed\n   * @return {module:echarts/data/List}\n   */\n  getRawData: function () {\n    return get(this, 'dataBeforeProcessed');\n  },\n\n  /**\n   * Coord dimension to data dimension.\n   *\n   * By default the result is the same as dimensions of series data.\n   * But in some series data dimensions are different from coord dimensions (i.e.\n   * candlestick and boxplot). Override this method to handle those cases.\n   *\n   * Coord dimension to data dimension can be one-to-many\n   *\n   * @param {string} coordDim\n   * @return {Array.<string>} dimensions on the axis.\n   */\n  coordDimToDataDim: function (coordDim) {\n    return modelUtil.coordDimToDataDim(this.getData(), coordDim);\n  },\n\n  /**\n   * Convert data dimension to coord dimension.\n   *\n   * @param {string|number} dataDim\n   * @return {string}\n   */\n  dataDimToCoordDim: function (dataDim) {\n    return modelUtil.dataDimToCoordDim(this.getData(), dataDim);\n  },\n\n  /**\n   * Get base axis if has coordinate system and has axis.\n   * By default use coordSys.getBaseAxis();\n   * Can be overrided for some chart.\n   * @return {type} description\n   */\n  getBaseAxis: function () {\n    var coordSys = this.coordinateSystem;\n    return coordSys && coordSys.getBaseAxis && coordSys.getBaseAxis();\n  },\n  // FIXME\n\n  /**\n   * Default tooltip formatter\n   *\n   * @param {number} dataIndex\n   * @param {boolean} [multipleSeries=false]\n   * @param {number} [dataType]\n   */\n  formatTooltip: function (dataIndex, multipleSeries, dataType) {\n    function formatArrayValue(value) {\n      var vertially = zrUtil.reduce(value, function (vertially, val, idx) {\n        var dimItem = data.getDimensionInfo(idx);\n        return vertially |= dimItem && dimItem.tooltip !== false && dimItem.tooltipName != null;\n      }, 0);\n      var result = [];\n      var tooltipDims = modelUtil.otherDimToDataDim(data, 'tooltip');\n      tooltipDims.length ? zrUtil.each(tooltipDims, function (dimIdx) {\n        setEachItem(data.get(dimIdx, dataIndex), dimIdx);\n      }) // By default, all dims is used on tooltip.\n      : zrUtil.each(value, setEachItem);\n\n      function setEachItem(val, dimIdx) {\n        var dimInfo = data.getDimensionInfo(dimIdx); // If `dimInfo.tooltip` is not set, show tooltip.\n\n        if (!dimInfo || dimInfo.otherDims.tooltip === false) {\n          return;\n        }\n\n        var dimType = dimInfo.type;\n        var valStr = (vertially ? '- ' + (dimInfo.tooltipName || dimInfo.name) + ': ' : '') + (dimType === 'ordinal' ? val + '' : dimType === 'time' ? multipleSeries ? '' : formatTime('yyyy/MM/dd hh:mm:ss', val) : addCommas(val));\n        valStr && result.push(encodeHTML(valStr));\n      }\n\n      return (vertially ? '<br/>' : '') + result.join(vertially ? '<br/>' : ', ');\n    }\n\n    var data = get(this, 'data');\n    var value = this.getRawValue(dataIndex);\n    var formattedValue = zrUtil.isArray(value) ? formatArrayValue(value) : encodeHTML(addCommas(value));\n    var name = data.getName(dataIndex);\n    var color = data.getItemVisual(dataIndex, 'color');\n\n    if (zrUtil.isObject(color) && color.colorStops) {\n      color = (color.colorStops[0] || {}).color;\n    }\n\n    color = color || 'transparent';\n    var colorEl = getTooltipMarker(color);\n    var seriesName = this.name; // FIXME\n\n    if (seriesName === '\\0-') {\n      // Not show '-'\n      seriesName = '';\n    }\n\n    seriesName = seriesName ? encodeHTML(seriesName) + (!multipleSeries ? '<br/>' : ': ') : '';\n    return !multipleSeries ? seriesName + colorEl + (name ? encodeHTML(name) + ': ' + formattedValue : formattedValue) : colorEl + seriesName + formattedValue;\n  },\n\n  /**\n   * @return {boolean}\n   */\n  isAnimationEnabled: function () {\n    if (env.node) {\n      return false;\n    }\n\n    var animationEnabled = this.getShallow('animation');\n\n    if (animationEnabled) {\n      if (this.getData().count() > this.getShallow('animationThreshold')) {\n        animationEnabled = false;\n      }\n    }\n\n    return animationEnabled;\n  },\n  restoreData: function () {\n    set(this, 'data', get(this, 'dataBeforeProcessed').cloneShallow());\n  },\n  getColorFromPalette: function (name, scope) {\n    var ecModel = this.ecModel; // PENDING\n\n    var color = colorPaletteMixin.getColorFromPalette.call(this, name, scope);\n\n    if (!color) {\n      color = ecModel.getColorFromPalette(name, scope);\n    }\n\n    return color;\n  },\n\n  /**\n   * Get data indices for show tooltip content. See tooltip.\n   * @abstract\n   * @param {Array.<string>|string} dim\n   * @param {Array.<number>} value\n   * @param {module:echarts/coord/single/SingleAxis} baseAxis\n   * @return {Object} {dataIndices, nestestValue}.\n   */\n  getAxisTooltipData: null,\n\n  /**\n   * See tooltip.\n   * @abstract\n   * @param {number} dataIndex\n   * @return {Array.<number>} Point of tooltip. null/undefined can be returned.\n   */\n  getTooltipPosition: null\n});\nzrUtil.mixin(SeriesModel, modelUtil.dataFormatMixin);\nzrUtil.mixin(SeriesModel, colorPaletteMixin);\nvar _default = SeriesModel;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1567:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar numberUtil = __webpack_require__(1486);\n\nvar formatUtil = __webpack_require__(1499);\n\nvar Scale = __webpack_require__(1539);\n\nvar helper = __webpack_require__(1617);\n\n/**\n * Interval scale\n * @module echarts/scale/Interval\n */\nvar roundNumber = numberUtil.round;\n/**\n * @alias module:echarts/coord/scale/Interval\n * @constructor\n */\n\nvar IntervalScale = Scale.extend({\n  type: 'interval',\n  _interval: 0,\n  _intervalPrecision: 2,\n  setExtent: function (start, end) {\n    var thisExtent = this._extent; //start,end may be a Number like '25',so...\n\n    if (!isNaN(start)) {\n      thisExtent[0] = parseFloat(start);\n    }\n\n    if (!isNaN(end)) {\n      thisExtent[1] = parseFloat(end);\n    }\n  },\n  unionExtent: function (other) {\n    var extent = this._extent;\n    other[0] < extent[0] && (extent[0] = other[0]);\n    other[1] > extent[1] && (extent[1] = other[1]); // unionExtent may called by it's sub classes\n\n    IntervalScale.prototype.setExtent.call(this, extent[0], extent[1]);\n  },\n\n  /**\n   * Get interval\n   */\n  getInterval: function () {\n    return this._interval;\n  },\n\n  /**\n   * Set interval\n   */\n  setInterval: function (interval) {\n    this._interval = interval; // Dropped auto calculated niceExtent and use user setted extent\n    // We assume user wan't to set both interval, min, max to get a better result\n\n    this._niceExtent = this._extent.slice();\n    this._intervalPrecision = helper.getIntervalPrecision(interval);\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getTicks: function () {\n    return helper.intervalScaleGetTicks(this._interval, this._extent, this._niceExtent, this._intervalPrecision);\n  },\n\n  /**\n   * @return {Array.<string>}\n   */\n  getTicksLabels: function () {\n    var labels = [];\n    var ticks = this.getTicks();\n\n    for (var i = 0; i < ticks.length; i++) {\n      labels.push(this.getLabel(ticks[i]));\n    }\n\n    return labels;\n  },\n\n  /**\n   * @param {number} data\n   * @param {Object} [opt]\n   * @param {number|string} [opt.precision] If 'auto', use nice presision.\n   * @param {boolean} [opt.pad] returns 1.50 but not 1.5 if precision is 2.\n   * @return {string}\n   */\n  getLabel: function (data, opt) {\n    if (data == null) {\n      return '';\n    }\n\n    var precision = opt && opt.precision;\n\n    if (precision == null) {\n      precision = numberUtil.getPrecisionSafe(data) || 0;\n    } else if (precision === 'auto') {\n      // Should be more precise then tick.\n      precision = this._intervalPrecision;\n    } // (1) If `precision` is set, 12.005 should be display as '12.00500'.\n    // (2) Use roundNumber (toFixed) to avoid scientific notation like '3.5e-7'.\n\n\n    data = roundNumber(data, precision, true);\n    return formatUtil.addCommas(data);\n  },\n\n  /**\n   * Update interval and extent of intervals for nice ticks\n   *\n   * @param {number} [splitNumber = 5] Desired number of ticks\n   * @param {number} [minInterval]\n   * @param {number} [maxInterval]\n   */\n  niceTicks: function (splitNumber, minInterval, maxInterval) {\n    splitNumber = splitNumber || 5;\n    var extent = this._extent;\n    var span = extent[1] - extent[0];\n\n    if (!isFinite(span)) {\n      return;\n    } // User may set axis min 0 and data are all negative\n    // FIXME If it needs to reverse ?\n\n\n    if (span < 0) {\n      span = -span;\n      extent.reverse();\n    }\n\n    var result = helper.intervalScaleNiceTicks(extent, splitNumber, minInterval, maxInterval);\n    this._intervalPrecision = result.intervalPrecision;\n    this._interval = result.interval;\n    this._niceExtent = result.niceTickExtent;\n  },\n\n  /**\n   * Nice extent.\n   * @param {Object} opt\n   * @param {number} [opt.splitNumber = 5] Given approx tick number\n   * @param {boolean} [opt.fixMin=false]\n   * @param {boolean} [opt.fixMax=false]\n   * @param {boolean} [opt.minInterval]\n   * @param {boolean} [opt.maxInterval]\n   */\n  niceExtent: function (opt) {\n    var extent = this._extent; // If extent start and end are same, expand them\n\n    if (extent[0] === extent[1]) {\n      if (extent[0] !== 0) {\n        // Expand extent\n        var expandSize = extent[0]; // In the fowllowing case\n        //      Axis has been fixed max 100\n        //      Plus data are all 100 and axis extent are [100, 100].\n        // Extend to the both side will cause expanded max is larger than fixed max.\n        // So only expand to the smaller side.\n\n        if (!opt.fixMax) {\n          extent[1] += expandSize / 2;\n          extent[0] -= expandSize / 2;\n        } else {\n          extent[0] -= expandSize / 2;\n        }\n      } else {\n        extent[1] = 1;\n      }\n    }\n\n    var span = extent[1] - extent[0]; // If there are no data and extent are [Infinity, -Infinity]\n\n    if (!isFinite(span)) {\n      extent[0] = 0;\n      extent[1] = 1;\n    }\n\n    this.niceTicks(opt.splitNumber, opt.minInterval, opt.maxInterval); // var extent = this._extent;\n\n    var interval = this._interval;\n\n    if (!opt.fixMin) {\n      extent[0] = roundNumber(Math.floor(extent[0] / interval) * interval);\n    }\n\n    if (!opt.fixMax) {\n      extent[1] = roundNumber(Math.ceil(extent[1] / interval) * interval);\n    }\n  }\n});\n/**\n * @return {module:echarts/scale/Time}\n */\n\nIntervalScale.create = function () {\n  return new IntervalScale();\n};\n\nvar _default = IntervalScale;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1568:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1479);\n\nvar _clazz = __webpack_require__(1505);\n\nvar parseClassType = _clazz.parseClassType;\nvar base = 0;\nvar DELIMITER = '_';\n/**\n * @public\n * @param {string} type\n * @return {string}\n */\n\nfunction getUID(type) {\n  // Considering the case of crossing js context,\n  // use Math.random to make id as unique as possible.\n  return [type || '', base++, Math.random()].join(DELIMITER);\n}\n/**\n * @inner\n */\n\n\nfunction enableSubTypeDefaulter(entity) {\n  var subTypeDefaulters = {};\n\n  entity.registerSubTypeDefaulter = function (componentType, defaulter) {\n    componentType = parseClassType(componentType);\n    subTypeDefaulters[componentType.main] = defaulter;\n  };\n\n  entity.determineSubType = function (componentType, option) {\n    var type = option.type;\n\n    if (!type) {\n      var componentTypeMain = parseClassType(componentType).main;\n\n      if (entity.hasSubTypes(componentType) && subTypeDefaulters[componentTypeMain]) {\n        type = subTypeDefaulters[componentTypeMain](option);\n      }\n    }\n\n    return type;\n  };\n\n  return entity;\n}\n/**\n * Topological travel on Activity Network (Activity On Vertices).\n * Dependencies is defined in Model.prototype.dependencies, like ['xAxis', 'yAxis'].\n *\n * If 'xAxis' or 'yAxis' is absent in componentTypeList, just ignore it in topology.\n *\n * If there is circle dependencey, Error will be thrown.\n *\n */\n\n\nfunction enableTopologicalTravel(entity, dependencyGetter) {\n  /**\n   * @public\n   * @param {Array.<string>} targetNameList Target Component type list.\n   *                                           Can be ['aa', 'bb', 'aa.xx']\n   * @param {Array.<string>} fullNameList By which we can build dependency graph.\n   * @param {Function} callback Params: componentType, dependencies.\n   * @param {Object} context Scope of callback.\n   */\n  entity.topologicalTravel = function (targetNameList, fullNameList, callback, context) {\n    if (!targetNameList.length) {\n      return;\n    }\n\n    var result = makeDepndencyGraph(fullNameList);\n    var graph = result.graph;\n    var stack = result.noEntryList;\n    var targetNameSet = {};\n    zrUtil.each(targetNameList, function (name) {\n      targetNameSet[name] = true;\n    });\n\n    while (stack.length) {\n      var currComponentType = stack.pop();\n      var currVertex = graph[currComponentType];\n      var isInTargetNameSet = !!targetNameSet[currComponentType];\n\n      if (isInTargetNameSet) {\n        callback.call(context, currComponentType, currVertex.originalDeps.slice());\n        delete targetNameSet[currComponentType];\n      }\n\n      zrUtil.each(currVertex.successor, isInTargetNameSet ? removeEdgeAndAdd : removeEdge);\n    }\n\n    zrUtil.each(targetNameSet, function () {\n      throw new Error('Circle dependency may exists');\n    });\n\n    function removeEdge(succComponentType) {\n      graph[succComponentType].entryCount--;\n\n      if (graph[succComponentType].entryCount === 0) {\n        stack.push(succComponentType);\n      }\n    } // Consider this case: legend depends on series, and we call\n    // chart.setOption({series: [...]}), where only series is in option.\n    // If we do not have 'removeEdgeAndAdd', legendModel.mergeOption will\n    // not be called, but only sereis.mergeOption is called. Thus legend\n    // have no chance to update its local record about series (like which\n    // name of series is available in legend).\n\n\n    function removeEdgeAndAdd(succComponentType) {\n      targetNameSet[succComponentType] = true;\n      removeEdge(succComponentType);\n    }\n  };\n  /**\n   * DepndencyGraph: {Object}\n   * key: conponentType,\n   * value: {\n   *     successor: [conponentTypes...],\n   *     originalDeps: [conponentTypes...],\n   *     entryCount: {number}\n   * }\n   */\n\n\n  function makeDepndencyGraph(fullNameList) {\n    var graph = {};\n    var noEntryList = [];\n    zrUtil.each(fullNameList, function (name) {\n      var thisItem = createDependencyGraphItem(graph, name);\n      var originalDeps = thisItem.originalDeps = dependencyGetter(name);\n      var availableDeps = getAvailableDependencies(originalDeps, fullNameList);\n      thisItem.entryCount = availableDeps.length;\n\n      if (thisItem.entryCount === 0) {\n        noEntryList.push(name);\n      }\n\n      zrUtil.each(availableDeps, function (dependentName) {\n        if (zrUtil.indexOf(thisItem.predecessor, dependentName) < 0) {\n          thisItem.predecessor.push(dependentName);\n        }\n\n        var thatItem = createDependencyGraphItem(graph, dependentName);\n\n        if (zrUtil.indexOf(thatItem.successor, dependentName) < 0) {\n          thatItem.successor.push(name);\n        }\n      });\n    });\n    return {\n      graph: graph,\n      noEntryList: noEntryList\n    };\n  }\n\n  function createDependencyGraphItem(graph, name) {\n    if (!graph[name]) {\n      graph[name] = {\n        predecessor: [],\n        successor: []\n      };\n    }\n\n    return graph[name];\n  }\n\n  function getAvailableDependencies(originalDeps, fullNameList) {\n    var availableDeps = [];\n    zrUtil.each(originalDeps, function (dep) {\n      zrUtil.indexOf(fullNameList, dep) >= 0 && availableDeps.push(dep);\n    });\n    return availableDeps;\n  }\n}\n\nexports.getUID = getUID;\nexports.enableSubTypeDefaulter = enableSubTypeDefaulter;\nexports.enableTopologicalTravel = enableTopologicalTravel;\n\n/***/ }),\n\n/***/ 1569:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1479);\n\nvar graphic = __webpack_require__(1483);\n\nvar BoundingRect = __webpack_require__(1497);\n\n// Symbol factory\n\n/**\n * Triangle shape\n * @inner\n */\nvar Triangle = graphic.extendShape({\n  type: 'triangle',\n  shape: {\n    cx: 0,\n    cy: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (path, shape) {\n    var cx = shape.cx;\n    var cy = shape.cy;\n    var width = shape.width / 2;\n    var height = shape.height / 2;\n    path.moveTo(cx, cy - height);\n    path.lineTo(cx + width, cy + height);\n    path.lineTo(cx - width, cy + height);\n    path.closePath();\n  }\n});\n/**\n * Diamond shape\n * @inner\n */\n\nvar Diamond = graphic.extendShape({\n  type: 'diamond',\n  shape: {\n    cx: 0,\n    cy: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (path, shape) {\n    var cx = shape.cx;\n    var cy = shape.cy;\n    var width = shape.width / 2;\n    var height = shape.height / 2;\n    path.moveTo(cx, cy - height);\n    path.lineTo(cx + width, cy);\n    path.lineTo(cx, cy + height);\n    path.lineTo(cx - width, cy);\n    path.closePath();\n  }\n});\n/**\n * Pin shape\n * @inner\n */\n\nvar Pin = graphic.extendShape({\n  type: 'pin',\n  shape: {\n    // x, y on the cusp\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (path, shape) {\n    var x = shape.x;\n    var y = shape.y;\n    var w = shape.width / 5 * 3; // Height must be larger than width\n\n    var h = Math.max(w, shape.height);\n    var r = w / 2; // Dist on y with tangent point and circle center\n\n    var dy = r * r / (h - r);\n    var cy = y - h + r + dy;\n    var angle = Math.asin(dy / r); // Dist on x with tangent point and circle center\n\n    var dx = Math.cos(angle) * r;\n    var tanX = Math.sin(angle);\n    var tanY = Math.cos(angle);\n    var cpLen = r * 0.6;\n    var cpLen2 = r * 0.7;\n    path.moveTo(x - dx, cy + dy);\n    path.arc(x, cy, r, Math.PI - angle, Math.PI * 2 + angle);\n    path.bezierCurveTo(x + dx - tanX * cpLen, cy + dy + tanY * cpLen, x, y - cpLen2, x, y);\n    path.bezierCurveTo(x, y - cpLen2, x - dx + tanX * cpLen, cy + dy + tanY * cpLen, x - dx, cy + dy);\n    path.closePath();\n  }\n});\n/**\n * Arrow shape\n * @inner\n */\n\nvar Arrow = graphic.extendShape({\n  type: 'arrow',\n  shape: {\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (ctx, shape) {\n    var height = shape.height;\n    var width = shape.width;\n    var x = shape.x;\n    var y = shape.y;\n    var dx = width / 3 * 2;\n    ctx.moveTo(x, y);\n    ctx.lineTo(x + dx, y + height);\n    ctx.lineTo(x, y + height / 4 * 3);\n    ctx.lineTo(x - dx, y + height);\n    ctx.lineTo(x, y);\n    ctx.closePath();\n  }\n});\n/**\n * Map of path contructors\n * @type {Object.<string, module:zrender/graphic/Path>}\n */\n\nvar symbolCtors = {\n  line: graphic.Line,\n  rect: graphic.Rect,\n  roundRect: graphic.Rect,\n  square: graphic.Rect,\n  circle: graphic.Circle,\n  diamond: Diamond,\n  pin: Pin,\n  arrow: Arrow,\n  triangle: Triangle\n};\nvar symbolShapeMakers = {\n  line: function (x, y, w, h, shape) {\n    // FIXME\n    shape.x1 = x;\n    shape.y1 = y + h / 2;\n    shape.x2 = x + w;\n    shape.y2 = y + h / 2;\n  },\n  rect: function (x, y, w, h, shape) {\n    shape.x = x;\n    shape.y = y;\n    shape.width = w;\n    shape.height = h;\n  },\n  roundRect: function (x, y, w, h, shape) {\n    shape.x = x;\n    shape.y = y;\n    shape.width = w;\n    shape.height = h;\n    shape.r = Math.min(w, h) / 4;\n  },\n  square: function (x, y, w, h, shape) {\n    var size = Math.min(w, h);\n    shape.x = x;\n    shape.y = y;\n    shape.width = size;\n    shape.height = size;\n  },\n  circle: function (x, y, w, h, shape) {\n    // Put circle in the center of square\n    shape.cx = x + w / 2;\n    shape.cy = y + h / 2;\n    shape.r = Math.min(w, h) / 2;\n  },\n  diamond: function (x, y, w, h, shape) {\n    shape.cx = x + w / 2;\n    shape.cy = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  },\n  pin: function (x, y, w, h, shape) {\n    shape.x = x + w / 2;\n    shape.y = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  },\n  arrow: function (x, y, w, h, shape) {\n    shape.x = x + w / 2;\n    shape.y = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  },\n  triangle: function (x, y, w, h, shape) {\n    shape.cx = x + w / 2;\n    shape.cy = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  }\n};\nvar symbolBuildProxies = {};\nzrUtil.each(symbolCtors, function (Ctor, name) {\n  symbolBuildProxies[name] = new Ctor();\n});\nvar SymbolClz = graphic.extendShape({\n  type: 'symbol',\n  shape: {\n    symbolType: '',\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  beforeBrush: function () {\n    var style = this.style;\n    var shape = this.shape; // FIXME\n\n    if (shape.symbolType === 'pin' && style.textPosition === 'inside') {\n      style.textPosition = ['50%', '40%'];\n      style.textAlign = 'center';\n      style.textVerticalAlign = 'middle';\n    }\n  },\n  buildPath: function (ctx, shape, inBundle) {\n    var symbolType = shape.symbolType;\n    var proxySymbol = symbolBuildProxies[symbolType];\n\n    if (shape.symbolType !== 'none') {\n      if (!proxySymbol) {\n        // Default rect\n        symbolType = 'rect';\n        proxySymbol = symbolBuildProxies[symbolType];\n      }\n\n      symbolShapeMakers[symbolType](shape.x, shape.y, shape.width, shape.height, proxySymbol.shape);\n      proxySymbol.buildPath(ctx, proxySymbol.shape, inBundle);\n    }\n  }\n}); // Provide setColor helper method to avoid determine if set the fill or stroke outside\n\nfunction symbolPathSetColor(color, innerColor) {\n  if (this.type !== 'image') {\n    var symbolStyle = this.style;\n    var symbolShape = this.shape;\n\n    if (symbolShape && symbolShape.symbolType === 'line') {\n      symbolStyle.stroke = color;\n    } else if (this.__isEmptyBrush) {\n      symbolStyle.stroke = color;\n      symbolStyle.fill = innerColor || '#fff';\n    } else {\n      // FIXME 判断图形默认是填充还是描边，使用 onlyStroke ?\n      symbolStyle.fill && (symbolStyle.fill = color);\n      symbolStyle.stroke && (symbolStyle.stroke = color);\n    }\n\n    this.dirty(false);\n  }\n}\n/**\n * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\n * @param {string} symbolType\n * @param {number} x\n * @param {number} y\n * @param {number} w\n * @param {number} h\n * @param {string} color\n * @param {boolean} [keepAspect=false] whether to keep the ratio of w/h,\n *                            for path and image only.\n */\n\n\nfunction createSymbol(symbolType, x, y, w, h, color, keepAspect) {\n  // TODO Support image object, DynamicImage.\n  var isEmpty = symbolType.indexOf('empty') === 0;\n\n  if (isEmpty) {\n    symbolType = symbolType.substr(5, 1).toLowerCase() + symbolType.substr(6);\n  }\n\n  var symbolPath;\n\n  if (symbolType.indexOf('image://') === 0) {\n    symbolPath = graphic.makeImage(symbolType.slice(8), new BoundingRect(x, y, w, h), keepAspect ? 'center' : 'cover');\n  } else if (symbolType.indexOf('path://') === 0) {\n    symbolPath = graphic.makePath(symbolType.slice(7), {}, new BoundingRect(x, y, w, h), keepAspect ? 'center' : 'cover');\n  } else {\n    symbolPath = new SymbolClz({\n      shape: {\n        symbolType: symbolType,\n        x: x,\n        y: y,\n        width: w,\n        height: h\n      }\n    });\n  }\n\n  symbolPath.__isEmptyBrush = isEmpty;\n  symbolPath.setColor = symbolPathSetColor;\n  symbolPath.setColor(color);\n  return symbolPath;\n}\n\nexports.createSymbol = createSymbol;\n\n/***/ }),\n\n/***/ 1570:\n/***/ (function(module, exports) {\n\nvar ORIGIN_METHOD = '\\0__throttleOriginMethod';\nvar RATE = '\\0__throttleRate';\nvar THROTTLE_TYPE = '\\0__throttleType';\n/**\n * @public\n * @param {(Function)} fn\n * @param {number} [delay=0] Unit: ms.\n * @param {boolean} [debounce=false]\n *        true: If call interval less than `delay`, only the last call works.\n *        false: If call interval less than `delay, call works on fixed rate.\n * @return {(Function)} throttled fn.\n */\n\nfunction throttle(fn, delay, debounce) {\n  var currCall;\n  var lastCall = 0;\n  var lastExec = 0;\n  var timer = null;\n  var diff;\n  var scope;\n  var args;\n  var debounceNextCall;\n  delay = delay || 0;\n\n  function exec() {\n    lastExec = new Date().getTime();\n    timer = null;\n    fn.apply(scope, args || []);\n  }\n\n  var cb = function () {\n    currCall = new Date().getTime();\n    scope = this;\n    args = arguments;\n    var thisDelay = debounceNextCall || delay;\n    var thisDebounce = debounceNextCall || debounce;\n    debounceNextCall = null;\n    diff = currCall - (thisDebounce ? lastCall : lastExec) - thisDelay;\n    clearTimeout(timer);\n\n    if (thisDebounce) {\n      timer = setTimeout(exec, thisDelay);\n    } else {\n      if (diff >= 0) {\n        exec();\n      } else {\n        timer = setTimeout(exec, -diff);\n      }\n    }\n\n    lastCall = currCall;\n  };\n  /**\n   * Clear throttle.\n   * @public\n   */\n\n\n  cb.clear = function () {\n    if (timer) {\n      clearTimeout(timer);\n      timer = null;\n    }\n  };\n  /**\n   * Enable debounce once.\n   */\n\n\n  cb.debounceNextCall = function (debounceDelay) {\n    debounceNextCall = debounceDelay;\n  };\n\n  return cb;\n}\n/**\n * Create throttle method or update throttle rate.\n *\n * @example\n * ComponentView.prototype.render = function () {\n *     ...\n *     throttle.createOrUpdate(\n *         this,\n *         '_dispatchAction',\n *         this.model.get('throttle'),\n *         'fixRate'\n *     );\n * };\n * ComponentView.prototype.remove = function () {\n *     throttle.clear(this, '_dispatchAction');\n * };\n * ComponentView.prototype.dispose = function () {\n *     throttle.clear(this, '_dispatchAction');\n * };\n *\n * @public\n * @param {Object} obj\n * @param {string} fnAttr\n * @param {number} [rate]\n * @param {string} [throttleType='fixRate'] 'fixRate' or 'debounce'\n * @return {Function} throttled function.\n */\n\n\nfunction createOrUpdate(obj, fnAttr, rate, throttleType) {\n  var fn = obj[fnAttr];\n\n  if (!fn) {\n    return;\n  }\n\n  var originFn = fn[ORIGIN_METHOD] || fn;\n  var lastThrottleType = fn[THROTTLE_TYPE];\n  var lastRate = fn[RATE];\n\n  if (lastRate !== rate || lastThrottleType !== throttleType) {\n    if (rate == null || !throttleType) {\n      return obj[fnAttr] = originFn;\n    }\n\n    fn = obj[fnAttr] = throttle(originFn, rate, throttleType === 'debounce');\n    fn[ORIGIN_METHOD] = originFn;\n    fn[THROTTLE_TYPE] = throttleType;\n    fn[RATE] = rate;\n  }\n\n  return fn;\n}\n/**\n * Clear throttle. Example see throttle.createOrUpdate.\n *\n * @public\n * @param {Object} obj\n * @param {string} fnAttr\n */\n\n\nfunction clear(obj, fnAttr) {\n  var fn = obj[fnAttr];\n\n  if (fn && fn[ORIGIN_METHOD]) {\n    obj[fnAttr] = fn[ORIGIN_METHOD];\n  }\n}\n\nexports.throttle = throttle;\nexports.createOrUpdate = createOrUpdate;\nexports.clear = clear;\n\n/***/ }),\n\n/***/ 1574:\n/***/ (function(module, exports) {\n\n// https://github.com/mziccard/node-timsort\nvar DEFAULT_MIN_MERGE = 32;\nvar DEFAULT_MIN_GALLOPING = 7;\nvar DEFAULT_TMP_STORAGE_LENGTH = 256;\n\nfunction minRunLength(n) {\n  var r = 0;\n\n  while (n >= DEFAULT_MIN_MERGE) {\n    r |= n & 1;\n    n >>= 1;\n  }\n\n  return n + r;\n}\n\nfunction makeAscendingRun(array, lo, hi, compare) {\n  var runHi = lo + 1;\n\n  if (runHi === hi) {\n    return 1;\n  }\n\n  if (compare(array[runHi++], array[lo]) < 0) {\n    while (runHi < hi && compare(array[runHi], array[runHi - 1]) < 0) {\n      runHi++;\n    }\n\n    reverseRun(array, lo, runHi);\n  } else {\n    while (runHi < hi && compare(array[runHi], array[runHi - 1]) >= 0) {\n      runHi++;\n    }\n  }\n\n  return runHi - lo;\n}\n\nfunction reverseRun(array, lo, hi) {\n  hi--;\n\n  while (lo < hi) {\n    var t = array[lo];\n    array[lo++] = array[hi];\n    array[hi--] = t;\n  }\n}\n\nfunction binaryInsertionSort(array, lo, hi, start, compare) {\n  if (start === lo) {\n    start++;\n  }\n\n  for (; start < hi; start++) {\n    var pivot = array[start];\n    var left = lo;\n    var right = start;\n    var mid;\n\n    while (left < right) {\n      mid = left + right >>> 1;\n\n      if (compare(pivot, array[mid]) < 0) {\n        right = mid;\n      } else {\n        left = mid + 1;\n      }\n    }\n\n    var n = start - left;\n\n    switch (n) {\n      case 3:\n        array[left + 3] = array[left + 2];\n\n      case 2:\n        array[left + 2] = array[left + 1];\n\n      case 1:\n        array[left + 1] = array[left];\n        break;\n\n      default:\n        while (n > 0) {\n          array[left + n] = array[left + n - 1];\n          n--;\n        }\n\n    }\n\n    array[left] = pivot;\n  }\n}\n\nfunction gallopLeft(value, array, start, length, hint, compare) {\n  var lastOffset = 0;\n  var maxOffset = 0;\n  var offset = 1;\n\n  if (compare(value, array[start + hint]) > 0) {\n    maxOffset = length - hint;\n\n    while (offset < maxOffset && compare(value, array[start + hint + offset]) > 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    lastOffset += hint;\n    offset += hint;\n  } else {\n    maxOffset = hint + 1;\n\n    while (offset < maxOffset && compare(value, array[start + hint - offset]) <= 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    var tmp = lastOffset;\n    lastOffset = hint - offset;\n    offset = hint - tmp;\n  }\n\n  lastOffset++;\n\n  while (lastOffset < offset) {\n    var m = lastOffset + (offset - lastOffset >>> 1);\n\n    if (compare(value, array[start + m]) > 0) {\n      lastOffset = m + 1;\n    } else {\n      offset = m;\n    }\n  }\n\n  return offset;\n}\n\nfunction gallopRight(value, array, start, length, hint, compare) {\n  var lastOffset = 0;\n  var maxOffset = 0;\n  var offset = 1;\n\n  if (compare(value, array[start + hint]) < 0) {\n    maxOffset = hint + 1;\n\n    while (offset < maxOffset && compare(value, array[start + hint - offset]) < 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    var tmp = lastOffset;\n    lastOffset = hint - offset;\n    offset = hint - tmp;\n  } else {\n    maxOffset = length - hint;\n\n    while (offset < maxOffset && compare(value, array[start + hint + offset]) >= 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    lastOffset += hint;\n    offset += hint;\n  }\n\n  lastOffset++;\n\n  while (lastOffset < offset) {\n    var m = lastOffset + (offset - lastOffset >>> 1);\n\n    if (compare(value, array[start + m]) < 0) {\n      offset = m;\n    } else {\n      lastOffset = m + 1;\n    }\n  }\n\n  return offset;\n}\n\nfunction TimSort(array, compare) {\n  var minGallop = DEFAULT_MIN_GALLOPING;\n  var length = 0;\n  var tmpStorageLength = DEFAULT_TMP_STORAGE_LENGTH;\n  var stackLength = 0;\n  var runStart;\n  var runLength;\n  var stackSize = 0;\n  length = array.length;\n\n  if (length < 2 * DEFAULT_TMP_STORAGE_LENGTH) {\n    tmpStorageLength = length >>> 1;\n  }\n\n  var tmp = [];\n  stackLength = length < 120 ? 5 : length < 1542 ? 10 : length < 119151 ? 19 : 40;\n  runStart = [];\n  runLength = [];\n\n  function pushRun(_runStart, _runLength) {\n    runStart[stackSize] = _runStart;\n    runLength[stackSize] = _runLength;\n    stackSize += 1;\n  }\n\n  function mergeRuns() {\n    while (stackSize > 1) {\n      var n = stackSize - 2;\n\n      if (n >= 1 && runLength[n - 1] <= runLength[n] + runLength[n + 1] || n >= 2 && runLength[n - 2] <= runLength[n] + runLength[n - 1]) {\n        if (runLength[n - 1] < runLength[n + 1]) {\n          n--;\n        }\n      } else if (runLength[n] > runLength[n + 1]) {\n        break;\n      }\n\n      mergeAt(n);\n    }\n  }\n\n  function forceMergeRuns() {\n    while (stackSize > 1) {\n      var n = stackSize - 2;\n\n      if (n > 0 && runLength[n - 1] < runLength[n + 1]) {\n        n--;\n      }\n\n      mergeAt(n);\n    }\n  }\n\n  function mergeAt(i) {\n    var start1 = runStart[i];\n    var length1 = runLength[i];\n    var start2 = runStart[i + 1];\n    var length2 = runLength[i + 1];\n    runLength[i] = length1 + length2;\n\n    if (i === stackSize - 3) {\n      runStart[i + 1] = runStart[i + 2];\n      runLength[i + 1] = runLength[i + 2];\n    }\n\n    stackSize--;\n    var k = gallopRight(array[start2], array, start1, length1, 0, compare);\n    start1 += k;\n    length1 -= k;\n\n    if (length1 === 0) {\n      return;\n    }\n\n    length2 = gallopLeft(array[start1 + length1 - 1], array, start2, length2, length2 - 1, compare);\n\n    if (length2 === 0) {\n      return;\n    }\n\n    if (length1 <= length2) {\n      mergeLow(start1, length1, start2, length2);\n    } else {\n      mergeHigh(start1, length1, start2, length2);\n    }\n  }\n\n  function mergeLow(start1, length1, start2, length2) {\n    var i = 0;\n\n    for (i = 0; i < length1; i++) {\n      tmp[i] = array[start1 + i];\n    }\n\n    var cursor1 = 0;\n    var cursor2 = start2;\n    var dest = start1;\n    array[dest++] = array[cursor2++];\n\n    if (--length2 === 0) {\n      for (i = 0; i < length1; i++) {\n        array[dest + i] = tmp[cursor1 + i];\n      }\n\n      return;\n    }\n\n    if (length1 === 1) {\n      for (i = 0; i < length2; i++) {\n        array[dest + i] = array[cursor2 + i];\n      }\n\n      array[dest + length2] = tmp[cursor1];\n      return;\n    }\n\n    var _minGallop = minGallop;\n    var count1, count2, exit;\n\n    while (1) {\n      count1 = 0;\n      count2 = 0;\n      exit = false;\n\n      do {\n        if (compare(array[cursor2], tmp[cursor1]) < 0) {\n          array[dest++] = array[cursor2++];\n          count2++;\n          count1 = 0;\n\n          if (--length2 === 0) {\n            exit = true;\n            break;\n          }\n        } else {\n          array[dest++] = tmp[cursor1++];\n          count1++;\n          count2 = 0;\n\n          if (--length1 === 1) {\n            exit = true;\n            break;\n          }\n        }\n      } while ((count1 | count2) < _minGallop);\n\n      if (exit) {\n        break;\n      }\n\n      do {\n        count1 = gallopRight(array[cursor2], tmp, cursor1, length1, 0, compare);\n\n        if (count1 !== 0) {\n          for (i = 0; i < count1; i++) {\n            array[dest + i] = tmp[cursor1 + i];\n          }\n\n          dest += count1;\n          cursor1 += count1;\n          length1 -= count1;\n\n          if (length1 <= 1) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest++] = array[cursor2++];\n\n        if (--length2 === 0) {\n          exit = true;\n          break;\n        }\n\n        count2 = gallopLeft(tmp[cursor1], array, cursor2, length2, 0, compare);\n\n        if (count2 !== 0) {\n          for (i = 0; i < count2; i++) {\n            array[dest + i] = array[cursor2 + i];\n          }\n\n          dest += count2;\n          cursor2 += count2;\n          length2 -= count2;\n\n          if (length2 === 0) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest++] = tmp[cursor1++];\n\n        if (--length1 === 1) {\n          exit = true;\n          break;\n        }\n\n        _minGallop--;\n      } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n      if (exit) {\n        break;\n      }\n\n      if (_minGallop < 0) {\n        _minGallop = 0;\n      }\n\n      _minGallop += 2;\n    }\n\n    minGallop = _minGallop;\n    minGallop < 1 && (minGallop = 1);\n\n    if (length1 === 1) {\n      for (i = 0; i < length2; i++) {\n        array[dest + i] = array[cursor2 + i];\n      }\n\n      array[dest + length2] = tmp[cursor1];\n    } else if (length1 === 0) {\n      throw new Error(); // throw new Error('mergeLow preconditions were not respected');\n    } else {\n      for (i = 0; i < length1; i++) {\n        array[dest + i] = tmp[cursor1 + i];\n      }\n    }\n  }\n\n  function mergeHigh(start1, length1, start2, length2) {\n    var i = 0;\n\n    for (i = 0; i < length2; i++) {\n      tmp[i] = array[start2 + i];\n    }\n\n    var cursor1 = start1 + length1 - 1;\n    var cursor2 = length2 - 1;\n    var dest = start2 + length2 - 1;\n    var customCursor = 0;\n    var customDest = 0;\n    array[dest--] = array[cursor1--];\n\n    if (--length1 === 0) {\n      customCursor = dest - (length2 - 1);\n\n      for (i = 0; i < length2; i++) {\n        array[customCursor + i] = tmp[i];\n      }\n\n      return;\n    }\n\n    if (length2 === 1) {\n      dest -= length1;\n      cursor1 -= length1;\n      customDest = dest + 1;\n      customCursor = cursor1 + 1;\n\n      for (i = length1 - 1; i >= 0; i--) {\n        array[customDest + i] = array[customCursor + i];\n      }\n\n      array[dest] = tmp[cursor2];\n      return;\n    }\n\n    var _minGallop = minGallop;\n\n    while (true) {\n      var count1 = 0;\n      var count2 = 0;\n      var exit = false;\n\n      do {\n        if (compare(tmp[cursor2], array[cursor1]) < 0) {\n          array[dest--] = array[cursor1--];\n          count1++;\n          count2 = 0;\n\n          if (--length1 === 0) {\n            exit = true;\n            break;\n          }\n        } else {\n          array[dest--] = tmp[cursor2--];\n          count2++;\n          count1 = 0;\n\n          if (--length2 === 1) {\n            exit = true;\n            break;\n          }\n        }\n      } while ((count1 | count2) < _minGallop);\n\n      if (exit) {\n        break;\n      }\n\n      do {\n        count1 = length1 - gallopRight(tmp[cursor2], array, start1, length1, length1 - 1, compare);\n\n        if (count1 !== 0) {\n          dest -= count1;\n          cursor1 -= count1;\n          length1 -= count1;\n          customDest = dest + 1;\n          customCursor = cursor1 + 1;\n\n          for (i = count1 - 1; i >= 0; i--) {\n            array[customDest + i] = array[customCursor + i];\n          }\n\n          if (length1 === 0) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest--] = tmp[cursor2--];\n\n        if (--length2 === 1) {\n          exit = true;\n          break;\n        }\n\n        count2 = length2 - gallopLeft(array[cursor1], tmp, 0, length2, length2 - 1, compare);\n\n        if (count2 !== 0) {\n          dest -= count2;\n          cursor2 -= count2;\n          length2 -= count2;\n          customDest = dest + 1;\n          customCursor = cursor2 + 1;\n\n          for (i = 0; i < count2; i++) {\n            array[customDest + i] = tmp[customCursor + i];\n          }\n\n          if (length2 <= 1) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest--] = array[cursor1--];\n\n        if (--length1 === 0) {\n          exit = true;\n          break;\n        }\n\n        _minGallop--;\n      } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n      if (exit) {\n        break;\n      }\n\n      if (_minGallop < 0) {\n        _minGallop = 0;\n      }\n\n      _minGallop += 2;\n    }\n\n    minGallop = _minGallop;\n\n    if (minGallop < 1) {\n      minGallop = 1;\n    }\n\n    if (length2 === 1) {\n      dest -= length1;\n      cursor1 -= length1;\n      customDest = dest + 1;\n      customCursor = cursor1 + 1;\n\n      for (i = length1 - 1; i >= 0; i--) {\n        array[customDest + i] = array[customCursor + i];\n      }\n\n      array[dest] = tmp[cursor2];\n    } else if (length2 === 0) {\n      throw new Error(); // throw new Error('mergeHigh preconditions were not respected');\n    } else {\n      customCursor = dest - (length2 - 1);\n\n      for (i = 0; i < length2; i++) {\n        array[customCursor + i] = tmp[i];\n      }\n    }\n  }\n\n  this.mergeRuns = mergeRuns;\n  this.forceMergeRuns = forceMergeRuns;\n  this.pushRun = pushRun;\n}\n\nfunction sort(array, compare, lo, hi) {\n  if (!lo) {\n    lo = 0;\n  }\n\n  if (!hi) {\n    hi = array.length;\n  }\n\n  var remaining = hi - lo;\n\n  if (remaining < 2) {\n    return;\n  }\n\n  var runLength = 0;\n\n  if (remaining < DEFAULT_MIN_MERGE) {\n    runLength = makeAscendingRun(array, lo, hi, compare);\n    binaryInsertionSort(array, lo, hi, lo + runLength, compare);\n    return;\n  }\n\n  var ts = new TimSort(array, compare);\n  var minRun = minRunLength(remaining);\n\n  do {\n    runLength = makeAscendingRun(array, lo, hi, compare);\n\n    if (runLength < minRun) {\n      var force = remaining;\n\n      if (force > minRun) {\n        force = minRun;\n      }\n\n      binaryInsertionSort(array, lo, lo + force, lo + runLength, compare);\n      runLength = force;\n    }\n\n    ts.pushRun(lo, runLength);\n    ts.mergeRuns();\n    remaining -= runLength;\n    lo += runLength;\n  } while (remaining !== 0);\n\n  ts.forceMergeRuns();\n}\n\nmodule.exports = sort;\n\n/***/ }),\n\n/***/ 1575:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1479);\n\nvar Style = __webpack_require__(1644);\n\nvar Element = __webpack_require__(1633);\n\nvar RectText = __webpack_require__(1778);\n\n/**\n * 可绘制的图形基类\n * Base class of all displayable graphic objects\n * @module zrender/graphic/Displayable\n */\n\n/**\n * @alias module:zrender/graphic/Displayable\n * @extends module:zrender/Element\n * @extends module:zrender/graphic/mixin/RectText\n */\nfunction Displayable(opts) {\n  opts = opts || {};\n  Element.call(this, opts); // Extend properties\n\n  for (var name in opts) {\n    if (opts.hasOwnProperty(name) && name !== 'style') {\n      this[name] = opts[name];\n    }\n  }\n  /**\n   * @type {module:zrender/graphic/Style}\n   */\n\n\n  this.style = new Style(opts.style, this);\n  this._rect = null; // Shapes for cascade clipping.\n\n  this.__clipPaths = []; // FIXME Stateful must be mixined after style is setted\n  // Stateful.call(this, opts);\n}\n\nDisplayable.prototype = {\n  constructor: Displayable,\n  type: 'displayable',\n\n  /**\n   * Displayable 是否为脏，Painter 中会根据该标记判断是否需要是否需要重新绘制\n   * Dirty flag. From which painter will determine if this displayable object needs brush\n   * @name module:zrender/graphic/Displayable#__dirty\n   * @type {boolean}\n   */\n  __dirty: true,\n\n  /**\n   * 图形是否可见，为true时不绘制图形，但是仍能触发鼠标事件\n   * If ignore drawing of the displayable object. Mouse event will still be triggered\n   * @name module:/zrender/graphic/Displayable#invisible\n   * @type {boolean}\n   * @default false\n   */\n  invisible: false,\n\n  /**\n   * @name module:/zrender/graphic/Displayable#z\n   * @type {number}\n   * @default 0\n   */\n  z: 0,\n\n  /**\n   * @name module:/zrender/graphic/Displayable#z\n   * @type {number}\n   * @default 0\n   */\n  z2: 0,\n\n  /**\n   * z层level，决定绘画在哪层canvas中\n   * @name module:/zrender/graphic/Displayable#zlevel\n   * @type {number}\n   * @default 0\n   */\n  zlevel: 0,\n\n  /**\n   * 是否可拖拽\n   * @name module:/zrender/graphic/Displayable#draggable\n   * @type {boolean}\n   * @default false\n   */\n  draggable: false,\n\n  /**\n   * 是否正在拖拽\n   * @name module:/zrender/graphic/Displayable#draggable\n   * @type {boolean}\n   * @default false\n   */\n  dragging: false,\n\n  /**\n   * 是否相应鼠标事件\n   * @name module:/zrender/graphic/Displayable#silent\n   * @type {boolean}\n   * @default false\n   */\n  silent: false,\n\n  /**\n   * If enable culling\n   * @type {boolean}\n   * @default false\n   */\n  culling: false,\n\n  /**\n   * Mouse cursor when hovered\n   * @name module:/zrender/graphic/Displayable#cursor\n   * @type {string}\n   */\n  cursor: 'pointer',\n\n  /**\n   * If hover area is bounding rect\n   * @name module:/zrender/graphic/Displayable#rectHover\n   * @type {string}\n   */\n  rectHover: false,\n\n  /**\n   * Render the element progressively when the value >= 0,\n   * usefull for large data.\n   * @type {number}\n   */\n  progressive: -1,\n  beforeBrush: function (ctx) {},\n  afterBrush: function (ctx) {},\n\n  /**\n   * 图形绘制方法\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  // Interface\n  brush: function (ctx, prevEl) {},\n\n  /**\n   * 获取最小包围盒\n   * @return {module:zrender/core/BoundingRect}\n   */\n  // Interface\n  getBoundingRect: function () {},\n\n  /**\n   * 判断坐标 x, y 是否在图形上\n   * If displayable element contain coord x, y\n   * @param  {number} x\n   * @param  {number} y\n   * @return {boolean}\n   */\n  contain: function (x, y) {\n    return this.rectContain(x, y);\n  },\n\n  /**\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  traverse: function (cb, context) {\n    cb.call(context, this);\n  },\n\n  /**\n   * 判断坐标 x, y 是否在图形的包围盒上\n   * If bounding rect of element contain coord x, y\n   * @param  {number} x\n   * @param  {number} y\n   * @return {boolean}\n   */\n  rectContain: function (x, y) {\n    var coord = this.transformCoordToLocal(x, y);\n    var rect = this.getBoundingRect();\n    return rect.contain(coord[0], coord[1]);\n  },\n\n  /**\n   * 标记图形元素为脏，并且在下一帧重绘\n   * Mark displayable element dirty and refresh next frame\n   */\n  dirty: function () {\n    this.__dirty = true;\n    this._rect = null;\n    this.__zr && this.__zr.refresh();\n  },\n\n  /**\n   * 图形是否会触发事件\n   * If displayable object binded any event\n   * @return {boolean}\n   */\n  // TODO, 通过 bind 绑定的事件\n  // isSilent: function () {\n  //     return !(\n  //         this.hoverable || this.draggable\n  //         || this.onmousemove || this.onmouseover || this.onmouseout\n  //         || this.onmousedown || this.onmouseup || this.onclick\n  //         || this.ondragenter || this.ondragover || this.ondragleave\n  //         || this.ondrop\n  //     );\n  // },\n\n  /**\n   * Alias for animate('style')\n   * @param {boolean} loop\n   */\n  animateStyle: function (loop) {\n    return this.animate('style', loop);\n  },\n  attrKV: function (key, value) {\n    if (key !== 'style') {\n      Element.prototype.attrKV.call(this, key, value);\n    } else {\n      this.style.set(value);\n    }\n  },\n\n  /**\n   * @param {Object|string} key\n   * @param {*} value\n   */\n  setStyle: function (key, value) {\n    this.style.set(key, value);\n    this.dirty(false);\n    return this;\n  },\n\n  /**\n   * Use given style object\n   * @param  {Object} obj\n   */\n  useStyle: function (obj) {\n    this.style = new Style(obj, this);\n    this.dirty(false);\n    return this;\n  }\n};\nzrUtil.inherits(Displayable, Element);\nzrUtil.mixin(Displayable, RectText); // zrUtil.mixin(Displayable, Stateful);\n\nvar _default = Displayable;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1576:\n/***/ (function(module, exports) {\n\n/**\n * @param {Array.<Object>} colorStops\n */\nvar Gradient = function (colorStops) {\n  this.colorStops = colorStops || [];\n};\n\nGradient.prototype = {\n  constructor: Gradient,\n  addColorStop: function (offset, color) {\n    this.colorStops.push({\n      offset: offset,\n      color: color\n    });\n  }\n};\nvar _default = Gradient;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1577:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar LRU = __webpack_require__(1638);\n\nvar globalImageCache = new LRU(50);\n/**\n * @param {string|HTMLImageElement|HTMLCanvasElement|Canvas} newImageOrSrc\n * @return {HTMLImageElement|HTMLCanvasElement|Canvas} image\n */\n\nfunction findExistImage(newImageOrSrc) {\n  if (typeof newImageOrSrc === 'string') {\n    var cachedImgObj = globalImageCache.get(newImageOrSrc);\n    return cachedImgObj && cachedImgObj.image;\n  } else {\n    return newImageOrSrc;\n  }\n}\n/**\n * Caution: User should cache loaded images, but not just count on LRU.\n * Consider if required images more than LRU size, will dead loop occur?\n *\n * @param {string|HTMLImageElement|HTMLCanvasElement|Canvas} newImageOrSrc\n * @param {HTMLImageElement|HTMLCanvasElement|Canvas} image Existent image.\n * @param {module:zrender/Element} [hostEl] For calling `dirty`.\n * @param {Function} [cb] params: (image, cbPayload)\n * @param {Object} [cbPayload] Payload on cb calling.\n * @return {HTMLImageElement|HTMLCanvasElement|Canvas} image\n */\n\n\nfunction createOrUpdateImage(newImageOrSrc, image, hostEl, cb, cbPayload) {\n  if (!newImageOrSrc) {\n    return image;\n  } else if (typeof newImageOrSrc === 'string') {\n    // Image should not be loaded repeatly.\n    if (image && image.__zrImageSrc === newImageOrSrc || !hostEl) {\n      return image;\n    } // Only when there is no existent image or existent image src\n    // is different, this method is responsible for load.\n\n\n    var cachedImgObj = globalImageCache.get(newImageOrSrc);\n    var pendingWrap = {\n      hostEl: hostEl,\n      cb: cb,\n      cbPayload: cbPayload\n    };\n\n    if (cachedImgObj) {\n      image = cachedImgObj.image;\n      !isImageReady(image) && cachedImgObj.pending.push(pendingWrap);\n    } else {\n      !image && (image = new Image());\n      image.onload = imageOnLoad;\n      globalImageCache.put(newImageOrSrc, image.__cachedImgObj = {\n        image: image,\n        pending: [pendingWrap]\n      });\n      image.src = image.__zrImageSrc = newImageOrSrc;\n    }\n\n    return image;\n  } // newImageOrSrc is an HTMLImageElement or HTMLCanvasElement or Canvas\n  else {\n      return newImageOrSrc;\n    }\n}\n\nfunction imageOnLoad() {\n  var cachedImgObj = this.__cachedImgObj;\n  this.onload = this.__cachedImgObj = null;\n\n  for (var i = 0; i < cachedImgObj.pending.length; i++) {\n    var pendingWrap = cachedImgObj.pending[i];\n    var cb = pendingWrap.cb;\n    cb && cb(this, pendingWrap.cbPayload);\n    pendingWrap.hostEl.dirty();\n  }\n\n  cachedImgObj.pending.length = 0;\n}\n\nfunction isImageReady(image) {\n  return image && image.width && image.height;\n}\n\nexports.findExistImage = findExistImage;\nexports.createOrUpdateImage = createOrUpdateImage;\nexports.isImageReady = isImageReady;\n\n/***/ }),\n\n/***/ 1602:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1479);\n\nvar _symbol = __webpack_require__(1569);\n\nvar createSymbol = _symbol.createSymbol;\n\nvar graphic = __webpack_require__(1483);\n\nvar _number = __webpack_require__(1486);\n\nvar parsePercent = _number.parsePercent;\n\nvar _labelHelper = __webpack_require__(1683);\n\nvar findLabelValueDim = _labelHelper.findLabelValueDim;\n\n/**\n * @module echarts/chart/helper/Symbol\n */\nfunction getSymbolSize(data, idx) {\n  var symbolSize = data.getItemVisual(idx, 'symbolSize');\n  return symbolSize instanceof Array ? symbolSize.slice() : [+symbolSize, +symbolSize];\n}\n\nfunction getScale(symbolSize) {\n  return [symbolSize[0] / 2, symbolSize[1] / 2];\n}\n/**\n * @constructor\n * @alias {module:echarts/chart/helper/Symbol}\n * @param {module:echarts/data/List} data\n * @param {number} idx\n * @extends {module:zrender/graphic/Group}\n */\n\n\nfunction SymbolClz(data, idx, seriesScope) {\n  graphic.Group.call(this);\n  this.updateData(data, idx, seriesScope);\n}\n\nvar symbolProto = SymbolClz.prototype;\n\nfunction driftSymbol(dx, dy) {\n  this.parent.drift(dx, dy);\n}\n\nsymbolProto._createSymbol = function (symbolType, data, idx, symbolSize) {\n  // Remove paths created before\n  this.removeAll();\n  var color = data.getItemVisual(idx, 'color'); // var symbolPath = createSymbol(\n  //     symbolType, -0.5, -0.5, 1, 1, color\n  // );\n  // If width/height are set too small (e.g., set to 1) on ios10\n  // and macOS Sierra, a circle stroke become a rect, no matter what\n  // the scale is set. So we set width/height as 2. See #4150.\n\n  var symbolPath = createSymbol(symbolType, -1, -1, 2, 2, color);\n  symbolPath.attr({\n    z2: 100,\n    culling: true,\n    scale: getScale(symbolSize)\n  }); // Rewrite drift method\n\n  symbolPath.drift = driftSymbol;\n  this._symbolType = symbolType;\n  this.add(symbolPath);\n};\n/**\n * Stop animation\n * @param {boolean} toLastFrame\n */\n\n\nsymbolProto.stopSymbolAnimation = function (toLastFrame) {\n  this.childAt(0).stopAnimation(toLastFrame);\n};\n/**\n * FIXME:\n * Caution: This method breaks the encapsulation of this module,\n * but it indeed brings convenience. So do not use the method\n * unless you detailedly know all the implements of `Symbol`,\n * especially animation.\n *\n * Get symbol path element.\n */\n\n\nsymbolProto.getSymbolPath = function () {\n  return this.childAt(0);\n};\n/**\n * Get scale(aka, current symbol size).\n * Including the change caused by animation\n */\n\n\nsymbolProto.getScale = function () {\n  return this.childAt(0).scale;\n};\n/**\n * Highlight symbol\n */\n\n\nsymbolProto.highlight = function () {\n  this.childAt(0).trigger('emphasis');\n};\n/**\n * Downplay symbol\n */\n\n\nsymbolProto.downplay = function () {\n  this.childAt(0).trigger('normal');\n};\n/**\n * @param {number} zlevel\n * @param {number} z\n */\n\n\nsymbolProto.setZ = function (zlevel, z) {\n  var symbolPath = this.childAt(0);\n  symbolPath.zlevel = zlevel;\n  symbolPath.z = z;\n};\n\nsymbolProto.setDraggable = function (draggable) {\n  var symbolPath = this.childAt(0);\n  symbolPath.draggable = draggable;\n  symbolPath.cursor = draggable ? 'move' : 'pointer';\n};\n/**\n * Update symbol properties\n * @param {module:echarts/data/List} data\n * @param {number} idx\n * @param {Object} [seriesScope]\n * @param {Object} [seriesScope.itemStyle]\n * @param {Object} [seriesScope.hoverItemStyle]\n * @param {Object} [seriesScope.symbolRotate]\n * @param {Object} [seriesScope.symbolOffset]\n * @param {module:echarts/model/Model} [seriesScope.labelModel]\n * @param {module:echarts/model/Model} [seriesScope.hoverLabelModel]\n * @param {boolean} [seriesScope.hoverAnimation]\n * @param {Object} [seriesScope.cursorStyle]\n * @param {module:echarts/model/Model} [seriesScope.itemModel]\n * @param {string} [seriesScope.symbolInnerColor]\n * @param {Object} [seriesScope.fadeIn=false]\n */\n\n\nsymbolProto.updateData = function (data, idx, seriesScope) {\n  this.silent = false;\n  var symbolType = data.getItemVisual(idx, 'symbol') || 'circle';\n  var seriesModel = data.hostModel;\n  var symbolSize = getSymbolSize(data, idx);\n  var isInit = symbolType !== this._symbolType;\n\n  if (isInit) {\n    this._createSymbol(symbolType, data, idx, symbolSize);\n  } else {\n    var symbolPath = this.childAt(0);\n    symbolPath.silent = false;\n    graphic.updateProps(symbolPath, {\n      scale: getScale(symbolSize)\n    }, seriesModel, idx);\n  }\n\n  this._updateCommon(data, idx, symbolSize, seriesScope);\n\n  if (isInit) {\n    var symbolPath = this.childAt(0);\n    var fadeIn = seriesScope && seriesScope.fadeIn;\n    var target = {\n      scale: symbolPath.scale.slice()\n    };\n    fadeIn && (target.style = {\n      opacity: symbolPath.style.opacity\n    });\n    symbolPath.scale = [0, 0];\n    fadeIn && (symbolPath.style.opacity = 0);\n    graphic.initProps(symbolPath, target, seriesModel, idx);\n  }\n\n  this._seriesModel = seriesModel;\n}; // Update common properties\n\n\nvar normalStyleAccessPath = ['itemStyle', 'normal'];\nvar emphasisStyleAccessPath = ['itemStyle', 'emphasis'];\nvar normalLabelAccessPath = ['label', 'normal'];\nvar emphasisLabelAccessPath = ['label', 'emphasis'];\n/**\n * @param {module:echarts/data/List} data\n * @param {number} idx\n * @param {Array.<number>} symbolSize\n * @param {Object} [seriesScope]\n */\n\nsymbolProto._updateCommon = function (data, idx, symbolSize, seriesScope) {\n  var symbolPath = this.childAt(0);\n  var seriesModel = data.hostModel;\n  var color = data.getItemVisual(idx, 'color'); // Reset style\n\n  if (symbolPath.type !== 'image') {\n    symbolPath.useStyle({\n      strokeNoScale: true\n    });\n  }\n\n  var itemStyle = seriesScope && seriesScope.itemStyle;\n  var hoverItemStyle = seriesScope && seriesScope.hoverItemStyle;\n  var symbolRotate = seriesScope && seriesScope.symbolRotate;\n  var symbolOffset = seriesScope && seriesScope.symbolOffset;\n  var labelModel = seriesScope && seriesScope.labelModel;\n  var hoverLabelModel = seriesScope && seriesScope.hoverLabelModel;\n  var hoverAnimation = seriesScope && seriesScope.hoverAnimation;\n  var cursorStyle = seriesScope && seriesScope.cursorStyle;\n\n  if (!seriesScope || data.hasItemOption) {\n    var itemModel = seriesScope && seriesScope.itemModel ? seriesScope.itemModel : data.getItemModel(idx); // Color must be excluded.\n    // Because symbol provide setColor individually to set fill and stroke\n\n    itemStyle = itemModel.getModel(normalStyleAccessPath).getItemStyle(['color']);\n    hoverItemStyle = itemModel.getModel(emphasisStyleAccessPath).getItemStyle();\n    symbolRotate = itemModel.getShallow('symbolRotate');\n    symbolOffset = itemModel.getShallow('symbolOffset');\n    labelModel = itemModel.getModel(normalLabelAccessPath);\n    hoverLabelModel = itemModel.getModel(emphasisLabelAccessPath);\n    hoverAnimation = itemModel.getShallow('hoverAnimation');\n    cursorStyle = itemModel.getShallow('cursor');\n  } else {\n    hoverItemStyle = zrUtil.extend({}, hoverItemStyle);\n  }\n\n  var elStyle = symbolPath.style;\n  symbolPath.attr('rotation', (symbolRotate || 0) * Math.PI / 180 || 0);\n\n  if (symbolOffset) {\n    symbolPath.attr('position', [parsePercent(symbolOffset[0], symbolSize[0]), parsePercent(symbolOffset[1], symbolSize[1])]);\n  }\n\n  cursorStyle && symbolPath.attr('cursor', cursorStyle); // PENDING setColor before setStyle!!!\n\n  symbolPath.setColor(color, seriesScope && seriesScope.symbolInnerColor);\n  symbolPath.setStyle(itemStyle);\n  var opacity = data.getItemVisual(idx, 'opacity');\n\n  if (opacity != null) {\n    elStyle.opacity = opacity;\n  }\n\n  var useNameLabel = seriesScope && seriesScope.useNameLabel;\n  var valueDim = !useNameLabel && findLabelValueDim(data);\n\n  if (useNameLabel || valueDim != null) {\n    graphic.setLabelStyle(elStyle, hoverItemStyle, labelModel, hoverLabelModel, {\n      labelFetcher: seriesModel,\n      labelDataIndex: idx,\n      defaultText: useNameLabel ? data.getName(idx) : data.get(valueDim, idx),\n      isRectText: true,\n      autoColor: color\n    });\n  }\n\n  symbolPath.off('mouseover').off('mouseout').off('emphasis').off('normal');\n  symbolPath.hoverStyle = hoverItemStyle; // FIXME\n  // Do not use symbol.trigger('emphasis'), but use symbol.highlight() instead.\n\n  graphic.setHoverStyle(symbolPath);\n  var scale = getScale(symbolSize);\n\n  if (hoverAnimation && seriesModel.isAnimationEnabled()) {\n    var onEmphasis = function () {\n      var ratio = scale[1] / scale[0];\n      this.animateTo({\n        scale: [Math.max(scale[0] * 1.1, scale[0] + 3), Math.max(scale[1] * 1.1, scale[1] + 3 * ratio)]\n      }, 400, 'elasticOut');\n    };\n\n    var onNormal = function () {\n      this.animateTo({\n        scale: scale\n      }, 400, 'elasticOut');\n    };\n\n    symbolPath.on('mouseover', onEmphasis).on('mouseout', onNormal).on('emphasis', onEmphasis).on('normal', onNormal);\n  }\n};\n/**\n * @param {Function} cb\n * @param {Object} [opt]\n * @param {Object} [opt.keepLabel=true]\n */\n\n\nsymbolProto.fadeOut = function (cb, opt) {\n  var symbolPath = this.childAt(0); // Avoid mistaken hover when fading out\n\n  this.silent = symbolPath.silent = true; // Not show text when animating\n\n  !(opt && opt.keepLabel) && (symbolPath.style.text = null);\n  graphic.updateProps(symbolPath, {\n    style: {\n      opacity: 0\n    },\n    scale: [0, 0]\n  }, this._seriesModel, this.dataIndex, cb);\n};\n\nzrUtil.inherits(SymbolClz, graphic.Group);\nvar _default = SymbolClz;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1603:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1479);\n\nvar modelUtil = __webpack_require__(1484);\n\n/**\n * @param {Object} finder contains {seriesIndex, dataIndex, dataIndexInside}\n * @param {module:echarts/model/Global} ecModel\n * @return {Object} {point: [x, y], el: ...} point Will not be null.\n */\nfunction _default(finder, ecModel) {\n  var point = [];\n  var seriesIndex = finder.seriesIndex;\n  var seriesModel;\n\n  if (seriesIndex == null || !(seriesModel = ecModel.getSeriesByIndex(seriesIndex))) {\n    return {\n      point: []\n    };\n  }\n\n  var data = seriesModel.getData();\n  var dataIndex = modelUtil.queryDataIndex(data, finder);\n\n  if (dataIndex == null || zrUtil.isArray(dataIndex)) {\n    return {\n      point: []\n    };\n  }\n\n  var el = data.getItemGraphicEl(dataIndex);\n  var coordSys = seriesModel.coordinateSystem;\n\n  if (seriesModel.getTooltipPosition) {\n    point = seriesModel.getTooltipPosition(dataIndex) || [];\n  } else if (coordSys && coordSys.dataToPoint) {\n    point = coordSys.dataToPoint(data.getValues(zrUtil.map(coordSys.dimensions, function (dim) {\n      return seriesModel.coordDimToDataDim(dim)[0];\n    }), dataIndex, true)) || [];\n  } else if (el) {\n    // Use graphic bounding rect\n    var rect = el.getBoundingRect().clone();\n    rect.applyTransform(el.transform);\n    point = [rect.x + rect.width / 2, rect.y + rect.height / 2];\n  }\n\n  return {\n    point: point,\n    el: el\n  };\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1604:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1479);\n\nvar env = __webpack_require__(1495);\n\nvar modelUtil = __webpack_require__(1484);\n\nvar get = modelUtil.makeGetter();\nvar each = zrUtil.each;\n/**\n * @param {string} key\n * @param {module:echarts/ExtensionAPI} api\n * @param {Function} handler\n *      param: {string} currTrigger\n *      param: {Array.<number>} point\n */\n\nfunction register(key, api, handler) {\n  if (env.node) {\n    return;\n  }\n\n  var zr = api.getZr();\n  get(zr).records || (get(zr).records = {});\n  initGlobalListeners(zr, api);\n  var record = get(zr).records[key] || (get(zr).records[key] = {});\n  record.handler = handler;\n}\n\nfunction initGlobalListeners(zr, api) {\n  if (get(zr).initialized) {\n    return;\n  }\n\n  get(zr).initialized = true;\n  useHandler('click', zrUtil.curry(doEnter, 'click'));\n  useHandler('mousemove', zrUtil.curry(doEnter, 'mousemove')); // useHandler('mouseout', onLeave);\n\n  useHandler('globalout', onLeave);\n\n  function useHandler(eventType, cb) {\n    zr.on(eventType, function (e) {\n      var dis = makeDispatchAction(api);\n      each(get(zr).records, function (record) {\n        record && cb(record, e, dis.dispatchAction);\n      });\n      dispatchTooltipFinally(dis.pendings, api);\n    });\n  }\n}\n\nfunction dispatchTooltipFinally(pendings, api) {\n  var showLen = pendings.showTip.length;\n  var hideLen = pendings.hideTip.length;\n  var actuallyPayload;\n\n  if (showLen) {\n    actuallyPayload = pendings.showTip[showLen - 1];\n  } else if (hideLen) {\n    actuallyPayload = pendings.hideTip[hideLen - 1];\n  }\n\n  if (actuallyPayload) {\n    actuallyPayload.dispatchAction = null;\n    api.dispatchAction(actuallyPayload);\n  }\n}\n\nfunction onLeave(record, e, dispatchAction) {\n  record.handler('leave', null, dispatchAction);\n}\n\nfunction doEnter(currTrigger, record, e, dispatchAction) {\n  record.handler(currTrigger, e, dispatchAction);\n}\n\nfunction makeDispatchAction(api) {\n  var pendings = {\n    showTip: [],\n    hideTip: []\n  }; // FIXME\n  // better approach?\n  // 'showTip' and 'hideTip' can be triggered by axisPointer and tooltip,\n  // which may be conflict, (axisPointer call showTip but tooltip call hideTip);\n  // So we have to add \"final stage\" to merge those dispatched actions.\n\n  var dispatchAction = function (payload) {\n    var pendingList = pendings[payload.type];\n\n    if (pendingList) {\n      pendingList.push(payload);\n    } else {\n      payload.dispatchAction = dispatchAction;\n      api.dispatchAction(payload);\n    }\n  };\n\n  return {\n    dispatchAction: dispatchAction,\n    pendings: pendings\n  };\n}\n/**\n * @param {string} key\n * @param {module:echarts/ExtensionAPI} api\n */\n\n\nfunction unregister(key, api) {\n  if (env.node) {\n    return;\n  }\n\n  var zr = api.getZr();\n  var record = (get(zr).records || {})[key];\n\n  if (record) {\n    get(zr).records[key] = null;\n  }\n}\n\nexports.register = register;\nexports.unregister = unregister;\n\n/***/ }),\n\n/***/ 1605:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1479);\n\nvar graphic = __webpack_require__(1483);\n\nvar textContain = __webpack_require__(1523);\n\nvar formatUtil = __webpack_require__(1499);\n\nvar matrix = __webpack_require__(1525);\n\nvar axisHelper = __webpack_require__(1516);\n\nvar AxisBuilder = __webpack_require__(1606);\n\n/**\n * @param {module:echarts/model/Model} axisPointerModel\n */\nfunction buildElStyle(axisPointerModel) {\n  var axisPointerType = axisPointerModel.get('type');\n  var styleModel = axisPointerModel.getModel(axisPointerType + 'Style');\n  var style;\n\n  if (axisPointerType === 'line') {\n    style = styleModel.getLineStyle();\n    style.fill = null;\n  } else if (axisPointerType === 'shadow') {\n    style = styleModel.getAreaStyle();\n    style.stroke = null;\n  }\n\n  return style;\n}\n/**\n * @param {Function} labelPos {align, verticalAlign, position}\n */\n\n\nfunction buildLabelElOption(elOption, axisModel, axisPointerModel, api, labelPos) {\n  var value = axisPointerModel.get('value');\n  var text = getValueLabel(value, axisModel.axis, axisModel.ecModel, axisPointerModel.get('seriesDataIndices'), {\n    precision: axisPointerModel.get('label.precision'),\n    formatter: axisPointerModel.get('label.formatter')\n  });\n  var labelModel = axisPointerModel.getModel('label');\n  var paddings = formatUtil.normalizeCssArray(labelModel.get('padding') || 0);\n  var font = labelModel.getFont();\n  var textRect = textContain.getBoundingRect(text, font);\n  var position = labelPos.position;\n  var width = textRect.width + paddings[1] + paddings[3];\n  var height = textRect.height + paddings[0] + paddings[2]; // Adjust by align.\n\n  var align = labelPos.align;\n  align === 'right' && (position[0] -= width);\n  align === 'center' && (position[0] -= width / 2);\n  var verticalAlign = labelPos.verticalAlign;\n  verticalAlign === 'bottom' && (position[1] -= height);\n  verticalAlign === 'middle' && (position[1] -= height / 2); // Not overflow ec container\n\n  confineInContainer(position, width, height, api);\n  var bgColor = labelModel.get('backgroundColor');\n\n  if (!bgColor || bgColor === 'auto') {\n    bgColor = axisModel.get('axisLine.lineStyle.color');\n  }\n\n  elOption.label = {\n    shape: {\n      x: 0,\n      y: 0,\n      width: width,\n      height: height,\n      r: labelModel.get('borderRadius')\n    },\n    position: position.slice(),\n    // TODO: rich\n    style: {\n      text: text,\n      textFont: font,\n      textFill: labelModel.getTextColor(),\n      textPosition: 'inside',\n      fill: bgColor,\n      stroke: labelModel.get('borderColor') || 'transparent',\n      lineWidth: labelModel.get('borderWidth') || 0,\n      shadowBlur: labelModel.get('shadowBlur'),\n      shadowColor: labelModel.get('shadowColor'),\n      shadowOffsetX: labelModel.get('shadowOffsetX'),\n      shadowOffsetY: labelModel.get('shadowOffsetY')\n    },\n    // Lable should be over axisPointer.\n    z2: 10\n  };\n} // Do not overflow ec container\n\n\nfunction confineInContainer(position, width, height, api) {\n  var viewWidth = api.getWidth();\n  var viewHeight = api.getHeight();\n  position[0] = Math.min(position[0] + width, viewWidth) - width;\n  position[1] = Math.min(position[1] + height, viewHeight) - height;\n  position[0] = Math.max(position[0], 0);\n  position[1] = Math.max(position[1], 0);\n}\n/**\n * @param {number} value\n * @param {module:echarts/coord/Axis} axis\n * @param {module:echarts/model/Global} ecModel\n * @param {Object} opt\n * @param {Array.<Object>} seriesDataIndices\n * @param {number|string} opt.precision 'auto' or a number\n * @param {string|Function} opt.formatter label formatter\n */\n\n\nfunction getValueLabel(value, axis, ecModel, seriesDataIndices, opt) {\n  var text = axis.scale.getLabel( // If `precision` is set, width can be fixed (like '12.00500'), which\n  // helps to debounce when when moving label.\n  value, {\n    precision: opt.precision\n  });\n  var formatter = opt.formatter;\n\n  if (formatter) {\n    var params = {\n      value: axisHelper.getAxisRawValue(axis, value),\n      seriesData: []\n    };\n    zrUtil.each(seriesDataIndices, function (idxItem) {\n      var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n      var dataIndex = idxItem.dataIndexInside;\n      var dataParams = series && series.getDataParams(dataIndex);\n      dataParams && params.seriesData.push(dataParams);\n    });\n\n    if (zrUtil.isString(formatter)) {\n      text = formatter.replace('{value}', text);\n    } else if (zrUtil.isFunction(formatter)) {\n      text = formatter(params);\n    }\n  }\n\n  return text;\n}\n/**\n * @param {module:echarts/coord/Axis} axis\n * @param {number} value\n * @param {Object} layoutInfo {\n *  rotation, position, labelOffset, labelDirection, labelMargin\n * }\n */\n\n\nfunction getTransformedPosition(axis, value, layoutInfo) {\n  var transform = matrix.create();\n  matrix.rotate(transform, transform, layoutInfo.rotation);\n  matrix.translate(transform, transform, layoutInfo.position);\n  return graphic.applyTransform([axis.dataToCoord(value), (layoutInfo.labelOffset || 0) + (layoutInfo.labelDirection || 1) * (layoutInfo.labelMargin || 0)], transform);\n}\n\nfunction buildCartesianSingleLabelElOption(value, elOption, layoutInfo, axisModel, axisPointerModel, api) {\n  var textLayout = AxisBuilder.innerTextLayout(layoutInfo.rotation, 0, layoutInfo.labelDirection);\n  layoutInfo.labelMargin = axisPointerModel.get('label.margin');\n  buildLabelElOption(elOption, axisModel, axisPointerModel, api, {\n    position: getTransformedPosition(axisModel.axis, value, layoutInfo),\n    align: textLayout.textAlign,\n    verticalAlign: textLayout.textVerticalAlign\n  });\n}\n/**\n * @param {Array.<number>} p1\n * @param {Array.<number>} p2\n * @param {number} [xDimIndex=0] or 1\n */\n\n\nfunction makeLineShape(p1, p2, xDimIndex) {\n  xDimIndex = xDimIndex || 0;\n  return {\n    x1: p1[xDimIndex],\n    y1: p1[1 - xDimIndex],\n    x2: p2[xDimIndex],\n    y2: p2[1 - xDimIndex]\n  };\n}\n/**\n * @param {Array.<number>} xy\n * @param {Array.<number>} wh\n * @param {number} [xDimIndex=0] or 1\n */\n\n\nfunction makeRectShape(xy, wh, xDimIndex) {\n  xDimIndex = xDimIndex || 0;\n  return {\n    x: xy[xDimIndex],\n    y: xy[1 - xDimIndex],\n    width: wh[xDimIndex],\n    height: wh[1 - xDimIndex]\n  };\n}\n\nfunction makeSectorShape(cx, cy, r0, r, startAngle, endAngle) {\n  return {\n    cx: cx,\n    cy: cy,\n    r0: r0,\n    r: r,\n    startAngle: startAngle,\n    endAngle: endAngle,\n    clockwise: true\n  };\n}\n\nexports.buildElStyle = buildElStyle;\nexports.buildLabelElOption = buildLabelElOption;\nexports.getValueLabel = getValueLabel;\nexports.getTransformedPosition = getTransformedPosition;\nexports.buildCartesianSingleLabelElOption = buildCartesianSingleLabelElOption;\nexports.makeLineShape = makeLineShape;\nexports.makeRectShape = makeRectShape;\nexports.makeSectorShape = makeSectorShape;\n\n/***/ }),\n\n/***/ 1606:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _util = __webpack_require__(1479);\n\nvar retrieve = _util.retrieve;\nvar defaults = _util.defaults;\nvar extend = _util.extend;\nvar each = _util.each;\n\nvar formatUtil = __webpack_require__(1499);\n\nvar graphic = __webpack_require__(1483);\n\nvar Model = __webpack_require__(1498);\n\nvar _number = __webpack_require__(1486);\n\nvar isRadianAroundZero = _number.isRadianAroundZero;\nvar remRadian = _number.remRadian;\n\nvar _symbol = __webpack_require__(1569);\n\nvar createSymbol = _symbol.createSymbol;\n\nvar matrixUtil = __webpack_require__(1525);\n\nvar _vector = __webpack_require__(1485);\n\nvar v2ApplyTransform = _vector.applyTransform;\nvar PI = Math.PI;\n\nfunction makeAxisEventDataBase(axisModel) {\n  var eventData = {\n    componentType: axisModel.mainType\n  };\n  eventData[axisModel.mainType + 'Index'] = axisModel.componentIndex;\n  return eventData;\n}\n/**\n * A final axis is translated and rotated from a \"standard axis\".\n * So opt.position and opt.rotation is required.\n *\n * A standard axis is and axis from [0, 0] to [0, axisExtent[1]],\n * for example: (0, 0) ------------> (0, 50)\n *\n * nameDirection or tickDirection or labelDirection is 1 means tick\n * or label is below the standard axis, whereas is -1 means above\n * the standard axis. labelOffset means offset between label and axis,\n * which is useful when 'onZero', where axisLabel is in the grid and\n * label in outside grid.\n *\n * Tips: like always,\n * positive rotation represents anticlockwise, and negative rotation\n * represents clockwise.\n * The direction of position coordinate is the same as the direction\n * of screen coordinate.\n *\n * Do not need to consider axis 'inverse', which is auto processed by\n * axis extent.\n *\n * @param {module:zrender/container/Group} group\n * @param {Object} axisModel\n * @param {Object} opt Standard axis parameters.\n * @param {Array.<number>} opt.position [x, y]\n * @param {number} opt.rotation by radian\n * @param {number} [opt.nameDirection=1] 1 or -1 Used when nameLocation is 'middle' or 'center'.\n * @param {number} [opt.tickDirection=1] 1 or -1\n * @param {number} [opt.labelDirection=1] 1 or -1\n * @param {number} [opt.labelOffset=0] Usefull when onZero.\n * @param {string} [opt.axisLabelShow] default get from axisModel.\n * @param {string} [opt.axisName] default get from axisModel.\n * @param {number} [opt.axisNameAvailableWidth]\n * @param {number} [opt.labelRotate] by degree, default get from axisModel.\n * @param {number} [opt.labelInterval] Default label interval when label\n *                                     interval from model is null or 'auto'.\n * @param {number} [opt.strokeContainThreshold] Default label interval when label\n * @param {number} [opt.nameTruncateMaxWidth]\n */\n\n\nvar AxisBuilder = function (axisModel, opt) {\n  /**\n   * @readOnly\n   */\n  this.opt = opt;\n  /**\n   * @readOnly\n   */\n\n  this.axisModel = axisModel; // Default value\n\n  defaults(opt, {\n    labelOffset: 0,\n    nameDirection: 1,\n    tickDirection: 1,\n    labelDirection: 1,\n    silent: true\n  });\n  /**\n   * @readOnly\n   */\n\n  this.group = new graphic.Group(); // FIXME Not use a seperate text group?\n\n  var dumbGroup = new graphic.Group({\n    position: opt.position.slice(),\n    rotation: opt.rotation\n  }); // this.group.add(dumbGroup);\n  // this._dumbGroup = dumbGroup;\n\n  dumbGroup.updateTransform();\n  this._transform = dumbGroup.transform;\n  this._dumbGroup = dumbGroup;\n};\n\nAxisBuilder.prototype = {\n  constructor: AxisBuilder,\n  hasBuilder: function (name) {\n    return !!builders[name];\n  },\n  add: function (name) {\n    builders[name].call(this);\n  },\n  getGroup: function () {\n    return this.group;\n  }\n};\nvar builders = {\n  /**\n   * @private\n   */\n  axisLine: function () {\n    var opt = this.opt;\n    var axisModel = this.axisModel;\n\n    if (!axisModel.get('axisLine.show')) {\n      return;\n    }\n\n    var extent = this.axisModel.axis.getExtent();\n    var matrix = this._transform;\n    var pt1 = [extent[0], 0];\n    var pt2 = [extent[1], 0];\n\n    if (matrix) {\n      v2ApplyTransform(pt1, pt1, matrix);\n      v2ApplyTransform(pt2, pt2, matrix);\n    }\n\n    var lineStyle = extend({\n      lineCap: 'round'\n    }, axisModel.getModel('axisLine.lineStyle').getLineStyle());\n    this.group.add(new graphic.Line(graphic.subPixelOptimizeLine({\n      // Id for animation\n      anid: 'line',\n      shape: {\n        x1: pt1[0],\n        y1: pt1[1],\n        x2: pt2[0],\n        y2: pt2[1]\n      },\n      style: lineStyle,\n      strokeContainThreshold: opt.strokeContainThreshold || 5,\n      silent: true,\n      z2: 1\n    })));\n    var arrows = axisModel.get('axisLine.symbol');\n    var arrowSize = axisModel.get('axisLine.symbolSize');\n\n    if (arrows != null) {\n      if (typeof arrows === 'string') {\n        // Use the same arrow for start and end point\n        arrows = [arrows, arrows];\n      }\n\n      if (typeof arrowSize === 'string' || typeof arrowSize === 'number') {\n        // Use the same size for width and height\n        arrowSize = [arrowSize, arrowSize];\n      }\n\n      var symbolWidth = arrowSize[0];\n      var symbolHeight = arrowSize[1];\n      each([[opt.rotation + Math.PI / 2, pt1], [opt.rotation - Math.PI / 2, pt2]], function (item, index) {\n        if (arrows[index] !== 'none' && arrows[index] != null) {\n          var symbol = createSymbol(arrows[index], -symbolWidth / 2, -symbolHeight / 2, symbolWidth, symbolHeight, lineStyle.stroke, true);\n          symbol.attr({\n            rotation: item[0],\n            position: item[1],\n            silent: true\n          });\n          this.group.add(symbol);\n        }\n      }, this);\n    }\n  },\n\n  /**\n   * @private\n   */\n  axisTickLabel: function () {\n    var axisModel = this.axisModel;\n    var opt = this.opt;\n    var tickEls = buildAxisTick(this, axisModel, opt);\n    var labelEls = buildAxisLabel(this, axisModel, opt);\n    fixMinMaxLabelShow(axisModel, labelEls, tickEls);\n  },\n\n  /**\n   * @private\n   */\n  axisName: function () {\n    var opt = this.opt;\n    var axisModel = this.axisModel;\n    var name = retrieve(opt.axisName, axisModel.get('name'));\n\n    if (!name) {\n      return;\n    }\n\n    var nameLocation = axisModel.get('nameLocation');\n    var nameDirection = opt.nameDirection;\n    var textStyleModel = axisModel.getModel('nameTextStyle');\n    var gap = axisModel.get('nameGap') || 0;\n    var extent = this.axisModel.axis.getExtent();\n    var gapSignal = extent[0] > extent[1] ? -1 : 1;\n    var pos = [nameLocation === 'start' ? extent[0] - gapSignal * gap : nameLocation === 'end' ? extent[1] + gapSignal * gap : (extent[0] + extent[1]) / 2, // 'middle'\n    // Reuse labelOffset.\n    isNameLocationCenter(nameLocation) ? opt.labelOffset + nameDirection * gap : 0];\n    var labelLayout;\n    var nameRotation = axisModel.get('nameRotate');\n\n    if (nameRotation != null) {\n      nameRotation = nameRotation * PI / 180; // To radian.\n    }\n\n    var axisNameAvailableWidth;\n\n    if (isNameLocationCenter(nameLocation)) {\n      labelLayout = innerTextLayout(opt.rotation, nameRotation != null ? nameRotation : opt.rotation, // Adapt to axis.\n      nameDirection);\n    } else {\n      labelLayout = endTextLayout(opt, nameLocation, nameRotation || 0, extent);\n      axisNameAvailableWidth = opt.axisNameAvailableWidth;\n\n      if (axisNameAvailableWidth != null) {\n        axisNameAvailableWidth = Math.abs(axisNameAvailableWidth / Math.sin(labelLayout.rotation));\n        !isFinite(axisNameAvailableWidth) && (axisNameAvailableWidth = null);\n      }\n    }\n\n    var textFont = textStyleModel.getFont();\n    var truncateOpt = axisModel.get('nameTruncate', true) || {};\n    var ellipsis = truncateOpt.ellipsis;\n    var maxWidth = retrieve(opt.nameTruncateMaxWidth, truncateOpt.maxWidth, axisNameAvailableWidth); // FIXME\n    // truncate rich text? (consider performance)\n\n    var truncatedText = ellipsis != null && maxWidth != null ? formatUtil.truncateText(name, maxWidth, textFont, ellipsis, {\n      minChar: 2,\n      placeholder: truncateOpt.placeholder\n    }) : name;\n    var tooltipOpt = axisModel.get('tooltip', true);\n    var mainType = axisModel.mainType;\n    var formatterParams = {\n      componentType: mainType,\n      name: name,\n      $vars: ['name']\n    };\n    formatterParams[mainType + 'Index'] = axisModel.componentIndex;\n    var textEl = new graphic.Text({\n      // Id for animation\n      anid: 'name',\n      __fullText: name,\n      __truncatedText: truncatedText,\n      position: pos,\n      rotation: labelLayout.rotation,\n      silent: isSilent(axisModel),\n      z2: 1,\n      tooltip: tooltipOpt && tooltipOpt.show ? extend({\n        content: name,\n        formatter: function () {\n          return name;\n        },\n        formatterParams: formatterParams\n      }, tooltipOpt) : null\n    });\n    graphic.setTextStyle(textEl.style, textStyleModel, {\n      text: truncatedText,\n      textFont: textFont,\n      textFill: textStyleModel.getTextColor() || axisModel.get('axisLine.lineStyle.color'),\n      textAlign: labelLayout.textAlign,\n      textVerticalAlign: labelLayout.textVerticalAlign\n    });\n\n    if (axisModel.get('triggerEvent')) {\n      textEl.eventData = makeAxisEventDataBase(axisModel);\n      textEl.eventData.targetType = 'axisName';\n      textEl.eventData.name = name;\n    } // FIXME\n\n\n    this._dumbGroup.add(textEl);\n\n    textEl.updateTransform();\n    this.group.add(textEl);\n    textEl.decomposeTransform();\n  }\n};\n/**\n * @public\n * @static\n * @param {Object} opt\n * @param {number} axisRotation in radian\n * @param {number} textRotation in radian\n * @param {number} direction\n * @return {Object} {\n *  rotation, // according to axis\n *  textAlign,\n *  textVerticalAlign\n * }\n */\n\nvar innerTextLayout = AxisBuilder.innerTextLayout = function (axisRotation, textRotation, direction) {\n  var rotationDiff = remRadian(textRotation - axisRotation);\n  var textAlign;\n  var textVerticalAlign;\n\n  if (isRadianAroundZero(rotationDiff)) {\n    // Label is parallel with axis line.\n    textVerticalAlign = direction > 0 ? 'top' : 'bottom';\n    textAlign = 'center';\n  } else if (isRadianAroundZero(rotationDiff - PI)) {\n    // Label is inverse parallel with axis line.\n    textVerticalAlign = direction > 0 ? 'bottom' : 'top';\n    textAlign = 'center';\n  } else {\n    textVerticalAlign = 'middle';\n\n    if (rotationDiff > 0 && rotationDiff < PI) {\n      textAlign = direction > 0 ? 'right' : 'left';\n    } else {\n      textAlign = direction > 0 ? 'left' : 'right';\n    }\n  }\n\n  return {\n    rotation: rotationDiff,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n};\n\nfunction endTextLayout(opt, textPosition, textRotate, extent) {\n  var rotationDiff = remRadian(textRotate - opt.rotation);\n  var textAlign;\n  var textVerticalAlign;\n  var inverse = extent[0] > extent[1];\n  var onLeft = textPosition === 'start' && !inverse || textPosition !== 'start' && inverse;\n\n  if (isRadianAroundZero(rotationDiff - PI / 2)) {\n    textVerticalAlign = onLeft ? 'bottom' : 'top';\n    textAlign = 'center';\n  } else if (isRadianAroundZero(rotationDiff - PI * 1.5)) {\n    textVerticalAlign = onLeft ? 'top' : 'bottom';\n    textAlign = 'center';\n  } else {\n    textVerticalAlign = 'middle';\n\n    if (rotationDiff < PI * 1.5 && rotationDiff > PI / 2) {\n      textAlign = onLeft ? 'left' : 'right';\n    } else {\n      textAlign = onLeft ? 'right' : 'left';\n    }\n  }\n\n  return {\n    rotation: rotationDiff,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n}\n\nfunction isSilent(axisModel) {\n  var tooltipOpt = axisModel.get('tooltip');\n  return axisModel.get('silent') // Consider mouse cursor, add these restrictions.\n  || !(axisModel.get('triggerEvent') || tooltipOpt && tooltipOpt.show);\n}\n\nfunction fixMinMaxLabelShow(axisModel, labelEls, tickEls) {\n  // If min or max are user set, we need to check\n  // If the tick on min(max) are overlap on their neighbour tick\n  // If they are overlapped, we need to hide the min(max) tick label\n  var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n  var showMaxLabel = axisModel.get('axisLabel.showMaxLabel'); // FIXME\n  // Have not consider onBand yet, where tick els is more than label els.\n\n  labelEls = labelEls || [];\n  tickEls = tickEls || [];\n  var firstLabel = labelEls[0];\n  var nextLabel = labelEls[1];\n  var lastLabel = labelEls[labelEls.length - 1];\n  var prevLabel = labelEls[labelEls.length - 2];\n  var firstTick = tickEls[0];\n  var nextTick = tickEls[1];\n  var lastTick = tickEls[tickEls.length - 1];\n  var prevTick = tickEls[tickEls.length - 2];\n\n  if (showMinLabel === false) {\n    ignoreEl(firstLabel);\n    ignoreEl(firstTick);\n  } else if (isTwoLabelOverlapped(firstLabel, nextLabel)) {\n    if (showMinLabel) {\n      ignoreEl(nextLabel);\n      ignoreEl(nextTick);\n    } else {\n      ignoreEl(firstLabel);\n      ignoreEl(firstTick);\n    }\n  }\n\n  if (showMaxLabel === false) {\n    ignoreEl(lastLabel);\n    ignoreEl(lastTick);\n  } else if (isTwoLabelOverlapped(prevLabel, lastLabel)) {\n    if (showMaxLabel) {\n      ignoreEl(prevLabel);\n      ignoreEl(prevTick);\n    } else {\n      ignoreEl(lastLabel);\n      ignoreEl(lastTick);\n    }\n  }\n}\n\nfunction ignoreEl(el) {\n  el && (el.ignore = true);\n}\n\nfunction isTwoLabelOverlapped(current, next, labelLayout) {\n  // current and next has the same rotation.\n  var firstRect = current && current.getBoundingRect().clone();\n  var nextRect = next && next.getBoundingRect().clone();\n\n  if (!firstRect || !nextRect) {\n    return;\n  } // When checking intersect of two rotated labels, we use mRotationBack\n  // to avoid that boundingRect is enlarge when using `boundingRect.applyTransform`.\n\n\n  var mRotationBack = matrixUtil.identity([]);\n  matrixUtil.rotate(mRotationBack, mRotationBack, -current.rotation);\n  firstRect.applyTransform(matrixUtil.mul([], mRotationBack, current.getLocalTransform()));\n  nextRect.applyTransform(matrixUtil.mul([], mRotationBack, next.getLocalTransform()));\n  return firstRect.intersect(nextRect);\n}\n\nfunction isNameLocationCenter(nameLocation) {\n  return nameLocation === 'middle' || nameLocation === 'center';\n}\n/**\n * @static\n */\n\n\nvar ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick = function (axis, i, interval, ticksCnt, showMinLabel, showMaxLabel) {\n  if (i === 0 && showMinLabel || i === ticksCnt - 1 && showMaxLabel) {\n    return false;\n  } // FIXME\n  // Have not consider label overlap (if label is too long) yet.\n\n\n  var rawTick;\n  var scale = axis.scale;\n  return scale.type === 'ordinal' && (typeof interval === 'function' ? (rawTick = scale.getTicks()[i], !interval(rawTick, scale.getLabel(rawTick))) : i % (interval + 1));\n};\n/**\n * @static\n */\n\n\nvar getInterval = AxisBuilder.getInterval = function (model, labelInterval) {\n  var interval = model.get('interval');\n\n  if (interval == null || interval == 'auto') {\n    interval = labelInterval;\n  }\n\n  return interval;\n};\n\nfunction buildAxisTick(axisBuilder, axisModel, opt) {\n  var axis = axisModel.axis;\n\n  if (!axisModel.get('axisTick.show') || axis.scale.isBlank()) {\n    return;\n  }\n\n  var tickModel = axisModel.getModel('axisTick');\n  var lineStyleModel = tickModel.getModel('lineStyle');\n  var tickLen = tickModel.get('length');\n  var tickInterval = getInterval(tickModel, opt.labelInterval);\n  var ticksCoords = axis.getTicksCoords(tickModel.get('alignWithLabel')); // FIXME\n  // Corresponds to ticksCoords ?\n\n  var ticks = axis.scale.getTicks();\n  var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n  var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n  var pt1 = [];\n  var pt2 = [];\n  var matrix = axisBuilder._transform;\n  var tickEls = [];\n  var ticksCnt = ticksCoords.length;\n\n  for (var i = 0; i < ticksCnt; i++) {\n    // Only ordinal scale support tick interval\n    if (ifIgnoreOnTick(axis, i, tickInterval, ticksCnt, showMinLabel, showMaxLabel)) {\n      continue;\n    }\n\n    var tickCoord = ticksCoords[i];\n    pt1[0] = tickCoord;\n    pt1[1] = 0;\n    pt2[0] = tickCoord;\n    pt2[1] = opt.tickDirection * tickLen;\n\n    if (matrix) {\n      v2ApplyTransform(pt1, pt1, matrix);\n      v2ApplyTransform(pt2, pt2, matrix);\n    } // Tick line, Not use group transform to have better line draw\n\n\n    var tickEl = new graphic.Line(graphic.subPixelOptimizeLine({\n      // Id for animation\n      anid: 'tick_' + ticks[i],\n      shape: {\n        x1: pt1[0],\n        y1: pt1[1],\n        x2: pt2[0],\n        y2: pt2[1]\n      },\n      style: defaults(lineStyleModel.getLineStyle(), {\n        stroke: axisModel.get('axisLine.lineStyle.color')\n      }),\n      z2: 2,\n      silent: true\n    }));\n    axisBuilder.group.add(tickEl);\n    tickEls.push(tickEl);\n  }\n\n  return tickEls;\n}\n\nfunction buildAxisLabel(axisBuilder, axisModel, opt) {\n  var axis = axisModel.axis;\n  var show = retrieve(opt.axisLabelShow, axisModel.get('axisLabel.show'));\n\n  if (!show || axis.scale.isBlank()) {\n    return;\n  }\n\n  var labelModel = axisModel.getModel('axisLabel');\n  var labelMargin = labelModel.get('margin');\n  var ticks = axis.scale.getTicks();\n  var labels = axisModel.getFormattedLabels(); // Special label rotate.\n\n  var labelRotation = (retrieve(opt.labelRotate, labelModel.get('rotate')) || 0) * PI / 180;\n  var labelLayout = innerTextLayout(opt.rotation, labelRotation, opt.labelDirection);\n  var categoryData = axisModel.get('data');\n  var labelEls = [];\n  var silent = isSilent(axisModel);\n  var triggerEvent = axisModel.get('triggerEvent');\n  var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n  var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n  each(ticks, function (tickVal, index) {\n    if (ifIgnoreOnTick(axis, index, opt.labelInterval, ticks.length, showMinLabel, showMaxLabel)) {\n      return;\n    }\n\n    var itemLabelModel = labelModel;\n\n    if (categoryData && categoryData[tickVal] && categoryData[tickVal].textStyle) {\n      itemLabelModel = new Model(categoryData[tickVal].textStyle, labelModel, axisModel.ecModel);\n    }\n\n    var textColor = itemLabelModel.getTextColor() || axisModel.get('axisLine.lineStyle.color');\n    var tickCoord = axis.dataToCoord(tickVal);\n    var pos = [tickCoord, opt.labelOffset + opt.labelDirection * labelMargin];\n    var labelStr = axis.scale.getLabel(tickVal);\n    var textEl = new graphic.Text({\n      // Id for animation\n      anid: 'label_' + tickVal,\n      position: pos,\n      rotation: labelLayout.rotation,\n      silent: silent,\n      z2: 10\n    });\n    graphic.setTextStyle(textEl.style, itemLabelModel, {\n      text: labels[index],\n      textAlign: itemLabelModel.getShallow('align', true) || labelLayout.textAlign,\n      textVerticalAlign: itemLabelModel.getShallow('verticalAlign', true) || itemLabelModel.getShallow('baseline', true) || labelLayout.textVerticalAlign,\n      textFill: typeof textColor === 'function' ? textColor( // (1) In category axis with data zoom, tick is not the original\n      // index of axis.data. So tick should not be exposed to user\n      // in category axis.\n      // (2) Compatible with previous version, which always returns labelStr.\n      // But in interval scale labelStr is like '223,445', which maked\n      // user repalce ','. So we modify it to return original val but remain\n      // it as 'string' to avoid error in replacing.\n      axis.type === 'category' ? labelStr : axis.type === 'value' ? tickVal + '' : tickVal, index) : textColor\n    }); // Pack data for mouse event\n\n    if (triggerEvent) {\n      textEl.eventData = makeAxisEventDataBase(axisModel);\n      textEl.eventData.targetType = 'axisLabel';\n      textEl.eventData.value = labelStr;\n    } // FIXME\n\n\n    axisBuilder._dumbGroup.add(textEl);\n\n    textEl.updateTransform();\n    labelEls.push(textEl);\n    axisBuilder.group.add(textEl);\n    textEl.decomposeTransform();\n  });\n  return labelEls;\n}\n\nvar _default = AxisBuilder;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1607:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(1494);\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = __webpack_require__(1490);\n\nvar axisPointerModelHelper = __webpack_require__(1537);\n\n/**\n * Base class of AxisView.\n */\nvar AxisView = echarts.extendComponentView({\n  type: 'axis',\n\n  /**\n   * @private\n   */\n  _axisPointer: null,\n\n  /**\n   * @protected\n   * @type {string}\n   */\n  axisPointerClass: null,\n\n  /**\n   * @override\n   */\n  render: function (axisModel, ecModel, api, payload) {\n    // FIXME\n    // This process should proformed after coordinate systems updated\n    // (axis scale updated), and should be performed each time update.\n    // So put it here temporarily, although it is not appropriate to\n    // put a model-writing procedure in `view`.\n    this.axisPointerClass && axisPointerModelHelper.fixValue(axisModel);\n    AxisView.superApply(this, 'render', arguments);\n    updateAxisPointer(this, axisModel, ecModel, api, payload, true);\n  },\n\n  /**\n   * Action handler.\n   * @public\n   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n   * @param {module:echarts/model/Global} ecModel\n   * @param {module:echarts/ExtensionAPI} api\n   * @param {Object} payload\n   */\n  updateAxisPointer: function (axisModel, ecModel, api, payload, force) {\n    updateAxisPointer(this, axisModel, ecModel, api, payload, false);\n  },\n\n  /**\n   * @override\n   */\n  remove: function (ecModel, api) {\n    var axisPointer = this._axisPointer;\n    axisPointer && axisPointer.remove(api);\n    AxisView.superApply(this, 'remove', arguments);\n  },\n\n  /**\n   * @override\n   */\n  dispose: function (ecModel, api) {\n    disposeAxisPointer(this, api);\n    AxisView.superApply(this, 'dispose', arguments);\n  }\n});\n\nfunction updateAxisPointer(axisView, axisModel, ecModel, api, payload, forceRender) {\n  var Clazz = AxisView.getAxisPointerClass(axisView.axisPointerClass);\n\n  if (!Clazz) {\n    return;\n  }\n\n  var axisPointerModel = axisPointerModelHelper.getAxisPointerModel(axisModel);\n  axisPointerModel ? (axisView._axisPointer || (axisView._axisPointer = new Clazz())).render(axisModel, axisPointerModel, api, forceRender) : disposeAxisPointer(axisView, api);\n}\n\nfunction disposeAxisPointer(axisView, ecModel, api) {\n  var axisPointer = axisView._axisPointer;\n  axisPointer && axisPointer.dispose(ecModel, api);\n  axisView._axisPointer = null;\n}\n\nvar axisPointerClazz = [];\n\nAxisView.registerAxisPointerClass = function (type, clazz) {\n  axisPointerClazz[type] = clazz;\n};\n\nAxisView.getAxisPointerClass = function (type) {\n  return type && axisPointerClazz[type];\n};\n\nvar _default = AxisView;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1608:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1479);\n\n/**\n * @param {Object} opt {labelInside}\n * @return {Object} {\n *  position, rotation, labelDirection, labelOffset,\n *  tickDirection, labelRotate, labelInterval, z2\n * }\n */\nfunction layout(gridModel, axisModel, opt) {\n  opt = opt || {};\n  var grid = gridModel.coordinateSystem;\n  var axis = axisModel.axis;\n  var layout = {};\n  var rawAxisPosition = axis.position;\n  var axisPosition = axis.onZero ? 'onZero' : rawAxisPosition;\n  var axisDim = axis.dim;\n  var rect = grid.getRect();\n  var rectBound = [rect.x, rect.x + rect.width, rect.y, rect.y + rect.height];\n  var idx = {\n    left: 0,\n    right: 1,\n    top: 0,\n    bottom: 1,\n    onZero: 2\n  };\n  var axisOffset = axisModel.get('offset') || 0;\n  var posBound = axisDim === 'x' ? [rectBound[2] - axisOffset, rectBound[3] + axisOffset] : [rectBound[0] - axisOffset, rectBound[1] + axisOffset];\n\n  if (axis.onZero) {\n    var otherAxis = grid.getAxis(axisDim === 'x' ? 'y' : 'x', axis.onZeroAxisIndex);\n    var onZeroCoord = otherAxis.toGlobalCoord(otherAxis.dataToCoord(0));\n    posBound[idx['onZero']] = Math.max(Math.min(onZeroCoord, posBound[1]), posBound[0]);\n  } // Axis position\n\n\n  layout.position = [axisDim === 'y' ? posBound[idx[axisPosition]] : rectBound[0], axisDim === 'x' ? posBound[idx[axisPosition]] : rectBound[3]]; // Axis rotation\n\n  layout.rotation = Math.PI / 2 * (axisDim === 'x' ? 0 : 1); // Tick and label direction, x y is axisDim\n\n  var dirMap = {\n    top: -1,\n    bottom: 1,\n    left: -1,\n    right: 1\n  };\n  layout.labelDirection = layout.tickDirection = layout.nameDirection = dirMap[rawAxisPosition];\n  layout.labelOffset = axis.onZero ? posBound[idx[rawAxisPosition]] - posBound[idx['onZero']] : 0;\n\n  if (axisModel.get('axisTick.inside')) {\n    layout.tickDirection = -layout.tickDirection;\n  }\n\n  if (zrUtil.retrieve(opt.labelInside, axisModel.get('axisLabel.inside'))) {\n    layout.labelDirection = -layout.labelDirection;\n  } // Special label rotation\n\n\n  var labelRotate = axisModel.get('axisLabel.rotate');\n  layout.labelRotate = axisPosition === 'top' ? -labelRotate : labelRotate; // label interval when auto mode.\n\n  layout.labelInterval = axis.getLabelInterval(); // Over splitLine and splitArea\n\n  layout.z2 = 1;\n  return layout;\n}\n\nexports.layout = layout;\n\n/***/ }),\n\n/***/ 1609:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(1490);\n\nvar zrUtil = __webpack_require__(1479);\n\nvar graphic = __webpack_require__(1483);\n\n__webpack_require__(1613);\n\n__webpack_require__(1689);\n\n// Grid view\necharts.extendComponentView({\n  type: 'grid',\n  render: function (gridModel, ecModel) {\n    this.group.removeAll();\n\n    if (gridModel.get('show')) {\n      this.group.add(new graphic.Rect({\n        shape: gridModel.coordinateSystem.getRect(),\n        style: zrUtil.defaults({\n          fill: gridModel.get('backgroundColor')\n        }, gridModel.getItemStyle()),\n        silent: true,\n        z2: -1\n      }));\n    }\n  }\n});\necharts.registerPreprocessor(function (option) {\n  // Only create grid when need\n  if (option.xAxis && option.yAxis && !option.grid) {\n    option.grid = {};\n  }\n});\n\n/***/ }),\n\n/***/ 1610:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1479);\n\nvar numberUtil = __webpack_require__(1486);\n\nvar axisHelper = __webpack_require__(1516);\n\nvar linearMap = numberUtil.linearMap;\n\nfunction fixExtentWithBands(extent, nTick) {\n  var size = extent[1] - extent[0];\n  var len = nTick;\n  var margin = size / len / 2;\n  extent[0] += margin;\n  extent[1] -= margin;\n}\n\nvar normalizedExtent = [0, 1];\n/**\n * @name module:echarts/coord/CartesianAxis\n * @constructor\n */\n\nvar Axis = function (dim, scale, extent) {\n  /**\n   * Axis dimension. Such as 'x', 'y', 'z', 'angle', 'radius'\n   * @type {string}\n   */\n  this.dim = dim;\n  /**\n   * Axis scale\n   * @type {module:echarts/coord/scale/*}\n   */\n\n  this.scale = scale;\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n\n  this._extent = extent || [0, 0];\n  /**\n   * @type {boolean}\n   */\n\n  this.inverse = false;\n  /**\n   * Usually true when axis has a ordinal scale\n   * @type {boolean}\n   */\n\n  this.onBand = false;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._labelInterval;\n};\n\nAxis.prototype = {\n  constructor: Axis,\n\n  /**\n   * If axis extent contain given coord\n   * @param {number} coord\n   * @return {boolean}\n   */\n  contain: function (coord) {\n    var extent = this._extent;\n    var min = Math.min(extent[0], extent[1]);\n    var max = Math.max(extent[0], extent[1]);\n    return coord >= min && coord <= max;\n  },\n\n  /**\n   * If axis extent contain given data\n   * @param {number} data\n   * @return {boolean}\n   */\n  containData: function (data) {\n    return this.contain(this.dataToCoord(data));\n  },\n\n  /**\n   * Get coord extent.\n   * @return {Array.<number>}\n   */\n  getExtent: function () {\n    return this._extent.slice();\n  },\n\n  /**\n   * Get precision used for formatting\n   * @param {Array.<number>} [dataExtent]\n   * @return {number}\n   */\n  getPixelPrecision: function (dataExtent) {\n    return numberUtil.getPixelPrecision(dataExtent || this.scale.getExtent(), this._extent);\n  },\n\n  /**\n   * Set coord extent\n   * @param {number} start\n   * @param {number} end\n   */\n  setExtent: function (start, end) {\n    var extent = this._extent;\n    extent[0] = start;\n    extent[1] = end;\n  },\n\n  /**\n   * Convert data to coord. Data is the rank if it has a ordinal scale\n   * @param {number} data\n   * @param  {boolean} clamp\n   * @return {number}\n   */\n  dataToCoord: function (data, clamp) {\n    var extent = this._extent;\n    var scale = this.scale;\n    data = scale.normalize(data);\n\n    if (this.onBand && scale.type === 'ordinal') {\n      extent = extent.slice();\n      fixExtentWithBands(extent, scale.count());\n    }\n\n    return linearMap(data, normalizedExtent, extent, clamp);\n  },\n\n  /**\n   * Convert coord to data. Data is the rank if it has a ordinal scale\n   * @param {number} coord\n   * @param  {boolean} clamp\n   * @return {number}\n   */\n  coordToData: function (coord, clamp) {\n    var extent = this._extent;\n    var scale = this.scale;\n\n    if (this.onBand && scale.type === 'ordinal') {\n      extent = extent.slice();\n      fixExtentWithBands(extent, scale.count());\n    }\n\n    var t = linearMap(coord, extent, normalizedExtent, clamp);\n    return this.scale.scale(t);\n  },\n\n  /**\n   * Convert pixel point to data in axis\n   * @param {Array.<number>} point\n   * @param  {boolean} clamp\n   * @return {number} data\n   */\n  pointToData: function (point, clamp) {// Should be implemented in derived class if necessary.\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getTicksCoords: function (alignWithLabel) {\n    if (this.onBand && !alignWithLabel) {\n      var bands = this.getBands();\n      var coords = [];\n\n      for (var i = 0; i < bands.length; i++) {\n        coords.push(bands[i][0]);\n      }\n\n      if (bands[i - 1]) {\n        coords.push(bands[i - 1][1]);\n      }\n\n      return coords;\n    } else {\n      return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\n    }\n  },\n\n  /**\n   * Coords of labels are on the ticks or on the middle of bands\n   * @return {Array.<number>}\n   */\n  getLabelsCoords: function () {\n    return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\n  },\n\n  /**\n   * Get bands.\n   *\n   * If axis has labels [1, 2, 3, 4]. Bands on the axis are\n   * |---1---|---2---|---3---|---4---|.\n   *\n   * @return {Array}\n   */\n  // FIXME Situation when labels is on ticks\n  getBands: function () {\n    var extent = this.getExtent();\n    var bands = [];\n    var len = this.scale.count();\n    var start = extent[0];\n    var end = extent[1];\n    var span = end - start;\n\n    for (var i = 0; i < len; i++) {\n      bands.push([span * i / len + start, span * (i + 1) / len + start]);\n    }\n\n    return bands;\n  },\n\n  /**\n   * Get width of band\n   * @return {number}\n   */\n  getBandWidth: function () {\n    var axisExtent = this._extent;\n    var dataExtent = this.scale.getExtent();\n    var len = dataExtent[1] - dataExtent[0] + (this.onBand ? 1 : 0); // Fix #2728, avoid NaN when only one data.\n\n    len === 0 && (len = 1);\n    var size = Math.abs(axisExtent[1] - axisExtent[0]);\n    return Math.abs(size) / len;\n  },\n\n  /**\n   * @abstract\n   * @return {boolean} Is horizontal\n   */\n  isHorizontal: null,\n\n  /**\n   * @abstract\n   * @return {number} Get axis rotate, by degree.\n   */\n  getRotate: null,\n\n  /**\n   * Get interval of the axis label.\n   * To get precise result, at least one of `getRotate` and `isHorizontal`\n   * should be implemented.\n   * @return {number}\n   */\n  getLabelInterval: function () {\n    var labelInterval = this._labelInterval;\n\n    if (!labelInterval) {\n      var axisModel = this.model;\n      var labelModel = axisModel.getModel('axisLabel');\n      labelInterval = labelModel.get('interval');\n\n      if (this.type === 'category' && (labelInterval == null || labelInterval === 'auto')) {\n        labelInterval = axisHelper.getAxisLabelInterval(zrUtil.map(this.scale.getTicks(), this.dataToCoord, this), axisModel.getFormattedLabels(), labelModel.getFont(), this.getRotate ? this.getRotate() : this.isHorizontal && !this.isHorizontal() ? 90 : 0, labelModel.get('rotate'));\n      }\n\n      this._labelInterval = labelInterval;\n    }\n\n    return labelInterval;\n  }\n};\nvar _default = Axis;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1611:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1479);\n\nvar axisHelper = __webpack_require__(1516);\n\nfunction getName(obj) {\n  if (zrUtil.isObject(obj) && obj.value != null) {\n    return obj.value;\n  } else {\n    return obj + '';\n  }\n}\n\nvar _default = {\n  /**\n   * Format labels\n   * @return {Array.<string>}\n   */\n  getFormattedLabels: function () {\n    return axisHelper.getFormattedLabels(this.axis, this.get('axisLabel.formatter'));\n  },\n\n  /**\n   * Get categories\n   */\n  getCategories: function () {\n    return this.get('type') === 'category' && zrUtil.map(this.get('data'), getName);\n  },\n\n  /**\n   * @param {boolean} origin\n   * @return {number|string} min value or 'dataMin' or null/undefined (means auto) or NaN\n   */\n  getMin: function (origin) {\n    var option = this.option;\n    var min = !origin && option.rangeStart != null ? option.rangeStart : option.min;\n\n    if (this.axis && min != null && min !== 'dataMin' && typeof min !== 'function' && !zrUtil.eqNaN(min)) {\n      min = this.axis.scale.parse(min);\n    }\n\n    return min;\n  },\n\n  /**\n   * @param {boolean} origin\n   * @return {number|string} max value or 'dataMax' or null/undefined (means auto) or NaN\n   */\n  getMax: function (origin) {\n    var option = this.option;\n    var max = !origin && option.rangeEnd != null ? option.rangeEnd : option.max;\n\n    if (this.axis && max != null && max !== 'dataMax' && typeof max !== 'function' && !zrUtil.eqNaN(max)) {\n      max = this.axis.scale.parse(max);\n    }\n\n    return max;\n  },\n\n  /**\n   * @return {boolean}\n   */\n  getNeedCrossZero: function () {\n    var option = this.option;\n    return option.rangeStart != null || option.rangeEnd != null ? false : !option.scale;\n  },\n\n  /**\n   * Should be implemented by each axis model if necessary.\n   * @return {module:echarts/model/Component} coordinate system model\n   */\n  getCoordSysModel: zrUtil.noop,\n\n  /**\n   * @param {number} rangeStart Can only be finite number or null/undefined or NaN.\n   * @param {number} rangeEnd Can only be finite number or null/undefined or NaN.\n   */\n  setRange: function (rangeStart, rangeEnd) {\n    this.option.rangeStart = rangeStart;\n    this.option.rangeEnd = rangeEnd;\n  },\n\n  /**\n   * Reset range\n   */\n  resetRange: function () {\n    // rangeStart and rangeEnd is readonly.\n    this.option.rangeStart = this.option.rangeEnd = null;\n  }\n};\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1612:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1479);\n\nvar ComponentModel = __webpack_require__(1508);\n\nvar axisModelCreator = __webpack_require__(1703);\n\nvar axisModelCommonMixin = __webpack_require__(1611);\n\nvar AxisModel = ComponentModel.extend({\n  type: 'cartesian2dAxis',\n\n  /**\n   * @type {module:echarts/coord/cartesian/Axis2D}\n   */\n  axis: null,\n\n  /**\n   * @override\n   */\n  init: function () {\n    AxisModel.superApply(this, 'init', arguments);\n    this.resetRange();\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function () {\n    AxisModel.superApply(this, 'mergeOption', arguments);\n    this.resetRange();\n  },\n\n  /**\n   * @override\n   */\n  restoreData: function () {\n    AxisModel.superApply(this, 'restoreData', arguments);\n    this.resetRange();\n  },\n\n  /**\n   * @override\n   * @return {module:echarts/model/Component}\n   */\n  getCoordSysModel: function () {\n    return this.ecModel.queryComponents({\n      mainType: 'grid',\n      index: this.option.gridIndex,\n      id: this.option.gridId\n    })[0];\n  }\n});\n\nfunction getAxisType(axisDim, option) {\n  // Default axis with data is category axis\n  return option.type || (option.data ? 'category' : 'value');\n}\n\nzrUtil.merge(AxisModel.prototype, axisModelCommonMixin);\nvar extraOption = {\n  // gridIndex: 0,\n  // gridId: '',\n  // Offset is for multiple axis on the same position\n  offset: 0\n};\naxisModelCreator('x', AxisModel, getAxisType, extraOption);\naxisModelCreator('y', AxisModel, getAxisType, extraOption);\nvar _default = AxisModel;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1613:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(1494);\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = __webpack_require__(1479);\n\nvar BoundingRect = __webpack_require__(1497);\n\nvar _layout = __webpack_require__(1517);\n\nvar getLayoutRect = _layout.getLayoutRect;\n\nvar axisHelper = __webpack_require__(1516);\n\nvar Cartesian2D = __webpack_require__(1706);\n\nvar Axis2D = __webpack_require__(1704);\n\nvar CoordinateSystem = __webpack_require__(1564);\n\n__webpack_require__(1707);\n\n/**\n * Grid is a region which contains at most 4 cartesian systems\n *\n * TODO Default cartesian\n */\n// Depends on GridModel, AxisModel, which performs preprocess.\nvar each = zrUtil.each;\nvar ifAxisCrossZero = axisHelper.ifAxisCrossZero;\nvar niceScaleExtent = axisHelper.niceScaleExtent;\n/**\n * Check if the axis is used in the specified grid\n * @inner\n */\n\nfunction isAxisUsedInTheGrid(axisModel, gridModel, ecModel) {\n  return axisModel.getCoordSysModel() === gridModel;\n}\n\nfunction rotateTextRect(textRect, rotate) {\n  var rotateRadians = rotate * Math.PI / 180;\n  var boundingBox = textRect.plain();\n  var beforeWidth = boundingBox.width;\n  var beforeHeight = boundingBox.height;\n  var afterWidth = beforeWidth * Math.cos(rotateRadians) + beforeHeight * Math.sin(rotateRadians);\n  var afterHeight = beforeWidth * Math.sin(rotateRadians) + beforeHeight * Math.cos(rotateRadians);\n  var rotatedRect = new BoundingRect(boundingBox.x, boundingBox.y, afterWidth, afterHeight);\n  return rotatedRect;\n}\n\nfunction getLabelUnionRect(axis) {\n  var axisModel = axis.model;\n  var labels = axisModel.getFormattedLabels();\n  var axisLabelModel = axisModel.getModel('axisLabel');\n  var rect;\n  var step = 1;\n  var labelCount = labels.length;\n\n  if (labelCount > 40) {\n    // Simple optimization for large amount of labels\n    step = Math.ceil(labelCount / 40);\n  }\n\n  for (var i = 0; i < labelCount; i += step) {\n    if (!axis.isLabelIgnored(i)) {\n      var unrotatedSingleRect = axisLabelModel.getTextRect(labels[i]);\n      var singleRect = rotateTextRect(unrotatedSingleRect, axisLabelModel.get('rotate') || 0);\n      rect ? rect.union(singleRect) : rect = singleRect;\n    }\n  }\n\n  return rect;\n}\n\nfunction Grid(gridModel, ecModel, api) {\n  /**\n   * @type {Object.<string, module:echarts/coord/cartesian/Cartesian2D>}\n   * @private\n   */\n  this._coordsMap = {};\n  /**\n   * @type {Array.<module:echarts/coord/cartesian/Cartesian>}\n   * @private\n   */\n\n  this._coordsList = [];\n  /**\n   * @type {Object.<string, module:echarts/coord/cartesian/Axis2D>}\n   * @private\n   */\n\n  this._axesMap = {};\n  /**\n   * @type {Array.<module:echarts/coord/cartesian/Axis2D>}\n   * @private\n   */\n\n  this._axesList = [];\n\n  this._initCartesian(gridModel, ecModel, api);\n\n  this.model = gridModel;\n}\n\nvar gridProto = Grid.prototype;\ngridProto.type = 'grid';\ngridProto.axisPointerEnabled = true;\n\ngridProto.getRect = function () {\n  return this._rect;\n};\n\ngridProto.update = function (ecModel, api) {\n  var axesMap = this._axesMap;\n\n  this._updateScale(ecModel, this.model);\n\n  each(axesMap.x, function (xAxis) {\n    niceScaleExtent(xAxis.scale, xAxis.model);\n  });\n  each(axesMap.y, function (yAxis) {\n    niceScaleExtent(yAxis.scale, yAxis.model);\n  });\n  each(axesMap.x, function (xAxis) {\n    fixAxisOnZero(axesMap, 'y', xAxis);\n  });\n  each(axesMap.y, function (yAxis) {\n    fixAxisOnZero(axesMap, 'x', yAxis);\n  }); // Resize again if containLabel is enabled\n  // FIXME It may cause getting wrong grid size in data processing stage\n\n  this.resize(this.model, api);\n};\n\nfunction fixAxisOnZero(axesMap, otherAxisDim, axis) {\n  // onZero can not be enabled in these two situations:\n  // 1. When any other axis is a category axis.\n  // 2. When no axis is cross 0 point.\n  var axes = axesMap[otherAxisDim];\n\n  if (!axis.onZero) {\n    return;\n  }\n\n  var onZeroAxisIndex = axis.onZeroAxisIndex; // If target axis is specified.\n\n  if (onZeroAxisIndex != null) {\n    var otherAxis = axes[onZeroAxisIndex];\n\n    if (otherAxis && canNotOnZeroToAxis(otherAxis)) {\n      axis.onZero = false;\n    }\n\n    return;\n  }\n\n  for (var idx in axes) {\n    if (axes.hasOwnProperty(idx)) {\n      var otherAxis = axes[idx];\n\n      if (otherAxis && !canNotOnZeroToAxis(otherAxis)) {\n        onZeroAxisIndex = +idx;\n        break;\n      }\n    }\n  }\n\n  if (onZeroAxisIndex == null) {\n    axis.onZero = false;\n  }\n\n  axis.onZeroAxisIndex = onZeroAxisIndex;\n}\n\nfunction canNotOnZeroToAxis(axis) {\n  return axis.type === 'category' || axis.type === 'time' || !ifAxisCrossZero(axis);\n}\n/**\n * Resize the grid\n * @param {module:echarts/coord/cartesian/GridModel} gridModel\n * @param {module:echarts/ExtensionAPI} api\n */\n\n\ngridProto.resize = function (gridModel, api, ignoreContainLabel) {\n  var gridRect = getLayoutRect(gridModel.getBoxLayoutParams(), {\n    width: api.getWidth(),\n    height: api.getHeight()\n  });\n  this._rect = gridRect;\n  var axesList = this._axesList;\n  adjustAxes(); // Minus label size\n\n  if (!ignoreContainLabel && gridModel.get('containLabel')) {\n    each(axesList, function (axis) {\n      if (!axis.model.get('axisLabel.inside')) {\n        var labelUnionRect = getLabelUnionRect(axis);\n\n        if (labelUnionRect) {\n          var dim = axis.isHorizontal() ? 'height' : 'width';\n          var margin = axis.model.get('axisLabel.margin');\n          gridRect[dim] -= labelUnionRect[dim] + margin;\n\n          if (axis.position === 'top') {\n            gridRect.y += labelUnionRect.height + margin;\n          } else if (axis.position === 'left') {\n            gridRect.x += labelUnionRect.width + margin;\n          }\n        }\n      }\n    });\n    adjustAxes();\n  }\n\n  function adjustAxes() {\n    each(axesList, function (axis) {\n      var isHorizontal = axis.isHorizontal();\n      var extent = isHorizontal ? [0, gridRect.width] : [0, gridRect.height];\n      var idx = axis.inverse ? 1 : 0;\n      axis.setExtent(extent[idx], extent[1 - idx]);\n      updateAxisTransfrom(axis, isHorizontal ? gridRect.x : gridRect.y);\n    });\n  }\n};\n/**\n * @param {string} axisType\n * @param {number} [axisIndex]\n */\n\n\ngridProto.getAxis = function (axisType, axisIndex) {\n  var axesMapOnDim = this._axesMap[axisType];\n\n  if (axesMapOnDim != null) {\n    if (axisIndex == null) {\n      // Find first axis\n      for (var name in axesMapOnDim) {\n        if (axesMapOnDim.hasOwnProperty(name)) {\n          return axesMapOnDim[name];\n        }\n      }\n    }\n\n    return axesMapOnDim[axisIndex];\n  }\n};\n/**\n * @return {Array.<module:echarts/coord/Axis>}\n */\n\n\ngridProto.getAxes = function () {\n  return this._axesList.slice();\n};\n/**\n * Usage:\n *      grid.getCartesian(xAxisIndex, yAxisIndex);\n *      grid.getCartesian(xAxisIndex);\n *      grid.getCartesian(null, yAxisIndex);\n *      grid.getCartesian({xAxisIndex: ..., yAxisIndex: ...});\n *\n * @param {number|Object} [xAxisIndex]\n * @param {number} [yAxisIndex]\n */\n\n\ngridProto.getCartesian = function (xAxisIndex, yAxisIndex) {\n  if (xAxisIndex != null && yAxisIndex != null) {\n    var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n    return this._coordsMap[key];\n  }\n\n  if (zrUtil.isObject(xAxisIndex)) {\n    yAxisIndex = xAxisIndex.yAxisIndex;\n    xAxisIndex = xAxisIndex.xAxisIndex;\n  } // When only xAxisIndex or yAxisIndex given, find its first cartesian.\n\n\n  for (var i = 0, coordList = this._coordsList; i < coordList.length; i++) {\n    if (coordList[i].getAxis('x').index === xAxisIndex || coordList[i].getAxis('y').index === yAxisIndex) {\n      return coordList[i];\n    }\n  }\n};\n\ngridProto.getCartesians = function () {\n  return this._coordsList.slice();\n};\n/**\n * @implements\n * see {module:echarts/CoodinateSystem}\n */\n\n\ngridProto.convertToPixel = function (ecModel, finder, value) {\n  var target = this._findConvertTarget(ecModel, finder);\n\n  return target.cartesian ? target.cartesian.dataToPoint(value) : target.axis ? target.axis.toGlobalCoord(target.axis.dataToCoord(value)) : null;\n};\n/**\n * @implements\n * see {module:echarts/CoodinateSystem}\n */\n\n\ngridProto.convertFromPixel = function (ecModel, finder, value) {\n  var target = this._findConvertTarget(ecModel, finder);\n\n  return target.cartesian ? target.cartesian.pointToData(value) : target.axis ? target.axis.coordToData(target.axis.toLocalCoord(value)) : null;\n};\n/**\n * @inner\n */\n\n\ngridProto._findConvertTarget = function (ecModel, finder) {\n  var seriesModel = finder.seriesModel;\n  var xAxisModel = finder.xAxisModel || seriesModel && seriesModel.getReferringComponents('xAxis')[0];\n  var yAxisModel = finder.yAxisModel || seriesModel && seriesModel.getReferringComponents('yAxis')[0];\n  var gridModel = finder.gridModel;\n  var coordsList = this._coordsList;\n  var cartesian;\n  var axis;\n\n  if (seriesModel) {\n    cartesian = seriesModel.coordinateSystem;\n    zrUtil.indexOf(coordsList, cartesian) < 0 && (cartesian = null);\n  } else if (xAxisModel && yAxisModel) {\n    cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n  } else if (xAxisModel) {\n    axis = this.getAxis('x', xAxisModel.componentIndex);\n  } else if (yAxisModel) {\n    axis = this.getAxis('y', yAxisModel.componentIndex);\n  } // Lowest priority.\n  else if (gridModel) {\n      var grid = gridModel.coordinateSystem;\n\n      if (grid === this) {\n        cartesian = this._coordsList[0];\n      }\n    }\n\n  return {\n    cartesian: cartesian,\n    axis: axis\n  };\n};\n/**\n * @implements\n * see {module:echarts/CoodinateSystem}\n */\n\n\ngridProto.containPoint = function (point) {\n  var coord = this._coordsList[0];\n\n  if (coord) {\n    return coord.containPoint(point);\n  }\n};\n/**\n * Initialize cartesian coordinate systems\n * @private\n */\n\n\ngridProto._initCartesian = function (gridModel, ecModel, api) {\n  var axisPositionUsed = {\n    left: false,\n    right: false,\n    top: false,\n    bottom: false\n  };\n  var axesMap = {\n    x: {},\n    y: {}\n  };\n  var axesCount = {\n    x: 0,\n    y: 0\n  }; /// Create axis\n\n  ecModel.eachComponent('xAxis', createAxisCreator('x'), this);\n  ecModel.eachComponent('yAxis', createAxisCreator('y'), this);\n\n  if (!axesCount.x || !axesCount.y) {\n    // Roll back when there no either x or y axis\n    this._axesMap = {};\n    this._axesList = [];\n    return;\n  }\n\n  this._axesMap = axesMap; /// Create cartesian2d\n\n  each(axesMap.x, function (xAxis, xAxisIndex) {\n    each(axesMap.y, function (yAxis, yAxisIndex) {\n      var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n      var cartesian = new Cartesian2D(key);\n      cartesian.grid = this;\n      cartesian.model = gridModel;\n      this._coordsMap[key] = cartesian;\n\n      this._coordsList.push(cartesian);\n\n      cartesian.addAxis(xAxis);\n      cartesian.addAxis(yAxis);\n    }, this);\n  }, this);\n\n  function createAxisCreator(axisType) {\n    return function (axisModel, idx) {\n      if (!isAxisUsedInTheGrid(axisModel, gridModel, ecModel)) {\n        return;\n      }\n\n      var axisPosition = axisModel.get('position');\n\n      if (axisType === 'x') {\n        // Fix position\n        if (axisPosition !== 'top' && axisPosition !== 'bottom') {\n          // Default bottom of X\n          axisPosition = 'bottom';\n\n          if (axisPositionUsed[axisPosition]) {\n            axisPosition = axisPosition === 'top' ? 'bottom' : 'top';\n          }\n        }\n      } else {\n        // Fix position\n        if (axisPosition !== 'left' && axisPosition !== 'right') {\n          // Default left of Y\n          axisPosition = 'left';\n\n          if (axisPositionUsed[axisPosition]) {\n            axisPosition = axisPosition === 'left' ? 'right' : 'left';\n          }\n        }\n      }\n\n      axisPositionUsed[axisPosition] = true;\n      var axis = new Axis2D(axisType, axisHelper.createScaleByModel(axisModel), [0, 0], axisModel.get('type'), axisPosition);\n      var isCategory = axis.type === 'category';\n      axis.onBand = isCategory && axisModel.get('boundaryGap');\n      axis.inverse = axisModel.get('inverse');\n      axis.onZero = axisModel.get('axisLine.onZero');\n      axis.onZeroAxisIndex = axisModel.get('axisLine.onZeroAxisIndex'); // Inject axis into axisModel\n\n      axisModel.axis = axis; // Inject axisModel into axis\n\n      axis.model = axisModel; // Inject grid info axis\n\n      axis.grid = this; // Index of axis, can be used as key\n\n      axis.index = idx;\n\n      this._axesList.push(axis);\n\n      axesMap[axisType][idx] = axis;\n      axesCount[axisType]++;\n    };\n  }\n};\n/**\n * Update cartesian properties from series\n * @param  {module:echarts/model/Option} option\n * @private\n */\n\n\ngridProto._updateScale = function (ecModel, gridModel) {\n  // Reset scale\n  zrUtil.each(this._axesList, function (axis) {\n    axis.scale.setExtent(Infinity, -Infinity);\n  });\n  ecModel.eachSeries(function (seriesModel) {\n    if (isCartesian2D(seriesModel)) {\n      var axesModels = findAxesModels(seriesModel, ecModel);\n      var xAxisModel = axesModels[0];\n      var yAxisModel = axesModels[1];\n\n      if (!isAxisUsedInTheGrid(xAxisModel, gridModel, ecModel) || !isAxisUsedInTheGrid(yAxisModel, gridModel, ecModel)) {\n        return;\n      }\n\n      var cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n      var data = seriesModel.getData();\n      var xAxis = cartesian.getAxis('x');\n      var yAxis = cartesian.getAxis('y');\n\n      if (data.type === 'list') {\n        unionExtent(data, xAxis, seriesModel);\n        unionExtent(data, yAxis, seriesModel);\n      }\n    }\n  }, this);\n\n  function unionExtent(data, axis, seriesModel) {\n    each(seriesModel.coordDimToDataDim(axis.dim), function (dim) {\n      axis.scale.unionExtentFromData(data, dim);\n    });\n  }\n};\n/**\n * @param {string} [dim] 'x' or 'y' or 'auto' or null/undefined\n * @return {Object} {baseAxes: [], otherAxes: []}\n */\n\n\ngridProto.getTooltipAxes = function (dim) {\n  var baseAxes = [];\n  var otherAxes = [];\n  each(this.getCartesians(), function (cartesian) {\n    var baseAxis = dim != null && dim !== 'auto' ? cartesian.getAxis(dim) : cartesian.getBaseAxis();\n    var otherAxis = cartesian.getOtherAxis(baseAxis);\n    zrUtil.indexOf(baseAxes, baseAxis) < 0 && baseAxes.push(baseAxis);\n    zrUtil.indexOf(otherAxes, otherAxis) < 0 && otherAxes.push(otherAxis);\n  });\n  return {\n    baseAxes: baseAxes,\n    otherAxes: otherAxes\n  };\n};\n/**\n * @inner\n */\n\n\nfunction updateAxisTransfrom(axis, coordBase) {\n  var axisExtent = axis.getExtent();\n  var axisExtentSum = axisExtent[0] + axisExtent[1]; // Fast transform\n\n  axis.toGlobalCoord = axis.dim === 'x' ? function (coord) {\n    return coord + coordBase;\n  } : function (coord) {\n    return axisExtentSum - coord + coordBase;\n  };\n  axis.toLocalCoord = axis.dim === 'x' ? function (coord) {\n    return coord - coordBase;\n  } : function (coord) {\n    return axisExtentSum - coord + coordBase;\n  };\n}\n\nvar axesTypes = ['xAxis', 'yAxis'];\n/**\n * @inner\n */\n\nfunction findAxesModels(seriesModel, ecModel) {\n  return zrUtil.map(axesTypes, function (axisType) {\n    var axisModel = seriesModel.getReferringComponents(axisType)[0];\n    return axisModel;\n  });\n}\n/**\n * @inner\n */\n\n\nfunction isCartesian2D(seriesModel) {\n  return seriesModel.get('coordinateSystem') === 'cartesian2d';\n}\n\nGrid.create = function (ecModel, api) {\n  var grids = [];\n  ecModel.eachComponent('grid', function (gridModel, idx) {\n    var grid = new Grid(gridModel, ecModel, api);\n    grid.name = 'grid_' + idx; // dataSampling requires axis extent, so resize\n    // should be performed in create stage.\n\n    grid.resize(gridModel, api, true);\n    gridModel.coordinateSystem = grid;\n    grids.push(grid);\n  }); // Inject the coordinateSystems into seriesModel\n\n  ecModel.eachSeries(function (seriesModel) {\n    if (!isCartesian2D(seriesModel)) {\n      return;\n    }\n\n    var axesModels = findAxesModels(seriesModel, ecModel);\n    var xAxisModel = axesModels[0];\n    var yAxisModel = axesModels[1];\n    var gridModel = xAxisModel.getCoordSysModel();\n    var grid = gridModel.coordinateSystem;\n    seriesModel.coordinateSystem = grid.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n  });\n  return grids;\n}; // For deciding which dimensions to use when creating list data\n\n\nGrid.dimensions = Grid.prototype.dimensions = Cartesian2D.prototype.dimensions;\nCoordinateSystem.register('cartesian2d', Grid);\nvar _default = Grid;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1614:\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {var _config = __webpack_require__(1494);\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = __webpack_require__(1479);\n\nvar Model = __webpack_require__(1498);\n\nvar DataDiffer = __webpack_require__(1710);\n\nvar modelUtil = __webpack_require__(1484);\n\n/**\n * List for data storage\n * @module echarts/data/List\n */\nvar isObject = zrUtil.isObject;\nvar UNDEFINED = 'undefined';\nvar globalObj = typeof window === UNDEFINED ? global : window;\nvar dataCtors = {\n  'float': typeof globalObj.Float64Array === UNDEFINED ? Array : globalObj.Float64Array,\n  'int': typeof globalObj.Int32Array === UNDEFINED ? Array : globalObj.Int32Array,\n  // Ordinal data type can be string or int\n  'ordinal': Array,\n  'number': Array,\n  'time': Array\n};\nvar TRANSFERABLE_PROPERTIES = ['stackedOn', 'hasItemOption', '_nameList', '_idList', '_rawData'];\n\nfunction transferProperties(a, b) {\n  zrUtil.each(TRANSFERABLE_PROPERTIES.concat(b.__wrappedMethods || []), function (propName) {\n    if (b.hasOwnProperty(propName)) {\n      a[propName] = b[propName];\n    }\n  });\n  a.__wrappedMethods = b.__wrappedMethods;\n}\n\nfunction DefaultDataProvider(dataArray) {\n  this._array = dataArray || [];\n}\n\nDefaultDataProvider.prototype.pure = false;\n\nDefaultDataProvider.prototype.count = function () {\n  return this._array.length;\n};\n\nDefaultDataProvider.prototype.getItem = function (idx) {\n  return this._array[idx];\n};\n/**\n * @constructor\n * @alias module:echarts/data/List\n *\n * @param {Array.<string|Object>} dimensions\n *      For example, ['someDimName', {name: 'someDimName', type: 'someDimType'}, ...].\n *      Dimensions should be concrete names like x, y, z, lng, lat, angle, radius\n * @param {module:echarts/model/Model} hostModel\n */\n\n\nvar List = function (dimensions, hostModel) {\n  dimensions = dimensions || ['x', 'y'];\n  var dimensionInfos = {};\n  var dimensionNames = [];\n\n  for (var i = 0; i < dimensions.length; i++) {\n    var dimensionName;\n    var dimensionInfo = {};\n\n    if (typeof dimensions[i] === 'string') {\n      dimensionName = dimensions[i];\n      dimensionInfo = {\n        name: dimensionName,\n        coordDim: dimensionName,\n        coordDimIndex: 0,\n        stackable: false,\n        // Type can be 'float', 'int', 'number'\n        // Default is number, Precision of float may not enough\n        type: 'number'\n      };\n    } else {\n      dimensionInfo = dimensions[i];\n      dimensionName = dimensionInfo.name;\n      dimensionInfo.type = dimensionInfo.type || 'number';\n\n      if (!dimensionInfo.coordDim) {\n        dimensionInfo.coordDim = dimensionName;\n        dimensionInfo.coordDimIndex = 0;\n      }\n    }\n\n    dimensionInfo.otherDims = dimensionInfo.otherDims || {};\n    dimensionNames.push(dimensionName);\n    dimensionInfos[dimensionName] = dimensionInfo;\n  }\n  /**\n   * @readOnly\n   * @type {Array.<string>}\n   */\n\n\n  this.dimensions = dimensionNames;\n  /**\n   * Infomation of each data dimension, like data type.\n   * @type {Object}\n   */\n\n  this._dimensionInfos = dimensionInfos;\n  /**\n   * @type {module:echarts/model/Model}\n   */\n\n  this.hostModel = hostModel;\n  /**\n   * @type {module:echarts/model/Model}\n   */\n\n  this.dataType;\n  /**\n   * Indices stores the indices of data subset after filtered.\n   * This data subset will be used in chart.\n   * @type {Array.<number>}\n   * @readOnly\n   */\n\n  this.indices = [];\n  /**\n   * Data storage\n   * @type {Object.<key, TypedArray|Array>}\n   * @private\n   */\n\n  this._storage = {};\n  /**\n   * @type {Array.<string>}\n   */\n\n  this._nameList = [];\n  /**\n   * @type {Array.<string>}\n   */\n\n  this._idList = [];\n  /**\n   * Models of data option is stored sparse for optimizing memory cost\n   * @type {Array.<module:echarts/model/Model>}\n   * @private\n   */\n\n  this._optionModels = [];\n  /**\n   * @param {module:echarts/data/List}\n   */\n\n  this.stackedOn = null;\n  /**\n   * Global visual properties after visual coding\n   * @type {Object}\n   * @private\n   */\n\n  this._visual = {};\n  /**\n   * Globel layout properties.\n   * @type {Object}\n   * @private\n   */\n\n  this._layout = {};\n  /**\n   * Item visual properties after visual coding\n   * @type {Array.<Object>}\n   * @private\n   */\n\n  this._itemVisuals = [];\n  /**\n   * Item layout properties after layout\n   * @type {Array.<Object>}\n   * @private\n   */\n\n  this._itemLayouts = [];\n  /**\n   * Graphic elemnents\n   * @type {Array.<module:zrender/Element>}\n   * @private\n   */\n\n  this._graphicEls = [];\n  /**\n   * @type {Array.<Array|Object>}\n   * @private\n   */\n\n  this._rawData;\n  /**\n   * @type {Object}\n   * @private\n   */\n\n  this._extent;\n};\n\nvar listProto = List.prototype;\nlistProto.type = 'list';\n/**\n * If each data item has it's own option\n * @type {boolean}\n */\n\nlistProto.hasItemOption = true;\n/**\n * Get dimension name\n * @param {string|number} dim\n *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n * @return {string} Concrete dim name.\n */\n\nlistProto.getDimension = function (dim) {\n  if (!isNaN(dim)) {\n    dim = this.dimensions[dim] || dim;\n  }\n\n  return dim;\n};\n/**\n * Get type and stackable info of particular dimension\n * @param {string|number} dim\n *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n */\n\n\nlistProto.getDimensionInfo = function (dim) {\n  return zrUtil.clone(this._dimensionInfos[this.getDimension(dim)]);\n};\n/**\n * Initialize from data\n * @param {Array.<Object|number|Array>} data\n * @param {Array.<string>} [nameList]\n * @param {Function} [dimValueGetter] (dataItem, dimName, dataIndex, dimIndex) => number\n */\n\n\nlistProto.initData = function (data, nameList, dimValueGetter) {\n  data = data || [];\n  var isDataArray = zrUtil.isArray(data);\n\n  if (isDataArray) {\n    data = new DefaultDataProvider(data);\n  }\n\n  this._rawData = data; // Clear\n\n  var storage = this._storage = {};\n  var indices = this.indices = [];\n  var dimensions = this.dimensions;\n  var dimensionInfoMap = this._dimensionInfos;\n  var size = data.count();\n  var idList = [];\n  var nameRepeatCount = {};\n  var nameDimIdx;\n  nameList = nameList || []; // Init storage\n\n  for (var i = 0; i < dimensions.length; i++) {\n    var dimInfo = dimensionInfoMap[dimensions[i]];\n    dimInfo.otherDims.itemName === 0 && (nameDimIdx = i);\n    var DataCtor = dataCtors[dimInfo.type];\n    storage[dimensions[i]] = new DataCtor(size);\n  }\n\n  var self = this;\n\n  if (!dimValueGetter) {\n    self.hasItemOption = false;\n  } // Default dim value getter\n\n\n  dimValueGetter = dimValueGetter || function (dataItem, dimName, dataIndex, dimIndex) {\n    var value = modelUtil.getDataItemValue(dataItem); // If any dataItem is like { value: 10 }\n\n    if (modelUtil.isDataItemOption(dataItem)) {\n      self.hasItemOption = true;\n    }\n\n    return modelUtil.converDataValue(value instanceof Array ? value[dimIndex] // If value is a single number or something else not array.\n    : value, dimensionInfoMap[dimName]);\n  };\n\n  for (var i = 0; i < size; i++) {\n    // NOTICE: Try not to write things into dataItem\n    var dataItem = data.getItem(i); // Each data item is value\n    // [1, 2]\n    // 2\n    // Bar chart, line chart which uses category axis\n    // only gives the 'y' value. 'x' value is the indices of cateogry\n    // Use a tempValue to normalize the value to be a (x, y) value\n    // Store the data by dimensions\n\n    for (var k = 0; k < dimensions.length; k++) {\n      var dim = dimensions[k];\n      var dimStorage = storage[dim]; // PENDING NULL is empty or zero\n\n      dimStorage[i] = dimValueGetter(dataItem, dim, i, k);\n    }\n\n    indices.push(i);\n  } // Use the name in option and create id\n\n\n  for (var i = 0; i < size; i++) {\n    var dataItem = data.getItem(i);\n\n    if (!nameList[i] && dataItem) {\n      if (dataItem.name != null) {\n        nameList[i] = dataItem.name;\n      } else if (nameDimIdx != null) {\n        nameList[i] = storage[dimensions[nameDimIdx]][i];\n      }\n    }\n\n    var name = nameList[i] || ''; // Try using the id in option\n\n    var id = dataItem && dataItem.id;\n\n    if (!id && name) {\n      // Use name as id and add counter to avoid same name\n      nameRepeatCount[name] = nameRepeatCount[name] || 0;\n      id = name;\n\n      if (nameRepeatCount[name] > 0) {\n        id += '__ec__' + nameRepeatCount[name];\n      }\n\n      nameRepeatCount[name]++;\n    }\n\n    id && (idList[i] = id);\n  }\n\n  this._nameList = nameList;\n  this._idList = idList;\n};\n/**\n * @return {number}\n */\n\n\nlistProto.count = function () {\n  return this.indices.length;\n};\n/**\n * Get value. Return NaN if idx is out of range.\n * @param {string} dim Dim must be concrete name.\n * @param {number} idx\n * @param {boolean} stack\n * @return {number}\n */\n\n\nlistProto.get = function (dim, idx, stack) {\n  var storage = this._storage;\n  var dataIndex = this.indices[idx]; // If value not exists\n\n  if (dataIndex == null || !storage[dim]) {\n    return NaN;\n  }\n\n  var value = storage[dim][dataIndex]; // FIXME ordinal data type is not stackable\n\n  if (stack) {\n    var dimensionInfo = this._dimensionInfos[dim];\n\n    if (dimensionInfo && dimensionInfo.stackable) {\n      var stackedOn = this.stackedOn;\n\n      while (stackedOn) {\n        // Get no stacked data of stacked on\n        var stackedValue = stackedOn.get(dim, idx); // Considering positive stack, negative stack and empty data\n\n        if (value >= 0 && stackedValue > 0 || // Positive stack\n        value <= 0 && stackedValue < 0 // Negative stack\n        ) {\n            value += stackedValue;\n          }\n\n        stackedOn = stackedOn.stackedOn;\n      }\n    }\n  }\n\n  return value;\n};\n/**\n * Get value for multi dimensions.\n * @param {Array.<string>} [dimensions] If ignored, using all dimensions.\n * @param {number} idx\n * @param {boolean} stack\n * @return {number}\n */\n\n\nlistProto.getValues = function (dimensions, idx, stack) {\n  var values = [];\n\n  if (!zrUtil.isArray(dimensions)) {\n    stack = idx;\n    idx = dimensions;\n    dimensions = this.dimensions;\n  }\n\n  for (var i = 0, len = dimensions.length; i < len; i++) {\n    values.push(this.get(dimensions[i], idx, stack));\n  }\n\n  return values;\n};\n/**\n * If value is NaN. Inlcuding '-'\n * @param {string} dim\n * @param {number} idx\n * @return {number}\n */\n\n\nlistProto.hasValue = function (idx) {\n  var dimensions = this.dimensions;\n  var dimensionInfos = this._dimensionInfos;\n\n  for (var i = 0, len = dimensions.length; i < len; i++) {\n    if ( // Ordinal type can be string or number\n    dimensionInfos[dimensions[i]].type !== 'ordinal' && isNaN(this.get(dimensions[i], idx))) {\n      return false;\n    }\n  }\n\n  return true;\n};\n/**\n * Get extent of data in one dimension\n * @param {string} dim\n * @param {boolean} stack\n * @param {Function} filter\n */\n\n\nlistProto.getDataExtent = function (dim, stack, filter) {\n  dim = this.getDimension(dim);\n  var dimData = this._storage[dim];\n  var dimInfo = this.getDimensionInfo(dim);\n  stack = dimInfo && dimInfo.stackable && stack;\n  var dimExtent = (this._extent || (this._extent = {}))[dim + !!stack];\n  var value;\n\n  if (dimExtent) {\n    return dimExtent;\n  } // var dimInfo = this._dimensionInfos[dim];\n\n\n  if (dimData) {\n    var min = Infinity;\n    var max = -Infinity; // var isOrdinal = dimInfo.type === 'ordinal';\n\n    for (var i = 0, len = this.count(); i < len; i++) {\n      value = this.get(dim, i, stack); // FIXME\n      // if (isOrdinal && typeof value === 'string') {\n      //     value = zrUtil.indexOf(dimData, value);\n      // }\n\n      if (!filter || filter(value, dim, i)) {\n        value < min && (min = value);\n        value > max && (max = value);\n      }\n    }\n\n    return this._extent[dim + !!stack] = [min, max];\n  } else {\n    return [Infinity, -Infinity];\n  }\n};\n/**\n * Get sum of data in one dimension\n * @param {string} dim\n * @param {boolean} stack\n */\n\n\nlistProto.getSum = function (dim, stack) {\n  var dimData = this._storage[dim];\n  var sum = 0;\n\n  if (dimData) {\n    for (var i = 0, len = this.count(); i < len; i++) {\n      var value = this.get(dim, i, stack);\n\n      if (!isNaN(value)) {\n        sum += value;\n      }\n    }\n  }\n\n  return sum;\n};\n/**\n * Retreive the index with given value\n * @param {number} idx\n * @param {number} value\n * @return {number}\n */\n// FIXME Precision of float value\n\n\nlistProto.indexOf = function (dim, value) {\n  var storage = this._storage;\n  var dimData = storage[dim];\n  var indices = this.indices;\n\n  if (dimData) {\n    for (var i = 0, len = indices.length; i < len; i++) {\n      var rawIndex = indices[i];\n\n      if (dimData[rawIndex] === value) {\n        return i;\n      }\n    }\n  }\n\n  return -1;\n};\n/**\n * Retreive the index with given name\n * @param {number} idx\n * @param {number} name\n * @return {number}\n */\n\n\nlistProto.indexOfName = function (name) {\n  var indices = this.indices;\n  var nameList = this._nameList;\n\n  for (var i = 0, len = indices.length; i < len; i++) {\n    var rawIndex = indices[i];\n\n    if (nameList[rawIndex] === name) {\n      return i;\n    }\n  }\n\n  return -1;\n};\n/**\n * Retreive the index with given raw data index\n * @param {number} idx\n * @param {number} name\n * @return {number}\n */\n\n\nlistProto.indexOfRawIndex = function (rawIndex) {\n  // Indices are ascending\n  var indices = this.indices; // If rawIndex === dataIndex\n\n  var rawDataIndex = indices[rawIndex];\n\n  if (rawDataIndex != null && rawDataIndex === rawIndex) {\n    return rawIndex;\n  }\n\n  var left = 0;\n  var right = indices.length - 1;\n\n  while (left <= right) {\n    var mid = (left + right) / 2 | 0;\n\n    if (indices[mid] < rawIndex) {\n      left = mid + 1;\n    } else if (indices[mid] > rawIndex) {\n      right = mid - 1;\n    } else {\n      return mid;\n    }\n  }\n\n  return -1;\n};\n/**\n * Retreive the index of nearest value\n * @param {string} dim\n * @param {number} value\n * @param {boolean} stack If given value is after stacked\n * @param {number} [maxDistance=Infinity]\n * @return {Array.<number>} Considere multiple points has the same value.\n */\n\n\nlistProto.indicesOfNearest = function (dim, value, stack, maxDistance) {\n  var storage = this._storage;\n  var dimData = storage[dim];\n  var nearestIndices = [];\n\n  if (!dimData) {\n    return nearestIndices;\n  }\n\n  if (maxDistance == null) {\n    maxDistance = Infinity;\n  }\n\n  var minDist = Number.MAX_VALUE;\n  var minDiff = -1;\n\n  for (var i = 0, len = this.count(); i < len; i++) {\n    var diff = value - this.get(dim, i, stack);\n    var dist = Math.abs(diff);\n\n    if (diff <= maxDistance && dist <= minDist) {\n      // For the case of two data are same on xAxis, which has sequence data.\n      // Show the nearest index\n      // https://github.com/ecomfe/echarts/issues/2869\n      if (dist < minDist || diff >= 0 && minDiff < 0) {\n        minDist = dist;\n        minDiff = diff;\n        nearestIndices.length = 0;\n      }\n\n      nearestIndices.push(i);\n    }\n  }\n\n  return nearestIndices;\n};\n/**\n * Get raw data index\n * @param {number} idx\n * @return {number}\n */\n\n\nlistProto.getRawIndex = function (idx) {\n  var rawIdx = this.indices[idx];\n  return rawIdx == null ? -1 : rawIdx;\n};\n/**\n * Get raw data item\n * @param {number} idx\n * @return {number}\n */\n\n\nlistProto.getRawDataItem = function (idx) {\n  return this._rawData.getItem(this.getRawIndex(idx));\n};\n/**\n * @param {number} idx\n * @param {boolean} [notDefaultIdx=false]\n * @return {string}\n */\n\n\nlistProto.getName = function (idx) {\n  return this._nameList[this.indices[idx]] || '';\n};\n/**\n * @param {number} idx\n * @param {boolean} [notDefaultIdx=false]\n * @return {string}\n */\n\n\nlistProto.getId = function (idx) {\n  return this._idList[this.indices[idx]] || this.getRawIndex(idx) + '';\n};\n\nfunction normalizeDimensions(dimensions) {\n  if (!zrUtil.isArray(dimensions)) {\n    dimensions = [dimensions];\n  }\n\n  return dimensions;\n}\n/**\n * Data iteration\n * @param {string|Array.<string>}\n * @param {Function} cb\n * @param {boolean} [stack=false]\n * @param {*} [context=this]\n *\n * @example\n *  list.each('x', function (x, idx) {});\n *  list.each(['x', 'y'], function (x, y, idx) {});\n *  list.each(function (idx) {})\n */\n\n\nlistProto.each = function (dims, cb, stack, context) {\n  if (typeof dims === 'function') {\n    context = stack;\n    stack = cb;\n    cb = dims;\n    dims = [];\n  }\n\n  dims = zrUtil.map(normalizeDimensions(dims), this.getDimension, this);\n  var value = [];\n  var dimSize = dims.length;\n  var indices = this.indices;\n  context = context || this;\n\n  for (var i = 0; i < indices.length; i++) {\n    // Simple optimization\n    switch (dimSize) {\n      case 0:\n        cb.call(context, i);\n        break;\n\n      case 1:\n        cb.call(context, this.get(dims[0], i, stack), i);\n        break;\n\n      case 2:\n        cb.call(context, this.get(dims[0], i, stack), this.get(dims[1], i, stack), i);\n        break;\n\n      default:\n        for (var k = 0; k < dimSize; k++) {\n          value[k] = this.get(dims[k], i, stack);\n        } // Index\n\n\n        value[k] = i;\n        cb.apply(context, value);\n    }\n  }\n};\n/**\n * Data filter\n * @param {string|Array.<string>}\n * @param {Function} cb\n * @param {boolean} [stack=false]\n * @param {*} [context=this]\n */\n\n\nlistProto.filterSelf = function (dimensions, cb, stack, context) {\n  if (typeof dimensions === 'function') {\n    context = stack;\n    stack = cb;\n    cb = dimensions;\n    dimensions = [];\n  }\n\n  dimensions = zrUtil.map(normalizeDimensions(dimensions), this.getDimension, this);\n  var newIndices = [];\n  var value = [];\n  var dimSize = dimensions.length;\n  var indices = this.indices;\n  context = context || this;\n\n  for (var i = 0; i < indices.length; i++) {\n    var keep; // Simple optimization\n\n    if (!dimSize) {\n      keep = cb.call(context, i);\n    } else if (dimSize === 1) {\n      keep = cb.call(context, this.get(dimensions[0], i, stack), i);\n    } else {\n      for (var k = 0; k < dimSize; k++) {\n        value[k] = this.get(dimensions[k], i, stack);\n      }\n\n      value[k] = i;\n      keep = cb.apply(context, value);\n    }\n\n    if (keep) {\n      newIndices.push(indices[i]);\n    }\n  }\n\n  this.indices = newIndices; // Reset data extent\n\n  this._extent = {};\n  return this;\n};\n/**\n * Data mapping to a plain array\n * @param {string|Array.<string>} [dimensions]\n * @param {Function} cb\n * @param {boolean} [stack=false]\n * @param {*} [context=this]\n * @return {Array}\n */\n\n\nlistProto.mapArray = function (dimensions, cb, stack, context) {\n  if (typeof dimensions === 'function') {\n    context = stack;\n    stack = cb;\n    cb = dimensions;\n    dimensions = [];\n  }\n\n  var result = [];\n  this.each(dimensions, function () {\n    result.push(cb && cb.apply(this, arguments));\n  }, stack, context);\n  return result;\n};\n\nfunction cloneListForMapAndSample(original, excludeDimensions) {\n  var allDimensions = original.dimensions;\n  var list = new List(zrUtil.map(allDimensions, original.getDimensionInfo, original), original.hostModel); // FIXME If needs stackedOn, value may already been stacked\n\n  transferProperties(list, original);\n  var storage = list._storage = {};\n  var originalStorage = original._storage; // Init storage\n\n  for (var i = 0; i < allDimensions.length; i++) {\n    var dim = allDimensions[i];\n    var dimStore = originalStorage[dim];\n\n    if (zrUtil.indexOf(excludeDimensions, dim) >= 0) {\n      storage[dim] = new dimStore.constructor(originalStorage[dim].length);\n    } else {\n      // Direct reference for other dimensions\n      storage[dim] = originalStorage[dim];\n    }\n  }\n\n  return list;\n}\n/**\n * Data mapping to a new List with given dimensions\n * @param {string|Array.<string>} dimensions\n * @param {Function} cb\n * @param {boolean} [stack=false]\n * @param {*} [context=this]\n * @return {Array}\n */\n\n\nlistProto.map = function (dimensions, cb, stack, context) {\n  dimensions = zrUtil.map(normalizeDimensions(dimensions), this.getDimension, this);\n  var list = cloneListForMapAndSample(this, dimensions); // Following properties are all immutable.\n  // So we can reference to the same value\n\n  var indices = list.indices = this.indices;\n  var storage = list._storage;\n  var tmpRetValue = [];\n  this.each(dimensions, function () {\n    var idx = arguments[arguments.length - 1];\n    var retValue = cb && cb.apply(this, arguments);\n\n    if (retValue != null) {\n      // a number\n      if (typeof retValue === 'number') {\n        tmpRetValue[0] = retValue;\n        retValue = tmpRetValue;\n      }\n\n      for (var i = 0; i < retValue.length; i++) {\n        var dim = dimensions[i];\n        var dimStore = storage[dim];\n        var rawIdx = indices[idx];\n\n        if (dimStore) {\n          dimStore[rawIdx] = retValue[i];\n        }\n      }\n    }\n  }, stack, context);\n  return list;\n};\n/**\n * Large data down sampling on given dimension\n * @param {string} dimension\n * @param {number} rate\n * @param {Function} sampleValue\n * @param {Function} sampleIndex Sample index for name and id\n */\n\n\nlistProto.downSample = function (dimension, rate, sampleValue, sampleIndex) {\n  var list = cloneListForMapAndSample(this, [dimension]);\n  var storage = this._storage;\n  var targetStorage = list._storage;\n  var originalIndices = this.indices;\n  var indices = list.indices = [];\n  var frameValues = [];\n  var frameIndices = [];\n  var frameSize = Math.floor(1 / rate);\n  var dimStore = targetStorage[dimension];\n  var len = this.count(); // Copy data from original data\n\n  for (var i = 0; i < storage[dimension].length; i++) {\n    targetStorage[dimension][i] = storage[dimension][i];\n  }\n\n  for (var i = 0; i < len; i += frameSize) {\n    // Last frame\n    if (frameSize > len - i) {\n      frameSize = len - i;\n      frameValues.length = frameSize;\n    }\n\n    for (var k = 0; k < frameSize; k++) {\n      var idx = originalIndices[i + k];\n      frameValues[k] = dimStore[idx];\n      frameIndices[k] = idx;\n    }\n\n    var value = sampleValue(frameValues);\n    var idx = frameIndices[sampleIndex(frameValues, value) || 0]; // Only write value on the filtered data\n\n    dimStore[idx] = value;\n    indices.push(idx);\n  }\n\n  return list;\n};\n/**\n * Get model of one data item.\n *\n * @param {number} idx\n */\n// FIXME Model proxy ?\n\n\nlistProto.getItemModel = function (idx) {\n  var hostModel = this.hostModel;\n  idx = this.indices[idx];\n  return new Model(this._rawData.getItem(idx), hostModel, hostModel && hostModel.ecModel);\n};\n/**\n * Create a data differ\n * @param {module:echarts/data/List} otherList\n * @return {module:echarts/data/DataDiffer}\n */\n\n\nlistProto.diff = function (otherList) {\n  var idList = this._idList;\n  var otherIdList = otherList && otherList._idList;\n  var val; // Use prefix to avoid index to be the same as otherIdList[idx],\n  // which will cause weird udpate animation.\n\n  var prefix = 'e\\0\\0';\n  return new DataDiffer(otherList ? otherList.indices : [], this.indices, function (idx) {\n    return (val = otherIdList[idx]) != null ? val : prefix + idx;\n  }, function (idx) {\n    return (val = idList[idx]) != null ? val : prefix + idx;\n  });\n};\n/**\n * Get visual property.\n * @param {string} key\n */\n\n\nlistProto.getVisual = function (key) {\n  var visual = this._visual;\n  return visual && visual[key];\n};\n/**\n * Set visual property\n * @param {string|Object} key\n * @param {*} [value]\n *\n * @example\n *  setVisual('color', color);\n *  setVisual({\n *      'color': color\n *  });\n */\n\n\nlistProto.setVisual = function (key, val) {\n  if (isObject(key)) {\n    for (var name in key) {\n      if (key.hasOwnProperty(name)) {\n        this.setVisual(name, key[name]);\n      }\n    }\n\n    return;\n  }\n\n  this._visual = this._visual || {};\n  this._visual[key] = val;\n};\n/**\n * Set layout property.\n * @param {string|Object} key\n * @param {*} [val]\n */\n\n\nlistProto.setLayout = function (key, val) {\n  if (isObject(key)) {\n    for (var name in key) {\n      if (key.hasOwnProperty(name)) {\n        this.setLayout(name, key[name]);\n      }\n    }\n\n    return;\n  }\n\n  this._layout[key] = val;\n};\n/**\n * Get layout property.\n * @param  {string} key.\n * @return {*}\n */\n\n\nlistProto.getLayout = function (key) {\n  return this._layout[key];\n};\n/**\n * Get layout of single data item\n * @param {number} idx\n */\n\n\nlistProto.getItemLayout = function (idx) {\n  return this._itemLayouts[idx];\n};\n/**\n * Set layout of single data item\n * @param {number} idx\n * @param {Object} layout\n * @param {boolean=} [merge=false]\n */\n\n\nlistProto.setItemLayout = function (idx, layout, merge) {\n  this._itemLayouts[idx] = merge ? zrUtil.extend(this._itemLayouts[idx] || {}, layout) : layout;\n};\n/**\n * Clear all layout of single data item\n */\n\n\nlistProto.clearItemLayouts = function () {\n  this._itemLayouts.length = 0;\n};\n/**\n * Get visual property of single data item\n * @param {number} idx\n * @param {string} key\n * @param {boolean} [ignoreParent=false]\n */\n\n\nlistProto.getItemVisual = function (idx, key, ignoreParent) {\n  var itemVisual = this._itemVisuals[idx];\n  var val = itemVisual && itemVisual[key];\n\n  if (val == null && !ignoreParent) {\n    // Use global visual property\n    return this.getVisual(key);\n  }\n\n  return val;\n};\n/**\n * Set visual property of single data item\n *\n * @param {number} idx\n * @param {string|Object} key\n * @param {*} [value]\n *\n * @example\n *  setItemVisual(0, 'color', color);\n *  setItemVisual(0, {\n *      'color': color\n *  });\n */\n\n\nlistProto.setItemVisual = function (idx, key, value) {\n  var itemVisual = this._itemVisuals[idx] || {};\n  this._itemVisuals[idx] = itemVisual;\n\n  if (isObject(key)) {\n    for (var name in key) {\n      if (key.hasOwnProperty(name)) {\n        itemVisual[name] = key[name];\n      }\n    }\n\n    return;\n  }\n\n  itemVisual[key] = value;\n};\n/**\n * Clear itemVisuals and list visual.\n */\n\n\nlistProto.clearAllVisual = function () {\n  this._visual = {};\n  this._itemVisuals = [];\n};\n\nvar setItemDataAndSeriesIndex = function (child) {\n  child.seriesIndex = this.seriesIndex;\n  child.dataIndex = this.dataIndex;\n  child.dataType = this.dataType;\n};\n/**\n * Set graphic element relative to data. It can be set as null\n * @param {number} idx\n * @param {module:zrender/Element} [el]\n */\n\n\nlistProto.setItemGraphicEl = function (idx, el) {\n  var hostModel = this.hostModel;\n\n  if (el) {\n    // Add data index and series index for indexing the data by element\n    // Useful in tooltip\n    el.dataIndex = idx;\n    el.dataType = this.dataType;\n    el.seriesIndex = hostModel && hostModel.seriesIndex;\n\n    if (el.type === 'group') {\n      el.traverse(setItemDataAndSeriesIndex, el);\n    }\n  }\n\n  this._graphicEls[idx] = el;\n};\n/**\n * @param {number} idx\n * @return {module:zrender/Element}\n */\n\n\nlistProto.getItemGraphicEl = function (idx) {\n  return this._graphicEls[idx];\n};\n/**\n * @param {Function} cb\n * @param {*} context\n */\n\n\nlistProto.eachItemGraphicEl = function (cb, context) {\n  zrUtil.each(this._graphicEls, function (el, idx) {\n    if (el) {\n      cb && cb.call(context, el, idx);\n    }\n  });\n};\n/**\n * Shallow clone a new list except visual and layout properties, and graph elements.\n * New list only change the indices.\n */\n\n\nlistProto.cloneShallow = function () {\n  var dimensionInfoList = zrUtil.map(this.dimensions, this.getDimensionInfo, this);\n  var list = new List(dimensionInfoList, this.hostModel); // FIXME\n\n  list._storage = this._storage;\n  transferProperties(list, this); // Clone will not change the data extent and indices\n\n  list.indices = this.indices.slice();\n\n  if (this._extent) {\n    list._extent = zrUtil.extend({}, this._extent);\n  }\n\n  return list;\n};\n/**\n * Wrap some method to add more feature\n * @param {string} methodName\n * @param {Function} injectFunction\n */\n\n\nlistProto.wrapMethod = function (methodName, injectFunction) {\n  var originalMethod = this[methodName];\n\n  if (typeof originalMethod !== 'function') {\n    return;\n  }\n\n  this.__wrappedMethods = this.__wrappedMethods || [];\n\n  this.__wrappedMethods.push(methodName);\n\n  this[methodName] = function () {\n    var res = originalMethod.apply(this, arguments);\n    return injectFunction.apply(this, [res].concat(zrUtil.slice(arguments)));\n  };\n}; // Methods that create a new list based on this list should be listed here.\n// Notice that those method should `RETURN` the new list.\n\n\nlistProto.TRANSFERABLE_METHODS = ['cloneShallow', 'downSample', 'map']; // Methods that change indices of this list should be listed here.\n\nlistProto.CHANGABLE_METHODS = ['filterSelf'];\nvar _default = List;\nmodule.exports = _default;\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(22)))\n\n/***/ }),\n\n/***/ 1615:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1479);\n\nvar _model = __webpack_require__(1484);\n\nvar normalizeToArray = _model.normalizeToArray;\n\n/**\n * Complete dimensions by data (guess dimension).\n */\nvar each = zrUtil.each;\nvar isString = zrUtil.isString;\nvar defaults = zrUtil.defaults;\nvar OTHER_DIMS = {\n  tooltip: 1,\n  label: 1,\n  itemName: 1\n};\n/**\n * Complete the dimensions array, by user defined `dimension` and `encode`,\n * and guessing from the data structure.\n * If no 'value' dimension specified, the first no-named dimension will be\n * named as 'value'.\n *\n * @param {Array.<string>} sysDims Necessary dimensions, like ['x', 'y'], which\n *      provides not only dim template, but also default order.\n *      `name` of each item provides default coord name.\n *      [{dimsDef: []}, ...] can be specified to give names.\n * @param {Array} data Data list. [[1, 2, 3], [2, 3, 4]].\n * @param {Object} [opt]\n * @param {Array.<Object|string>} [opt.dimsDef] option.series.dimensions User defined dimensions\n *      For example: ['asdf', {name, type}, ...].\n * @param {Object} [opt.encodeDef] option.series.encode {x: 2, y: [3, 1], tooltip: [1, 2], label: 3}\n * @param {string} [opt.extraPrefix] Prefix of name when filling the left dimensions.\n * @param {string} [opt.extraFromZero] If specified, extra dim names will be:\n *                      extraPrefix + 0, extraPrefix + extraBaseIndex + 1 ...\n *                      If not specified, extra dim names will be:\n *                      extraPrefix, extraPrefix + 0, extraPrefix + 1 ...\n * @param {number} [opt.dimCount] If not specified, guess by the first data item.\n * @return {Array.<Object>} [{\n *      name: string mandatory,\n *      coordDim: string mandatory,\n *      coordDimIndex: number mandatory,\n *      type: string optional,\n *      tooltipName: string optional,\n *      otherDims: {\n *          tooltip: number optional,\n *          label: number optional\n *      },\n *      isExtraCoord: boolean true or undefined.\n *      other props ...\n * }]\n */\n\nfunction completeDimensions(sysDims, data, opt) {\n  data = data || [];\n  opt = opt || {};\n  sysDims = (sysDims || []).slice();\n  var dimsDef = (opt.dimsDef || []).slice();\n  var encodeDef = zrUtil.createHashMap(opt.encodeDef);\n  var dataDimNameMap = zrUtil.createHashMap();\n  var coordDimNameMap = zrUtil.createHashMap(); // var valueCandidate;\n\n  var result = [];\n  var dimCount = opt.dimCount;\n\n  if (dimCount == null) {\n    var value0 = retrieveValue(data[0]);\n    dimCount = Math.max(zrUtil.isArray(value0) && value0.length || 1, sysDims.length, dimsDef.length);\n    each(sysDims, function (sysDimItem) {\n      var sysDimItemDimsDef = sysDimItem.dimsDef;\n      sysDimItemDimsDef && (dimCount = Math.max(dimCount, sysDimItemDimsDef.length));\n    });\n  } // Apply user defined dims (`name` and `type`) and init result.\n\n\n  for (var i = 0; i < dimCount; i++) {\n    var dimDefItem = isString(dimsDef[i]) ? {\n      name: dimsDef[i]\n    } : dimsDef[i] || {};\n    var userDimName = dimDefItem.name;\n    var resultItem = result[i] = {\n      otherDims: {}\n    }; // Name will be applied later for avoiding duplication.\n\n    if (userDimName != null && dataDimNameMap.get(userDimName) == null) {\n      // Only if `series.dimensions` is defined in option, tooltipName\n      // will be set, and dimension will be diplayed vertically in\n      // tooltip by default.\n      resultItem.name = resultItem.tooltipName = userDimName;\n      dataDimNameMap.set(userDimName, i);\n    }\n\n    dimDefItem.type != null && (resultItem.type = dimDefItem.type);\n  } // Set `coordDim` and `coordDimIndex` by `encodeDef` and normalize `encodeDef`.\n\n\n  encodeDef.each(function (dataDims, coordDim) {\n    dataDims = encodeDef.set(coordDim, normalizeToArray(dataDims).slice());\n    each(dataDims, function (resultDimIdx, coordDimIndex) {\n      // The input resultDimIdx can be dim name or index.\n      isString(resultDimIdx) && (resultDimIdx = dataDimNameMap.get(resultDimIdx));\n\n      if (resultDimIdx != null && resultDimIdx < dimCount) {\n        dataDims[coordDimIndex] = resultDimIdx;\n        applyDim(result[resultDimIdx], coordDim, coordDimIndex);\n      }\n    });\n  }); // Apply templetes and default order from `sysDims`.\n\n  var availDimIdx = 0;\n  each(sysDims, function (sysDimItem, sysDimIndex) {\n    var coordDim;\n    var sysDimItem;\n    var sysDimItemDimsDef;\n    var sysDimItemOtherDims;\n\n    if (isString(sysDimItem)) {\n      coordDim = sysDimItem;\n      sysDimItem = {};\n    } else {\n      coordDim = sysDimItem.name;\n      sysDimItem = zrUtil.clone(sysDimItem); // `coordDimIndex` should not be set directly.\n\n      sysDimItemDimsDef = sysDimItem.dimsDef;\n      sysDimItemOtherDims = sysDimItem.otherDims;\n      sysDimItem.name = sysDimItem.coordDim = sysDimItem.coordDimIndex = sysDimItem.dimsDef = sysDimItem.otherDims = null;\n    }\n\n    var dataDims = normalizeToArray(encodeDef.get(coordDim)); // dimensions provides default dim sequences.\n\n    if (!dataDims.length) {\n      for (var i = 0; i < (sysDimItemDimsDef && sysDimItemDimsDef.length || 1); i++) {\n        while (availDimIdx < result.length && result[availDimIdx].coordDim != null) {\n          availDimIdx++;\n        }\n\n        availDimIdx < result.length && dataDims.push(availDimIdx++);\n      }\n    } // Apply templates.\n\n\n    each(dataDims, function (resultDimIdx, coordDimIndex) {\n      var resultItem = result[resultDimIdx];\n      applyDim(defaults(resultItem, sysDimItem), coordDim, coordDimIndex);\n\n      if (resultItem.name == null && sysDimItemDimsDef) {\n        resultItem.name = resultItem.tooltipName = sysDimItemDimsDef[coordDimIndex];\n      }\n\n      sysDimItemOtherDims && defaults(resultItem.otherDims, sysDimItemOtherDims);\n    });\n  }); // Make sure the first extra dim is 'value'.\n\n  var extra = opt.extraPrefix || 'value'; // Set dim `name` and other `coordDim` and other props.\n\n  for (var resultDimIdx = 0; resultDimIdx < dimCount; resultDimIdx++) {\n    var resultItem = result[resultDimIdx] = result[resultDimIdx] || {};\n    var coordDim = resultItem.coordDim;\n    coordDim == null && (resultItem.coordDim = genName(extra, coordDimNameMap, opt.extraFromZero), resultItem.coordDimIndex = 0, resultItem.isExtraCoord = true);\n    resultItem.name == null && (resultItem.name = genName(resultItem.coordDim, dataDimNameMap));\n    resultItem.type == null && guessOrdinal(data, resultDimIdx) && (resultItem.type = 'ordinal');\n  }\n\n  return result;\n\n  function applyDim(resultItem, coordDim, coordDimIndex) {\n    if (OTHER_DIMS[coordDim]) {\n      resultItem.otherDims[coordDim] = coordDimIndex;\n    } else {\n      resultItem.coordDim = coordDim;\n      resultItem.coordDimIndex = coordDimIndex;\n      coordDimNameMap.set(coordDim, true);\n    }\n  }\n\n  function genName(name, map, fromZero) {\n    if (fromZero || map.get(name) != null) {\n      var i = 0;\n\n      while (map.get(name + i) != null) {\n        i++;\n      }\n\n      name += i;\n    }\n\n    map.set(name, true);\n    return name;\n  }\n} // The rule should not be complex, otherwise user might not\n// be able to known where the data is wrong.\n\n\nvar guessOrdinal = completeDimensions.guessOrdinal = function (data, dimIndex) {\n  for (var i = 0, len = data.length; i < len; i++) {\n    var value = retrieveValue(data[i]);\n\n    if (!zrUtil.isArray(value)) {\n      return false;\n    }\n\n    var value = value[dimIndex]; // Consider usage convenience, '1', '2' will be treated as \"number\".\n    // `isFinit('')` get `true`.\n\n    if (value != null && isFinite(value) && value !== '') {\n      return false;\n    } else if (isString(value) && value !== '-') {\n      return true;\n    }\n  }\n\n  return false;\n};\n\nfunction retrieveValue(o) {\n  return zrUtil.isArray(o) ? o : zrUtil.isObject(o) ? o.value : o;\n}\n\nvar _default = completeDimensions;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1616:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _clazz = __webpack_require__(1505);\n\nvar set = _clazz.set;\nvar get = _clazz.get;\nvar _default = {\n  clearColorPalette: function () {\n    set(this, 'colorIdx', 0);\n    set(this, 'colorNameMap', {});\n  },\n  getColorFromPalette: function (name, scope) {\n    scope = scope || this;\n    var colorIdx = get(scope, 'colorIdx') || 0;\n    var colorNameMap = get(scope, 'colorNameMap') || set(scope, 'colorNameMap', {}); // Use `hasOwnProperty` to avoid conflict with Object.prototype.\n\n    if (colorNameMap.hasOwnProperty(name)) {\n      return colorNameMap[name];\n    }\n\n    var colorPalette = this.get('color', true) || [];\n\n    if (!colorPalette.length) {\n      return;\n    }\n\n    var color = colorPalette[colorIdx];\n\n    if (name) {\n      colorNameMap[name] = color;\n    }\n\n    set(scope, 'colorIdx', (colorIdx + 1) % colorPalette.length);\n    return color;\n  }\n};\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1617:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar numberUtil = __webpack_require__(1486);\n\n/**\n * For testable.\n */\nvar roundNumber = numberUtil.round;\n/**\n * @param {Array.<number>} extent Both extent[0] and extent[1] should be valid number.\n *                                Should be extent[0] < extent[1].\n * @param {number} splitNumber splitNumber should be >= 1.\n * @param {number} [minInterval]\n * @param {number} [maxInterval]\n * @return {Object} {interval, intervalPrecision, niceTickExtent}\n */\n\nfunction intervalScaleNiceTicks(extent, splitNumber, minInterval, maxInterval) {\n  var result = {};\n  var span = extent[1] - extent[0];\n  var interval = result.interval = numberUtil.nice(span / splitNumber, true);\n\n  if (minInterval != null && interval < minInterval) {\n    interval = result.interval = minInterval;\n  }\n\n  if (maxInterval != null && interval > maxInterval) {\n    interval = result.interval = maxInterval;\n  } // Tow more digital for tick.\n\n\n  var precision = result.intervalPrecision = getIntervalPrecision(interval); // Niced extent inside original extent\n\n  var niceTickExtent = result.niceTickExtent = [roundNumber(Math.ceil(extent[0] / interval) * interval, precision), roundNumber(Math.floor(extent[1] / interval) * interval, precision)];\n  fixExtent(niceTickExtent, extent);\n  return result;\n}\n/**\n * @param {number} interval\n * @return {number} interval precision\n */\n\n\nfunction getIntervalPrecision(interval) {\n  // Tow more digital for tick.\n  return numberUtil.getPrecisionSafe(interval) + 2;\n}\n\nfunction clamp(niceTickExtent, idx, extent) {\n  niceTickExtent[idx] = Math.max(Math.min(niceTickExtent[idx], extent[1]), extent[0]);\n} // In some cases (e.g., splitNumber is 1), niceTickExtent may be out of extent.\n\n\nfunction fixExtent(niceTickExtent, extent) {\n  !isFinite(niceTickExtent[0]) && (niceTickExtent[0] = extent[0]);\n  !isFinite(niceTickExtent[1]) && (niceTickExtent[1] = extent[1]);\n  clamp(niceTickExtent, 0, extent);\n  clamp(niceTickExtent, 1, extent);\n\n  if (niceTickExtent[0] > niceTickExtent[1]) {\n    niceTickExtent[0] = niceTickExtent[1];\n  }\n}\n\nfunction intervalScaleGetTicks(interval, extent, niceTickExtent, intervalPrecision) {\n  var ticks = []; // If interval is 0, return [];\n\n  if (!interval) {\n    return ticks;\n  } // Consider this case: using dataZoom toolbox, zoom and zoom.\n\n\n  var safeLimit = 10000;\n\n  if (extent[0] < niceTickExtent[0]) {\n    ticks.push(extent[0]);\n  }\n\n  var tick = niceTickExtent[0];\n\n  while (tick <= niceTickExtent[1]) {\n    ticks.push(tick); // Avoid rounding error\n\n    tick = roundNumber(tick + interval, intervalPrecision);\n\n    if (tick === ticks[ticks.length - 1]) {\n      // Consider out of safe float point, e.g.,\n      // -3711126.9907707 + 2e-10 === -3711126.9907707\n      break;\n    }\n\n    if (ticks.length > safeLimit) {\n      return [];\n    }\n  } // Consider this case: the last item of ticks is smaller\n  // than niceTickExtent[1] and niceTickExtent[1] === extent[1].\n\n\n  if (extent[1] > (ticks.length ? ticks[ticks.length - 1] : niceTickExtent[1])) {\n    ticks.push(extent[1]);\n  }\n\n  return ticks;\n}\n\nexports.intervalScaleNiceTicks = intervalScaleNiceTicks;\nexports.getIntervalPrecision = getIntervalPrecision;\nexports.fixExtent = fixExtent;\nexports.intervalScaleGetTicks = intervalScaleGetTicks;\n\n/***/ }),\n\n/***/ 1618:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1479);\n\nvar Group = __webpack_require__(1556);\n\nvar componentUtil = __webpack_require__(1568);\n\nvar clazzUtil = __webpack_require__(1505);\n\nvar modelUtil = __webpack_require__(1484);\n\nfunction Chart() {\n  /**\n   * @type {module:zrender/container/Group}\n   * @readOnly\n   */\n  this.group = new Group();\n  /**\n   * @type {string}\n   * @readOnly\n   */\n\n  this.uid = componentUtil.getUID('viewChart');\n}\n\nChart.prototype = {\n  type: 'chart',\n\n  /**\n   * Init the chart\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  init: function (ecModel, api) {},\n\n  /**\n   * Render the chart\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  render: function (seriesModel, ecModel, api, payload) {},\n\n  /**\n   * Highlight series or specified data item\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  highlight: function (seriesModel, ecModel, api, payload) {\n    toggleHighlight(seriesModel.getData(), payload, 'emphasis');\n  },\n\n  /**\n   * Downplay series or specified data item\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  downplay: function (seriesModel, ecModel, api, payload) {\n    toggleHighlight(seriesModel.getData(), payload, 'normal');\n  },\n\n  /**\n   * Remove self\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  remove: function (ecModel, api) {\n    this.group.removeAll();\n  },\n\n  /**\n   * Dispose self\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  dispose: function () {}\n  /**\n   * The view contains the given point.\n   * @interface\n   * @param {Array.<number>} point\n   * @return {boolean}\n   */\n  // containPoint: function () {}\n\n};\nvar chartProto = Chart.prototype;\n\nchartProto.updateView = chartProto.updateLayout = chartProto.updateVisual = function (seriesModel, ecModel, api, payload) {\n  this.render(seriesModel, ecModel, api, payload);\n};\n/**\n * Set state of single element\n * @param  {module:zrender/Element} el\n * @param  {string} state\n */\n\n\nfunction elSetState(el, state) {\n  if (el) {\n    el.trigger(state);\n\n    if (el.type === 'group') {\n      for (var i = 0; i < el.childCount(); i++) {\n        elSetState(el.childAt(i), state);\n      }\n    }\n  }\n}\n/**\n * @param  {module:echarts/data/List} data\n * @param  {Object} payload\n * @param  {string} state 'normal'|'emphasis'\n * @inner\n */\n\n\nfunction toggleHighlight(data, payload, state) {\n  var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n  if (dataIndex != null) {\n    zrUtil.each(modelUtil.normalizeToArray(dataIndex), function (dataIdx) {\n      elSetState(data.getItemGraphicEl(dataIdx), state);\n    });\n  } else {\n    data.eachItemGraphicEl(function (el) {\n      elSetState(el, state);\n    });\n  }\n} // Enable Chart.extend.\n\n\nclazzUtil.enableClassExtend(Chart, ['dispose']); // Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n\nclazzUtil.enableClassManagement(Chart, {\n  registerWhenExtend: true\n});\nvar _default = Chart;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1633:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar guid = __webpack_require__(1640);\n\nvar Eventful = __webpack_require__(1532);\n\nvar Transformable = __webpack_require__(1649);\n\nvar Animatable = __webpack_require__(1788);\n\nvar zrUtil = __webpack_require__(1479);\n\n/**\n * @alias module:zrender/Element\n * @constructor\n * @extends {module:zrender/mixin/Animatable}\n * @extends {module:zrender/mixin/Transformable}\n * @extends {module:zrender/mixin/Eventful}\n */\nvar Element = function (opts) {\n  // jshint ignore:line\n  Transformable.call(this, opts);\n  Eventful.call(this, opts);\n  Animatable.call(this, opts);\n  /**\n   * 画布元素ID\n   * @type {string}\n   */\n\n  this.id = opts.id || guid();\n};\n\nElement.prototype = {\n  /**\n   * 元素类型\n   * Element type\n   * @type {string}\n   */\n  type: 'element',\n\n  /**\n   * 元素名字\n   * Element name\n   * @type {string}\n   */\n  name: '',\n\n  /**\n   * ZRender 实例对象，会在 element 添加到 zrender 实例中后自动赋值\n   * ZRender instance will be assigned when element is associated with zrender\n   * @name module:/zrender/Element#__zr\n   * @type {module:zrender/ZRender}\n   */\n  __zr: null,\n\n  /**\n   * 图形是否忽略，为true时忽略图形的绘制以及事件触发\n   * If ignore drawing and events of the element object\n   * @name module:/zrender/Element#ignore\n   * @type {boolean}\n   * @default false\n   */\n  ignore: false,\n\n  /**\n   * 用于裁剪的路径(shape)，所有 Group 内的路径在绘制时都会被这个路径裁剪\n   * 该路径会继承被裁减对象的变换\n   * @type {module:zrender/graphic/Path}\n   * @see http://www.w3.org/TR/2dcontext/#clipping-region\n   * @readOnly\n   */\n  clipPath: null,\n\n  /**\n   * Drift element\n   * @param  {number} dx dx on the global space\n   * @param  {number} dy dy on the global space\n   */\n  drift: function (dx, dy) {\n    switch (this.draggable) {\n      case 'horizontal':\n        dy = 0;\n        break;\n\n      case 'vertical':\n        dx = 0;\n        break;\n    }\n\n    var m = this.transform;\n\n    if (!m) {\n      m = this.transform = [1, 0, 0, 1, 0, 0];\n    }\n\n    m[4] += dx;\n    m[5] += dy;\n    this.decomposeTransform();\n    this.dirty(false);\n  },\n\n  /**\n   * Hook before update\n   */\n  beforeUpdate: function () {},\n\n  /**\n   * Hook after update\n   */\n  afterUpdate: function () {},\n\n  /**\n   * Update each frame\n   */\n  update: function () {\n    this.updateTransform();\n  },\n\n  /**\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  traverse: function (cb, context) {},\n\n  /**\n   * @protected\n   */\n  attrKV: function (key, value) {\n    if (key === 'position' || key === 'scale' || key === 'origin') {\n      // Copy the array\n      if (value) {\n        var target = this[key];\n\n        if (!target) {\n          target = this[key] = [];\n        }\n\n        target[0] = value[0];\n        target[1] = value[1];\n      }\n    } else {\n      this[key] = value;\n    }\n  },\n\n  /**\n   * Hide the element\n   */\n  hide: function () {\n    this.ignore = true;\n    this.__zr && this.__zr.refresh();\n  },\n\n  /**\n   * Show the element\n   */\n  show: function () {\n    this.ignore = false;\n    this.__zr && this.__zr.refresh();\n  },\n\n  /**\n   * @param {string|Object} key\n   * @param {*} value\n   */\n  attr: function (key, value) {\n    if (typeof key === 'string') {\n      this.attrKV(key, value);\n    } else if (zrUtil.isObject(key)) {\n      for (var name in key) {\n        if (key.hasOwnProperty(name)) {\n          this.attrKV(name, key[name]);\n        }\n      }\n    }\n\n    this.dirty(false);\n    return this;\n  },\n\n  /**\n   * @param {module:zrender/graphic/Path} clipPath\n   */\n  setClipPath: function (clipPath) {\n    var zr = this.__zr;\n\n    if (zr) {\n      clipPath.addSelfToZr(zr);\n    } // Remove previous clip path\n\n\n    if (this.clipPath && this.clipPath !== clipPath) {\n      this.removeClipPath();\n    }\n\n    this.clipPath = clipPath;\n    clipPath.__zr = zr;\n    clipPath.__clipTarget = this;\n    this.dirty(false);\n  },\n\n  /**\n   */\n  removeClipPath: function () {\n    var clipPath = this.clipPath;\n\n    if (clipPath) {\n      if (clipPath.__zr) {\n        clipPath.removeSelfFromZr(clipPath.__zr);\n      }\n\n      clipPath.__zr = null;\n      clipPath.__clipTarget = null;\n      this.clipPath = null;\n      this.dirty(false);\n    }\n  },\n\n  /**\n   * Add self from zrender instance.\n   * Not recursively because it will be invoked when element added to storage.\n   * @param {module:zrender/ZRender} zr\n   */\n  addSelfToZr: function (zr) {\n    this.__zr = zr; // 添加动画\n\n    var animators = this.animators;\n\n    if (animators) {\n      for (var i = 0; i < animators.length; i++) {\n        zr.animation.addAnimator(animators[i]);\n      }\n    }\n\n    if (this.clipPath) {\n      this.clipPath.addSelfToZr(zr);\n    }\n  },\n\n  /**\n   * Remove self from zrender instance.\n   * Not recursively because it will be invoked when element added to storage.\n   * @param {module:zrender/ZRender} zr\n   */\n  removeSelfFromZr: function (zr) {\n    this.__zr = null; // 移除动画\n\n    var animators = this.animators;\n\n    if (animators) {\n      for (var i = 0; i < animators.length; i++) {\n        zr.animation.removeAnimator(animators[i]);\n      }\n    }\n\n    if (this.clipPath) {\n      this.clipPath.removeSelfFromZr(zr);\n    }\n  }\n};\nzrUtil.mixin(Element, Animatable);\nzrUtil.mixin(Element, Transformable);\nzrUtil.mixin(Element, Eventful);\nvar _default = Element;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1634:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Clip = __webpack_require__(1762);\n\nvar color = __webpack_require__(1533);\n\nvar _util = __webpack_require__(1479);\n\nvar isArrayLike = _util.isArrayLike;\n\n/**\n * @module echarts/animation/Animator\n */\nvar arraySlice = Array.prototype.slice;\n\nfunction defaultGetter(target, key) {\n  return target[key];\n}\n\nfunction defaultSetter(target, key, value) {\n  target[key] = value;\n}\n/**\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} percent\n * @return {number}\n */\n\n\nfunction interpolateNumber(p0, p1, percent) {\n  return (p1 - p0) * percent + p0;\n}\n/**\n * @param  {string} p0\n * @param  {string} p1\n * @param  {number} percent\n * @return {string}\n */\n\n\nfunction interpolateString(p0, p1, percent) {\n  return percent > 0.5 ? p1 : p0;\n}\n/**\n * @param  {Array} p0\n * @param  {Array} p1\n * @param  {number} percent\n * @param  {Array} out\n * @param  {number} arrDim\n */\n\n\nfunction interpolateArray(p0, p1, percent, out, arrDim) {\n  var len = p0.length;\n\n  if (arrDim == 1) {\n    for (var i = 0; i < len; i++) {\n      out[i] = interpolateNumber(p0[i], p1[i], percent);\n    }\n  } else {\n    var len2 = len && p0[0].length;\n\n    for (var i = 0; i < len; i++) {\n      for (var j = 0; j < len2; j++) {\n        out[i][j] = interpolateNumber(p0[i][j], p1[i][j], percent);\n      }\n    }\n  }\n} // arr0 is source array, arr1 is target array.\n// Do some preprocess to avoid error happened when interpolating from arr0 to arr1\n\n\nfunction fillArr(arr0, arr1, arrDim) {\n  var arr0Len = arr0.length;\n  var arr1Len = arr1.length;\n\n  if (arr0Len !== arr1Len) {\n    // FIXME Not work for TypedArray\n    var isPreviousLarger = arr0Len > arr1Len;\n\n    if (isPreviousLarger) {\n      // Cut the previous\n      arr0.length = arr1Len;\n    } else {\n      // Fill the previous\n      for (var i = arr0Len; i < arr1Len; i++) {\n        arr0.push(arrDim === 1 ? arr1[i] : arraySlice.call(arr1[i]));\n      }\n    }\n  } // Handling NaN value\n\n\n  var len2 = arr0[0] && arr0[0].length;\n\n  for (var i = 0; i < arr0.length; i++) {\n    if (arrDim === 1) {\n      if (isNaN(arr0[i])) {\n        arr0[i] = arr1[i];\n      }\n    } else {\n      for (var j = 0; j < len2; j++) {\n        if (isNaN(arr0[i][j])) {\n          arr0[i][j] = arr1[i][j];\n        }\n      }\n    }\n  }\n}\n/**\n * @param  {Array} arr0\n * @param  {Array} arr1\n * @param  {number} arrDim\n * @return {boolean}\n */\n\n\nfunction isArraySame(arr0, arr1, arrDim) {\n  if (arr0 === arr1) {\n    return true;\n  }\n\n  var len = arr0.length;\n\n  if (len !== arr1.length) {\n    return false;\n  }\n\n  if (arrDim === 1) {\n    for (var i = 0; i < len; i++) {\n      if (arr0[i] !== arr1[i]) {\n        return false;\n      }\n    }\n  } else {\n    var len2 = arr0[0].length;\n\n    for (var i = 0; i < len; i++) {\n      for (var j = 0; j < len2; j++) {\n        if (arr0[i][j] !== arr1[i][j]) {\n          return false;\n        }\n      }\n    }\n  }\n\n  return true;\n}\n/**\n * Catmull Rom interpolate array\n * @param  {Array} p0\n * @param  {Array} p1\n * @param  {Array} p2\n * @param  {Array} p3\n * @param  {number} t\n * @param  {number} t2\n * @param  {number} t3\n * @param  {Array} out\n * @param  {number} arrDim\n */\n\n\nfunction catmullRomInterpolateArray(p0, p1, p2, p3, t, t2, t3, out, arrDim) {\n  var len = p0.length;\n\n  if (arrDim == 1) {\n    for (var i = 0; i < len; i++) {\n      out[i] = catmullRomInterpolate(p0[i], p1[i], p2[i], p3[i], t, t2, t3);\n    }\n  } else {\n    var len2 = p0[0].length;\n\n    for (var i = 0; i < len; i++) {\n      for (var j = 0; j < len2; j++) {\n        out[i][j] = catmullRomInterpolate(p0[i][j], p1[i][j], p2[i][j], p3[i][j], t, t2, t3);\n      }\n    }\n  }\n}\n/**\n * Catmull Rom interpolate number\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @param  {number} t2\n * @param  {number} t3\n * @return {number}\n */\n\n\nfunction catmullRomInterpolate(p0, p1, p2, p3, t, t2, t3) {\n  var v0 = (p2 - p0) * 0.5;\n  var v1 = (p3 - p1) * 0.5;\n  return (2 * (p1 - p2) + v0 + v1) * t3 + (-3 * (p1 - p2) - 2 * v0 - v1) * t2 + v0 * t + p1;\n}\n\nfunction cloneValue(value) {\n  if (isArrayLike(value)) {\n    var len = value.length;\n\n    if (isArrayLike(value[0])) {\n      var ret = [];\n\n      for (var i = 0; i < len; i++) {\n        ret.push(arraySlice.call(value[i]));\n      }\n\n      return ret;\n    }\n\n    return arraySlice.call(value);\n  }\n\n  return value;\n}\n\nfunction rgba2String(rgba) {\n  rgba[0] = Math.floor(rgba[0]);\n  rgba[1] = Math.floor(rgba[1]);\n  rgba[2] = Math.floor(rgba[2]);\n  return 'rgba(' + rgba.join(',') + ')';\n}\n\nfunction getArrayDim(keyframes) {\n  var lastValue = keyframes[keyframes.length - 1].value;\n  return isArrayLike(lastValue && lastValue[0]) ? 2 : 1;\n}\n\nfunction createTrackClip(animator, easing, oneTrackDone, keyframes, propName, forceAnimate) {\n  var getter = animator._getter;\n  var setter = animator._setter;\n  var useSpline = easing === 'spline';\n  var trackLen = keyframes.length;\n\n  if (!trackLen) {\n    return;\n  } // Guess data type\n\n\n  var firstVal = keyframes[0].value;\n  var isValueArray = isArrayLike(firstVal);\n  var isValueColor = false;\n  var isValueString = false; // For vertices morphing\n\n  var arrDim = isValueArray ? getArrayDim(keyframes) : 0;\n  var trackMaxTime; // Sort keyframe as ascending\n\n  keyframes.sort(function (a, b) {\n    return a.time - b.time;\n  });\n  trackMaxTime = keyframes[trackLen - 1].time; // Percents of each keyframe\n\n  var kfPercents = []; // Value of each keyframe\n\n  var kfValues = [];\n  var prevValue = keyframes[0].value;\n  var isAllValueEqual = true;\n\n  for (var i = 0; i < trackLen; i++) {\n    kfPercents.push(keyframes[i].time / trackMaxTime); // Assume value is a color when it is a string\n\n    var value = keyframes[i].value; // Check if value is equal, deep check if value is array\n\n    if (!(isValueArray && isArraySame(value, prevValue, arrDim) || !isValueArray && value === prevValue)) {\n      isAllValueEqual = false;\n    }\n\n    prevValue = value; // Try converting a string to a color array\n\n    if (typeof value == 'string') {\n      var colorArray = color.parse(value);\n\n      if (colorArray) {\n        value = colorArray;\n        isValueColor = true;\n      } else {\n        isValueString = true;\n      }\n    }\n\n    kfValues.push(value);\n  }\n\n  if (!forceAnimate && isAllValueEqual) {\n    return;\n  }\n\n  var lastValue = kfValues[trackLen - 1]; // Polyfill array and NaN value\n\n  for (var i = 0; i < trackLen - 1; i++) {\n    if (isValueArray) {\n      fillArr(kfValues[i], lastValue, arrDim);\n    } else {\n      if (isNaN(kfValues[i]) && !isNaN(lastValue) && !isValueString && !isValueColor) {\n        kfValues[i] = lastValue;\n      }\n    }\n  }\n\n  isValueArray && fillArr(getter(animator._target, propName), lastValue, arrDim); // Cache the key of last frame to speed up when\n  // animation playback is sequency\n\n  var lastFrame = 0;\n  var lastFramePercent = 0;\n  var start;\n  var w;\n  var p0;\n  var p1;\n  var p2;\n  var p3;\n\n  if (isValueColor) {\n    var rgba = [0, 0, 0, 0];\n  }\n\n  var onframe = function (target, percent) {\n    // Find the range keyframes\n    // kf1-----kf2---------current--------kf3\n    // find kf2 and kf3 and do interpolation\n    var frame; // In the easing function like elasticOut, percent may less than 0\n\n    if (percent < 0) {\n      frame = 0;\n    } else if (percent < lastFramePercent) {\n      // Start from next key\n      // PENDING start from lastFrame ?\n      start = Math.min(lastFrame + 1, trackLen - 1);\n\n      for (frame = start; frame >= 0; frame--) {\n        if (kfPercents[frame] <= percent) {\n          break;\n        }\n      } // PENDING really need to do this ?\n\n\n      frame = Math.min(frame, trackLen - 2);\n    } else {\n      for (frame = lastFrame; frame < trackLen; frame++) {\n        if (kfPercents[frame] > percent) {\n          break;\n        }\n      }\n\n      frame = Math.min(frame - 1, trackLen - 2);\n    }\n\n    lastFrame = frame;\n    lastFramePercent = percent;\n    var range = kfPercents[frame + 1] - kfPercents[frame];\n\n    if (range === 0) {\n      return;\n    } else {\n      w = (percent - kfPercents[frame]) / range;\n    }\n\n    if (useSpline) {\n      p1 = kfValues[frame];\n      p0 = kfValues[frame === 0 ? frame : frame - 1];\n      p2 = kfValues[frame > trackLen - 2 ? trackLen - 1 : frame + 1];\n      p3 = kfValues[frame > trackLen - 3 ? trackLen - 1 : frame + 2];\n\n      if (isValueArray) {\n        catmullRomInterpolateArray(p0, p1, p2, p3, w, w * w, w * w * w, getter(target, propName), arrDim);\n      } else {\n        var value;\n\n        if (isValueColor) {\n          value = catmullRomInterpolateArray(p0, p1, p2, p3, w, w * w, w * w * w, rgba, 1);\n          value = rgba2String(rgba);\n        } else if (isValueString) {\n          // String is step(0.5)\n          return interpolateString(p1, p2, w);\n        } else {\n          value = catmullRomInterpolate(p0, p1, p2, p3, w, w * w, w * w * w);\n        }\n\n        setter(target, propName, value);\n      }\n    } else {\n      if (isValueArray) {\n        interpolateArray(kfValues[frame], kfValues[frame + 1], w, getter(target, propName), arrDim);\n      } else {\n        var value;\n\n        if (isValueColor) {\n          interpolateArray(kfValues[frame], kfValues[frame + 1], w, rgba, 1);\n          value = rgba2String(rgba);\n        } else if (isValueString) {\n          // String is step(0.5)\n          return interpolateString(kfValues[frame], kfValues[frame + 1], w);\n        } else {\n          value = interpolateNumber(kfValues[frame], kfValues[frame + 1], w);\n        }\n\n        setter(target, propName, value);\n      }\n    }\n  };\n\n  var clip = new Clip({\n    target: animator._target,\n    life: trackMaxTime,\n    loop: animator._loop,\n    delay: animator._delay,\n    onframe: onframe,\n    ondestroy: oneTrackDone\n  });\n\n  if (easing && easing !== 'spline') {\n    clip.easing = easing;\n  }\n\n  return clip;\n}\n/**\n * @alias module:zrender/animation/Animator\n * @constructor\n * @param {Object} target\n * @param {boolean} loop\n * @param {Function} getter\n * @param {Function} setter\n */\n\n\nvar Animator = function (target, loop, getter, setter) {\n  this._tracks = {};\n  this._target = target;\n  this._loop = loop || false;\n  this._getter = getter || defaultGetter;\n  this._setter = setter || defaultSetter;\n  this._clipCount = 0;\n  this._delay = 0;\n  this._doneList = [];\n  this._onframeList = [];\n  this._clipList = [];\n};\n\nAnimator.prototype = {\n  /**\n   * 设置动画关键帧\n   * @param  {number} time 关键帧时间，单位是ms\n   * @param  {Object} props 关键帧的属性值，key-value表示\n   * @return {module:zrender/animation/Animator}\n   */\n  when: function (time\n  /* ms */\n  , props) {\n    var tracks = this._tracks;\n\n    for (var propName in props) {\n      if (!props.hasOwnProperty(propName)) {\n        continue;\n      }\n\n      if (!tracks[propName]) {\n        tracks[propName] = []; // Invalid value\n\n        var value = this._getter(this._target, propName);\n\n        if (value == null) {\n          // zrLog('Invalid property ' + propName);\n          continue;\n        } // If time is 0\n        //  Then props is given initialize value\n        // Else\n        //  Initialize value from current prop value\n\n\n        if (time !== 0) {\n          tracks[propName].push({\n            time: 0,\n            value: cloneValue(value)\n          });\n        }\n      }\n\n      tracks[propName].push({\n        time: time,\n        value: props[propName]\n      });\n    }\n\n    return this;\n  },\n\n  /**\n   * 添加动画每一帧的回调函数\n   * @param  {Function} callback\n   * @return {module:zrender/animation/Animator}\n   */\n  during: function (callback) {\n    this._onframeList.push(callback);\n\n    return this;\n  },\n  pause: function () {\n    for (var i = 0; i < this._clipList.length; i++) {\n      this._clipList[i].pause();\n    }\n\n    this._paused = true;\n  },\n  resume: function () {\n    for (var i = 0; i < this._clipList.length; i++) {\n      this._clipList[i].resume();\n    }\n\n    this._paused = false;\n  },\n  isPaused: function () {\n    return !!this._paused;\n  },\n  _doneCallback: function () {\n    // Clear all tracks\n    this._tracks = {}; // Clear all clips\n\n    this._clipList.length = 0;\n    var doneList = this._doneList;\n    var len = doneList.length;\n\n    for (var i = 0; i < len; i++) {\n      doneList[i].call(this);\n    }\n  },\n\n  /**\n   * 开始执行动画\n   * @param  {string|Function} [easing]\n   *         动画缓动函数，详见{@link module:zrender/animation/easing}\n   * @param  {boolean} forceAnimate\n   * @return {module:zrender/animation/Animator}\n   */\n  start: function (easing, forceAnimate) {\n    var self = this;\n    var clipCount = 0;\n\n    var oneTrackDone = function () {\n      clipCount--;\n\n      if (!clipCount) {\n        self._doneCallback();\n      }\n    };\n\n    var lastClip;\n\n    for (var propName in this._tracks) {\n      if (!this._tracks.hasOwnProperty(propName)) {\n        continue;\n      }\n\n      var clip = createTrackClip(this, easing, oneTrackDone, this._tracks[propName], propName, forceAnimate);\n\n      if (clip) {\n        this._clipList.push(clip);\n\n        clipCount++; // If start after added to animation\n\n        if (this.animation) {\n          this.animation.addClip(clip);\n        }\n\n        lastClip = clip;\n      }\n    } // Add during callback on the last clip\n\n\n    if (lastClip) {\n      var oldOnFrame = lastClip.onframe;\n\n      lastClip.onframe = function (target, percent) {\n        oldOnFrame(target, percent);\n\n        for (var i = 0; i < self._onframeList.length; i++) {\n          self._onframeList[i](target, percent);\n        }\n      };\n    } // This optimization will help the case that in the upper application\n    // the view may be refreshed frequently, where animation will be\n    // called repeatly but nothing changed.\n\n\n    if (!clipCount) {\n      this._doneCallback();\n    }\n\n    return this;\n  },\n\n  /**\n   * 停止动画\n   * @param {boolean} forwardToLast If move to last frame before stop\n   */\n  stop: function (forwardToLast) {\n    var clipList = this._clipList;\n    var animation = this.animation;\n\n    for (var i = 0; i < clipList.length; i++) {\n      var clip = clipList[i];\n\n      if (forwardToLast) {\n        // Move to last frame before stop\n        clip.onframe(this._target, 1);\n      }\n\n      animation && animation.removeClip(clip);\n    }\n\n    clipList.length = 0;\n  },\n\n  /**\n   * 设置动画延迟开始的时间\n   * @param  {number} time 单位ms\n   * @return {module:zrender/animation/Animator}\n   */\n  delay: function (time) {\n    this._delay = time;\n    return this;\n  },\n\n  /**\n   * 添加动画结束的回调\n   * @param  {Function} cb\n   * @return {module:zrender/animation/Animator}\n   */\n  done: function (cb) {\n    if (cb) {\n      this._doneList.push(cb);\n    }\n\n    return this;\n  },\n\n  /**\n   * @return {Array.<module:zrender/animation/Clip>}\n   */\n  getClips: function () {\n    return this._clipList;\n  }\n};\nvar _default = Animator;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1635:\n/***/ (function(module, exports) {\n\nvar _default = typeof window !== 'undefined' && (window.requestAnimationFrame && window.requestAnimationFrame.bind(window) || // https://github.com/ecomfe/zrender/issues/189#issuecomment-224919809\nwindow.msRequestAnimationFrame && window.msRequestAnimationFrame.bind(window) || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame) || function (func) {\n  setTimeout(func, 16);\n};\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1636:\n/***/ (function(module, exports) {\n\nvar PI2 = Math.PI * 2;\n\nfunction normalizeRadian(angle) {\n  angle %= PI2;\n\n  if (angle < 0) {\n    angle += PI2;\n  }\n\n  return angle;\n}\n\nexports.normalizeRadian = normalizeRadian;\n\n/***/ }),\n\n/***/ 1637:\n/***/ (function(module, exports) {\n\nfunction windingLine(x0, y0, x1, y1, x, y) {\n  if (y > y0 && y > y1 || y < y0 && y < y1) {\n    return 0;\n  } // Ignore horizontal line\n\n\n  if (y1 === y0) {\n    return 0;\n  }\n\n  var dir = y1 < y0 ? 1 : -1;\n  var t = (y - y0) / (y1 - y0); // Avoid winding error when intersection point is the connect point of two line of polygon\n\n  if (t === 1 || t === 0) {\n    dir = y1 < y0 ? 0.5 : -0.5;\n  }\n\n  var x_ = t * (x1 - x0) + x0;\n  return x_ > x ? dir : 0;\n}\n\nmodule.exports = windingLine;\n\n/***/ }),\n\n/***/ 1638:\n/***/ (function(module, exports) {\n\n// Simple LRU cache use doubly linked list\n// @module zrender/core/LRU\n\n/**\n * Simple double linked list. Compared with array, it has O(1) remove operation.\n * @constructor\n */\nvar LinkedList = function () {\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n  this.head = null;\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n\n  this.tail = null;\n  this._len = 0;\n};\n\nvar linkedListProto = LinkedList.prototype;\n/**\n * Insert a new value at the tail\n * @param  {} val\n * @return {module:zrender/core/LRU~Entry}\n */\n\nlinkedListProto.insert = function (val) {\n  var entry = new Entry(val);\n  this.insertEntry(entry);\n  return entry;\n};\n/**\n * Insert an entry at the tail\n * @param  {module:zrender/core/LRU~Entry} entry\n */\n\n\nlinkedListProto.insertEntry = function (entry) {\n  if (!this.head) {\n    this.head = this.tail = entry;\n  } else {\n    this.tail.next = entry;\n    entry.prev = this.tail;\n    entry.next = null;\n    this.tail = entry;\n  }\n\n  this._len++;\n};\n/**\n * Remove entry.\n * @param  {module:zrender/core/LRU~Entry} entry\n */\n\n\nlinkedListProto.remove = function (entry) {\n  var prev = entry.prev;\n  var next = entry.next;\n\n  if (prev) {\n    prev.next = next;\n  } else {\n    // Is head\n    this.head = next;\n  }\n\n  if (next) {\n    next.prev = prev;\n  } else {\n    // Is tail\n    this.tail = prev;\n  }\n\n  entry.next = entry.prev = null;\n  this._len--;\n};\n/**\n * @return {number}\n */\n\n\nlinkedListProto.len = function () {\n  return this._len;\n};\n/**\n * Clear list\n */\n\n\nlinkedListProto.clear = function () {\n  this.head = this.tail = null;\n  this._len = 0;\n};\n/**\n * @constructor\n * @param {} val\n */\n\n\nvar Entry = function (val) {\n  /**\n   * @type {}\n   */\n  this.value = val;\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n\n  this.next;\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n\n  this.prev;\n};\n/**\n * LRU Cache\n * @constructor\n * @alias module:zrender/core/LRU\n */\n\n\nvar LRU = function (maxSize) {\n  this._list = new LinkedList();\n  this._map = {};\n  this._maxSize = maxSize || 10;\n  this._lastRemovedEntry = null;\n};\n\nvar LRUProto = LRU.prototype;\n/**\n * @param  {string} key\n * @param  {} value\n * @return {} Removed value\n */\n\nLRUProto.put = function (key, value) {\n  var list = this._list;\n  var map = this._map;\n  var removed = null;\n\n  if (map[key] == null) {\n    var len = list.len(); // Reuse last removed entry\n\n    var entry = this._lastRemovedEntry;\n\n    if (len >= this._maxSize && len > 0) {\n      // Remove the least recently used\n      var leastUsedEntry = list.head;\n      list.remove(leastUsedEntry);\n      delete map[leastUsedEntry.key];\n      removed = leastUsedEntry.value;\n      this._lastRemovedEntry = leastUsedEntry;\n    }\n\n    if (entry) {\n      entry.value = value;\n    } else {\n      entry = new Entry(value);\n    }\n\n    entry.key = key;\n    list.insertEntry(entry);\n    map[key] = entry;\n  }\n\n  return removed;\n};\n/**\n * @param  {string} key\n * @return {}\n */\n\n\nLRUProto.get = function (key) {\n  var entry = this._map[key];\n  var list = this._list;\n\n  if (entry != null) {\n    // Put the latest used entry in the tail\n    if (entry !== list.tail) {\n      list.remove(entry);\n      list.insertEntry(entry);\n    }\n\n    return entry.value;\n  }\n};\n/**\n * Clear the cache\n */\n\n\nLRUProto.clear = function () {\n  this._list.clear();\n\n  this._map = {};\n};\n\nvar _default = LRU;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1639:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar vec2 = __webpack_require__(1485);\n\nvar curve = __webpack_require__(1524);\n\n/**\n * @author Yi Shen(https://github.com/pissang)\n */\nvar mathMin = Math.min;\nvar mathMax = Math.max;\nvar mathSin = Math.sin;\nvar mathCos = Math.cos;\nvar PI2 = Math.PI * 2;\nvar start = vec2.create();\nvar end = vec2.create();\nvar extremity = vec2.create();\n/**\n * 从顶点数组中计算出最小包围盒，写入`min`和`max`中\n * @module zrender/core/bbox\n * @param {Array<Object>} points 顶点数组\n * @param {number} min\n * @param {number} max\n */\n\nfunction fromPoints(points, min, max) {\n  if (points.length === 0) {\n    return;\n  }\n\n  var p = points[0];\n  var left = p[0];\n  var right = p[0];\n  var top = p[1];\n  var bottom = p[1];\n  var i;\n\n  for (i = 1; i < points.length; i++) {\n    p = points[i];\n    left = mathMin(left, p[0]);\n    right = mathMax(right, p[0]);\n    top = mathMin(top, p[1]);\n    bottom = mathMax(bottom, p[1]);\n  }\n\n  min[0] = left;\n  min[1] = top;\n  max[0] = right;\n  max[1] = bottom;\n}\n/**\n * @memberOf module:zrender/core/bbox\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\n\nfunction fromLine(x0, y0, x1, y1, min, max) {\n  min[0] = mathMin(x0, x1);\n  min[1] = mathMin(y0, y1);\n  max[0] = mathMax(x0, x1);\n  max[1] = mathMax(y0, y1);\n}\n\nvar xDim = [];\nvar yDim = [];\n/**\n * 从三阶贝塞尔曲线(p0, p1, p2, p3)中计算出最小包围盒，写入`min`和`max`中\n * @memberOf module:zrender/core/bbox\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {number} x3\n * @param {number} y3\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\nfunction fromCubic(x0, y0, x1, y1, x2, y2, x3, y3, min, max) {\n  var cubicExtrema = curve.cubicExtrema;\n  var cubicAt = curve.cubicAt;\n  var i;\n  var n = cubicExtrema(x0, x1, x2, x3, xDim);\n  min[0] = Infinity;\n  min[1] = Infinity;\n  max[0] = -Infinity;\n  max[1] = -Infinity;\n\n  for (i = 0; i < n; i++) {\n    var x = cubicAt(x0, x1, x2, x3, xDim[i]);\n    min[0] = mathMin(x, min[0]);\n    max[0] = mathMax(x, max[0]);\n  }\n\n  n = cubicExtrema(y0, y1, y2, y3, yDim);\n\n  for (i = 0; i < n; i++) {\n    var y = cubicAt(y0, y1, y2, y3, yDim[i]);\n    min[1] = mathMin(y, min[1]);\n    max[1] = mathMax(y, max[1]);\n  }\n\n  min[0] = mathMin(x0, min[0]);\n  max[0] = mathMax(x0, max[0]);\n  min[0] = mathMin(x3, min[0]);\n  max[0] = mathMax(x3, max[0]);\n  min[1] = mathMin(y0, min[1]);\n  max[1] = mathMax(y0, max[1]);\n  min[1] = mathMin(y3, min[1]);\n  max[1] = mathMax(y3, max[1]);\n}\n/**\n * 从二阶贝塞尔曲线(p0, p1, p2)中计算出最小包围盒，写入`min`和`max`中\n * @memberOf module:zrender/core/bbox\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\n\nfunction fromQuadratic(x0, y0, x1, y1, x2, y2, min, max) {\n  var quadraticExtremum = curve.quadraticExtremum;\n  var quadraticAt = curve.quadraticAt; // Find extremities, where derivative in x dim or y dim is zero\n\n  var tx = mathMax(mathMin(quadraticExtremum(x0, x1, x2), 1), 0);\n  var ty = mathMax(mathMin(quadraticExtremum(y0, y1, y2), 1), 0);\n  var x = quadraticAt(x0, x1, x2, tx);\n  var y = quadraticAt(y0, y1, y2, ty);\n  min[0] = mathMin(x0, x2, x);\n  min[1] = mathMin(y0, y2, y);\n  max[0] = mathMax(x0, x2, x);\n  max[1] = mathMax(y0, y2, y);\n}\n/**\n * 从圆弧中计算出最小包围盒，写入`min`和`max`中\n * @method\n * @memberOf module:zrender/core/bbox\n * @param {number} x\n * @param {number} y\n * @param {number} rx\n * @param {number} ry\n * @param {number} startAngle\n * @param {number} endAngle\n * @param {number} anticlockwise\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\n\nfunction fromArc(x, y, rx, ry, startAngle, endAngle, anticlockwise, min, max) {\n  var vec2Min = vec2.min;\n  var vec2Max = vec2.max;\n  var diff = Math.abs(startAngle - endAngle);\n\n  if (diff % PI2 < 1e-4 && diff > 1e-4) {\n    // Is a circle\n    min[0] = x - rx;\n    min[1] = y - ry;\n    max[0] = x + rx;\n    max[1] = y + ry;\n    return;\n  }\n\n  start[0] = mathCos(startAngle) * rx + x;\n  start[1] = mathSin(startAngle) * ry + y;\n  end[0] = mathCos(endAngle) * rx + x;\n  end[1] = mathSin(endAngle) * ry + y;\n  vec2Min(min, start, end);\n  vec2Max(max, start, end); // Thresh to [0, Math.PI * 2]\n\n  startAngle = startAngle % PI2;\n\n  if (startAngle < 0) {\n    startAngle = startAngle + PI2;\n  }\n\n  endAngle = endAngle % PI2;\n\n  if (endAngle < 0) {\n    endAngle = endAngle + PI2;\n  }\n\n  if (startAngle > endAngle && !anticlockwise) {\n    endAngle += PI2;\n  } else if (startAngle < endAngle && anticlockwise) {\n    startAngle += PI2;\n  }\n\n  if (anticlockwise) {\n    var tmp = endAngle;\n    endAngle = startAngle;\n    startAngle = tmp;\n  } // var number = 0;\n  // var step = (anticlockwise ? -Math.PI : Math.PI) / 2;\n\n\n  for (var angle = 0; angle < endAngle; angle += Math.PI / 2) {\n    if (angle > startAngle) {\n      extremity[0] = mathCos(angle) * rx + x;\n      extremity[1] = mathSin(angle) * ry + y;\n      vec2Min(min, extremity, min);\n      vec2Max(max, extremity, max);\n    }\n  }\n}\n\nexports.fromPoints = fromPoints;\nexports.fromLine = fromLine;\nexports.fromCubic = fromCubic;\nexports.fromQuadratic = fromQuadratic;\nexports.fromArc = fromArc;\n\n/***/ }),\n\n/***/ 1640:\n/***/ (function(module, exports) {\n\n/**\n * zrender: 生成唯一id\n *\n * @author errorrik (errorrik@gmail.com)\n */\nvar idStart = 0x0907;\n\nfunction _default() {\n  return idStart++;\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1641:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(1555);\n\nvar debugMode = _config.debugMode;\n\nvar log = function () {};\n\nif (debugMode === 1) {\n  log = function () {\n    for (var k in arguments) {\n      throw new Error(arguments[k]);\n    }\n  };\n} else if (debugMode > 1) {\n  log = function () {\n    for (var k in arguments) {\n      console.log(arguments[k]);\n    }\n  };\n}\n\nvar _default = log;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1642:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Displayable = __webpack_require__(1575);\n\nvar BoundingRect = __webpack_require__(1497);\n\nvar zrUtil = __webpack_require__(1479);\n\nvar imageHelper = __webpack_require__(1577);\n\n/**\n * @alias zrender/graphic/Image\n * @extends module:zrender/graphic/Displayable\n * @constructor\n * @param {Object} opts\n */\nfunction ZImage(opts) {\n  Displayable.call(this, opts);\n}\n\nZImage.prototype = {\n  constructor: ZImage,\n  type: 'image',\n  brush: function (ctx, prevEl) {\n    var style = this.style;\n    var src = style.image; // Must bind each time\n\n    style.bind(ctx, this, prevEl);\n    var image = this._image = imageHelper.createOrUpdateImage(src, this._image, this, this.onload);\n\n    if (!image || !imageHelper.isImageReady(image)) {\n      return;\n    } // 图片已经加载完成\n    // if (image.nodeName.toUpperCase() == 'IMG') {\n    //     if (!image.complete) {\n    //         return;\n    //     }\n    // }\n    // Else is canvas\n\n\n    var x = style.x || 0;\n    var y = style.y || 0;\n    var width = style.width;\n    var height = style.height;\n    var aspect = image.width / image.height;\n\n    if (width == null && height != null) {\n      // Keep image/height ratio\n      width = height * aspect;\n    } else if (height == null && width != null) {\n      height = width / aspect;\n    } else if (width == null && height == null) {\n      width = image.width;\n      height = image.height;\n    } // 设置transform\n\n\n    this.setTransform(ctx);\n\n    if (style.sWidth && style.sHeight) {\n      var sx = style.sx || 0;\n      var sy = style.sy || 0;\n      ctx.drawImage(image, sx, sy, style.sWidth, style.sHeight, x, y, width, height);\n    } else if (style.sx && style.sy) {\n      var sx = style.sx;\n      var sy = style.sy;\n      var sWidth = width - sx;\n      var sHeight = height - sy;\n      ctx.drawImage(image, sx, sy, sWidth, sHeight, x, y, width, height);\n    } else {\n      ctx.drawImage(image, x, y, width, height);\n    }\n\n    this.restoreTransform(ctx); // Draw rect text\n\n    if (style.text != null) {\n      this.drawRectText(ctx, this.getBoundingRect());\n    }\n  },\n  getBoundingRect: function () {\n    var style = this.style;\n\n    if (!this._rect) {\n      this._rect = new BoundingRect(style.x || 0, style.y || 0, style.width || 0, style.height || 0);\n    }\n\n    return this._rect;\n  }\n};\nzrUtil.inherits(ZImage, Displayable);\nvar _default = ZImage;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1643:\n/***/ (function(module, exports) {\n\nvar Pattern = function (image, repeat) {\n  // Should do nothing more in this constructor. Because gradient can be\n  // declard by `color: {image: ...}`, where this constructor will not be called.\n  this.image = image;\n  this.repeat = repeat; // Can be cloned\n\n  this.type = 'pattern';\n};\n\nPattern.prototype.getCanvasPattern = function (ctx) {\n  return ctx.createPattern(this.image, this.repeat || 'repeat');\n};\n\nvar _default = Pattern;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1644:\n/***/ (function(module, exports) {\n\nvar STYLE_COMMON_PROPS = [['shadowBlur', 0], ['shadowOffsetX', 0], ['shadowOffsetY', 0], ['shadowColor', '#000'], ['lineCap', 'butt'], ['lineJoin', 'miter'], ['miterLimit', 10]]; // var SHADOW_PROPS = STYLE_COMMON_PROPS.slice(0, 4);\n// var LINE_PROPS = STYLE_COMMON_PROPS.slice(4);\n\nvar Style = function (opts, host) {\n  this.extendFrom(opts, false);\n  this.host = host;\n};\n\nfunction createLinearGradient(ctx, obj, rect) {\n  var x = obj.x == null ? 0 : obj.x;\n  var x2 = obj.x2 == null ? 1 : obj.x2;\n  var y = obj.y == null ? 0 : obj.y;\n  var y2 = obj.y2 == null ? 0 : obj.y2;\n\n  if (!obj.global) {\n    x = x * rect.width + rect.x;\n    x2 = x2 * rect.width + rect.x;\n    y = y * rect.height + rect.y;\n    y2 = y2 * rect.height + rect.y;\n  }\n\n  var canvasGradient = ctx.createLinearGradient(x, y, x2, y2);\n  return canvasGradient;\n}\n\nfunction createRadialGradient(ctx, obj, rect) {\n  var width = rect.width;\n  var height = rect.height;\n  var min = Math.min(width, height);\n  var x = obj.x == null ? 0.5 : obj.x;\n  var y = obj.y == null ? 0.5 : obj.y;\n  var r = obj.r == null ? 0.5 : obj.r;\n\n  if (!obj.global) {\n    x = x * width + rect.x;\n    y = y * height + rect.y;\n    r = r * min;\n  }\n\n  var canvasGradient = ctx.createRadialGradient(x, y, 0, x, y, r);\n  return canvasGradient;\n}\n\nStyle.prototype = {\n  constructor: Style,\n\n  /**\n   * @type {module:zrender/graphic/Displayable}\n   */\n  host: null,\n\n  /**\n   * @type {string}\n   */\n  fill: '#000',\n\n  /**\n   * @type {string}\n   */\n  stroke: null,\n\n  /**\n   * @type {number}\n   */\n  opacity: 1,\n\n  /**\n   * @type {Array.<number>}\n   */\n  lineDash: null,\n\n  /**\n   * @type {number}\n   */\n  lineDashOffset: 0,\n\n  /**\n   * @type {number}\n   */\n  shadowBlur: 0,\n\n  /**\n   * @type {number}\n   */\n  shadowOffsetX: 0,\n\n  /**\n   * @type {number}\n   */\n  shadowOffsetY: 0,\n\n  /**\n   * @type {number}\n   */\n  lineWidth: 1,\n\n  /**\n   * If stroke ignore scale\n   * @type {Boolean}\n   */\n  strokeNoScale: false,\n  // Bounding rect text configuration\n  // Not affected by element transform\n\n  /**\n   * @type {string}\n   */\n  text: null,\n\n  /**\n   * If `fontSize` or `fontFamily` exists, `font` will be reset by\n   * `fontSize`, `fontStyle`, `fontWeight`, `fontFamily`.\n   * So do not visit it directly in upper application (like echarts),\n   * but use `contain/text#makeFont` instead.\n   * @type {string}\n   */\n  font: null,\n\n  /**\n   * The same as font. Use font please.\n   * @deprecated\n   * @type {string}\n   */\n  textFont: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * @type {string}\n   */\n  fontStyle: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * @type {string}\n   */\n  fontWeight: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * Should be 12 but not '12px'.\n   * @type {number}\n   */\n  fontSize: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * @type {string}\n   */\n  fontFamily: null,\n\n  /**\n   * Reserved for special functinality, like 'hr'.\n   * @type {string}\n   */\n  textTag: null,\n\n  /**\n   * @type {string}\n   */\n  textFill: '#000',\n\n  /**\n   * @type {string}\n   */\n  textStroke: null,\n\n  /**\n   * @type {number}\n   */\n  textWidth: null,\n\n  /**\n   * Only for textBackground.\n   * @type {number}\n   */\n  textHeight: null,\n\n  /**\n   * textStroke may be set as some color as a default\n   * value in upper applicaion, where the default value\n   * of textStrokeWidth should be 0 to make sure that\n   * user can choose to do not use text stroke.\n   * @type {number}\n   */\n  textStrokeWidth: 0,\n\n  /**\n   * @type {number}\n   */\n  textLineHeight: null,\n\n  /**\n   * 'inside', 'left', 'right', 'top', 'bottom'\n   * [x, y]\n   * Based on x, y of rect.\n   * @type {string|Array.<number>}\n   * @default 'inside'\n   */\n  textPosition: 'inside',\n\n  /**\n   * If not specified, use the boundingRect of a `displayable`.\n   * @type {Object}\n   */\n  textRect: null,\n\n  /**\n   * [x, y]\n   * @type {Array.<number>}\n   */\n  textOffset: null,\n\n  /**\n   * @type {string}\n   */\n  textAlign: null,\n\n  /**\n   * @type {string}\n   */\n  textVerticalAlign: null,\n\n  /**\n   * @type {number}\n   */\n  textDistance: 5,\n\n  /**\n   * @type {string}\n   */\n  textShadowColor: 'transparent',\n\n  /**\n   * @type {number}\n   */\n  textShadowBlur: 0,\n\n  /**\n   * @type {number}\n   */\n  textShadowOffsetX: 0,\n\n  /**\n   * @type {number}\n   */\n  textShadowOffsetY: 0,\n\n  /**\n   * @type {string}\n   */\n  textBoxShadowColor: 'transparent',\n\n  /**\n   * @type {number}\n   */\n  textBoxShadowBlur: 0,\n\n  /**\n   * @type {number}\n   */\n  textBoxShadowOffsetX: 0,\n\n  /**\n   * @type {number}\n   */\n  textBoxShadowOffsetY: 0,\n\n  /**\n   * Whether transform text.\n   * Only useful in Path and Image element\n   * @type {boolean}\n   */\n  transformText: false,\n\n  /**\n   * Text rotate around position of Path or Image\n   * Only useful in Path and Image element and transformText is false.\n   */\n  textRotation: 0,\n\n  /**\n   * Text origin of text rotation, like [10, 40].\n   * Based on x, y of rect.\n   * Useful in label rotation of circular symbol.\n   * By default, this origin is textPosition.\n   * Can be 'center'.\n   * @type {string|Array.<number>}\n   */\n  textOrigin: null,\n\n  /**\n   * @type {string}\n   */\n  textBackgroundColor: null,\n\n  /**\n   * @type {string}\n   */\n  textBorderColor: null,\n\n  /**\n   * @type {number}\n   */\n  textBorderWidth: 0,\n\n  /**\n   * @type {number}\n   */\n  textBorderRadius: 0,\n\n  /**\n   * Can be `2` or `[2, 4]` or `[2, 3, 4, 5]`\n   * @type {number|Array.<number>}\n   */\n  textPadding: null,\n\n  /**\n   * Text styles for rich text.\n   * @type {Object}\n   */\n  rich: null,\n\n  /**\n   * {outerWidth, outerHeight, ellipsis, placeholder}\n   * @type {Object}\n   */\n  truncate: null,\n\n  /**\n   * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n   * @type {string}\n   */\n  blend: null,\n\n  /**\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  bind: function (ctx, el, prevEl) {\n    var style = this;\n    var prevStyle = prevEl && prevEl.style;\n    var firstDraw = !prevStyle;\n\n    for (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n      var prop = STYLE_COMMON_PROPS[i];\n      var styleName = prop[0];\n\n      if (firstDraw || style[styleName] !== prevStyle[styleName]) {\n        // FIXME Invalid property value will cause style leak from previous element.\n        ctx[styleName] = style[styleName] || prop[1];\n      }\n    }\n\n    if (firstDraw || style.fill !== prevStyle.fill) {\n      ctx.fillStyle = style.fill;\n    }\n\n    if (firstDraw || style.stroke !== prevStyle.stroke) {\n      ctx.strokeStyle = style.stroke;\n    }\n\n    if (firstDraw || style.opacity !== prevStyle.opacity) {\n      ctx.globalAlpha = style.opacity == null ? 1 : style.opacity;\n    }\n\n    if (firstDraw || style.blend !== prevStyle.blend) {\n      ctx.globalCompositeOperation = style.blend || 'source-over';\n    }\n\n    if (this.hasStroke()) {\n      var lineWidth = style.lineWidth;\n      ctx.lineWidth = lineWidth / (this.strokeNoScale && el && el.getLineScale ? el.getLineScale() : 1);\n    }\n  },\n  hasFill: function () {\n    var fill = this.fill;\n    return fill != null && fill !== 'none';\n  },\n  hasStroke: function () {\n    var stroke = this.stroke;\n    return stroke != null && stroke !== 'none' && this.lineWidth > 0;\n  },\n\n  /**\n   * Extend from other style\n   * @param {zrender/graphic/Style} otherStyle\n   * @param {boolean} overwrite true: overwrirte any way.\n   *                            false: overwrite only when !target.hasOwnProperty\n   *                            others: overwrite when property is not null/undefined.\n   */\n  extendFrom: function (otherStyle, overwrite) {\n    if (otherStyle) {\n      for (var name in otherStyle) {\n        if (otherStyle.hasOwnProperty(name) && (overwrite === true || (overwrite === false ? !this.hasOwnProperty(name) : otherStyle[name] != null))) {\n          this[name] = otherStyle[name];\n        }\n      }\n    }\n  },\n\n  /**\n   * Batch setting style with a given object\n   * @param {Object|string} obj\n   * @param {*} [obj]\n   */\n  set: function (obj, value) {\n    if (typeof obj === 'string') {\n      this[obj] = value;\n    } else {\n      this.extendFrom(obj, true);\n    }\n  },\n\n  /**\n   * Clone\n   * @return {zrender/graphic/Style} [description]\n   */\n  clone: function () {\n    var newStyle = new this.constructor();\n    newStyle.extendFrom(this, true);\n    return newStyle;\n  },\n  getGradient: function (ctx, obj, rect) {\n    var method = obj.type === 'radial' ? createRadialGradient : createLinearGradient;\n    var canvasGradient = method(ctx, obj, rect);\n    var colorStops = obj.colorStops;\n\n    for (var i = 0; i < colorStops.length; i++) {\n      canvasGradient.addColorStop(colorStops[i].offset, colorStops[i].color);\n    }\n\n    return canvasGradient;\n  }\n};\nvar styleProto = Style.prototype;\n\nfor (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n  var prop = STYLE_COMMON_PROPS[i];\n\n  if (!(prop[0] in styleProto)) {\n    styleProto[prop[0]] = prop[1];\n  }\n} // Provide for others\n\n\nStyle.getGradient = styleProto.getGradient;\nvar _default = Style;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1645:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar env = __webpack_require__(1495);\n\n// Fix weird bug in some version of IE11 (like 11.0.9600.178**),\n// where exception \"unexpected call to method or property access\"\n// might be thrown when calling ctx.fill or ctx.stroke after a path\n// whose area size is zero is drawn and ctx.clip() is called and\n// shadowBlur is set. See #4572, #3112, #5777.\n// (e.g.,\n//  ctx.moveTo(10, 10);\n//  ctx.lineTo(20, 10);\n//  ctx.closePath();\n//  ctx.clip();\n//  ctx.shadowBlur = 10;\n//  ...\n//  ctx.fill();\n// )\nvar shadowTemp = [['shadowBlur', 0], ['shadowColor', '#000'], ['shadowOffsetX', 0], ['shadowOffsetY', 0]];\n\nfunction _default(orignalBrush) {\n  // version string can be: '11.0'\n  return env.browser.ie && env.browser.version >= 11 ? function () {\n    var clipPaths = this.__clipPaths;\n    var style = this.style;\n    var modified;\n\n    if (clipPaths) {\n      for (var i = 0; i < clipPaths.length; i++) {\n        var clipPath = clipPaths[i];\n        var shape = clipPath && clipPath.shape;\n        var type = clipPath && clipPath.type;\n\n        if (shape && (type === 'sector' && shape.startAngle === shape.endAngle || type === 'rect' && (!shape.width || !shape.height))) {\n          for (var j = 0; j < shadowTemp.length; j++) {\n            // It is save to put shadowTemp static, because shadowTemp\n            // will be all modified each item brush called.\n            shadowTemp[j][2] = style[shadowTemp[j][0]];\n            style[shadowTemp[j][0]] = shadowTemp[j][1];\n          }\n\n          modified = true;\n          break;\n        }\n      }\n    }\n\n    orignalBrush.apply(this, arguments);\n\n    if (modified) {\n      for (var j = 0; j < shadowTemp.length; j++) {\n        style[shadowTemp[j][0]] = shadowTemp[j][2];\n      }\n    }\n  } : orignalBrush;\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1646:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar smoothSpline = __webpack_require__(1777);\n\nvar smoothBezier = __webpack_require__(1776);\n\nfunction buildPath(ctx, shape, closePath) {\n  var points = shape.points;\n  var smooth = shape.smooth;\n\n  if (points && points.length >= 2) {\n    if (smooth && smooth !== 'spline') {\n      var controlPoints = smoothBezier(points, smooth, closePath, shape.smoothConstraint);\n      ctx.moveTo(points[0][0], points[0][1]);\n      var len = points.length;\n\n      for (var i = 0; i < (closePath ? len : len - 1); i++) {\n        var cp1 = controlPoints[i * 2];\n        var cp2 = controlPoints[i * 2 + 1];\n        var p = points[(i + 1) % len];\n        ctx.bezierCurveTo(cp1[0], cp1[1], cp2[0], cp2[1], p[0], p[1]);\n      }\n    } else {\n      if (smooth === 'spline') {\n        points = smoothSpline(points, closePath);\n      }\n\n      ctx.moveTo(points[0][0], points[0][1]);\n\n      for (var i = 1, l = points.length; i < l; i++) {\n        ctx.lineTo(points[i][0], points[i][1]);\n      }\n    }\n\n    closePath && ctx.closePath();\n  }\n}\n\nexports.buildPath = buildPath;\n\n/***/ }),\n\n/***/ 1647:\n/***/ (function(module, exports) {\n\nfunction buildPath(ctx, shape) {\n  var x = shape.x;\n  var y = shape.y;\n  var width = shape.width;\n  var height = shape.height;\n  var r = shape.r;\n  var r1;\n  var r2;\n  var r3;\n  var r4; // Convert width and height to positive for better borderRadius\n\n  if (width < 0) {\n    x = x + width;\n    width = -width;\n  }\n\n  if (height < 0) {\n    y = y + height;\n    height = -height;\n  }\n\n  if (typeof r === 'number') {\n    r1 = r2 = r3 = r4 = r;\n  } else if (r instanceof Array) {\n    if (r.length === 1) {\n      r1 = r2 = r3 = r4 = r[0];\n    } else if (r.length === 2) {\n      r1 = r3 = r[0];\n      r2 = r4 = r[1];\n    } else if (r.length === 3) {\n      r1 = r[0];\n      r2 = r4 = r[1];\n      r3 = r[2];\n    } else {\n      r1 = r[0];\n      r2 = r[1];\n      r3 = r[2];\n      r4 = r[3];\n    }\n  } else {\n    r1 = r2 = r3 = r4 = 0;\n  }\n\n  var total;\n\n  if (r1 + r2 > width) {\n    total = r1 + r2;\n    r1 *= width / total;\n    r2 *= width / total;\n  }\n\n  if (r3 + r4 > width) {\n    total = r3 + r4;\n    r3 *= width / total;\n    r4 *= width / total;\n  }\n\n  if (r2 + r3 > height) {\n    total = r2 + r3;\n    r2 *= height / total;\n    r3 *= height / total;\n  }\n\n  if (r1 + r4 > height) {\n    total = r1 + r4;\n    r1 *= height / total;\n    r4 *= height / total;\n  }\n\n  ctx.moveTo(x + r1, y);\n  ctx.lineTo(x + width - r2, y);\n  r2 !== 0 && ctx.quadraticCurveTo(x + width, y, x + width, y + r2);\n  ctx.lineTo(x + width, y + height - r3);\n  r3 !== 0 && ctx.quadraticCurveTo(x + width, y + height, x + width - r3, y + height);\n  ctx.lineTo(x + r4, y + height);\n  r4 !== 0 && ctx.quadraticCurveTo(x, y + height, x, y + height - r4);\n  ctx.lineTo(x, y + r1);\n  r1 !== 0 && ctx.quadraticCurveTo(x, y, x + r1, y);\n}\n\nexports.buildPath = buildPath;\n\n/***/ }),\n\n/***/ 1648:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _util = __webpack_require__(1479);\n\nvar retrieve2 = _util.retrieve2;\nvar retrieve3 = _util.retrieve3;\nvar each = _util.each;\nvar normalizeCssArray = _util.normalizeCssArray;\nvar isString = _util.isString;\nvar isObject = _util.isObject;\n\nvar textContain = __webpack_require__(1523);\n\nvar roundRectHelper = __webpack_require__(1647);\n\nvar imageHelper = __webpack_require__(1577);\n\n// TODO: Have not support 'start', 'end' yet.\nvar VALID_TEXT_ALIGN = {\n  left: 1,\n  right: 1,\n  center: 1\n};\nvar VALID_TEXT_VERTICAL_ALIGN = {\n  top: 1,\n  bottom: 1,\n  middle: 1\n};\n/**\n * @param {module:zrender/graphic/Style} style\n * @return {module:zrender/graphic/Style} The input style.\n */\n\nfunction normalizeTextStyle(style) {\n  normalizeStyle(style);\n  each(style.rich, normalizeStyle);\n  return style;\n}\n\nfunction normalizeStyle(style) {\n  if (style) {\n    style.font = textContain.makeFont(style);\n    var textAlign = style.textAlign;\n    textAlign === 'middle' && (textAlign = 'center');\n    style.textAlign = textAlign == null || VALID_TEXT_ALIGN[textAlign] ? textAlign : 'left'; // Compatible with textBaseline.\n\n    var textVerticalAlign = style.textVerticalAlign || style.textBaseline;\n    textVerticalAlign === 'center' && (textVerticalAlign = 'middle');\n    style.textVerticalAlign = textVerticalAlign == null || VALID_TEXT_VERTICAL_ALIGN[textVerticalAlign] ? textVerticalAlign : 'top';\n    var textPadding = style.textPadding;\n\n    if (textPadding) {\n      style.textPadding = normalizeCssArray(style.textPadding);\n    }\n  }\n}\n/**\n * @param {CanvasRenderingContext2D} ctx\n * @param {string} text\n * @param {module:zrender/graphic/Style} style\n * @param {Object|boolean} [rect] {x, y, width, height}\n *                  If set false, rect text is not used.\n */\n\n\nfunction renderText(hostEl, ctx, text, style, rect) {\n  style.rich ? renderRichText(hostEl, ctx, text, style, rect) : renderPlainText(hostEl, ctx, text, style, rect);\n}\n\nfunction renderPlainText(hostEl, ctx, text, style, rect) {\n  var font = setCtx(ctx, 'font', style.font || textContain.DEFAULT_FONT);\n  var textPadding = style.textPadding;\n  var contentBlock = hostEl.__textCotentBlock;\n\n  if (!contentBlock || hostEl.__dirty) {\n    contentBlock = hostEl.__textCotentBlock = textContain.parsePlainText(text, font, textPadding, style.truncate);\n  }\n\n  var outerHeight = contentBlock.outerHeight;\n  var textLines = contentBlock.lines;\n  var lineHeight = contentBlock.lineHeight;\n  var boxPos = getBoxPosition(outerHeight, style, rect);\n  var baseX = boxPos.baseX;\n  var baseY = boxPos.baseY;\n  var textAlign = boxPos.textAlign;\n  var textVerticalAlign = boxPos.textVerticalAlign; // Origin of textRotation should be the base point of text drawing.\n\n  applyTextRotation(ctx, style, rect, baseX, baseY);\n  var boxY = textContain.adjustTextY(baseY, outerHeight, textVerticalAlign);\n  var textX = baseX;\n  var textY = boxY;\n  var needDrawBg = needDrawBackground(style);\n\n  if (needDrawBg || textPadding) {\n    // Consider performance, do not call getTextWidth util necessary.\n    var textWidth = textContain.getWidth(text, font);\n    var outerWidth = textWidth;\n    textPadding && (outerWidth += textPadding[1] + textPadding[3]);\n    var boxX = textContain.adjustTextX(baseX, outerWidth, textAlign);\n    needDrawBg && drawBackground(hostEl, ctx, style, boxX, boxY, outerWidth, outerHeight);\n\n    if (textPadding) {\n      textX = getTextXForPadding(baseX, textAlign, textPadding);\n      textY += textPadding[0];\n    }\n  }\n\n  setCtx(ctx, 'textAlign', textAlign || 'left'); // Force baseline to be \"middle\". Otherwise, if using \"top\", the\n  // text will offset downward a little bit in font \"Microsoft YaHei\".\n\n  setCtx(ctx, 'textBaseline', 'middle'); // Always set shadowBlur and shadowOffset to avoid leak from displayable.\n\n  setCtx(ctx, 'shadowBlur', style.textShadowBlur || 0);\n  setCtx(ctx, 'shadowColor', style.textShadowColor || 'transparent');\n  setCtx(ctx, 'shadowOffsetX', style.textShadowOffsetX || 0);\n  setCtx(ctx, 'shadowOffsetY', style.textShadowOffsetY || 0); // `textBaseline` is set as 'middle'.\n\n  textY += lineHeight / 2;\n  var textStrokeWidth = style.textStrokeWidth;\n  var textStroke = getStroke(style.textStroke, textStrokeWidth);\n  var textFill = getFill(style.textFill);\n\n  if (textStroke) {\n    setCtx(ctx, 'lineWidth', textStrokeWidth);\n    setCtx(ctx, 'strokeStyle', textStroke);\n  }\n\n  if (textFill) {\n    setCtx(ctx, 'fillStyle', textFill);\n  }\n\n  for (var i = 0; i < textLines.length; i++) {\n    // Fill after stroke so the outline will not cover the main part.\n    textStroke && ctx.strokeText(textLines[i], textX, textY);\n    textFill && ctx.fillText(textLines[i], textX, textY);\n    textY += lineHeight;\n  }\n}\n\nfunction renderRichText(hostEl, ctx, text, style, rect) {\n  var contentBlock = hostEl.__textCotentBlock;\n\n  if (!contentBlock || hostEl.__dirty) {\n    contentBlock = hostEl.__textCotentBlock = textContain.parseRichText(text, style);\n  }\n\n  drawRichText(hostEl, ctx, contentBlock, style, rect);\n}\n\nfunction drawRichText(hostEl, ctx, contentBlock, style, rect) {\n  var contentWidth = contentBlock.width;\n  var outerWidth = contentBlock.outerWidth;\n  var outerHeight = contentBlock.outerHeight;\n  var textPadding = style.textPadding;\n  var boxPos = getBoxPosition(outerHeight, style, rect);\n  var baseX = boxPos.baseX;\n  var baseY = boxPos.baseY;\n  var textAlign = boxPos.textAlign;\n  var textVerticalAlign = boxPos.textVerticalAlign; // Origin of textRotation should be the base point of text drawing.\n\n  applyTextRotation(ctx, style, rect, baseX, baseY);\n  var boxX = textContain.adjustTextX(baseX, outerWidth, textAlign);\n  var boxY = textContain.adjustTextY(baseY, outerHeight, textVerticalAlign);\n  var xLeft = boxX;\n  var lineTop = boxY;\n\n  if (textPadding) {\n    xLeft += textPadding[3];\n    lineTop += textPadding[0];\n  }\n\n  var xRight = xLeft + contentWidth;\n  needDrawBackground(style) && drawBackground(hostEl, ctx, style, boxX, boxY, outerWidth, outerHeight);\n\n  for (var i = 0; i < contentBlock.lines.length; i++) {\n    var line = contentBlock.lines[i];\n    var tokens = line.tokens;\n    var tokenCount = tokens.length;\n    var lineHeight = line.lineHeight;\n    var usedWidth = line.width;\n    var leftIndex = 0;\n    var lineXLeft = xLeft;\n    var lineXRight = xRight;\n    var rightIndex = tokenCount - 1;\n    var token;\n\n    while (leftIndex < tokenCount && (token = tokens[leftIndex], !token.textAlign || token.textAlign === 'left')) {\n      placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXLeft, 'left');\n      usedWidth -= token.width;\n      lineXLeft += token.width;\n      leftIndex++;\n    }\n\n    while (rightIndex >= 0 && (token = tokens[rightIndex], token.textAlign === 'right')) {\n      placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXRight, 'right');\n      usedWidth -= token.width;\n      lineXRight -= token.width;\n      rightIndex--;\n    } // The other tokens are placed as textAlign 'center' if there is enough space.\n\n\n    lineXLeft += (contentWidth - (lineXLeft - xLeft) - (xRight - lineXRight) - usedWidth) / 2;\n\n    while (leftIndex <= rightIndex) {\n      token = tokens[leftIndex]; // Consider width specified by user, use 'center' rather than 'left'.\n\n      placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXLeft + token.width / 2, 'center');\n      lineXLeft += token.width;\n      leftIndex++;\n    }\n\n    lineTop += lineHeight;\n  }\n}\n\nfunction applyTextRotation(ctx, style, rect, x, y) {\n  // textRotation only apply in RectText.\n  if (rect && style.textRotation) {\n    var origin = style.textOrigin;\n\n    if (origin === 'center') {\n      x = rect.width / 2 + rect.x;\n      y = rect.height / 2 + rect.y;\n    } else if (origin) {\n      x = origin[0] + rect.x;\n      y = origin[1] + rect.y;\n    }\n\n    ctx.translate(x, y); // Positive: anticlockwise\n\n    ctx.rotate(-style.textRotation);\n    ctx.translate(-x, -y);\n  }\n}\n\nfunction placeToken(hostEl, ctx, token, style, lineHeight, lineTop, x, textAlign) {\n  var tokenStyle = style.rich[token.styleName] || {}; // 'ctx.textBaseline' is always set as 'middle', for sake of\n  // the bias of \"Microsoft YaHei\".\n\n  var textVerticalAlign = token.textVerticalAlign;\n  var y = lineTop + lineHeight / 2;\n\n  if (textVerticalAlign === 'top') {\n    y = lineTop + token.height / 2;\n  } else if (textVerticalAlign === 'bottom') {\n    y = lineTop + lineHeight - token.height / 2;\n  }\n\n  !token.isLineHolder && needDrawBackground(tokenStyle) && drawBackground(hostEl, ctx, tokenStyle, textAlign === 'right' ? x - token.width : textAlign === 'center' ? x - token.width / 2 : x, y - token.height / 2, token.width, token.height);\n  var textPadding = token.textPadding;\n\n  if (textPadding) {\n    x = getTextXForPadding(x, textAlign, textPadding);\n    y -= token.height / 2 - textPadding[2] - token.textHeight / 2;\n  }\n\n  setCtx(ctx, 'shadowBlur', retrieve3(tokenStyle.textShadowBlur, style.textShadowBlur, 0));\n  setCtx(ctx, 'shadowColor', tokenStyle.textShadowColor || style.textShadowColor || 'transparent');\n  setCtx(ctx, 'shadowOffsetX', retrieve3(tokenStyle.textShadowOffsetX, style.textShadowOffsetX, 0));\n  setCtx(ctx, 'shadowOffsetY', retrieve3(tokenStyle.textShadowOffsetY, style.textShadowOffsetY, 0));\n  setCtx(ctx, 'textAlign', textAlign); // Force baseline to be \"middle\". Otherwise, if using \"top\", the\n  // text will offset downward a little bit in font \"Microsoft YaHei\".\n\n  setCtx(ctx, 'textBaseline', 'middle');\n  setCtx(ctx, 'font', token.font || textContain.DEFAULT_FONT);\n  var textStroke = getStroke(tokenStyle.textStroke || style.textStroke, textStrokeWidth);\n  var textFill = getFill(tokenStyle.textFill || style.textFill);\n  var textStrokeWidth = retrieve2(tokenStyle.textStrokeWidth, style.textStrokeWidth); // Fill after stroke so the outline will not cover the main part.\n\n  if (textStroke) {\n    setCtx(ctx, 'lineWidth', textStrokeWidth);\n    setCtx(ctx, 'strokeStyle', textStroke);\n    ctx.strokeText(token.text, x, y);\n  }\n\n  if (textFill) {\n    setCtx(ctx, 'fillStyle', textFill);\n    ctx.fillText(token.text, x, y);\n  }\n}\n\nfunction needDrawBackground(style) {\n  return style.textBackgroundColor || style.textBorderWidth && style.textBorderColor;\n} // style: {textBackgroundColor, textBorderWidth, textBorderColor, textBorderRadius}\n// shape: {x, y, width, height}\n\n\nfunction drawBackground(hostEl, ctx, style, x, y, width, height) {\n  var textBackgroundColor = style.textBackgroundColor;\n  var textBorderWidth = style.textBorderWidth;\n  var textBorderColor = style.textBorderColor;\n  var isPlainBg = isString(textBackgroundColor);\n  setCtx(ctx, 'shadowBlur', style.textBoxShadowBlur || 0);\n  setCtx(ctx, 'shadowColor', style.textBoxShadowColor || 'transparent');\n  setCtx(ctx, 'shadowOffsetX', style.textBoxShadowOffsetX || 0);\n  setCtx(ctx, 'shadowOffsetY', style.textBoxShadowOffsetY || 0);\n\n  if (isPlainBg || textBorderWidth && textBorderColor) {\n    ctx.beginPath();\n    var textBorderRadius = style.textBorderRadius;\n\n    if (!textBorderRadius) {\n      ctx.rect(x, y, width, height);\n    } else {\n      roundRectHelper.buildPath(ctx, {\n        x: x,\n        y: y,\n        width: width,\n        height: height,\n        r: textBorderRadius\n      });\n    }\n\n    ctx.closePath();\n  }\n\n  if (isPlainBg) {\n    setCtx(ctx, 'fillStyle', textBackgroundColor);\n    ctx.fill();\n  } else if (isObject(textBackgroundColor)) {\n    var image = textBackgroundColor.image;\n    image = imageHelper.createOrUpdateImage(image, null, hostEl, onBgImageLoaded, textBackgroundColor);\n\n    if (image && imageHelper.isImageReady(image)) {\n      ctx.drawImage(image, x, y, width, height);\n    }\n  }\n\n  if (textBorderWidth && textBorderColor) {\n    setCtx(ctx, 'lineWidth', textBorderWidth);\n    setCtx(ctx, 'strokeStyle', textBorderColor);\n    ctx.stroke();\n  }\n}\n\nfunction onBgImageLoaded(image, textBackgroundColor) {\n  // Replace image, so that `contain/text.js#parseRichText`\n  // will get correct result in next tick.\n  textBackgroundColor.image = image;\n}\n\nfunction getBoxPosition(blockHeiht, style, rect) {\n  var baseX = style.x || 0;\n  var baseY = style.y || 0;\n  var textAlign = style.textAlign;\n  var textVerticalAlign = style.textVerticalAlign; // Text position represented by coord\n\n  if (rect) {\n    var textPosition = style.textPosition;\n\n    if (textPosition instanceof Array) {\n      // Percent\n      baseX = rect.x + parsePercent(textPosition[0], rect.width);\n      baseY = rect.y + parsePercent(textPosition[1], rect.height);\n    } else {\n      var res = textContain.adjustTextPositionOnRect(textPosition, rect, style.textDistance);\n      baseX = res.x;\n      baseY = res.y; // Default align and baseline when has textPosition\n\n      textAlign = textAlign || res.textAlign;\n      textVerticalAlign = textVerticalAlign || res.textVerticalAlign;\n    } // textOffset is only support in RectText, otherwise\n    // we have to adjust boundingRect for textOffset.\n\n\n    var textOffset = style.textOffset;\n\n    if (textOffset) {\n      baseX += textOffset[0];\n      baseY += textOffset[1];\n    }\n  }\n\n  return {\n    baseX: baseX,\n    baseY: baseY,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n}\n\nfunction setCtx(ctx, prop, value) {\n  // FIXME ??? performance try\n  // if (ctx.__currentValues[prop] !== value) {\n  // ctx[prop] = ctx.__currentValues[prop] = value;\n  ctx[prop] = value; // }\n\n  return ctx[prop];\n}\n/**\n * @param {string} [stroke] If specified, do not check style.textStroke.\n * @param {string} [lineWidth] If specified, do not check style.textStroke.\n * @param {number} style\n */\n\n\nfunction getStroke(stroke, lineWidth) {\n  return stroke == null || lineWidth <= 0 || stroke === 'transparent' || stroke === 'none' ? null // TODO pattern and gradient?\n  : stroke.image || stroke.colorStops ? '#000' : stroke;\n}\n\nfunction getFill(fill) {\n  return fill == null || fill === 'none' ? null // TODO pattern and gradient?\n  : fill.image || fill.colorStops ? '#000' : fill;\n}\n\nfunction parsePercent(value, maxValue) {\n  if (typeof value === 'string') {\n    if (value.lastIndexOf('%') >= 0) {\n      return parseFloat(value) / 100 * maxValue;\n    }\n\n    return parseFloat(value);\n  }\n\n  return value;\n}\n\nfunction getTextXForPadding(x, textAlign, textPadding) {\n  return textAlign === 'right' ? x - textPadding[1] : textAlign === 'center' ? x + textPadding[3] / 2 - textPadding[1] / 2 : x + textPadding[3];\n}\n/**\n * @param {string} text\n * @param {module:zrender/Style} style\n * @return {boolean}\n */\n\n\nfunction needDrawText(text, style) {\n  return text != null && (text || style.textBackgroundColor || style.textBorderWidth && style.textBorderColor || style.textPadding);\n}\n\nexports.normalizeTextStyle = normalizeTextStyle;\nexports.renderText = renderText;\nexports.getStroke = getStroke;\nexports.getFill = getFill;\nexports.needDrawText = needDrawText;\n\n/***/ }),\n\n/***/ 1649:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar matrix = __webpack_require__(1525);\n\nvar vector = __webpack_require__(1485);\n\n/**\n * 提供变换扩展\n * @module zrender/mixin/Transformable\n * @author pissang (https://www.github.com/pissang)\n */\nvar mIdentity = matrix.identity;\nvar EPSILON = 5e-5;\n\nfunction isNotAroundZero(val) {\n  return val > EPSILON || val < -EPSILON;\n}\n/**\n * @alias module:zrender/mixin/Transformable\n * @constructor\n */\n\n\nvar Transformable = function (opts) {\n  opts = opts || {}; // If there are no given position, rotation, scale\n\n  if (!opts.position) {\n    /**\n     * 平移\n     * @type {Array.<number>}\n     * @default [0, 0]\n     */\n    this.position = [0, 0];\n  }\n\n  if (opts.rotation == null) {\n    /**\n     * 旋转\n     * @type {Array.<number>}\n     * @default 0\n     */\n    this.rotation = 0;\n  }\n\n  if (!opts.scale) {\n    /**\n     * 缩放\n     * @type {Array.<number>}\n     * @default [1, 1]\n     */\n    this.scale = [1, 1];\n  }\n  /**\n   * 旋转和缩放的原点\n   * @type {Array.<number>}\n   * @default null\n   */\n\n\n  this.origin = this.origin || null;\n};\n\nvar transformableProto = Transformable.prototype;\ntransformableProto.transform = null;\n/**\n * 判断是否需要有坐标变换\n * 如果有坐标变换, 则从position, rotation, scale以及父节点的transform计算出自身的transform矩阵\n */\n\ntransformableProto.needLocalTransform = function () {\n  return isNotAroundZero(this.rotation) || isNotAroundZero(this.position[0]) || isNotAroundZero(this.position[1]) || isNotAroundZero(this.scale[0] - 1) || isNotAroundZero(this.scale[1] - 1);\n};\n\ntransformableProto.updateTransform = function () {\n  var parent = this.parent;\n  var parentHasTransform = parent && parent.transform;\n  var needLocalTransform = this.needLocalTransform();\n  var m = this.transform;\n\n  if (!(needLocalTransform || parentHasTransform)) {\n    m && mIdentity(m);\n    return;\n  }\n\n  m = m || matrix.create();\n\n  if (needLocalTransform) {\n    this.getLocalTransform(m);\n  } else {\n    mIdentity(m);\n  } // 应用父节点变换\n\n\n  if (parentHasTransform) {\n    if (needLocalTransform) {\n      matrix.mul(m, parent.transform, m);\n    } else {\n      matrix.copy(m, parent.transform);\n    }\n  } // 保存这个变换矩阵\n\n\n  this.transform = m;\n  this.invTransform = this.invTransform || matrix.create();\n  matrix.invert(this.invTransform, m);\n};\n\ntransformableProto.getLocalTransform = function (m) {\n  return Transformable.getLocalTransform(this, m);\n};\n/**\n * 将自己的transform应用到context上\n * @param {CanvasRenderingContext2D} ctx\n */\n\n\ntransformableProto.setTransform = function (ctx) {\n  var m = this.transform;\n  var dpr = ctx.dpr || 1;\n\n  if (m) {\n    ctx.setTransform(dpr * m[0], dpr * m[1], dpr * m[2], dpr * m[3], dpr * m[4], dpr * m[5]);\n  } else {\n    ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n  }\n};\n\ntransformableProto.restoreTransform = function (ctx) {\n  var dpr = ctx.dpr || 1;\n  ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n};\n\nvar tmpTransform = [];\n/**\n * 分解`transform`矩阵到`position`, `rotation`, `scale`\n */\n\ntransformableProto.decomposeTransform = function () {\n  if (!this.transform) {\n    return;\n  }\n\n  var parent = this.parent;\n  var m = this.transform;\n\n  if (parent && parent.transform) {\n    // Get local transform and decompose them to position, scale, rotation\n    matrix.mul(tmpTransform, parent.invTransform, m);\n    m = tmpTransform;\n  }\n\n  var sx = m[0] * m[0] + m[1] * m[1];\n  var sy = m[2] * m[2] + m[3] * m[3];\n  var position = this.position;\n  var scale = this.scale;\n\n  if (isNotAroundZero(sx - 1)) {\n    sx = Math.sqrt(sx);\n  }\n\n  if (isNotAroundZero(sy - 1)) {\n    sy = Math.sqrt(sy);\n  }\n\n  if (m[0] < 0) {\n    sx = -sx;\n  }\n\n  if (m[3] < 0) {\n    sy = -sy;\n  }\n\n  position[0] = m[4];\n  position[1] = m[5];\n  scale[0] = sx;\n  scale[1] = sy;\n  this.rotation = Math.atan2(-m[1] / sy, m[0] / sx);\n};\n/**\n * Get global scale\n * @return {Array.<number>}\n */\n\n\ntransformableProto.getGlobalScale = function () {\n  var m = this.transform;\n\n  if (!m) {\n    return [1, 1];\n  }\n\n  var sx = Math.sqrt(m[0] * m[0] + m[1] * m[1]);\n  var sy = Math.sqrt(m[2] * m[2] + m[3] * m[3]);\n\n  if (m[0] < 0) {\n    sx = -sx;\n  }\n\n  if (m[3] < 0) {\n    sy = -sy;\n  }\n\n  return [sx, sy];\n};\n/**\n * 变换坐标位置到 shape 的局部坐标空间\n * @method\n * @param {number} x\n * @param {number} y\n * @return {Array.<number>}\n */\n\n\ntransformableProto.transformCoordToLocal = function (x, y) {\n  var v2 = [x, y];\n  var invTransform = this.invTransform;\n\n  if (invTransform) {\n    vector.applyTransform(v2, v2, invTransform);\n  }\n\n  return v2;\n};\n/**\n * 变换局部坐标位置到全局坐标空间\n * @method\n * @param {number} x\n * @param {number} y\n * @return {Array.<number>}\n */\n\n\ntransformableProto.transformCoordToGlobal = function (x, y) {\n  var v2 = [x, y];\n  var transform = this.transform;\n\n  if (transform) {\n    vector.applyTransform(v2, v2, transform);\n  }\n\n  return v2;\n};\n/**\n * @static\n * @param {Object} target\n * @param {Array.<number>} target.origin\n * @param {number} target.rotation\n * @param {Array.<number>} target.position\n * @param {Array.<number>} [m]\n */\n\n\nTransformable.getLocalTransform = function (target, m) {\n  m = m || [];\n  mIdentity(m);\n  var origin = target.origin;\n  var scale = target.scale || [1, 1];\n  var rotation = target.rotation || 0;\n  var position = target.position || [0, 0];\n\n  if (origin) {\n    // Translate to origin\n    m[4] -= origin[0];\n    m[5] -= origin[1];\n  }\n\n  matrix.scale(m, m, scale);\n\n  if (rotation) {\n    matrix.rotate(m, m, rotation);\n  }\n\n  if (origin) {\n    // Translate back from origin\n    m[4] += origin[0];\n    m[5] += origin[1];\n  }\n\n  m[4] += position[0];\n  m[5] += position[1];\n  return m;\n};\n\nvar _default = Transformable;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1650:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar guid = __webpack_require__(1640);\n\nvar env = __webpack_require__(1495);\n\nvar zrUtil = __webpack_require__(1479);\n\nvar Handler = __webpack_require__(1757);\n\nvar Storage = __webpack_require__(1760);\n\nvar Painter = __webpack_require__(1759);\n\nvar Animation = __webpack_require__(1761);\n\nvar HandlerProxy = __webpack_require__(1771);\n\n/*!\n* ZRender, a high performance 2d drawing library.\n*\n* Copyright (c) 2013, Baidu Inc.\n* All rights reserved.\n*\n* LICENSE\n* https://github.com/ecomfe/zrender/blob/master/LICENSE.txt\n*/\nvar useVML = !env.canvasSupported;\nvar painterCtors = {\n  canvas: Painter\n};\nvar instances = {}; // ZRender实例map索引\n\n/**\n * @type {string}\n */\n\nvar version = '3.7.4';\n/**\n * Initializing a zrender instance\n * @param {HTMLElement} dom\n * @param {Object} opts\n * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n * @param {number} [opts.devicePixelRatio]\n * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n * @return {module:zrender/ZRender}\n */\n\nfunction init(dom, opts) {\n  var zr = new ZRender(guid(), dom, opts);\n  instances[zr.id] = zr;\n  return zr;\n}\n/**\n * Dispose zrender instance\n * @param {module:zrender/ZRender} zr\n */\n\n\nfunction dispose(zr) {\n  if (zr) {\n    zr.dispose();\n  } else {\n    for (var key in instances) {\n      if (instances.hasOwnProperty(key)) {\n        instances[key].dispose();\n      }\n    }\n\n    instances = {};\n  }\n\n  return this;\n}\n/**\n * Get zrender instance by id\n * @param {string} id zrender instance id\n * @return {module:zrender/ZRender}\n */\n\n\nfunction getInstance(id) {\n  return instances[id];\n}\n\nfunction registerPainter(name, Ctor) {\n  painterCtors[name] = Ctor;\n}\n\nfunction delInstance(id) {\n  delete instances[id];\n}\n/**\n * @module zrender/ZRender\n */\n\n/**\n * @constructor\n * @alias module:zrender/ZRender\n * @param {string} id\n * @param {HTMLElement} dom\n * @param {Object} opts\n * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n * @param {number} [opts.devicePixelRatio]\n * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n */\n\n\nvar ZRender = function (id, dom, opts) {\n  opts = opts || {};\n  /**\n   * @type {HTMLDomElement}\n   */\n\n  this.dom = dom;\n  /**\n   * @type {string}\n   */\n\n  this.id = id;\n  var self = this;\n  var storage = new Storage();\n  var rendererType = opts.renderer; // TODO WebGL\n\n  if (useVML) {\n    if (!painterCtors.vml) {\n      throw new Error('You need to require \\'zrender/vml/vml\\' to support IE8');\n    }\n\n    rendererType = 'vml';\n  } else if (!rendererType || !painterCtors[rendererType]) {\n    rendererType = 'canvas';\n  }\n\n  var painter = new painterCtors[rendererType](dom, storage, opts);\n  this.storage = storage;\n  this.painter = painter;\n  var handerProxy = !env.node ? new HandlerProxy(painter.getViewportRoot()) : null;\n  this.handler = new Handler(storage, painter, handerProxy, painter.root);\n  /**\n   * @type {module:zrender/animation/Animation}\n   */\n\n  this.animation = new Animation({\n    stage: {\n      update: zrUtil.bind(this.flush, this)\n    }\n  });\n  this.animation.start();\n  /**\n   * @type {boolean}\n   * @private\n   */\n\n  this._needsRefresh; // 修改 storage.delFromStorage, 每次删除元素之前删除动画\n  // FIXME 有点ugly\n\n  var oldDelFromStorage = storage.delFromStorage;\n  var oldAddToStorage = storage.addToStorage;\n\n  storage.delFromStorage = function (el) {\n    oldDelFromStorage.call(storage, el);\n    el && el.removeSelfFromZr(self);\n  };\n\n  storage.addToStorage = function (el) {\n    oldAddToStorage.call(storage, el);\n    el.addSelfToZr(self);\n  };\n};\n\nZRender.prototype = {\n  constructor: ZRender,\n\n  /**\n   * 获取实例唯一标识\n   * @return {string}\n   */\n  getId: function () {\n    return this.id;\n  },\n\n  /**\n   * 添加元素\n   * @param  {module:zrender/Element} el\n   */\n  add: function (el) {\n    this.storage.addRoot(el);\n    this._needsRefresh = true;\n  },\n\n  /**\n   * 删除元素\n   * @param  {module:zrender/Element} el\n   */\n  remove: function (el) {\n    this.storage.delRoot(el);\n    this._needsRefresh = true;\n  },\n\n  /**\n   * Change configuration of layer\n   * @param {string} zLevel\n   * @param {Object} config\n   * @param {string} [config.clearColor=0] Clear color\n   * @param {string} [config.motionBlur=false] If enable motion blur\n   * @param {number} [config.lastFrameAlpha=0.7] Motion blur factor. Larger value cause longer trailer\n  */\n  configLayer: function (zLevel, config) {\n    this.painter.configLayer(zLevel, config);\n    this._needsRefresh = true;\n  },\n\n  /**\n   * Repaint the canvas immediately\n   */\n  refreshImmediately: function () {\n    // var start = new Date();\n    // Clear needsRefresh ahead to avoid something wrong happens in refresh\n    // Or it will cause zrender refreshes again and again.\n    this._needsRefresh = false;\n    this.painter.refresh();\n    /**\n     * Avoid trigger zr.refresh in Element#beforeUpdate hook\n     */\n\n    this._needsRefresh = false; // var end = new Date();\n    // var log = document.getElementById('log');\n    // if (log) {\n    //     log.innerHTML = log.innerHTML + '<br>' + (end - start);\n    // }\n  },\n\n  /**\n   * Mark and repaint the canvas in the next frame of browser\n   */\n  refresh: function () {\n    this._needsRefresh = true;\n  },\n\n  /**\n   * Perform all refresh\n   */\n  flush: function () {\n    if (this._needsRefresh) {\n      this.refreshImmediately();\n    }\n\n    if (this._needsRefreshHover) {\n      this.refreshHoverImmediately();\n    }\n  },\n\n  /**\n   * Add element to hover layer\n   * @param  {module:zrender/Element} el\n   * @param {Object} style\n   */\n  addHover: function (el, style) {\n    if (this.painter.addHover) {\n      this.painter.addHover(el, style);\n      this.refreshHover();\n    }\n  },\n\n  /**\n   * Add element from hover layer\n   * @param  {module:zrender/Element} el\n   */\n  removeHover: function (el) {\n    if (this.painter.removeHover) {\n      this.painter.removeHover(el);\n      this.refreshHover();\n    }\n  },\n\n  /**\n   * Clear all hover elements in hover layer\n   * @param  {module:zrender/Element} el\n   */\n  clearHover: function () {\n    if (this.painter.clearHover) {\n      this.painter.clearHover();\n      this.refreshHover();\n    }\n  },\n\n  /**\n   * Refresh hover in next frame\n   */\n  refreshHover: function () {\n    this._needsRefreshHover = true;\n  },\n\n  /**\n   * Refresh hover immediately\n   */\n  refreshHoverImmediately: function () {\n    this._needsRefreshHover = false;\n    this.painter.refreshHover && this.painter.refreshHover();\n  },\n\n  /**\n   * Resize the canvas.\n   * Should be invoked when container size is changed\n   * @param {Object} [opts]\n   * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n   * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n   */\n  resize: function (opts) {\n    opts = opts || {};\n    this.painter.resize(opts.width, opts.height);\n    this.handler.resize();\n  },\n\n  /**\n   * Stop and clear all animation immediately\n   */\n  clearAnimation: function () {\n    this.animation.clear();\n  },\n\n  /**\n   * Get container width\n   */\n  getWidth: function () {\n    return this.painter.getWidth();\n  },\n\n  /**\n   * Get container height\n   */\n  getHeight: function () {\n    return this.painter.getHeight();\n  },\n\n  /**\n   * Export the canvas as Base64 URL\n   * @param {string} type\n   * @param {string} [backgroundColor='#fff']\n   * @return {string} Base64 URL\n   */\n  // toDataURL: function(type, backgroundColor) {\n  //     return this.painter.getRenderedCanvas({\n  //         backgroundColor: backgroundColor\n  //     }).toDataURL(type);\n  // },\n\n  /**\n   * Converting a path to image.\n   * It has much better performance of drawing image rather than drawing a vector path.\n   * @param {module:zrender/graphic/Path} e\n   * @param {number} width\n   * @param {number} height\n   */\n  pathToImage: function (e, dpr) {\n    return this.painter.pathToImage(e, dpr);\n  },\n\n  /**\n   * Set default cursor\n   * @param {string} [cursorStyle='default'] 例如 crosshair\n   */\n  setCursorStyle: function (cursorStyle) {\n    this.handler.setCursorStyle(cursorStyle);\n  },\n\n  /**\n   * Find hovered element\n   * @param {number} x\n   * @param {number} y\n   * @return {Object} {target, topTarget}\n   */\n  findHover: function (x, y) {\n    return this.handler.findHover(x, y);\n  },\n\n  /**\n   * Bind event\n   *\n   * @param {string} eventName Event name\n   * @param {Function} eventHandler Handler function\n   * @param {Object} [context] Context object\n   */\n  on: function (eventName, eventHandler, context) {\n    this.handler.on(eventName, eventHandler, context);\n  },\n\n  /**\n   * Unbind event\n   * @param {string} eventName Event name\n   * @param {Function} [eventHandler] Handler function\n   */\n  off: function (eventName, eventHandler) {\n    this.handler.off(eventName, eventHandler);\n  },\n\n  /**\n   * Trigger event manually\n   *\n   * @param {string} eventName Event name\n   * @param {event=} event Event object\n   */\n  trigger: function (eventName, event) {\n    this.handler.trigger(eventName, event);\n  },\n\n  /**\n   * Clear all objects and the canvas.\n   */\n  clear: function () {\n    this.storage.delRoot();\n    this.painter.clear();\n  },\n\n  /**\n   * Dispose self.\n   */\n  dispose: function () {\n    this.animation.stop();\n    this.clear();\n    this.storage.dispose();\n    this.painter.dispose();\n    this.handler.dispose();\n    this.animation = this.storage = this.painter = this.handler = null;\n    delInstance(this.id);\n  }\n};\nexports.version = version;\nexports.init = init;\nexports.dispose = dispose;\nexports.getInstance = getInstance;\nexports.registerPainter = registerPainter;\n\n/***/ }),\n\n/***/ 1675:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1479);\n\nvar echartsAPIList = ['getDom', 'getZr', 'getWidth', 'getHeight', 'getDevicePixelRatio', 'dispatchAction', 'isDisposed', 'on', 'off', 'getDataURL', 'getConnectedDataURL', 'getModel', 'getOption', 'getViewOfComponentModel', 'getViewOfSeriesModel']; // And `getCoordinateSystems` and `getComponentByElement` will be injected in echarts.js\n\nfunction ExtensionAPI(chartInstance) {\n  zrUtil.each(echartsAPIList, function (name) {\n    this[name] = zrUtil.bind(chartInstance[name], chartInstance);\n  }, this);\n}\n\nvar _default = ExtensionAPI;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1676:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(1490);\n\nvar zrUtil = __webpack_require__(1479);\n\nvar barLayoutGrid = __webpack_require__(1713);\n\n__webpack_require__(1613);\n\n__webpack_require__(1677);\n\n__webpack_require__(1678);\n\n__webpack_require__(1609);\n\n// In case developer forget to include grid component\necharts.registerLayout(zrUtil.curry(barLayoutGrid, 'bar')); // Visual coding for legend\n\necharts.registerVisual(function (ecModel) {\n  ecModel.eachSeriesByType('bar', function (seriesModel) {\n    var data = seriesModel.getData();\n    data.setVisual('legendSymbol', 'roundRect');\n  });\n});\n\n/***/ }),\n\n/***/ 1677:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar BaseBarSeries = __webpack_require__(1679);\n\nvar _default = BaseBarSeries.extend({\n  type: 'series.bar',\n  dependencies: ['grid', 'polar'],\n  brushSelector: 'rect'\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1678:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(1494);\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = __webpack_require__(1490);\n\nvar zrUtil = __webpack_require__(1479);\n\nvar graphic = __webpack_require__(1483);\n\nvar _helper = __webpack_require__(1681);\n\nvar setLabel = _helper.setLabel;\n\nvar Model = __webpack_require__(1498);\n\nvar barItemStyle = __webpack_require__(1680);\n\nvar BAR_BORDER_WIDTH_QUERY = ['itemStyle', 'normal', 'barBorderWidth']; // FIXME\n// Just for compatible with ec2.\n\nzrUtil.extend(Model.prototype, barItemStyle);\n\nvar _default = echarts.extendChartView({\n  type: 'bar',\n  render: function (seriesModel, ecModel, api) {\n    var coordinateSystemType = seriesModel.get('coordinateSystem');\n\n    if (coordinateSystemType === 'cartesian2d' || coordinateSystemType === 'polar') {\n      this._render(seriesModel, ecModel, api);\n    } else {}\n\n    return this.group;\n  },\n  dispose: zrUtil.noop,\n  _render: function (seriesModel, ecModel, api) {\n    var group = this.group;\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var coord = seriesModel.coordinateSystem;\n    var baseAxis = coord.getBaseAxis();\n    var isHorizontalOrRadial;\n\n    if (coord.type === 'cartesian2d') {\n      isHorizontalOrRadial = baseAxis.isHorizontal();\n    } else if (coord.type === 'polar') {\n      isHorizontalOrRadial = baseAxis.dim === 'angle';\n    }\n\n    var animationModel = seriesModel.isAnimationEnabled() ? seriesModel : null;\n    data.diff(oldData).add(function (dataIndex) {\n      if (!data.hasValue(dataIndex)) {\n        return;\n      }\n\n      var itemModel = data.getItemModel(dataIndex);\n      var layout = getLayout[coord.type](data, dataIndex, itemModel);\n      var el = elementCreator[coord.type](data, dataIndex, itemModel, layout, isHorizontalOrRadial, animationModel);\n      data.setItemGraphicEl(dataIndex, el);\n      group.add(el);\n      updateStyle(el, data, dataIndex, itemModel, layout, seriesModel, isHorizontalOrRadial, coord.type === 'polar');\n    }).update(function (newIndex, oldIndex) {\n      var el = oldData.getItemGraphicEl(oldIndex);\n\n      if (!data.hasValue(newIndex)) {\n        group.remove(el);\n        return;\n      }\n\n      var itemModel = data.getItemModel(newIndex);\n      var layout = getLayout[coord.type](data, newIndex, itemModel);\n\n      if (el) {\n        graphic.updateProps(el, {\n          shape: layout\n        }, animationModel, newIndex);\n      } else {\n        el = elementCreator[coord.type](data, newIndex, itemModel, layout, isHorizontalOrRadial, animationModel, true);\n      }\n\n      data.setItemGraphicEl(newIndex, el); // Add back\n\n      group.add(el);\n      updateStyle(el, data, newIndex, itemModel, layout, seriesModel, isHorizontalOrRadial, coord.type === 'polar');\n    }).remove(function (dataIndex) {\n      var el = oldData.getItemGraphicEl(dataIndex);\n\n      if (coord.type === 'cartesian2d') {\n        el && removeRect(dataIndex, animationModel, el);\n      } else {\n        el && removeSector(dataIndex, animationModel, el);\n      }\n    }).execute();\n    this._data = data;\n  },\n  remove: function (ecModel, api) {\n    var group = this.group;\n    var data = this._data;\n\n    if (ecModel.get('animation')) {\n      if (data) {\n        data.eachItemGraphicEl(function (el) {\n          if (el.type === 'sector') {\n            removeSector(el.dataIndex, ecModel, el);\n          } else {\n            removeRect(el.dataIndex, ecModel, el);\n          }\n        });\n      }\n    } else {\n      group.removeAll();\n    }\n  }\n});\n\nvar elementCreator = {\n  cartesian2d: function (data, dataIndex, itemModel, layout, isHorizontal, animationModel, isUpdate) {\n    var rect = new graphic.Rect({\n      shape: zrUtil.extend({}, layout)\n    }); // Animation\n\n    if (animationModel) {\n      var rectShape = rect.shape;\n      var animateProperty = isHorizontal ? 'height' : 'width';\n      var animateTarget = {};\n      rectShape[animateProperty] = 0;\n      animateTarget[animateProperty] = layout[animateProperty];\n      graphic[isUpdate ? 'updateProps' : 'initProps'](rect, {\n        shape: animateTarget\n      }, animationModel, dataIndex);\n    }\n\n    return rect;\n  },\n  polar: function (data, dataIndex, itemModel, layout, isRadial, animationModel, isUpdate) {\n    var sector = new graphic.Sector({\n      shape: zrUtil.extend({}, layout)\n    }); // Animation\n\n    if (animationModel) {\n      var sectorShape = sector.shape;\n      var animateProperty = isRadial ? 'r' : 'endAngle';\n      var animateTarget = {};\n      sectorShape[animateProperty] = isRadial ? 0 : layout.startAngle;\n      animateTarget[animateProperty] = layout[animateProperty];\n      graphic[isUpdate ? 'updateProps' : 'initProps'](sector, {\n        shape: animateTarget\n      }, animationModel, dataIndex);\n    }\n\n    return sector;\n  }\n};\n\nfunction removeRect(dataIndex, animationModel, el) {\n  // Not show text when animating\n  el.style.text = null;\n  graphic.updateProps(el, {\n    shape: {\n      width: 0\n    }\n  }, animationModel, dataIndex, function () {\n    el.parent && el.parent.remove(el);\n  });\n}\n\nfunction removeSector(dataIndex, animationModel, el) {\n  // Not show text when animating\n  el.style.text = null;\n  graphic.updateProps(el, {\n    shape: {\n      r: el.shape.r0\n    }\n  }, animationModel, dataIndex, function () {\n    el.parent && el.parent.remove(el);\n  });\n}\n\nvar getLayout = {\n  cartesian2d: function (data, dataIndex, itemModel) {\n    var layout = data.getItemLayout(dataIndex);\n    var fixedLineWidth = getLineWidth(itemModel, layout); // fix layout with lineWidth\n\n    var signX = layout.width > 0 ? 1 : -1;\n    var signY = layout.height > 0 ? 1 : -1;\n    return {\n      x: layout.x + signX * fixedLineWidth / 2,\n      y: layout.y + signY * fixedLineWidth / 2,\n      width: layout.width - signX * fixedLineWidth,\n      height: layout.height - signY * fixedLineWidth\n    };\n  },\n  polar: function (data, dataIndex, itemModel) {\n    var layout = data.getItemLayout(dataIndex);\n    return {\n      cx: layout.cx,\n      cy: layout.cy,\n      r0: layout.r0,\n      r: layout.r,\n      startAngle: layout.startAngle,\n      endAngle: layout.endAngle\n    };\n  }\n};\n\nfunction updateStyle(el, data, dataIndex, itemModel, layout, seriesModel, isHorizontal, isPolar) {\n  var color = data.getItemVisual(dataIndex, 'color');\n  var opacity = data.getItemVisual(dataIndex, 'opacity');\n  var itemStyleModel = itemModel.getModel('itemStyle.normal');\n  var hoverStyle = itemModel.getModel('itemStyle.emphasis').getBarItemStyle();\n\n  if (!isPolar) {\n    el.setShape('r', itemStyleModel.get('barBorderRadius') || 0);\n  }\n\n  el.useStyle(zrUtil.defaults({\n    fill: color,\n    opacity: opacity\n  }, itemStyleModel.getBarItemStyle()));\n  var cursorStyle = itemModel.getShallow('cursor');\n  cursorStyle && el.attr('cursor', cursorStyle);\n  var labelPositionOutside = isHorizontal ? layout.height > 0 ? 'bottom' : 'top' : layout.width > 0 ? 'left' : 'right';\n\n  if (!isPolar) {\n    setLabel(el.style, hoverStyle, itemModel, color, seriesModel, dataIndex, labelPositionOutside);\n  }\n\n  graphic.setHoverStyle(el, hoverStyle);\n} // In case width or height are too small.\n\n\nfunction getLineWidth(itemModel, rawLayout) {\n  var lineWidth = itemModel.get(BAR_BORDER_WIDTH_QUERY) || 0;\n  return Math.min(lineWidth, Math.abs(rawLayout.width), Math.abs(rawLayout.height));\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1679:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar SeriesModel = __webpack_require__(1566);\n\nvar createListFromArray = __webpack_require__(1565);\n\nvar _default = SeriesModel.extend({\n  type: 'series.__base_bar__',\n  getInitialData: function (option, ecModel) {\n    return createListFromArray(option.data, this, ecModel);\n  },\n  getMarkerPosition: function (value) {\n    var coordSys = this.coordinateSystem;\n\n    if (coordSys) {\n      // PENDING if clamp ?\n      var pt = coordSys.dataToPoint(value, true);\n      var data = this.getData();\n      var offset = data.getLayout('offset');\n      var size = data.getLayout('size');\n      var offsetIndex = coordSys.getBaseAxis().isHorizontal() ? 0 : 1;\n      pt[offsetIndex] += offset + size / 2;\n      return pt;\n    }\n\n    return [NaN, NaN];\n  },\n  defaultOption: {\n    zlevel: 0,\n    // 一级层叠\n    z: 2,\n    // 二级层叠\n    coordinateSystem: 'cartesian2d',\n    legendHoverLink: true,\n    // stack: null\n    // Cartesian coordinate system\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // 最小高度改为0\n    barMinHeight: 0,\n    // 最小角度为0，仅对极坐标系下的柱状图有效\n    barMinAngle: 0,\n    // cursor: null,\n    // barMaxWidth: null,\n    // 默认自适应\n    // barWidth: null,\n    // 柱间距离，默认为柱形宽度的30%，可设固定值\n    // barGap: '30%',\n    // 类目间柱形距离，默认为类目间距的20%，可设固定值\n    // barCategoryGap: '20%',\n    // label: {\n    //     normal: {\n    //         show: false\n    //     }\n    // },\n    itemStyle: {// normal: {\n      // color: '各异'\n      // },\n      // emphasis: {}\n    }\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1680:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar makeStyleMapper = __webpack_require__(1538);\n\nvar getBarItemStyle = makeStyleMapper([['fill', 'color'], ['stroke', 'borderColor'], ['lineWidth', 'borderWidth'], // Compatitable with 2\n['stroke', 'barBorderColor'], ['lineWidth', 'barBorderWidth'], ['opacity'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor']]);\nvar _default = {\n  getBarItemStyle: function (excludes) {\n    var style = getBarItemStyle(this, excludes);\n\n    if (this.getBorderLineDash) {\n      var lineDash = this.getBorderLineDash();\n      lineDash && (style.lineDash = lineDash);\n    }\n\n    return style;\n  }\n};\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1681:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar graphic = __webpack_require__(1483);\n\nfunction setLabel(normalStyle, hoverStyle, itemModel, color, seriesModel, dataIndex, labelPositionOutside) {\n  var labelModel = itemModel.getModel('label.normal');\n  var hoverLabelModel = itemModel.getModel('label.emphasis');\n  graphic.setLabelStyle(normalStyle, hoverStyle, labelModel, hoverLabelModel, {\n    labelFetcher: seriesModel,\n    labelDataIndex: dataIndex,\n    defaultText: seriesModel.getRawValue(dataIndex),\n    isRectText: true,\n    autoColor: color\n  });\n  fixPosition(normalStyle);\n  fixPosition(hoverStyle);\n}\n\nfunction fixPosition(style, labelPositionOutside) {\n  if (style.textPosition === 'outside') {\n    style.textPosition = labelPositionOutside;\n  }\n}\n\nexports.setLabel = setLabel;\n\n/***/ }),\n\n/***/ 1682:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar graphic = __webpack_require__(1483);\n\nvar SymbolClz = __webpack_require__(1602);\n\n/**\n * @module echarts/chart/helper/SymbolDraw\n */\n\n/**\n * @constructor\n * @alias module:echarts/chart/helper/SymbolDraw\n * @param {module:zrender/graphic/Group} [symbolCtor]\n */\nfunction SymbolDraw(symbolCtor) {\n  this.group = new graphic.Group();\n  this._symbolCtor = symbolCtor || SymbolClz;\n}\n\nvar symbolDrawProto = SymbolDraw.prototype;\n\nfunction symbolNeedsDraw(data, idx, isIgnore) {\n  var point = data.getItemLayout(idx); // Is an object\n  // if (point && point.hasOwnProperty('point')) {\n  //     point = point.point;\n  // }\n\n  return point && !isNaN(point[0]) && !isNaN(point[1]) && !(isIgnore && isIgnore(idx)) && data.getItemVisual(idx, 'symbol') !== 'none';\n}\n/**\n * Update symbols draw by new data\n * @param {module:echarts/data/List} data\n * @param {Array.<boolean>} [isIgnore]\n */\n\n\nsymbolDrawProto.updateData = function (data, isIgnore) {\n  var group = this.group;\n  var seriesModel = data.hostModel;\n  var oldData = this._data;\n  var SymbolCtor = this._symbolCtor;\n  var seriesScope = {\n    itemStyle: seriesModel.getModel('itemStyle.normal').getItemStyle(['color']),\n    hoverItemStyle: seriesModel.getModel('itemStyle.emphasis').getItemStyle(),\n    symbolRotate: seriesModel.get('symbolRotate'),\n    symbolOffset: seriesModel.get('symbolOffset'),\n    hoverAnimation: seriesModel.get('hoverAnimation'),\n    labelModel: seriesModel.getModel('label.normal'),\n    hoverLabelModel: seriesModel.getModel('label.emphasis'),\n    cursorStyle: seriesModel.get('cursor')\n  };\n  data.diff(oldData).add(function (newIdx) {\n    var point = data.getItemLayout(newIdx);\n\n    if (symbolNeedsDraw(data, newIdx, isIgnore)) {\n      var symbolEl = new SymbolCtor(data, newIdx, seriesScope);\n      symbolEl.attr('position', point);\n      data.setItemGraphicEl(newIdx, symbolEl);\n      group.add(symbolEl);\n    }\n  }).update(function (newIdx, oldIdx) {\n    var symbolEl = oldData.getItemGraphicEl(oldIdx);\n    var point = data.getItemLayout(newIdx);\n\n    if (!symbolNeedsDraw(data, newIdx, isIgnore)) {\n      group.remove(symbolEl);\n      return;\n    }\n\n    if (!symbolEl) {\n      symbolEl = new SymbolCtor(data, newIdx);\n      symbolEl.attr('position', point);\n    } else {\n      symbolEl.updateData(data, newIdx, seriesScope);\n      graphic.updateProps(symbolEl, {\n        position: point\n      }, seriesModel);\n    } // Add back\n\n\n    group.add(symbolEl);\n    data.setItemGraphicEl(newIdx, symbolEl);\n  }).remove(function (oldIdx) {\n    var el = oldData.getItemGraphicEl(oldIdx);\n    el && el.fadeOut(function () {\n      group.remove(el);\n    });\n  }).execute();\n  this._data = data;\n};\n\nsymbolDrawProto.updateLayout = function () {\n  var data = this._data;\n\n  if (data) {\n    // Not use animation\n    data.eachItemGraphicEl(function (el, idx) {\n      var point = data.getItemLayout(idx);\n      el.attr('position', point);\n    });\n  }\n};\n\nsymbolDrawProto.remove = function (enableAnimation) {\n  var group = this.group;\n  var data = this._data;\n\n  if (data) {\n    if (enableAnimation) {\n      data.eachItemGraphicEl(function (el) {\n        el.fadeOut(function () {\n          group.remove(el);\n        });\n      });\n    } else {\n      group.removeAll();\n    }\n  }\n};\n\nvar _default = SymbolDraw;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1683:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _model = __webpack_require__(1484);\n\nvar otherDimToDataDim = _model.otherDimToDataDim;\n\n/**\n * @module echarts/chart/helper/Symbol\n */\nfunction findLabelValueDim(data) {\n  var valueDim;\n  var labelDims = otherDimToDataDim(data, 'label');\n\n  if (labelDims.length) {\n    valueDim = labelDims[0];\n  } else {\n    // Get last value dim\n    var dimensions = data.dimensions.slice();\n    var dataType;\n\n    while (dimensions.length && (valueDim = dimensions.pop(), dataType = data.getDimensionInfo(valueDim).type, dataType === 'ordinal' || dataType === 'time')) {} // jshint ignore:line\n\n  }\n\n  return valueDim;\n}\n\nexports.findLabelValueDim = findLabelValueDim;\n\n/***/ }),\n\n/***/ 1684:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(1490);\n\nvar zrUtil = __webpack_require__(1479);\n\n__webpack_require__(1685);\n\n__webpack_require__(1686);\n\nvar visualSymbol = __webpack_require__(1732);\n\nvar layoutPoints = __webpack_require__(1714);\n\nvar dataSample = __webpack_require__(1726);\n\n__webpack_require__(1609);\n\n// In case developer forget to include grid component\necharts.registerVisual(zrUtil.curry(visualSymbol, 'line', 'circle', 'line'));\necharts.registerLayout(zrUtil.curry(layoutPoints, 'line')); // Down sample after filter\n\necharts.registerProcessor(echarts.PRIORITY.PROCESSOR.STATISTIC, zrUtil.curry(dataSample, 'line'));\n\n/***/ }),\n\n/***/ 1685:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(1494);\n\nvar __DEV__ = _config.__DEV__;\n\nvar createListFromArray = __webpack_require__(1565);\n\nvar SeriesModel = __webpack_require__(1566);\n\nvar _default = SeriesModel.extend({\n  type: 'series.line',\n  dependencies: ['grid', 'polar'],\n  getInitialData: function (option, ecModel) {\n    return createListFromArray(option.data, this, ecModel);\n  },\n  defaultOption: {\n    zlevel: 0,\n    // 一级层叠\n    z: 2,\n    // 二级层叠\n    coordinateSystem: 'cartesian2d',\n    legendHoverLink: true,\n    hoverAnimation: true,\n    // stack: null\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // polarIndex: 0,\n    // If clip the overflow value\n    clipOverflow: true,\n    // cursor: null,\n    label: {\n      normal: {\n        position: 'top'\n      }\n    },\n    // itemStyle: {\n    //     normal: {},\n    //     emphasis: {}\n    // },\n    lineStyle: {\n      normal: {\n        width: 2,\n        type: 'solid'\n      }\n    },\n    // areaStyle: {},\n    // false, 'start', 'end', 'middle'\n    step: false,\n    // Disabled if step is true\n    smooth: false,\n    smoothMonotone: null,\n    // 拐点图形类型\n    symbol: 'emptyCircle',\n    // 拐点图形大小\n    symbolSize: 4,\n    // 拐点图形旋转控制\n    symbolRotate: null,\n    // 是否显示 symbol, 只有在 tooltip hover 的时候显示\n    showSymbol: true,\n    // 标志图形默认只有主轴显示（随主轴标签间隔隐藏策略）\n    showAllSymbol: false,\n    // 是否连接断点\n    connectNulls: false,\n    // 数据过滤，'average', 'max', 'min', 'sum'\n    sampling: 'none',\n    animationEasing: 'linear',\n    // Disable progressive\n    progressive: 0,\n    hoverLayerThreshold: Infinity\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1686:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(1494);\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = __webpack_require__(1479);\n\nvar SymbolDraw = __webpack_require__(1682);\n\nvar SymbolClz = __webpack_require__(1602);\n\nvar lineAnimationDiff = __webpack_require__(1687);\n\nvar graphic = __webpack_require__(1483);\n\nvar modelUtil = __webpack_require__(1484);\n\nvar _poly = __webpack_require__(1688);\n\nvar Polyline = _poly.Polyline;\nvar Polygon = _poly.Polygon;\n\nvar ChartView = __webpack_require__(1618);\n\n// FIXME step not support polar\nfunction isPointsSame(points1, points2) {\n  if (points1.length !== points2.length) {\n    return;\n  }\n\n  for (var i = 0; i < points1.length; i++) {\n    var p1 = points1[i];\n    var p2 = points2[i];\n\n    if (p1[0] !== p2[0] || p1[1] !== p2[1]) {\n      return;\n    }\n  }\n\n  return true;\n}\n\nfunction getSmooth(smooth) {\n  return typeof smooth === 'number' ? smooth : smooth ? 0.3 : 0;\n}\n\nfunction getAxisExtentWithGap(axis) {\n  var extent = axis.getGlobalExtent();\n\n  if (axis.onBand) {\n    // Remove extra 1px to avoid line miter in clipped edge\n    var halfBandWidth = axis.getBandWidth() / 2 - 1;\n    var dir = extent[1] > extent[0] ? 1 : -1;\n    extent[0] += dir * halfBandWidth;\n    extent[1] -= dir * halfBandWidth;\n  }\n\n  return extent;\n}\n\nfunction sign(val) {\n  return val >= 0 ? 1 : -1;\n}\n/**\n * @param {module:echarts/coord/cartesian/Cartesian2D|module:echarts/coord/polar/Polar} coordSys\n * @param {module:echarts/data/List} data\n * @param {Array.<Array.<number>>} points\n * @private\n */\n\n\nfunction getStackedOnPoints(coordSys, data) {\n  var baseAxis = coordSys.getBaseAxis();\n  var valueAxis = coordSys.getOtherAxis(baseAxis);\n  var valueStart = 0;\n\n  if (!baseAxis.onZero) {\n    var extent = valueAxis.scale.getExtent();\n\n    if (extent[0] > 0) {\n      // Both positive\n      valueStart = extent[0];\n    } else if (extent[1] < 0) {\n      // Both negative\n      valueStart = extent[1];\n    } // If is one positive, and one negative, onZero shall be true\n\n  }\n\n  var valueDim = valueAxis.dim;\n  var baseDataOffset = valueDim === 'x' || valueDim === 'radius' ? 1 : 0;\n  return data.mapArray([valueDim], function (val, idx) {\n    var stackedOnSameSign;\n    var stackedOn = data.stackedOn; // Find first stacked value with same sign\n\n    while (stackedOn && sign(stackedOn.get(valueDim, idx)) === sign(val)) {\n      stackedOnSameSign = stackedOn;\n      break;\n    }\n\n    var stackedData = [];\n    stackedData[baseDataOffset] = data.get(baseAxis.dim, idx);\n    stackedData[1 - baseDataOffset] = stackedOnSameSign ? stackedOnSameSign.get(valueDim, idx, true) : valueStart;\n    return coordSys.dataToPoint(stackedData);\n  }, true);\n}\n\nfunction createGridClipShape(cartesian, hasAnimation, seriesModel) {\n  var xExtent = getAxisExtentWithGap(cartesian.getAxis('x'));\n  var yExtent = getAxisExtentWithGap(cartesian.getAxis('y'));\n  var isHorizontal = cartesian.getBaseAxis().isHorizontal();\n  var x = Math.min(xExtent[0], xExtent[1]);\n  var y = Math.min(yExtent[0], yExtent[1]);\n  var width = Math.max(xExtent[0], xExtent[1]) - x;\n  var height = Math.max(yExtent[0], yExtent[1]) - y;\n  var lineWidth = seriesModel.get('lineStyle.normal.width') || 2; // Expand clip shape to avoid clipping when line value exceeds axis\n\n  var expandSize = seriesModel.get('clipOverflow') ? lineWidth / 2 : Math.max(width, height);\n\n  if (isHorizontal) {\n    y -= expandSize;\n    height += expandSize * 2;\n  } else {\n    x -= expandSize;\n    width += expandSize * 2;\n  }\n\n  var clipPath = new graphic.Rect({\n    shape: {\n      x: x,\n      y: y,\n      width: width,\n      height: height\n    }\n  });\n\n  if (hasAnimation) {\n    clipPath.shape[isHorizontal ? 'width' : 'height'] = 0;\n    graphic.initProps(clipPath, {\n      shape: {\n        width: width,\n        height: height\n      }\n    }, seriesModel);\n  }\n\n  return clipPath;\n}\n\nfunction createPolarClipShape(polar, hasAnimation, seriesModel) {\n  var angleAxis = polar.getAngleAxis();\n  var radiusAxis = polar.getRadiusAxis();\n  var radiusExtent = radiusAxis.getExtent();\n  var angleExtent = angleAxis.getExtent();\n  var RADIAN = Math.PI / 180;\n  var clipPath = new graphic.Sector({\n    shape: {\n      cx: polar.cx,\n      cy: polar.cy,\n      r0: radiusExtent[0],\n      r: radiusExtent[1],\n      startAngle: -angleExtent[0] * RADIAN,\n      endAngle: -angleExtent[1] * RADIAN,\n      clockwise: angleAxis.inverse\n    }\n  });\n\n  if (hasAnimation) {\n    clipPath.shape.endAngle = -angleExtent[0] * RADIAN;\n    graphic.initProps(clipPath, {\n      shape: {\n        endAngle: -angleExtent[1] * RADIAN\n      }\n    }, seriesModel);\n  }\n\n  return clipPath;\n}\n\nfunction createClipShape(coordSys, hasAnimation, seriesModel) {\n  return coordSys.type === 'polar' ? createPolarClipShape(coordSys, hasAnimation, seriesModel) : createGridClipShape(coordSys, hasAnimation, seriesModel);\n}\n\nfunction turnPointsIntoStep(points, coordSys, stepTurnAt) {\n  var baseAxis = coordSys.getBaseAxis();\n  var baseIndex = baseAxis.dim === 'x' || baseAxis.dim === 'radius' ? 0 : 1;\n  var stepPoints = [];\n\n  for (var i = 0; i < points.length - 1; i++) {\n    var nextPt = points[i + 1];\n    var pt = points[i];\n    stepPoints.push(pt);\n    var stepPt = [];\n\n    switch (stepTurnAt) {\n      case 'end':\n        stepPt[baseIndex] = nextPt[baseIndex];\n        stepPt[1 - baseIndex] = pt[1 - baseIndex]; // default is start\n\n        stepPoints.push(stepPt);\n        break;\n\n      case 'middle':\n        // default is start\n        var middle = (pt[baseIndex] + nextPt[baseIndex]) / 2;\n        var stepPt2 = [];\n        stepPt[baseIndex] = stepPt2[baseIndex] = middle;\n        stepPt[1 - baseIndex] = pt[1 - baseIndex];\n        stepPt2[1 - baseIndex] = nextPt[1 - baseIndex];\n        stepPoints.push(stepPt);\n        stepPoints.push(stepPt2);\n        break;\n\n      default:\n        stepPt[baseIndex] = pt[baseIndex];\n        stepPt[1 - baseIndex] = nextPt[1 - baseIndex]; // default is start\n\n        stepPoints.push(stepPt);\n    }\n  } // Last points\n\n\n  points[i] && stepPoints.push(points[i]);\n  return stepPoints;\n}\n\nfunction getVisualGradient(data, coordSys) {\n  var visualMetaList = data.getVisual('visualMeta');\n\n  if (!visualMetaList || !visualMetaList.length || !data.count()) {\n    // When data.count() is 0, gradient range can not be calculated.\n    return;\n  }\n\n  var visualMeta;\n\n  for (var i = visualMetaList.length - 1; i >= 0; i--) {\n    // Can only be x or y\n    if (visualMetaList[i].dimension < 2) {\n      visualMeta = visualMetaList[i];\n      break;\n    }\n  }\n\n  if (!visualMeta || coordSys.type !== 'cartesian2d') {\n    return;\n  } // If the area to be rendered is bigger than area defined by LinearGradient,\n  // the canvas spec prescribes that the color of the first stop and the last\n  // stop should be used. But if two stops are added at offset 0, in effect\n  // browsers use the color of the second stop to render area outside\n  // LinearGradient. So we can only infinitesimally extend area defined in\n  // LinearGradient to render `outerColors`.\n\n\n  var dimension = visualMeta.dimension;\n  var dimName = data.dimensions[dimension];\n  var axis = coordSys.getAxis(dimName); // dataToCoor mapping may not be linear, but must be monotonic.\n\n  var colorStops = zrUtil.map(visualMeta.stops, function (stop) {\n    return {\n      coord: axis.toGlobalCoord(axis.dataToCoord(stop.value)),\n      color: stop.color\n    };\n  });\n  var stopLen = colorStops.length;\n  var outerColors = visualMeta.outerColors.slice();\n\n  if (stopLen && colorStops[0].coord > colorStops[stopLen - 1].coord) {\n    colorStops.reverse();\n    outerColors.reverse();\n  }\n\n  var tinyExtent = 10; // Arbitrary value: 10px\n\n  var minCoord = colorStops[0].coord - tinyExtent;\n  var maxCoord = colorStops[stopLen - 1].coord + tinyExtent;\n  var coordSpan = maxCoord - minCoord;\n\n  if (coordSpan < 1e-3) {\n    return 'transparent';\n  }\n\n  zrUtil.each(colorStops, function (stop) {\n    stop.offset = (stop.coord - minCoord) / coordSpan;\n  });\n  colorStops.push({\n    offset: stopLen ? colorStops[stopLen - 1].offset : 0.5,\n    color: outerColors[1] || 'transparent'\n  });\n  colorStops.unshift({\n    // notice colorStops.length have been changed.\n    offset: stopLen ? colorStops[0].offset : 0.5,\n    color: outerColors[0] || 'transparent'\n  }); // zrUtil.each(colorStops, function (colorStop) {\n  //     // Make sure each offset has rounded px to avoid not sharp edge\n  //     colorStop.offset = (Math.round(colorStop.offset * (end - start) + start) - start) / (end - start);\n  // });\n\n  var gradient = new graphic.LinearGradient(0, 0, 0, 0, colorStops, true);\n  gradient[dimName] = minCoord;\n  gradient[dimName + '2'] = maxCoord;\n  return gradient;\n}\n\nvar _default = ChartView.extend({\n  type: 'line',\n  init: function () {\n    var lineGroup = new graphic.Group();\n    var symbolDraw = new SymbolDraw();\n    this.group.add(symbolDraw.group);\n    this._symbolDraw = symbolDraw;\n    this._lineGroup = lineGroup;\n  },\n  render: function (seriesModel, ecModel, api) {\n    var coordSys = seriesModel.coordinateSystem;\n    var group = this.group;\n    var data = seriesModel.getData();\n    var lineStyleModel = seriesModel.getModel('lineStyle.normal');\n    var areaStyleModel = seriesModel.getModel('areaStyle.normal');\n    var points = data.mapArray(data.getItemLayout, true);\n    var isCoordSysPolar = coordSys.type === 'polar';\n    var prevCoordSys = this._coordSys;\n    var symbolDraw = this._symbolDraw;\n    var polyline = this._polyline;\n    var polygon = this._polygon;\n    var lineGroup = this._lineGroup;\n    var hasAnimation = seriesModel.get('animation');\n    var isAreaChart = !areaStyleModel.isEmpty();\n    var stackedOnPoints = getStackedOnPoints(coordSys, data);\n    var showSymbol = seriesModel.get('showSymbol');\n\n    var isSymbolIgnore = showSymbol && !isCoordSysPolar && !seriesModel.get('showAllSymbol') && this._getSymbolIgnoreFunc(data, coordSys); // Remove temporary symbols\n\n\n    var oldData = this._data;\n    oldData && oldData.eachItemGraphicEl(function (el, idx) {\n      if (el.__temp) {\n        group.remove(el);\n        oldData.setItemGraphicEl(idx, null);\n      }\n    }); // Remove previous created symbols if showSymbol changed to false\n\n    if (!showSymbol) {\n      symbolDraw.remove();\n    }\n\n    group.add(lineGroup); // FIXME step not support polar\n\n    var step = !isCoordSysPolar && seriesModel.get('step'); // Initialization animation or coordinate system changed\n\n    if (!(polyline && prevCoordSys.type === coordSys.type && step === this._step)) {\n      showSymbol && symbolDraw.updateData(data, isSymbolIgnore);\n\n      if (step) {\n        // TODO If stacked series is not step\n        points = turnPointsIntoStep(points, coordSys, step);\n        stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n      }\n\n      polyline = this._newPolyline(points, coordSys, hasAnimation);\n\n      if (isAreaChart) {\n        polygon = this._newPolygon(points, stackedOnPoints, coordSys, hasAnimation);\n      }\n\n      lineGroup.setClipPath(createClipShape(coordSys, true, seriesModel));\n    } else {\n      if (isAreaChart && !polygon) {\n        // If areaStyle is added\n        polygon = this._newPolygon(points, stackedOnPoints, coordSys, hasAnimation);\n      } else if (polygon && !isAreaChart) {\n        // If areaStyle is removed\n        lineGroup.remove(polygon);\n        polygon = this._polygon = null;\n      } // Update clipPath\n\n\n      lineGroup.setClipPath(createClipShape(coordSys, false, seriesModel)); // Always update, or it is wrong in the case turning on legend\n      // because points are not changed\n\n      showSymbol && symbolDraw.updateData(data, isSymbolIgnore); // Stop symbol animation and sync with line points\n      // FIXME performance?\n\n      data.eachItemGraphicEl(function (el) {\n        el.stopAnimation(true);\n      }); // In the case data zoom triggerred refreshing frequently\n      // Data may not change if line has a category axis. So it should animate nothing\n\n      if (!isPointsSame(this._stackedOnPoints, stackedOnPoints) || !isPointsSame(this._points, points)) {\n        if (hasAnimation) {\n          this._updateAnimation(data, stackedOnPoints, coordSys, api, step);\n        } else {\n          // Not do it in update with animation\n          if (step) {\n            // TODO If stacked series is not step\n            points = turnPointsIntoStep(points, coordSys, step);\n            stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n          }\n\n          polyline.setShape({\n            points: points\n          });\n          polygon && polygon.setShape({\n            points: points,\n            stackedOnPoints: stackedOnPoints\n          });\n        }\n      }\n    }\n\n    var visualColor = getVisualGradient(data, coordSys) || data.getVisual('color');\n    polyline.useStyle(zrUtil.defaults( // Use color in lineStyle first\n    lineStyleModel.getLineStyle(), {\n      fill: 'none',\n      stroke: visualColor,\n      lineJoin: 'bevel'\n    }));\n    var smooth = seriesModel.get('smooth');\n    smooth = getSmooth(seriesModel.get('smooth'));\n    polyline.setShape({\n      smooth: smooth,\n      smoothMonotone: seriesModel.get('smoothMonotone'),\n      connectNulls: seriesModel.get('connectNulls')\n    });\n\n    if (polygon) {\n      var stackedOn = data.stackedOn;\n      var stackedOnSmooth = 0;\n      polygon.useStyle(zrUtil.defaults(areaStyleModel.getAreaStyle(), {\n        fill: visualColor,\n        opacity: 0.7,\n        lineJoin: 'bevel'\n      }));\n\n      if (stackedOn) {\n        var stackedOnSeries = stackedOn.hostModel;\n        stackedOnSmooth = getSmooth(stackedOnSeries.get('smooth'));\n      }\n\n      polygon.setShape({\n        smooth: smooth,\n        stackedOnSmooth: stackedOnSmooth,\n        smoothMonotone: seriesModel.get('smoothMonotone'),\n        connectNulls: seriesModel.get('connectNulls')\n      });\n    }\n\n    this._data = data; // Save the coordinate system for transition animation when data changed\n\n    this._coordSys = coordSys;\n    this._stackedOnPoints = stackedOnPoints;\n    this._points = points;\n    this._step = step;\n  },\n  dispose: function () {},\n  highlight: function (seriesModel, ecModel, api, payload) {\n    var data = seriesModel.getData();\n    var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n    if (!(dataIndex instanceof Array) && dataIndex != null && dataIndex >= 0) {\n      var symbol = data.getItemGraphicEl(dataIndex);\n\n      if (!symbol) {\n        // Create a temporary symbol if it is not exists\n        var pt = data.getItemLayout(dataIndex);\n\n        if (!pt) {\n          // Null data\n          return;\n        }\n\n        symbol = new SymbolClz(data, dataIndex);\n        symbol.position = pt;\n        symbol.setZ(seriesModel.get('zlevel'), seriesModel.get('z'));\n        symbol.ignore = isNaN(pt[0]) || isNaN(pt[1]);\n        symbol.__temp = true;\n        data.setItemGraphicEl(dataIndex, symbol); // Stop scale animation\n\n        symbol.stopSymbolAnimation(true);\n        this.group.add(symbol);\n      }\n\n      symbol.highlight();\n    } else {\n      // Highlight whole series\n      ChartView.prototype.highlight.call(this, seriesModel, ecModel, api, payload);\n    }\n  },\n  downplay: function (seriesModel, ecModel, api, payload) {\n    var data = seriesModel.getData();\n    var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n    if (dataIndex != null && dataIndex >= 0) {\n      var symbol = data.getItemGraphicEl(dataIndex);\n\n      if (symbol) {\n        if (symbol.__temp) {\n          data.setItemGraphicEl(dataIndex, null);\n          this.group.remove(symbol);\n        } else {\n          symbol.downplay();\n        }\n      }\n    } else {\n      // FIXME\n      // can not downplay completely.\n      // Downplay whole series\n      ChartView.prototype.downplay.call(this, seriesModel, ecModel, api, payload);\n    }\n  },\n\n  /**\n   * @param {module:zrender/container/Group} group\n   * @param {Array.<Array.<number>>} points\n   * @private\n   */\n  _newPolyline: function (points) {\n    var polyline = this._polyline; // Remove previous created polyline\n\n    if (polyline) {\n      this._lineGroup.remove(polyline);\n    }\n\n    polyline = new Polyline({\n      shape: {\n        points: points\n      },\n      silent: true,\n      z2: 10\n    });\n\n    this._lineGroup.add(polyline);\n\n    this._polyline = polyline;\n    return polyline;\n  },\n\n  /**\n   * @param {module:zrender/container/Group} group\n   * @param {Array.<Array.<number>>} stackedOnPoints\n   * @param {Array.<Array.<number>>} points\n   * @private\n   */\n  _newPolygon: function (points, stackedOnPoints) {\n    var polygon = this._polygon; // Remove previous created polygon\n\n    if (polygon) {\n      this._lineGroup.remove(polygon);\n    }\n\n    polygon = new Polygon({\n      shape: {\n        points: points,\n        stackedOnPoints: stackedOnPoints\n      },\n      silent: true\n    });\n\n    this._lineGroup.add(polygon);\n\n    this._polygon = polygon;\n    return polygon;\n  },\n\n  /**\n   * @private\n   */\n  _getSymbolIgnoreFunc: function (data, coordSys) {\n    var categoryAxis = coordSys.getAxesByScale('ordinal')[0]; // `getLabelInterval` is provided by echarts/component/axis\n\n    if (categoryAxis && categoryAxis.isLabelIgnored) {\n      return zrUtil.bind(categoryAxis.isLabelIgnored, categoryAxis);\n    }\n  },\n\n  /**\n   * @private\n   */\n  // FIXME Two value axis\n  _updateAnimation: function (data, stackedOnPoints, coordSys, api, step) {\n    var polyline = this._polyline;\n    var polygon = this._polygon;\n    var seriesModel = data.hostModel;\n    var diff = lineAnimationDiff(this._data, data, this._stackedOnPoints, stackedOnPoints, this._coordSys, coordSys);\n    var current = diff.current;\n    var stackedOnCurrent = diff.stackedOnCurrent;\n    var next = diff.next;\n    var stackedOnNext = diff.stackedOnNext;\n\n    if (step) {\n      // TODO If stacked series is not step\n      current = turnPointsIntoStep(diff.current, coordSys, step);\n      stackedOnCurrent = turnPointsIntoStep(diff.stackedOnCurrent, coordSys, step);\n      next = turnPointsIntoStep(diff.next, coordSys, step);\n      stackedOnNext = turnPointsIntoStep(diff.stackedOnNext, coordSys, step);\n    } // `diff.current` is subset of `current` (which should be ensured by\n    // turnPointsIntoStep), so points in `__points` can be updated when\n    // points in `current` are update during animation.\n\n\n    polyline.shape.__points = diff.current;\n    polyline.shape.points = current;\n    graphic.updateProps(polyline, {\n      shape: {\n        points: next\n      }\n    }, seriesModel);\n\n    if (polygon) {\n      polygon.setShape({\n        points: current,\n        stackedOnPoints: stackedOnCurrent\n      });\n      graphic.updateProps(polygon, {\n        shape: {\n          points: next,\n          stackedOnPoints: stackedOnNext\n        }\n      }, seriesModel);\n    }\n\n    var updatedDataInfo = [];\n    var diffStatus = diff.status;\n\n    for (var i = 0; i < diffStatus.length; i++) {\n      var cmd = diffStatus[i].cmd;\n\n      if (cmd === '=') {\n        var el = data.getItemGraphicEl(diffStatus[i].idx1);\n\n        if (el) {\n          updatedDataInfo.push({\n            el: el,\n            ptIdx: i // Index of points\n\n          });\n        }\n      }\n    }\n\n    if (polyline.animators && polyline.animators.length) {\n      polyline.animators[0].during(function () {\n        for (var i = 0; i < updatedDataInfo.length; i++) {\n          var el = updatedDataInfo[i].el;\n          el.attr('position', polyline.shape.__points[updatedDataInfo[i].ptIdx]);\n        }\n      });\n    }\n  },\n  remove: function (ecModel) {\n    var group = this.group;\n    var oldData = this._data;\n\n    this._lineGroup.removeAll();\n\n    this._symbolDraw.remove(true); // Remove temporary created elements when highlighting\n\n\n    oldData && oldData.eachItemGraphicEl(function (el, idx) {\n      if (el.__temp) {\n        group.remove(el);\n        oldData.setItemGraphicEl(idx, null);\n      }\n    });\n    this._polyline = this._polygon = this._coordSys = this._points = this._stackedOnPoints = this._data = null;\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1687:\n/***/ (function(module, exports) {\n\n// var arrayDiff = require('zrender/src/core/arrayDiff');\n// 'zrender/src/core/arrayDiff' has been used before, but it did\n// not do well in performance when roam with fixed dataZoom window.\nfunction sign(val) {\n  return val >= 0 ? 1 : -1;\n}\n\nfunction getStackedOnPoint(coordSys, data, idx) {\n  var baseAxis = coordSys.getBaseAxis();\n  var valueAxis = coordSys.getOtherAxis(baseAxis);\n  var valueStart = baseAxis.onZero ? 0 : valueAxis.scale.getExtent()[0];\n  var valueDim = valueAxis.dim;\n  var baseDataOffset = valueDim === 'x' || valueDim === 'radius' ? 1 : 0;\n  var stackedOnSameSign;\n  var stackedOn = data.stackedOn;\n  var val = data.get(valueDim, idx); // Find first stacked value with same sign\n\n  while (stackedOn && sign(stackedOn.get(valueDim, idx)) === sign(val)) {\n    stackedOnSameSign = stackedOn;\n    break;\n  }\n\n  var stackedData = [];\n  stackedData[baseDataOffset] = data.get(baseAxis.dim, idx);\n  stackedData[1 - baseDataOffset] = stackedOnSameSign ? stackedOnSameSign.get(valueDim, idx, true) : valueStart;\n  return coordSys.dataToPoint(stackedData);\n} // function convertToIntId(newIdList, oldIdList) {\n//     // Generate int id instead of string id.\n//     // Compare string maybe slow in score function of arrDiff\n//     // Assume id in idList are all unique\n//     var idIndicesMap = {};\n//     var idx = 0;\n//     for (var i = 0; i < newIdList.length; i++) {\n//         idIndicesMap[newIdList[i]] = idx;\n//         newIdList[i] = idx++;\n//     }\n//     for (var i = 0; i < oldIdList.length; i++) {\n//         var oldId = oldIdList[i];\n//         // Same with newIdList\n//         if (idIndicesMap[oldId]) {\n//             oldIdList[i] = idIndicesMap[oldId];\n//         }\n//         else {\n//             oldIdList[i] = idx++;\n//         }\n//     }\n// }\n\n\nfunction diffData(oldData, newData) {\n  var diffResult = [];\n  newData.diff(oldData).add(function (idx) {\n    diffResult.push({\n      cmd: '+',\n      idx: idx\n    });\n  }).update(function (newIdx, oldIdx) {\n    diffResult.push({\n      cmd: '=',\n      idx: oldIdx,\n      idx1: newIdx\n    });\n  }).remove(function (idx) {\n    diffResult.push({\n      cmd: '-',\n      idx: idx\n    });\n  }).execute();\n  return diffResult;\n}\n\nfunction _default(oldData, newData, oldStackedOnPoints, newStackedOnPoints, oldCoordSys, newCoordSys) {\n  var diff = diffData(oldData, newData); // var newIdList = newData.mapArray(newData.getId);\n  // var oldIdList = oldData.mapArray(oldData.getId);\n  // convertToIntId(newIdList, oldIdList);\n  // // FIXME One data ?\n  // diff = arrayDiff(oldIdList, newIdList);\n\n  var currPoints = [];\n  var nextPoints = []; // Points for stacking base line\n\n  var currStackedPoints = [];\n  var nextStackedPoints = [];\n  var status = [];\n  var sortedIndices = [];\n  var rawIndices = [];\n  var dims = newCoordSys.dimensions;\n\n  for (var i = 0; i < diff.length; i++) {\n    var diffItem = diff[i];\n    var pointAdded = true; // FIXME, animation is not so perfect when dataZoom window moves fast\n    // Which is in case remvoing or add more than one data in the tail or head\n\n    switch (diffItem.cmd) {\n      case '=':\n        var currentPt = oldData.getItemLayout(diffItem.idx);\n        var nextPt = newData.getItemLayout(diffItem.idx1); // If previous data is NaN, use next point directly\n\n        if (isNaN(currentPt[0]) || isNaN(currentPt[1])) {\n          currentPt = nextPt.slice();\n        }\n\n        currPoints.push(currentPt);\n        nextPoints.push(nextPt);\n        currStackedPoints.push(oldStackedOnPoints[diffItem.idx]);\n        nextStackedPoints.push(newStackedOnPoints[diffItem.idx1]);\n        rawIndices.push(newData.getRawIndex(diffItem.idx1));\n        break;\n\n      case '+':\n        var idx = diffItem.idx;\n        currPoints.push(oldCoordSys.dataToPoint([newData.get(dims[0], idx, true), newData.get(dims[1], idx, true)]));\n        nextPoints.push(newData.getItemLayout(idx).slice());\n        currStackedPoints.push(getStackedOnPoint(oldCoordSys, newData, idx));\n        nextStackedPoints.push(newStackedOnPoints[idx]);\n        rawIndices.push(newData.getRawIndex(idx));\n        break;\n\n      case '-':\n        var idx = diffItem.idx;\n        var rawIndex = oldData.getRawIndex(idx); // Data is replaced. In the case of dynamic data queue\n        // FIXME FIXME FIXME\n\n        if (rawIndex !== idx) {\n          currPoints.push(oldData.getItemLayout(idx));\n          nextPoints.push(newCoordSys.dataToPoint([oldData.get(dims[0], idx, true), oldData.get(dims[1], idx, true)]));\n          currStackedPoints.push(oldStackedOnPoints[idx]);\n          nextStackedPoints.push(getStackedOnPoint(newCoordSys, oldData, idx));\n          rawIndices.push(rawIndex);\n        } else {\n          pointAdded = false;\n        }\n\n    } // Original indices\n\n\n    if (pointAdded) {\n      status.push(diffItem);\n      sortedIndices.push(sortedIndices.length);\n    }\n  } // Diff result may be crossed if all items are changed\n  // Sort by data index\n\n\n  sortedIndices.sort(function (a, b) {\n    return rawIndices[a] - rawIndices[b];\n  });\n  var sortedCurrPoints = [];\n  var sortedNextPoints = [];\n  var sortedCurrStackedPoints = [];\n  var sortedNextStackedPoints = [];\n  var sortedStatus = [];\n\n  for (var i = 0; i < sortedIndices.length; i++) {\n    var idx = sortedIndices[i];\n    sortedCurrPoints[i] = currPoints[idx];\n    sortedNextPoints[i] = nextPoints[idx];\n    sortedCurrStackedPoints[i] = currStackedPoints[idx];\n    sortedNextStackedPoints[i] = nextStackedPoints[idx];\n    sortedStatus[i] = status[idx];\n  }\n\n  return {\n    current: sortedCurrPoints,\n    next: sortedNextPoints,\n    stackedOnCurrent: sortedCurrStackedPoints,\n    stackedOnNext: sortedNextStackedPoints,\n    status: sortedStatus\n  };\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1688:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(1493);\n\nvar vec2 = __webpack_require__(1485);\n\nvar fixClipWithShadow = __webpack_require__(1645);\n\n// Poly path support NaN point\nvar vec2Min = vec2.min;\nvar vec2Max = vec2.max;\nvar scaleAndAdd = vec2.scaleAndAdd;\nvar v2Copy = vec2.copy; // Temporary variable\n\nvar v = [];\nvar cp0 = [];\nvar cp1 = [];\n\nfunction isPointNull(p) {\n  return isNaN(p[0]) || isNaN(p[1]);\n}\n\nfunction drawSegment(ctx, points, start, segLen, allLen, dir, smoothMin, smoothMax, smooth, smoothMonotone, connectNulls) {\n  var prevIdx = 0;\n  var idx = start;\n\n  for (var k = 0; k < segLen; k++) {\n    var p = points[idx];\n\n    if (idx >= allLen || idx < 0) {\n      break;\n    }\n\n    if (isPointNull(p)) {\n      if (connectNulls) {\n        idx += dir;\n        continue;\n      }\n\n      break;\n    }\n\n    if (idx === start) {\n      ctx[dir > 0 ? 'moveTo' : 'lineTo'](p[0], p[1]);\n      v2Copy(cp0, p);\n    } else {\n      if (smooth > 0) {\n        var nextIdx = idx + dir;\n        var nextP = points[nextIdx];\n\n        if (connectNulls) {\n          // Find next point not null\n          while (nextP && isPointNull(points[nextIdx])) {\n            nextIdx += dir;\n            nextP = points[nextIdx];\n          }\n        }\n\n        var ratioNextSeg = 0.5;\n        var prevP = points[prevIdx];\n        var nextP = points[nextIdx]; // Last point\n\n        if (!nextP || isPointNull(nextP)) {\n          v2Copy(cp1, p);\n        } else {\n          // If next data is null in not connect case\n          if (isPointNull(nextP) && !connectNulls) {\n            nextP = p;\n          }\n\n          vec2.sub(v, nextP, prevP);\n          var lenPrevSeg;\n          var lenNextSeg;\n\n          if (smoothMonotone === 'x' || smoothMonotone === 'y') {\n            var dim = smoothMonotone === 'x' ? 0 : 1;\n            lenPrevSeg = Math.abs(p[dim] - prevP[dim]);\n            lenNextSeg = Math.abs(p[dim] - nextP[dim]);\n          } else {\n            lenPrevSeg = vec2.dist(p, prevP);\n            lenNextSeg = vec2.dist(p, nextP);\n          } // Use ratio of seg length\n\n\n          ratioNextSeg = lenNextSeg / (lenNextSeg + lenPrevSeg);\n          scaleAndAdd(cp1, p, v, -smooth * (1 - ratioNextSeg));\n        } // Smooth constraint\n\n\n        vec2Min(cp0, cp0, smoothMax);\n        vec2Max(cp0, cp0, smoothMin);\n        vec2Min(cp1, cp1, smoothMax);\n        vec2Max(cp1, cp1, smoothMin);\n        ctx.bezierCurveTo(cp0[0], cp0[1], cp1[0], cp1[1], p[0], p[1]); // cp0 of next segment\n\n        scaleAndAdd(cp0, p, v, smooth * ratioNextSeg);\n      } else {\n        ctx.lineTo(p[0], p[1]);\n      }\n    }\n\n    prevIdx = idx;\n    idx += dir;\n  }\n\n  return k;\n}\n\nfunction getBoundingBox(points, smoothConstraint) {\n  var ptMin = [Infinity, Infinity];\n  var ptMax = [-Infinity, -Infinity];\n\n  if (smoothConstraint) {\n    for (var i = 0; i < points.length; i++) {\n      var pt = points[i];\n\n      if (pt[0] < ptMin[0]) {\n        ptMin[0] = pt[0];\n      }\n\n      if (pt[1] < ptMin[1]) {\n        ptMin[1] = pt[1];\n      }\n\n      if (pt[0] > ptMax[0]) {\n        ptMax[0] = pt[0];\n      }\n\n      if (pt[1] > ptMax[1]) {\n        ptMax[1] = pt[1];\n      }\n    }\n  }\n\n  return {\n    min: smoothConstraint ? ptMin : ptMax,\n    max: smoothConstraint ? ptMax : ptMin\n  };\n}\n\nvar Polyline = Path.extend({\n  type: 'ec-polyline',\n  shape: {\n    points: [],\n    smooth: 0,\n    smoothConstraint: true,\n    smoothMonotone: null,\n    connectNulls: false\n  },\n  style: {\n    fill: null,\n    stroke: '#000'\n  },\n  brush: fixClipWithShadow(Path.prototype.brush),\n  buildPath: function (ctx, shape) {\n    var points = shape.points;\n    var i = 0;\n    var len = points.length;\n    var result = getBoundingBox(points, shape.smoothConstraint);\n\n    if (shape.connectNulls) {\n      // Must remove first and last null values avoid draw error in polygon\n      for (; len > 0; len--) {\n        if (!isPointNull(points[len - 1])) {\n          break;\n        }\n      }\n\n      for (; i < len; i++) {\n        if (!isPointNull(points[i])) {\n          break;\n        }\n      }\n    }\n\n    while (i < len) {\n      i += drawSegment(ctx, points, i, len, len, 1, result.min, result.max, shape.smooth, shape.smoothMonotone, shape.connectNulls) + 1;\n    }\n  }\n});\nvar Polygon = Path.extend({\n  type: 'ec-polygon',\n  shape: {\n    points: [],\n    // Offset between stacked base points and points\n    stackedOnPoints: [],\n    smooth: 0,\n    stackedOnSmooth: 0,\n    smoothConstraint: true,\n    smoothMonotone: null,\n    connectNulls: false\n  },\n  brush: fixClipWithShadow(Path.prototype.brush),\n  buildPath: function (ctx, shape) {\n    var points = shape.points;\n    var stackedOnPoints = shape.stackedOnPoints;\n    var i = 0;\n    var len = points.length;\n    var smoothMonotone = shape.smoothMonotone;\n    var bbox = getBoundingBox(points, shape.smoothConstraint);\n    var stackedOnBBox = getBoundingBox(stackedOnPoints, shape.smoothConstraint);\n\n    if (shape.connectNulls) {\n      // Must remove first and last null values avoid draw error in polygon\n      for (; len > 0; len--) {\n        if (!isPointNull(points[len - 1])) {\n          break;\n        }\n      }\n\n      for (; i < len; i++) {\n        if (!isPointNull(points[i])) {\n          break;\n        }\n      }\n    }\n\n    while (i < len) {\n      var k = drawSegment(ctx, points, i, len, len, 1, bbox.min, bbox.max, shape.smooth, smoothMonotone, shape.connectNulls);\n      drawSegment(ctx, stackedOnPoints, i + k - 1, k, len, -1, stackedOnBBox.min, stackedOnBBox.max, shape.stackedOnSmooth, smoothMonotone, shape.connectNulls);\n      i += k + 1;\n      ctx.closePath();\n    }\n  }\n});\nexports.Polyline = Polyline;\nexports.Polygon = Polygon;\n\n/***/ }),\n\n/***/ 1689:\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(1612);\n\n__webpack_require__(1696);\n\n/***/ }),\n\n/***/ 1690:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(1490);\n\nvar zrUtil = __webpack_require__(1479);\n\nvar axisPointerModelHelper = __webpack_require__(1537);\n\nvar axisTrigger = __webpack_require__(1695);\n\n__webpack_require__(1691);\n\n__webpack_require__(1692);\n\n__webpack_require__(1694);\n\n// CartesianAxisPointer is not supposed to be required here. But consider\n// echarts.simple.js and online build tooltip, which only require gridSimple,\n// CartesianAxisPointer should be able to required somewhere.\necharts.registerPreprocessor(function (option) {\n  // Always has a global axisPointerModel for default setting.\n  if (option) {\n    (!option.axisPointer || option.axisPointer.length === 0) && (option.axisPointer = {});\n    var link = option.axisPointer.link; // Normalize to array to avoid object mergin. But if link\n    // is not set, remain null/undefined, otherwise it will\n    // override existent link setting.\n\n    if (link && !zrUtil.isArray(link)) {\n      option.axisPointer.link = [link];\n    }\n  }\n}); // This process should proformed after coordinate systems created\n// and series data processed. So put it on statistic processing stage.\n\necharts.registerProcessor(echarts.PRIORITY.PROCESSOR.STATISTIC, function (ecModel, api) {\n  // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n  // allAxesInfo should be updated when setOption performed.\n  ecModel.getComponent('axisPointer').coordSysAxesInfo = axisPointerModelHelper.collect(ecModel, api);\n}); // Broadcast to all views.\n\necharts.registerAction({\n  type: 'updateAxisPointer',\n  event: 'updateAxisPointer',\n  update: ':updateAxisPointer'\n}, axisTrigger);\n\n/***/ }),\n\n/***/ 1691:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(1490);\n\nvar AxisPointerModel = echarts.extendComponentModel({\n  type: 'axisPointer',\n  coordSysAxesInfo: null,\n  defaultOption: {\n    // 'auto' means that show when triggered by tooltip or handle.\n    show: 'auto',\n    // 'click' | 'mousemove' | 'none'\n    triggerOn: null,\n    // set default in AxisPonterView.js\n    zlevel: 0,\n    z: 50,\n    type: 'line',\n    // axispointer triggered by tootip determine snap automatically,\n    // see `modelHelper`.\n    snap: false,\n    triggerTooltip: true,\n    value: null,\n    status: null,\n    // Init value depends on whether handle is used.\n    // [group0, group1, ...]\n    // Each group can be: {\n    //      mapper: function () {},\n    //      singleTooltip: 'multiple',  // 'multiple' or 'single'\n    //      xAxisId: ...,\n    //      yAxisName: ...,\n    //      angleAxisIndex: ...\n    // }\n    // mapper: can be ignored.\n    //      input: {axisInfo, value}\n    //      output: {axisInfo, value}\n    link: [],\n    // Do not set 'auto' here, otherwise global animation: false\n    // will not effect at this axispointer.\n    animation: null,\n    animationDurationUpdate: 200,\n    lineStyle: {\n      color: '#aaa',\n      width: 1,\n      type: 'solid'\n    },\n    shadowStyle: {\n      color: 'rgba(150,150,150,0.3)'\n    },\n    label: {\n      show: true,\n      formatter: null,\n      // string | Function\n      precision: 'auto',\n      // Or a number like 0, 1, 2 ...\n      margin: 3,\n      color: '#fff',\n      padding: [5, 7, 5, 7],\n      backgroundColor: 'auto',\n      // default: axis line color\n      borderColor: null,\n      borderWidth: 0,\n      shadowBlur: 3,\n      shadowColor: '#aaa' // Considering applicability, common style should\n      // better not have shadowOffset.\n      // shadowOffsetX: 0,\n      // shadowOffsetY: 2\n\n    },\n    handle: {\n      show: false,\n      icon: 'M10.7,11.9v-1.3H9.3v1.3c-4.9,0.3-8.8,4.4-8.8,9.4c0,5,3.9,9.1,8.8,9.4h1.3c4.9-0.3,8.8-4.4,8.8-9.4C19.5,16.3,15.6,12.2,10.7,11.9z M13.3,24.4H6.7v-1.2h6.6z M13.3,22H6.7v-1.2h6.6z M13.3,19.6H6.7v-1.2h6.6z',\n      // jshint ignore:line\n      size: 45,\n      // handle margin is from symbol center to axis, which is stable when circular move.\n      margin: 50,\n      // color: '#1b8bbd'\n      // color: '#2f4554'\n      color: '#333',\n      shadowBlur: 3,\n      shadowColor: '#aaa',\n      shadowOffsetX: 0,\n      shadowOffsetY: 2,\n      // For mobile performance\n      throttle: 40\n    }\n  }\n});\nvar _default = AxisPointerModel;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1692:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(1490);\n\nvar globalListener = __webpack_require__(1604);\n\nvar AxisPointerView = echarts.extendComponentView({\n  type: 'axisPointer',\n  render: function (globalAxisPointerModel, ecModel, api) {\n    var globalTooltipModel = ecModel.getComponent('tooltip');\n    var triggerOn = globalAxisPointerModel.get('triggerOn') || globalTooltipModel && globalTooltipModel.get('triggerOn') || 'mousemove|click'; // Register global listener in AxisPointerView to enable\n    // AxisPointerView to be independent to Tooltip.\n\n    globalListener.register('axisPointer', api, function (currTrigger, e, dispatchAction) {\n      // If 'none', it is not controlled by mouse totally.\n      if (triggerOn !== 'none' && (currTrigger === 'leave' || triggerOn.indexOf(currTrigger) >= 0)) {\n        dispatchAction({\n          type: 'updateAxisPointer',\n          currTrigger: currTrigger,\n          x: e && e.offsetX,\n          y: e && e.offsetY\n        });\n      }\n    });\n  },\n\n  /**\n   * @override\n   */\n  remove: function (ecModel, api) {\n    globalListener.unregister(api.getZr(), 'axisPointer');\n    AxisPointerView.superApply(this._model, 'remove', arguments);\n  },\n\n  /**\n   * @override\n   */\n  dispose: function (ecModel, api) {\n    globalListener.unregister('axisPointer', api);\n    AxisPointerView.superApply(this._model, 'dispose', arguments);\n  }\n});\nvar _default = AxisPointerView;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1693:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1479);\n\nvar clazzUtil = __webpack_require__(1505);\n\nvar graphic = __webpack_require__(1483);\n\nvar axisPointerModelHelper = __webpack_require__(1537);\n\nvar eventTool = __webpack_require__(1531);\n\nvar throttleUtil = __webpack_require__(1570);\n\nvar modelUtil = __webpack_require__(1484);\n\nvar get = modelUtil.makeGetter();\nvar clone = zrUtil.clone;\nvar bind = zrUtil.bind;\n/**\n * Base axis pointer class in 2D.\n * Implemenents {module:echarts/component/axis/IAxisPointer}.\n */\n\nfunction BaseAxisPointer() {}\n\nBaseAxisPointer.prototype = {\n  /**\n   * @private\n   */\n  _group: null,\n\n  /**\n   * @private\n   */\n  _lastGraphicKey: null,\n\n  /**\n   * @private\n   */\n  _handle: null,\n\n  /**\n   * @private\n   */\n  _dragging: false,\n\n  /**\n   * @private\n   */\n  _lastValue: null,\n\n  /**\n   * @private\n   */\n  _lastStatus: null,\n\n  /**\n   * @private\n   */\n  _payloadInfo: null,\n\n  /**\n   * In px, arbitrary value. Do not set too small,\n   * no animation is ok for most cases.\n   * @protected\n   */\n  animationThreshold: 15,\n\n  /**\n   * @implement\n   */\n  render: function (axisModel, axisPointerModel, api, forceRender) {\n    var value = axisPointerModel.get('value');\n    var status = axisPointerModel.get('status'); // Bind them to `this`, not in closure, otherwise they will not\n    // be replaced when user calling setOption in not merge mode.\n\n    this._axisModel = axisModel;\n    this._axisPointerModel = axisPointerModel;\n    this._api = api; // Optimize: `render` will be called repeatly during mouse move.\n    // So it is power consuming if performing `render` each time,\n    // especially on mobile device.\n\n    if (!forceRender && this._lastValue === value && this._lastStatus === status) {\n      return;\n    }\n\n    this._lastValue = value;\n    this._lastStatus = status;\n    var group = this._group;\n    var handle = this._handle;\n\n    if (!status || status === 'hide') {\n      // Do not clear here, for animation better.\n      group && group.hide();\n      handle && handle.hide();\n      return;\n    }\n\n    group && group.show();\n    handle && handle.show(); // Otherwise status is 'show'\n\n    var elOption = {};\n    this.makeElOption(elOption, value, axisModel, axisPointerModel, api); // Enable change axis pointer type.\n\n    var graphicKey = elOption.graphicKey;\n\n    if (graphicKey !== this._lastGraphicKey) {\n      this.clear(api);\n    }\n\n    this._lastGraphicKey = graphicKey;\n    var moveAnimation = this._moveAnimation = this.determineAnimation(axisModel, axisPointerModel);\n\n    if (!group) {\n      group = this._group = new graphic.Group();\n      this.createPointerEl(group, elOption, axisModel, axisPointerModel);\n      this.createLabelEl(group, elOption, axisModel, axisPointerModel);\n      api.getZr().add(group);\n    } else {\n      var doUpdateProps = zrUtil.curry(updateProps, axisPointerModel, moveAnimation);\n      this.updatePointerEl(group, elOption, doUpdateProps, axisPointerModel);\n      this.updateLabelEl(group, elOption, doUpdateProps, axisPointerModel);\n    }\n\n    updateMandatoryProps(group, axisPointerModel, true);\n\n    this._renderHandle(value);\n  },\n\n  /**\n   * @implement\n   */\n  remove: function (api) {\n    this.clear(api);\n  },\n\n  /**\n   * @implement\n   */\n  dispose: function (api) {\n    this.clear(api);\n  },\n\n  /**\n   * @protected\n   */\n  determineAnimation: function (axisModel, axisPointerModel) {\n    var animation = axisPointerModel.get('animation');\n    var axis = axisModel.axis;\n    var isCategoryAxis = axis.type === 'category';\n    var useSnap = axisPointerModel.get('snap'); // Value axis without snap always do not snap.\n\n    if (!useSnap && !isCategoryAxis) {\n      return false;\n    }\n\n    if (animation === 'auto' || animation == null) {\n      var animationThreshold = this.animationThreshold;\n\n      if (isCategoryAxis && axis.getBandWidth() > animationThreshold) {\n        return true;\n      } // It is important to auto animation when snap used. Consider if there is\n      // a dataZoom, animation will be disabled when too many points exist, while\n      // it will be enabled for better visual effect when little points exist.\n\n\n      if (useSnap) {\n        var seriesDataCount = axisPointerModelHelper.getAxisInfo(axisModel).seriesDataCount;\n        var axisExtent = axis.getExtent(); // Approximate band width\n\n        return Math.abs(axisExtent[0] - axisExtent[1]) / seriesDataCount > animationThreshold;\n      }\n\n      return false;\n    }\n\n    return animation === true;\n  },\n\n  /**\n   * add {pointer, label, graphicKey} to elOption\n   * @protected\n   */\n  makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {// Shoule be implemenented by sub-class.\n  },\n\n  /**\n   * @protected\n   */\n  createPointerEl: function (group, elOption, axisModel, axisPointerModel) {\n    var pointerOption = elOption.pointer;\n\n    if (pointerOption) {\n      var pointerEl = get(group).pointerEl = new graphic[pointerOption.type](clone(elOption.pointer));\n      group.add(pointerEl);\n    }\n  },\n\n  /**\n   * @protected\n   */\n  createLabelEl: function (group, elOption, axisModel, axisPointerModel) {\n    if (elOption.label) {\n      var labelEl = get(group).labelEl = new graphic.Rect(clone(elOption.label));\n      group.add(labelEl);\n      updateLabelShowHide(labelEl, axisPointerModel);\n    }\n  },\n\n  /**\n   * @protected\n   */\n  updatePointerEl: function (group, elOption, updateProps) {\n    var pointerEl = get(group).pointerEl;\n\n    if (pointerEl) {\n      pointerEl.setStyle(elOption.pointer.style);\n      updateProps(pointerEl, {\n        shape: elOption.pointer.shape\n      });\n    }\n  },\n\n  /**\n   * @protected\n   */\n  updateLabelEl: function (group, elOption, updateProps, axisPointerModel) {\n    var labelEl = get(group).labelEl;\n\n    if (labelEl) {\n      labelEl.setStyle(elOption.label.style);\n      updateProps(labelEl, {\n        // Consider text length change in vertical axis, animation should\n        // be used on shape, otherwise the effect will be weird.\n        shape: elOption.label.shape,\n        position: elOption.label.position\n      });\n      updateLabelShowHide(labelEl, axisPointerModel);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _renderHandle: function (value) {\n    if (this._dragging || !this.updateHandleTransform) {\n      return;\n    }\n\n    var axisPointerModel = this._axisPointerModel;\n\n    var zr = this._api.getZr();\n\n    var handle = this._handle;\n    var handleModel = axisPointerModel.getModel('handle');\n    var status = axisPointerModel.get('status');\n\n    if (!handleModel.get('show') || !status || status === 'hide') {\n      handle && zr.remove(handle);\n      this._handle = null;\n      return;\n    }\n\n    var isInit;\n\n    if (!this._handle) {\n      isInit = true;\n      handle = this._handle = graphic.createIcon(handleModel.get('icon'), {\n        cursor: 'move',\n        draggable: true,\n        onmousemove: function (e) {\n          // Fot mobile devicem, prevent screen slider on the button.\n          eventTool.stop(e.event);\n        },\n        onmousedown: bind(this._onHandleDragMove, this, 0, 0),\n        drift: bind(this._onHandleDragMove, this),\n        ondragend: bind(this._onHandleDragEnd, this)\n      });\n      zr.add(handle);\n    }\n\n    updateMandatoryProps(handle, axisPointerModel, false); // update style\n\n    var includeStyles = ['color', 'borderColor', 'borderWidth', 'opacity', 'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY'];\n    handle.setStyle(handleModel.getItemStyle(null, includeStyles)); // update position\n\n    var handleSize = handleModel.get('size');\n\n    if (!zrUtil.isArray(handleSize)) {\n      handleSize = [handleSize, handleSize];\n    }\n\n    handle.attr('scale', [handleSize[0] / 2, handleSize[1] / 2]);\n    throttleUtil.createOrUpdate(this, '_doDispatchAxisPointer', handleModel.get('throttle') || 0, 'fixRate');\n\n    this._moveHandleToValue(value, isInit);\n  },\n\n  /**\n   * @private\n   */\n  _moveHandleToValue: function (value, isInit) {\n    updateProps(this._axisPointerModel, !isInit && this._moveAnimation, this._handle, getHandleTransProps(this.getHandleTransform(value, this._axisModel, this._axisPointerModel)));\n  },\n\n  /**\n   * @private\n   */\n  _onHandleDragMove: function (dx, dy) {\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    this._dragging = true; // Persistent for throttle.\n\n    var trans = this.updateHandleTransform(getHandleTransProps(handle), [dx, dy], this._axisModel, this._axisPointerModel);\n    this._payloadInfo = trans;\n    handle.stopAnimation();\n    handle.attr(getHandleTransProps(trans));\n    get(handle).lastProp = null;\n\n    this._doDispatchAxisPointer();\n  },\n\n  /**\n   * Throttled method.\n   * @private\n   */\n  _doDispatchAxisPointer: function () {\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    var payloadInfo = this._payloadInfo;\n    var axisModel = this._axisModel;\n\n    this._api.dispatchAction({\n      type: 'updateAxisPointer',\n      x: payloadInfo.cursorPoint[0],\n      y: payloadInfo.cursorPoint[1],\n      tooltipOption: payloadInfo.tooltipOption,\n      axesInfo: [{\n        axisDim: axisModel.axis.dim,\n        axisIndex: axisModel.componentIndex\n      }]\n    });\n  },\n\n  /**\n   * @private\n   */\n  _onHandleDragEnd: function (moveAnimation) {\n    this._dragging = false;\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    var value = this._axisPointerModel.get('value'); // Consider snap or categroy axis, handle may be not consistent with\n    // axisPointer. So move handle to align the exact value position when\n    // drag ended.\n\n\n    this._moveHandleToValue(value); // For the effect: tooltip will be shown when finger holding on handle\n    // button, and will be hidden after finger left handle button.\n\n\n    this._api.dispatchAction({\n      type: 'hideTip'\n    });\n  },\n\n  /**\n   * Should be implemenented by sub-class if support `handle`.\n   * @protected\n   * @param {number} value\n   * @param {module:echarts/model/Model} axisModel\n   * @param {module:echarts/model/Model} axisPointerModel\n   * @return {Object} {position: [x, y], rotation: 0}\n   */\n  getHandleTransform: null,\n\n  /**\n   * * Should be implemenented by sub-class if support `handle`.\n   * @protected\n   * @param {Object} transform {position, rotation}\n   * @param {Array.<number>} delta [dx, dy]\n   * @param {module:echarts/model/Model} axisModel\n   * @param {module:echarts/model/Model} axisPointerModel\n   * @return {Object} {position: [x, y], rotation: 0, cursorPoint: [x, y]}\n   */\n  updateHandleTransform: null,\n\n  /**\n   * @private\n   */\n  clear: function (api) {\n    this._lastValue = null;\n    this._lastStatus = null;\n    var zr = api.getZr();\n    var group = this._group;\n    var handle = this._handle;\n\n    if (zr && group) {\n      this._lastGraphicKey = null;\n      group && zr.remove(group);\n      handle && zr.remove(handle);\n      this._group = null;\n      this._handle = null;\n      this._payloadInfo = null;\n    }\n  },\n\n  /**\n   * @protected\n   */\n  doClear: function () {// Implemented by sub-class if necessary.\n  },\n\n  /**\n   * @protected\n   * @param {Array.<number>} xy\n   * @param {Array.<number>} wh\n   * @param {number} [xDimIndex=0] or 1\n   */\n  buildLabel: function (xy, wh, xDimIndex) {\n    xDimIndex = xDimIndex || 0;\n    return {\n      x: xy[xDimIndex],\n      y: xy[1 - xDimIndex],\n      width: wh[xDimIndex],\n      height: wh[1 - xDimIndex]\n    };\n  }\n};\nBaseAxisPointer.prototype.constructor = BaseAxisPointer;\n\nfunction updateProps(animationModel, moveAnimation, el, props) {\n  // Animation optimize.\n  if (!propsEqual(get(el).lastProp, props)) {\n    get(el).lastProp = props;\n    moveAnimation ? graphic.updateProps(el, props, animationModel) : (el.stopAnimation(), el.attr(props));\n  }\n}\n\nfunction propsEqual(lastProps, newProps) {\n  if (zrUtil.isObject(lastProps) && zrUtil.isObject(newProps)) {\n    var equals = true;\n    zrUtil.each(newProps, function (item, key) {\n      equals = equals && propsEqual(lastProps[key], item);\n    });\n    return !!equals;\n  } else {\n    return lastProps === newProps;\n  }\n}\n\nfunction updateLabelShowHide(labelEl, axisPointerModel) {\n  labelEl[axisPointerModel.get('label.show') ? 'show' : 'hide']();\n}\n\nfunction getHandleTransProps(trans) {\n  return {\n    position: trans.position.slice(),\n    rotation: trans.rotation || 0\n  };\n}\n\nfunction updateMandatoryProps(group, axisPointerModel, silent) {\n  var z = axisPointerModel.get('z');\n  var zlevel = axisPointerModel.get('zlevel');\n  group && group.traverse(function (el) {\n    if (el.type !== 'group') {\n      z != null && (el.z = z);\n      zlevel != null && (el.zlevel = zlevel);\n      el.silent = silent;\n    }\n  });\n}\n\nclazzUtil.enableClassExtend(BaseAxisPointer);\nvar _default = BaseAxisPointer;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1694:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar graphic = __webpack_require__(1483);\n\nvar BaseAxisPointer = __webpack_require__(1693);\n\nvar viewHelper = __webpack_require__(1605);\n\nvar cartesianAxisHelper = __webpack_require__(1608);\n\nvar AxisView = __webpack_require__(1607);\n\nvar CartesianAxisPointer = BaseAxisPointer.extend({\n  /**\n   * @override\n   */\n  makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\n    var axis = axisModel.axis;\n    var grid = axis.grid;\n    var axisPointerType = axisPointerModel.get('type');\n    var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n    var pixelValue = axis.toGlobalCoord(axis.dataToCoord(value, true));\n\n    if (axisPointerType && axisPointerType !== 'none') {\n      var elStyle = viewHelper.buildElStyle(axisPointerModel);\n      var pointerOption = pointerShapeBuilder[axisPointerType](axis, pixelValue, otherExtent, elStyle);\n      pointerOption.style = elStyle;\n      elOption.graphicKey = pointerOption.type;\n      elOption.pointer = pointerOption;\n    }\n\n    var layoutInfo = cartesianAxisHelper.layout(grid.model, axisModel);\n    viewHelper.buildCartesianSingleLabelElOption(value, elOption, layoutInfo, axisModel, axisPointerModel, api);\n  },\n\n  /**\n   * @override\n   */\n  getHandleTransform: function (value, axisModel, axisPointerModel) {\n    var layoutInfo = cartesianAxisHelper.layout(axisModel.axis.grid.model, axisModel, {\n      labelInside: false\n    });\n    layoutInfo.labelMargin = axisPointerModel.get('handle.margin');\n    return {\n      position: viewHelper.getTransformedPosition(axisModel.axis, value, layoutInfo),\n      rotation: layoutInfo.rotation + (layoutInfo.labelDirection < 0 ? Math.PI : 0)\n    };\n  },\n\n  /**\n   * @override\n   */\n  updateHandleTransform: function (transform, delta, axisModel, axisPointerModel) {\n    var axis = axisModel.axis;\n    var grid = axis.grid;\n    var axisExtent = axis.getGlobalExtent(true);\n    var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n    var dimIndex = axis.dim === 'x' ? 0 : 1;\n    var currPosition = transform.position;\n    currPosition[dimIndex] += delta[dimIndex];\n    currPosition[dimIndex] = Math.min(axisExtent[1], currPosition[dimIndex]);\n    currPosition[dimIndex] = Math.max(axisExtent[0], currPosition[dimIndex]);\n    var cursorOtherValue = (otherExtent[1] + otherExtent[0]) / 2;\n    var cursorPoint = [cursorOtherValue, cursorOtherValue];\n    cursorPoint[dimIndex] = currPosition[dimIndex]; // Make tooltip do not overlap axisPointer and in the middle of the grid.\n\n    var tooltipOptions = [{\n      verticalAlign: 'middle'\n    }, {\n      align: 'center'\n    }];\n    return {\n      position: currPosition,\n      rotation: transform.rotation,\n      cursorPoint: cursorPoint,\n      tooltipOption: tooltipOptions[dimIndex]\n    };\n  }\n});\n\nfunction getCartesian(grid, axis) {\n  var opt = {};\n  opt[axis.dim + 'AxisIndex'] = axis.index;\n  return grid.getCartesian(opt);\n}\n\nvar pointerShapeBuilder = {\n  line: function (axis, pixelValue, otherExtent, elStyle) {\n    var targetShape = viewHelper.makeLineShape([pixelValue, otherExtent[0]], [pixelValue, otherExtent[1]], getAxisDimIndex(axis));\n    graphic.subPixelOptimizeLine({\n      shape: targetShape,\n      style: elStyle\n    });\n    return {\n      type: 'Line',\n      shape: targetShape\n    };\n  },\n  shadow: function (axis, pixelValue, otherExtent, elStyle) {\n    var bandWidth = axis.getBandWidth();\n    var span = otherExtent[1] - otherExtent[0];\n    return {\n      type: 'Rect',\n      shape: viewHelper.makeRectShape([pixelValue - bandWidth / 2, otherExtent[0]], [bandWidth, span], getAxisDimIndex(axis))\n    };\n  }\n};\n\nfunction getAxisDimIndex(axis) {\n  return axis.dim === 'x' ? 0 : 1;\n}\n\nAxisView.registerAxisPointerClass('CartesianAxisPointer', CartesianAxisPointer);\nvar _default = CartesianAxisPointer;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1695:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1479);\n\nvar modelUtil = __webpack_require__(1484);\n\nvar modelHelper = __webpack_require__(1537);\n\nvar findPointFromSeries = __webpack_require__(1603);\n\nvar each = zrUtil.each;\nvar curry = zrUtil.curry;\nvar get = modelUtil.makeGetter();\n/**\n * Basic logic: check all axis, if they do not demand show/highlight,\n * then hide/downplay them.\n *\n * @param {Object} coordSysAxesInfo\n * @param {Object} payload\n * @param {string} [payload.currTrigger] 'click' | 'mousemove' | 'leave'\n * @param {Array.<number>} [payload.x] x and y, which are mandatory, specify a point to\n *              trigger axisPointer and tooltip.\n * @param {Array.<number>} [payload.y] x and y, which are mandatory, specify a point to\n *              trigger axisPointer and tooltip.\n * @param {Object} [payload.seriesIndex] finder, optional, restrict target axes.\n * @param {Object} [payload.dataIndex] finder, restrict target axes.\n * @param {Object} [payload.axesInfo] finder, restrict target axes.\n *        [{\n *          axisDim: 'x'|'y'|'angle'|...,\n *          axisIndex: ...,\n *          value: ...\n *        }, ...]\n * @param {Function} [payload.dispatchAction]\n * @param {Object} [payload.tooltipOption]\n * @param {Object|Array.<number>|Function} [payload.position] Tooltip position,\n *        which can be specified in dispatchAction\n * @param {module:echarts/model/Global} ecModel\n * @param {module:echarts/ExtensionAPI} api\n * @return {Object} content of event obj for echarts.connect.\n */\n\nfunction _default(payload, ecModel, api) {\n  var currTrigger = payload.currTrigger;\n  var point = [payload.x, payload.y];\n  var finder = payload;\n  var dispatchAction = payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n  var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo; // Pending\n  // See #6121. But we are not able to reproduce it yet.\n\n  if (!coordSysAxesInfo) {\n    return;\n  }\n\n  if (illegalPoint(point)) {\n    // Used in the default behavior of `connection`: use the sample seriesIndex\n    // and dataIndex. And also used in the tooltipView trigger.\n    point = findPointFromSeries({\n      seriesIndex: finder.seriesIndex,\n      // Do not use dataIndexInside from other ec instance.\n      // FIXME: auto detect it?\n      dataIndex: finder.dataIndex\n    }, ecModel).point;\n  }\n\n  var isIllegalPoint = illegalPoint(point); // Axis and value can be specified when calling dispatchAction({type: 'updateAxisPointer'}).\n  // Notice: In this case, it is difficult to get the `point` (which is necessary to show\n  // tooltip, so if point is not given, we just use the point found by sample seriesIndex\n  // and dataIndex.\n\n  var inputAxesInfo = finder.axesInfo;\n  var axesInfo = coordSysAxesInfo.axesInfo;\n  var shouldHide = currTrigger === 'leave' || illegalPoint(point);\n  var outputFinder = {};\n  var showValueMap = {};\n  var dataByCoordSys = {\n    list: [],\n    map: {}\n  };\n  var updaters = {\n    showPointer: curry(showPointer, showValueMap),\n    showTooltip: curry(showTooltip, dataByCoordSys)\n  }; // Process for triggered axes.\n\n  each(coordSysAxesInfo.coordSysMap, function (coordSys, coordSysKey) {\n    // If a point given, it must be contained by the coordinate system.\n    var coordSysContainsPoint = isIllegalPoint || coordSys.containPoint(point);\n    each(coordSysAxesInfo.coordSysAxesInfo[coordSysKey], function (axisInfo, key) {\n      var axis = axisInfo.axis;\n      var inputAxisInfo = findInputAxisInfo(inputAxesInfo, axisInfo); // If no inputAxesInfo, no axis is restricted.\n\n      if (!shouldHide && coordSysContainsPoint && (!inputAxesInfo || inputAxisInfo)) {\n        var val = inputAxisInfo && inputAxisInfo.value;\n\n        if (val == null && !isIllegalPoint) {\n          val = axis.pointToData(point);\n        }\n\n        val != null && processOnAxis(axisInfo, val, updaters, false, outputFinder);\n      }\n    });\n  }); // Process for linked axes.\n\n  var linkTriggers = {};\n  each(axesInfo, function (tarAxisInfo, tarKey) {\n    var linkGroup = tarAxisInfo.linkGroup; // If axis has been triggered in the previous stage, it should not be triggered by link.\n\n    if (linkGroup && !showValueMap[tarKey]) {\n      each(linkGroup.axesInfo, function (srcAxisInfo, srcKey) {\n        var srcValItem = showValueMap[srcKey]; // If srcValItem exist, source axis is triggered, so link to target axis.\n\n        if (srcAxisInfo !== tarAxisInfo && srcValItem) {\n          var val = srcValItem.value;\n          linkGroup.mapper && (val = tarAxisInfo.axis.scale.parse(linkGroup.mapper(val, makeMapperParam(srcAxisInfo), makeMapperParam(tarAxisInfo))));\n          linkTriggers[tarAxisInfo.key] = val;\n        }\n      });\n    }\n  });\n  each(linkTriggers, function (val, tarKey) {\n    processOnAxis(axesInfo[tarKey], val, updaters, true, outputFinder);\n  });\n  updateModelActually(showValueMap, axesInfo, outputFinder);\n  dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction);\n  dispatchHighDownActually(axesInfo, dispatchAction, api);\n  return outputFinder;\n}\n\nfunction processOnAxis(axisInfo, newValue, updaters, dontSnap, outputFinder) {\n  var axis = axisInfo.axis;\n\n  if (axis.scale.isBlank() || !axis.containData(newValue)) {\n    return;\n  }\n\n  if (!axisInfo.involveSeries) {\n    updaters.showPointer(axisInfo, newValue);\n    return;\n  } // Heavy calculation. So put it after axis.containData checking.\n\n\n  var payloadInfo = buildPayloadsBySeries(newValue, axisInfo);\n  var payloadBatch = payloadInfo.payloadBatch;\n  var snapToValue = payloadInfo.snapToValue; // Fill content of event obj for echarts.connect.\n  // By defualt use the first involved series data as a sample to connect.\n\n  if (payloadBatch[0] && outputFinder.seriesIndex == null) {\n    zrUtil.extend(outputFinder, payloadBatch[0]);\n  } // If no linkSource input, this process is for collecting link\n  // target, where snap should not be accepted.\n\n\n  if (!dontSnap && axisInfo.snap) {\n    if (axis.containData(snapToValue) && snapToValue != null) {\n      newValue = snapToValue;\n    }\n  }\n\n  updaters.showPointer(axisInfo, newValue, payloadBatch, outputFinder); // Tooltip should always be snapToValue, otherwise there will be\n  // incorrect \"axis value ~ series value\" mapping displayed in tooltip.\n\n  updaters.showTooltip(axisInfo, payloadInfo, snapToValue);\n}\n\nfunction buildPayloadsBySeries(value, axisInfo) {\n  var axis = axisInfo.axis;\n  var dim = axis.dim;\n  var snapToValue = value;\n  var payloadBatch = [];\n  var minDist = Number.MAX_VALUE;\n  var minDiff = -1;\n  each(axisInfo.seriesModels, function (series, idx) {\n    var dataDim = series.coordDimToDataDim(dim);\n    var seriesNestestValue;\n    var dataIndices;\n\n    if (series.getAxisTooltipData) {\n      var result = series.getAxisTooltipData(dataDim, value, axis);\n      dataIndices = result.dataIndices;\n      seriesNestestValue = result.nestestValue;\n    } else {\n      dataIndices = series.getData().indicesOfNearest(dataDim[0], value, // Add a threshold to avoid find the wrong dataIndex\n      // when data length is not same.\n      false, axis.type === 'category' ? 0.5 : null);\n\n      if (!dataIndices.length) {\n        return;\n      }\n\n      seriesNestestValue = series.getData().get(dataDim[0], dataIndices[0]);\n    }\n\n    if (seriesNestestValue == null || !isFinite(seriesNestestValue)) {\n      return;\n    }\n\n    var diff = value - seriesNestestValue;\n    var dist = Math.abs(diff); // Consider category case\n\n    if (dist <= minDist) {\n      if (dist < minDist || diff >= 0 && minDiff < 0) {\n        minDist = dist;\n        minDiff = diff;\n        snapToValue = seriesNestestValue;\n        payloadBatch.length = 0;\n      }\n\n      each(dataIndices, function (dataIndex) {\n        payloadBatch.push({\n          seriesIndex: series.seriesIndex,\n          dataIndexInside: dataIndex,\n          dataIndex: series.getData().getRawIndex(dataIndex)\n        });\n      });\n    }\n  });\n  return {\n    payloadBatch: payloadBatch,\n    snapToValue: snapToValue\n  };\n}\n\nfunction showPointer(showValueMap, axisInfo, value, payloadBatch) {\n  showValueMap[axisInfo.key] = {\n    value: value,\n    payloadBatch: payloadBatch\n  };\n}\n\nfunction showTooltip(dataByCoordSys, axisInfo, payloadInfo, value) {\n  var payloadBatch = payloadInfo.payloadBatch;\n  var axis = axisInfo.axis;\n  var axisModel = axis.model;\n  var axisPointerModel = axisInfo.axisPointerModel; // If no data, do not create anything in dataByCoordSys,\n  // whose length will be used to judge whether dispatch action.\n\n  if (!axisInfo.triggerTooltip || !payloadBatch.length) {\n    return;\n  }\n\n  var coordSysModel = axisInfo.coordSys.model;\n  var coordSysKey = modelHelper.makeKey(coordSysModel);\n  var coordSysItem = dataByCoordSys.map[coordSysKey];\n\n  if (!coordSysItem) {\n    coordSysItem = dataByCoordSys.map[coordSysKey] = {\n      coordSysId: coordSysModel.id,\n      coordSysIndex: coordSysModel.componentIndex,\n      coordSysType: coordSysModel.type,\n      coordSysMainType: coordSysModel.mainType,\n      dataByAxis: []\n    };\n    dataByCoordSys.list.push(coordSysItem);\n  }\n\n  coordSysItem.dataByAxis.push({\n    axisDim: axis.dim,\n    axisIndex: axisModel.componentIndex,\n    axisType: axisModel.type,\n    axisId: axisModel.id,\n    value: value,\n    // Caustion: viewHelper.getValueLabel is actually on \"view stage\", which\n    // depends that all models have been updated. So it should not be performed\n    // here. Considering axisPointerModel used here is volatile, which is hard\n    // to be retrieve in TooltipView, we prepare parameters here.\n    valueLabelOpt: {\n      precision: axisPointerModel.get('label.precision'),\n      formatter: axisPointerModel.get('label.formatter')\n    },\n    seriesDataIndices: payloadBatch.slice()\n  });\n}\n\nfunction updateModelActually(showValueMap, axesInfo, outputFinder) {\n  var outputAxesInfo = outputFinder.axesInfo = []; // Basic logic: If no 'show' required, 'hide' this axisPointer.\n\n  each(axesInfo, function (axisInfo, key) {\n    var option = axisInfo.axisPointerModel.option;\n    var valItem = showValueMap[key];\n\n    if (valItem) {\n      !axisInfo.useHandle && (option.status = 'show');\n      option.value = valItem.value; // For label formatter param and highlight.\n\n      option.seriesDataIndices = (valItem.payloadBatch || []).slice();\n    } // When always show (e.g., handle used), remain\n    // original value and status.\n    else {\n        // If hide, value still need to be set, consider\n        // click legend to toggle axis blank.\n        !axisInfo.useHandle && (option.status = 'hide');\n      } // If status is 'hide', should be no info in payload.\n\n\n    option.status === 'show' && outputAxesInfo.push({\n      axisDim: axisInfo.axis.dim,\n      axisIndex: axisInfo.axis.model.componentIndex,\n      value: option.value\n    });\n  });\n}\n\nfunction dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction) {\n  // Basic logic: If no showTip required, hideTip will be dispatched.\n  if (illegalPoint(point) || !dataByCoordSys.list.length) {\n    dispatchAction({\n      type: 'hideTip'\n    });\n    return;\n  } // In most case only one axis (or event one series is used). It is\n  // convinient to fetch payload.seriesIndex and payload.dataIndex\n  // dirtectly. So put the first seriesIndex and dataIndex of the first\n  // axis on the payload.\n\n\n  var sampleItem = ((dataByCoordSys.list[0].dataByAxis[0] || {}).seriesDataIndices || [])[0] || {};\n  dispatchAction({\n    type: 'showTip',\n    escapeConnect: true,\n    x: point[0],\n    y: point[1],\n    tooltipOption: payload.tooltipOption,\n    position: payload.position,\n    dataIndexInside: sampleItem.dataIndexInside,\n    dataIndex: sampleItem.dataIndex,\n    seriesIndex: sampleItem.seriesIndex,\n    dataByCoordSys: dataByCoordSys.list\n  });\n}\n\nfunction dispatchHighDownActually(axesInfo, dispatchAction, api) {\n  // FIXME\n  // highlight status modification shoule be a stage of main process?\n  // (Consider confilct (e.g., legend and axisPointer) and setOption)\n  var zr = api.getZr();\n  var highDownKey = 'axisPointerLastHighlights';\n  var lastHighlights = get(zr)[highDownKey] || {};\n  var newHighlights = get(zr)[highDownKey] = {}; // Update highlight/downplay status according to axisPointer model.\n  // Build hash map and remove duplicate incidentally.\n\n  each(axesInfo, function (axisInfo, key) {\n    var option = axisInfo.axisPointerModel.option;\n    option.status === 'show' && each(option.seriesDataIndices, function (batchItem) {\n      var key = batchItem.seriesIndex + ' | ' + batchItem.dataIndex;\n      newHighlights[key] = batchItem;\n    });\n  }); // Diff.\n\n  var toHighlight = [];\n  var toDownplay = [];\n  zrUtil.each(lastHighlights, function (batchItem, key) {\n    !newHighlights[key] && toDownplay.push(batchItem);\n  });\n  zrUtil.each(newHighlights, function (batchItem, key) {\n    !lastHighlights[key] && toHighlight.push(batchItem);\n  });\n  toDownplay.length && api.dispatchAction({\n    type: 'downplay',\n    escapeConnect: true,\n    batch: toDownplay\n  });\n  toHighlight.length && api.dispatchAction({\n    type: 'highlight',\n    escapeConnect: true,\n    batch: toHighlight\n  });\n}\n\nfunction findInputAxisInfo(inputAxesInfo, axisInfo) {\n  for (var i = 0; i < (inputAxesInfo || []).length; i++) {\n    var inputAxisInfo = inputAxesInfo[i];\n\n    if (axisInfo.axis.dim === inputAxisInfo.axisDim && axisInfo.axis.model.componentIndex === inputAxisInfo.axisIndex) {\n      return inputAxisInfo;\n    }\n  }\n}\n\nfunction makeMapperParam(axisInfo) {\n  var axisModel = axisInfo.axis.model;\n  var item = {};\n  var dim = item.axisDim = axisInfo.axis.dim;\n  item.axisIndex = item[dim + 'AxisIndex'] = axisModel.componentIndex;\n  item.axisName = item[dim + 'AxisName'] = axisModel.name;\n  item.axisId = item[dim + 'AxisId'] = axisModel.id;\n  return item;\n}\n\nfunction illegalPoint(point) {\n  return !point || point[0] == null || isNaN(point[0]) || point[1] == null || isNaN(point[1]);\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1696:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1479);\n\nvar graphic = __webpack_require__(1483);\n\nvar AxisBuilder = __webpack_require__(1606);\n\nvar AxisView = __webpack_require__(1607);\n\nvar cartesianAxisHelper = __webpack_require__(1608);\n\nvar ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick;\nvar getInterval = AxisBuilder.getInterval;\nvar axisBuilderAttrs = ['axisLine', 'axisTickLabel', 'axisName'];\nvar selfBuilderAttrs = ['splitArea', 'splitLine']; // function getAlignWithLabel(model, axisModel) {\n//     var alignWithLabel = model.get('alignWithLabel');\n//     if (alignWithLabel === 'auto') {\n//         alignWithLabel = axisModel.get('axisTick.alignWithLabel');\n//     }\n//     return alignWithLabel;\n// }\n\nvar CartesianAxisView = AxisView.extend({\n  type: 'cartesianAxis',\n  axisPointerClass: 'CartesianAxisPointer',\n\n  /**\n   * @override\n   */\n  render: function (axisModel, ecModel, api, payload) {\n    this.group.removeAll();\n    var oldAxisGroup = this._axisGroup;\n    this._axisGroup = new graphic.Group();\n    this.group.add(this._axisGroup);\n\n    if (!axisModel.get('show')) {\n      return;\n    }\n\n    var gridModel = axisModel.getCoordSysModel();\n    var layout = cartesianAxisHelper.layout(gridModel, axisModel);\n    var axisBuilder = new AxisBuilder(axisModel, layout);\n    zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n\n    this._axisGroup.add(axisBuilder.getGroup());\n\n    zrUtil.each(selfBuilderAttrs, function (name) {\n      if (axisModel.get(name + '.show')) {\n        this['_' + name](axisModel, gridModel, layout.labelInterval);\n      }\n    }, this);\n    graphic.groupTransition(oldAxisGroup, this._axisGroup, axisModel);\n    CartesianAxisView.superCall(this, 'render', axisModel, ecModel, api, payload);\n  },\n\n  /**\n   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n   * @param {module:echarts/coord/cartesian/GridModel} gridModel\n   * @param {number|Function} labelInterval\n   * @private\n   */\n  _splitLine: function (axisModel, gridModel, labelInterval) {\n    var axis = axisModel.axis;\n\n    if (axis.scale.isBlank()) {\n      return;\n    }\n\n    var splitLineModel = axisModel.getModel('splitLine');\n    var lineStyleModel = splitLineModel.getModel('lineStyle');\n    var lineColors = lineStyleModel.get('color');\n    var lineInterval = getInterval(splitLineModel, labelInterval);\n    lineColors = zrUtil.isArray(lineColors) ? lineColors : [lineColors];\n    var gridRect = gridModel.coordinateSystem.getRect();\n    var isHorizontal = axis.isHorizontal();\n    var lineCount = 0;\n    var ticksCoords = axis.getTicksCoords();\n    var ticks = axis.scale.getTicks();\n    var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n    var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n    var p1 = [];\n    var p2 = []; // Simple optimization\n    // Batching the lines if color are the same\n\n    var lineStyle = lineStyleModel.getLineStyle();\n\n    for (var i = 0; i < ticksCoords.length; i++) {\n      if (ifIgnoreOnTick(axis, i, lineInterval, ticksCoords.length, showMinLabel, showMaxLabel)) {\n        continue;\n      }\n\n      var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\n\n      if (isHorizontal) {\n        p1[0] = tickCoord;\n        p1[1] = gridRect.y;\n        p2[0] = tickCoord;\n        p2[1] = gridRect.y + gridRect.height;\n      } else {\n        p1[0] = gridRect.x;\n        p1[1] = tickCoord;\n        p2[0] = gridRect.x + gridRect.width;\n        p2[1] = tickCoord;\n      }\n\n      var colorIndex = lineCount++ % lineColors.length;\n\n      this._axisGroup.add(new graphic.Line(graphic.subPixelOptimizeLine({\n        anid: 'line_' + ticks[i],\n        shape: {\n          x1: p1[0],\n          y1: p1[1],\n          x2: p2[0],\n          y2: p2[1]\n        },\n        style: zrUtil.defaults({\n          stroke: lineColors[colorIndex]\n        }, lineStyle),\n        silent: true\n      })));\n    }\n  },\n\n  /**\n   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n   * @param {module:echarts/coord/cartesian/GridModel} gridModel\n   * @param {number|Function} labelInterval\n   * @private\n   */\n  _splitArea: function (axisModel, gridModel, labelInterval) {\n    var axis = axisModel.axis;\n\n    if (axis.scale.isBlank()) {\n      return;\n    }\n\n    var splitAreaModel = axisModel.getModel('splitArea');\n    var areaStyleModel = splitAreaModel.getModel('areaStyle');\n    var areaColors = areaStyleModel.get('color');\n    var gridRect = gridModel.coordinateSystem.getRect();\n    var ticksCoords = axis.getTicksCoords();\n    var ticks = axis.scale.getTicks();\n    var prevX = axis.toGlobalCoord(ticksCoords[0]);\n    var prevY = axis.toGlobalCoord(ticksCoords[0]);\n    var count = 0;\n    var areaInterval = getInterval(splitAreaModel, labelInterval);\n    var areaStyle = areaStyleModel.getAreaStyle();\n    areaColors = zrUtil.isArray(areaColors) ? areaColors : [areaColors];\n    var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n    var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n\n    for (var i = 1; i < ticksCoords.length; i++) {\n      if (ifIgnoreOnTick(axis, i, areaInterval, ticksCoords.length, showMinLabel, showMaxLabel)) {\n        continue;\n      }\n\n      var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\n      var x;\n      var y;\n      var width;\n      var height;\n\n      if (axis.isHorizontal()) {\n        x = prevX;\n        y = gridRect.y;\n        width = tickCoord - x;\n        height = gridRect.height;\n      } else {\n        x = gridRect.x;\n        y = prevY;\n        width = gridRect.width;\n        height = tickCoord - y;\n      }\n\n      var colorIndex = count++ % areaColors.length;\n\n      this._axisGroup.add(new graphic.Rect({\n        anid: 'area_' + ticks[i],\n        shape: {\n          x: x,\n          y: y,\n          width: width,\n          height: height\n        },\n        style: zrUtil.defaults({\n          fill: areaColors[colorIndex]\n        }, areaStyle),\n        silent: true\n      }));\n\n      prevX = x + width;\n      prevY = y + height;\n    }\n  }\n});\nCartesianAxisView.extend({\n  type: 'xAxis'\n});\nCartesianAxisView.extend({\n  type: 'yAxis'\n});\n\n/***/ }),\n\n/***/ 1697:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(1490);\n\nvar graphic = __webpack_require__(1483);\n\nvar _layout = __webpack_require__(1517);\n\nvar getLayoutRect = _layout.getLayoutRect;\n// Model\necharts.extendComponentModel({\n  type: 'title',\n  layoutMode: {\n    type: 'box',\n    ignoreSize: true\n  },\n  defaultOption: {\n    // 一级层叠\n    zlevel: 0,\n    // 二级层叠\n    z: 6,\n    show: true,\n    text: '',\n    // 超链接跳转\n    // link: null,\n    // 仅支持self | blank\n    target: 'blank',\n    subtext: '',\n    // 超链接跳转\n    // sublink: null,\n    // 仅支持self | blank\n    subtarget: 'blank',\n    // 'center' ¦ 'left' ¦ 'right'\n    // ¦ {number}（x坐标，单位px）\n    left: 0,\n    // 'top' ¦ 'bottom' ¦ 'center'\n    // ¦ {number}（y坐标，单位px）\n    top: 0,\n    // 水平对齐\n    // 'auto' | 'left' | 'right' | 'center'\n    // 默认根据 left 的位置判断是左对齐还是右对齐\n    // textAlign: null\n    //\n    // 垂直对齐\n    // 'auto' | 'top' | 'bottom' | 'middle'\n    // 默认根据 top 位置判断是上对齐还是下对齐\n    // textBaseline: null\n    backgroundColor: 'rgba(0,0,0,0)',\n    // 标题边框颜色\n    borderColor: '#ccc',\n    // 标题边框线宽，单位px，默认为0（无边框）\n    borderWidth: 0,\n    // 标题内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    padding: 5,\n    // 主副标题纵向间隔，单位px，默认为10，\n    itemGap: 10,\n    textStyle: {\n      fontSize: 18,\n      fontWeight: 'bolder',\n      color: '#333'\n    },\n    subtextStyle: {\n      color: '#aaa'\n    }\n  }\n}); // View\n\necharts.extendComponentView({\n  type: 'title',\n  render: function (titleModel, ecModel, api) {\n    this.group.removeAll();\n\n    if (!titleModel.get('show')) {\n      return;\n    }\n\n    var group = this.group;\n    var textStyleModel = titleModel.getModel('textStyle');\n    var subtextStyleModel = titleModel.getModel('subtextStyle');\n    var textAlign = titleModel.get('textAlign');\n    var textBaseline = titleModel.get('textBaseline');\n    var textEl = new graphic.Text({\n      style: graphic.setTextStyle({}, textStyleModel, {\n        text: titleModel.get('text'),\n        textFill: textStyleModel.getTextColor()\n      }, {\n        disableBox: true\n      }),\n      z2: 10\n    });\n    var textRect = textEl.getBoundingRect();\n    var subText = titleModel.get('subtext');\n    var subTextEl = new graphic.Text({\n      style: graphic.setTextStyle({}, subtextStyleModel, {\n        text: subText,\n        textFill: subtextStyleModel.getTextColor(),\n        y: textRect.height + titleModel.get('itemGap'),\n        textVerticalAlign: 'top'\n      }, {\n        disableBox: true\n      }),\n      z2: 10\n    });\n    var link = titleModel.get('link');\n    var sublink = titleModel.get('sublink');\n    textEl.silent = !link;\n    subTextEl.silent = !sublink;\n\n    if (link) {\n      textEl.on('click', function () {\n        window.open(link, '_' + titleModel.get('target'));\n      });\n    }\n\n    if (sublink) {\n      subTextEl.on('click', function () {\n        window.open(sublink, '_' + titleModel.get('subtarget'));\n      });\n    }\n\n    group.add(textEl);\n    subText && group.add(subTextEl); // If no subText, but add subTextEl, there will be an empty line.\n\n    var groupRect = group.getBoundingRect();\n    var layoutOption = titleModel.getBoxLayoutParams();\n    layoutOption.width = groupRect.width;\n    layoutOption.height = groupRect.height;\n    var layoutRect = getLayoutRect(layoutOption, {\n      width: api.getWidth(),\n      height: api.getHeight()\n    }, titleModel.get('padding')); // Adjust text align based on position\n\n    if (!textAlign) {\n      // Align left if title is on the left. center and right is same\n      textAlign = titleModel.get('left') || titleModel.get('right');\n\n      if (textAlign === 'middle') {\n        textAlign = 'center';\n      } // Adjust layout by text align\n\n\n      if (textAlign === 'right') {\n        layoutRect.x += layoutRect.width;\n      } else if (textAlign === 'center') {\n        layoutRect.x += layoutRect.width / 2;\n      }\n    }\n\n    if (!textBaseline) {\n      textBaseline = titleModel.get('top') || titleModel.get('bottom');\n\n      if (textBaseline === 'center') {\n        textBaseline = 'middle';\n      }\n\n      if (textBaseline === 'bottom') {\n        layoutRect.y += layoutRect.height;\n      } else if (textBaseline === 'middle') {\n        layoutRect.y += layoutRect.height / 2;\n      }\n\n      textBaseline = textBaseline || 'top';\n    }\n\n    group.attr('position', [layoutRect.x, layoutRect.y]);\n    var alignStyle = {\n      textAlign: textAlign,\n      textVerticalAlign: textBaseline\n    };\n    textEl.setStyle(alignStyle);\n    subTextEl.setStyle(alignStyle); // Render background\n    // Get groupRect again because textAlign has been changed\n\n    groupRect = group.getBoundingRect();\n    var padding = layoutRect.margin;\n    var style = titleModel.getItemStyle(['color', 'opacity']);\n    style.fill = titleModel.get('backgroundColor');\n    var rect = new graphic.Rect({\n      shape: {\n        x: groupRect.x - padding[3],\n        y: groupRect.y - padding[0],\n        width: groupRect.width + padding[1] + padding[3],\n        height: groupRect.height + padding[0] + padding[2],\n        r: titleModel.get('borderRadius')\n      },\n      style: style,\n      silent: true\n    });\n    graphic.subPixelOptimizeRect(rect);\n    group.add(rect);\n  }\n});\n\n/***/ }),\n\n/***/ 1698:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(1490);\n\n__webpack_require__(1690);\n\n__webpack_require__(1700);\n\n__webpack_require__(1701);\n\n// FIXME Better way to pack data in graphic element\n\n/**\n * @action\n * @property {string} type\n * @property {number} seriesIndex\n * @property {number} dataIndex\n * @property {number} [x]\n * @property {number} [y]\n */\necharts.registerAction({\n  type: 'showTip',\n  event: 'showTip',\n  update: 'tooltip:manuallyShowTip'\n}, // noop\nfunction () {});\necharts.registerAction({\n  type: 'hideTip',\n  event: 'hideTip',\n  update: 'tooltip:manuallyHideTip'\n}, // noop\nfunction () {});\n\n/***/ }),\n\n/***/ 1699:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1479);\n\nvar zrColor = __webpack_require__(1533);\n\nvar eventUtil = __webpack_require__(1531);\n\nvar env = __webpack_require__(1495);\n\nvar formatUtil = __webpack_require__(1499);\n\nvar each = zrUtil.each;\nvar toCamelCase = formatUtil.toCamelCase;\nvar vendors = ['', '-webkit-', '-moz-', '-o-'];\nvar gCssText = 'position:absolute;display:block;border-style:solid;white-space:nowrap;z-index:9999999;';\n/**\n * @param {number} duration\n * @return {string}\n * @inner\n */\n\nfunction assembleTransition(duration) {\n  var transitionCurve = 'cubic-bezier(0.23, 1, 0.32, 1)';\n  var transitionText = 'left ' + duration + 's ' + transitionCurve + ',' + 'top ' + duration + 's ' + transitionCurve;\n  return zrUtil.map(vendors, function (vendorPrefix) {\n    return vendorPrefix + 'transition:' + transitionText;\n  }).join(';');\n}\n/**\n * @param {Object} textStyle\n * @return {string}\n * @inner\n */\n\n\nfunction assembleFont(textStyleModel) {\n  var cssText = [];\n  var fontSize = textStyleModel.get('fontSize');\n  var color = textStyleModel.getTextColor();\n  color && cssText.push('color:' + color);\n  cssText.push('font:' + textStyleModel.getFont());\n  fontSize && cssText.push('line-height:' + Math.round(fontSize * 3 / 2) + 'px');\n  each(['decoration', 'align'], function (name) {\n    var val = textStyleModel.get(name);\n    val && cssText.push('text-' + name + ':' + val);\n  });\n  return cssText.join(';');\n}\n/**\n * @param {Object} tooltipModel\n * @return {string}\n * @inner\n */\n\n\nfunction assembleCssText(tooltipModel) {\n  var cssText = [];\n  var transitionDuration = tooltipModel.get('transitionDuration');\n  var backgroundColor = tooltipModel.get('backgroundColor');\n  var textStyleModel = tooltipModel.getModel('textStyle');\n  var padding = tooltipModel.get('padding'); // Animation transition. Do not animate when transitionDuration is 0.\n\n  transitionDuration && cssText.push(assembleTransition(transitionDuration));\n\n  if (backgroundColor) {\n    if (env.canvasSupported) {\n      cssText.push('background-Color:' + backgroundColor);\n    } else {\n      // for ie\n      cssText.push('background-Color:#' + zrColor.toHex(backgroundColor));\n      cssText.push('filter:alpha(opacity=70)');\n    }\n  } // Border style\n\n\n  each(['width', 'color', 'radius'], function (name) {\n    var borderName = 'border-' + name;\n    var camelCase = toCamelCase(borderName);\n    var val = tooltipModel.get(camelCase);\n    val != null && cssText.push(borderName + ':' + val + (name === 'color' ? '' : 'px'));\n  }); // Text style\n\n  cssText.push(assembleFont(textStyleModel)); // Padding\n\n  if (padding != null) {\n    cssText.push('padding:' + formatUtil.normalizeCssArray(padding).join('px ') + 'px');\n  }\n\n  return cssText.join(';') + ';';\n}\n/**\n * @alias module:echarts/component/tooltip/TooltipContent\n * @constructor\n */\n\n\nfunction TooltipContent(container, api) {\n  var el = document.createElement('div');\n  var zr = this._zr = api.getZr();\n  this.el = el;\n  this._x = api.getWidth() / 2;\n  this._y = api.getHeight() / 2;\n  container.appendChild(el);\n  this._container = container;\n  this._show = false;\n  /**\n   * @private\n   */\n\n  this._hideTimeout;\n  var self = this;\n\n  el.onmouseenter = function () {\n    // clear the timeout in hideLater and keep showing tooltip\n    if (self._enterable) {\n      clearTimeout(self._hideTimeout);\n      self._show = true;\n    }\n\n    self._inContent = true;\n  };\n\n  el.onmousemove = function (e) {\n    e = e || window.event;\n\n    if (!self._enterable) {\n      // Try trigger zrender event to avoid mouse\n      // in and out shape too frequently\n      var handler = zr.handler;\n      eventUtil.normalizeEvent(container, e, true);\n      handler.dispatch('mousemove', e);\n    }\n  };\n\n  el.onmouseleave = function () {\n    if (self._enterable) {\n      if (self._show) {\n        self.hideLater(self._hideDelay);\n      }\n    }\n\n    self._inContent = false;\n  };\n}\n\nTooltipContent.prototype = {\n  constructor: TooltipContent,\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  _enterable: true,\n\n  /**\n   * Update when tooltip is rendered\n   */\n  update: function () {\n    // FIXME\n    // Move this logic to ec main?\n    var container = this._container;\n    var stl = container.currentStyle || document.defaultView.getComputedStyle(container);\n    var domStyle = container.style;\n\n    if (domStyle.position !== 'absolute' && stl.position !== 'absolute') {\n      domStyle.position = 'relative';\n    } // Hide the tooltip\n    // PENDING\n    // this.hide();\n\n  },\n  show: function (tooltipModel) {\n    clearTimeout(this._hideTimeout);\n    var el = this.el;\n    el.style.cssText = gCssText + assembleCssText(tooltipModel) // http://stackoverflow.com/questions/21125587/css3-transition-not-working-in-chrome-anymore\n    + ';left:' + this._x + 'px;top:' + this._y + 'px;' + (tooltipModel.get('extraCssText') || '');\n    el.style.display = el.innerHTML ? 'block' : 'none';\n    this._show = true;\n  },\n  setContent: function (content) {\n    this.el.innerHTML = content == null ? '' : content;\n  },\n  setEnterable: function (enterable) {\n    this._enterable = enterable;\n  },\n  getSize: function () {\n    var el = this.el;\n    return [el.clientWidth, el.clientHeight];\n  },\n  moveTo: function (x, y) {\n    // xy should be based on canvas root. But tooltipContent is\n    // the sibling of canvas root. So padding of ec container\n    // should be considered here.\n    var zr = this._zr;\n    var viewportRootOffset;\n\n    if (zr && zr.painter && (viewportRootOffset = zr.painter.getViewportRootOffset())) {\n      x += viewportRootOffset.offsetLeft;\n      y += viewportRootOffset.offsetTop;\n    }\n\n    var style = this.el.style;\n    style.left = x + 'px';\n    style.top = y + 'px';\n    this._x = x;\n    this._y = y;\n  },\n  hide: function () {\n    this.el.style.display = 'none';\n    this._show = false;\n  },\n  hideLater: function (time) {\n    if (this._show && !(this._inContent && this._enterable)) {\n      if (time) {\n        this._hideDelay = time; // Set show false to avoid invoke hideLater mutiple times\n\n        this._show = false;\n        this._hideTimeout = setTimeout(zrUtil.bind(this.hide, this), time);\n      } else {\n        this.hide();\n      }\n    }\n  },\n  isShow: function () {\n    return this._show;\n  }\n};\nvar _default = TooltipContent;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1700:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(1490);\n\nvar _default = echarts.extendComponentModel({\n  type: 'tooltip',\n  dependencies: ['axisPointer'],\n  defaultOption: {\n    zlevel: 0,\n    z: 8,\n    show: true,\n    // tooltip主体内容\n    showContent: true,\n    // 'trigger' only works on coordinate system.\n    // 'item' | 'axis' | 'none'\n    trigger: 'item',\n    // 'click' | 'mousemove' | 'none'\n    triggerOn: 'mousemove|click',\n    alwaysShowContent: false,\n    displayMode: 'single',\n    // 'single' | 'multipleByCoordSys'\n    // 位置 {Array} | {Function}\n    // position: null\n    // Consider triggered from axisPointer handle, verticalAlign should be 'middle'\n    // align: null,\n    // verticalAlign: null,\n    // 是否约束 content 在 viewRect 中。默认 false 是为了兼容以前版本。\n    confine: false,\n    // 内容格式器：{string}（Template） ¦ {Function}\n    // formatter: null\n    showDelay: 0,\n    // 隐藏延迟，单位ms\n    hideDelay: 100,\n    // 动画变换时间，单位s\n    transitionDuration: 0.4,\n    enterable: false,\n    // 提示背景颜色，默认为透明度为0.7的黑色\n    backgroundColor: 'rgba(50,50,50,0.7)',\n    // 提示边框颜色\n    borderColor: '#333',\n    // 提示边框圆角，单位px，默认为4\n    borderRadius: 4,\n    // 提示边框线宽，单位px，默认为0（无边框）\n    borderWidth: 0,\n    // 提示内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    padding: 5,\n    // Extra css text\n    extraCssText: '',\n    // 坐标轴指示器，坐标轴触发有效\n    axisPointer: {\n      // 默认为直线\n      // 可选为：'line' | 'shadow' | 'cross'\n      type: 'line',\n      // type 为 line 的时候有效，指定 tooltip line 所在的轴，可选\n      // 可选 'x' | 'y' | 'angle' | 'radius' | 'auto'\n      // 默认 'auto'，会选择类型为 cateogry 的轴，对于双数值轴，笛卡尔坐标系会默认选择 x 轴\n      // 极坐标系会默认选择 angle 轴\n      axis: 'auto',\n      animation: 'auto',\n      animationDurationUpdate: 200,\n      animationEasingUpdate: 'exponentialOut',\n      crossStyle: {\n        color: '#999',\n        width: 1,\n        type: 'dashed',\n        // TODO formatter\n        textStyle: {} // lineStyle and shadowStyle should not be specified here,\n        // otherwise it will always override those styles on option.axisPointer.\n\n      }\n    },\n    textStyle: {\n      color: '#fff',\n      fontSize: 14\n    }\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1701:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(1490);\n\nvar zrUtil = __webpack_require__(1479);\n\nvar env = __webpack_require__(1495);\n\nvar TooltipContent = __webpack_require__(1699);\n\nvar formatUtil = __webpack_require__(1499);\n\nvar numberUtil = __webpack_require__(1486);\n\nvar graphic = __webpack_require__(1483);\n\nvar findPointFromSeries = __webpack_require__(1603);\n\nvar layoutUtil = __webpack_require__(1517);\n\nvar Model = __webpack_require__(1498);\n\nvar globalListener = __webpack_require__(1604);\n\nvar axisHelper = __webpack_require__(1516);\n\nvar axisPointerViewHelper = __webpack_require__(1605);\n\nvar bind = zrUtil.bind;\nvar each = zrUtil.each;\nvar parsePercent = numberUtil.parsePercent;\nvar proxyRect = new graphic.Rect({\n  shape: {\n    x: -1,\n    y: -1,\n    width: 2,\n    height: 2\n  }\n});\n\nvar _default = echarts.extendComponentView({\n  type: 'tooltip',\n  init: function (ecModel, api) {\n    if (env.node) {\n      return;\n    }\n\n    var tooltipContent = new TooltipContent(api.getDom(), api);\n    this._tooltipContent = tooltipContent;\n  },\n  render: function (tooltipModel, ecModel, api) {\n    if (env.node) {\n      return;\n    } // Reset\n\n\n    this.group.removeAll();\n    /**\n     * @private\n     * @type {module:echarts/component/tooltip/TooltipModel}\n     */\n\n    this._tooltipModel = tooltipModel;\n    /**\n     * @private\n     * @type {module:echarts/model/Global}\n     */\n\n    this._ecModel = ecModel;\n    /**\n     * @private\n     * @type {module:echarts/ExtensionAPI}\n     */\n\n    this._api = api;\n    /**\n     * Should be cleaned when render.\n     * @private\n     * @type {Array.<Array.<Object>>}\n     */\n\n    this._lastDataByCoordSys = null;\n    /**\n     * @private\n     * @type {boolean}\n     */\n\n    this._alwaysShowContent = tooltipModel.get('alwaysShowContent');\n    var tooltipContent = this._tooltipContent;\n    tooltipContent.update();\n    tooltipContent.setEnterable(tooltipModel.get('enterable'));\n\n    this._initGlobalListener();\n\n    this._keepShow();\n  },\n  _initGlobalListener: function () {\n    var tooltipModel = this._tooltipModel;\n    var triggerOn = tooltipModel.get('triggerOn');\n    globalListener.register('itemTooltip', this._api, bind(function (currTrigger, e, dispatchAction) {\n      // If 'none', it is not controlled by mouse totally.\n      if (triggerOn !== 'none') {\n        if (triggerOn.indexOf(currTrigger) >= 0) {\n          this._tryShow(e, dispatchAction);\n        } else if (currTrigger === 'leave') {\n          this._hide(dispatchAction);\n        }\n      }\n    }, this));\n  },\n  _keepShow: function () {\n    var tooltipModel = this._tooltipModel;\n    var ecModel = this._ecModel;\n    var api = this._api; // Try to keep the tooltip show when refreshing\n\n    if (this._lastX != null && this._lastY != null // When user is willing to control tooltip totally using API,\n    // self.manuallyShowTip({x, y}) might cause tooltip hide,\n    // which is not expected.\n    && tooltipModel.get('triggerOn') !== 'none') {\n      var self = this;\n      clearTimeout(this._refreshUpdateTimeout);\n      this._refreshUpdateTimeout = setTimeout(function () {\n        // Show tip next tick after other charts are rendered\n        // In case highlight action has wrong result\n        // FIXME\n        self.manuallyShowTip(tooltipModel, ecModel, api, {\n          x: self._lastX,\n          y: self._lastY\n        });\n      });\n    }\n  },\n\n  /**\n   * Show tip manually by\n   * dispatchAction({\n   *     type: 'showTip',\n   *     x: 10,\n   *     y: 10\n   * });\n   * Or\n   * dispatchAction({\n   *      type: 'showTip',\n   *      seriesIndex: 0,\n   *      dataIndex or dataIndexInside or name\n   * });\n   *\n   *  TODO Batch\n   */\n  manuallyShowTip: function (tooltipModel, ecModel, api, payload) {\n    if (payload.from === this.uid || env.node) {\n      return;\n    }\n\n    var dispatchAction = makeDispatchAction(payload, api); // Reset ticket\n\n    this._ticket = ''; // When triggered from axisPointer.\n\n    var dataByCoordSys = payload.dataByCoordSys;\n\n    if (payload.tooltip && payload.x != null && payload.y != null) {\n      var el = proxyRect;\n      el.position = [payload.x, payload.y];\n      el.update();\n      el.tooltip = payload.tooltip; // Manually show tooltip while view is not using zrender elements.\n\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        target: el\n      }, dispatchAction);\n    } else if (dataByCoordSys) {\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        position: payload.position,\n        event: {},\n        dataByCoordSys: payload.dataByCoordSys,\n        tooltipOption: payload.tooltipOption\n      }, dispatchAction);\n    } else if (payload.seriesIndex != null) {\n      if (this._manuallyAxisShowTip(tooltipModel, ecModel, api, payload)) {\n        return;\n      }\n\n      var pointInfo = findPointFromSeries(payload, ecModel);\n      var cx = pointInfo.point[0];\n      var cy = pointInfo.point[1];\n\n      if (cx != null && cy != null) {\n        this._tryShow({\n          offsetX: cx,\n          offsetY: cy,\n          position: payload.position,\n          target: pointInfo.el,\n          event: {}\n        }, dispatchAction);\n      }\n    } else if (payload.x != null && payload.y != null) {\n      // FIXME\n      // should wrap dispatchAction like `axisPointer/globalListener` ?\n      api.dispatchAction({\n        type: 'updateAxisPointer',\n        x: payload.x,\n        y: payload.y\n      });\n\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        position: payload.position,\n        target: api.getZr().findHover(payload.x, payload.y).target,\n        event: {}\n      }, dispatchAction);\n    }\n  },\n  manuallyHideTip: function (tooltipModel, ecModel, api, payload) {\n    var tooltipContent = this._tooltipContent;\n\n    if (!this._alwaysShowContent) {\n      tooltipContent.hideLater(this._tooltipModel.get('hideDelay'));\n    }\n\n    this._lastX = this._lastY = null;\n\n    if (payload.from !== this.uid) {\n      this._hide(makeDispatchAction(payload, api));\n    }\n  },\n  // Be compatible with previous design, that is, when tooltip.type is 'axis' and\n  // dispatchAction 'showTip' with seriesIndex and dataIndex will trigger axis pointer\n  // and tooltip.\n  _manuallyAxisShowTip: function (tooltipModel, ecModel, api, payload) {\n    var seriesIndex = payload.seriesIndex;\n    var dataIndex = payload.dataIndex;\n    var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo;\n\n    if (seriesIndex == null || dataIndex == null || coordSysAxesInfo == null) {\n      return;\n    }\n\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n\n    if (!seriesModel) {\n      return;\n    }\n\n    var data = seriesModel.getData();\n    var tooltipModel = buildTooltipModel([data.getItemModel(dataIndex), seriesModel, (seriesModel.coordinateSystem || {}).model, tooltipModel]);\n\n    if (tooltipModel.get('trigger') !== 'axis') {\n      return;\n    }\n\n    api.dispatchAction({\n      type: 'updateAxisPointer',\n      seriesIndex: seriesIndex,\n      dataIndex: dataIndex,\n      position: payload.position\n    });\n    return true;\n  },\n  _tryShow: function (e, dispatchAction) {\n    var el = e.target;\n    var tooltipModel = this._tooltipModel;\n\n    if (!tooltipModel) {\n      return;\n    } // Save mouse x, mouse y. So we can try to keep showing the tip if chart is refreshed\n\n\n    this._lastX = e.offsetX;\n    this._lastY = e.offsetY;\n    var dataByCoordSys = e.dataByCoordSys;\n\n    if (dataByCoordSys && dataByCoordSys.length) {\n      this._showAxisTooltip(dataByCoordSys, e);\n    } // Always show item tooltip if mouse is on the element with dataIndex\n    else if (el && el.dataIndex != null) {\n        this._lastDataByCoordSys = null;\n\n        this._showSeriesItemTooltip(e, el, dispatchAction);\n      } // Tooltip provided directly. Like legend.\n      else if (el && el.tooltip) {\n          this._lastDataByCoordSys = null;\n\n          this._showComponentItemTooltip(e, el, dispatchAction);\n        } else {\n          this._lastDataByCoordSys = null;\n\n          this._hide(dispatchAction);\n        }\n  },\n  _showOrMove: function (tooltipModel, cb) {\n    // showDelay is used in this case: tooltip.enterable is set\n    // as true. User intent to move mouse into tooltip and click\n    // something. `showDelay` makes it easyer to enter the content\n    // but tooltip do not move immediately.\n    var delay = tooltipModel.get('showDelay');\n    cb = zrUtil.bind(cb, this);\n    clearTimeout(this._showTimout);\n    delay > 0 ? this._showTimout = setTimeout(cb, delay) : cb();\n  },\n  _showAxisTooltip: function (dataByCoordSys, e) {\n    var ecModel = this._ecModel;\n    var globalTooltipModel = this._tooltipModel;\n    var point = [e.offsetX, e.offsetY];\n    var singleDefaultHTML = [];\n    var singleParamsList = [];\n    var singleTooltipModel = buildTooltipModel([e.tooltipOption, globalTooltipModel]);\n    each(dataByCoordSys, function (itemCoordSys) {\n      // var coordParamList = [];\n      // var coordDefaultHTML = [];\n      // var coordTooltipModel = buildTooltipModel([\n      //     e.tooltipOption,\n      //     itemCoordSys.tooltipOption,\n      //     ecModel.getComponent(itemCoordSys.coordSysMainType, itemCoordSys.coordSysIndex),\n      //     globalTooltipModel\n      // ]);\n      // var displayMode = coordTooltipModel.get('displayMode');\n      // var paramsList = displayMode === 'single' ? singleParamsList : [];\n      each(itemCoordSys.dataByAxis, function (item) {\n        var axisModel = ecModel.getComponent(item.axisDim + 'Axis', item.axisIndex);\n        var axisValue = item.value;\n        var seriesDefaultHTML = [];\n\n        if (!axisModel || axisValue == null) {\n          return;\n        }\n\n        var valueLabel = axisPointerViewHelper.getValueLabel(axisValue, axisModel.axis, ecModel, item.seriesDataIndices, item.valueLabelOpt);\n        zrUtil.each(item.seriesDataIndices, function (idxItem) {\n          var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n          var dataIndex = idxItem.dataIndexInside;\n          var dataParams = series && series.getDataParams(dataIndex);\n          dataParams.axisDim = item.axisDim;\n          dataParams.axisIndex = item.axisIndex;\n          dataParams.axisType = item.axisType;\n          dataParams.axisId = item.axisId;\n          dataParams.axisValue = axisHelper.getAxisRawValue(axisModel.axis, axisValue);\n          dataParams.axisValueLabel = valueLabel;\n\n          if (dataParams) {\n            singleParamsList.push(dataParams);\n            seriesDefaultHTML.push(series.formatTooltip(dataIndex, true));\n          }\n        }); // Default tooltip content\n        // FIXME\n        // (1) shold be the first data which has name?\n        // (2) themeRiver, firstDataIndex is array, and first line is unnecessary.\n\n        var firstLine = valueLabel;\n        singleDefaultHTML.push((firstLine ? formatUtil.encodeHTML(firstLine) + '<br />' : '') + seriesDefaultHTML.join('<br />'));\n      });\n    }, this); // In most case, the second axis is shown upper than the first one.\n\n    singleDefaultHTML.reverse();\n    singleDefaultHTML = singleDefaultHTML.join('<br /><br />');\n    var positionExpr = e.position;\n\n    this._showOrMove(singleTooltipModel, function () {\n      if (this._updateContentNotChangedOnAxis(dataByCoordSys)) {\n        this._updatePosition(singleTooltipModel, positionExpr, point[0], point[1], this._tooltipContent, singleParamsList);\n      } else {\n        this._showTooltipContent(singleTooltipModel, singleDefaultHTML, singleParamsList, Math.random(), point[0], point[1], positionExpr);\n      }\n    }); // Do not trigger events here, because this branch only be entered\n    // from dispatchAction.\n\n  },\n  _showSeriesItemTooltip: function (e, el, dispatchAction) {\n    var ecModel = this._ecModel; // Use dataModel in element if possible\n    // Used when mouseover on a element like markPoint or edge\n    // In which case, the data is not main data in series.\n\n    var seriesIndex = el.seriesIndex;\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex); // For example, graph link.\n\n    var dataModel = el.dataModel || seriesModel;\n    var dataIndex = el.dataIndex;\n    var dataType = el.dataType;\n    var data = dataModel.getData();\n    var tooltipModel = buildTooltipModel([data.getItemModel(dataIndex), dataModel, seriesModel && (seriesModel.coordinateSystem || {}).model, this._tooltipModel]);\n    var tooltipTrigger = tooltipModel.get('trigger');\n\n    if (tooltipTrigger != null && tooltipTrigger !== 'item') {\n      return;\n    }\n\n    var params = dataModel.getDataParams(dataIndex, dataType);\n    var defaultHtml = dataModel.formatTooltip(dataIndex, false, dataType);\n    var asyncTicket = 'item_' + dataModel.name + '_' + dataIndex;\n\n    this._showOrMove(tooltipModel, function () {\n      this._showTooltipContent(tooltipModel, defaultHtml, params, asyncTicket, e.offsetX, e.offsetY, e.position, e.target);\n    }); // FIXME\n    // duplicated showtip if manuallyShowTip is called from dispatchAction.\n\n\n    dispatchAction({\n      type: 'showTip',\n      dataIndexInside: dataIndex,\n      dataIndex: data.getRawIndex(dataIndex),\n      seriesIndex: seriesIndex,\n      from: this.uid\n    });\n  },\n  _showComponentItemTooltip: function (e, el, dispatchAction) {\n    var tooltipOpt = el.tooltip;\n\n    if (typeof tooltipOpt === 'string') {\n      var content = tooltipOpt;\n      tooltipOpt = {\n        content: content,\n        // Fixed formatter\n        formatter: content\n      };\n    }\n\n    var subTooltipModel = new Model(tooltipOpt, this._tooltipModel, this._ecModel);\n    var defaultHtml = subTooltipModel.get('content');\n    var asyncTicket = Math.random(); // Do not check whether `trigger` is 'none' here, because `trigger`\n    // only works on cooridinate system. In fact, we have not found case\n    // that requires setting `trigger` nothing on component yet.\n\n    this._showOrMove(subTooltipModel, function () {\n      this._showTooltipContent(subTooltipModel, defaultHtml, subTooltipModel.get('formatterParams') || {}, asyncTicket, e.offsetX, e.offsetY, e.position, el);\n    }); // If not dispatch showTip, tip may be hide triggered by axis.\n\n\n    dispatchAction({\n      type: 'showTip',\n      from: this.uid\n    });\n  },\n  _showTooltipContent: function (tooltipModel, defaultHtml, params, asyncTicket, x, y, positionExpr, el) {\n    // Reset ticket\n    this._ticket = '';\n\n    if (!tooltipModel.get('showContent') || !tooltipModel.get('show')) {\n      return;\n    }\n\n    var tooltipContent = this._tooltipContent;\n    var formatter = tooltipModel.get('formatter');\n    positionExpr = positionExpr || tooltipModel.get('position');\n    var html = defaultHtml;\n\n    if (formatter && typeof formatter === 'string') {\n      html = formatUtil.formatTpl(formatter, params, true);\n    } else if (typeof formatter === 'function') {\n      var callback = bind(function (cbTicket, html) {\n        if (cbTicket === this._ticket) {\n          tooltipContent.setContent(html);\n\n          this._updatePosition(tooltipModel, positionExpr, x, y, tooltipContent, params, el);\n        }\n      }, this);\n      this._ticket = asyncTicket;\n      html = formatter(params, asyncTicket, callback);\n    }\n\n    tooltipContent.setContent(html);\n    tooltipContent.show(tooltipModel);\n\n    this._updatePosition(tooltipModel, positionExpr, x, y, tooltipContent, params, el);\n  },\n\n  /**\n   * @param  {string|Function|Array.<number>|Object} positionExpr\n   * @param  {number} x Mouse x\n   * @param  {number} y Mouse y\n   * @param  {boolean} confine Whether confine tooltip content in view rect.\n   * @param  {Object|<Array.<Object>} params\n   * @param  {module:zrender/Element} el target element\n   * @param  {module:echarts/ExtensionAPI} api\n   * @return {Array.<number>}\n   */\n  _updatePosition: function (tooltipModel, positionExpr, x, y, content, params, el) {\n    var viewWidth = this._api.getWidth();\n\n    var viewHeight = this._api.getHeight();\n\n    positionExpr = positionExpr || tooltipModel.get('position');\n    var contentSize = content.getSize();\n    var align = tooltipModel.get('align');\n    var vAlign = tooltipModel.get('verticalAlign');\n    var rect = el && el.getBoundingRect().clone();\n    el && rect.applyTransform(el.transform);\n\n    if (typeof positionExpr === 'function') {\n      // Callback of position can be an array or a string specify the position\n      positionExpr = positionExpr([x, y], params, content.el, rect, {\n        viewSize: [viewWidth, viewHeight],\n        contentSize: contentSize.slice()\n      });\n    }\n\n    if (zrUtil.isArray(positionExpr)) {\n      x = parsePercent(positionExpr[0], viewWidth);\n      y = parsePercent(positionExpr[1], viewHeight);\n    } else if (zrUtil.isObject(positionExpr)) {\n      positionExpr.width = contentSize[0];\n      positionExpr.height = contentSize[1];\n      var layoutRect = layoutUtil.getLayoutRect(positionExpr, {\n        width: viewWidth,\n        height: viewHeight\n      });\n      x = layoutRect.x;\n      y = layoutRect.y;\n      align = null; // When positionExpr is left/top/right/bottom,\n      // align and verticalAlign will not work.\n\n      vAlign = null;\n    } // Specify tooltip position by string 'top' 'bottom' 'left' 'right' around graphic element\n    else if (typeof positionExpr === 'string' && el) {\n        var pos = calcTooltipPosition(positionExpr, rect, contentSize);\n        x = pos[0];\n        y = pos[1];\n      } else {\n        var pos = refixTooltipPosition(x, y, content.el, viewWidth, viewHeight, align ? null : 20, vAlign ? null : 20);\n        x = pos[0];\n        y = pos[1];\n      }\n\n    align && (x -= isCenterAlign(align) ? contentSize[0] / 2 : align === 'right' ? contentSize[0] : 0);\n    vAlign && (y -= isCenterAlign(vAlign) ? contentSize[1] / 2 : vAlign === 'bottom' ? contentSize[1] : 0);\n\n    if (tooltipModel.get('confine')) {\n      var pos = confineTooltipPosition(x, y, content.el, viewWidth, viewHeight);\n      x = pos[0];\n      y = pos[1];\n    }\n\n    content.moveTo(x, y);\n  },\n  // FIXME\n  // Should we remove this but leave this to user?\n  _updateContentNotChangedOnAxis: function (dataByCoordSys) {\n    var lastCoordSys = this._lastDataByCoordSys;\n    var contentNotChanged = !!lastCoordSys && lastCoordSys.length === dataByCoordSys.length;\n    contentNotChanged && each(lastCoordSys, function (lastItemCoordSys, indexCoordSys) {\n      var lastDataByAxis = lastItemCoordSys.dataByAxis || {};\n      var thisItemCoordSys = dataByCoordSys[indexCoordSys] || {};\n      var thisDataByAxis = thisItemCoordSys.dataByAxis || [];\n      contentNotChanged &= lastDataByAxis.length === thisDataByAxis.length;\n      contentNotChanged && each(lastDataByAxis, function (lastItem, indexAxis) {\n        var thisItem = thisDataByAxis[indexAxis] || {};\n        var lastIndices = lastItem.seriesDataIndices || [];\n        var newIndices = thisItem.seriesDataIndices || [];\n        contentNotChanged &= lastItem.value === thisItem.value && lastItem.axisType === thisItem.axisType && lastItem.axisId === thisItem.axisId && lastIndices.length === newIndices.length;\n        contentNotChanged && each(lastIndices, function (lastIdxItem, j) {\n          var newIdxItem = newIndices[j];\n          contentNotChanged &= lastIdxItem.seriesIndex === newIdxItem.seriesIndex && lastIdxItem.dataIndex === newIdxItem.dataIndex;\n        });\n      });\n    });\n    this._lastDataByCoordSys = dataByCoordSys;\n    return !!contentNotChanged;\n  },\n  _hide: function (dispatchAction) {\n    // Do not directly hideLater here, because this behavior may be prevented\n    // in dispatchAction when showTip is dispatched.\n    // FIXME\n    // duplicated hideTip if manuallyHideTip is called from dispatchAction.\n    this._lastDataByCoordSys = null;\n    dispatchAction({\n      type: 'hideTip',\n      from: this.uid\n    });\n  },\n  dispose: function (ecModel, api) {\n    if (env.node) {\n      return;\n    }\n\n    this._tooltipContent.hide();\n\n    globalListener.unregister('itemTooltip', api);\n  }\n});\n/**\n * @param {Array.<Object|module:echarts/model/Model>} modelCascade\n * From top to bottom. (the last one should be globalTooltipModel);\n */\n\n\nfunction buildTooltipModel(modelCascade) {\n  var resultModel = modelCascade.pop();\n\n  while (modelCascade.length) {\n    var tooltipOpt = modelCascade.pop();\n\n    if (tooltipOpt) {\n      if (tooltipOpt instanceof Model) {\n        tooltipOpt = tooltipOpt.get('tooltip', true);\n      } // In each data item tooltip can be simply write:\n      // {\n      //  value: 10,\n      //  tooltip: 'Something you need to know'\n      // }\n\n\n      if (typeof tooltipOpt === 'string') {\n        tooltipOpt = {\n          formatter: tooltipOpt\n        };\n      }\n\n      resultModel = new Model(tooltipOpt, resultModel, resultModel.ecModel);\n    }\n  }\n\n  return resultModel;\n}\n\nfunction makeDispatchAction(payload, api) {\n  return payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n}\n\nfunction refixTooltipPosition(x, y, el, viewWidth, viewHeight, gapH, gapV) {\n  var size = getOuterSize(el);\n  var width = size.width;\n  var height = size.height;\n\n  if (gapH != null) {\n    if (x + width + gapH > viewWidth) {\n      x -= width + gapH;\n    } else {\n      x += gapH;\n    }\n  }\n\n  if (gapV != null) {\n    if (y + height + gapV > viewHeight) {\n      y -= height + gapV;\n    } else {\n      y += gapV;\n    }\n  }\n\n  return [x, y];\n}\n\nfunction confineTooltipPosition(x, y, el, viewWidth, viewHeight) {\n  var size = getOuterSize(el);\n  var width = size.width;\n  var height = size.height;\n  x = Math.min(x + width, viewWidth) - width;\n  y = Math.min(y + height, viewHeight) - height;\n  x = Math.max(x, 0);\n  y = Math.max(y, 0);\n  return [x, y];\n}\n\nfunction getOuterSize(el) {\n  var width = el.clientWidth;\n  var height = el.clientHeight; // Consider browser compatibility.\n  // IE8 does not support getComputedStyle.\n\n  if (document.defaultView && document.defaultView.getComputedStyle) {\n    var stl = document.defaultView.getComputedStyle(el);\n\n    if (stl) {\n      width += parseInt(stl.paddingLeft, 10) + parseInt(stl.paddingRight, 10) + parseInt(stl.borderLeftWidth, 10) + parseInt(stl.borderRightWidth, 10);\n      height += parseInt(stl.paddingTop, 10) + parseInt(stl.paddingBottom, 10) + parseInt(stl.borderTopWidth, 10) + parseInt(stl.borderBottomWidth, 10);\n    }\n  }\n\n  return {\n    width: width,\n    height: height\n  };\n}\n\nfunction calcTooltipPosition(position, rect, contentSize) {\n  var domWidth = contentSize[0];\n  var domHeight = contentSize[1];\n  var gap = 5;\n  var x = 0;\n  var y = 0;\n  var rectWidth = rect.width;\n  var rectHeight = rect.height;\n\n  switch (position) {\n    case 'inside':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n      break;\n\n    case 'top':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y - domHeight - gap;\n      break;\n\n    case 'bottom':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y + rectHeight + gap;\n      break;\n\n    case 'left':\n      x = rect.x - domWidth - gap;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n      break;\n\n    case 'right':\n      x = rect.x + rectWidth + gap;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n  }\n\n  return [x, y];\n}\n\nfunction isCenterAlign(align) {\n  return align === 'center' || align === 'middle';\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1702:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1479);\n\nvar defaultOption = {\n  show: true,\n  zlevel: 0,\n  // 一级层叠\n  z: 0,\n  // 二级层叠\n  // 反向坐标轴\n  inverse: false,\n  // 坐标轴名字，默认为空\n  name: '',\n  // 坐标轴名字位置，支持'start' | 'middle' | 'end'\n  nameLocation: 'end',\n  // 坐标轴名字旋转，degree。\n  nameRotate: null,\n  // Adapt to axis rotate, when nameLocation is 'middle'.\n  nameTruncate: {\n    maxWidth: null,\n    ellipsis: '...',\n    placeholder: '.'\n  },\n  // 坐标轴文字样式，默认取全局样式\n  nameTextStyle: {},\n  // 文字与轴线距离\n  nameGap: 15,\n  silent: false,\n  // Default false to support tooltip.\n  triggerEvent: false,\n  // Default false to avoid legacy user event listener fail.\n  tooltip: {\n    show: false\n  },\n  axisPointer: {},\n  // 坐标轴线\n  axisLine: {\n    // 默认显示，属性show控制显示与否\n    show: true,\n    onZero: true,\n    onZeroAxisIndex: null,\n    // 属性lineStyle控制线条样式\n    lineStyle: {\n      color: '#333',\n      width: 1,\n      type: 'solid'\n    },\n    // 坐标轴两端的箭头\n    symbol: ['none', 'none'],\n    symbolSize: [10, 15]\n  },\n  // 坐标轴小标记\n  axisTick: {\n    // 属性show控制显示与否，默认显示\n    show: true,\n    // 控制小标记是否在grid里\n    inside: false,\n    // 属性length控制线长\n    length: 5,\n    // 属性lineStyle控制线条样式\n    lineStyle: {\n      width: 1\n    }\n  },\n  // 坐标轴文本标签，详见axis.axisLabel\n  axisLabel: {\n    show: true,\n    // 控制文本标签是否在grid里\n    inside: false,\n    rotate: 0,\n    showMinLabel: null,\n    // true | false | null (auto)\n    showMaxLabel: null,\n    // true | false | null (auto)\n    margin: 8,\n    // formatter: null,\n    // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n    fontSize: 12\n  },\n  // 分隔线\n  splitLine: {\n    // 默认显示，属性show控制显示与否\n    show: true,\n    // 属性lineStyle（详见lineStyle）控制线条样式\n    lineStyle: {\n      color: ['#ccc'],\n      width: 1,\n      type: 'solid'\n    }\n  },\n  // 分隔区域\n  splitArea: {\n    // 默认不显示，属性show控制显示与否\n    show: false,\n    // 属性areaStyle（详见areaStyle）控制区域样式\n    areaStyle: {\n      color: ['rgba(250,250,250,0.3)', 'rgba(200,200,200,0.3)']\n    }\n  }\n};\nvar axisDefault = {};\naxisDefault.categoryAxis = zrUtil.merge({\n  // 类目起始和结束两端空白策略\n  boundaryGap: true,\n  // splitArea: {\n  // show: false\n  // },\n  splitLine: {\n    show: false\n  },\n  // 坐标轴小标记\n  axisTick: {\n    // If tick is align with label when boundaryGap is true\n    alignWithLabel: false,\n    interval: 'auto'\n  },\n  // 坐标轴文本标签，详见axis.axisLabel\n  axisLabel: {\n    interval: 'auto'\n  }\n}, defaultOption);\naxisDefault.valueAxis = zrUtil.merge({\n  // 数值起始和结束两端空白策略\n  boundaryGap: [0, 0],\n  // 最小值, 设置成 'dataMin' 则从数据中计算最小值\n  // min: null,\n  // 最大值，设置成 'dataMax' 则从数据中计算最大值\n  // max: null,\n  // Readonly prop, specifies start value of the range when using data zoom.\n  // rangeStart: null\n  // Readonly prop, specifies end value of the range when using data zoom.\n  // rangeEnd: null\n  // 脱离0值比例，放大聚焦到最终_min，_max区间\n  // scale: false,\n  // 分割段数，默认为5\n  splitNumber: 5 // Minimum interval\n  // minInterval: null\n  // maxInterval: null\n\n}, defaultOption); // FIXME\n\naxisDefault.timeAxis = zrUtil.defaults({\n  scale: true,\n  min: 'dataMin',\n  max: 'dataMax'\n}, axisDefault.valueAxis);\naxisDefault.logAxis = zrUtil.defaults({\n  scale: true,\n  logBase: 10\n}, axisDefault.valueAxis);\nvar _default = axisDefault;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1703:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1479);\n\nvar axisDefault = __webpack_require__(1702);\n\nvar ComponentModel = __webpack_require__(1508);\n\nvar _layout = __webpack_require__(1517);\n\nvar getLayoutParams = _layout.getLayoutParams;\nvar mergeLayoutParam = _layout.mergeLayoutParam;\n// FIXME axisType is fixed ?\nvar AXIS_TYPES = ['value', 'category', 'time', 'log'];\n/**\n * Generate sub axis model class\n * @param {string} axisName 'x' 'y' 'radius' 'angle' 'parallel'\n * @param {module:echarts/model/Component} BaseAxisModelClass\n * @param {Function} axisTypeDefaulter\n * @param {Object} [extraDefaultOption]\n */\n\nfunction _default(axisName, BaseAxisModelClass, axisTypeDefaulter, extraDefaultOption) {\n  zrUtil.each(AXIS_TYPES, function (axisType) {\n    BaseAxisModelClass.extend({\n      type: axisName + 'Axis.' + axisType,\n      mergeDefaultAndTheme: function (option, ecModel) {\n        var layoutMode = this.layoutMode;\n        var inputPositionParams = layoutMode ? getLayoutParams(option) : {};\n        var themeModel = ecModel.getTheme();\n        zrUtil.merge(option, themeModel.get(axisType + 'Axis'));\n        zrUtil.merge(option, this.getDefaultOption());\n        option.type = axisTypeDefaulter(axisName, option);\n\n        if (layoutMode) {\n          mergeLayoutParam(option, inputPositionParams, layoutMode);\n        }\n      },\n      defaultOption: zrUtil.mergeAll([{}, axisDefault[axisType + 'Axis'], extraDefaultOption], true)\n    });\n  });\n  ComponentModel.registerSubTypeDefaulter(axisName + 'Axis', zrUtil.curry(axisTypeDefaulter, axisName));\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1704:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1479);\n\nvar Axis = __webpack_require__(1610);\n\n/**\n * Extend axis 2d\n * @constructor module:echarts/coord/cartesian/Axis2D\n * @extends {module:echarts/coord/cartesian/Axis}\n * @param {string} dim\n * @param {*} scale\n * @param {Array.<number>} coordExtent\n * @param {string} axisType\n * @param {string} position\n */\nvar Axis2D = function (dim, scale, coordExtent, axisType, position) {\n  Axis.call(this, dim, scale, coordExtent);\n  /**\n   * Axis type\n   *  - 'category'\n   *  - 'value'\n   *  - 'time'\n   *  - 'log'\n   * @type {string}\n   */\n\n  this.type = axisType || 'value';\n  /**\n   * Axis position\n   *  - 'top'\n   *  - 'bottom'\n   *  - 'left'\n   *  - 'right'\n   */\n\n  this.position = position || 'bottom';\n};\n\nAxis2D.prototype = {\n  constructor: Axis2D,\n\n  /**\n   * Index of axis, can be used as key\n   */\n  index: 0,\n\n  /**\n   * If axis is on the zero position of the other axis\n   * @type {boolean}\n   */\n  onZero: false,\n\n  /**\n   * Axis model\n   * @param {module:echarts/coord/cartesian/AxisModel}\n   */\n  model: null,\n  isHorizontal: function () {\n    var position = this.position;\n    return position === 'top' || position === 'bottom';\n  },\n\n  /**\n   * Each item cooresponds to this.getExtent(), which\n   * means globalExtent[0] may greater than globalExtent[1],\n   * unless `asc` is input.\n   *\n   * @param {boolean} [asc]\n   * @return {Array.<number>}\n   */\n  getGlobalExtent: function (asc) {\n    var ret = this.getExtent();\n    ret[0] = this.toGlobalCoord(ret[0]);\n    ret[1] = this.toGlobalCoord(ret[1]);\n    asc && ret[0] > ret[1] && ret.reverse();\n    return ret;\n  },\n  getOtherAxis: function () {\n    this.grid.getOtherAxis();\n  },\n\n  /**\n   * If label is ignored.\n   * Automatically used when axis is category and label can not be all shown\n   * @param  {number}  idx\n   * @return {boolean}\n   */\n  isLabelIgnored: function (idx) {\n    if (this.type === 'category') {\n      var labelInterval = this.getLabelInterval();\n      return typeof labelInterval === 'function' && !labelInterval(idx, this.scale.getLabel(idx)) || idx % (labelInterval + 1);\n    }\n  },\n\n  /**\n   * @override\n   */\n  pointToData: function (point, clamp) {\n    return this.coordToData(this.toLocalCoord(point[this.dim === 'x' ? 0 : 1]), clamp);\n  },\n\n  /**\n   * Transform global coord to local coord,\n   * i.e. var localCoord = axis.toLocalCoord(80);\n   * designate by module:echarts/coord/cartesian/Grid.\n   * @type {Function}\n   */\n  toLocalCoord: null,\n\n  /**\n   * Transform global coord to local coord,\n   * i.e. var globalCoord = axis.toLocalCoord(40);\n   * designate by module:echarts/coord/cartesian/Grid.\n   * @type {Function}\n   */\n  toGlobalCoord: null\n};\nzrUtil.inherits(Axis2D, Axis);\nvar _default = Axis2D;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1705:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1479);\n\n/**\n * Cartesian coordinate system\n * @module  echarts/coord/Cartesian\n *\n */\nfunction dimAxisMapper(dim) {\n  return this._axes[dim];\n}\n/**\n * @alias module:echarts/coord/Cartesian\n * @constructor\n */\n\n\nvar Cartesian = function (name) {\n  this._axes = {};\n  this._dimList = [];\n  /**\n   * @type {string}\n   */\n\n  this.name = name || '';\n};\n\nCartesian.prototype = {\n  constructor: Cartesian,\n  type: 'cartesian',\n\n  /**\n   * Get axis\n   * @param  {number|string} dim\n   * @return {module:echarts/coord/Cartesian~Axis}\n   */\n  getAxis: function (dim) {\n    return this._axes[dim];\n  },\n\n  /**\n   * Get axes list\n   * @return {Array.<module:echarts/coord/Cartesian~Axis>}\n   */\n  getAxes: function () {\n    return zrUtil.map(this._dimList, dimAxisMapper, this);\n  },\n\n  /**\n   * Get axes list by given scale type\n   */\n  getAxesByScale: function (scaleType) {\n    scaleType = scaleType.toLowerCase();\n    return zrUtil.filter(this.getAxes(), function (axis) {\n      return axis.scale.type === scaleType;\n    });\n  },\n\n  /**\n   * Add axis\n   * @param {module:echarts/coord/Cartesian.Axis}\n   */\n  addAxis: function (axis) {\n    var dim = axis.dim;\n    this._axes[dim] = axis;\n\n    this._dimList.push(dim);\n  },\n\n  /**\n   * Convert data to coord in nd space\n   * @param {Array.<number>|Object.<string, number>} val\n   * @return {Array.<number>|Object.<string, number>}\n   */\n  dataToCoord: function (val) {\n    return this._dataCoordConvert(val, 'dataToCoord');\n  },\n\n  /**\n   * Convert coord in nd space to data\n   * @param  {Array.<number>|Object.<string, number>} val\n   * @return {Array.<number>|Object.<string, number>}\n   */\n  coordToData: function (val) {\n    return this._dataCoordConvert(val, 'coordToData');\n  },\n  _dataCoordConvert: function (input, method) {\n    var dimList = this._dimList;\n    var output = input instanceof Array ? [] : {};\n\n    for (var i = 0; i < dimList.length; i++) {\n      var dim = dimList[i];\n      var axis = this._axes[dim];\n      output[dim] = axis[method](input[dim]);\n    }\n\n    return output;\n  }\n};\nvar _default = Cartesian;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1706:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1479);\n\nvar Cartesian = __webpack_require__(1705);\n\nfunction Cartesian2D(name) {\n  Cartesian.call(this, name);\n}\n\nCartesian2D.prototype = {\n  constructor: Cartesian2D,\n  type: 'cartesian2d',\n\n  /**\n   * @type {Array.<string>}\n   * @readOnly\n   */\n  dimensions: ['x', 'y'],\n\n  /**\n   * Base axis will be used on stacking.\n   *\n   * @return {module:echarts/coord/cartesian/Axis2D}\n   */\n  getBaseAxis: function () {\n    return this.getAxesByScale('ordinal')[0] || this.getAxesByScale('time')[0] || this.getAxis('x');\n  },\n\n  /**\n   * If contain point\n   * @param {Array.<number>} point\n   * @return {boolean}\n   */\n  containPoint: function (point) {\n    var axisX = this.getAxis('x');\n    var axisY = this.getAxis('y');\n    return axisX.contain(axisX.toLocalCoord(point[0])) && axisY.contain(axisY.toLocalCoord(point[1]));\n  },\n\n  /**\n   * If contain data\n   * @param {Array.<number>} data\n   * @return {boolean}\n   */\n  containData: function (data) {\n    return this.getAxis('x').containData(data[0]) && this.getAxis('y').containData(data[1]);\n  },\n\n  /**\n   * @param {Array.<number>} data\n   * @param {boolean} [clamp=false]\n   * @return {Array.<number>}\n   */\n  dataToPoint: function (data, clamp) {\n    var xAxis = this.getAxis('x');\n    var yAxis = this.getAxis('y');\n    return [xAxis.toGlobalCoord(xAxis.dataToCoord(data[0], clamp)), yAxis.toGlobalCoord(yAxis.dataToCoord(data[1], clamp))];\n  },\n\n  /**\n   * @param {Array.<number>} point\n   * @param {boolean} [clamp=false]\n   * @return {Array.<number>}\n   */\n  pointToData: function (point, clamp) {\n    var xAxis = this.getAxis('x');\n    var yAxis = this.getAxis('y');\n    return [xAxis.coordToData(xAxis.toLocalCoord(point[0]), clamp), yAxis.coordToData(yAxis.toLocalCoord(point[1]), clamp)];\n  },\n\n  /**\n   * Get other axis\n   * @param {module:echarts/coord/cartesian/Axis2D} axis\n   */\n  getOtherAxis: function (axis) {\n    return this.getAxis(axis.dim === 'x' ? 'y' : 'x');\n  }\n};\nzrUtil.inherits(Cartesian2D, Cartesian);\nvar _default = Cartesian2D;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1707:\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(1612);\n\nvar ComponentModel = __webpack_require__(1508);\n\n// Grid 是在有直角坐标系的时候必须要存在的\n// 所以这里也要被 Cartesian2D 依赖\nvar _default = ComponentModel.extend({\n  type: 'grid',\n  dependencies: ['xAxis', 'yAxis'],\n  layoutMode: 'box',\n\n  /**\n   * @type {module:echarts/coord/cartesian/Grid}\n   */\n  coordinateSystem: null,\n  defaultOption: {\n    show: false,\n    zlevel: 0,\n    z: 0,\n    left: '10%',\n    top: 60,\n    right: '10%',\n    bottom: 60,\n    // If grid size contain label\n    containLabel: false,\n    // width: {totalWidth} - left - right,\n    // height: {totalHeight} - top - bottom,\n    backgroundColor: 'rgba(0,0,0,0)',\n    borderWidth: 1,\n    borderColor: '#ccc'\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1708:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar BoundingRect = __webpack_require__(1497);\n\nvar bbox = __webpack_require__(1639);\n\nvar vec2 = __webpack_require__(1485);\n\nvar polygonContain = __webpack_require__(1768);\n\n/**\n * @module echarts/coord/geo/Region\n */\n\n/**\n * @param {string} name\n * @param {Array} geometries\n * @param {Array.<number>} cp\n */\nfunction Region(name, geometries, cp) {\n  /**\n   * @type {string}\n   * @readOnly\n   */\n  this.name = name;\n  /**\n   * @type {Array.<Array>}\n   * @readOnly\n   */\n\n  this.geometries = geometries;\n\n  if (!cp) {\n    var rect = this.getBoundingRect();\n    cp = [rect.x + rect.width / 2, rect.y + rect.height / 2];\n  } else {\n    cp = [cp[0], cp[1]];\n  }\n  /**\n   * @type {Array.<number>}\n   */\n\n\n  this.center = cp;\n}\n\nRegion.prototype = {\n  constructor: Region,\n  properties: null,\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getBoundingRect: function () {\n    var rect = this._rect;\n\n    if (rect) {\n      return rect;\n    }\n\n    var MAX_NUMBER = Number.MAX_VALUE;\n    var min = [MAX_NUMBER, MAX_NUMBER];\n    var max = [-MAX_NUMBER, -MAX_NUMBER];\n    var min2 = [];\n    var max2 = [];\n    var geometries = this.geometries;\n\n    for (var i = 0; i < geometries.length; i++) {\n      // Only support polygon\n      if (geometries[i].type !== 'polygon') {\n        continue;\n      } // Doesn't consider hole\n\n\n      var exterior = geometries[i].exterior;\n      bbox.fromPoints(exterior, min2, max2);\n      vec2.min(min, min, min2);\n      vec2.max(max, max, max2);\n    } // No data\n\n\n    if (i === 0) {\n      min[0] = min[1] = max[0] = max[1] = 0;\n    }\n\n    return this._rect = new BoundingRect(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n  },\n\n  /**\n   * @param {<Array.<number>} coord\n   * @return {boolean}\n   */\n  contain: function (coord) {\n    var rect = this.getBoundingRect();\n    var geometries = this.geometries;\n\n    if (!rect.contain(coord[0], coord[1])) {\n      return false;\n    }\n\n    loopGeo: for (var i = 0, len = geometries.length; i < len; i++) {\n      // Only support polygon.\n      if (geometries[i].type !== 'polygon') {\n        continue;\n      }\n\n      var exterior = geometries[i].exterior;\n      var interiors = geometries[i].interiors;\n\n      if (polygonContain.contain(exterior, coord[0], coord[1])) {\n        // Not in the region if point is in the hole.\n        for (var k = 0; k < (interiors ? interiors.length : 0); k++) {\n          if (polygonContain.contain(interiors[k])) {\n            continue loopGeo;\n          }\n        }\n\n        return true;\n      }\n    }\n\n    return false;\n  },\n  transformTo: function (x, y, width, height) {\n    var rect = this.getBoundingRect();\n    var aspect = rect.width / rect.height;\n\n    if (!width) {\n      width = aspect * height;\n    } else if (!height) {\n      height = width / aspect;\n    }\n\n    var target = new BoundingRect(x, y, width, height);\n    var transform = rect.calculateTransform(target);\n    var geometries = this.geometries;\n\n    for (var i = 0; i < geometries.length; i++) {\n      // Only support polygon.\n      if (geometries[i].type !== 'polygon') {\n        continue;\n      }\n\n      var exterior = geometries[i].exterior;\n      var interiors = geometries[i].interiors;\n\n      for (var p = 0; p < exterior.length; p++) {\n        vec2.applyTransform(exterior[p], exterior[p], transform);\n      }\n\n      for (var h = 0; h < (interiors ? interiors.length : 0); h++) {\n        for (var p = 0; p < interiors[h].length; p++) {\n          vec2.applyTransform(interiors[h][p], interiors[h][p], transform);\n        }\n      }\n    }\n\n    rect = this._rect;\n    rect.copy(target); // Update center\n\n    this.center = [rect.x + rect.width / 2, rect.y + rect.height / 2];\n  }\n};\nvar _default = Region;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1709:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1479);\n\nvar Region = __webpack_require__(1708);\n\n/**\n * Parse and decode geo json\n * @module echarts/coord/geo/parseGeoJson\n */\nfunction decode(json) {\n  if (!json.UTF8Encoding) {\n    return json;\n  }\n\n  var encodeScale = json.UTF8Scale;\n\n  if (encodeScale == null) {\n    encodeScale = 1024;\n  }\n\n  var features = json.features;\n\n  for (var f = 0; f < features.length; f++) {\n    var feature = features[f];\n    var geometry = feature.geometry;\n    var coordinates = geometry.coordinates;\n    var encodeOffsets = geometry.encodeOffsets;\n\n    for (var c = 0; c < coordinates.length; c++) {\n      var coordinate = coordinates[c];\n\n      if (geometry.type === 'Polygon') {\n        coordinates[c] = decodePolygon(coordinate, encodeOffsets[c], encodeScale);\n      } else if (geometry.type === 'MultiPolygon') {\n        for (var c2 = 0; c2 < coordinate.length; c2++) {\n          var polygon = coordinate[c2];\n          coordinate[c2] = decodePolygon(polygon, encodeOffsets[c][c2], encodeScale);\n        }\n      }\n    }\n  } // Has been decoded\n\n\n  json.UTF8Encoding = false;\n  return json;\n}\n\nfunction decodePolygon(coordinate, encodeOffsets, encodeScale) {\n  var result = [];\n  var prevX = encodeOffsets[0];\n  var prevY = encodeOffsets[1];\n\n  for (var i = 0; i < coordinate.length; i += 2) {\n    var x = coordinate.charCodeAt(i) - 64;\n    var y = coordinate.charCodeAt(i + 1) - 64; // ZigZag decoding\n\n    x = x >> 1 ^ -(x & 1);\n    y = y >> 1 ^ -(y & 1); // Delta deocding\n\n    x += prevX;\n    y += prevY;\n    prevX = x;\n    prevY = y; // Dequantize\n\n    result.push([x / encodeScale, y / encodeScale]);\n  }\n\n  return result;\n}\n/**\n * @alias module:echarts/coord/geo/parseGeoJson\n * @param {Object} geoJson\n * @return {module:zrender/container/Group}\n */\n\n\nfunction _default(geoJson) {\n  decode(geoJson);\n  return zrUtil.map(zrUtil.filter(geoJson.features, function (featureObj) {\n    // Output of mapshaper may have geometry null\n    return featureObj.geometry && featureObj.properties && featureObj.geometry.coordinates.length > 0;\n  }), function (featureObj) {\n    var properties = featureObj.properties;\n    var geo = featureObj.geometry;\n    var coordinates = geo.coordinates;\n    var geometries = [];\n\n    if (geo.type === 'Polygon') {\n      geometries.push({\n        type: 'polygon',\n        // According to the GeoJSON specification.\n        // First must be exterior, and the rest are all interior(holes).\n        exterior: coordinates[0],\n        interiors: coordinates.slice(1)\n      });\n    }\n\n    if (geo.type === 'MultiPolygon') {\n      zrUtil.each(coordinates, function (item) {\n        if (item[0]) {\n          geometries.push({\n            type: 'polygon',\n            exterior: item[0],\n            interiors: item.slice(1)\n          });\n        }\n      });\n    }\n\n    var region = new Region(properties.name, geometries, properties.cp);\n    region.properties = properties;\n    return region;\n  });\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1710:\n/***/ (function(module, exports) {\n\nfunction defaultKeyGetter(item) {\n  return item;\n}\n/**\n * @param {Array} oldArr\n * @param {Array} newArr\n * @param {Function} oldKeyGetter\n * @param {Function} newKeyGetter\n * @param {Object} [context] Can be visited by this.context in callback.\n */\n\n\nfunction DataDiffer(oldArr, newArr, oldKeyGetter, newKeyGetter, context) {\n  this._old = oldArr;\n  this._new = newArr;\n  this._oldKeyGetter = oldKeyGetter || defaultKeyGetter;\n  this._newKeyGetter = newKeyGetter || defaultKeyGetter;\n  this.context = context;\n}\n\nDataDiffer.prototype = {\n  constructor: DataDiffer,\n\n  /**\n   * Callback function when add a data\n   */\n  add: function (func) {\n    this._add = func;\n    return this;\n  },\n\n  /**\n   * Callback function when update a data\n   */\n  update: function (func) {\n    this._update = func;\n    return this;\n  },\n\n  /**\n   * Callback function when remove a data\n   */\n  remove: function (func) {\n    this._remove = func;\n    return this;\n  },\n  execute: function () {\n    var oldArr = this._old;\n    var newArr = this._new;\n    var oldDataIndexMap = {};\n    var newDataIndexMap = {};\n    var oldDataKeyArr = [];\n    var newDataKeyArr = [];\n    var i;\n    initIndexMap(oldArr, oldDataIndexMap, oldDataKeyArr, '_oldKeyGetter', this);\n    initIndexMap(newArr, newDataIndexMap, newDataKeyArr, '_newKeyGetter', this); // Travel by inverted order to make sure order consistency\n    // when duplicate keys exists (consider newDataIndex.pop() below).\n    // For performance consideration, these code below do not look neat.\n\n    for (i = 0; i < oldArr.length; i++) {\n      var key = oldDataKeyArr[i];\n      var idx = newDataIndexMap[key]; // idx can never be empty array here. see 'set null' logic below.\n\n      if (idx != null) {\n        // Consider there is duplicate key (for example, use dataItem.name as key).\n        // We should make sure every item in newArr and oldArr can be visited.\n        var len = idx.length;\n\n        if (len) {\n          len === 1 && (newDataIndexMap[key] = null);\n          idx = idx.unshift();\n        } else {\n          newDataIndexMap[key] = null;\n        }\n\n        this._update && this._update(idx, i);\n      } else {\n        this._remove && this._remove(i);\n      }\n    }\n\n    for (var i = 0; i < newDataKeyArr.length; i++) {\n      var key = newDataKeyArr[i];\n\n      if (newDataIndexMap.hasOwnProperty(key)) {\n        var idx = newDataIndexMap[key];\n\n        if (idx == null) {\n          continue;\n        } // idx can never be empty array here. see 'set null' logic above.\n\n\n        if (!idx.length) {\n          this._add && this._add(idx);\n        } else {\n          for (var j = 0, len = idx.length; j < len; j++) {\n            this._add && this._add(idx[j]);\n          }\n        }\n      }\n    }\n  }\n};\n\nfunction initIndexMap(arr, map, keyArr, keyGetterName, dataDiffer) {\n  for (var i = 0; i < arr.length; i++) {\n    // Add prefix to avoid conflict with Object.prototype.\n    var key = '_ec_' + dataDiffer[keyGetterName](arr[i], i);\n    var existence = map[key];\n\n    if (existence == null) {\n      keyArr.push(key);\n      map[key] = i;\n    } else {\n      if (!existence.length) {\n        map[key] = existence = [existence];\n      }\n\n      existence.push(i);\n    }\n  }\n}\n\nvar _default = DataDiffer;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1711:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrender = __webpack_require__(1650);\n\nexports.zrender = zrender;\n\nvar matrix = __webpack_require__(1525);\n\nexports.matrix = matrix;\n\nvar vector = __webpack_require__(1485);\n\nexports.vector = vector;\n\nvar zrUtil = __webpack_require__(1479);\n\nvar colorTool = __webpack_require__(1533);\n\nexports.color = colorTool;\n\nvar graphic = __webpack_require__(1483);\n\nexports.graphic = graphic;\n\nvar numberUtil = __webpack_require__(1486);\n\nexports.number = numberUtil;\n\nvar formatUtil = __webpack_require__(1499);\n\nexports.format = formatUtil;\n\nvar _throttle = __webpack_require__(1570);\n\nvar throttle = _throttle.throttle;\nexports.throttle = _throttle.throttle;\n\nvar ecHelper = __webpack_require__(1712);\n\nexports.helper = ecHelper;\n\nvar _List = __webpack_require__(1614);\n\nexports.List = _List;\n\nvar _Model = __webpack_require__(1498);\n\nexports.Model = _Model;\n\nvar _Axis = __webpack_require__(1610);\n\nexports.Axis = _Axis;\n\nvar _env = __webpack_require__(1495);\n\nexports.env = _env;\n\nvar _parseGeoJson = __webpack_require__(1709);\n\nexports.parseGeoJson = _parseGeoJson;\n\n/**\n * Do not mount those modules on 'src/echarts' for better tree shaking.\n */\nvar ecUtil = {};\nzrUtil.each(['map', 'each', 'filter', 'indexOf', 'inherits', 'reduce', 'filter', 'bind', 'curry', 'isArray', 'isString', 'isObject', 'isFunction', 'extend', 'defaults', 'clone', 'merge'], function (name) {\n  ecUtil[name] = zrUtil[name];\n});\nexports.util = ecUtil;\n\n/***/ }),\n\n/***/ 1712:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1479);\n\nvar createListFromArray = __webpack_require__(1565);\n\nvar axisHelper = __webpack_require__(1516);\n\nvar axisModelCommonMixin = __webpack_require__(1611);\n\nvar Model = __webpack_require__(1498);\n\nvar _completeDimensions = __webpack_require__(1615);\n\nexports.completeDimensions = _completeDimensions;\n\nvar _symbol = __webpack_require__(1569);\n\nexports.createSymbol = _symbol.createSymbol;\n\n/**\n * Create a muti dimension List structure from seriesModel.\n * @param  {module:echarts/model/Model} seriesModel\n * @return {module:echarts/data/List} list\n */\nfunction createList(seriesModel) {\n  var data = seriesModel.get('data');\n  return createListFromArray(data, seriesModel, seriesModel.ecModel);\n}\n/**\n * @see {module:echarts/data/helper/completeDimensions}\n */\n\n\n/**\n * Create scale\n * @param {Array.<number>} dataExtent\n * @param {Object|module:echarts/Model} option\n */\nfunction createScale(dataExtent, option) {\n  var axisModel = option;\n\n  if (!(option instanceof Model)) {\n    axisModel = new Model(option);\n    zrUtil.mixin(axisModel, axisModelCommonMixin);\n  }\n\n  var scale = axisHelper.createScaleByModel(axisModel);\n  scale.setExtent(dataExtent[0], dataExtent[1]);\n  axisHelper.niceScaleExtent(scale, axisModel);\n  return scale;\n}\n/**\n * Mixin common methods to axis model,\n *\n * Inlcude methods\n * `getFormattedLabels() => Array.<string>`\n * `getCategories() => Array.<string>`\n * `getMin(origin: boolean) => number`\n * `getMax(origin: boolean) => number`\n * `getNeedCrossZero() => boolean`\n * `setRange(start: number, end: number)`\n * `resetRange()`\n */\n\n\nfunction mixinAxisModelCommonMethods(Model) {\n  zrUtil.mixin(Model, axisModelCommonMixin);\n}\n\nexports.createList = createList;\nexports.createScale = createScale;\nexports.mixinAxisModelCommonMethods = mixinAxisModelCommonMethods;\n\n/***/ }),\n\n/***/ 1713:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1479);\n\nvar _number = __webpack_require__(1486);\n\nvar parsePercent = _number.parsePercent;\nvar STACK_PREFIX = '__ec_stack_';\n\nfunction getSeriesStackId(seriesModel) {\n  return seriesModel.get('stack') || STACK_PREFIX + seriesModel.seriesIndex;\n}\n\nfunction getAxisKey(axis) {\n  return axis.dim + axis.index;\n}\n/**\n * @param {Object} opt\n * @param {module:echarts/coord/Axis} opt.axis Only support category axis currently.\n * @param {number} opt.count Positive interger.\n * @param {number} [opt.barWidth]\n * @param {number} [opt.barMaxWidth]\n * @param {number} [opt.barGap]\n * @param {number} [opt.barCategoryGap]\n * @return {Object} {width, offset, offsetCenter} If axis.type is not 'category', return undefined.\n */\n\n\nfunction getLayoutOnAxis(opt, api) {\n  var params = [];\n  var baseAxis = opt.axis;\n  var axisKey = 'axis0';\n\n  if (baseAxis.type !== 'category') {\n    return;\n  }\n\n  var bandWidth = baseAxis.getBandWidth();\n\n  for (var i = 0; i < opt.count || 0; i++) {\n    params.push(zrUtil.defaults({\n      bandWidth: bandWidth,\n      axisKey: axisKey,\n      stackId: STACK_PREFIX + i\n    }, opt));\n  }\n\n  var widthAndOffsets = doCalBarWidthAndOffset(params, api);\n  var result = [];\n\n  for (var i = 0; i < opt.count; i++) {\n    var item = widthAndOffsets[axisKey][STACK_PREFIX + i];\n    item.offsetCenter = item.offset + item.width / 2;\n    result.push(item);\n  }\n\n  return result;\n}\n\nfunction calBarWidthAndOffset(barSeries, api) {\n  var seriesInfoList = zrUtil.map(barSeries, function (seriesModel) {\n    var data = seriesModel.getData();\n    var cartesian = seriesModel.coordinateSystem;\n    var baseAxis = cartesian.getBaseAxis();\n    var axisExtent = baseAxis.getExtent();\n    var bandWidth = baseAxis.type === 'category' ? baseAxis.getBandWidth() : Math.abs(axisExtent[1] - axisExtent[0]) / data.count();\n    var barWidth = parsePercent(seriesModel.get('barWidth'), bandWidth);\n    var barMaxWidth = parsePercent(seriesModel.get('barMaxWidth'), bandWidth);\n    var barGap = seriesModel.get('barGap');\n    var barCategoryGap = seriesModel.get('barCategoryGap');\n    return {\n      bandWidth: bandWidth,\n      barWidth: barWidth,\n      barMaxWidth: barMaxWidth,\n      barGap: barGap,\n      barCategoryGap: barCategoryGap,\n      axisKey: getAxisKey(baseAxis),\n      stackId: getSeriesStackId(seriesModel)\n    };\n  });\n  return doCalBarWidthAndOffset(seriesInfoList, api);\n}\n\nfunction doCalBarWidthAndOffset(seriesInfoList, api) {\n  // Columns info on each category axis. Key is cartesian name\n  var columnsMap = {};\n  zrUtil.each(seriesInfoList, function (seriesInfo, idx) {\n    var axisKey = seriesInfo.axisKey;\n    var bandWidth = seriesInfo.bandWidth;\n    var columnsOnAxis = columnsMap[axisKey] || {\n      bandWidth: bandWidth,\n      remainedWidth: bandWidth,\n      autoWidthCount: 0,\n      categoryGap: '20%',\n      gap: '30%',\n      stacks: {}\n    };\n    var stacks = columnsOnAxis.stacks;\n    columnsMap[axisKey] = columnsOnAxis;\n    var stackId = seriesInfo.stackId;\n\n    if (!stacks[stackId]) {\n      columnsOnAxis.autoWidthCount++;\n    }\n\n    stacks[stackId] = stacks[stackId] || {\n      width: 0,\n      maxWidth: 0\n    }; // Caution: In a single coordinate system, these barGrid attributes\n    // will be shared by series. Consider that they have default values,\n    // only the attributes set on the last series will work.\n    // Do not change this fact unless there will be a break change.\n    // TODO\n\n    var barWidth = seriesInfo.barWidth;\n\n    if (barWidth && !stacks[stackId].width) {\n      // See #6312, do not restrict width.\n      stacks[stackId].width = barWidth;\n      barWidth = Math.min(columnsOnAxis.remainedWidth, barWidth);\n      columnsOnAxis.remainedWidth -= barWidth;\n    }\n\n    var barMaxWidth = seriesInfo.barMaxWidth;\n    barMaxWidth && (stacks[stackId].maxWidth = barMaxWidth);\n    var barGap = seriesInfo.barGap;\n    barGap != null && (columnsOnAxis.gap = barGap);\n    var barCategoryGap = seriesInfo.barCategoryGap;\n    barCategoryGap != null && (columnsOnAxis.categoryGap = barCategoryGap);\n  });\n  var result = {};\n  zrUtil.each(columnsMap, function (columnsOnAxis, coordSysName) {\n    result[coordSysName] = {};\n    var stacks = columnsOnAxis.stacks;\n    var bandWidth = columnsOnAxis.bandWidth;\n    var categoryGap = parsePercent(columnsOnAxis.categoryGap, bandWidth);\n    var barGapPercent = parsePercent(columnsOnAxis.gap, 1);\n    var remainedWidth = columnsOnAxis.remainedWidth;\n    var autoWidthCount = columnsOnAxis.autoWidthCount;\n    var autoWidth = (remainedWidth - categoryGap) / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\n    autoWidth = Math.max(autoWidth, 0); // Find if any auto calculated bar exceeded maxBarWidth\n\n    zrUtil.each(stacks, function (column, stack) {\n      var maxWidth = column.maxWidth;\n\n      if (maxWidth && maxWidth < autoWidth) {\n        maxWidth = Math.min(maxWidth, remainedWidth);\n\n        if (column.width) {\n          maxWidth = Math.min(maxWidth, column.width);\n        }\n\n        remainedWidth -= maxWidth;\n        column.width = maxWidth;\n        autoWidthCount--;\n      }\n    }); // Recalculate width again\n\n    autoWidth = (remainedWidth - categoryGap) / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\n    autoWidth = Math.max(autoWidth, 0);\n    var widthSum = 0;\n    var lastColumn;\n    zrUtil.each(stacks, function (column, idx) {\n      if (!column.width) {\n        column.width = autoWidth;\n      }\n\n      lastColumn = column;\n      widthSum += column.width * (1 + barGapPercent);\n    });\n\n    if (lastColumn) {\n      widthSum -= lastColumn.width * barGapPercent;\n    }\n\n    var offset = -widthSum / 2;\n    zrUtil.each(stacks, function (column, stackId) {\n      result[coordSysName][stackId] = result[coordSysName][stackId] || {\n        offset: offset,\n        width: column.width\n      };\n      offset += column.width * (1 + barGapPercent);\n    });\n  });\n  return result;\n}\n/**\n * @param {string} seriesType\n * @param {module:echarts/model/Global} ecModel\n * @param {module:echarts/ExtensionAPI} api\n */\n\n\nfunction barLayoutGrid(seriesType, ecModel, api) {\n  var barWidthAndOffset = calBarWidthAndOffset(zrUtil.filter(ecModel.getSeriesByType(seriesType), function (seriesModel) {\n    return !ecModel.isSeriesFiltered(seriesModel) && seriesModel.coordinateSystem && seriesModel.coordinateSystem.type === 'cartesian2d';\n  }));\n  var lastStackCoords = {};\n  var lastStackCoordsOrigin = {};\n  ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n    // Check series coordinate, do layout for cartesian2d only\n    if (seriesModel.coordinateSystem.type !== 'cartesian2d') {\n      return;\n    }\n\n    var data = seriesModel.getData();\n    var cartesian = seriesModel.coordinateSystem;\n    var baseAxis = cartesian.getBaseAxis();\n    var stackId = getSeriesStackId(seriesModel);\n    var columnLayoutInfo = barWidthAndOffset[getAxisKey(baseAxis)][stackId];\n    var columnOffset = columnLayoutInfo.offset;\n    var columnWidth = columnLayoutInfo.width;\n    var valueAxis = cartesian.getOtherAxis(baseAxis);\n    var barMinHeight = seriesModel.get('barMinHeight') || 0;\n    var valueAxisStart = baseAxis.onZero ? valueAxis.toGlobalCoord(valueAxis.dataToCoord(0)) : valueAxis.getGlobalExtent()[0];\n    var coordDims = [seriesModel.coordDimToDataDim('x')[0], seriesModel.coordDimToDataDim('y')[0]];\n    var coords = data.mapArray(coordDims, function (x, y) {\n      return cartesian.dataToPoint([x, y]);\n    }, true);\n    lastStackCoords[stackId] = lastStackCoords[stackId] || [];\n    lastStackCoordsOrigin[stackId] = lastStackCoordsOrigin[stackId] || []; // Fix #4243\n\n    data.setLayout({\n      offset: columnOffset,\n      size: columnWidth\n    });\n    data.each(seriesModel.coordDimToDataDim(valueAxis.dim)[0], function (value, idx) {\n      if (isNaN(value)) {\n        return;\n      }\n\n      if (!lastStackCoords[stackId][idx]) {\n        lastStackCoords[stackId][idx] = {\n          p: valueAxisStart,\n          // Positive stack\n          n: valueAxisStart // Negative stack\n\n        };\n        lastStackCoordsOrigin[stackId][idx] = {\n          p: valueAxisStart,\n          // Positive stack\n          n: valueAxisStart // Negative stack\n\n        };\n      }\n\n      var sign = value >= 0 ? 'p' : 'n';\n      var coord = coords[idx];\n      var lastCoord = lastStackCoords[stackId][idx][sign];\n      var lastCoordOrigin = lastStackCoordsOrigin[stackId][idx][sign];\n      var x;\n      var y;\n      var width;\n      var height;\n\n      if (valueAxis.isHorizontal()) {\n        x = lastCoord;\n        y = coord[1] + columnOffset;\n        width = coord[0] - lastCoordOrigin;\n        height = columnWidth;\n        lastStackCoordsOrigin[stackId][idx][sign] += width;\n\n        if (Math.abs(width) < barMinHeight) {\n          width = (width < 0 ? -1 : 1) * barMinHeight;\n        }\n\n        lastStackCoords[stackId][idx][sign] += width;\n      } else {\n        x = coord[0] + columnOffset;\n        y = lastCoord;\n        width = columnWidth;\n        height = coord[1] - lastCoordOrigin;\n        lastStackCoordsOrigin[stackId][idx][sign] += height;\n\n        if (Math.abs(height) < barMinHeight) {\n          // Include zero to has a positive bar\n          height = (height <= 0 ? -1 : 1) * barMinHeight;\n        }\n\n        lastStackCoords[stackId][idx][sign] += height;\n      }\n\n      data.setItemLayout(idx, {\n        x: x,\n        y: y,\n        width: width,\n        height: height\n      });\n    }, true);\n  }, this);\n}\n\nbarLayoutGrid.getLayoutOnAxis = getLayoutOnAxis;\nvar _default = barLayoutGrid;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1714:\n/***/ (function(module, exports) {\n\nfunction _default(seriesType, ecModel) {\n  ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n    var data = seriesModel.getData();\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (!coordSys) {\n      return;\n    }\n\n    var dims = [];\n    var coordDims = coordSys.dimensions;\n\n    for (var i = 0; i < coordDims.length; i++) {\n      dims.push(seriesModel.coordDimToDataDim(coordSys.dimensions[i])[0]);\n    }\n\n    if (dims.length === 1) {\n      data.each(dims[0], function (x, idx) {\n        // Also {Array.<number>}, not undefined to avoid if...else... statement\n        data.setItemLayout(idx, isNaN(x) ? [NaN, NaN] : coordSys.dataToPoint(x));\n      });\n    } else if (dims.length === 2) {\n      data.each(dims, function (x, y, idx) {\n        // Also {Array.<number>}, not undefined to avoid if...else... statement\n        data.setItemLayout(idx, isNaN(x) || isNaN(y) ? [NaN, NaN] : coordSys.dataToPoint([x, y]));\n      }, true);\n    }\n  });\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1715:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1479);\n\nvar graphic = __webpack_require__(1483);\n\nvar PI = Math.PI;\n/**\n * @param {module:echarts/ExtensionAPI} api\n * @param {Object} [opts]\n * @param {string} [opts.text]\n * @param {string} [opts.color]\n * @param {string} [opts.textColor]\n * @return {module:zrender/Element}\n */\n\nfunction _default(api, opts) {\n  opts = opts || {};\n  zrUtil.defaults(opts, {\n    text: 'loading',\n    color: '#c23531',\n    textColor: '#000',\n    maskColor: 'rgba(255, 255, 255, 0.8)',\n    zlevel: 0\n  });\n  var mask = new graphic.Rect({\n    style: {\n      fill: opts.maskColor\n    },\n    zlevel: opts.zlevel,\n    z: 10000\n  });\n  var arc = new graphic.Arc({\n    shape: {\n      startAngle: -PI / 2,\n      endAngle: -PI / 2 + 0.1,\n      r: 10\n    },\n    style: {\n      stroke: opts.color,\n      lineCap: 'round',\n      lineWidth: 5\n    },\n    zlevel: opts.zlevel,\n    z: 10001\n  });\n  var labelRect = new graphic.Rect({\n    style: {\n      fill: 'none',\n      text: opts.text,\n      textPosition: 'right',\n      textDistance: 10,\n      textFill: opts.textColor\n    },\n    zlevel: opts.zlevel,\n    z: 10001\n  });\n  arc.animateShape(true).when(1000, {\n    endAngle: PI * 3 / 2\n  }).start('circularInOut');\n  arc.animateShape(true).when(1000, {\n    startAngle: PI * 3 / 2\n  }).delay(300).start('circularInOut');\n  var group = new graphic.Group();\n  group.add(arc);\n  group.add(labelRect);\n  group.add(mask); // Inject resize\n\n  group.resize = function () {\n    var cx = api.getWidth() / 2;\n    var cy = api.getHeight() / 2;\n    arc.setShape({\n      cx: cx,\n      cy: cy\n    });\n    var r = arc.shape.r;\n    labelRect.setShape({\n      x: cx - r,\n      y: cy - r,\n      width: r * 2,\n      height: r * 2\n    });\n    mask.setShape({\n      x: 0,\n      y: 0,\n      width: api.getWidth(),\n      height: api.getHeight()\n    });\n  };\n\n  group.resize();\n  return group;\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1716:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(1494);\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = __webpack_require__(1479);\n\nvar modelUtil = __webpack_require__(1484);\n\nvar Model = __webpack_require__(1498);\n\nvar ComponentModel = __webpack_require__(1508);\n\nvar globalDefault = __webpack_require__(1718);\n\nvar colorPaletteMinin = __webpack_require__(1616);\n\n/**\n * ECharts global model\n *\n * @module {echarts/model/Global}\n */\n\n/**\n * Caution: If the mechanism should be changed some day, these cases\n * should be considered:\n *\n * (1) In `merge option` mode, if using the same option to call `setOption`\n * many times, the result should be the same (try our best to ensure that).\n * (2) In `merge option` mode, if a component has no id/name specified, it\n * will be merged by index, and the result sequence of the components is\n * consistent to the original sequence.\n * (3) `reset` feature (in toolbox). Find detailed info in comments about\n * `mergeOption` in module:echarts/model/OptionManager.\n */\nvar each = zrUtil.each;\nvar filter = zrUtil.filter;\nvar map = zrUtil.map;\nvar isArray = zrUtil.isArray;\nvar indexOf = zrUtil.indexOf;\nvar isObject = zrUtil.isObject;\nvar OPTION_INNER_KEY = '\\0_ec_inner';\n/**\n * @alias module:echarts/model/Global\n *\n * @param {Object} option\n * @param {module:echarts/model/Model} parentModel\n * @param {Object} theme\n */\n\nvar GlobalModel = Model.extend({\n  constructor: GlobalModel,\n  init: function (option, parentModel, theme, optionManager) {\n    theme = theme || {};\n    this.option = null; // Mark as not initialized.\n\n    /**\n     * @type {module:echarts/model/Model}\n     * @private\n     */\n\n    this._theme = new Model(theme);\n    /**\n     * @type {module:echarts/model/OptionManager}\n     */\n\n    this._optionManager = optionManager;\n  },\n  setOption: function (option, optionPreprocessorFuncs) {\n    zrUtil.assert(!(OPTION_INNER_KEY in option), 'please use chart.getOption()');\n\n    this._optionManager.setOption(option, optionPreprocessorFuncs);\n\n    this.resetOption(null);\n  },\n\n  /**\n   * @param {string} type null/undefined: reset all.\n   *                      'recreate': force recreate all.\n   *                      'timeline': only reset timeline option\n   *                      'media': only reset media query option\n   * @return {boolean} Whether option changed.\n   */\n  resetOption: function (type) {\n    var optionChanged = false;\n    var optionManager = this._optionManager;\n\n    if (!type || type === 'recreate') {\n      var baseOption = optionManager.mountOption(type === 'recreate');\n\n      if (!this.option || type === 'recreate') {\n        initBase.call(this, baseOption);\n      } else {\n        this.restoreData();\n        this.mergeOption(baseOption);\n      }\n\n      optionChanged = true;\n    }\n\n    if (type === 'timeline' || type === 'media') {\n      this.restoreData();\n    }\n\n    if (!type || type === 'recreate' || type === 'timeline') {\n      var timelineOption = optionManager.getTimelineOption(this);\n      timelineOption && (this.mergeOption(timelineOption), optionChanged = true);\n    }\n\n    if (!type || type === 'recreate' || type === 'media') {\n      var mediaOptions = optionManager.getMediaOption(this, this._api);\n\n      if (mediaOptions.length) {\n        each(mediaOptions, function (mediaOption) {\n          this.mergeOption(mediaOption, optionChanged = true);\n        }, this);\n      }\n    }\n\n    return optionChanged;\n  },\n\n  /**\n   * @protected\n   */\n  mergeOption: function (newOption) {\n    var option = this.option;\n    var componentsMap = this._componentsMap;\n    var newCptTypes = []; // 如果不存在对应的 component model 则直接 merge\n\n    each(newOption, function (componentOption, mainType) {\n      if (componentOption == null) {\n        return;\n      }\n\n      if (!ComponentModel.hasClass(mainType)) {\n        option[mainType] = option[mainType] == null ? zrUtil.clone(componentOption) : zrUtil.merge(option[mainType], componentOption, true);\n      } else {\n        newCptTypes.push(mainType);\n      }\n    }); // FIXME OPTION 同步是否要改回原来的\n\n    ComponentModel.topologicalTravel(newCptTypes, ComponentModel.getAllClassMainTypes(), visitComponent, this);\n    this._seriesIndices = this._seriesIndices || [];\n\n    function visitComponent(mainType, dependencies) {\n      var newCptOptionList = modelUtil.normalizeToArray(newOption[mainType]);\n      var mapResult = modelUtil.mappingToExists(componentsMap.get(mainType), newCptOptionList);\n      modelUtil.makeIdAndName(mapResult); // Set mainType and complete subType.\n\n      each(mapResult, function (item, index) {\n        var opt = item.option;\n\n        if (isObject(opt)) {\n          item.keyInfo.mainType = mainType;\n          item.keyInfo.subType = determineSubType(mainType, opt, item.exist);\n        }\n      });\n      var dependentModels = getComponentsByTypes(componentsMap, dependencies);\n      option[mainType] = [];\n      componentsMap.set(mainType, []);\n      each(mapResult, function (resultItem, index) {\n        var componentModel = resultItem.exist;\n        var newCptOption = resultItem.option;\n        zrUtil.assert(isObject(newCptOption) || componentModel, 'Empty component definition'); // Consider where is no new option and should be merged using {},\n        // see removeEdgeAndAdd in topologicalTravel and\n        // ComponentModel.getAllClassMainTypes.\n\n        if (!newCptOption) {\n          componentModel.mergeOption({}, this);\n          componentModel.optionUpdated({}, false);\n        } else {\n          var ComponentModelClass = ComponentModel.getClass(mainType, resultItem.keyInfo.subType, true);\n\n          if (componentModel && componentModel instanceof ComponentModelClass) {\n            componentModel.name = resultItem.keyInfo.name;\n            componentModel.mergeOption(newCptOption, this);\n            componentModel.optionUpdated(newCptOption, false);\n          } else {\n            // PENDING Global as parent ?\n            var extraOpt = zrUtil.extend({\n              dependentModels: dependentModels,\n              componentIndex: index\n            }, resultItem.keyInfo);\n            componentModel = new ComponentModelClass(newCptOption, this, this, extraOpt);\n            zrUtil.extend(componentModel, extraOpt);\n            componentModel.init(newCptOption, this, this, extraOpt); // Call optionUpdated after init.\n            // newCptOption has been used as componentModel.option\n            // and may be merged with theme and default, so pass null\n            // to avoid confusion.\n\n            componentModel.optionUpdated(null, true);\n          }\n        }\n\n        componentsMap.get(mainType)[index] = componentModel;\n        option[mainType][index] = componentModel.option;\n      }, this); // Backup series for filtering.\n\n      if (mainType === 'series') {\n        this._seriesIndices = createSeriesIndices(componentsMap.get('series'));\n      }\n    }\n  },\n\n  /**\n   * Get option for output (cloned option and inner info removed)\n   * @public\n   * @return {Object}\n   */\n  getOption: function () {\n    var option = zrUtil.clone(this.option);\n    each(option, function (opts, mainType) {\n      if (ComponentModel.hasClass(mainType)) {\n        var opts = modelUtil.normalizeToArray(opts);\n\n        for (var i = opts.length - 1; i >= 0; i--) {\n          // Remove options with inner id.\n          if (modelUtil.isIdInner(opts[i])) {\n            opts.splice(i, 1);\n          }\n        }\n\n        option[mainType] = opts;\n      }\n    });\n    delete option[OPTION_INNER_KEY];\n    return option;\n  },\n\n  /**\n   * @return {module:echarts/model/Model}\n   */\n  getTheme: function () {\n    return this._theme;\n  },\n\n  /**\n   * @param {string} mainType\n   * @param {number} [idx=0]\n   * @return {module:echarts/model/Component}\n   */\n  getComponent: function (mainType, idx) {\n    var list = this._componentsMap.get(mainType);\n\n    if (list) {\n      return list[idx || 0];\n    }\n  },\n\n  /**\n   * If none of index and id and name used, return all components with mainType.\n   * @param {Object} condition\n   * @param {string} condition.mainType\n   * @param {string} [condition.subType] If ignore, only query by mainType\n   * @param {number|Array.<number>} [condition.index] Either input index or id or name.\n   * @param {string|Array.<string>} [condition.id] Either input index or id or name.\n   * @param {string|Array.<string>} [condition.name] Either input index or id or name.\n   * @return {Array.<module:echarts/model/Component>}\n   */\n  queryComponents: function (condition) {\n    var mainType = condition.mainType;\n\n    if (!mainType) {\n      return [];\n    }\n\n    var index = condition.index;\n    var id = condition.id;\n    var name = condition.name;\n\n    var cpts = this._componentsMap.get(mainType);\n\n    if (!cpts || !cpts.length) {\n      return [];\n    }\n\n    var result;\n\n    if (index != null) {\n      if (!isArray(index)) {\n        index = [index];\n      }\n\n      result = filter(map(index, function (idx) {\n        return cpts[idx];\n      }), function (val) {\n        return !!val;\n      });\n    } else if (id != null) {\n      var isIdArray = isArray(id);\n      result = filter(cpts, function (cpt) {\n        return isIdArray && indexOf(id, cpt.id) >= 0 || !isIdArray && cpt.id === id;\n      });\n    } else if (name != null) {\n      var isNameArray = isArray(name);\n      result = filter(cpts, function (cpt) {\n        return isNameArray && indexOf(name, cpt.name) >= 0 || !isNameArray && cpt.name === name;\n      });\n    } else {\n      // Return all components with mainType\n      result = cpts.slice();\n    }\n\n    return filterBySubType(result, condition);\n  },\n\n  /**\n   * The interface is different from queryComponents,\n   * which is convenient for inner usage.\n   *\n   * @usage\n   * var result = findComponents(\n   *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}}\n   * );\n   * var result = findComponents(\n   *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}}\n   * );\n   * var result = findComponents(\n   *     {mainType: 'series'},\n   *     function (model, index) {...}\n   * );\n   * // result like [component0, componnet1, ...]\n   *\n   * @param {Object} condition\n   * @param {string} condition.mainType Mandatory.\n   * @param {string} [condition.subType] Optional.\n   * @param {Object} [condition.query] like {xxxIndex, xxxId, xxxName},\n   *        where xxx is mainType.\n   *        If query attribute is null/undefined or has no index/id/name,\n   *        do not filtering by query conditions, which is convenient for\n   *        no-payload situations or when target of action is global.\n   * @param {Function} [condition.filter] parameter: component, return boolean.\n   * @return {Array.<module:echarts/model/Component>}\n   */\n  findComponents: function (condition) {\n    var query = condition.query;\n    var mainType = condition.mainType;\n    var queryCond = getQueryCond(query);\n    var result = queryCond ? this.queryComponents(queryCond) : this._componentsMap.get(mainType);\n    return doFilter(filterBySubType(result, condition));\n\n    function getQueryCond(q) {\n      var indexAttr = mainType + 'Index';\n      var idAttr = mainType + 'Id';\n      var nameAttr = mainType + 'Name';\n      return q && (q[indexAttr] != null || q[idAttr] != null || q[nameAttr] != null) ? {\n        mainType: mainType,\n        // subType will be filtered finally.\n        index: q[indexAttr],\n        id: q[idAttr],\n        name: q[nameAttr]\n      } : null;\n    }\n\n    function doFilter(res) {\n      return condition.filter ? filter(res, condition.filter) : res;\n    }\n  },\n\n  /**\n   * @usage\n   * eachComponent('legend', function (legendModel, index) {\n   *     ...\n   * });\n   * eachComponent(function (componentType, model, index) {\n   *     // componentType does not include subType\n   *     // (componentType is 'xxx' but not 'xxx.aa')\n   * });\n   * eachComponent(\n   *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}},\n   *     function (model, index) {...}\n   * );\n   * eachComponent(\n   *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}},\n   *     function (model, index) {...}\n   * );\n   *\n   * @param {string|Object=} mainType When mainType is object, the definition\n   *                                  is the same as the method 'findComponents'.\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachComponent: function (mainType, cb, context) {\n    var componentsMap = this._componentsMap;\n\n    if (typeof mainType === 'function') {\n      context = cb;\n      cb = mainType;\n      componentsMap.each(function (components, componentType) {\n        each(components, function (component, index) {\n          cb.call(context, componentType, component, index);\n        });\n      });\n    } else if (zrUtil.isString(mainType)) {\n      each(componentsMap.get(mainType), cb, context);\n    } else if (isObject(mainType)) {\n      var queryResult = this.findComponents(mainType);\n      each(queryResult, cb, context);\n    }\n  },\n\n  /**\n   * @param {string} name\n   * @return {Array.<module:echarts/model/Series>}\n   */\n  getSeriesByName: function (name) {\n    var series = this._componentsMap.get('series');\n\n    return filter(series, function (oneSeries) {\n      return oneSeries.name === name;\n    });\n  },\n\n  /**\n   * @param {number} seriesIndex\n   * @return {module:echarts/model/Series}\n   */\n  getSeriesByIndex: function (seriesIndex) {\n    return this._componentsMap.get('series')[seriesIndex];\n  },\n\n  /**\n   * @param {string} subType\n   * @return {Array.<module:echarts/model/Series>}\n   */\n  getSeriesByType: function (subType) {\n    var series = this._componentsMap.get('series');\n\n    return filter(series, function (oneSeries) {\n      return oneSeries.subType === subType;\n    });\n  },\n\n  /**\n   * @return {Array.<module:echarts/model/Series>}\n   */\n  getSeries: function () {\n    return this._componentsMap.get('series').slice();\n  },\n\n  /**\n   * After filtering, series may be different\n   * frome raw series.\n   *\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachSeries: function (cb, context) {\n    assertSeriesInitialized(this);\n    each(this._seriesIndices, function (rawSeriesIndex) {\n      var series = this._componentsMap.get('series')[rawSeriesIndex];\n\n      cb.call(context, series, rawSeriesIndex);\n    }, this);\n  },\n\n  /**\n   * Iterate raw series before filtered.\n   *\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachRawSeries: function (cb, context) {\n    each(this._componentsMap.get('series'), cb, context);\n  },\n\n  /**\n   * After filtering, series may be different.\n   * frome raw series.\n   *\n   * @parma {string} subType\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachSeriesByType: function (subType, cb, context) {\n    assertSeriesInitialized(this);\n    each(this._seriesIndices, function (rawSeriesIndex) {\n      var series = this._componentsMap.get('series')[rawSeriesIndex];\n\n      if (series.subType === subType) {\n        cb.call(context, series, rawSeriesIndex);\n      }\n    }, this);\n  },\n\n  /**\n   * Iterate raw series before filtered of given type.\n   *\n   * @parma {string} subType\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachRawSeriesByType: function (subType, cb, context) {\n    return each(this.getSeriesByType(subType), cb, context);\n  },\n\n  /**\n   * @param {module:echarts/model/Series} seriesModel\n   */\n  isSeriesFiltered: function (seriesModel) {\n    assertSeriesInitialized(this);\n    return zrUtil.indexOf(this._seriesIndices, seriesModel.componentIndex) < 0;\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getCurrentSeriesIndices: function () {\n    return (this._seriesIndices || []).slice();\n  },\n\n  /**\n   * @param {Function} cb\n   * @param {*} context\n   */\n  filterSeries: function (cb, context) {\n    assertSeriesInitialized(this);\n    var filteredSeries = filter(this._componentsMap.get('series'), cb, context);\n    this._seriesIndices = createSeriesIndices(filteredSeries);\n  },\n  restoreData: function () {\n    var componentsMap = this._componentsMap;\n    this._seriesIndices = createSeriesIndices(componentsMap.get('series'));\n    var componentTypes = [];\n    componentsMap.each(function (components, componentType) {\n      componentTypes.push(componentType);\n    });\n    ComponentModel.topologicalTravel(componentTypes, ComponentModel.getAllClassMainTypes(), function (componentType, dependencies) {\n      each(componentsMap.get(componentType), function (component) {\n        component.restoreData();\n      });\n    });\n  }\n});\n/**\n * @inner\n */\n\nfunction mergeTheme(option, theme) {\n  zrUtil.each(theme, function (themeItem, name) {\n    // 如果有 component model 则把具体的 merge 逻辑交给该 model 处理\n    if (!ComponentModel.hasClass(name)) {\n      if (typeof themeItem === 'object') {\n        option[name] = !option[name] ? zrUtil.clone(themeItem) : zrUtil.merge(option[name], themeItem, false);\n      } else {\n        if (option[name] == null) {\n          option[name] = themeItem;\n        }\n      }\n    }\n  });\n}\n\nfunction initBase(baseOption) {\n  baseOption = baseOption; // Using OPTION_INNER_KEY to mark that this option can not be used outside,\n  // i.e. `chart.setOption(chart.getModel().option);` is forbiden.\n\n  this.option = {};\n  this.option[OPTION_INNER_KEY] = 1;\n  /**\n   * Init with series: [], in case of calling findSeries method\n   * before series initialized.\n   * @type {Object.<string, Array.<module:echarts/model/Model>>}\n   * @private\n   */\n\n  this._componentsMap = zrUtil.createHashMap({\n    series: []\n  });\n  /**\n   * Mapping between filtered series list and raw series list.\n   * key: filtered series indices, value: raw series indices.\n   * @type {Array.<nubmer>}\n   * @private\n   */\n\n  this._seriesIndices = null;\n  mergeTheme(baseOption, this._theme.option); // TODO Needs clone when merging to the unexisted property\n\n  zrUtil.merge(baseOption, globalDefault, false);\n  this.mergeOption(baseOption);\n}\n/**\n * @inner\n * @param {Array.<string>|string} types model types\n * @return {Object} key: {string} type, value: {Array.<Object>} models\n */\n\n\nfunction getComponentsByTypes(componentsMap, types) {\n  if (!zrUtil.isArray(types)) {\n    types = types ? [types] : [];\n  }\n\n  var ret = {};\n  each(types, function (type) {\n    ret[type] = (componentsMap.get(type) || []).slice();\n  });\n  return ret;\n}\n/**\n * @inner\n */\n\n\nfunction determineSubType(mainType, newCptOption, existComponent) {\n  var subType = newCptOption.type ? newCptOption.type : existComponent ? existComponent.subType // Use determineSubType only when there is no existComponent.\n  : ComponentModel.determineSubType(mainType, newCptOption); // tooltip, markline, markpoint may always has no subType\n\n  return subType;\n}\n/**\n * @inner\n */\n\n\nfunction createSeriesIndices(seriesModels) {\n  return map(seriesModels, function (series) {\n    return series.componentIndex;\n  }) || [];\n}\n/**\n * @inner\n */\n\n\nfunction filterBySubType(components, condition) {\n  // Using hasOwnProperty for restrict. Consider\n  // subType is undefined in user payload.\n  return condition.hasOwnProperty('subType') ? filter(components, function (cpt) {\n    return cpt.subType === condition.subType;\n  }) : components;\n}\n/**\n * @inner\n */\n\n\nfunction assertSeriesInitialized(ecModel) {}\n\nzrUtil.mixin(GlobalModel, colorPaletteMinin);\nvar _default = GlobalModel;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1717:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1479);\n\nvar modelUtil = __webpack_require__(1484);\n\nvar ComponentModel = __webpack_require__(1508);\n\n/**\n * ECharts option manager\n *\n * @module {echarts/model/OptionManager}\n */\nvar each = zrUtil.each;\nvar clone = zrUtil.clone;\nvar map = zrUtil.map;\nvar merge = zrUtil.merge;\nvar QUERY_REG = /^(min|max)?(.+)$/;\n/**\n * TERM EXPLANATIONS:\n *\n * [option]:\n *\n *     An object that contains definitions of components. For example:\n *     var option = {\n *         title: {...},\n *         legend: {...},\n *         visualMap: {...},\n *         series: [\n *             {data: [...]},\n *             {data: [...]},\n *             ...\n *         ]\n *     };\n *\n * [rawOption]:\n *\n *     An object input to echarts.setOption. 'rawOption' may be an\n *     'option', or may be an object contains multi-options. For example:\n *     var option = {\n *         baseOption: {\n *             title: {...},\n *             legend: {...},\n *             series: [\n *                 {data: [...]},\n *                 {data: [...]},\n *                 ...\n *             ]\n *         },\n *         timeline: {...},\n *         options: [\n *             {title: {...}, series: {data: [...]}},\n *             {title: {...}, series: {data: [...]}},\n *             ...\n *         ],\n *         media: [\n *             {\n *                 query: {maxWidth: 320},\n *                 option: {series: {x: 20}, visualMap: {show: false}}\n *             },\n *             {\n *                 query: {minWidth: 320, maxWidth: 720},\n *                 option: {series: {x: 500}, visualMap: {show: true}}\n *             },\n *             {\n *                 option: {series: {x: 1200}, visualMap: {show: true}}\n *             }\n *         ]\n *     };\n *\n * @alias module:echarts/model/OptionManager\n * @param {module:echarts/ExtensionAPI} api\n */\n\nfunction OptionManager(api) {\n  /**\n   * @private\n   * @type {module:echarts/ExtensionAPI}\n   */\n  this._api = api;\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._timelineOptions = [];\n  /**\n   * @private\n   * @type {Array.<Object>}\n   */\n\n  this._mediaList = [];\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._mediaDefault;\n  /**\n   * -1, means default.\n   * empty means no media.\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._currentMediaIndices = [];\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._optionBackup;\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._newBaseOption;\n} // timeline.notMerge is not supported in ec3. Firstly there is rearly\n// case that notMerge is needed. Secondly supporting 'notMerge' requires\n// rawOption cloned and backuped when timeline changed, which does no\n// good to performance. What's more, that both timeline and setOption\n// method supply 'notMerge' brings complex and some problems.\n// Consider this case:\n// (step1) chart.setOption({timeline: {notMerge: false}, ...}, false);\n// (step2) chart.setOption({timeline: {notMerge: true}, ...}, false);\n\n\nOptionManager.prototype = {\n  constructor: OptionManager,\n\n  /**\n   * @public\n   * @param {Object} rawOption Raw option.\n   * @param {module:echarts/model/Global} ecModel\n   * @param {Array.<Function>} optionPreprocessorFuncs\n   * @return {Object} Init option\n   */\n  setOption: function (rawOption, optionPreprocessorFuncs) {\n    rawOption = clone(rawOption, true); // FIXME\n    // 如果 timeline options 或者 media 中设置了某个属性，而baseOption中没有设置，则进行警告。\n\n    var oldOptionBackup = this._optionBackup;\n    var newParsedOption = parseRawOption.call(this, rawOption, optionPreprocessorFuncs, !oldOptionBackup);\n    this._newBaseOption = newParsedOption.baseOption; // For setOption at second time (using merge mode);\n\n    if (oldOptionBackup) {\n      // Only baseOption can be merged.\n      mergeOption(oldOptionBackup.baseOption, newParsedOption.baseOption); // For simplicity, timeline options and media options do not support merge,\n      // that is, if you `setOption` twice and both has timeline options, the latter\n      // timeline opitons will not be merged to the formers, but just substitude them.\n\n      if (newParsedOption.timelineOptions.length) {\n        oldOptionBackup.timelineOptions = newParsedOption.timelineOptions;\n      }\n\n      if (newParsedOption.mediaList.length) {\n        oldOptionBackup.mediaList = newParsedOption.mediaList;\n      }\n\n      if (newParsedOption.mediaDefault) {\n        oldOptionBackup.mediaDefault = newParsedOption.mediaDefault;\n      }\n    } else {\n      this._optionBackup = newParsedOption;\n    }\n  },\n\n  /**\n   * @param {boolean} isRecreate\n   * @return {Object}\n   */\n  mountOption: function (isRecreate) {\n    var optionBackup = this._optionBackup; // TODO\n    // 如果没有reset功能则不clone。\n\n    this._timelineOptions = map(optionBackup.timelineOptions, clone);\n    this._mediaList = map(optionBackup.mediaList, clone);\n    this._mediaDefault = clone(optionBackup.mediaDefault);\n    this._currentMediaIndices = [];\n    return clone(isRecreate // this._optionBackup.baseOption, which is created at the first `setOption`\n    // called, and is merged into every new option by inner method `mergeOption`\n    // each time `setOption` called, can be only used in `isRecreate`, because\n    // its reliability is under suspicion. In other cases option merge is\n    // performed by `model.mergeOption`.\n    ? optionBackup.baseOption : this._newBaseOption);\n  },\n\n  /**\n   * @param {module:echarts/model/Global} ecModel\n   * @return {Object}\n   */\n  getTimelineOption: function (ecModel) {\n    var option;\n    var timelineOptions = this._timelineOptions;\n\n    if (timelineOptions.length) {\n      // getTimelineOption can only be called after ecModel inited,\n      // so we can get currentIndex from timelineModel.\n      var timelineModel = ecModel.getComponent('timeline');\n\n      if (timelineModel) {\n        option = clone(timelineOptions[timelineModel.getCurrentIndex()], true);\n      }\n    }\n\n    return option;\n  },\n\n  /**\n   * @param {module:echarts/model/Global} ecModel\n   * @return {Array.<Object>}\n   */\n  getMediaOption: function (ecModel) {\n    var ecWidth = this._api.getWidth();\n\n    var ecHeight = this._api.getHeight();\n\n    var mediaList = this._mediaList;\n    var mediaDefault = this._mediaDefault;\n    var indices = [];\n    var result = []; // No media defined.\n\n    if (!mediaList.length && !mediaDefault) {\n      return result;\n    } // Multi media may be applied, the latter defined media has higher priority.\n\n\n    for (var i = 0, len = mediaList.length; i < len; i++) {\n      if (applyMediaQuery(mediaList[i].query, ecWidth, ecHeight)) {\n        indices.push(i);\n      }\n    } // FIXME\n    // 是否mediaDefault应该强制用户设置，否则可能修改不能回归。\n\n\n    if (!indices.length && mediaDefault) {\n      indices = [-1];\n    }\n\n    if (indices.length && !indicesEquals(indices, this._currentMediaIndices)) {\n      result = map(indices, function (index) {\n        return clone(index === -1 ? mediaDefault.option : mediaList[index].option);\n      });\n    } // Otherwise return nothing.\n\n\n    this._currentMediaIndices = indices;\n    return result;\n  }\n};\n\nfunction parseRawOption(rawOption, optionPreprocessorFuncs, isNew) {\n  var timelineOptions = [];\n  var mediaList = [];\n  var mediaDefault;\n  var baseOption; // Compatible with ec2.\n\n  var timelineOpt = rawOption.timeline;\n\n  if (rawOption.baseOption) {\n    baseOption = rawOption.baseOption;\n  } // For timeline\n\n\n  if (timelineOpt || rawOption.options) {\n    baseOption = baseOption || {};\n    timelineOptions = (rawOption.options || []).slice();\n  } // For media query\n\n\n  if (rawOption.media) {\n    baseOption = baseOption || {};\n    var media = rawOption.media;\n    each(media, function (singleMedia) {\n      if (singleMedia && singleMedia.option) {\n        if (singleMedia.query) {\n          mediaList.push(singleMedia);\n        } else if (!mediaDefault) {\n          // Use the first media default.\n          mediaDefault = singleMedia;\n        }\n      }\n    });\n  } // For normal option\n\n\n  if (!baseOption) {\n    baseOption = rawOption;\n  } // Set timelineOpt to baseOption in ec3,\n  // which is convenient for merge option.\n\n\n  if (!baseOption.timeline) {\n    baseOption.timeline = timelineOpt;\n  } // Preprocess.\n\n\n  each([baseOption].concat(timelineOptions).concat(zrUtil.map(mediaList, function (media) {\n    return media.option;\n  })), function (option) {\n    each(optionPreprocessorFuncs, function (preProcess) {\n      preProcess(option, isNew);\n    });\n  });\n  return {\n    baseOption: baseOption,\n    timelineOptions: timelineOptions,\n    mediaDefault: mediaDefault,\n    mediaList: mediaList\n  };\n}\n/**\n * @see <http://www.w3.org/TR/css3-mediaqueries/#media1>\n * Support: width, height, aspectRatio\n * Can use max or min as prefix.\n */\n\n\nfunction applyMediaQuery(query, ecWidth, ecHeight) {\n  var realMap = {\n    width: ecWidth,\n    height: ecHeight,\n    aspectratio: ecWidth / ecHeight // lowser case for convenientce.\n\n  };\n  var applicatable = true;\n  zrUtil.each(query, function (value, attr) {\n    var matched = attr.match(QUERY_REG);\n\n    if (!matched || !matched[1] || !matched[2]) {\n      return;\n    }\n\n    var operator = matched[1];\n    var realAttr = matched[2].toLowerCase();\n\n    if (!compare(realMap[realAttr], value, operator)) {\n      applicatable = false;\n    }\n  });\n  return applicatable;\n}\n\nfunction compare(real, expect, operator) {\n  if (operator === 'min') {\n    return real >= expect;\n  } else if (operator === 'max') {\n    return real <= expect;\n  } else {\n    // Equals\n    return real === expect;\n  }\n}\n\nfunction indicesEquals(indices1, indices2) {\n  // indices is always order by asc and has only finite number.\n  return indices1.join(',') === indices2.join(',');\n}\n/**\n * Consider case:\n * `chart.setOption(opt1);`\n * Then user do some interaction like dataZoom, dataView changing.\n * `chart.setOption(opt2);`\n * Then user press 'reset button' in toolbox.\n *\n * After doing that all of the interaction effects should be reset, the\n * chart should be the same as the result of invoke\n * `chart.setOption(opt1); chart.setOption(opt2);`.\n *\n * Although it is not able ensure that\n * `chart.setOption(opt1); chart.setOption(opt2);` is equivalents to\n * `chart.setOption(merge(opt1, opt2));` exactly,\n * this might be the only simple way to implement that feature.\n *\n * MEMO: We've considered some other approaches:\n * 1. Each model handle its self restoration but not uniform treatment.\n *     (Too complex in logic and error-prone)\n * 2. Use a shadow ecModel. (Performace expensive)\n */\n\n\nfunction mergeOption(oldOption, newOption) {\n  newOption = newOption || {};\n  each(newOption, function (newCptOpt, mainType) {\n    if (newCptOpt == null) {\n      return;\n    }\n\n    var oldCptOpt = oldOption[mainType];\n\n    if (!ComponentModel.hasClass(mainType)) {\n      oldOption[mainType] = merge(oldCptOpt, newCptOpt, true);\n    } else {\n      newCptOpt = modelUtil.normalizeToArray(newCptOpt);\n      oldCptOpt = modelUtil.normalizeToArray(oldCptOpt);\n      var mapResult = modelUtil.mappingToExists(oldCptOpt, newCptOpt);\n      oldOption[mainType] = map(mapResult, function (item) {\n        return item.option && item.exist ? merge(item.exist, item.option, true) : item.exist || item.option;\n      });\n    }\n  });\n}\n\nvar _default = OptionManager;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1718:\n/***/ (function(module, exports) {\n\nvar platform = ''; // Navigator not exists in node\n\nif (typeof navigator !== 'undefined') {\n  platform = navigator.platform || '';\n}\n\nvar _default = {\n  // 全图默认背景\n  // backgroundColor: 'rgba(0,0,0,0)',\n  // https://dribbble.com/shots/1065960-Infographic-Pie-chart-visualization\n  // color: ['#5793f3', '#d14a61', '#fd9c35', '#675bba', '#fec42c', '#dd4444', '#d4df5a', '#cd4870'],\n  // 浅色\n  // color: ['#bcd3bb', '#e88f70', '#edc1a5', '#9dc5c8', '#e1e8c8', '#7b7c68', '#e5b5b5', '#f0b489', '#928ea8', '#bda29a'],\n  // color: ['#cc5664', '#9bd6ec', '#ea946e', '#8acaaa', '#f1ec64', '#ee8686', '#a48dc1', '#5da6bc', '#b9dcae'],\n  // 深色\n  color: ['#c23531', '#2f4554', '#61a0a8', '#d48265', '#91c7ae', '#749f83', '#ca8622', '#bda29a', '#6e7074', '#546570', '#c4ccd3'],\n  // 默认需要 Grid 配置项\n  // grid: {},\n  // 主题，主题\n  textStyle: {\n    // color: '#000',\n    // decoration: 'none',\n    // PENDING\n    fontFamily: platform.match(/^Win/) ? 'Microsoft YaHei' : 'sans-serif',\n    // fontFamily: 'Arial, Verdana, sans-serif',\n    fontSize: 12,\n    fontStyle: 'normal',\n    fontWeight: 'normal'\n  },\n  // http://blogs.adobe.com/webplatform/2014/02/24/using-blend-modes-in-html-canvas/\n  // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n  // Default is source-over\n  blendMode: null,\n  animation: 'auto',\n  animationDuration: 1000,\n  animationDurationUpdate: 300,\n  animationEasing: 'exponentialOut',\n  animationEasingUpdate: 'cubicOut',\n  animationThreshold: 2000,\n  // Configuration for progressive/incremental rendering\n  progressiveThreshold: 3000,\n  progressive: 400,\n  // Threshold of if use single hover layer to optimize.\n  // It is recommended that `hoverLayerThreshold` is equivalent to or less than\n  // `progressiveThreshold`, otherwise hover will cause restart of progressive,\n  // which is unexpected.\n  // see example <echarts/test/heatmap-large.html>.\n  hoverLayerThreshold: 3000,\n  // See: module:echarts/scale/Time\n  useUTC: false\n};\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1719:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar makeStyleMapper = __webpack_require__(1538);\n\nvar getAreaStyle = makeStyleMapper([['fill', 'color'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['opacity'], ['shadowColor']]);\nvar _default = {\n  getAreaStyle: function (excludes, includes) {\n    return getAreaStyle(this, excludes, includes);\n  }\n};\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1720:\n/***/ (function(module, exports) {\n\nvar _default = {\n  getBoxLayoutParams: function () {\n    return {\n      left: this.get('left'),\n      top: this.get('top'),\n      right: this.get('right'),\n      bottom: this.get('bottom'),\n      width: this.get('width'),\n      height: this.get('height')\n    };\n  }\n};\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1721:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar makeStyleMapper = __webpack_require__(1538);\n\nvar getItemStyle = makeStyleMapper([['fill', 'color'], ['stroke', 'borderColor'], ['lineWidth', 'borderWidth'], ['opacity'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor'], ['textPosition'], ['textAlign']]);\nvar _default = {\n  getItemStyle: function (excludes, includes) {\n    var style = getItemStyle(this, excludes, includes);\n    var lineDash = this.getBorderLineDash();\n    lineDash && (style.lineDash = lineDash);\n    return style;\n  },\n  getBorderLineDash: function () {\n    var lineType = this.get('borderType');\n    return lineType === 'solid' || lineType == null ? null : lineType === 'dashed' ? [5, 5] : [1, 1];\n  }\n};\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1722:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar makeStyleMapper = __webpack_require__(1538);\n\nvar getLineStyle = makeStyleMapper([['lineWidth', 'width'], ['stroke', 'color'], ['opacity'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor']]);\nvar _default = {\n  getLineStyle: function (excludes) {\n    var style = getLineStyle(this, excludes);\n    var lineDash = this.getLineDash(style.lineWidth);\n    lineDash && (style.lineDash = lineDash);\n    return style;\n  },\n  getLineDash: function (lineWidth) {\n    if (lineWidth == null) {\n      lineWidth = 1;\n    }\n\n    var lineType = this.get('type');\n    var dotSize = Math.max(lineWidth, 2);\n    var dashSize = lineWidth * 4;\n    return lineType === 'solid' || lineType == null ? null : lineType === 'dashed' ? [dashSize, dashSize] : [dotSize, dotSize];\n  }\n};\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1723:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar textContain = __webpack_require__(1523);\n\nvar graphicUtil = __webpack_require__(1483);\n\nvar PATH_COLOR = ['textStyle', 'color'];\nvar _default = {\n  /**\n   * Get color property or get color from option.textStyle.color\n   * @param {boolean} [isEmphasis]\n   * @return {string}\n   */\n  getTextColor: function (isEmphasis) {\n    var ecModel = this.ecModel;\n    return this.getShallow('color') || (!isEmphasis && ecModel ? ecModel.get(PATH_COLOR) : null);\n  },\n\n  /**\n   * Create font string from fontStyle, fontWeight, fontSize, fontFamily\n   * @return {string}\n   */\n  getFont: function () {\n    return graphicUtil.getFont({\n      fontStyle: this.getShallow('fontStyle'),\n      fontWeight: this.getShallow('fontWeight'),\n      fontSize: this.getShallow('fontSize'),\n      fontFamily: this.getShallow('fontFamily')\n    }, this.ecModel);\n  },\n  getTextRect: function (text) {\n    return textContain.getBoundingRect(text, this.getFont(), this.getShallow('align'), this.getShallow('verticalAlign') || this.getShallow('baseline'), this.getShallow('padding'), this.getShallow('rich'), this.getShallow('truncateText'));\n  }\n};\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1724:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _util = __webpack_require__(1479);\n\nvar each = _util.each;\nvar isArray = _util.isArray;\nvar isObject = _util.isObject;\n\nvar compatStyle = __webpack_require__(1725);\n\nvar _model = __webpack_require__(1484);\n\nvar normalizeToArray = _model.normalizeToArray;\n\n// Compatitable with 2.0\nfunction get(opt, path) {\n  path = path.split(',');\n  var obj = opt;\n\n  for (var i = 0; i < path.length; i++) {\n    obj = obj && obj[path[i]];\n\n    if (obj == null) {\n      break;\n    }\n  }\n\n  return obj;\n}\n\nfunction set(opt, path, val, overwrite) {\n  path = path.split(',');\n  var obj = opt;\n  var key;\n\n  for (var i = 0; i < path.length - 1; i++) {\n    key = path[i];\n\n    if (obj[key] == null) {\n      obj[key] = {};\n    }\n\n    obj = obj[key];\n  }\n\n  if (overwrite || obj[path[i]] == null) {\n    obj[path[i]] = val;\n  }\n}\n\nfunction compatLayoutProperties(option) {\n  each(LAYOUT_PROPERTIES, function (prop) {\n    if (prop[0] in option && !(prop[1] in option)) {\n      option[prop[1]] = option[prop[0]];\n    }\n  });\n}\n\nvar LAYOUT_PROPERTIES = [['x', 'left'], ['y', 'top'], ['x2', 'right'], ['y2', 'bottom']];\nvar COMPATITABLE_COMPONENTS = ['grid', 'geo', 'parallel', 'legend', 'toolbox', 'title', 'visualMap', 'dataZoom', 'timeline'];\nvar COMPATITABLE_SERIES = ['bar', 'boxplot', 'candlestick', 'chord', 'effectScatter', 'funnel', 'gauge', 'lines', 'graph', 'heatmap', 'line', 'map', 'parallel', 'pie', 'radar', 'sankey', 'scatter', 'treemap'];\n\nfunction _default(option, isTheme) {\n  compatStyle(option, isTheme); // Make sure series array for model initialization.\n\n  option.series = normalizeToArray(option.series);\n  each(option.series, function (seriesOpt) {\n    if (!isObject(seriesOpt)) {\n      return;\n    }\n\n    var seriesType = seriesOpt.type;\n\n    if (seriesType === 'pie' || seriesType === 'gauge') {\n      if (seriesOpt.clockWise != null) {\n        seriesOpt.clockwise = seriesOpt.clockWise;\n      }\n    }\n\n    if (seriesType === 'gauge') {\n      var pointerColor = get(seriesOpt, 'pointer.color');\n      pointerColor != null && set(seriesOpt, 'itemStyle.normal.color', pointerColor);\n    }\n\n    for (var i = 0; i < COMPATITABLE_SERIES.length; i++) {\n      if (COMPATITABLE_SERIES[i] === seriesOpt.type) {\n        compatLayoutProperties(seriesOpt);\n        break;\n      }\n    }\n  }); // dataRange has changed to visualMap\n\n  if (option.dataRange) {\n    option.visualMap = option.dataRange;\n  }\n\n  each(COMPATITABLE_COMPONENTS, function (componentName) {\n    var options = option[componentName];\n\n    if (options) {\n      if (!isArray(options)) {\n        options = [options];\n      }\n\n      each(options, function (option) {\n        compatLayoutProperties(option);\n      });\n    }\n  });\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1725:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1479);\n\nvar modelUtil = __webpack_require__(1484);\n\nvar each = zrUtil.each;\nvar isObject = zrUtil.isObject;\nvar POSSIBLE_STYLES = ['areaStyle', 'lineStyle', 'nodeStyle', 'linkStyle', 'chordStyle', 'label', 'labelLine'];\n\nfunction compatItemStyle(opt) {\n  var itemStyleOpt = opt && opt.itemStyle;\n\n  if (!itemStyleOpt) {\n    return;\n  }\n\n  for (var i = 0, len = POSSIBLE_STYLES.length; i < len; i++) {\n    var styleName = POSSIBLE_STYLES[i];\n    var normalItemStyleOpt = itemStyleOpt.normal;\n    var emphasisItemStyleOpt = itemStyleOpt.emphasis;\n\n    if (normalItemStyleOpt && normalItemStyleOpt[styleName]) {\n      opt[styleName] = opt[styleName] || {};\n\n      if (!opt[styleName].normal) {\n        opt[styleName].normal = normalItemStyleOpt[styleName];\n      } else {\n        zrUtil.merge(opt[styleName].normal, normalItemStyleOpt[styleName]);\n      }\n\n      normalItemStyleOpt[styleName] = null;\n    }\n\n    if (emphasisItemStyleOpt && emphasisItemStyleOpt[styleName]) {\n      opt[styleName] = opt[styleName] || {};\n\n      if (!opt[styleName].emphasis) {\n        opt[styleName].emphasis = emphasisItemStyleOpt[styleName];\n      } else {\n        zrUtil.merge(opt[styleName].emphasis, emphasisItemStyleOpt[styleName]);\n      }\n\n      emphasisItemStyleOpt[styleName] = null;\n    }\n  }\n}\n\nfunction compatTextStyle(opt, propName) {\n  var labelOptSingle = isObject(opt) && opt[propName];\n  var textStyle = isObject(labelOptSingle) && labelOptSingle.textStyle;\n\n  if (textStyle) {\n    for (var i = 0, len = modelUtil.TEXT_STYLE_OPTIONS.length; i < len; i++) {\n      var propName = modelUtil.TEXT_STYLE_OPTIONS[i];\n\n      if (textStyle.hasOwnProperty(propName)) {\n        labelOptSingle[propName] = textStyle[propName];\n      }\n    }\n  }\n}\n\nfunction compatLabelTextStyle(labelOpt) {\n  if (isObject(labelOpt)) {\n    compatTextStyle(labelOpt, 'normal');\n    compatTextStyle(labelOpt, 'emphasis');\n  }\n}\n\nfunction processSeries(seriesOpt) {\n  if (!isObject(seriesOpt)) {\n    return;\n  }\n\n  compatItemStyle(seriesOpt);\n  compatLabelTextStyle(seriesOpt.label); // treemap\n\n  compatLabelTextStyle(seriesOpt.upperLabel); // graph\n\n  compatLabelTextStyle(seriesOpt.edgeLabel);\n  var markPoint = seriesOpt.markPoint;\n  compatItemStyle(markPoint);\n  compatLabelTextStyle(markPoint && markPoint.label);\n  var markLine = seriesOpt.markLine;\n  compatItemStyle(seriesOpt.markLine);\n  compatLabelTextStyle(markLine && markLine.label);\n  var markArea = seriesOpt.markArea;\n  compatLabelTextStyle(markArea && markArea.label); // For gauge\n\n  compatTextStyle(seriesOpt, 'axisLabel');\n  compatTextStyle(seriesOpt, 'title');\n  compatTextStyle(seriesOpt, 'detail');\n  var data = seriesOpt.data;\n\n  if (data) {\n    for (var i = 0; i < data.length; i++) {\n      compatItemStyle(data[i]);\n      compatLabelTextStyle(data[i] && data[i].label);\n    }\n  } // mark point data\n\n\n  var markPoint = seriesOpt.markPoint;\n\n  if (markPoint && markPoint.data) {\n    var mpData = markPoint.data;\n\n    for (var i = 0; i < mpData.length; i++) {\n      compatItemStyle(mpData[i]);\n      compatLabelTextStyle(mpData[i] && mpData[i].label);\n    }\n  } // mark line data\n\n\n  var markLine = seriesOpt.markLine;\n\n  if (markLine && markLine.data) {\n    var mlData = markLine.data;\n\n    for (var i = 0; i < mlData.length; i++) {\n      if (zrUtil.isArray(mlData[i])) {\n        compatItemStyle(mlData[i][0]);\n        compatLabelTextStyle(mlData[i][0] && mlData[i][0].label);\n        compatItemStyle(mlData[i][1]);\n        compatLabelTextStyle(mlData[i][1] && mlData[i][1].label);\n      } else {\n        compatItemStyle(mlData[i]);\n        compatLabelTextStyle(mlData[i] && mlData[i].label);\n      }\n    }\n  }\n}\n\nfunction toArr(o) {\n  return zrUtil.isArray(o) ? o : o ? [o] : [];\n}\n\nfunction toObj(o) {\n  return (zrUtil.isArray(o) ? o[0] : o) || {};\n}\n\nfunction _default(option, isTheme) {\n  each(toArr(option.series), function (seriesOpt) {\n    isObject(seriesOpt) && processSeries(seriesOpt);\n  });\n  var axes = ['xAxis', 'yAxis', 'radiusAxis', 'angleAxis', 'singleAxis', 'parallelAxis', 'radar'];\n  isTheme && axes.push('valueAxis', 'categoryAxis', 'logAxis', 'timeAxis');\n  each(axes, function (axisName) {\n    each(toArr(option[axisName]), function (axisOpt) {\n      if (axisOpt) {\n        compatTextStyle(axisOpt, 'axisLabel');\n        compatTextStyle(axisOpt.axisPointer, 'label');\n      }\n    });\n  });\n  each(toArr(option.parallel), function (parallelOpt) {\n    var parallelAxisDefault = parallelOpt && parallelOpt.parallelAxisDefault;\n    compatTextStyle(parallelAxisDefault, 'axisLabel');\n    compatTextStyle(parallelAxisDefault && parallelAxisDefault.axisPointer, 'label');\n  });\n  each(toArr(option.calendar), function (calendarOpt) {\n    compatTextStyle(calendarOpt, 'dayLabel');\n    compatTextStyle(calendarOpt, 'monthLabel');\n    compatTextStyle(calendarOpt, 'yearLabel');\n  }); // radar.name.textStyle\n\n  each(toArr(option.radar), function (radarOpt) {\n    compatTextStyle(radarOpt, 'name');\n  });\n  each(toArr(option.geo), function (geoOpt) {\n    if (isObject(geoOpt)) {\n      compatLabelTextStyle(geoOpt.label);\n      each(toArr(geoOpt.regions), function (regionObj) {\n        compatLabelTextStyle(regionObj.label);\n      });\n    }\n  });\n  compatLabelTextStyle(toObj(option.timeline).label);\n  compatTextStyle(toObj(option.axisPointer), 'label');\n  compatTextStyle(toObj(option.tooltip).axisPointer, 'label');\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1726:\n/***/ (function(module, exports) {\n\nvar samplers = {\n  average: function (frame) {\n    var sum = 0;\n    var count = 0;\n\n    for (var i = 0; i < frame.length; i++) {\n      if (!isNaN(frame[i])) {\n        sum += frame[i];\n        count++;\n      }\n    } // Return NaN if count is 0\n\n\n    return count === 0 ? NaN : sum / count;\n  },\n  sum: function (frame) {\n    var sum = 0;\n\n    for (var i = 0; i < frame.length; i++) {\n      // Ignore NaN\n      sum += frame[i] || 0;\n    }\n\n    return sum;\n  },\n  max: function (frame) {\n    var max = -Infinity;\n\n    for (var i = 0; i < frame.length; i++) {\n      frame[i] > max && (max = frame[i]);\n    }\n\n    return max;\n  },\n  min: function (frame) {\n    var min = Infinity;\n\n    for (var i = 0; i < frame.length; i++) {\n      frame[i] < min && (min = frame[i]);\n    }\n\n    return min;\n  },\n  // TODO\n  // Median\n  nearest: function (frame) {\n    return frame[0];\n  }\n};\n\nvar indexSampler = function (frame, value) {\n  return Math.round(frame.length / 2);\n};\n\nfunction _default(seriesType, ecModel, api) {\n  ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n    var data = seriesModel.getData();\n    var sampling = seriesModel.get('sampling');\n    var coordSys = seriesModel.coordinateSystem; // Only cartesian2d support down sampling\n\n    if (coordSys.type === 'cartesian2d' && sampling) {\n      var baseAxis = coordSys.getBaseAxis();\n      var valueAxis = coordSys.getOtherAxis(baseAxis);\n      var extent = baseAxis.getExtent(); // Coordinste system has been resized\n\n      var size = extent[1] - extent[0];\n      var rate = Math.round(data.count() / size);\n\n      if (rate > 1) {\n        var sampler;\n\n        if (typeof sampling === 'string') {\n          sampler = samplers[sampling];\n        } else if (typeof sampling === 'function') {\n          sampler = sampling;\n        }\n\n        if (sampler) {\n          data = data.downSample(valueAxis.dim, 1 / rate, sampler, indexSampler);\n          seriesModel.setData(data);\n        }\n      }\n    }\n  }, this);\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1727:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1479);\n\nvar Scale = __webpack_require__(1539);\n\nvar numberUtil = __webpack_require__(1486);\n\nvar IntervalScale = __webpack_require__(1567);\n\n/**\n * Log scale\n * @module echarts/scale/Log\n */\n// Use some method of IntervalScale\nvar scaleProto = Scale.prototype;\nvar intervalScaleProto = IntervalScale.prototype;\nvar getPrecisionSafe = numberUtil.getPrecisionSafe;\nvar roundingErrorFix = numberUtil.round;\nvar mathFloor = Math.floor;\nvar mathCeil = Math.ceil;\nvar mathPow = Math.pow;\nvar mathLog = Math.log;\nvar LogScale = Scale.extend({\n  type: 'log',\n  base: 10,\n  $constructor: function () {\n    Scale.apply(this, arguments);\n    this._originalScale = new IntervalScale();\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getTicks: function () {\n    var originalScale = this._originalScale;\n    var extent = this._extent;\n    var originalExtent = originalScale.getExtent();\n    return zrUtil.map(intervalScaleProto.getTicks.call(this), function (val) {\n      var powVal = numberUtil.round(mathPow(this.base, val)); // Fix #4158\n\n      powVal = val === extent[0] && originalScale.__fixMin ? fixRoundingError(powVal, originalExtent[0]) : powVal;\n      powVal = val === extent[1] && originalScale.__fixMax ? fixRoundingError(powVal, originalExtent[1]) : powVal;\n      return powVal;\n    }, this);\n  },\n\n  /**\n   * @param {number} val\n   * @return {string}\n   */\n  getLabel: intervalScaleProto.getLabel,\n\n  /**\n   * @param  {number} val\n   * @return {number}\n   */\n  scale: function (val) {\n    val = scaleProto.scale.call(this, val);\n    return mathPow(this.base, val);\n  },\n\n  /**\n   * @param {number} start\n   * @param {number} end\n   */\n  setExtent: function (start, end) {\n    var base = this.base;\n    start = mathLog(start) / mathLog(base);\n    end = mathLog(end) / mathLog(base);\n    intervalScaleProto.setExtent.call(this, start, end);\n  },\n\n  /**\n   * @return {number} end\n   */\n  getExtent: function () {\n    var base = this.base;\n    var extent = scaleProto.getExtent.call(this);\n    extent[0] = mathPow(base, extent[0]);\n    extent[1] = mathPow(base, extent[1]); // Fix #4158\n\n    var originalScale = this._originalScale;\n    var originalExtent = originalScale.getExtent();\n    originalScale.__fixMin && (extent[0] = fixRoundingError(extent[0], originalExtent[0]));\n    originalScale.__fixMax && (extent[1] = fixRoundingError(extent[1], originalExtent[1]));\n    return extent;\n  },\n\n  /**\n   * @param  {Array.<number>} extent\n   */\n  unionExtent: function (extent) {\n    this._originalScale.unionExtent(extent);\n\n    var base = this.base;\n    extent[0] = mathLog(extent[0]) / mathLog(base);\n    extent[1] = mathLog(extent[1]) / mathLog(base);\n    scaleProto.unionExtent.call(this, extent);\n  },\n\n  /**\n   * @override\n   */\n  unionExtentFromData: function (data, dim) {\n    this.unionExtent(data.getDataExtent(dim, true, function (val) {\n      return val > 0;\n    }));\n  },\n\n  /**\n   * Update interval and extent of intervals for nice ticks\n   * @param  {number} [approxTickNum = 10] Given approx tick number\n   */\n  niceTicks: function (approxTickNum) {\n    approxTickNum = approxTickNum || 10;\n    var extent = this._extent;\n    var span = extent[1] - extent[0];\n\n    if (span === Infinity || span <= 0) {\n      return;\n    }\n\n    var interval = numberUtil.quantity(span);\n    var err = approxTickNum / span * interval; // Filter ticks to get closer to the desired count.\n\n    if (err <= 0.5) {\n      interval *= 10;\n    } // Interval should be integer\n\n\n    while (!isNaN(interval) && Math.abs(interval) < 1 && Math.abs(interval) > 0) {\n      interval *= 10;\n    }\n\n    var niceExtent = [numberUtil.round(mathCeil(extent[0] / interval) * interval), numberUtil.round(mathFloor(extent[1] / interval) * interval)];\n    this._interval = interval;\n    this._niceExtent = niceExtent;\n  },\n\n  /**\n   * Nice extent.\n   * @override\n   */\n  niceExtent: function (opt) {\n    intervalScaleProto.niceExtent.call(this, opt);\n    var originalScale = this._originalScale;\n    originalScale.__fixMin = opt.fixMin;\n    originalScale.__fixMax = opt.fixMax;\n  }\n});\nzrUtil.each(['contain', 'normalize'], function (methodName) {\n  LogScale.prototype[methodName] = function (val) {\n    val = mathLog(val) / mathLog(this.base);\n    return scaleProto[methodName].call(this, val);\n  };\n});\n\nLogScale.create = function () {\n  return new LogScale();\n};\n\nfunction fixRoundingError(val, originalVal) {\n  return roundingErrorFix(val, getPrecisionSafe(originalVal));\n}\n\nvar _default = LogScale;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1728:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1479);\n\nvar Scale = __webpack_require__(1539);\n\n/**\n * Linear continuous scale\n * @module echarts/coord/scale/Ordinal\n *\n * http://en.wikipedia.org/wiki/Level_of_measurement\n */\n// FIXME only one data\nvar scaleProto = Scale.prototype;\nvar OrdinalScale = Scale.extend({\n  type: 'ordinal',\n  init: function (data, extent) {\n    this._data = data;\n    this._extent = extent || [0, data.length - 1];\n  },\n  parse: function (val) {\n    return typeof val === 'string' ? zrUtil.indexOf(this._data, val) // val might be float.\n    : Math.round(val);\n  },\n  contain: function (rank) {\n    rank = this.parse(rank);\n    return scaleProto.contain.call(this, rank) && this._data[rank] != null;\n  },\n\n  /**\n   * Normalize given rank or name to linear [0, 1]\n   * @param {number|string} [val]\n   * @return {number}\n   */\n  normalize: function (val) {\n    return scaleProto.normalize.call(this, this.parse(val));\n  },\n  scale: function (val) {\n    return Math.round(scaleProto.scale.call(this, val));\n  },\n\n  /**\n   * @return {Array}\n   */\n  getTicks: function () {\n    var ticks = [];\n    var extent = this._extent;\n    var rank = extent[0];\n\n    while (rank <= extent[1]) {\n      ticks.push(rank);\n      rank++;\n    }\n\n    return ticks;\n  },\n\n  /**\n   * Get item on rank n\n   * @param {number} n\n   * @return {string}\n   */\n  getLabel: function (n) {\n    return this._data[n];\n  },\n\n  /**\n   * @return {number}\n   */\n  count: function () {\n    return this._extent[1] - this._extent[0] + 1;\n  },\n\n  /**\n   * @override\n   */\n  unionExtentFromData: function (data, dim) {\n    this.unionExtent(data.getDataExtent(dim, false));\n  },\n  niceTicks: zrUtil.noop,\n  niceExtent: zrUtil.noop\n});\n/**\n * @return {module:echarts/scale/Time}\n */\n\nOrdinalScale.create = function () {\n  return new OrdinalScale();\n};\n\nvar _default = OrdinalScale;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1729:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1479);\n\nvar numberUtil = __webpack_require__(1486);\n\nvar formatUtil = __webpack_require__(1499);\n\nvar scaleHelper = __webpack_require__(1617);\n\nvar IntervalScale = __webpack_require__(1567);\n\n// [About UTC and local time zone]:\n// In most cases, `number.parseDate` will treat input data string as local time\n// (except time zone is specified in time string). And `format.formateTime` returns\n// local time by default. option.useUTC is false by default. This design have\n// concidered these common case:\n// (1) Time that is persistent in server is in UTC, but it is needed to be diplayed\n// in local time by default.\n// (2) By default, the input data string (e.g., '2011-01-02') should be displayed\n// as its original time, without any time difference.\nvar intervalScaleProto = IntervalScale.prototype;\nvar mathCeil = Math.ceil;\nvar mathFloor = Math.floor;\nvar ONE_SECOND = 1000;\nvar ONE_MINUTE = ONE_SECOND * 60;\nvar ONE_HOUR = ONE_MINUTE * 60;\nvar ONE_DAY = ONE_HOUR * 24; // FIXME 公用？\n\nvar bisect = function (a, x, lo, hi) {\n  while (lo < hi) {\n    var mid = lo + hi >>> 1;\n\n    if (a[mid][1] < x) {\n      lo = mid + 1;\n    } else {\n      hi = mid;\n    }\n  }\n\n  return lo;\n};\n/**\n * @alias module:echarts/coord/scale/Time\n * @constructor\n */\n\n\nvar TimeScale = IntervalScale.extend({\n  type: 'time',\n\n  /**\n   * @override\n   */\n  getLabel: function (val) {\n    var stepLvl = this._stepLvl;\n    var date = new Date(val);\n    return formatUtil.formatTime(stepLvl[0], date, this.getSetting('useUTC'));\n  },\n\n  /**\n   * @override\n   */\n  niceExtent: function (opt) {\n    var extent = this._extent; // If extent start and end are same, expand them\n\n    if (extent[0] === extent[1]) {\n      // Expand extent\n      extent[0] -= ONE_DAY;\n      extent[1] += ONE_DAY;\n    } // If there are no data and extent are [Infinity, -Infinity]\n\n\n    if (extent[1] === -Infinity && extent[0] === Infinity) {\n      var d = new Date();\n      extent[1] = +new Date(d.getFullYear(), d.getMonth(), d.getDate());\n      extent[0] = extent[1] - ONE_DAY;\n    }\n\n    this.niceTicks(opt.splitNumber, opt.minInterval, opt.maxInterval); // var extent = this._extent;\n\n    var interval = this._interval;\n\n    if (!opt.fixMin) {\n      extent[0] = numberUtil.round(mathFloor(extent[0] / interval) * interval);\n    }\n\n    if (!opt.fixMax) {\n      extent[1] = numberUtil.round(mathCeil(extent[1] / interval) * interval);\n    }\n  },\n\n  /**\n   * @override\n   */\n  niceTicks: function (approxTickNum, minInterval, maxInterval) {\n    approxTickNum = approxTickNum || 10;\n    var extent = this._extent;\n    var span = extent[1] - extent[0];\n    var approxInterval = span / approxTickNum;\n\n    if (minInterval != null && approxInterval < minInterval) {\n      approxInterval = minInterval;\n    }\n\n    if (maxInterval != null && approxInterval > maxInterval) {\n      approxInterval = maxInterval;\n    }\n\n    var scaleLevelsLen = scaleLevels.length;\n    var idx = bisect(scaleLevels, approxInterval, 0, scaleLevelsLen);\n    var level = scaleLevels[Math.min(idx, scaleLevelsLen - 1)];\n    var interval = level[1]; // Same with interval scale if span is much larger than 1 year\n\n    if (level[0] === 'year') {\n      var yearSpan = span / interval; // From \"Nice Numbers for Graph Labels\" of Graphic Gems\n      // var niceYearSpan = numberUtil.nice(yearSpan, false);\n\n      var yearStep = numberUtil.nice(yearSpan / approxTickNum, true);\n      interval *= yearStep;\n    }\n\n    var timezoneOffset = this.getSetting('useUTC') ? 0 : new Date(+extent[0] || +extent[1]).getTimezoneOffset() * 60 * 1000;\n    var niceExtent = [Math.round(mathCeil((extent[0] - timezoneOffset) / interval) * interval + timezoneOffset), Math.round(mathFloor((extent[1] - timezoneOffset) / interval) * interval + timezoneOffset)];\n    scaleHelper.fixExtent(niceExtent, extent);\n    this._stepLvl = level; // Interval will be used in getTicks\n\n    this._interval = interval;\n    this._niceExtent = niceExtent;\n  },\n  parse: function (val) {\n    // val might be float.\n    return +numberUtil.parseDate(val);\n  }\n});\nzrUtil.each(['contain', 'normalize'], function (methodName) {\n  TimeScale.prototype[methodName] = function (val) {\n    return intervalScaleProto[methodName].call(this, this.parse(val));\n  };\n}); // Steps from d3\n\nvar scaleLevels = [// Format              interval\n['hh:mm:ss', ONE_SECOND], // 1s\n['hh:mm:ss', ONE_SECOND * 5], // 5s\n['hh:mm:ss', ONE_SECOND * 10], // 10s\n['hh:mm:ss', ONE_SECOND * 15], // 15s\n['hh:mm:ss', ONE_SECOND * 30], // 30s\n['hh:mm\\nMM-dd', ONE_MINUTE], // 1m\n['hh:mm\\nMM-dd', ONE_MINUTE * 5], // 5m\n['hh:mm\\nMM-dd', ONE_MINUTE * 10], // 10m\n['hh:mm\\nMM-dd', ONE_MINUTE * 15], // 15m\n['hh:mm\\nMM-dd', ONE_MINUTE * 30], // 30m\n['hh:mm\\nMM-dd', ONE_HOUR], // 1h\n['hh:mm\\nMM-dd', ONE_HOUR * 2], // 2h\n['hh:mm\\nMM-dd', ONE_HOUR * 6], // 6h\n['hh:mm\\nMM-dd', ONE_HOUR * 12], // 12h\n['MM-dd\\nyyyy', ONE_DAY], // 1d\n['MM-dd\\nyyyy', ONE_DAY * 2], // 2d\n['MM-dd\\nyyyy', ONE_DAY * 3], // 3d\n['MM-dd\\nyyyy', ONE_DAY * 4], // 4d\n['MM-dd\\nyyyy', ONE_DAY * 5], // 5d\n['MM-dd\\nyyyy', ONE_DAY * 6], // 6d\n['week', ONE_DAY * 7], // 7d\n['MM-dd\\nyyyy', ONE_DAY * 10], // 10d\n['week', ONE_DAY * 14], // 2w\n['week', ONE_DAY * 21], // 3w\n['month', ONE_DAY * 31], // 1M\n['week', ONE_DAY * 42], // 6w\n['month', ONE_DAY * 62], // 2M\n['week', ONE_DAY * 42], // 10w\n['quarter', ONE_DAY * 380 / 4], // 3M\n['month', ONE_DAY * 31 * 4], // 4M\n['month', ONE_DAY * 31 * 5], // 5M\n['half-year', ONE_DAY * 380 / 2], // 6M\n['month', ONE_DAY * 31 * 8], // 8M\n['month', ONE_DAY * 31 * 10], // 10M\n['year', ONE_DAY * 380] // 1Y\n];\n/**\n * @param {module:echarts/model/Model}\n * @return {module:echarts/scale/Time}\n */\n\nTimeScale.create = function (model) {\n  return new TimeScale({\n    useUTC: model.ecModel.get('useUTC')\n  });\n};\n\nvar _default = TimeScale;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1730:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Group = __webpack_require__(1556);\n\nvar componentUtil = __webpack_require__(1568);\n\nvar clazzUtil = __webpack_require__(1505);\n\nvar Component = function () {\n  /**\n   * @type {module:zrender/container/Group}\n   * @readOnly\n   */\n  this.group = new Group();\n  /**\n   * @type {string}\n   * @readOnly\n   */\n\n  this.uid = componentUtil.getUID('viewComponent');\n};\n\nComponent.prototype = {\n  constructor: Component,\n  init: function (ecModel, api) {},\n  render: function (componentModel, ecModel, api, payload) {},\n  dispose: function () {}\n};\nvar componentProto = Component.prototype;\n\ncomponentProto.updateView = componentProto.updateLayout = componentProto.updateVisual = function (seriesModel, ecModel, api, payload) {// Do nothing;\n}; // Enable Component.extend.\n\n\nclazzUtil.enableClassExtend(Component); // Enable capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n\nclazzUtil.enableClassManagement(Component, {\n  registerWhenExtend: true\n});\nvar _default = Component;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1731:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Gradient = __webpack_require__(1576);\n\nfunction _default(ecModel) {\n  function encodeColor(seriesModel) {\n    var colorAccessPath = (seriesModel.visualColorAccessPath || 'itemStyle.normal.color').split('.');\n    var data = seriesModel.getData();\n    var color = seriesModel.get(colorAccessPath) // Set in itemStyle\n    || seriesModel.getColorFromPalette(seriesModel.get('name')); // Default color\n    // FIXME Set color function or use the platte color\n\n    data.setVisual('color', color); // Only visible series has each data be visual encoded\n\n    if (!ecModel.isSeriesFiltered(seriesModel)) {\n      if (typeof color === 'function' && !(color instanceof Gradient)) {\n        data.each(function (idx) {\n          data.setItemVisual(idx, 'color', color(seriesModel.getDataParams(idx)));\n        });\n      } // itemStyle in each data item\n\n\n      data.each(function (idx) {\n        var itemModel = data.getItemModel(idx);\n        var color = itemModel.get(colorAccessPath, true);\n\n        if (color != null) {\n          data.setItemVisual(idx, 'color', color);\n        }\n      });\n    }\n  }\n\n  ecModel.eachRawSeries(encodeColor);\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1732:\n/***/ (function(module, exports) {\n\nfunction _default(seriesType, defaultSymbolType, legendSymbol, ecModel, api) {\n  // Encoding visual for all series include which is filtered for legend drawing\n  ecModel.eachRawSeriesByType(seriesType, function (seriesModel) {\n    var data = seriesModel.getData();\n    var symbolType = seriesModel.get('symbol') || defaultSymbolType;\n    var symbolSize = seriesModel.get('symbolSize');\n    data.setVisual({\n      legendSymbol: legendSymbol || symbolType,\n      symbol: symbolType,\n      symbolSize: symbolSize\n    }); // Only visible series has each data be visual encoded\n\n    if (!ecModel.isSeriesFiltered(seriesModel)) {\n      if (typeof symbolSize === 'function') {\n        data.each(function (idx) {\n          var rawValue = seriesModel.getRawValue(idx); // FIXME\n\n          var params = seriesModel.getDataParams(idx);\n          data.setItemVisual(idx, 'symbolSize', symbolSize(rawValue, params));\n        });\n      }\n\n      data.each(function (idx) {\n        var itemModel = data.getItemModel(idx);\n        var itemSymbolType = itemModel.getShallow('symbol', true);\n        var itemSymbolSize = itemModel.getShallow('symbolSize', true); // If has item symbol\n\n        if (itemSymbolType != null) {\n          data.setItemVisual(idx, 'symbol', itemSymbolType);\n        }\n\n        if (itemSymbolSize != null) {\n          // PENDING Transform symbolSize ?\n          data.setItemVisual(idx, 'symbolSize', itemSymbolSize);\n        }\n      });\n    }\n  });\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1757:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar util = __webpack_require__(1479);\n\nvar vec2 = __webpack_require__(1485);\n\nvar Draggable = __webpack_require__(1789);\n\nvar Eventful = __webpack_require__(1532);\n\n/**\n * Handler\n * @module zrender/Handler\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n *         pissang (shenyi.914@gmail.com)\n */\nvar SILENT = 'silent';\n\nfunction makeEventPacket(eveType, targetInfo, event) {\n  return {\n    type: eveType,\n    event: event,\n    // target can only be an element that is not silent.\n    target: targetInfo.target,\n    // topTarget can be a silent element.\n    topTarget: targetInfo.topTarget,\n    cancelBubble: false,\n    offsetX: event.zrX,\n    offsetY: event.zrY,\n    gestureEvent: event.gestureEvent,\n    pinchX: event.pinchX,\n    pinchY: event.pinchY,\n    pinchScale: event.pinchScale,\n    wheelDelta: event.zrDelta,\n    zrByTouch: event.zrByTouch,\n    which: event.which\n  };\n}\n\nfunction EmptyProxy() {}\n\nEmptyProxy.prototype.dispose = function () {};\n\nvar handlerNames = ['click', 'dblclick', 'mousewheel', 'mouseout', 'mouseup', 'mousedown', 'mousemove', 'contextmenu'];\n/**\n * @alias module:zrender/Handler\n * @constructor\n * @extends module:zrender/mixin/Eventful\n * @param {module:zrender/Storage} storage Storage instance.\n * @param {module:zrender/Painter} painter Painter instance.\n * @param {module:zrender/dom/HandlerProxy} proxy HandlerProxy instance.\n * @param {HTMLElement} painterRoot painter.root (not painter.getViewportRoot()).\n */\n\nvar Handler = function (storage, painter, proxy, painterRoot) {\n  Eventful.call(this);\n  this.storage = storage;\n  this.painter = painter;\n  this.painterRoot = painterRoot;\n  proxy = proxy || new EmptyProxy();\n  /**\n   * Proxy of event. can be Dom, WebGLSurface, etc.\n   */\n\n  this.proxy = proxy; // Attach handler\n\n  proxy.handler = this;\n  /**\n   * {target, topTarget, x, y}\n   * @private\n   * @type {Object}\n   */\n\n  this._hovered = {};\n  /**\n   * @private\n   * @type {Date}\n   */\n\n  this._lastTouchMoment;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._lastX;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._lastY;\n  Draggable.call(this);\n  util.each(handlerNames, function (name) {\n    proxy.on && proxy.on(name, this[name], this);\n  }, this);\n};\n\nHandler.prototype = {\n  constructor: Handler,\n  mousemove: function (event) {\n    var x = event.zrX;\n    var y = event.zrY;\n    var lastHovered = this._hovered;\n    var lastHoveredTarget = lastHovered.target; // If lastHoveredTarget is removed from zr (detected by '__zr') by some API call\n    // (like 'setOption' or 'dispatchAction') in event handlers, we should find\n    // lastHovered again here. Otherwise 'mouseout' can not be triggered normally.\n    // See #6198.\n\n    if (lastHoveredTarget && !lastHoveredTarget.__zr) {\n      lastHovered = this.findHover(lastHovered.x, lastHovered.y);\n      lastHoveredTarget = lastHovered.target;\n    }\n\n    var hovered = this._hovered = this.findHover(x, y);\n    var hoveredTarget = hovered.target;\n    var proxy = this.proxy;\n    proxy.setCursor && proxy.setCursor(hoveredTarget ? hoveredTarget.cursor : 'default'); // Mouse out on previous hovered element\n\n    if (lastHoveredTarget && hoveredTarget !== lastHoveredTarget) {\n      this.dispatchToElement(lastHovered, 'mouseout', event);\n    } // Mouse moving on one element\n\n\n    this.dispatchToElement(hovered, 'mousemove', event); // Mouse over on a new element\n\n    if (hoveredTarget && hoveredTarget !== lastHoveredTarget) {\n      this.dispatchToElement(hovered, 'mouseover', event);\n    }\n  },\n  mouseout: function (event) {\n    this.dispatchToElement(this._hovered, 'mouseout', event); // There might be some doms created by upper layer application\n    // at the same level of painter.getViewportRoot() (e.g., tooltip\n    // dom created by echarts), where 'globalout' event should not\n    // be triggered when mouse enters these doms. (But 'mouseout'\n    // should be triggered at the original hovered element as usual).\n\n    var element = event.toElement || event.relatedTarget;\n    var innerDom;\n\n    do {\n      element = element && element.parentNode;\n    } while (element && element.nodeType != 9 && !(innerDom = element === this.painterRoot));\n\n    !innerDom && this.trigger('globalout', {\n      event: event\n    });\n  },\n\n  /**\n   * Resize\n   */\n  resize: function (event) {\n    this._hovered = {};\n  },\n\n  /**\n   * Dispatch event\n   * @param {string} eventName\n   * @param {event=} eventArgs\n   */\n  dispatch: function (eventName, eventArgs) {\n    var handler = this[eventName];\n    handler && handler.call(this, eventArgs);\n  },\n\n  /**\n   * Dispose\n   */\n  dispose: function () {\n    this.proxy.dispose();\n    this.storage = this.proxy = this.painter = null;\n  },\n\n  /**\n   * 设置默认的cursor style\n   * @param {string} [cursorStyle='default'] 例如 crosshair\n   */\n  setCursorStyle: function (cursorStyle) {\n    var proxy = this.proxy;\n    proxy.setCursor && proxy.setCursor(cursorStyle);\n  },\n\n  /**\n   * 事件分发代理\n   *\n   * @private\n   * @param {Object} targetInfo {target, topTarget} 目标图形元素\n   * @param {string} eventName 事件名称\n   * @param {Object} event 事件对象\n   */\n  dispatchToElement: function (targetInfo, eventName, event) {\n    targetInfo = targetInfo || {};\n    var el = targetInfo.target;\n\n    if (el && el.silent) {\n      return;\n    }\n\n    var eventHandler = 'on' + eventName;\n    var eventPacket = makeEventPacket(eventName, targetInfo, event);\n\n    while (el) {\n      el[eventHandler] && (eventPacket.cancelBubble = el[eventHandler].call(el, eventPacket));\n      el.trigger(eventName, eventPacket);\n      el = el.parent;\n\n      if (eventPacket.cancelBubble) {\n        break;\n      }\n    }\n\n    if (!eventPacket.cancelBubble) {\n      // 冒泡到顶级 zrender 对象\n      this.trigger(eventName, eventPacket); // 分发事件到用户自定义层\n      // 用户有可能在全局 click 事件中 dispose，所以需要判断下 painter 是否存在\n\n      this.painter && this.painter.eachOtherLayer(function (layer) {\n        if (typeof layer[eventHandler] == 'function') {\n          layer[eventHandler].call(layer, eventPacket);\n        }\n\n        if (layer.trigger) {\n          layer.trigger(eventName, eventPacket);\n        }\n      });\n    }\n  },\n\n  /**\n   * @private\n   * @param {number} x\n   * @param {number} y\n   * @param {module:zrender/graphic/Displayable} exclude\n   * @return {model:zrender/Element}\n   * @method\n   */\n  findHover: function (x, y, exclude) {\n    var list = this.storage.getDisplayList();\n    var out = {\n      x: x,\n      y: y\n    };\n\n    for (var i = list.length - 1; i >= 0; i--) {\n      var hoverCheckResult;\n\n      if (list[i] !== exclude // getDisplayList may include ignored item in VML mode\n      && !list[i].ignore && (hoverCheckResult = isHover(list[i], x, y))) {\n        !out.topTarget && (out.topTarget = list[i]);\n\n        if (hoverCheckResult !== SILENT) {\n          out.target = list[i];\n          break;\n        }\n      }\n    }\n\n    return out;\n  }\n}; // Common handlers\n\nutil.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n  Handler.prototype[name] = function (event) {\n    // Find hover again to avoid click event is dispatched manually. Or click is triggered without mouseover\n    var hovered = this.findHover(event.zrX, event.zrY);\n    var hoveredTarget = hovered.target;\n\n    if (name === 'mousedown') {\n      this._downEl = hoveredTarget;\n      this._downPoint = [event.zrX, event.zrY]; // In case click triggered before mouseup\n\n      this._upEl = hoveredTarget;\n    } else if (name === 'mosueup') {\n      this._upEl = hoveredTarget;\n    } else if (name === 'click') {\n      if (this._downEl !== this._upEl // Original click event is triggered on the whole canvas element,\n      // including the case that `mousedown` - `mousemove` - `mouseup`,\n      // which should be filtered, otherwise it will bring trouble to\n      // pan and zoom.\n      || !this._downPoint // Arbitrary value\n      || vec2.dist(this._downPoint, [event.zrX, event.zrY]) > 4) {\n        return;\n      }\n\n      this._downPoint = null;\n    }\n\n    this.dispatchToElement(hovered, name, event);\n  };\n});\n\nfunction isHover(displayable, x, y) {\n  if (displayable[displayable.rectHover ? 'rectContain' : 'contain'](x, y)) {\n    var el = displayable;\n    var isSilent;\n\n    while (el) {\n      // If clipped by ancestor.\n      // FIXME: If clipPath has neither stroke nor fill,\n      // el.clipPath.contain(x, y) will always return false.\n      if (el.clipPath && !el.clipPath.contain(x, y)) {\n        return false;\n      }\n\n      if (el.silent) {\n        isSilent = true;\n      }\n\n      el = el.parent;\n    }\n\n    return isSilent ? SILENT : true;\n  }\n\n  return false;\n}\n\nutil.mixin(Handler, Eventful);\nutil.mixin(Handler, Draggable);\nvar _default = Handler;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1758:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar util = __webpack_require__(1479);\n\nvar _config = __webpack_require__(1555);\n\nvar devicePixelRatio = _config.devicePixelRatio;\n\nvar Style = __webpack_require__(1644);\n\nvar Pattern = __webpack_require__(1643);\n\n/**\n * @module zrender/Layer\n * @author pissang(https://www.github.com/pissang)\n */\nfunction returnFalse() {\n  return false;\n}\n/**\n * 创建dom\n *\n * @inner\n * @param {string} id dom id 待用\n * @param {Painter} painter painter instance\n * @param {number} number\n */\n\n\nfunction createDom(id, painter, dpr) {\n  var newDom = util.createCanvas();\n  var width = painter.getWidth();\n  var height = painter.getHeight();\n  var newDomStyle = newDom.style; // 没append呢，请原谅我这样写，清晰~\n\n  newDomStyle.position = 'absolute';\n  newDomStyle.left = 0;\n  newDomStyle.top = 0;\n  newDomStyle.width = width + 'px';\n  newDomStyle.height = height + 'px';\n  newDom.width = width * dpr;\n  newDom.height = height * dpr; // id不作为索引用，避免可能造成的重名，定义为私有属性\n\n  newDom.setAttribute('data-zr-dom-id', id);\n  return newDom;\n}\n/**\n * @alias module:zrender/Layer\n * @constructor\n * @extends module:zrender/mixin/Transformable\n * @param {string} id\n * @param {module:zrender/Painter} painter\n * @param {number} [dpr]\n */\n\n\nvar Layer = function (id, painter, dpr) {\n  var dom;\n  dpr = dpr || devicePixelRatio;\n\n  if (typeof id === 'string') {\n    dom = createDom(id, painter, dpr);\n  } // Not using isDom because in node it will return false\n  else if (util.isObject(id)) {\n      dom = id;\n      id = dom.id;\n    }\n\n  this.id = id;\n  this.dom = dom;\n  var domStyle = dom.style;\n\n  if (domStyle) {\n    // Not in node\n    dom.onselectstart = returnFalse; // 避免页面选中的尴尬\n\n    domStyle['-webkit-user-select'] = 'none';\n    domStyle['user-select'] = 'none';\n    domStyle['-webkit-touch-callout'] = 'none';\n    domStyle['-webkit-tap-highlight-color'] = 'rgba(0,0,0,0)';\n    domStyle['padding'] = 0;\n    domStyle['margin'] = 0;\n    domStyle['border-width'] = 0;\n  }\n\n  this.domBack = null;\n  this.ctxBack = null;\n  this.painter = painter;\n  this.config = null; // Configs\n\n  /**\n   * 每次清空画布的颜色\n   * @type {string}\n   * @default 0\n   */\n\n  this.clearColor = 0;\n  /**\n   * 是否开启动态模糊\n   * @type {boolean}\n   * @default false\n   */\n\n  this.motionBlur = false;\n  /**\n   * 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n   * @type {number}\n   * @default 0.7\n   */\n\n  this.lastFrameAlpha = 0.7;\n  /**\n   * Layer dpr\n   * @type {number}\n   */\n\n  this.dpr = dpr;\n};\n\nLayer.prototype = {\n  constructor: Layer,\n  elCount: 0,\n  __dirty: true,\n  initContext: function () {\n    this.ctx = this.dom.getContext('2d');\n    this.ctx.__currentValues = {};\n    this.ctx.dpr = this.dpr;\n  },\n  createBackBuffer: function () {\n    var dpr = this.dpr;\n    this.domBack = createDom('back-' + this.id, this.painter, dpr);\n    this.ctxBack = this.domBack.getContext('2d');\n    this.ctxBack.__currentValues = {};\n\n    if (dpr != 1) {\n      this.ctxBack.scale(dpr, dpr);\n    }\n  },\n\n  /**\n   * @param  {number} width\n   * @param  {number} height\n   */\n  resize: function (width, height) {\n    var dpr = this.dpr;\n    var dom = this.dom;\n    var domStyle = dom.style;\n    var domBack = this.domBack;\n    domStyle.width = width + 'px';\n    domStyle.height = height + 'px';\n    dom.width = width * dpr;\n    dom.height = height * dpr;\n\n    if (domBack) {\n      domBack.width = width * dpr;\n      domBack.height = height * dpr;\n\n      if (dpr != 1) {\n        this.ctxBack.scale(dpr, dpr);\n      }\n    }\n  },\n\n  /**\n   * 清空该层画布\n   * @param {boolean} clearAll Clear all with out motion blur\n   */\n  clear: function (clearAll) {\n    var dom = this.dom;\n    var ctx = this.ctx;\n    var width = dom.width;\n    var height = dom.height;\n    var clearColor = this.clearColor;\n    var haveMotionBLur = this.motionBlur && !clearAll;\n    var lastFrameAlpha = this.lastFrameAlpha;\n    var dpr = this.dpr;\n\n    if (haveMotionBLur) {\n      if (!this.domBack) {\n        this.createBackBuffer();\n      }\n\n      this.ctxBack.globalCompositeOperation = 'copy';\n      this.ctxBack.drawImage(dom, 0, 0, width / dpr, height / dpr);\n    }\n\n    ctx.clearRect(0, 0, width, height);\n\n    if (clearColor) {\n      var clearColorGradientOrPattern; // Gradient\n\n      if (clearColor.colorStops) {\n        // Cache canvas gradient\n        clearColorGradientOrPattern = clearColor.__canvasGradient || Style.getGradient(ctx, clearColor, {\n          x: 0,\n          y: 0,\n          width: width,\n          height: height\n        });\n        clearColor.__canvasGradient = clearColorGradientOrPattern;\n      } // Pattern\n      else if (clearColor.image) {\n          clearColorGradientOrPattern = Pattern.prototype.getCanvasPattern.call(clearColor, ctx);\n        }\n\n      ctx.save();\n      ctx.fillStyle = clearColorGradientOrPattern || clearColor;\n      ctx.fillRect(0, 0, width, height);\n      ctx.restore();\n    }\n\n    if (haveMotionBLur) {\n      var domBack = this.domBack;\n      ctx.save();\n      ctx.globalAlpha = lastFrameAlpha;\n      ctx.drawImage(domBack, 0, 0, width, height);\n      ctx.restore();\n    }\n  }\n};\nvar _default = Layer;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1759:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(1555);\n\nvar devicePixelRatio = _config.devicePixelRatio;\n\nvar util = __webpack_require__(1479);\n\nvar log = __webpack_require__(1641);\n\nvar BoundingRect = __webpack_require__(1497);\n\nvar timsort = __webpack_require__(1574);\n\nvar Layer = __webpack_require__(1758);\n\nvar requestAnimationFrame = __webpack_require__(1635);\n\nvar Image = __webpack_require__(1642);\n\n/**\n * Default canvas painter\n * @module zrender/Painter\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\n// PENDIGN\n// Layer exceeds MAX_PROGRESSIVE_LAYER_NUMBER may have some problem when flush directly second time.\n//\n// Maximum progressive layer. When exceeding this number. All elements will be drawed in the last layer.\nvar MAX_PROGRESSIVE_LAYER_NUMBER = 5;\n\nfunction parseInt10(val) {\n  return parseInt(val, 10);\n}\n\nfunction isLayerValid(layer) {\n  if (!layer) {\n    return false;\n  }\n\n  if (layer.__builtin__) {\n    return true;\n  }\n\n  if (typeof layer.resize !== 'function' || typeof layer.refresh !== 'function') {\n    return false;\n  }\n\n  return true;\n}\n\nfunction preProcessLayer(layer) {\n  layer.__unusedCount++;\n}\n\nfunction postProcessLayer(layer) {\n  if (layer.__unusedCount == 1) {\n    layer.clear();\n  }\n}\n\nvar tmpRect = new BoundingRect(0, 0, 0, 0);\nvar viewRect = new BoundingRect(0, 0, 0, 0);\n\nfunction isDisplayableCulled(el, width, height) {\n  tmpRect.copy(el.getBoundingRect());\n\n  if (el.transform) {\n    tmpRect.applyTransform(el.transform);\n  }\n\n  viewRect.width = width;\n  viewRect.height = height;\n  return !tmpRect.intersect(viewRect);\n}\n\nfunction isClipPathChanged(clipPaths, prevClipPaths) {\n  if (clipPaths == prevClipPaths) {\n    // Can both be null or undefined\n    return false;\n  }\n\n  if (!clipPaths || !prevClipPaths || clipPaths.length !== prevClipPaths.length) {\n    return true;\n  }\n\n  for (var i = 0; i < clipPaths.length; i++) {\n    if (clipPaths[i] !== prevClipPaths[i]) {\n      return true;\n    }\n  }\n}\n\nfunction doClip(clipPaths, ctx) {\n  for (var i = 0; i < clipPaths.length; i++) {\n    var clipPath = clipPaths[i];\n    clipPath.setTransform(ctx);\n    ctx.beginPath();\n    clipPath.buildPath(ctx, clipPath.shape);\n    ctx.clip(); // Transform back\n\n    clipPath.restoreTransform(ctx);\n  }\n}\n\nfunction createRoot(width, height) {\n  var domRoot = document.createElement('div'); // domRoot.onselectstart = returnFalse; // 避免页面选中的尴尬\n\n  domRoot.style.cssText = ['position:relative', 'overflow:hidden', 'width:' + width + 'px', 'height:' + height + 'px', 'padding:0', 'margin:0', 'border-width:0'].join(';') + ';';\n  return domRoot;\n}\n/**\n * @alias module:zrender/Painter\n * @constructor\n * @param {HTMLElement} root 绘图容器\n * @param {module:zrender/Storage} storage\n * @param {Object} opts\n */\n\n\nvar Painter = function (root, storage, opts) {\n  this.type = 'canvas'; // In node environment using node-canvas\n\n  var singleCanvas = !root.nodeName // In node ?\n  || root.nodeName.toUpperCase() === 'CANVAS';\n  this._opts = opts = util.extend({}, opts || {});\n  /**\n   * @type {number}\n   */\n\n  this.dpr = opts.devicePixelRatio || devicePixelRatio;\n  /**\n   * @type {boolean}\n   * @private\n   */\n\n  this._singleCanvas = singleCanvas;\n  /**\n   * 绘图容器\n   * @type {HTMLElement}\n   */\n\n  this.root = root;\n  var rootStyle = root.style;\n\n  if (rootStyle) {\n    rootStyle['-webkit-tap-highlight-color'] = 'transparent';\n    rootStyle['-webkit-user-select'] = rootStyle['user-select'] = rootStyle['-webkit-touch-callout'] = 'none';\n    root.innerHTML = '';\n  }\n  /**\n   * @type {module:zrender/Storage}\n   */\n\n\n  this.storage = storage;\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n\n  var zlevelList = this._zlevelList = [];\n  /**\n   * @type {Object.<string, module:zrender/Layer>}\n   * @private\n   */\n\n  var layers = this._layers = {};\n  /**\n   * @type {Object.<string, Object>}\n   * @type {private}\n   */\n\n  this._layerConfig = {};\n\n  if (!singleCanvas) {\n    this._width = this._getSize(0);\n    this._height = this._getSize(1);\n    var domRoot = this._domRoot = createRoot(this._width, this._height);\n    root.appendChild(domRoot);\n  } else {\n    if (opts.width != null) {\n      root.width = opts.width;\n    }\n\n    if (opts.height != null) {\n      root.height = opts.height;\n    } // Use canvas width and height directly\n\n\n    var width = root.width;\n    var height = root.height;\n    this._width = width;\n    this._height = height; // Create layer if only one given canvas\n    // Device pixel ratio is fixed to 1 because given canvas has its specified width and height\n\n    var mainLayer = new Layer(root, this, 1);\n    mainLayer.initContext(); // FIXME Use canvas width and height\n    // mainLayer.resize(width, height);\n\n    layers[0] = mainLayer;\n    zlevelList.push(0);\n    this._domRoot = root;\n  } // Layers for progressive rendering\n\n\n  this._progressiveLayers = [];\n  /**\n   * @type {module:zrender/Layer}\n   * @private\n   */\n\n  this._hoverlayer;\n  this._hoverElements = [];\n};\n\nPainter.prototype = {\n  constructor: Painter,\n  getType: function () {\n    return 'canvas';\n  },\n\n  /**\n   * If painter use a single canvas\n   * @return {boolean}\n   */\n  isSingleCanvas: function () {\n    return this._singleCanvas;\n  },\n\n  /**\n   * @return {HTMLDivElement}\n   */\n  getViewportRoot: function () {\n    return this._domRoot;\n  },\n  getViewportRootOffset: function () {\n    var viewportRoot = this.getViewportRoot();\n\n    if (viewportRoot) {\n      return {\n        offsetLeft: viewportRoot.offsetLeft || 0,\n        offsetTop: viewportRoot.offsetTop || 0\n      };\n    }\n  },\n\n  /**\n   * 刷新\n   * @param {boolean} [paintAll=false] 强制绘制所有displayable\n   */\n  refresh: function (paintAll) {\n    var list = this.storage.getDisplayList(true);\n    var zlevelList = this._zlevelList;\n\n    this._paintList(list, paintAll); // Paint custum layers\n\n\n    for (var i = 0; i < zlevelList.length; i++) {\n      var z = zlevelList[i];\n      var layer = this._layers[z];\n\n      if (!layer.__builtin__ && layer.refresh) {\n        layer.refresh();\n      }\n    }\n\n    this.refreshHover();\n\n    if (this._progressiveLayers.length) {\n      this._startProgessive();\n    }\n\n    return this;\n  },\n  addHover: function (el, hoverStyle) {\n    if (el.__hoverMir) {\n      return;\n    }\n\n    var elMirror = new el.constructor({\n      style: el.style,\n      shape: el.shape\n    });\n    elMirror.__from = el;\n    el.__hoverMir = elMirror;\n    elMirror.setStyle(hoverStyle);\n\n    this._hoverElements.push(elMirror);\n  },\n  removeHover: function (el) {\n    var elMirror = el.__hoverMir;\n    var hoverElements = this._hoverElements;\n    var idx = util.indexOf(hoverElements, elMirror);\n\n    if (idx >= 0) {\n      hoverElements.splice(idx, 1);\n    }\n\n    el.__hoverMir = null;\n  },\n  clearHover: function (el) {\n    var hoverElements = this._hoverElements;\n\n    for (var i = 0; i < hoverElements.length; i++) {\n      var from = hoverElements[i].__from;\n\n      if (from) {\n        from.__hoverMir = null;\n      }\n    }\n\n    hoverElements.length = 0;\n  },\n  refreshHover: function () {\n    var hoverElements = this._hoverElements;\n    var len = hoverElements.length;\n    var hoverLayer = this._hoverlayer;\n    hoverLayer && hoverLayer.clear();\n\n    if (!len) {\n      return;\n    }\n\n    timsort(hoverElements, this.storage.displayableSortFunc); // Use a extream large zlevel\n    // FIXME?\n\n    if (!hoverLayer) {\n      hoverLayer = this._hoverlayer = this.getLayer(1e5);\n    }\n\n    var scope = {};\n    hoverLayer.ctx.save();\n\n    for (var i = 0; i < len;) {\n      var el = hoverElements[i];\n      var originalEl = el.__from; // Original el is removed\n      // PENDING\n\n      if (!(originalEl && originalEl.__zr)) {\n        hoverElements.splice(i, 1);\n        originalEl.__hoverMir = null;\n        len--;\n        continue;\n      }\n\n      i++; // Use transform\n      // FIXME style and shape ?\n\n      if (!originalEl.invisible) {\n        el.transform = originalEl.transform;\n        el.invTransform = originalEl.invTransform;\n        el.__clipPaths = originalEl.__clipPaths; // el.\n\n        this._doPaintEl(el, hoverLayer, true, scope);\n      }\n    }\n\n    hoverLayer.ctx.restore();\n  },\n  _startProgessive: function () {\n    var self = this;\n\n    if (!self._furtherProgressive) {\n      return;\n    } // Use a token to stop progress steps triggered by\n    // previous zr.refresh calling.\n\n\n    var token = self._progressiveToken = +new Date();\n    self._progress++;\n    requestAnimationFrame(step);\n\n    function step() {\n      // In case refreshed or disposed\n      if (token === self._progressiveToken && self.storage) {\n        self._doPaintList(self.storage.getDisplayList());\n\n        if (self._furtherProgressive) {\n          self._progress++;\n          requestAnimationFrame(step);\n        } else {\n          self._progressiveToken = -1;\n        }\n      }\n    }\n  },\n  _clearProgressive: function () {\n    this._progressiveToken = -1;\n    this._progress = 0;\n    util.each(this._progressiveLayers, function (layer) {\n      layer.__dirty && layer.clear();\n    });\n  },\n  _paintList: function (list, paintAll) {\n    if (paintAll == null) {\n      paintAll = false;\n    }\n\n    this._updateLayerStatus(list);\n\n    this._clearProgressive();\n\n    this.eachBuiltinLayer(preProcessLayer);\n\n    this._doPaintList(list, paintAll);\n\n    this.eachBuiltinLayer(postProcessLayer);\n  },\n  _doPaintList: function (list, paintAll) {\n    var currentLayer;\n    var currentZLevel;\n    var ctx; // var invTransform = [];\n\n    var scope;\n    var progressiveLayerIdx = 0;\n    var currentProgressiveLayer;\n    var width = this._width;\n    var height = this._height;\n    var layerProgress;\n    var frame = this._progress;\n\n    function flushProgressiveLayer(layer) {\n      var dpr = ctx.dpr || 1;\n      ctx.save();\n      ctx.globalAlpha = 1;\n      ctx.shadowBlur = 0; // Avoid layer don't clear in next progressive frame\n\n      currentLayer.__dirty = true;\n      ctx.setTransform(1, 0, 0, 1, 0, 0);\n      ctx.drawImage(layer.dom, 0, 0, width * dpr, height * dpr);\n      ctx.restore();\n    }\n\n    for (var i = 0, l = list.length; i < l; i++) {\n      var el = list[i];\n      var elZLevel = this._singleCanvas ? 0 : el.zlevel;\n      var elFrame = el.__frame; // Flush at current context\n      // PENDING\n\n      if (elFrame < 0 && currentProgressiveLayer) {\n        flushProgressiveLayer(currentProgressiveLayer);\n        currentProgressiveLayer = null;\n      } // Change draw layer\n\n\n      if (currentZLevel !== elZLevel) {\n        if (ctx) {\n          ctx.restore();\n        } // Reset scope\n\n\n        scope = {}; // Only 0 zlevel if only has one canvas\n\n        currentZLevel = elZLevel;\n        currentLayer = this.getLayer(currentZLevel);\n\n        if (!currentLayer.__builtin__) {\n          log('ZLevel ' + currentZLevel + ' has been used by unkown layer ' + currentLayer.id);\n        }\n\n        ctx = currentLayer.ctx;\n        ctx.save(); // Reset the count\n\n        currentLayer.__unusedCount = 0;\n\n        if (currentLayer.__dirty || paintAll) {\n          currentLayer.clear();\n        }\n      }\n\n      if (!(currentLayer.__dirty || paintAll)) {\n        continue;\n      }\n\n      if (elFrame >= 0) {\n        // Progressive layer changed\n        if (!currentProgressiveLayer) {\n          currentProgressiveLayer = this._progressiveLayers[Math.min(progressiveLayerIdx++, MAX_PROGRESSIVE_LAYER_NUMBER - 1)];\n          currentProgressiveLayer.ctx.save();\n          currentProgressiveLayer.renderScope = {};\n\n          if (currentProgressiveLayer && currentProgressiveLayer.__progress > currentProgressiveLayer.__maxProgress) {\n            // flushProgressiveLayer(currentProgressiveLayer);\n            // Quick jump all progressive elements\n            // All progressive element are not dirty, jump over and flush directly\n            i = currentProgressiveLayer.__nextIdxNotProg - 1; // currentProgressiveLayer = null;\n\n            continue;\n          }\n\n          layerProgress = currentProgressiveLayer.__progress;\n\n          if (!currentProgressiveLayer.__dirty) {\n            // Keep rendering\n            frame = layerProgress;\n          }\n\n          currentProgressiveLayer.__progress = frame + 1;\n        }\n\n        if (elFrame === frame) {\n          this._doPaintEl(el, currentProgressiveLayer, true, currentProgressiveLayer.renderScope);\n        }\n      } else {\n        this._doPaintEl(el, currentLayer, paintAll, scope);\n      }\n\n      el.__dirty = false;\n    }\n\n    if (currentProgressiveLayer) {\n      flushProgressiveLayer(currentProgressiveLayer);\n    } // Restore the lastLayer ctx\n\n\n    ctx && ctx.restore(); // If still has clipping state\n    // if (scope.prevElClipPaths) {\n    //     ctx.restore();\n    // }\n\n    this._furtherProgressive = false;\n    util.each(this._progressiveLayers, function (layer) {\n      if (layer.__maxProgress >= layer.__progress) {\n        this._furtherProgressive = true;\n      }\n    }, this);\n  },\n  _doPaintEl: function (el, currentLayer, forcePaint, scope) {\n    var ctx = currentLayer.ctx;\n    var m = el.transform;\n\n    if ((currentLayer.__dirty || forcePaint) && // Ignore invisible element\n    !el.invisible // Ignore transparent element\n    && el.style.opacity !== 0 // Ignore scale 0 element, in some environment like node-canvas\n    // Draw a scale 0 element can cause all following draw wrong\n    // And setTransform with scale 0 will cause set back transform failed.\n    && !(m && !m[0] && !m[3]) // Ignore culled element\n    && !(el.culling && isDisplayableCulled(el, this._width, this._height))) {\n      var clipPaths = el.__clipPaths; // Optimize when clipping on group with several elements\n\n      if (scope.prevClipLayer !== currentLayer || isClipPathChanged(clipPaths, scope.prevElClipPaths)) {\n        // If has previous clipping state, restore from it\n        if (scope.prevElClipPaths) {\n          scope.prevClipLayer.ctx.restore();\n          scope.prevClipLayer = scope.prevElClipPaths = null; // Reset prevEl since context has been restored\n\n          scope.prevEl = null;\n        } // New clipping state\n\n\n        if (clipPaths) {\n          ctx.save();\n          doClip(clipPaths, ctx);\n          scope.prevClipLayer = currentLayer;\n          scope.prevElClipPaths = clipPaths;\n        }\n      }\n\n      el.beforeBrush && el.beforeBrush(ctx);\n      el.brush(ctx, scope.prevEl || null);\n      scope.prevEl = el;\n      el.afterBrush && el.afterBrush(ctx);\n    }\n  },\n\n  /**\n   * 获取 zlevel 所在层，如果不存在则会创建一个新的层\n   * @param {number} zlevel\n   * @return {module:zrender/Layer}\n   */\n  getLayer: function (zlevel) {\n    if (this._singleCanvas) {\n      return this._layers[0];\n    }\n\n    var layer = this._layers[zlevel];\n\n    if (!layer) {\n      // Create a new layer\n      layer = new Layer('zr_' + zlevel, this, this.dpr);\n      layer.__builtin__ = true;\n\n      if (this._layerConfig[zlevel]) {\n        util.merge(layer, this._layerConfig[zlevel], true);\n      }\n\n      this.insertLayer(zlevel, layer); // Context is created after dom inserted to document\n      // Or excanvas will get 0px clientWidth and clientHeight\n\n      layer.initContext();\n    }\n\n    return layer;\n  },\n  insertLayer: function (zlevel, layer) {\n    var layersMap = this._layers;\n    var zlevelList = this._zlevelList;\n    var len = zlevelList.length;\n    var prevLayer = null;\n    var i = -1;\n    var domRoot = this._domRoot;\n\n    if (layersMap[zlevel]) {\n      log('ZLevel ' + zlevel + ' has been used already');\n      return;\n    } // Check if is a valid layer\n\n\n    if (!isLayerValid(layer)) {\n      log('Layer of zlevel ' + zlevel + ' is not valid');\n      return;\n    }\n\n    if (len > 0 && zlevel > zlevelList[0]) {\n      for (i = 0; i < len - 1; i++) {\n        if (zlevelList[i] < zlevel && zlevelList[i + 1] > zlevel) {\n          break;\n        }\n      }\n\n      prevLayer = layersMap[zlevelList[i]];\n    }\n\n    zlevelList.splice(i + 1, 0, zlevel);\n    layersMap[zlevel] = layer; // Vitual layer will not directly show on the screen.\n    // (It can be a WebGL layer and assigned to a ZImage element)\n    // But it still under management of zrender.\n\n    if (!layer.virtual) {\n      if (prevLayer) {\n        var prevDom = prevLayer.dom;\n\n        if (prevDom.nextSibling) {\n          domRoot.insertBefore(layer.dom, prevDom.nextSibling);\n        } else {\n          domRoot.appendChild(layer.dom);\n        }\n      } else {\n        if (domRoot.firstChild) {\n          domRoot.insertBefore(layer.dom, domRoot.firstChild);\n        } else {\n          domRoot.appendChild(layer.dom);\n        }\n      }\n    }\n  },\n  // Iterate each layer\n  eachLayer: function (cb, context) {\n    var zlevelList = this._zlevelList;\n    var z;\n    var i;\n\n    for (i = 0; i < zlevelList.length; i++) {\n      z = zlevelList[i];\n      cb.call(context, this._layers[z], z);\n    }\n  },\n  // Iterate each buildin layer\n  eachBuiltinLayer: function (cb, context) {\n    var zlevelList = this._zlevelList;\n    var layer;\n    var z;\n    var i;\n\n    for (i = 0; i < zlevelList.length; i++) {\n      z = zlevelList[i];\n      layer = this._layers[z];\n\n      if (layer.__builtin__) {\n        cb.call(context, layer, z);\n      }\n    }\n  },\n  // Iterate each other layer except buildin layer\n  eachOtherLayer: function (cb, context) {\n    var zlevelList = this._zlevelList;\n    var layer;\n    var z;\n    var i;\n\n    for (i = 0; i < zlevelList.length; i++) {\n      z = zlevelList[i];\n      layer = this._layers[z];\n\n      if (!layer.__builtin__) {\n        cb.call(context, layer, z);\n      }\n    }\n  },\n\n  /**\n   * 获取所有已创建的层\n   * @param {Array.<module:zrender/Layer>} [prevLayer]\n   */\n  getLayers: function () {\n    return this._layers;\n  },\n  _updateLayerStatus: function (list) {\n    var layers = this._layers;\n    var progressiveLayers = this._progressiveLayers;\n    var elCountsLastFrame = {};\n    var progressiveElCountsLastFrame = {};\n    this.eachBuiltinLayer(function (layer, z) {\n      elCountsLastFrame[z] = layer.elCount;\n      layer.elCount = 0;\n      layer.__dirty = false;\n    });\n    util.each(progressiveLayers, function (layer, idx) {\n      progressiveElCountsLastFrame[idx] = layer.elCount;\n      layer.elCount = 0;\n      layer.__dirty = false;\n    });\n    var progressiveLayerCount = 0;\n    var currentProgressiveLayer;\n    var lastProgressiveKey;\n    var frameCount = 0;\n\n    for (var i = 0, l = list.length; i < l; i++) {\n      var el = list[i];\n      var zlevel = this._singleCanvas ? 0 : el.zlevel;\n      var layer = layers[zlevel];\n      var elProgress = el.progressive;\n\n      if (layer) {\n        layer.elCount++;\n        layer.__dirty = layer.__dirty || el.__dirty;\n      } /////// Update progressive\n\n\n      if (elProgress >= 0) {\n        // Fix wrong progressive sequence problem.\n        if (lastProgressiveKey !== elProgress) {\n          lastProgressiveKey = elProgress;\n          frameCount++;\n        }\n\n        var elFrame = el.__frame = frameCount - 1;\n\n        if (!currentProgressiveLayer) {\n          var idx = Math.min(progressiveLayerCount, MAX_PROGRESSIVE_LAYER_NUMBER - 1);\n          currentProgressiveLayer = progressiveLayers[idx];\n\n          if (!currentProgressiveLayer) {\n            currentProgressiveLayer = progressiveLayers[idx] = new Layer('progressive', this, this.dpr);\n            currentProgressiveLayer.initContext();\n          }\n\n          currentProgressiveLayer.__maxProgress = 0;\n        }\n\n        currentProgressiveLayer.__dirty = currentProgressiveLayer.__dirty || el.__dirty;\n        currentProgressiveLayer.elCount++;\n        currentProgressiveLayer.__maxProgress = Math.max(currentProgressiveLayer.__maxProgress, elFrame);\n\n        if (currentProgressiveLayer.__maxProgress >= currentProgressiveLayer.__progress) {\n          // Should keep rendering this  layer because progressive rendering is not finished yet\n          layer.__dirty = true;\n        }\n      } else {\n        el.__frame = -1;\n\n        if (currentProgressiveLayer) {\n          currentProgressiveLayer.__nextIdxNotProg = i;\n          progressiveLayerCount++;\n          currentProgressiveLayer = null;\n        }\n      }\n    }\n\n    if (currentProgressiveLayer) {\n      progressiveLayerCount++;\n      currentProgressiveLayer.__nextIdxNotProg = i;\n    } // 层中的元素数量有发生变化\n\n\n    this.eachBuiltinLayer(function (layer, z) {\n      if (elCountsLastFrame[z] !== layer.elCount) {\n        layer.__dirty = true;\n      }\n    });\n    progressiveLayers.length = Math.min(progressiveLayerCount, MAX_PROGRESSIVE_LAYER_NUMBER);\n    util.each(progressiveLayers, function (layer, idx) {\n      if (progressiveElCountsLastFrame[idx] !== layer.elCount) {\n        el.__dirty = true;\n      }\n\n      if (layer.__dirty) {\n        layer.__progress = 0;\n      }\n    });\n  },\n\n  /**\n   * 清除hover层外所有内容\n   */\n  clear: function () {\n    this.eachBuiltinLayer(this._clearLayer);\n    return this;\n  },\n  _clearLayer: function (layer) {\n    layer.clear();\n  },\n\n  /**\n   * 修改指定zlevel的绘制参数\n   *\n   * @param {string} zlevel\n   * @param {Object} config 配置对象\n   * @param {string} [config.clearColor=0] 每次清空画布的颜色\n   * @param {string} [config.motionBlur=false] 是否开启动态模糊\n   * @param {number} [config.lastFrameAlpha=0.7]\n   *                 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n   */\n  configLayer: function (zlevel, config) {\n    if (config) {\n      var layerConfig = this._layerConfig;\n\n      if (!layerConfig[zlevel]) {\n        layerConfig[zlevel] = config;\n      } else {\n        util.merge(layerConfig[zlevel], config, true);\n      }\n\n      var layer = this._layers[zlevel];\n\n      if (layer) {\n        util.merge(layer, layerConfig[zlevel], true);\n      }\n    }\n  },\n\n  /**\n   * 删除指定层\n   * @param {number} zlevel 层所在的zlevel\n   */\n  delLayer: function (zlevel) {\n    var layers = this._layers;\n    var zlevelList = this._zlevelList;\n    var layer = layers[zlevel];\n\n    if (!layer) {\n      return;\n    }\n\n    layer.dom.parentNode.removeChild(layer.dom);\n    delete layers[zlevel];\n    zlevelList.splice(util.indexOf(zlevelList, zlevel), 1);\n  },\n\n  /**\n   * 区域大小变化后重绘\n   */\n  resize: function (width, height) {\n    var domRoot = this._domRoot; // FIXME Why ?\n\n    domRoot.style.display = 'none'; // Save input w/h\n\n    var opts = this._opts;\n    width != null && (opts.width = width);\n    height != null && (opts.height = height);\n    width = this._getSize(0);\n    height = this._getSize(1);\n    domRoot.style.display = ''; // 优化没有实际改变的resize\n\n    if (this._width != width || height != this._height) {\n      domRoot.style.width = width + 'px';\n      domRoot.style.height = height + 'px';\n\n      for (var id in this._layers) {\n        if (this._layers.hasOwnProperty(id)) {\n          this._layers[id].resize(width, height);\n        }\n      }\n\n      util.each(this._progressiveLayers, function (layer) {\n        layer.resize(width, height);\n      });\n      this.refresh(true);\n    }\n\n    this._width = width;\n    this._height = height;\n    return this;\n  },\n\n  /**\n   * 清除单独的一个层\n   * @param {number} zlevel\n   */\n  clearLayer: function (zlevel) {\n    var layer = this._layers[zlevel];\n\n    if (layer) {\n      layer.clear();\n    }\n  },\n\n  /**\n   * 释放\n   */\n  dispose: function () {\n    this.root.innerHTML = '';\n    this.root = this.storage = this._domRoot = this._layers = null;\n  },\n\n  /**\n   * Get canvas which has all thing rendered\n   * @param {Object} opts\n   * @param {string} [opts.backgroundColor]\n   * @param {number} [opts.pixelRatio]\n   */\n  getRenderedCanvas: function (opts) {\n    opts = opts || {};\n\n    if (this._singleCanvas) {\n      return this._layers[0].dom;\n    }\n\n    var imageLayer = new Layer('image', this, opts.pixelRatio || this.dpr);\n    imageLayer.initContext();\n    imageLayer.clearColor = opts.backgroundColor;\n    imageLayer.clear();\n    var displayList = this.storage.getDisplayList(true);\n    var scope = {};\n    var zlevel;\n    var self = this;\n\n    function findAndDrawOtherLayer(smaller, larger) {\n      var zlevelList = self._zlevelList;\n\n      if (smaller == null) {\n        smaller = -Infinity;\n      }\n\n      var intermediateLayer;\n\n      for (var i = 0; i < zlevelList.length; i++) {\n        var z = zlevelList[i];\n        var layer = self._layers[z];\n\n        if (!layer.__builtin__ && z > smaller && z < larger) {\n          intermediateLayer = layer;\n          break;\n        }\n      }\n\n      if (intermediateLayer && intermediateLayer.renderToCanvas) {\n        imageLayer.ctx.save();\n        intermediateLayer.renderToCanvas(imageLayer.ctx);\n        imageLayer.ctx.restore();\n      }\n    }\n\n    for (var i = 0; i < displayList.length; i++) {\n      var el = displayList[i];\n\n      if (el.zlevel !== zlevel) {\n        findAndDrawOtherLayer(zlevel, el.zlevel);\n        zlevel = el.zlevel;\n      }\n\n      this._doPaintEl(el, imageLayer, true, scope);\n    }\n\n    findAndDrawOtherLayer(zlevel, Infinity);\n    return imageLayer.dom;\n  },\n\n  /**\n   * 获取绘图区域宽度\n   */\n  getWidth: function () {\n    return this._width;\n  },\n\n  /**\n   * 获取绘图区域高度\n   */\n  getHeight: function () {\n    return this._height;\n  },\n  _getSize: function (whIdx) {\n    var opts = this._opts;\n    var wh = ['width', 'height'][whIdx];\n    var cwh = ['clientWidth', 'clientHeight'][whIdx];\n    var plt = ['paddingLeft', 'paddingTop'][whIdx];\n    var prb = ['paddingRight', 'paddingBottom'][whIdx];\n\n    if (opts[wh] != null && opts[wh] !== 'auto') {\n      return parseFloat(opts[wh]);\n    }\n\n    var root = this.root; // IE8 does not support getComputedStyle, but it use VML.\n\n    var stl = document.defaultView.getComputedStyle(root);\n    return (root[cwh] || parseInt10(stl[wh]) || parseInt10(root.style[wh])) - (parseInt10(stl[plt]) || 0) - (parseInt10(stl[prb]) || 0) | 0;\n  },\n  pathToImage: function (path, dpr) {\n    dpr = dpr || this.dpr;\n    var canvas = document.createElement('canvas');\n    var ctx = canvas.getContext('2d');\n    var rect = path.getBoundingRect();\n    var style = path.style;\n    var shadowBlurSize = style.shadowBlur;\n    var shadowOffsetX = style.shadowOffsetX;\n    var shadowOffsetY = style.shadowOffsetY;\n    var lineWidth = style.hasStroke() ? style.lineWidth : 0;\n    var leftMargin = Math.max(lineWidth / 2, -shadowOffsetX + shadowBlurSize);\n    var rightMargin = Math.max(lineWidth / 2, shadowOffsetX + shadowBlurSize);\n    var topMargin = Math.max(lineWidth / 2, -shadowOffsetY + shadowBlurSize);\n    var bottomMargin = Math.max(lineWidth / 2, shadowOffsetY + shadowBlurSize);\n    var width = rect.width + leftMargin + rightMargin;\n    var height = rect.height + topMargin + bottomMargin;\n    canvas.width = width * dpr;\n    canvas.height = height * dpr;\n    ctx.scale(dpr, dpr);\n    ctx.clearRect(0, 0, width, height);\n    ctx.dpr = dpr;\n    var pathTransform = {\n      position: path.position,\n      rotation: path.rotation,\n      scale: path.scale\n    };\n    path.position = [leftMargin - rect.x, topMargin - rect.y];\n    path.rotation = 0;\n    path.scale = [1, 1];\n    path.updateTransform();\n\n    if (path) {\n      path.brush(ctx);\n    }\n\n    var ImageShape = Image;\n    var imgShape = new ImageShape({\n      style: {\n        x: 0,\n        y: 0,\n        image: canvas\n      }\n    });\n\n    if (pathTransform.position != null) {\n      imgShape.position = path.position = pathTransform.position;\n    }\n\n    if (pathTransform.rotation != null) {\n      imgShape.rotation = path.rotation = pathTransform.rotation;\n    }\n\n    if (pathTransform.scale != null) {\n      imgShape.scale = path.scale = pathTransform.scale;\n    }\n\n    return imgShape;\n  }\n};\nvar _default = Painter;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1760:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar util = __webpack_require__(1479);\n\nvar env = __webpack_require__(1495);\n\nvar Group = __webpack_require__(1556);\n\nvar timsort = __webpack_require__(1574);\n\n/**\n * Storage内容仓库模块\n * @module zrender/Storage\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n * @author errorrik (errorrik@gmail.com)\n * @author pissang (https://github.com/pissang/)\n */\n// Use timsort because in most case elements are partially sorted\n// https://jsfiddle.net/pissang/jr4x7mdm/8/\nfunction shapeCompareFunc(a, b) {\n  if (a.zlevel === b.zlevel) {\n    if (a.z === b.z) {\n      // if (a.z2 === b.z2) {\n      //     // FIXME Slow has renderidx compare\n      //     // http://stackoverflow.com/questions/20883421/sorting-in-javascript-should-every-compare-function-have-a-return-0-statement\n      //     // https://github.com/v8/v8/blob/47cce544a31ed5577ffe2963f67acb4144ee0232/src/js/array.js#L1012\n      //     return a.__renderidx - b.__renderidx;\n      // }\n      return a.z2 - b.z2;\n    }\n\n    return a.z - b.z;\n  }\n\n  return a.zlevel - b.zlevel;\n}\n/**\n * 内容仓库 (M)\n * @alias module:zrender/Storage\n * @constructor\n */\n\n\nvar Storage = function () {\n  // jshint ignore:line\n  this._roots = [];\n  this._displayList = [];\n  this._displayListLen = 0;\n};\n\nStorage.prototype = {\n  constructor: Storage,\n\n  /**\n   * @param  {Function} cb\n   *\n   */\n  traverse: function (cb, context) {\n    for (var i = 0; i < this._roots.length; i++) {\n      this._roots[i].traverse(cb, context);\n    }\n  },\n\n  /**\n   * 返回所有图形的绘制队列\n   * @param {boolean} [update=false] 是否在返回前更新该数组\n   * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组, 在 update 为 true 的时候有效\n   *\n   * 详见{@link module:zrender/graphic/Displayable.prototype.updateDisplayList}\n   * @return {Array.<module:zrender/graphic/Displayable>}\n   */\n  getDisplayList: function (update, includeIgnore) {\n    includeIgnore = includeIgnore || false;\n\n    if (update) {\n      this.updateDisplayList(includeIgnore);\n    }\n\n    return this._displayList;\n  },\n\n  /**\n   * 更新图形的绘制队列。\n   * 每次绘制前都会调用，该方法会先深度优先遍历整个树，更新所有Group和Shape的变换并且把所有可见的Shape保存到数组中，\n   * 最后根据绘制的优先级（zlevel > z > 插入顺序）排序得到绘制队列\n   * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组\n   */\n  updateDisplayList: function (includeIgnore) {\n    this._displayListLen = 0;\n    var roots = this._roots;\n    var displayList = this._displayList;\n\n    for (var i = 0, len = roots.length; i < len; i++) {\n      this._updateAndAddDisplayable(roots[i], null, includeIgnore);\n    }\n\n    displayList.length = this._displayListLen; // for (var i = 0, len = displayList.length; i < len; i++) {\n    //     displayList[i].__renderidx = i;\n    // }\n    // displayList.sort(shapeCompareFunc);\n\n    env.canvasSupported && timsort(displayList, shapeCompareFunc);\n  },\n  _updateAndAddDisplayable: function (el, clipPaths, includeIgnore) {\n    if (el.ignore && !includeIgnore) {\n      return;\n    }\n\n    el.beforeUpdate();\n\n    if (el.__dirty) {\n      el.update();\n    }\n\n    el.afterUpdate();\n    var userSetClipPath = el.clipPath;\n\n    if (userSetClipPath) {\n      // FIXME 效率影响\n      if (clipPaths) {\n        clipPaths = clipPaths.slice();\n      } else {\n        clipPaths = [];\n      }\n\n      var currentClipPath = userSetClipPath;\n      var parentClipPath = el; // Recursively add clip path\n\n      while (currentClipPath) {\n        // clipPath 的变换是基于使用这个 clipPath 的元素\n        currentClipPath.parent = parentClipPath;\n        currentClipPath.updateTransform();\n        clipPaths.push(currentClipPath);\n        parentClipPath = currentClipPath;\n        currentClipPath = currentClipPath.clipPath;\n      }\n    }\n\n    if (el.isGroup) {\n      var children = el._children;\n\n      for (var i = 0; i < children.length; i++) {\n        var child = children[i]; // Force to mark as dirty if group is dirty\n        // FIXME __dirtyPath ?\n\n        if (el.__dirty) {\n          child.__dirty = true;\n        }\n\n        this._updateAndAddDisplayable(child, clipPaths, includeIgnore);\n      } // Mark group clean here\n\n\n      el.__dirty = false;\n    } else {\n      el.__clipPaths = clipPaths;\n      this._displayList[this._displayListLen++] = el;\n    }\n  },\n\n  /**\n   * 添加图形(Shape)或者组(Group)到根节点\n   * @param {module:zrender/Element} el\n   */\n  addRoot: function (el) {\n    if (el.__storage === this) {\n      return;\n    }\n\n    if (el instanceof Group) {\n      el.addChildrenToStorage(this);\n    }\n\n    this.addToStorage(el);\n\n    this._roots.push(el);\n  },\n\n  /**\n   * 删除指定的图形(Shape)或者组(Group)\n   * @param {string|Array.<string>} [el] 如果为空清空整个Storage\n   */\n  delRoot: function (el) {\n    if (el == null) {\n      // 不指定el清空\n      for (var i = 0; i < this._roots.length; i++) {\n        var root = this._roots[i];\n\n        if (root instanceof Group) {\n          root.delChildrenFromStorage(this);\n        }\n      }\n\n      this._roots = [];\n      this._displayList = [];\n      this._displayListLen = 0;\n      return;\n    }\n\n    if (el instanceof Array) {\n      for (var i = 0, l = el.length; i < l; i++) {\n        this.delRoot(el[i]);\n      }\n\n      return;\n    }\n\n    var idx = util.indexOf(this._roots, el);\n\n    if (idx >= 0) {\n      this.delFromStorage(el);\n\n      this._roots.splice(idx, 1);\n\n      if (el instanceof Group) {\n        el.delChildrenFromStorage(this);\n      }\n    }\n  },\n  addToStorage: function (el) {\n    el.__storage = this;\n    el.dirty(false);\n    return this;\n  },\n  delFromStorage: function (el) {\n    if (el) {\n      el.__storage = null;\n    }\n\n    return this;\n  },\n\n  /**\n   * 清空并且释放Storage\n   */\n  dispose: function () {\n    this._renderList = this._roots = null;\n  },\n  displayableSortFunc: shapeCompareFunc\n};\nvar _default = Storage;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1761:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar util = __webpack_require__(1479);\n\nvar _event = __webpack_require__(1531);\n\nvar Dispatcher = _event.Dispatcher;\n\nvar requestAnimationFrame = __webpack_require__(1635);\n\nvar Animator = __webpack_require__(1634);\n\n/**\n * 动画主类, 调度和管理所有动画控制器\n *\n * @module zrender/animation/Animation\n * @author pissang(https://github.com/pissang)\n */\n// TODO Additive animation\n// http://iosoteric.com/additive-animations-animatewithduration-in-ios-8/\n// https://developer.apple.com/videos/wwdc2014/#236\n\n/**\n * @typedef {Object} IZRenderStage\n * @property {Function} update\n */\n\n/**\n * @alias module:zrender/animation/Animation\n * @constructor\n * @param {Object} [options]\n * @param {Function} [options.onframe]\n * @param {IZRenderStage} [options.stage]\n * @example\n *     var animation = new Animation();\n *     var obj = {\n *         x: 100,\n *         y: 100\n *     };\n *     animation.animate(node.position)\n *         .when(1000, {\n *             x: 500,\n *             y: 500\n *         })\n *         .when(2000, {\n *             x: 100,\n *             y: 100\n *         })\n *         .start('spline');\n */\nvar Animation = function (options) {\n  options = options || {};\n  this.stage = options.stage || {};\n\n  this.onframe = options.onframe || function () {}; // private properties\n\n\n  this._clips = [];\n  this._running = false;\n  this._time;\n  this._pausedTime;\n  this._pauseStart;\n  this._paused = false;\n  Dispatcher.call(this);\n};\n\nAnimation.prototype = {\n  constructor: Animation,\n\n  /**\n   * 添加 clip\n   * @param {module:zrender/animation/Clip} clip\n   */\n  addClip: function (clip) {\n    this._clips.push(clip);\n  },\n\n  /**\n   * 添加 animator\n   * @param {module:zrender/animation/Animator} animator\n   */\n  addAnimator: function (animator) {\n    animator.animation = this;\n    var clips = animator.getClips();\n\n    for (var i = 0; i < clips.length; i++) {\n      this.addClip(clips[i]);\n    }\n  },\n\n  /**\n   * 删除动画片段\n   * @param {module:zrender/animation/Clip} clip\n   */\n  removeClip: function (clip) {\n    var idx = util.indexOf(this._clips, clip);\n\n    if (idx >= 0) {\n      this._clips.splice(idx, 1);\n    }\n  },\n\n  /**\n   * 删除动画片段\n   * @param {module:zrender/animation/Animator} animator\n   */\n  removeAnimator: function (animator) {\n    var clips = animator.getClips();\n\n    for (var i = 0; i < clips.length; i++) {\n      this.removeClip(clips[i]);\n    }\n\n    animator.animation = null;\n  },\n  _update: function () {\n    var time = new Date().getTime() - this._pausedTime;\n\n    var delta = time - this._time;\n    var clips = this._clips;\n    var len = clips.length;\n    var deferredEvents = [];\n    var deferredClips = [];\n\n    for (var i = 0; i < len; i++) {\n      var clip = clips[i];\n      var e = clip.step(time, delta); // Throw out the events need to be called after\n      // stage.update, like destroy\n\n      if (e) {\n        deferredEvents.push(e);\n        deferredClips.push(clip);\n      }\n    } // Remove the finished clip\n\n\n    for (var i = 0; i < len;) {\n      if (clips[i]._needsRemove) {\n        clips[i] = clips[len - 1];\n        clips.pop();\n        len--;\n      } else {\n        i++;\n      }\n    }\n\n    len = deferredEvents.length;\n\n    for (var i = 0; i < len; i++) {\n      deferredClips[i].fire(deferredEvents[i]);\n    }\n\n    this._time = time;\n    this.onframe(delta);\n    this.trigger('frame', delta);\n\n    if (this.stage.update) {\n      this.stage.update();\n    }\n  },\n  _startLoop: function () {\n    var self = this;\n    this._running = true;\n\n    function step() {\n      if (self._running) {\n        requestAnimationFrame(step);\n        !self._paused && self._update();\n      }\n    }\n\n    requestAnimationFrame(step);\n  },\n\n  /**\n   * 开始运行动画\n   */\n  start: function () {\n    this._time = new Date().getTime();\n    this._pausedTime = 0;\n\n    this._startLoop();\n  },\n\n  /**\n   * 停止运行动画\n   */\n  stop: function () {\n    this._running = false;\n  },\n\n  /**\n   * Pause\n   */\n  pause: function () {\n    if (!this._paused) {\n      this._pauseStart = new Date().getTime();\n      this._paused = true;\n    }\n  },\n\n  /**\n   * Resume\n   */\n  resume: function () {\n    if (this._paused) {\n      this._pausedTime += new Date().getTime() - this._pauseStart;\n      this._paused = false;\n    }\n  },\n\n  /**\n   * 清除所有动画片段\n   */\n  clear: function () {\n    this._clips = [];\n  },\n\n  /**\n   * 对一个目标创建一个animator对象，可以指定目标中的属性使用动画\n   * @param  {Object} target\n   * @param  {Object} options\n   * @param  {boolean} [options.loop=false] 是否循环播放动画\n   * @param  {Function} [options.getter=null]\n   *         如果指定getter函数，会通过getter函数取属性值\n   * @param  {Function} [options.setter=null]\n   *         如果指定setter函数，会通过setter函数设置属性值\n   * @return {module:zrender/animation/Animation~Animator}\n   */\n  // TODO Gap\n  animate: function (target, options) {\n    options = options || {};\n    var animator = new Animator(target, options.loop, options.getter, options.setter);\n    this.addAnimator(animator);\n    return animator;\n  }\n};\nutil.mixin(Animation, Dispatcher);\nvar _default = Animation;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1762:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar easingFuncs = __webpack_require__(1763);\n\n/**\n * 动画主控制器\n * @config target 动画对象，可以是数组，如果是数组的话会批量分发onframe等事件\n * @config life(1000) 动画时长\n * @config delay(0) 动画延迟时间\n * @config loop(true)\n * @config gap(0) 循环的间隔时间\n * @config onframe\n * @config easing(optional)\n * @config ondestroy(optional)\n * @config onrestart(optional)\n *\n * TODO pause\n */\nfunction Clip(options) {\n  this._target = options.target; // 生命周期\n\n  this._life = options.life || 1000; // 延时\n\n  this._delay = options.delay || 0; // 开始时间\n  // this._startTime = new Date().getTime() + this._delay;// 单位毫秒\n\n  this._initialized = false; // 是否循环\n\n  this.loop = options.loop == null ? false : options.loop;\n  this.gap = options.gap || 0;\n  this.easing = options.easing || 'Linear';\n  this.onframe = options.onframe;\n  this.ondestroy = options.ondestroy;\n  this.onrestart = options.onrestart;\n  this._pausedTime = 0;\n  this._paused = false;\n}\n\nClip.prototype = {\n  constructor: Clip,\n  step: function (globalTime, deltaTime) {\n    // Set startTime on first step, or _startTime may has milleseconds different between clips\n    // PENDING\n    if (!this._initialized) {\n      this._startTime = globalTime + this._delay;\n      this._initialized = true;\n    }\n\n    if (this._paused) {\n      this._pausedTime += deltaTime;\n      return;\n    }\n\n    var percent = (globalTime - this._startTime - this._pausedTime) / this._life; // 还没开始\n\n    if (percent < 0) {\n      return;\n    }\n\n    percent = Math.min(percent, 1);\n    var easing = this.easing;\n    var easingFunc = typeof easing == 'string' ? easingFuncs[easing] : easing;\n    var schedule = typeof easingFunc === 'function' ? easingFunc(percent) : percent;\n    this.fire('frame', schedule); // 结束\n\n    if (percent == 1) {\n      if (this.loop) {\n        this.restart(globalTime); // 重新开始周期\n        // 抛出而不是直接调用事件直到 stage.update 后再统一调用这些事件\n\n        return 'restart';\n      } // 动画完成将这个控制器标识为待删除\n      // 在Animation.update中进行批量删除\n\n\n      this._needsRemove = true;\n      return 'destroy';\n    }\n\n    return null;\n  },\n  restart: function (globalTime) {\n    var remainder = (globalTime - this._startTime - this._pausedTime) % this._life;\n    this._startTime = globalTime - remainder + this.gap;\n    this._pausedTime = 0;\n    this._needsRemove = false;\n  },\n  fire: function (eventType, arg) {\n    eventType = 'on' + eventType;\n\n    if (this[eventType]) {\n      this[eventType](this._target, arg);\n    }\n  },\n  pause: function () {\n    this._paused = true;\n  },\n  resume: function () {\n    this._paused = false;\n  }\n};\nvar _default = Clip;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1763:\n/***/ (function(module, exports) {\n\n/**\n * 缓动代码来自 https://github.com/sole/tween.js/blob/master/src/Tween.js\n * @see http://sole.github.io/tween.js/examples/03_graphs.html\n * @exports zrender/animation/easing\n */\nvar easing = {\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  linear: function (k) {\n    return k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quadraticIn: function (k) {\n    return k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quadraticOut: function (k) {\n    return k * (2 - k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quadraticInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k;\n    }\n\n    return -0.5 * (--k * (k - 2) - 1);\n  },\n  // 三次方的缓动（t^3）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  cubicIn: function (k) {\n    return k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  cubicOut: function (k) {\n    return --k * k * k + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  cubicInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k * k;\n    }\n\n    return 0.5 * ((k -= 2) * k * k + 2);\n  },\n  // 四次方的缓动（t^4）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quarticIn: function (k) {\n    return k * k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quarticOut: function (k) {\n    return 1 - --k * k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quarticInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k * k * k;\n    }\n\n    return -0.5 * ((k -= 2) * k * k * k - 2);\n  },\n  // 五次方的缓动（t^5）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quinticIn: function (k) {\n    return k * k * k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quinticOut: function (k) {\n    return --k * k * k * k * k + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quinticInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k * k * k * k;\n    }\n\n    return 0.5 * ((k -= 2) * k * k * k * k + 2);\n  },\n  // 正弦曲线的缓动（sin(t)）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  sinusoidalIn: function (k) {\n    return 1 - Math.cos(k * Math.PI / 2);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  sinusoidalOut: function (k) {\n    return Math.sin(k * Math.PI / 2);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  sinusoidalInOut: function (k) {\n    return 0.5 * (1 - Math.cos(Math.PI * k));\n  },\n  // 指数曲线的缓动（2^t）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  exponentialIn: function (k) {\n    return k === 0 ? 0 : Math.pow(1024, k - 1);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  exponentialOut: function (k) {\n    return k === 1 ? 1 : 1 - Math.pow(2, -10 * k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  exponentialInOut: function (k) {\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if ((k *= 2) < 1) {\n      return 0.5 * Math.pow(1024, k - 1);\n    }\n\n    return 0.5 * (-Math.pow(2, -10 * (k - 1)) + 2);\n  },\n  // 圆形曲线的缓动（sqrt(1-t^2)）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  circularIn: function (k) {\n    return 1 - Math.sqrt(1 - k * k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  circularOut: function (k) {\n    return Math.sqrt(1 - --k * k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  circularInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return -0.5 * (Math.sqrt(1 - k * k) - 1);\n    }\n\n    return 0.5 * (Math.sqrt(1 - (k -= 2) * k) + 1);\n  },\n  // 创建类似于弹簧在停止前来回振荡的动画\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  elasticIn: function (k) {\n    var s;\n    var a = 0.1;\n    var p = 0.4;\n\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if (!a || a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p * Math.asin(1 / a) / (2 * Math.PI);\n    }\n\n    return -(a * Math.pow(2, 10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p));\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  elasticOut: function (k) {\n    var s;\n    var a = 0.1;\n    var p = 0.4;\n\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if (!a || a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p * Math.asin(1 / a) / (2 * Math.PI);\n    }\n\n    return a * Math.pow(2, -10 * k) * Math.sin((k - s) * (2 * Math.PI) / p) + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  elasticInOut: function (k) {\n    var s;\n    var a = 0.1;\n    var p = 0.4;\n\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if (!a || a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p * Math.asin(1 / a) / (2 * Math.PI);\n    }\n\n    if ((k *= 2) < 1) {\n      return -0.5 * (a * Math.pow(2, 10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p));\n    }\n\n    return a * Math.pow(2, -10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p) * 0.5 + 1;\n  },\n  // 在某一动画开始沿指示的路径进行动画处理前稍稍收回该动画的移动\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  backIn: function (k) {\n    var s = 1.70158;\n    return k * k * ((s + 1) * k - s);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  backOut: function (k) {\n    var s = 1.70158;\n    return --k * k * ((s + 1) * k + s) + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  backInOut: function (k) {\n    var s = 1.70158 * 1.525;\n\n    if ((k *= 2) < 1) {\n      return 0.5 * (k * k * ((s + 1) * k - s));\n    }\n\n    return 0.5 * ((k -= 2) * k * ((s + 1) * k + s) + 2);\n  },\n  // 创建弹跳效果\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  bounceIn: function (k) {\n    return 1 - easing.bounceOut(1 - k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  bounceOut: function (k) {\n    if (k < 1 / 2.75) {\n      return 7.5625 * k * k;\n    } else if (k < 2 / 2.75) {\n      return 7.5625 * (k -= 1.5 / 2.75) * k + 0.75;\n    } else if (k < 2.5 / 2.75) {\n      return 7.5625 * (k -= 2.25 / 2.75) * k + 0.9375;\n    } else {\n      return 7.5625 * (k -= 2.625 / 2.75) * k + 0.984375;\n    }\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  bounceInOut: function (k) {\n    if (k < 0.5) {\n      return easing.bounceIn(k * 2) * 0.5;\n    }\n\n    return easing.bounceOut(k * 2 - 1) * 0.5 + 0.5;\n  }\n};\nvar _default = easing;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1764:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _util = __webpack_require__(1636);\n\nvar normalizeRadian = _util.normalizeRadian;\nvar PI2 = Math.PI * 2;\n/**\n * 圆弧描边包含判断\n * @param  {number}  cx\n * @param  {number}  cy\n * @param  {number}  r\n * @param  {number}  startAngle\n * @param  {number}  endAngle\n * @param  {boolean}  anticlockwise\n * @param  {number} lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {Boolean}\n */\n\nfunction containStroke(cx, cy, r, startAngle, endAngle, anticlockwise, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth;\n  x -= cx;\n  y -= cy;\n  var d = Math.sqrt(x * x + y * y);\n\n  if (d - _l > r || d + _l < r) {\n    return false;\n  }\n\n  if (Math.abs(startAngle - endAngle) % PI2 < 1e-4) {\n    // Is a circle\n    return true;\n  }\n\n  if (anticlockwise) {\n    var tmp = startAngle;\n    startAngle = normalizeRadian(endAngle);\n    endAngle = normalizeRadian(tmp);\n  } else {\n    startAngle = normalizeRadian(startAngle);\n    endAngle = normalizeRadian(endAngle);\n  }\n\n  if (startAngle > endAngle) {\n    endAngle += PI2;\n  }\n\n  var angle = Math.atan2(y, x);\n\n  if (angle < 0) {\n    angle += PI2;\n  }\n\n  return angle >= startAngle && angle <= endAngle || angle + PI2 >= startAngle && angle + PI2 <= endAngle;\n}\n\nexports.containStroke = containStroke;\n\n/***/ }),\n\n/***/ 1765:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar curve = __webpack_require__(1524);\n\n/**\n * 三次贝塞尔曲线描边包含判断\n * @param  {number}  x0\n * @param  {number}  y0\n * @param  {number}  x1\n * @param  {number}  y1\n * @param  {number}  x2\n * @param  {number}  y2\n * @param  {number}  x3\n * @param  {number}  y3\n * @param  {number}  lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {boolean}\n */\nfunction containStroke(x0, y0, x1, y1, x2, y2, x3, y3, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth; // Quick reject\n\n  if (y > y0 + _l && y > y1 + _l && y > y2 + _l && y > y3 + _l || y < y0 - _l && y < y1 - _l && y < y2 - _l && y < y3 - _l || x > x0 + _l && x > x1 + _l && x > x2 + _l && x > x3 + _l || x < x0 - _l && x < x1 - _l && x < x2 - _l && x < x3 - _l) {\n    return false;\n  }\n\n  var d = curve.cubicProjectPoint(x0, y0, x1, y1, x2, y2, x3, y3, x, y, null);\n  return d <= _l / 2;\n}\n\nexports.containStroke = containStroke;\n\n/***/ }),\n\n/***/ 1766:\n/***/ (function(module, exports) {\n\n/**\n * 线段包含判断\n * @param  {number}  x0\n * @param  {number}  y0\n * @param  {number}  x1\n * @param  {number}  y1\n * @param  {number}  lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {boolean}\n */\nfunction containStroke(x0, y0, x1, y1, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth;\n  var _a = 0;\n  var _b = x0; // Quick reject\n\n  if (y > y0 + _l && y > y1 + _l || y < y0 - _l && y < y1 - _l || x > x0 + _l && x > x1 + _l || x < x0 - _l && x < x1 - _l) {\n    return false;\n  }\n\n  if (x0 !== x1) {\n    _a = (y0 - y1) / (x0 - x1);\n    _b = (x0 * y1 - x1 * y0) / (x0 - x1);\n  } else {\n    return Math.abs(x - x0) <= _l / 2;\n  }\n\n  var tmp = _a * x - y + _b;\n\n  var _s = tmp * tmp / (_a * _a + 1);\n\n  return _s <= _l / 2 * _l / 2;\n}\n\nexports.containStroke = containStroke;\n\n/***/ }),\n\n/***/ 1767:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar PathProxy = __webpack_require__(1557);\n\nvar line = __webpack_require__(1766);\n\nvar cubic = __webpack_require__(1765);\n\nvar quadratic = __webpack_require__(1769);\n\nvar arc = __webpack_require__(1764);\n\nvar _util = __webpack_require__(1636);\n\nvar normalizeRadian = _util.normalizeRadian;\n\nvar curve = __webpack_require__(1524);\n\nvar windingLine = __webpack_require__(1637);\n\nvar CMD = PathProxy.CMD;\nvar PI2 = Math.PI * 2;\nvar EPSILON = 1e-4;\n\nfunction isAroundEqual(a, b) {\n  return Math.abs(a - b) < EPSILON;\n} // 临时数组\n\n\nvar roots = [-1, -1, -1];\nvar extrema = [-1, -1];\n\nfunction swapExtrema() {\n  var tmp = extrema[0];\n  extrema[0] = extrema[1];\n  extrema[1] = tmp;\n}\n\nfunction windingCubic(x0, y0, x1, y1, x2, y2, x3, y3, x, y) {\n  // Quick reject\n  if (y > y0 && y > y1 && y > y2 && y > y3 || y < y0 && y < y1 && y < y2 && y < y3) {\n    return 0;\n  }\n\n  var nRoots = curve.cubicRootAt(y0, y1, y2, y3, y, roots);\n\n  if (nRoots === 0) {\n    return 0;\n  } else {\n    var w = 0;\n    var nExtrema = -1;\n    var y0_, y1_;\n\n    for (var i = 0; i < nRoots; i++) {\n      var t = roots[i]; // Avoid winding error when intersection point is the connect point of two line of polygon\n\n      var unit = t === 0 || t === 1 ? 0.5 : 1;\n      var x_ = curve.cubicAt(x0, x1, x2, x3, t);\n\n      if (x_ < x) {\n        // Quick reject\n        continue;\n      }\n\n      if (nExtrema < 0) {\n        nExtrema = curve.cubicExtrema(y0, y1, y2, y3, extrema);\n\n        if (extrema[1] < extrema[0] && nExtrema > 1) {\n          swapExtrema();\n        }\n\n        y0_ = curve.cubicAt(y0, y1, y2, y3, extrema[0]);\n\n        if (nExtrema > 1) {\n          y1_ = curve.cubicAt(y0, y1, y2, y3, extrema[1]);\n        }\n      }\n\n      if (nExtrema == 2) {\n        // 分成三段单调函数\n        if (t < extrema[0]) {\n          w += y0_ < y0 ? unit : -unit;\n        } else if (t < extrema[1]) {\n          w += y1_ < y0_ ? unit : -unit;\n        } else {\n          w += y3 < y1_ ? unit : -unit;\n        }\n      } else {\n        // 分成两段单调函数\n        if (t < extrema[0]) {\n          w += y0_ < y0 ? unit : -unit;\n        } else {\n          w += y3 < y0_ ? unit : -unit;\n        }\n      }\n    }\n\n    return w;\n  }\n}\n\nfunction windingQuadratic(x0, y0, x1, y1, x2, y2, x, y) {\n  // Quick reject\n  if (y > y0 && y > y1 && y > y2 || y < y0 && y < y1 && y < y2) {\n    return 0;\n  }\n\n  var nRoots = curve.quadraticRootAt(y0, y1, y2, y, roots);\n\n  if (nRoots === 0) {\n    return 0;\n  } else {\n    var t = curve.quadraticExtremum(y0, y1, y2);\n\n    if (t >= 0 && t <= 1) {\n      var w = 0;\n      var y_ = curve.quadraticAt(y0, y1, y2, t);\n\n      for (var i = 0; i < nRoots; i++) {\n        // Remove one endpoint.\n        var unit = roots[i] === 0 || roots[i] === 1 ? 0.5 : 1;\n        var x_ = curve.quadraticAt(x0, x1, x2, roots[i]);\n\n        if (x_ < x) {\n          // Quick reject\n          continue;\n        }\n\n        if (roots[i] < t) {\n          w += y_ < y0 ? unit : -unit;\n        } else {\n          w += y2 < y_ ? unit : -unit;\n        }\n      }\n\n      return w;\n    } else {\n      // Remove one endpoint.\n      var unit = roots[0] === 0 || roots[0] === 1 ? 0.5 : 1;\n      var x_ = curve.quadraticAt(x0, x1, x2, roots[0]);\n\n      if (x_ < x) {\n        // Quick reject\n        return 0;\n      }\n\n      return y2 < y0 ? unit : -unit;\n    }\n  }\n} // TODO\n// Arc 旋转\n\n\nfunction windingArc(cx, cy, r, startAngle, endAngle, anticlockwise, x, y) {\n  y -= cy;\n\n  if (y > r || y < -r) {\n    return 0;\n  }\n\n  var tmp = Math.sqrt(r * r - y * y);\n  roots[0] = -tmp;\n  roots[1] = tmp;\n  var diff = Math.abs(startAngle - endAngle);\n\n  if (diff < 1e-4) {\n    return 0;\n  }\n\n  if (diff % PI2 < 1e-4) {\n    // Is a circle\n    startAngle = 0;\n    endAngle = PI2;\n    var dir = anticlockwise ? 1 : -1;\n\n    if (x >= roots[0] + cx && x <= roots[1] + cx) {\n      return dir;\n    } else {\n      return 0;\n    }\n  }\n\n  if (anticlockwise) {\n    var tmp = startAngle;\n    startAngle = normalizeRadian(endAngle);\n    endAngle = normalizeRadian(tmp);\n  } else {\n    startAngle = normalizeRadian(startAngle);\n    endAngle = normalizeRadian(endAngle);\n  }\n\n  if (startAngle > endAngle) {\n    endAngle += PI2;\n  }\n\n  var w = 0;\n\n  for (var i = 0; i < 2; i++) {\n    var x_ = roots[i];\n\n    if (x_ + cx > x) {\n      var angle = Math.atan2(y, x_);\n      var dir = anticlockwise ? 1 : -1;\n\n      if (angle < 0) {\n        angle = PI2 + angle;\n      }\n\n      if (angle >= startAngle && angle <= endAngle || angle + PI2 >= startAngle && angle + PI2 <= endAngle) {\n        if (angle > Math.PI / 2 && angle < Math.PI * 1.5) {\n          dir = -dir;\n        }\n\n        w += dir;\n      }\n    }\n  }\n\n  return w;\n}\n\nfunction containPath(data, lineWidth, isStroke, x, y) {\n  var w = 0;\n  var xi = 0;\n  var yi = 0;\n  var x0 = 0;\n  var y0 = 0;\n\n  for (var i = 0; i < data.length;) {\n    var cmd = data[i++]; // Begin a new subpath\n\n    if (cmd === CMD.M && i > 1) {\n      // Close previous subpath\n      if (!isStroke) {\n        w += windingLine(xi, yi, x0, y0, x, y);\n      } // 如果被任何一个 subpath 包含\n      // if (w !== 0) {\n      //     return true;\n      // }\n\n    }\n\n    if (i == 1) {\n      // 如果第一个命令是 L, C, Q\n      // 则 previous point 同绘制命令的第一个 point\n      //\n      // 第一个命令为 Arc 的情况下会在后面特殊处理\n      xi = data[i];\n      yi = data[i + 1];\n      x0 = xi;\n      y0 = yi;\n    }\n\n    switch (cmd) {\n      case CMD.M:\n        // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n        // 在 closePath 的时候使用\n        x0 = data[i++];\n        y0 = data[i++];\n        xi = x0;\n        yi = y0;\n        break;\n\n      case CMD.L:\n        if (isStroke) {\n          if (line.containStroke(xi, yi, data[i], data[i + 1], lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          // NOTE 在第一个命令为 L, C, Q 的时候会计算出 NaN\n          w += windingLine(xi, yi, data[i], data[i + 1], x, y) || 0;\n        }\n\n        xi = data[i++];\n        yi = data[i++];\n        break;\n\n      case CMD.C:\n        if (isStroke) {\n          if (cubic.containStroke(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          w += windingCubic(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], x, y) || 0;\n        }\n\n        xi = data[i++];\n        yi = data[i++];\n        break;\n\n      case CMD.Q:\n        if (isStroke) {\n          if (quadratic.containStroke(xi, yi, data[i++], data[i++], data[i], data[i + 1], lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          w += windingQuadratic(xi, yi, data[i++], data[i++], data[i], data[i + 1], x, y) || 0;\n        }\n\n        xi = data[i++];\n        yi = data[i++];\n        break;\n\n      case CMD.A:\n        // TODO Arc 判断的开销比较大\n        var cx = data[i++];\n        var cy = data[i++];\n        var rx = data[i++];\n        var ry = data[i++];\n        var theta = data[i++];\n        var dTheta = data[i++]; // TODO Arc 旋转\n\n        var psi = data[i++];\n        var anticlockwise = 1 - data[i++];\n        var x1 = Math.cos(theta) * rx + cx;\n        var y1 = Math.sin(theta) * ry + cy; // 不是直接使用 arc 命令\n\n        if (i > 1) {\n          w += windingLine(xi, yi, x1, y1, x, y);\n        } else {\n          // 第一个命令起点还未定义\n          x0 = x1;\n          y0 = y1;\n        } // zr 使用scale来模拟椭圆, 这里也对x做一定的缩放\n\n\n        var _x = (x - cx) * ry / rx + cx;\n\n        if (isStroke) {\n          if (arc.containStroke(cx, cy, ry, theta, theta + dTheta, anticlockwise, lineWidth, _x, y)) {\n            return true;\n          }\n        } else {\n          w += windingArc(cx, cy, ry, theta, theta + dTheta, anticlockwise, _x, y);\n        }\n\n        xi = Math.cos(theta + dTheta) * rx + cx;\n        yi = Math.sin(theta + dTheta) * ry + cy;\n        break;\n\n      case CMD.R:\n        x0 = xi = data[i++];\n        y0 = yi = data[i++];\n        var width = data[i++];\n        var height = data[i++];\n        var x1 = x0 + width;\n        var y1 = y0 + height;\n\n        if (isStroke) {\n          if (line.containStroke(x0, y0, x1, y0, lineWidth, x, y) || line.containStroke(x1, y0, x1, y1, lineWidth, x, y) || line.containStroke(x1, y1, x0, y1, lineWidth, x, y) || line.containStroke(x0, y1, x0, y0, lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          // FIXME Clockwise ?\n          w += windingLine(x1, y0, x1, y1, x, y);\n          w += windingLine(x0, y1, x0, y0, x, y);\n        }\n\n        break;\n\n      case CMD.Z:\n        if (isStroke) {\n          if (line.containStroke(xi, yi, x0, y0, lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          // Close a subpath\n          w += windingLine(xi, yi, x0, y0, x, y); // 如果被任何一个 subpath 包含\n          // FIXME subpaths may overlap\n          // if (w !== 0) {\n          //     return true;\n          // }\n        }\n\n        xi = x0;\n        yi = y0;\n        break;\n    }\n  }\n\n  if (!isStroke && !isAroundEqual(yi, y0)) {\n    w += windingLine(xi, yi, x0, y0, x, y) || 0;\n  }\n\n  return w !== 0;\n}\n\nfunction contain(pathData, x, y) {\n  return containPath(pathData, 0, false, x, y);\n}\n\nfunction containStroke(pathData, lineWidth, x, y) {\n  return containPath(pathData, lineWidth, true, x, y);\n}\n\nexports.contain = contain;\nexports.containStroke = containStroke;\n\n/***/ }),\n\n/***/ 1768:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar windingLine = __webpack_require__(1637);\n\nvar EPSILON = 1e-8;\n\nfunction isAroundEqual(a, b) {\n  return Math.abs(a - b) < EPSILON;\n}\n\nfunction contain(points, x, y) {\n  var w = 0;\n  var p = points[0];\n\n  if (!p) {\n    return false;\n  }\n\n  for (var i = 1; i < points.length; i++) {\n    var p2 = points[i];\n    w += windingLine(p[0], p[1], p2[0], p2[1], x, y);\n    p = p2;\n  } // Close polygon\n\n\n  var p0 = points[0];\n\n  if (!isAroundEqual(p[0], p0[0]) || !isAroundEqual(p[1], p0[1])) {\n    w += windingLine(p[0], p[1], p0[0], p0[1], x, y);\n  }\n\n  return w !== 0;\n}\n\nexports.contain = contain;\n\n/***/ }),\n\n/***/ 1769:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curve = __webpack_require__(1524);\n\nvar quadraticProjectPoint = _curve.quadraticProjectPoint;\n\n/**\n * 二次贝塞尔曲线描边包含判断\n * @param  {number}  x0\n * @param  {number}  y0\n * @param  {number}  x1\n * @param  {number}  y1\n * @param  {number}  x2\n * @param  {number}  y2\n * @param  {number}  lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {boolean}\n */\nfunction containStroke(x0, y0, x1, y1, x2, y2, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth; // Quick reject\n\n  if (y > y0 + _l && y > y1 + _l && y > y2 + _l || y < y0 - _l && y < y1 - _l && y < y2 - _l || x > x0 + _l && x > x1 + _l && x > x2 + _l || x < x0 - _l && x < x1 - _l && x < x2 - _l) {\n    return false;\n  }\n\n  var d = quadraticProjectPoint(x0, y0, x1, y1, x2, y2, x, y, null);\n  return d <= _l / 2;\n}\n\nexports.containStroke = containStroke;\n\n/***/ }),\n\n/***/ 1770:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar eventUtil = __webpack_require__(1531);\n\n/**\n * Only implements needed gestures for mobile.\n */\nvar GestureMgr = function () {\n  /**\n   * @private\n   * @type {Array.<Object>}\n   */\n  this._track = [];\n};\n\nGestureMgr.prototype = {\n  constructor: GestureMgr,\n  recognize: function (event, target, root) {\n    this._doTrack(event, target, root);\n\n    return this._recognize(event);\n  },\n  clear: function () {\n    this._track.length = 0;\n    return this;\n  },\n  _doTrack: function (event, target, root) {\n    var touches = event.touches;\n\n    if (!touches) {\n      return;\n    }\n\n    var trackItem = {\n      points: [],\n      touches: [],\n      target: target,\n      event: event\n    };\n\n    for (var i = 0, len = touches.length; i < len; i++) {\n      var touch = touches[i];\n      var pos = eventUtil.clientToLocal(root, touch, {});\n      trackItem.points.push([pos.zrX, pos.zrY]);\n      trackItem.touches.push(touch);\n    }\n\n    this._track.push(trackItem);\n  },\n  _recognize: function (event) {\n    for (var eventName in recognizers) {\n      if (recognizers.hasOwnProperty(eventName)) {\n        var gestureInfo = recognizers[eventName](this._track, event);\n\n        if (gestureInfo) {\n          return gestureInfo;\n        }\n      }\n    }\n  }\n};\n\nfunction dist(pointPair) {\n  var dx = pointPair[1][0] - pointPair[0][0];\n  var dy = pointPair[1][1] - pointPair[0][1];\n  return Math.sqrt(dx * dx + dy * dy);\n}\n\nfunction center(pointPair) {\n  return [(pointPair[0][0] + pointPair[1][0]) / 2, (pointPair[0][1] + pointPair[1][1]) / 2];\n}\n\nvar recognizers = {\n  pinch: function (track, event) {\n    var trackLen = track.length;\n\n    if (!trackLen) {\n      return;\n    }\n\n    var pinchEnd = (track[trackLen - 1] || {}).points;\n    var pinchPre = (track[trackLen - 2] || {}).points || pinchEnd;\n\n    if (pinchPre && pinchPre.length > 1 && pinchEnd && pinchEnd.length > 1) {\n      var pinchScale = dist(pinchEnd) / dist(pinchPre);\n      !isFinite(pinchScale) && (pinchScale = 1);\n      event.pinchScale = pinchScale;\n      var pinchCenter = center(pinchEnd);\n      event.pinchX = pinchCenter[0];\n      event.pinchY = pinchCenter[1];\n      return {\n        type: 'pinch',\n        target: track[0].target,\n        event: event\n      };\n    }\n  } // Only pinch currently.\n\n};\nvar _default = GestureMgr;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1771:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _event = __webpack_require__(1531);\n\nvar addEventListener = _event.addEventListener;\nvar removeEventListener = _event.removeEventListener;\nvar normalizeEvent = _event.normalizeEvent;\n\nvar zrUtil = __webpack_require__(1479);\n\nvar Eventful = __webpack_require__(1532);\n\nvar env = __webpack_require__(1495);\n\nvar GestureMgr = __webpack_require__(1770);\n\nvar TOUCH_CLICK_DELAY = 300;\nvar mouseHandlerNames = ['click', 'dblclick', 'mousewheel', 'mouseout', 'mouseup', 'mousedown', 'mousemove', 'contextmenu'];\nvar touchHandlerNames = ['touchstart', 'touchend', 'touchmove'];\nvar pointerEventNames = {\n  pointerdown: 1,\n  pointerup: 1,\n  pointermove: 1,\n  pointerout: 1\n};\nvar pointerHandlerNames = zrUtil.map(mouseHandlerNames, function (name) {\n  var nm = name.replace('mouse', 'pointer');\n  return pointerEventNames[nm] ? nm : name;\n});\n\nfunction eventNameFix(name) {\n  return name === 'mousewheel' && env.browser.firefox ? 'DOMMouseScroll' : name;\n}\n\nfunction processGesture(proxy, event, stage) {\n  var gestureMgr = proxy._gestureMgr;\n  stage === 'start' && gestureMgr.clear();\n  var gestureInfo = gestureMgr.recognize(event, proxy.handler.findHover(event.zrX, event.zrY, null).target, proxy.dom);\n  stage === 'end' && gestureMgr.clear(); // Do not do any preventDefault here. Upper application do that if necessary.\n\n  if (gestureInfo) {\n    var type = gestureInfo.type;\n    event.gestureEvent = type;\n    proxy.handler.dispatchToElement({\n      target: gestureInfo.target\n    }, type, gestureInfo.event);\n  }\n} // function onMSGestureChange(proxy, event) {\n//     if (event.translationX || event.translationY) {\n//         // mousemove is carried by MSGesture to reduce the sensitivity.\n//         proxy.handler.dispatchToElement(event.target, 'mousemove', event);\n//     }\n//     if (event.scale !== 1) {\n//         event.pinchX = event.offsetX;\n//         event.pinchY = event.offsetY;\n//         event.pinchScale = event.scale;\n//         proxy.handler.dispatchToElement(event.target, 'pinch', event);\n//     }\n// }\n\n/**\n * Prevent mouse event from being dispatched after Touch Events action\n * @see <https://github.com/deltakosh/handjs/blob/master/src/hand.base.js>\n * 1. Mobile browsers dispatch mouse events 300ms after touchend.\n * 2. Chrome for Android dispatch mousedown for long-touch about 650ms\n * Result: Blocking Mouse Events for 700ms.\n */\n\n\nfunction setTouchTimer(instance) {\n  instance._touching = true;\n  clearTimeout(instance._touchTimer);\n  instance._touchTimer = setTimeout(function () {\n    instance._touching = false;\n  }, 700);\n}\n\nvar domHandlers = {\n  /**\n   * Mouse move handler\n   * @inner\n   * @param {Event} event\n   */\n  mousemove: function (event) {\n    event = normalizeEvent(this.dom, event);\n    this.trigger('mousemove', event);\n  },\n\n  /**\n   * Mouse out handler\n   * @inner\n   * @param {Event} event\n   */\n  mouseout: function (event) {\n    event = normalizeEvent(this.dom, event);\n    var element = event.toElement || event.relatedTarget;\n\n    if (element != this.dom) {\n      while (element && element.nodeType != 9) {\n        // 忽略包含在root中的dom引起的mouseOut\n        if (element === this.dom) {\n          return;\n        }\n\n        element = element.parentNode;\n      }\n    }\n\n    this.trigger('mouseout', event);\n  },\n\n  /**\n   * Touch开始响应函数\n   * @inner\n   * @param {Event} event\n   */\n  touchstart: function (event) {\n    // Default mouse behaviour should not be disabled here.\n    // For example, page may needs to be slided.\n    event = normalizeEvent(this.dom, event); // Mark touch, which is useful in distinguish touch and\n    // mouse event in upper applicatoin.\n\n    event.zrByTouch = true;\n    this._lastTouchMoment = new Date();\n    processGesture(this, event, 'start'); // In touch device, trigger `mousemove`(`mouseover`) should\n    // be triggered, and must before `mousedown` triggered.\n\n    domHandlers.mousemove.call(this, event);\n    domHandlers.mousedown.call(this, event);\n    setTouchTimer(this);\n  },\n\n  /**\n   * Touch移动响应函数\n   * @inner\n   * @param {Event} event\n   */\n  touchmove: function (event) {\n    event = normalizeEvent(this.dom, event); // Mark touch, which is useful in distinguish touch and\n    // mouse event in upper applicatoin.\n\n    event.zrByTouch = true;\n    processGesture(this, event, 'change'); // Mouse move should always be triggered no matter whether\n    // there is gestrue event, because mouse move and pinch may\n    // be used at the same time.\n\n    domHandlers.mousemove.call(this, event);\n    setTouchTimer(this);\n  },\n\n  /**\n   * Touch结束响应函数\n   * @inner\n   * @param {Event} event\n   */\n  touchend: function (event) {\n    event = normalizeEvent(this.dom, event); // Mark touch, which is useful in distinguish touch and\n    // mouse event in upper applicatoin.\n\n    event.zrByTouch = true;\n    processGesture(this, event, 'end');\n    domHandlers.mouseup.call(this, event); // Do not trigger `mouseout` here, in spite of `mousemove`(`mouseover`) is\n    // triggered in `touchstart`. This seems to be illogical, but by this mechanism,\n    // we can conveniently implement \"hover style\" in both PC and touch device just\n    // by listening to `mouseover` to add \"hover style\" and listening to `mouseout`\n    // to remove \"hover style\" on an element, without any additional code for\n    // compatibility. (`mouseout` will not be triggered in `touchend`, so \"hover\n    // style\" will remain for user view)\n    // click event should always be triggered no matter whether\n    // there is gestrue event. System click can not be prevented.\n\n    if (+new Date() - this._lastTouchMoment < TOUCH_CLICK_DELAY) {\n      domHandlers.click.call(this, event);\n    }\n\n    setTouchTimer(this);\n  },\n  pointerdown: function (event) {\n    domHandlers.mousedown.call(this, event); // if (useMSGuesture(this, event)) {\n    //     this._msGesture.addPointer(event.pointerId);\n    // }\n  },\n  pointermove: function (event) {\n    // FIXME\n    // pointermove is so sensitive that it always triggered when\n    // tap(click) on touch screen, which affect some judgement in\n    // upper application. So, we dont support mousemove on MS touch\n    // device yet.\n    if (!isPointerFromTouch(event)) {\n      domHandlers.mousemove.call(this, event);\n    }\n  },\n  pointerup: function (event) {\n    domHandlers.mouseup.call(this, event);\n  },\n  pointerout: function (event) {\n    // pointerout will be triggered when tap on touch screen\n    // (IE11+/Edge on MS Surface) after click event triggered,\n    // which is inconsistent with the mousout behavior we defined\n    // in touchend. So we unify them.\n    // (check domHandlers.touchend for detailed explanation)\n    if (!isPointerFromTouch(event)) {\n      domHandlers.mouseout.call(this, event);\n    }\n  }\n};\n\nfunction isPointerFromTouch(event) {\n  var pointerType = event.pointerType;\n  return pointerType === 'pen' || pointerType === 'touch';\n} // function useMSGuesture(handlerProxy, event) {\n//     return isPointerFromTouch(event) && !!handlerProxy._msGesture;\n// }\n// Common handlers\n\n\nzrUtil.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n  domHandlers[name] = function (event) {\n    event = normalizeEvent(this.dom, event);\n    this.trigger(name, event);\n  };\n});\n/**\n * 为控制类实例初始化dom 事件处理函数\n *\n * @inner\n * @param {module:zrender/Handler} instance 控制类实例\n */\n\nfunction initDomHandler(instance) {\n  zrUtil.each(touchHandlerNames, function (name) {\n    instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n  });\n  zrUtil.each(pointerHandlerNames, function (name) {\n    instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n  });\n  zrUtil.each(mouseHandlerNames, function (name) {\n    instance._handlers[name] = makeMouseHandler(domHandlers[name], instance);\n  });\n\n  function makeMouseHandler(fn, instance) {\n    return function () {\n      if (instance._touching) {\n        return;\n      }\n\n      return fn.apply(instance, arguments);\n    };\n  }\n}\n\nfunction HandlerDomProxy(dom) {\n  Eventful.call(this);\n  this.dom = dom;\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._touching = false;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._touchTimer;\n  /**\n   * @private\n   * @type {module:zrender/core/GestureMgr}\n   */\n\n  this._gestureMgr = new GestureMgr();\n  this._handlers = {};\n  initDomHandler(this);\n\n  if (env.pointerEventsSupported) {\n    // Only IE11+/Edge\n    // 1. On devices that both enable touch and mouse (e.g., MS Surface and lenovo X240),\n    // IE11+/Edge do not trigger touch event, but trigger pointer event and mouse event\n    // at the same time.\n    // 2. On MS Surface, it probablely only trigger mousedown but no mouseup when tap on\n    // screen, which do not occurs in pointer event.\n    // So we use pointer event to both detect touch gesture and mouse behavior.\n    mountHandlers(pointerHandlerNames, this); // FIXME\n    // Note: MS Gesture require CSS touch-action set. But touch-action is not reliable,\n    // which does not prevent defuault behavior occasionally (which may cause view port\n    // zoomed in but use can not zoom it back). And event.preventDefault() does not work.\n    // So we have to not to use MSGesture and not to support touchmove and pinch on MS\n    // touch screen. And we only support click behavior on MS touch screen now.\n    // MS Gesture Event is only supported on IE11+/Edge and on Windows 8+.\n    // We dont support touch on IE on win7.\n    // See <https://msdn.microsoft.com/en-us/library/dn433243(v=vs.85).aspx>\n    // if (typeof MSGesture === 'function') {\n    //     (this._msGesture = new MSGesture()).target = dom; // jshint ignore:line\n    //     dom.addEventListener('MSGestureChange', onMSGestureChange);\n    // }\n  } else {\n    if (env.touchEventsSupported) {\n      mountHandlers(touchHandlerNames, this); // Handler of 'mouseout' event is needed in touch mode, which will be mounted below.\n      // addEventListener(root, 'mouseout', this._mouseoutHandler);\n    } // 1. Considering some devices that both enable touch and mouse event (like on MS Surface\n    // and lenovo X240, @see #2350), we make mouse event be always listened, otherwise\n    // mouse event can not be handle in those devices.\n    // 2. On MS Surface, Chrome will trigger both touch event and mouse event. How to prevent\n    // mouseevent after touch event triggered, see `setTouchTimer`.\n\n\n    mountHandlers(mouseHandlerNames, this);\n  }\n\n  function mountHandlers(handlerNames, instance) {\n    zrUtil.each(handlerNames, function (name) {\n      addEventListener(dom, eventNameFix(name), instance._handlers[name]);\n    }, instance);\n  }\n}\n\nvar handlerDomProxyProto = HandlerDomProxy.prototype;\n\nhandlerDomProxyProto.dispose = function () {\n  var handlerNames = mouseHandlerNames.concat(touchHandlerNames);\n\n  for (var i = 0; i < handlerNames.length; i++) {\n    var name = handlerNames[i];\n    removeEventListener(this.dom, eventNameFix(name), this._handlers[name]);\n  }\n};\n\nhandlerDomProxyProto.setCursor = function (cursorStyle) {\n  this.dom.style.cursor = cursorStyle || 'default';\n};\n\nzrUtil.mixin(HandlerDomProxy, Eventful);\nvar _default = HandlerDomProxy;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1772:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(1493);\n\n// CompoundPath to improve performance\nvar _default = Path.extend({\n  type: 'compound',\n  shape: {\n    paths: null\n  },\n  _updatePathDirty: function () {\n    var dirtyPath = this.__dirtyPath;\n    var paths = this.shape.paths;\n\n    for (var i = 0; i < paths.length; i++) {\n      // Mark as dirty if any subpath is dirty\n      dirtyPath = dirtyPath || paths[i].__dirtyPath;\n    }\n\n    this.__dirtyPath = dirtyPath;\n    this.__dirty = this.__dirty || dirtyPath;\n  },\n  beforeBrush: function () {\n    this._updatePathDirty();\n\n    var paths = this.shape.paths || [];\n    var scale = this.getGlobalScale(); // Update path scale\n\n    for (var i = 0; i < paths.length; i++) {\n      if (!paths[i].path) {\n        paths[i].createPathProxy();\n      }\n\n      paths[i].path.setScale(scale[0], scale[1]);\n    }\n  },\n  buildPath: function (ctx, shape) {\n    var paths = shape.paths || [];\n\n    for (var i = 0; i < paths.length; i++) {\n      paths[i].buildPath(ctx, paths[i].shape, true);\n    }\n  },\n  afterBrush: function () {\n    var paths = this.shape.paths || [];\n\n    for (var i = 0; i < paths.length; i++) {\n      paths[i].__dirtyPath = false;\n    }\n  },\n  getBoundingRect: function () {\n    this._updatePathDirty();\n\n    return Path.prototype.getBoundingRect.call(this);\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1773:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1479);\n\nvar Gradient = __webpack_require__(1576);\n\n/**\n * x, y, x2, y2 are all percent from 0 to 1\n * @param {number} [x=0]\n * @param {number} [y=0]\n * @param {number} [x2=1]\n * @param {number} [y2=0]\n * @param {Array.<Object>} colorStops\n * @param {boolean} [globalCoord=false]\n */\nvar LinearGradient = function (x, y, x2, y2, colorStops, globalCoord) {\n  // Should do nothing more in this constructor. Because gradient can be\n  // declard by `color: {type: 'linear', colorStops: ...}`, where\n  // this constructor will not be called.\n  this.x = x == null ? 0 : x;\n  this.y = y == null ? 0 : y;\n  this.x2 = x2 == null ? 1 : x2;\n  this.y2 = y2 == null ? 0 : y2; // Can be cloned\n\n  this.type = 'linear'; // If use global coord\n\n  this.global = globalCoord || false;\n  Gradient.call(this, colorStops);\n};\n\nLinearGradient.prototype = {\n  constructor: LinearGradient\n};\nzrUtil.inherits(LinearGradient, Gradient);\nvar _default = LinearGradient;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1774:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1479);\n\nvar Gradient = __webpack_require__(1576);\n\n/**\n * x, y, r are all percent from 0 to 1\n * @param {number} [x=0.5]\n * @param {number} [y=0.5]\n * @param {number} [r=0.5]\n * @param {Array.<Object>} [colorStops]\n * @param {boolean} [globalCoord=false]\n */\nvar RadialGradient = function (x, y, r, colorStops, globalCoord) {\n  // Should do nothing more in this constructor. Because gradient can be\n  // declard by `color: {type: 'radial', colorStops: ...}`, where\n  // this constructor will not be called.\n  this.x = x == null ? 0.5 : x;\n  this.y = y == null ? 0.5 : y;\n  this.r = r == null ? 0.5 : r; // Can be cloned\n\n  this.type = 'radial'; // If use global coord\n\n  this.global = globalCoord || false;\n  Gradient.call(this, colorStops);\n};\n\nRadialGradient.prototype = {\n  constructor: RadialGradient\n};\nzrUtil.inherits(RadialGradient, Gradient);\nvar _default = RadialGradient;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1775:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Displayable = __webpack_require__(1575);\n\nvar zrUtil = __webpack_require__(1479);\n\nvar textContain = __webpack_require__(1523);\n\nvar textHelper = __webpack_require__(1648);\n\n/**\n * @alias zrender/graphic/Text\n * @extends module:zrender/graphic/Displayable\n * @constructor\n * @param {Object} opts\n */\nvar Text = function (opts) {\n  // jshint ignore:line\n  Displayable.call(this, opts);\n};\n\nText.prototype = {\n  constructor: Text,\n  type: 'text',\n  brush: function (ctx, prevEl) {\n    var style = this.style; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true); // Use props with prefix 'text'.\n\n    style.fill = style.stroke = style.shadowBlur = style.shadowColor = style.shadowOffsetX = style.shadowOffsetY = null;\n    var text = style.text; // Convert to string\n\n    text != null && (text += ''); // Always bind style\n\n    style.bind(ctx, this, prevEl);\n\n    if (!textHelper.needDrawText(text, style)) {\n      return;\n    }\n\n    this.setTransform(ctx);\n    textHelper.renderText(this, ctx, text, style);\n    this.restoreTransform(ctx);\n  },\n  getBoundingRect: function () {\n    var style = this.style; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true);\n\n    if (!this._rect) {\n      var text = style.text;\n      text != null ? text += '' : text = '';\n      var rect = textContain.getBoundingRect(style.text + '', style.font, style.textAlign, style.textVerticalAlign, style.textPadding, style.rich);\n      rect.x += style.x || 0;\n      rect.y += style.y || 0;\n\n      if (textHelper.getStroke(style.textStroke, style.textStrokeWidth)) {\n        var w = style.textStrokeWidth;\n        rect.x -= w / 2;\n        rect.y -= w / 2;\n        rect.width += w;\n        rect.height += w;\n      }\n\n      this._rect = rect;\n    }\n\n    return this._rect;\n  }\n};\nzrUtil.inherits(Text, Displayable);\nvar _default = Text;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1776:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _vector = __webpack_require__(1485);\n\nvar v2Min = _vector.min;\nvar v2Max = _vector.max;\nvar v2Scale = _vector.scale;\nvar v2Distance = _vector.distance;\nvar v2Add = _vector.add;\nvar v2Clone = _vector.clone;\nvar v2Sub = _vector.sub;\n\n/**\n * 贝塞尔平滑曲线\n * @module zrender/shape/util/smoothBezier\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n/**\n * 贝塞尔平滑曲线\n * @alias module:zrender/shape/util/smoothBezier\n * @param {Array} points 线段顶点数组\n * @param {number} smooth 平滑等级, 0-1\n * @param {boolean} isLoop\n * @param {Array} constraint 将计算出来的控制点约束在一个包围盒内\n *                           比如 [[0, 0], [100, 100]], 这个包围盒会与\n *                           整个折线的包围盒做一个并集用来约束控制点。\n * @param {Array} 计算出来的控制点数组\n */\nfunction _default(points, smooth, isLoop, constraint) {\n  var cps = [];\n  var v = [];\n  var v1 = [];\n  var v2 = [];\n  var prevPoint;\n  var nextPoint;\n  var min, max;\n\n  if (constraint) {\n    min = [Infinity, Infinity];\n    max = [-Infinity, -Infinity];\n\n    for (var i = 0, len = points.length; i < len; i++) {\n      v2Min(min, min, points[i]);\n      v2Max(max, max, points[i]);\n    } // 与指定的包围盒做并集\n\n\n    v2Min(min, min, constraint[0]);\n    v2Max(max, max, constraint[1]);\n  }\n\n  for (var i = 0, len = points.length; i < len; i++) {\n    var point = points[i];\n\n    if (isLoop) {\n      prevPoint = points[i ? i - 1 : len - 1];\n      nextPoint = points[(i + 1) % len];\n    } else {\n      if (i === 0 || i === len - 1) {\n        cps.push(v2Clone(points[i]));\n        continue;\n      } else {\n        prevPoint = points[i - 1];\n        nextPoint = points[i + 1];\n      }\n    }\n\n    v2Sub(v, nextPoint, prevPoint); // use degree to scale the handle length\n\n    v2Scale(v, v, smooth);\n    var d0 = v2Distance(point, prevPoint);\n    var d1 = v2Distance(point, nextPoint);\n    var sum = d0 + d1;\n\n    if (sum !== 0) {\n      d0 /= sum;\n      d1 /= sum;\n    }\n\n    v2Scale(v1, v, -d0);\n    v2Scale(v2, v, d1);\n    var cp0 = v2Add([], point, v1);\n    var cp1 = v2Add([], point, v2);\n\n    if (constraint) {\n      v2Max(cp0, cp0, min);\n      v2Min(cp0, cp0, max);\n      v2Max(cp1, cp1, min);\n      v2Min(cp1, cp1, max);\n    }\n\n    cps.push(cp0);\n    cps.push(cp1);\n  }\n\n  if (isLoop) {\n    cps.push(cps.shift());\n  }\n\n  return cps;\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1777:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _vector = __webpack_require__(1485);\n\nvar v2Distance = _vector.distance;\n\n/**\n * Catmull-Rom spline 插值折线\n * @module zrender/shape/util/smoothSpline\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n/**\n * @inner\n */\nfunction interpolate(p0, p1, p2, p3, t, t2, t3) {\n  var v0 = (p2 - p0) * 0.5;\n  var v1 = (p3 - p1) * 0.5;\n  return (2 * (p1 - p2) + v0 + v1) * t3 + (-3 * (p1 - p2) - 2 * v0 - v1) * t2 + v0 * t + p1;\n}\n/**\n * @alias module:zrender/shape/util/smoothSpline\n * @param {Array} points 线段顶点数组\n * @param {boolean} isLoop\n * @return {Array}\n */\n\n\nfunction _default(points, isLoop) {\n  var len = points.length;\n  var ret = [];\n  var distance = 0;\n\n  for (var i = 1; i < len; i++) {\n    distance += v2Distance(points[i - 1], points[i]);\n  }\n\n  var segs = distance / 2;\n  segs = segs < len ? len : segs;\n\n  for (var i = 0; i < segs; i++) {\n    var pos = i / (segs - 1) * (isLoop ? len : len - 1);\n    var idx = Math.floor(pos);\n    var w = pos - idx;\n    var p0;\n    var p1 = points[idx % len];\n    var p2;\n    var p3;\n\n    if (!isLoop) {\n      p0 = points[idx === 0 ? idx : idx - 1];\n      p2 = points[idx > len - 2 ? len - 1 : idx + 1];\n      p3 = points[idx > len - 3 ? len - 1 : idx + 2];\n    } else {\n      p0 = points[(idx - 1 + len) % len];\n      p2 = points[(idx + 1) % len];\n      p3 = points[(idx + 2) % len];\n    }\n\n    var w2 = w * w;\n    var w3 = w * w2;\n    ret.push([interpolate(p0[0], p1[0], p2[0], p3[0], w, w2, w3), interpolate(p0[1], p1[1], p2[1], p3[1], w, w2, w3)]);\n  }\n\n  return ret;\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1778:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar textHelper = __webpack_require__(1648);\n\nvar BoundingRect = __webpack_require__(1497);\n\n/**\n * Mixin for drawing text in a element bounding rect\n * @module zrender/mixin/RectText\n */\nvar tmpRect = new BoundingRect();\n\nvar RectText = function () {};\n\nRectText.prototype = {\n  constructor: RectText,\n\n  /**\n   * Draw text in a rect with specified position.\n   * @param  {CanvasRenderingContext2D} ctx\n   * @param  {Object} rect Displayable rect\n   */\n  drawRectText: function (ctx, rect) {\n    var style = this.style;\n    rect = style.textRect || rect; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true);\n    var text = style.text; // Convert to string\n\n    text != null && (text += '');\n\n    if (!textHelper.needDrawText(text, style)) {\n      return;\n    } // FIXME\n\n\n    ctx.save(); // Transform rect to view space\n\n    var transform = this.transform;\n\n    if (!style.transformText) {\n      if (transform) {\n        tmpRect.copy(rect);\n        tmpRect.applyTransform(transform);\n        rect = tmpRect;\n      }\n    } else {\n      this.setTransform(ctx);\n    } // transformText and textRotation can not be used at the same time.\n\n\n    textHelper.renderText(this, ctx, text, style, rect);\n    ctx.restore();\n  }\n};\nvar _default = RectText;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1779:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(1493);\n\n/**\n * 圆弧\n * @module zrender/graphic/shape/Arc\n */\nvar _default = Path.extend({\n  type: 'arc',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r: 0,\n    startAngle: 0,\n    endAngle: Math.PI * 2,\n    clockwise: true\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    var x = shape.cx;\n    var y = shape.cy;\n    var r = Math.max(shape.r, 0);\n    var startAngle = shape.startAngle;\n    var endAngle = shape.endAngle;\n    var clockwise = shape.clockwise;\n    var unitX = Math.cos(startAngle);\n    var unitY = Math.sin(startAngle);\n    ctx.moveTo(unitX * r + x, unitY * r + y);\n    ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1780:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(1493);\n\nvar vec2 = __webpack_require__(1485);\n\nvar _curve = __webpack_require__(1524);\n\nvar quadraticSubdivide = _curve.quadraticSubdivide;\nvar cubicSubdivide = _curve.cubicSubdivide;\nvar quadraticAt = _curve.quadraticAt;\nvar cubicAt = _curve.cubicAt;\nvar quadraticDerivativeAt = _curve.quadraticDerivativeAt;\nvar cubicDerivativeAt = _curve.cubicDerivativeAt;\n\n/**\n * 贝塞尔曲线\n * @module zrender/shape/BezierCurve\n */\nvar out = [];\n\nfunction someVectorAt(shape, t, isTangent) {\n  var cpx2 = shape.cpx2;\n  var cpy2 = shape.cpy2;\n\n  if (cpx2 === null || cpy2 === null) {\n    return [(isTangent ? cubicDerivativeAt : cubicAt)(shape.x1, shape.cpx1, shape.cpx2, shape.x2, t), (isTangent ? cubicDerivativeAt : cubicAt)(shape.y1, shape.cpy1, shape.cpy2, shape.y2, t)];\n  } else {\n    return [(isTangent ? quadraticDerivativeAt : quadraticAt)(shape.x1, shape.cpx1, shape.x2, t), (isTangent ? quadraticDerivativeAt : quadraticAt)(shape.y1, shape.cpy1, shape.y2, t)];\n  }\n}\n\nvar _default = Path.extend({\n  type: 'bezier-curve',\n  shape: {\n    x1: 0,\n    y1: 0,\n    x2: 0,\n    y2: 0,\n    cpx1: 0,\n    cpy1: 0,\n    // cpx2: 0,\n    // cpy2: 0\n    // Curve show percent, for animating\n    percent: 1\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    var x1 = shape.x1;\n    var y1 = shape.y1;\n    var x2 = shape.x2;\n    var y2 = shape.y2;\n    var cpx1 = shape.cpx1;\n    var cpy1 = shape.cpy1;\n    var cpx2 = shape.cpx2;\n    var cpy2 = shape.cpy2;\n    var percent = shape.percent;\n\n    if (percent === 0) {\n      return;\n    }\n\n    ctx.moveTo(x1, y1);\n\n    if (cpx2 == null || cpy2 == null) {\n      if (percent < 1) {\n        quadraticSubdivide(x1, cpx1, x2, percent, out);\n        cpx1 = out[1];\n        x2 = out[2];\n        quadraticSubdivide(y1, cpy1, y2, percent, out);\n        cpy1 = out[1];\n        y2 = out[2];\n      }\n\n      ctx.quadraticCurveTo(cpx1, cpy1, x2, y2);\n    } else {\n      if (percent < 1) {\n        cubicSubdivide(x1, cpx1, cpx2, x2, percent, out);\n        cpx1 = out[1];\n        cpx2 = out[2];\n        x2 = out[3];\n        cubicSubdivide(y1, cpy1, cpy2, y2, percent, out);\n        cpy1 = out[1];\n        cpy2 = out[2];\n        y2 = out[3];\n      }\n\n      ctx.bezierCurveTo(cpx1, cpy1, cpx2, cpy2, x2, y2);\n    }\n  },\n\n  /**\n   * Get point at percent\n   * @param  {number} t\n   * @return {Array.<number>}\n   */\n  pointAt: function (t) {\n    return someVectorAt(this.shape, t, false);\n  },\n\n  /**\n   * Get tangent at percent\n   * @param  {number} t\n   * @return {Array.<number>}\n   */\n  tangentAt: function (t) {\n    var p = someVectorAt(this.shape, t, true);\n    return vec2.normalize(p, p);\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1781:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(1493);\n\n/**\n * 圆形\n * @module zrender/shape/Circle\n */\nvar _default = Path.extend({\n  type: 'circle',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r: 0\n  },\n  buildPath: function (ctx, shape, inBundle) {\n    // Better stroking in ShapeBundle\n    // Always do it may have performence issue ( fill may be 2x more cost)\n    if (inBundle) {\n      ctx.moveTo(shape.cx + shape.r, shape.cy);\n    } // else {\n    //     if (ctx.allocate && !ctx.data.length) {\n    //         ctx.allocate(ctx.CMD_MEM_SIZE.A);\n    //     }\n    // }\n    // Better stroking in ShapeBundle\n    // ctx.moveTo(shape.cx + shape.r, shape.cy);\n\n\n    ctx.arc(shape.cx, shape.cy, shape.r, 0, Math.PI * 2, true);\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1782:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(1493);\n\n/**\n * 直线\n * @module zrender/graphic/shape/Line\n */\nvar _default = Path.extend({\n  type: 'line',\n  shape: {\n    // Start point\n    x1: 0,\n    y1: 0,\n    // End point\n    x2: 0,\n    y2: 0,\n    percent: 1\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    var x1 = shape.x1;\n    var y1 = shape.y1;\n    var x2 = shape.x2;\n    var y2 = shape.y2;\n    var percent = shape.percent;\n\n    if (percent === 0) {\n      return;\n    }\n\n    ctx.moveTo(x1, y1);\n\n    if (percent < 1) {\n      x2 = x1 * (1 - percent) + x2 * percent;\n      y2 = y1 * (1 - percent) + y2 * percent;\n    }\n\n    ctx.lineTo(x2, y2);\n  },\n\n  /**\n   * Get point at percent\n   * @param  {number} percent\n   * @return {Array.<number>}\n   */\n  pointAt: function (p) {\n    var shape = this.shape;\n    return [shape.x1 * (1 - p) + shape.x2 * p, shape.y1 * (1 - p) + shape.y2 * p];\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1783:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(1493);\n\nvar polyHelper = __webpack_require__(1646);\n\n/**\n * 多边形\n * @module zrender/shape/Polygon\n */\nvar _default = Path.extend({\n  type: 'polygon',\n  shape: {\n    points: null,\n    smooth: false,\n    smoothConstraint: null\n  },\n  buildPath: function (ctx, shape) {\n    polyHelper.buildPath(ctx, shape, true);\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1784:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(1493);\n\nvar polyHelper = __webpack_require__(1646);\n\n/**\n * @module zrender/graphic/shape/Polyline\n */\nvar _default = Path.extend({\n  type: 'polyline',\n  shape: {\n    points: null,\n    smooth: false,\n    smoothConstraint: null\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    polyHelper.buildPath(ctx, shape, false);\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1785:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(1493);\n\nvar roundRectHelper = __webpack_require__(1647);\n\n/**\n * 矩形\n * @module zrender/graphic/shape/Rect\n */\nvar _default = Path.extend({\n  type: 'rect',\n  shape: {\n    // 左上、右上、右下、左下角的半径依次为r1、r2、r3、r4\n    // r缩写为1         相当于 [1, 1, 1, 1]\n    // r缩写为[1]       相当于 [1, 1, 1, 1]\n    // r缩写为[1, 2]    相当于 [1, 2, 1, 2]\n    // r缩写为[1, 2, 3] 相当于 [1, 2, 3, 2]\n    r: 0,\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (ctx, shape) {\n    var x = shape.x;\n    var y = shape.y;\n    var width = shape.width;\n    var height = shape.height;\n\n    if (!shape.r) {\n      ctx.rect(x, y, width, height);\n    } else {\n      roundRectHelper.buildPath(ctx, shape);\n    }\n\n    ctx.closePath();\n    return;\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1786:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(1493);\n\n/**\n * 圆环\n * @module zrender/graphic/shape/Ring\n */\nvar _default = Path.extend({\n  type: 'ring',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r: 0,\n    r0: 0\n  },\n  buildPath: function (ctx, shape) {\n    var x = shape.cx;\n    var y = shape.cy;\n    var PI2 = Math.PI * 2;\n    ctx.moveTo(x + shape.r, y);\n    ctx.arc(x, y, shape.r, 0, PI2, false);\n    ctx.moveTo(x + shape.r0, y);\n    ctx.arc(x, y, shape.r0, 0, PI2, true);\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1787:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(1493);\n\nvar fixClipWithShadow = __webpack_require__(1645);\n\n/**\n * 扇形\n * @module zrender/graphic/shape/Sector\n */\nvar _default = Path.extend({\n  type: 'sector',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r0: 0,\n    r: 0,\n    startAngle: 0,\n    endAngle: Math.PI * 2,\n    clockwise: true\n  },\n  brush: fixClipWithShadow(Path.prototype.brush),\n  buildPath: function (ctx, shape) {\n    var x = shape.cx;\n    var y = shape.cy;\n    var r0 = Math.max(shape.r0 || 0, 0);\n    var r = Math.max(shape.r, 0);\n    var startAngle = shape.startAngle;\n    var endAngle = shape.endAngle;\n    var clockwise = shape.clockwise;\n    var unitX = Math.cos(startAngle);\n    var unitY = Math.sin(startAngle);\n    ctx.moveTo(unitX * r0 + x, unitY * r0 + y);\n    ctx.lineTo(unitX * r + x, unitY * r + y);\n    ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n    ctx.lineTo(Math.cos(endAngle) * r0 + x, Math.sin(endAngle) * r0 + y);\n\n    if (r0 !== 0) {\n      ctx.arc(x, y, r0, endAngle, startAngle, clockwise);\n    }\n\n    ctx.closePath();\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1788:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Animator = __webpack_require__(1634);\n\nvar log = __webpack_require__(1641);\n\nvar _util = __webpack_require__(1479);\n\nvar isString = _util.isString;\nvar isFunction = _util.isFunction;\nvar isObject = _util.isObject;\nvar isArrayLike = _util.isArrayLike;\nvar indexOf = _util.indexOf;\n\n/**\n * @alias modue:zrender/mixin/Animatable\n * @constructor\n */\nvar Animatable = function () {\n  /**\n   * @type {Array.<module:zrender/animation/Animator>}\n   * @readOnly\n   */\n  this.animators = [];\n};\n\nAnimatable.prototype = {\n  constructor: Animatable,\n\n  /**\n   * 动画\n   *\n   * @param {string} path The path to fetch value from object, like 'a.b.c'.\n   * @param {boolean} [loop] Whether to loop animation.\n   * @return {module:zrender/animation/Animator}\n   * @example:\n   *     el.animate('style', false)\n   *         .when(1000, {x: 10} )\n   *         .done(function(){ // Animation done })\n   *         .start()\n   */\n  animate: function (path, loop) {\n    var target;\n    var animatingShape = false;\n    var el = this;\n    var zr = this.__zr;\n\n    if (path) {\n      var pathSplitted = path.split('.');\n      var prop = el; // If animating shape\n\n      animatingShape = pathSplitted[0] === 'shape';\n\n      for (var i = 0, l = pathSplitted.length; i < l; i++) {\n        if (!prop) {\n          continue;\n        }\n\n        prop = prop[pathSplitted[i]];\n      }\n\n      if (prop) {\n        target = prop;\n      }\n    } else {\n      target = el;\n    }\n\n    if (!target) {\n      log('Property \"' + path + '\" is not existed in element ' + el.id);\n      return;\n    }\n\n    var animators = el.animators;\n    var animator = new Animator(target, loop);\n    animator.during(function (target) {\n      el.dirty(animatingShape);\n    }).done(function () {\n      // FIXME Animator will not be removed if use `Animator#stop` to stop animation\n      animators.splice(indexOf(animators, animator), 1);\n    });\n    animators.push(animator); // If animate after added to the zrender\n\n    if (zr) {\n      zr.animation.addAnimator(animator);\n    }\n\n    return animator;\n  },\n\n  /**\n   * 停止动画\n   * @param {boolean} forwardToLast If move to last frame before stop\n   */\n  stopAnimation: function (forwardToLast) {\n    var animators = this.animators;\n    var len = animators.length;\n\n    for (var i = 0; i < len; i++) {\n      animators[i].stop(forwardToLast);\n    }\n\n    animators.length = 0;\n    return this;\n  },\n\n  /**\n   * Caution: this method will stop previous animation.\n   * So do not use this method to one element twice before\n   * animation starts, unless you know what you are doing.\n   * @param {Object} target\n   * @param {number} [time=500] Time in ms\n   * @param {string} [easing='linear']\n   * @param {number} [delay=0]\n   * @param {Function} [callback]\n   * @param {Function} [forceAnimate] Prevent stop animation and callback\n   *        immediently when target values are the same as current values.\n   *\n   * @example\n   *  // Animate position\n   *  el.animateTo({\n   *      position: [10, 10]\n   *  }, function () { // done })\n   *\n   *  // Animate shape, style and position in 100ms, delayed 100ms, with cubicOut easing\n   *  el.animateTo({\n   *      shape: {\n   *          width: 500\n   *      },\n   *      style: {\n   *          fill: 'red'\n   *      }\n   *      position: [10, 10]\n   *  }, 100, 100, 'cubicOut', function () { // done })\n   */\n  // TODO Return animation key\n  animateTo: function (target, time, delay, easing, callback, forceAnimate) {\n    // animateTo(target, time, easing, callback);\n    if (isString(delay)) {\n      callback = easing;\n      easing = delay;\n      delay = 0;\n    } // animateTo(target, time, delay, callback);\n    else if (isFunction(easing)) {\n        callback = easing;\n        easing = 'linear';\n        delay = 0;\n      } // animateTo(target, time, callback);\n      else if (isFunction(delay)) {\n          callback = delay;\n          delay = 0;\n        } // animateTo(target, callback)\n        else if (isFunction(time)) {\n            callback = time;\n            time = 500;\n          } // animateTo(target)\n          else if (!time) {\n              time = 500;\n            } // Stop all previous animations\n\n\n    this.stopAnimation();\n\n    this._animateToShallow('', this, target, time, delay); // Animators may be removed immediately after start\n    // if there is nothing to animate\n\n\n    var animators = this.animators.slice();\n    var count = animators.length;\n\n    function done() {\n      count--;\n\n      if (!count) {\n        callback && callback();\n      }\n    } // No animators. This should be checked before animators[i].start(),\n    // because 'done' may be executed immediately if no need to animate.\n\n\n    if (!count) {\n      callback && callback();\n    } // Start after all animators created\n    // Incase any animator is done immediately when all animation properties are not changed\n\n\n    for (var i = 0; i < animators.length; i++) {\n      animators[i].done(done).start(easing, forceAnimate);\n    }\n  },\n\n  /**\n   * @private\n   * @param {string} path=''\n   * @param {Object} source=this\n   * @param {Object} target\n   * @param {number} [time=500]\n   * @param {number} [delay=0]\n   *\n   * @example\n   *  // Animate position\n   *  el._animateToShallow({\n   *      position: [10, 10]\n   *  })\n   *\n   *  // Animate shape, style and position in 100ms, delayed 100ms\n   *  el._animateToShallow({\n   *      shape: {\n   *          width: 500\n   *      },\n   *      style: {\n   *          fill: 'red'\n   *      }\n   *      position: [10, 10]\n   *  }, 100, 100)\n   */\n  _animateToShallow: function (path, source, target, time, delay) {\n    var objShallow = {};\n    var propertyCount = 0;\n\n    for (var name in target) {\n      if (!target.hasOwnProperty(name)) {\n        continue;\n      }\n\n      if (source[name] != null) {\n        if (isObject(target[name]) && !isArrayLike(target[name])) {\n          this._animateToShallow(path ? path + '.' + name : name, source[name], target[name], time, delay);\n        } else {\n          objShallow[name] = target[name];\n          propertyCount++;\n        }\n      } else if (target[name] != null) {\n        // Attr directly if not has property\n        // FIXME, if some property not needed for element ?\n        if (!path) {\n          this.attr(name, target[name]);\n        } else {\n          // Shape or style\n          var props = {};\n          props[path] = {};\n          props[path][name] = target[name];\n          this.attr(props);\n        }\n      }\n    }\n\n    if (propertyCount > 0) {\n      this.animate(path, false).when(time == null ? 500 : time, objShallow).delay(delay || 0);\n    }\n\n    return this;\n  }\n};\nvar _default = Animatable;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1789:\n/***/ (function(module, exports) {\n\n// TODO Draggable for group\n// FIXME Draggable on element which has parent rotation or scale\nfunction Draggable() {\n  this.on('mousedown', this._dragStart, this);\n  this.on('mousemove', this._drag, this);\n  this.on('mouseup', this._dragEnd, this);\n  this.on('globalout', this._dragEnd, this); // this._dropTarget = null;\n  // this._draggingTarget = null;\n  // this._x = 0;\n  // this._y = 0;\n}\n\nDraggable.prototype = {\n  constructor: Draggable,\n  _dragStart: function (e) {\n    var draggingTarget = e.target;\n\n    if (draggingTarget && draggingTarget.draggable) {\n      this._draggingTarget = draggingTarget;\n      draggingTarget.dragging = true;\n      this._x = e.offsetX;\n      this._y = e.offsetY;\n      this.dispatchToElement(param(draggingTarget, e), 'dragstart', e.event);\n    }\n  },\n  _drag: function (e) {\n    var draggingTarget = this._draggingTarget;\n\n    if (draggingTarget) {\n      var x = e.offsetX;\n      var y = e.offsetY;\n      var dx = x - this._x;\n      var dy = y - this._y;\n      this._x = x;\n      this._y = y;\n      draggingTarget.drift(dx, dy, e);\n      this.dispatchToElement(param(draggingTarget, e), 'drag', e.event);\n      var dropTarget = this.findHover(x, y, draggingTarget).target;\n      var lastDropTarget = this._dropTarget;\n      this._dropTarget = dropTarget;\n\n      if (draggingTarget !== dropTarget) {\n        if (lastDropTarget && dropTarget !== lastDropTarget) {\n          this.dispatchToElement(param(lastDropTarget, e), 'dragleave', e.event);\n        }\n\n        if (dropTarget && dropTarget !== lastDropTarget) {\n          this.dispatchToElement(param(dropTarget, e), 'dragenter', e.event);\n        }\n      }\n    }\n  },\n  _dragEnd: function (e) {\n    var draggingTarget = this._draggingTarget;\n\n    if (draggingTarget) {\n      draggingTarget.dragging = false;\n    }\n\n    this.dispatchToElement(param(draggingTarget, e), 'dragend', e.event);\n\n    if (this._dropTarget) {\n      this.dispatchToElement(param(this._dropTarget, e), 'drop', e.event);\n    }\n\n    this._draggingTarget = null;\n    this._dropTarget = null;\n  }\n};\n\nfunction param(target, e) {\n  return {\n    target: target,\n    topTarget: e && e.topTarget\n  };\n}\n\nvar _default = Draggable;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1790:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(1493);\n\nvar PathProxy = __webpack_require__(1557);\n\nvar transformPath = __webpack_require__(1791);\n\n// command chars\nvar cc = ['m', 'M', 'l', 'L', 'v', 'V', 'h', 'H', 'z', 'Z', 'c', 'C', 'q', 'Q', 't', 'T', 's', 'S', 'a', 'A'];\nvar mathSqrt = Math.sqrt;\nvar mathSin = Math.sin;\nvar mathCos = Math.cos;\nvar PI = Math.PI;\n\nvar vMag = function (v) {\n  return Math.sqrt(v[0] * v[0] + v[1] * v[1]);\n};\n\nvar vRatio = function (u, v) {\n  return (u[0] * v[0] + u[1] * v[1]) / (vMag(u) * vMag(v));\n};\n\nvar vAngle = function (u, v) {\n  return (u[0] * v[1] < u[1] * v[0] ? -1 : 1) * Math.acos(vRatio(u, v));\n};\n\nfunction processArc(x1, y1, x2, y2, fa, fs, rx, ry, psiDeg, cmd, path) {\n  var psi = psiDeg * (PI / 180.0);\n  var xp = mathCos(psi) * (x1 - x2) / 2.0 + mathSin(psi) * (y1 - y2) / 2.0;\n  var yp = -1 * mathSin(psi) * (x1 - x2) / 2.0 + mathCos(psi) * (y1 - y2) / 2.0;\n  var lambda = xp * xp / (rx * rx) + yp * yp / (ry * ry);\n\n  if (lambda > 1) {\n    rx *= mathSqrt(lambda);\n    ry *= mathSqrt(lambda);\n  }\n\n  var f = (fa === fs ? -1 : 1) * mathSqrt((rx * rx * (ry * ry) - rx * rx * (yp * yp) - ry * ry * (xp * xp)) / (rx * rx * (yp * yp) + ry * ry * (xp * xp))) || 0;\n  var cxp = f * rx * yp / ry;\n  var cyp = f * -ry * xp / rx;\n  var cx = (x1 + x2) / 2.0 + mathCos(psi) * cxp - mathSin(psi) * cyp;\n  var cy = (y1 + y2) / 2.0 + mathSin(psi) * cxp + mathCos(psi) * cyp;\n  var theta = vAngle([1, 0], [(xp - cxp) / rx, (yp - cyp) / ry]);\n  var u = [(xp - cxp) / rx, (yp - cyp) / ry];\n  var v = [(-1 * xp - cxp) / rx, (-1 * yp - cyp) / ry];\n  var dTheta = vAngle(u, v);\n\n  if (vRatio(u, v) <= -1) {\n    dTheta = PI;\n  }\n\n  if (vRatio(u, v) >= 1) {\n    dTheta = 0;\n  }\n\n  if (fs === 0 && dTheta > 0) {\n    dTheta = dTheta - 2 * PI;\n  }\n\n  if (fs === 1 && dTheta < 0) {\n    dTheta = dTheta + 2 * PI;\n  }\n\n  path.addData(cmd, cx, cy, rx, ry, theta, dTheta, psi, fs);\n}\n\nfunction createPathProxyFromString(data) {\n  if (!data) {\n    return [];\n  } // command string\n\n\n  var cs = data.replace(/-/g, ' -').replace(/  /g, ' ').replace(/ /g, ',').replace(/,,/g, ',');\n  var n; // create pipes so that we can split the data\n\n  for (n = 0; n < cc.length; n++) {\n    cs = cs.replace(new RegExp(cc[n], 'g'), '|' + cc[n]);\n  } // create array\n\n\n  var arr = cs.split('|'); // init context point\n\n  var cpx = 0;\n  var cpy = 0;\n  var path = new PathProxy();\n  var CMD = PathProxy.CMD;\n  var prevCmd;\n\n  for (n = 1; n < arr.length; n++) {\n    var str = arr[n];\n    var c = str.charAt(0);\n    var off = 0;\n    var p = str.slice(1).replace(/e,-/g, 'e-').split(',');\n    var cmd;\n\n    if (p.length > 0 && p[0] === '') {\n      p.shift();\n    }\n\n    for (var i = 0; i < p.length; i++) {\n      p[i] = parseFloat(p[i]);\n    }\n\n    while (off < p.length && !isNaN(p[off])) {\n      if (isNaN(p[0])) {\n        break;\n      }\n\n      var ctlPtx;\n      var ctlPty;\n      var rx;\n      var ry;\n      var psi;\n      var fa;\n      var fs;\n      var x1 = cpx;\n      var y1 = cpy; // convert l, H, h, V, and v to L\n\n      switch (c) {\n        case 'l':\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'L':\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'm':\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.M;\n          path.addData(cmd, cpx, cpy);\n          c = 'l';\n          break;\n\n        case 'M':\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.M;\n          path.addData(cmd, cpx, cpy);\n          c = 'L';\n          break;\n\n        case 'h':\n          cpx += p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'H':\n          cpx = p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'v':\n          cpy += p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'V':\n          cpy = p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'C':\n          cmd = CMD.C;\n          path.addData(cmd, p[off++], p[off++], p[off++], p[off++], p[off++], p[off++]);\n          cpx = p[off - 2];\n          cpy = p[off - 1];\n          break;\n\n        case 'c':\n          cmd = CMD.C;\n          path.addData(cmd, p[off++] + cpx, p[off++] + cpy, p[off++] + cpx, p[off++] + cpy, p[off++] + cpx, p[off++] + cpy);\n          cpx += p[off - 2];\n          cpy += p[off - 1];\n          break;\n\n        case 'S':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.C) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cmd = CMD.C;\n          x1 = p[off++];\n          y1 = p[off++];\n          cpx = p[off++];\n          cpy = p[off++];\n          path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n          break;\n\n        case 's':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.C) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cmd = CMD.C;\n          x1 = cpx + p[off++];\n          y1 = cpy + p[off++];\n          cpx += p[off++];\n          cpy += p[off++];\n          path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n          break;\n\n        case 'Q':\n          x1 = p[off++];\n          y1 = p[off++];\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, x1, y1, cpx, cpy);\n          break;\n\n        case 'q':\n          x1 = p[off++] + cpx;\n          y1 = p[off++] + cpy;\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, x1, y1, cpx, cpy);\n          break;\n\n        case 'T':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.Q) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n          break;\n\n        case 't':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.Q) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n          break;\n\n        case 'A':\n          rx = p[off++];\n          ry = p[off++];\n          psi = p[off++];\n          fa = p[off++];\n          fs = p[off++];\n          x1 = cpx, y1 = cpy;\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.A;\n          processArc(x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path);\n          break;\n\n        case 'a':\n          rx = p[off++];\n          ry = p[off++];\n          psi = p[off++];\n          fa = p[off++];\n          fs = p[off++];\n          x1 = cpx, y1 = cpy;\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.A;\n          processArc(x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path);\n          break;\n      }\n    }\n\n    if (c === 'z' || c === 'Z') {\n      cmd = CMD.Z;\n      path.addData(cmd);\n    }\n\n    prevCmd = cmd;\n  }\n\n  path.toStatic();\n  return path;\n} // TODO Optimize double memory cost problem\n\n\nfunction createPathOptions(str, opts) {\n  var pathProxy = createPathProxyFromString(str);\n  opts = opts || {};\n\n  opts.buildPath = function (path) {\n    if (path.setData) {\n      path.setData(pathProxy.data); // Svg and vml renderer don't have context\n\n      var ctx = path.getContext();\n\n      if (ctx) {\n        path.rebuildPath(ctx);\n      }\n    } else {\n      var ctx = path;\n      pathProxy.rebuildPath(ctx);\n    }\n  };\n\n  opts.applyTransform = function (m) {\n    transformPath(pathProxy, m);\n    this.dirty(true);\n  };\n\n  return opts;\n}\n/**\n * Create a Path object from path string data\n * http://www.w3.org/TR/SVG/paths.html#PathData\n * @param  {Object} opts Other options\n */\n\n\nfunction createFromString(str, opts) {\n  return new Path(createPathOptions(str, opts));\n}\n/**\n * Create a Path class from path string data\n * @param  {string} str\n * @param  {Object} opts Other options\n */\n\n\nfunction extendFromString(str, opts) {\n  return Path.extend(createPathOptions(str, opts));\n}\n/**\n * Merge multiple paths\n */\n// TODO Apply transform\n// TODO stroke dash\n// TODO Optimize double memory cost problem\n\n\nfunction mergePath(pathEls, opts) {\n  var pathList = [];\n  var len = pathEls.length;\n\n  for (var i = 0; i < len; i++) {\n    var pathEl = pathEls[i];\n\n    if (!pathEl.path) {\n      pathEl.createPathProxy();\n    }\n\n    if (pathEl.__dirtyPath) {\n      pathEl.buildPath(pathEl.path, pathEl.shape, true);\n    }\n\n    pathList.push(pathEl.path);\n  }\n\n  var pathBundle = new Path(opts); // Need path proxy.\n\n  pathBundle.createPathProxy();\n\n  pathBundle.buildPath = function (path) {\n    path.appendPath(pathList); // Svg and vml renderer don't have context\n\n    var ctx = path.getContext();\n\n    if (ctx) {\n      path.rebuildPath(ctx);\n    }\n  };\n\n  return pathBundle;\n}\n\nexports.createFromString = createFromString;\nexports.extendFromString = extendFromString;\nexports.mergePath = mergePath;\n\n/***/ }),\n\n/***/ 1791:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar PathProxy = __webpack_require__(1557);\n\nvar _vector = __webpack_require__(1485);\n\nvar v2ApplyTransform = _vector.applyTransform;\nvar CMD = PathProxy.CMD;\nvar points = [[], [], []];\nvar mathSqrt = Math.sqrt;\nvar mathAtan2 = Math.atan2;\n\nfunction _default(path, m) {\n  var data = path.data;\n  var cmd;\n  var nPoint;\n  var i;\n  var j;\n  var k;\n  var p;\n  var M = CMD.M;\n  var C = CMD.C;\n  var L = CMD.L;\n  var R = CMD.R;\n  var A = CMD.A;\n  var Q = CMD.Q;\n\n  for (i = 0, j = 0; i < data.length;) {\n    cmd = data[i++];\n    j = i;\n    nPoint = 0;\n\n    switch (cmd) {\n      case M:\n        nPoint = 1;\n        break;\n\n      case L:\n        nPoint = 1;\n        break;\n\n      case C:\n        nPoint = 3;\n        break;\n\n      case Q:\n        nPoint = 2;\n        break;\n\n      case A:\n        var x = m[4];\n        var y = m[5];\n        var sx = mathSqrt(m[0] * m[0] + m[1] * m[1]);\n        var sy = mathSqrt(m[2] * m[2] + m[3] * m[3]);\n        var angle = mathAtan2(-m[1] / sy, m[0] / sx); // cx\n\n        data[i] *= sx;\n        data[i++] += x; // cy\n\n        data[i] *= sy;\n        data[i++] += y; // Scale rx and ry\n        // FIXME Assume psi is 0 here\n\n        data[i++] *= sx;\n        data[i++] *= sy; // Start angle\n\n        data[i++] += angle; // end angle\n\n        data[i++] += angle; // FIXME psi\n\n        i += 2;\n        j = i;\n        break;\n\n      case R:\n        // x0, y0\n        p[0] = data[i++];\n        p[1] = data[i++];\n        v2ApplyTransform(p, p, m);\n        data[j++] = p[0];\n        data[j++] = p[1]; // x1, y1\n\n        p[0] += data[i++];\n        p[1] += data[i++];\n        v2ApplyTransform(p, p, m);\n        data[j++] = p[0];\n        data[j++] = p[1];\n    }\n\n    for (k = 0; k < nPoint; k++) {\n      var p = points[k];\n      p[0] = data[i++];\n      p[1] = data[i++];\n      v2ApplyTransform(p, p, m); // Write back\n\n      data[j++] = p[0];\n      data[j++] = p[1];\n    }\n  }\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 2035:\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(10)(undefined);\n// imports\n\n\n// module\nexports.push([module.i, \"a {\\n  color: #9a9898;\\n}\\n.my-fb {\\n  padding-right: 30px;\\n}\\n.tbox-content:after {\\n  content: '\\\\66F4\\\\591A';\\n  float: right;\\n  position: absolute;\\n  top: 0;\\n  right: 0;\\n}\\n.tbox-content ul {\\n  /* padding-right: 70px;*/\\n}\\n.tbox-content {\\n  height: 1.5em;\\n  overflow: hidden;\\n  font-size: 15px;\\n  position: relative;\\n}\\n.tbox-content ul li {\\n  display: inline-block;\\n  margin-right: 150px;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/***/ }),\n\n/***/ 2353:\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(2035);\nif(typeof content === 'string') content = [[module.i, content, '']];\n// Prepare cssTransformation\nvar transform;\n\nvar options = {\"hmr\":true}\noptions.transform = transform\n// add the styles to the DOM\nvar update = __webpack_require__(11)(content, options);\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(false) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../../node_modules/css-loader/index.js!../../../node_modules/postcss-loader/lib/index.js??postcss!../../../node_modules/less-loader/dist/cjs.js??ref--5-3!./DataReport.less\", function() {\n\t\t\tvar newContent = require(\"!!../../../node_modules/css-loader/index.js!../../../node_modules/postcss-loader/lib/index.js??postcss!../../../node_modules/less-loader/dist/cjs.js??ref--5-3!./DataReport.less\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n/***/ }),\n\n/***/ 2380:\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__.p + \"static/media/bar.7cc5cb87.png\";\n\n/***/ }),\n\n/***/ 2381:\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__.p + \"static/media/bie.2a361d4a.png\";\n\n/***/ }),\n\n/***/ 2387:\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__.p + \"static/media/line.425e83ae.png\";\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/3.5bf7afd4.chunk.js","import React from 'react';\r\nimport { Card,  Tabs, Select,Table,Row,Col } from 'antd';\r\nimport {RequireUtils} from 'utils';\r\nimport echarts from 'echarts/lib/echarts' ;\r\nimport 'echarts/lib/chart/bar' ;\r\nimport 'echarts/lib/chart/line' ;\r\nimport 'echarts/lib/component/tooltip' ;\r\nimport 'echarts/lib/component/title' ;\r\nimport bieimg from '../../../src/assets/img/bie.png';\r\nimport lineimg from '../../../src/assets/img/line.png' ;\r\nimport barimg from '../../../src/assets/img/bar.png' ;\r\nimport createHistory from 'history/createHashHistory';\r\nimport './DataReport.less'\r\nconst TabPane = Tabs.TabPane;\r\nconst Option = Select.Option;\r\n\r\nclass ShowCustomerDetails extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      cust:{},\r\n      addr:[],\r\n      order:[],\r\n      fileList:[],\r\n      statistics:{}\r\n    };\r\n    this.callback = this.callback.bind(this);\r\n  }\r\n  callback(key) {\r\n    console.log(key);\r\n  }\r\n\r\n  componentDidMount() {\r\n    var _this = this ;\r\n  }\r\n\r\n  render() {\r\n    const {} = this.state ;\r\n    const props = {\r\n      action: '//jsonplaceholder.typicode.com/posts/',\r\n      listType:\"picture-card\"\r\n    };\r\n    return (\r\n      <div >\r\n        <Card hoverable title=\"数据报表\" type=\"card\" >\r\n          <Row style={{marginBottom:'5px'}}>\r\n              <div style={{background:'rgb(240, 242, 245)',padding:'10px',boxSizing:'border-box',boxShadow:'0 0 2px rgb(212,212,200)'}}>\r\n                  <span style={{display:'table-cell',width:'150px',height:'150px',verticalAlign:'middle'}}>\r\n                       <img src={bieimg}/>\r\n                  </span>\r\n                  <span style={{display:'table-cell',width:'100%',paddingLeft:'60px',verticalAlign:'middle'}}>\r\n                        <Row>\r\n                          <Col>\r\n                            <div style={{fontSize:'18px',fontWeight:'600'}}>缺陷分布图</div>\r\n                          </Col>\r\n                        </Row>\r\n                        <Row style={{marginTop:'25px'}}>\r\n                          <Col>\r\n                            <div className={'tbox-content'}>\r\n                              <div className={'my-fb'}>\r\n                                 <ul>\r\n                                  <li>缺陷状态分布图</li>\r\n                                  <li>缺陷严重级别分布图</li>\r\n                                  <li>缺陷根源分布图</li>\r\n                                </ul>\r\n                              </div>\r\n                            </div>\r\n                          </Col>\r\n                        </Row>\r\n                  </span>\r\n              </div>\r\n          </Row>\r\n          <Row style={{marginBottom:'5px'}}>\r\n            <div style={{background:'rgb(240, 242, 245)',padding:'10px',boxSizing:'border-box',boxShadow:'0 0 2px rgb(212,212,200)'}}>\r\n                  <span style={{display:'table-cell',width:'150px',height:'150px',verticalAlign:'middle'}}>\r\n                       <img src={lineimg}/>\r\n                  </span>\r\n                  <span style={{display:'table-cell',width:'100%',paddingLeft:'60px',verticalAlign:'middle'}}>\r\n                            <Row>\r\n                              <Col>\r\n                                <div style={{fontSize:'18px',fontWeight:'600'}}>缺陷分布图</div>\r\n                              </Col>\r\n                            </Row>\r\n                            <Row style={{marginTop:'25px'}}>\r\n                              <Col>\r\n                                <div className={'tbox-content'}>\r\n                                  <div className={'my-fb'}>\r\n                                     <ul>\r\n                                      <li>缺陷状态分布图</li>\r\n                                      <li>缺陷严重级别分布图</li>\r\n                                      <li>缺陷根源分布图</li>\r\n                                    </ul>\r\n                                  </div>\r\n                                </div>\r\n                              </Col>\r\n                            </Row>\r\n                      </span>\r\n              </div>\r\n          </Row>\r\n          <Row>\r\n            <div style={{background:'rgb(240, 242, 245)',padding:'10px',boxSizing:'border-box',boxShadow:'0 0 2px rgb(212,212,200)'}}>\r\n                  <span style={{display:'table-cell',width:'150px',height:'150px',verticalAlign:'middle'}}>\r\n                       <img src={barimg}/>\r\n                  </span>\r\n                 <span style={{display:'table-cell',width:'100%',paddingLeft:'60px',verticalAlign:'middle'}}>\r\n                            <Row>\r\n                              <Col>\r\n                                <div style={{fontSize:'18px',fontWeight:'600'}}>缺陷分布图</div>\r\n                              </Col>\r\n                            </Row>\r\n                            <Row style={{marginTop:'25px'}}>\r\n                              <Col>\r\n                                <div className={'tbox-content'}>\r\n                                  <div className={'my-fb'}>\r\n                                     <ul>\r\n                                      <li>缺陷状态分布图</li>\r\n                                      <li>缺陷严重级别分布图</li>\r\n                                      <li>缺陷根源分布图</li>\r\n                                    </ul>\r\n                                  </div>\r\n                                </div>\r\n                              </Col>\r\n                            </Row>\r\n                      </span>\r\n            </div>\r\n          </Row>\r\n          <Row>\r\n          </Row>\r\n        </Card>\r\n      </div >\r\n    )\r\n  }\r\n}\r\nexport default ShowCustomerDetails;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/fanhua-routes/DataReport/DataReport.jsx","/**\n * @module zrender/core/util\n */\n// 用于处理merge时无法遍历Date等对象的问题\nvar BUILTIN_OBJECT = {\n  '[object Function]': 1,\n  '[object RegExp]': 1,\n  '[object Date]': 1,\n  '[object Error]': 1,\n  '[object CanvasGradient]': 1,\n  '[object CanvasPattern]': 1,\n  // For node-canvas\n  '[object Image]': 1,\n  '[object Canvas]': 1\n};\nvar TYPED_ARRAY = {\n  '[object Int8Array]': 1,\n  '[object Uint8Array]': 1,\n  '[object Uint8ClampedArray]': 1,\n  '[object Int16Array]': 1,\n  '[object Uint16Array]': 1,\n  '[object Int32Array]': 1,\n  '[object Uint32Array]': 1,\n  '[object Float32Array]': 1,\n  '[object Float64Array]': 1\n};\nvar objToString = Object.prototype.toString;\nvar arrayProto = Array.prototype;\nvar nativeForEach = arrayProto.forEach;\nvar nativeFilter = arrayProto.filter;\nvar nativeSlice = arrayProto.slice;\nvar nativeMap = arrayProto.map;\nvar nativeReduce = arrayProto.reduce; // Avoid assign to an exported variable, for transforming to cjs.\n\nvar methods = {};\n\nfunction $override(name, fn) {\n  methods[name] = fn;\n}\n/**\n * Those data types can be cloned:\n *     Plain object, Array, TypedArray, number, string, null, undefined.\n * Those data types will be assgined using the orginal data:\n *     BUILTIN_OBJECT\n * Instance of user defined class will be cloned to a plain object, without\n * properties in prototype.\n * Other data types is not supported (not sure what will happen).\n *\n * Caution: do not support clone Date, for performance consideration.\n * (There might be a large number of date in `series.data`).\n * So date should not be modified in and out of echarts.\n *\n * @param {*} source\n * @return {*} new\n */\n\n\nfunction clone(source) {\n  if (source == null || typeof source != 'object') {\n    return source;\n  }\n\n  var result = source;\n  var typeStr = objToString.call(source);\n\n  if (typeStr === '[object Array]') {\n    result = [];\n\n    for (var i = 0, len = source.length; i < len; i++) {\n      result[i] = clone(source[i]);\n    }\n  } else if (TYPED_ARRAY[typeStr]) {\n    var Ctor = source.constructor;\n\n    if (source.constructor.from) {\n      result = Ctor.from(source);\n    } else {\n      result = new Ctor(source.length);\n\n      for (var i = 0, len = source.length; i < len; i++) {\n        result[i] = clone(source[i]);\n      }\n    }\n  } else if (!BUILTIN_OBJECT[typeStr] && !isPrimitive(source) && !isDom(source)) {\n    result = {};\n\n    for (var key in source) {\n      if (source.hasOwnProperty(key)) {\n        result[key] = clone(source[key]);\n      }\n    }\n  }\n\n  return result;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} target\n * @param {*} source\n * @param {boolean} [overwrite=false]\n */\n\n\nfunction merge(target, source, overwrite) {\n  // We should escapse that source is string\n  // and enter for ... in ...\n  if (!isObject(source) || !isObject(target)) {\n    return overwrite ? clone(source) : target;\n  }\n\n  for (var key in source) {\n    if (source.hasOwnProperty(key)) {\n      var targetProp = target[key];\n      var sourceProp = source[key];\n\n      if (isObject(sourceProp) && isObject(targetProp) && !isArray(sourceProp) && !isArray(targetProp) && !isDom(sourceProp) && !isDom(targetProp) && !isBuiltInObject(sourceProp) && !isBuiltInObject(targetProp) && !isPrimitive(sourceProp) && !isPrimitive(targetProp)) {\n        // 如果需要递归覆盖，就递归调用merge\n        merge(targetProp, sourceProp, overwrite);\n      } else if (overwrite || !(key in target)) {\n        // 否则只处理overwrite为true，或者在目标对象中没有此属性的情况\n        // NOTE，在 target[key] 不存在的时候也是直接覆盖\n        target[key] = clone(source[key], true);\n      }\n    }\n  }\n\n  return target;\n}\n/**\n * @param {Array} targetAndSources The first item is target, and the rests are source.\n * @param {boolean} [overwrite=false]\n * @return {*} target\n */\n\n\nfunction mergeAll(targetAndSources, overwrite) {\n  var result = targetAndSources[0];\n\n  for (var i = 1, len = targetAndSources.length; i < len; i++) {\n    result = merge(result, targetAndSources[i], overwrite);\n  }\n\n  return result;\n}\n/**\n * @param {*} target\n * @param {*} source\n * @memberOf module:zrender/core/util\n */\n\n\nfunction extend(target, source) {\n  for (var key in source) {\n    if (source.hasOwnProperty(key)) {\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n/**\n * @param {*} target\n * @param {*} source\n * @param {boolean} [overlay=false]\n * @memberOf module:zrender/core/util\n */\n\n\nfunction defaults(target, source, overlay) {\n  for (var key in source) {\n    if (source.hasOwnProperty(key) && (overlay ? source[key] != null : target[key] == null)) {\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nvar createCanvas = function () {\n  return methods.createCanvas();\n};\n\nmethods.createCanvas = function () {\n  return document.createElement('canvas');\n}; // FIXME\n\n\nvar _ctx;\n\nfunction getContext() {\n  if (!_ctx) {\n    // Use util.createCanvas instead of createCanvas\n    // because createCanvas may be overwritten in different environment\n    _ctx = createCanvas().getContext('2d');\n  }\n\n  return _ctx;\n}\n/**\n * 查询数组中元素的index\n * @memberOf module:zrender/core/util\n */\n\n\nfunction indexOf(array, value) {\n  if (array) {\n    if (array.indexOf) {\n      return array.indexOf(value);\n    }\n\n    for (var i = 0, len = array.length; i < len; i++) {\n      if (array[i] === value) {\n        return i;\n      }\n    }\n  }\n\n  return -1;\n}\n/**\n * 构造类继承关系\n *\n * @memberOf module:zrender/core/util\n * @param {Function} clazz 源类\n * @param {Function} baseClazz 基类\n */\n\n\nfunction inherits(clazz, baseClazz) {\n  var clazzPrototype = clazz.prototype;\n\n  function F() {}\n\n  F.prototype = baseClazz.prototype;\n  clazz.prototype = new F();\n\n  for (var prop in clazzPrototype) {\n    clazz.prototype[prop] = clazzPrototype[prop];\n  }\n\n  clazz.prototype.constructor = clazz;\n  clazz.superClass = baseClazz;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Object|Function} target\n * @param {Object|Function} sorce\n * @param {boolean} overlay\n */\n\n\nfunction mixin(target, source, overlay) {\n  target = 'prototype' in target ? target.prototype : target;\n  source = 'prototype' in source ? source.prototype : source;\n  defaults(target, source, overlay);\n}\n/**\n * Consider typed array.\n * @param {Array|TypedArray} data\n */\n\n\nfunction isArrayLike(data) {\n  if (!data) {\n    return;\n  }\n\n  if (typeof data == 'string') {\n    return false;\n  }\n\n  return typeof data.length == 'number';\n}\n/**\n * 数组或对象遍历\n * @memberOf module:zrender/core/util\n * @param {Object|Array} obj\n * @param {Function} cb\n * @param {*} [context]\n */\n\n\nfunction each(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.forEach && obj.forEach === nativeForEach) {\n    obj.forEach(cb, context);\n  } else if (obj.length === +obj.length) {\n    for (var i = 0, len = obj.length; i < len; i++) {\n      cb.call(context, obj[i], i, obj);\n    }\n  } else {\n    for (var key in obj) {\n      if (obj.hasOwnProperty(key)) {\n        cb.call(context, obj[key], key, obj);\n      }\n    }\n  }\n}\n/**\n * 数组映射\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {*} [context]\n * @return {Array}\n */\n\n\nfunction map(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.map && obj.map === nativeMap) {\n    return obj.map(cb, context);\n  } else {\n    var result = [];\n\n    for (var i = 0, len = obj.length; i < len; i++) {\n      result.push(cb.call(context, obj[i], i, obj));\n    }\n\n    return result;\n  }\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {Object} [memo]\n * @param {*} [context]\n * @return {Array}\n */\n\n\nfunction reduce(obj, cb, memo, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.reduce && obj.reduce === nativeReduce) {\n    return obj.reduce(cb, memo, context);\n  } else {\n    for (var i = 0, len = obj.length; i < len; i++) {\n      memo = cb.call(context, memo, obj[i], i, obj);\n    }\n\n    return memo;\n  }\n}\n/**\n * 数组过滤\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {*} [context]\n * @return {Array}\n */\n\n\nfunction filter(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.filter && obj.filter === nativeFilter) {\n    return obj.filter(cb, context);\n  } else {\n    var result = [];\n\n    for (var i = 0, len = obj.length; i < len; i++) {\n      if (cb.call(context, obj[i], i, obj)) {\n        result.push(obj[i]);\n      }\n    }\n\n    return result;\n  }\n}\n/**\n * 数组项查找\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {*} [context]\n * @return {*}\n */\n\n\nfunction find(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  for (var i = 0, len = obj.length; i < len; i++) {\n    if (cb.call(context, obj[i], i, obj)) {\n      return obj[i];\n    }\n  }\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Function} func\n * @param {*} context\n * @return {Function}\n */\n\n\nfunction bind(func, context) {\n  var args = nativeSlice.call(arguments, 2);\n  return function () {\n    return func.apply(context, args.concat(nativeSlice.call(arguments)));\n  };\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Function} func\n * @return {Function}\n */\n\n\nfunction curry(func) {\n  var args = nativeSlice.call(arguments, 1);\n  return function () {\n    return func.apply(this, args.concat(nativeSlice.call(arguments)));\n  };\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isArray(value) {\n  return objToString.call(value) === '[object Array]';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isFunction(value) {\n  return typeof value === 'function';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isString(value) {\n  return objToString.call(value) === '[object String]';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isObject(value) {\n  // Avoid a V8 JIT bug in Chrome 19-20.\n  // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n  var type = typeof value;\n  return type === 'function' || !!value && type == 'object';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isBuiltInObject(value) {\n  return !!BUILTIN_OBJECT[objToString.call(value)];\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isDom(value) {\n  return typeof value === 'object' && typeof value.nodeType === 'number' && typeof value.ownerDocument === 'object';\n}\n/**\n * Whether is exactly NaN. Notice isNaN('a') returns true.\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction eqNaN(value) {\n  return value !== value;\n}\n/**\n * If value1 is not null, then return value1, otherwise judget rest of values.\n * Low performance.\n * @memberOf module:zrender/core/util\n * @return {*} Final value\n */\n\n\nfunction retrieve(values) {\n  for (var i = 0, len = arguments.length; i < len; i++) {\n    if (arguments[i] != null) {\n      return arguments[i];\n    }\n  }\n}\n\nfunction retrieve2(value0, value1) {\n  return value0 != null ? value0 : value1;\n}\n\nfunction retrieve3(value0, value1, value2) {\n  return value0 != null ? value0 : value1 != null ? value1 : value2;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Array} arr\n * @param {number} startIndex\n * @param {number} endIndex\n * @return {Array}\n */\n\n\nfunction slice() {\n  return Function.call.apply(nativeSlice, arguments);\n}\n/**\n * Normalize css liked array configuration\n * e.g.\n *  3 => [3, 3, 3, 3]\n *  [4, 2] => [4, 2, 4, 2]\n *  [4, 3, 2] => [4, 3, 2, 3]\n * @param {number|Array.<number>} val\n * @return {Array.<number>}\n */\n\n\nfunction normalizeCssArray(val) {\n  if (typeof val === 'number') {\n    return [val, val, val, val];\n  }\n\n  var len = val.length;\n\n  if (len === 2) {\n    // vertical | horizontal\n    return [val[0], val[1], val[0], val[1]];\n  } else if (len === 3) {\n    // top | horizontal | bottom\n    return [val[0], val[1], val[2], val[1]];\n  }\n\n  return val;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {boolean} condition\n * @param {string} message\n */\n\n\nfunction assert(condition, message) {\n  if (!condition) {\n    throw new Error(message);\n  }\n}\n\nvar primitiveKey = '__ec_primitive__';\n/**\n * Set an object as primitive to be ignored traversing children in clone or merge\n */\n\nfunction setAsPrimitive(obj) {\n  obj[primitiveKey] = true;\n}\n\nfunction isPrimitive(obj) {\n  return obj[primitiveKey];\n}\n/**\n * @constructor\n * @param {Object} obj Only apply `ownProperty`.\n */\n\n\nfunction HashMap(obj) {\n  obj && each(obj, function (value, key) {\n    this.set(key, value);\n  }, this);\n} // Add prefix to avoid conflict with Object.prototype.\n\n\nvar HASH_MAP_PREFIX = '_ec_';\nvar HASH_MAP_PREFIX_LENGTH = 4;\nHashMap.prototype = {\n  constructor: HashMap,\n  // Do not provide `has` method to avoid defining what is `has`.\n  // (We usually treat `null` and `undefined` as the same, different\n  // from ES6 Map).\n  get: function (key) {\n    return this[HASH_MAP_PREFIX + key];\n  },\n  set: function (key, value) {\n    this[HASH_MAP_PREFIX + key] = value; // Comparing with invocation chaining, `return value` is more commonly\n    // used in this case: `var someVal = map.set('a', genVal());`\n\n    return value;\n  },\n  // Although util.each can be performed on this hashMap directly, user\n  // should not use the exposed keys, who are prefixed.\n  each: function (cb, context) {\n    context !== void 0 && (cb = bind(cb, context));\n\n    for (var prefixedKey in this) {\n      this.hasOwnProperty(prefixedKey) && cb(this[prefixedKey], prefixedKey.slice(HASH_MAP_PREFIX_LENGTH));\n    }\n  },\n  // Do not use this method if performance sensitive.\n  removeKey: function (key) {\n    delete this[HASH_MAP_PREFIX + key];\n  }\n};\n\nfunction createHashMap(obj) {\n  return new HashMap(obj);\n}\n\nfunction noop() {}\n\nexports.$override = $override;\nexports.clone = clone;\nexports.merge = merge;\nexports.mergeAll = mergeAll;\nexports.extend = extend;\nexports.defaults = defaults;\nexports.createCanvas = createCanvas;\nexports.getContext = getContext;\nexports.indexOf = indexOf;\nexports.inherits = inherits;\nexports.mixin = mixin;\nexports.isArrayLike = isArrayLike;\nexports.each = each;\nexports.map = map;\nexports.reduce = reduce;\nexports.filter = filter;\nexports.find = find;\nexports.bind = bind;\nexports.curry = curry;\nexports.isArray = isArray;\nexports.isFunction = isFunction;\nexports.isString = isString;\nexports.isObject = isObject;\nexports.isBuiltInObject = isBuiltInObject;\nexports.isDom = isDom;\nexports.eqNaN = eqNaN;\nexports.retrieve = retrieve;\nexports.retrieve2 = retrieve2;\nexports.retrieve3 = retrieve3;\nexports.slice = slice;\nexports.normalizeCssArray = normalizeCssArray;\nexports.assert = assert;\nexports.setAsPrimitive = setAsPrimitive;\nexports.isPrimitive = isPrimitive;\nexports.createHashMap = createHashMap;\nexports.noop = noop;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/util.js\n// module id = 1479\n// module chunks = 2 3","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar pathTool = require(\"zrender/lib/tool/path\");\n\nvar colorTool = require(\"zrender/lib/tool/color\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar vector = require(\"zrender/lib/core/vector\");\n\nvar Path = require(\"zrender/lib/graphic/Path\");\n\nvar Transformable = require(\"zrender/lib/mixin/Transformable\");\n\nvar Image = require(\"zrender/lib/graphic/Image\");\n\nexports.Image = Image;\n\nvar Group = require(\"zrender/lib/container/Group\");\n\nexports.Group = Group;\n\nvar Text = require(\"zrender/lib/graphic/Text\");\n\nexports.Text = Text;\n\nvar Circle = require(\"zrender/lib/graphic/shape/Circle\");\n\nexports.Circle = Circle;\n\nvar Sector = require(\"zrender/lib/graphic/shape/Sector\");\n\nexports.Sector = Sector;\n\nvar Ring = require(\"zrender/lib/graphic/shape/Ring\");\n\nexports.Ring = Ring;\n\nvar Polygon = require(\"zrender/lib/graphic/shape/Polygon\");\n\nexports.Polygon = Polygon;\n\nvar Polyline = require(\"zrender/lib/graphic/shape/Polyline\");\n\nexports.Polyline = Polyline;\n\nvar Rect = require(\"zrender/lib/graphic/shape/Rect\");\n\nexports.Rect = Rect;\n\nvar Line = require(\"zrender/lib/graphic/shape/Line\");\n\nexports.Line = Line;\n\nvar BezierCurve = require(\"zrender/lib/graphic/shape/BezierCurve\");\n\nexports.BezierCurve = BezierCurve;\n\nvar Arc = require(\"zrender/lib/graphic/shape/Arc\");\n\nexports.Arc = Arc;\n\nvar CompoundPath = require(\"zrender/lib/graphic/CompoundPath\");\n\nexports.CompoundPath = CompoundPath;\n\nvar LinearGradient = require(\"zrender/lib/graphic/LinearGradient\");\n\nexports.LinearGradient = LinearGradient;\n\nvar RadialGradient = require(\"zrender/lib/graphic/RadialGradient\");\n\nexports.RadialGradient = RadialGradient;\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nexports.BoundingRect = BoundingRect;\nvar round = Math.round;\nvar mathMax = Math.max;\nvar mathMin = Math.min;\nvar EMPTY_OBJ = {};\n/**\n * Extend shape with parameters\n */\n\nfunction extendShape(opts) {\n  return Path.extend(opts);\n}\n/**\n * Extend path\n */\n\n\nfunction extendPath(pathData, opts) {\n  return pathTool.extendFromString(pathData, opts);\n}\n/**\n * Create a path element from path data string\n * @param {string} pathData\n * @param {Object} opts\n * @param {module:zrender/core/BoundingRect} rect\n * @param {string} [layout=cover] 'center' or 'cover'\n */\n\n\nfunction makePath(pathData, opts, rect, layout) {\n  var path = pathTool.createFromString(pathData, opts);\n  var boundingRect = path.getBoundingRect();\n\n  if (rect) {\n    if (layout === 'center') {\n      rect = centerGraphic(rect, boundingRect);\n    }\n\n    resizePath(path, rect);\n  }\n\n  return path;\n}\n/**\n * Create a image element from image url\n * @param {string} imageUrl image url\n * @param {Object} opts options\n * @param {module:zrender/core/BoundingRect} rect constrain rect\n * @param {string} [layout=cover] 'center' or 'cover'\n */\n\n\nfunction makeImage(imageUrl, rect, layout) {\n  var path = new Image({\n    style: {\n      image: imageUrl,\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height\n    },\n    onload: function (img) {\n      if (layout === 'center') {\n        var boundingRect = {\n          width: img.width,\n          height: img.height\n        };\n        path.setStyle(centerGraphic(rect, boundingRect));\n      }\n    }\n  });\n  return path;\n}\n/**\n * Get position of centered element in bounding box.\n *\n * @param  {Object} rect         element local bounding box\n * @param  {Object} boundingRect constraint bounding box\n * @return {Object} element position containing x, y, width, and height\n */\n\n\nfunction centerGraphic(rect, boundingRect) {\n  // Set rect to center, keep width / height ratio.\n  var aspect = boundingRect.width / boundingRect.height;\n  var width = rect.height * aspect;\n  var height;\n\n  if (width <= rect.width) {\n    height = rect.height;\n  } else {\n    width = rect.width;\n    height = width / aspect;\n  }\n\n  var cx = rect.x + rect.width / 2;\n  var cy = rect.y + rect.height / 2;\n  return {\n    x: cx - width / 2,\n    y: cy - height / 2,\n    width: width,\n    height: height\n  };\n}\n\nvar mergePath = pathTool.mergePath;\n/**\n * Resize a path to fit the rect\n * @param {module:zrender/graphic/Path} path\n * @param {Object} rect\n */\n\nfunction resizePath(path, rect) {\n  if (!path.applyTransform) {\n    return;\n  }\n\n  var pathRect = path.getBoundingRect();\n  var m = pathRect.calculateTransform(rect);\n  path.applyTransform(m);\n}\n/**\n * Sub pixel optimize line for canvas\n *\n * @param {Object} param\n * @param {Object} [param.shape]\n * @param {number} [param.shape.x1]\n * @param {number} [param.shape.y1]\n * @param {number} [param.shape.x2]\n * @param {number} [param.shape.y2]\n * @param {Object} [param.style]\n * @param {number} [param.style.lineWidth]\n * @return {Object} Modified param\n */\n\n\nfunction subPixelOptimizeLine(param) {\n  var shape = param.shape;\n  var lineWidth = param.style.lineWidth;\n\n  if (round(shape.x1 * 2) === round(shape.x2 * 2)) {\n    shape.x1 = shape.x2 = subPixelOptimize(shape.x1, lineWidth, true);\n  }\n\n  if (round(shape.y1 * 2) === round(shape.y2 * 2)) {\n    shape.y1 = shape.y2 = subPixelOptimize(shape.y1, lineWidth, true);\n  }\n\n  return param;\n}\n/**\n * Sub pixel optimize rect for canvas\n *\n * @param {Object} param\n * @param {Object} [param.shape]\n * @param {number} [param.shape.x]\n * @param {number} [param.shape.y]\n * @param {number} [param.shape.width]\n * @param {number} [param.shape.height]\n * @param {Object} [param.style]\n * @param {number} [param.style.lineWidth]\n * @return {Object} Modified param\n */\n\n\nfunction subPixelOptimizeRect(param) {\n  var shape = param.shape;\n  var lineWidth = param.style.lineWidth;\n  var originX = shape.x;\n  var originY = shape.y;\n  var originWidth = shape.width;\n  var originHeight = shape.height;\n  shape.x = subPixelOptimize(shape.x, lineWidth, true);\n  shape.y = subPixelOptimize(shape.y, lineWidth, true);\n  shape.width = Math.max(subPixelOptimize(originX + originWidth, lineWidth, false) - shape.x, originWidth === 0 ? 0 : 1);\n  shape.height = Math.max(subPixelOptimize(originY + originHeight, lineWidth, false) - shape.y, originHeight === 0 ? 0 : 1);\n  return param;\n}\n/**\n * Sub pixel optimize for canvas\n *\n * @param {number} position Coordinate, such as x, y\n * @param {number} lineWidth Should be nonnegative integer.\n * @param {boolean=} positiveOrNegative Default false (negative).\n * @return {number} Optimized position.\n */\n\n\nfunction subPixelOptimize(position, lineWidth, positiveOrNegative) {\n  // Assure that (position + lineWidth / 2) is near integer edge,\n  // otherwise line will be fuzzy in canvas.\n  var doubledPosition = round(position * 2);\n  return (doubledPosition + round(lineWidth)) % 2 === 0 ? doubledPosition / 2 : (doubledPosition + (positiveOrNegative ? 1 : -1)) / 2;\n}\n\nfunction hasFillOrStroke(fillOrStroke) {\n  return fillOrStroke != null && fillOrStroke != 'none';\n}\n\nfunction liftColor(color) {\n  return typeof color === 'string' ? colorTool.lift(color, -0.1) : color;\n}\n/**\n * @private\n */\n\n\nfunction cacheElementStl(el) {\n  if (el.__hoverStlDirty) {\n    var stroke = el.style.stroke;\n    var fill = el.style.fill; // Create hoverStyle on mouseover\n\n    var hoverStyle = el.__hoverStl;\n    hoverStyle.fill = hoverStyle.fill || (hasFillOrStroke(fill) ? liftColor(fill) : null);\n    hoverStyle.stroke = hoverStyle.stroke || (hasFillOrStroke(stroke) ? liftColor(stroke) : null);\n    var normalStyle = {};\n\n    for (var name in hoverStyle) {\n      // See comment in `doSingleEnterHover`.\n      if (hoverStyle[name] != null) {\n        normalStyle[name] = el.style[name];\n      }\n    }\n\n    el.__normalStl = normalStyle;\n    el.__hoverStlDirty = false;\n  }\n}\n/**\n * @private\n */\n\n\nfunction doSingleEnterHover(el) {\n  if (el.__isHover) {\n    return;\n  }\n\n  cacheElementStl(el);\n\n  if (el.useHoverLayer) {\n    el.__zr && el.__zr.addHover(el, el.__hoverStl);\n  } else {\n    var style = el.style;\n    var insideRollbackOpt = style.insideRollbackOpt; // Consider case: only `position: 'top'` is set on emphasis, then text\n    // color should be returned to `autoColor`, rather than remain '#fff'.\n    // So we should rollback then apply again after style merging.\n\n    insideRollbackOpt && rollbackInsideStyle(style); // styles can be:\n    // {\n    //     label: {\n    //         normal: {\n    //             show: false,\n    //             position: 'outside',\n    //             fontSize: 18\n    //         },\n    //         emphasis: {\n    //             show: true\n    //         }\n    //     }\n    // },\n    // where properties of `emphasis` may not appear in `normal`. We previously use\n    // module:echarts/util/model#defaultEmphasis to merge `normal` to `emphasis`.\n    // But consider rich text and setOption in merge mode, it is impossible to cover\n    // all properties in merge. So we use merge mode when setting style here, where\n    // only properties that is not `null/undefined` can be set. The disadventage:\n    // null/undefined can not be used to remove style any more in `emphasis`.\n\n    style.extendFrom(el.__hoverStl); // Do not save `insideRollback`.\n\n    if (insideRollbackOpt) {\n      applyInsideStyle(style, style.insideOriginalTextPosition, insideRollbackOpt); // textFill may be rollbacked to null.\n\n      if (style.textFill == null) {\n        style.textFill = insideRollbackOpt.autoColor;\n      }\n    }\n\n    el.dirty(false);\n    el.z2 += 1;\n  }\n\n  el.__isHover = true;\n}\n/**\n * @inner\n */\n\n\nfunction doSingleLeaveHover(el) {\n  if (!el.__isHover) {\n    return;\n  }\n\n  var normalStl = el.__normalStl;\n\n  if (el.useHoverLayer) {\n    el.__zr && el.__zr.removeHover(el);\n  } else {\n    // Consider null/undefined value, should use\n    // `setStyle` but not `extendFrom(stl, true)`.\n    normalStl && el.setStyle(normalStl);\n    el.z2 -= 1;\n  }\n\n  el.__isHover = false;\n}\n/**\n * @inner\n */\n\n\nfunction doEnterHover(el) {\n  el.type === 'group' ? el.traverse(function (child) {\n    if (child.type !== 'group') {\n      doSingleEnterHover(child);\n    }\n  }) : doSingleEnterHover(el);\n}\n\nfunction doLeaveHover(el) {\n  el.type === 'group' ? el.traverse(function (child) {\n    if (child.type !== 'group') {\n      doSingleLeaveHover(child);\n    }\n  }) : doSingleLeaveHover(el);\n}\n/**\n * @inner\n */\n\n\nfunction setElementHoverStl(el, hoverStl) {\n  // If element has sepcified hoverStyle, then use it instead of given hoverStyle\n  // Often used when item group has a label element and it's hoverStyle is different\n  el.__hoverStl = el.hoverStyle || hoverStl || {};\n  el.__hoverStlDirty = true;\n\n  if (el.__isHover) {\n    cacheElementStl(el);\n  }\n}\n/**\n * @inner\n */\n\n\nfunction onElementMouseOver(e) {\n  if (this.__hoverSilentOnTouch && e.zrByTouch) {\n    return;\n  } // Only if element is not in emphasis status\n\n\n  !this.__isEmphasis && doEnterHover(this);\n}\n/**\n * @inner\n */\n\n\nfunction onElementMouseOut(e) {\n  if (this.__hoverSilentOnTouch && e.zrByTouch) {\n    return;\n  } // Only if element is not in emphasis status\n\n\n  !this.__isEmphasis && doLeaveHover(this);\n}\n/**\n * @inner\n */\n\n\nfunction enterEmphasis() {\n  this.__isEmphasis = true;\n  doEnterHover(this);\n}\n/**\n * @inner\n */\n\n\nfunction leaveEmphasis() {\n  this.__isEmphasis = false;\n  doLeaveHover(this);\n}\n/**\n * Set hover style of element.\n * This method can be called repeatly without side-effects.\n * @param {module:zrender/Element} el\n * @param {Object} [hoverStyle]\n * @param {Object} [opt]\n * @param {boolean} [opt.hoverSilentOnTouch=false]\n *        In touch device, mouseover event will be trigger on touchstart event\n *        (see module:zrender/dom/HandlerProxy). By this mechanism, we can\n *        conviniently use hoverStyle when tap on touch screen without additional\n *        code for compatibility.\n *        But if the chart/component has select feature, which usually also use\n *        hoverStyle, there might be conflict between 'select-highlight' and\n *        'hover-highlight' especially when roam is enabled (see geo for example).\n *        In this case, hoverSilentOnTouch should be used to disable hover-highlight\n *        on touch device.\n */\n\n\nfunction setHoverStyle(el, hoverStyle, opt) {\n  el.__hoverSilentOnTouch = opt && opt.hoverSilentOnTouch;\n  el.type === 'group' ? el.traverse(function (child) {\n    if (child.type !== 'group') {\n      setElementHoverStl(child, hoverStyle);\n    }\n  }) : setElementHoverStl(el, hoverStyle); // Duplicated function will be auto-ignored, see Eventful.js.\n\n  el.on('mouseover', onElementMouseOver).on('mouseout', onElementMouseOut); // Emphasis, normal can be triggered manually\n\n  el.on('emphasis', enterEmphasis).on('normal', leaveEmphasis);\n}\n/**\n * @param {Object|module:zrender/graphic/Style} normalStyle\n * @param {Object} emphasisStyle\n * @param {module:echarts/model/Model} normalModel\n * @param {module:echarts/model/Model} emphasisModel\n * @param {Object} opt Check `opt` of `setTextStyleCommon` to find other props.\n * @param {Object} [opt.defaultText]\n * @param {module:echarts/model/Model} [opt.labelFetcher] Fetch text by\n *      `opt.labelFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n * @param {module:echarts/model/Model} [opt.labelDataIndex] Fetch text by\n *      `opt.textFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n * @param {module:echarts/model/Model} [opt.labelDimIndex] Fetch text by\n *      `opt.textFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n * @param {Object} [normalSpecified]\n * @param {Object} [emphasisSpecified]\n */\n\n\nfunction setLabelStyle(normalStyle, emphasisStyle, normalModel, emphasisModel, opt, normalSpecified, emphasisSpecified) {\n  opt = opt || EMPTY_OBJ;\n  var labelFetcher = opt.labelFetcher;\n  var labelDataIndex = opt.labelDataIndex;\n  var labelDimIndex = opt.labelDimIndex; // This scenario, `label.normal.show = true; label.emphasis.show = false`,\n  // is not supported util someone requests.\n\n  var showNormal = normalModel.getShallow('show');\n  var showEmphasis = emphasisModel.getShallow('show'); // Consider performance, only fetch label when necessary.\n  // If `normal.show` is `false` and `emphasis.show` is `true` and `emphasis.formatter` is not set,\n  // label should be displayed, where text is fetched by `normal.formatter` or `opt.defaultText`.\n\n  var baseText = showNormal || showEmphasis ? zrUtil.retrieve2(labelFetcher ? labelFetcher.getFormattedLabel(labelDataIndex, 'normal', null, labelDimIndex) : null, opt.defaultText) : null;\n  var normalStyleText = showNormal ? baseText : null;\n  var emphasisStyleText = showEmphasis ? zrUtil.retrieve2(labelFetcher ? labelFetcher.getFormattedLabel(labelDataIndex, 'emphasis', null, labelDimIndex) : null, baseText) : null; // Optimize: If style.text is null, text will not be drawn.\n\n  if (normalStyleText != null || emphasisStyleText != null) {\n    // Always set `textStyle` even if `normalStyle.text` is null, because default\n    // values have to be set on `normalStyle`.\n    // If we set default values on `emphasisStyle`, consider case:\n    // Firstly, `setOption(... label: {normal: {text: null}, emphasis: {show: true}} ...);`\n    // Secondly, `setOption(... label: {noraml: {show: true, text: 'abc', color: 'red'} ...);`\n    // Then the 'red' will not work on emphasis.\n    setTextStyle(normalStyle, normalModel, normalSpecified, opt);\n    setTextStyle(emphasisStyle, emphasisModel, emphasisSpecified, opt, true);\n  }\n\n  normalStyle.text = normalStyleText;\n  emphasisStyle.text = emphasisStyleText;\n}\n/**\n * Set basic textStyle properties.\n * @param {Object|module:zrender/graphic/Style} textStyle\n * @param {module:echarts/model/Model} model\n * @param {Object} [specifiedTextStyle] Can be overrided by settings in model.\n * @param {Object} [opt] See `opt` of `setTextStyleCommon`.\n * @param {boolean} [isEmphasis]\n */\n\n\nfunction setTextStyle(textStyle, textStyleModel, specifiedTextStyle, opt, isEmphasis) {\n  setTextStyleCommon(textStyle, textStyleModel, opt, isEmphasis);\n  specifiedTextStyle && zrUtil.extend(textStyle, specifiedTextStyle);\n  textStyle.host && textStyle.host.dirty && textStyle.host.dirty(false);\n  return textStyle;\n}\n/**\n * Set text option in the style.\n * @deprecated\n * @param {Object} textStyle\n * @param {module:echarts/model/Model} labelModel\n * @param {string|boolean} defaultColor Default text color.\n *        If set as false, it will be processed as a emphasis style.\n */\n\n\nfunction setText(textStyle, labelModel, defaultColor) {\n  var opt = {\n    isRectText: true\n  };\n  var isEmphasis;\n\n  if (defaultColor === false) {\n    isEmphasis = true;\n  } else {\n    // Support setting color as 'auto' to get visual color.\n    opt.autoColor = defaultColor;\n  }\n\n  setTextStyleCommon(textStyle, labelModel, opt, isEmphasis);\n  textStyle.host && textStyle.host.dirty && textStyle.host.dirty(false);\n}\n/**\n * {\n *      disableBox: boolean, Whether diable drawing box of block (outer most).\n *      isRectText: boolean,\n *      autoColor: string, specify a color when color is 'auto',\n *              for textFill, textStroke, textBackgroundColor, and textBorderColor.\n *              If autoColor specified, it is used as default textFill.\n *      useInsideStyle:\n *              `true`: Use inside style (textFill, textStroke, textStrokeWidth)\n *                  if `textFill` is not specified.\n *              `false`: Do not use inside style.\n *              `null/undefined`: use inside style if `isRectText` is true and\n *                  `textFill` is not specified and textPosition contains `'inside'`.\n *      forceRich: boolean\n * }\n */\n\n\nfunction setTextStyleCommon(textStyle, textStyleModel, opt, isEmphasis) {\n  // Consider there will be abnormal when merge hover style to normal style if given default value.\n  opt = opt || EMPTY_OBJ;\n\n  if (opt.isRectText) {\n    var textPosition = textStyleModel.getShallow('position') || (isEmphasis ? null : 'inside'); // 'outside' is not a valid zr textPostion value, but used\n    // in bar series, and magric type should be considered.\n\n    textPosition === 'outside' && (textPosition = 'top');\n    textStyle.textPosition = textPosition;\n    textStyle.textOffset = textStyleModel.getShallow('offset');\n    var labelRotate = textStyleModel.getShallow('rotate');\n    labelRotate != null && (labelRotate *= Math.PI / 180);\n    textStyle.textRotation = labelRotate;\n    textStyle.textDistance = zrUtil.retrieve2(textStyleModel.getShallow('distance'), isEmphasis ? null : 5);\n  }\n\n  var ecModel = textStyleModel.ecModel;\n  var globalTextStyle = ecModel && ecModel.option.textStyle; // Consider case:\n  // {\n  //     data: [{\n  //         value: 12,\n  //         label: {\n  //             normal: {\n  //                 rich: {\n  //                     // no 'a' here but using parent 'a'.\n  //                 }\n  //             }\n  //         }\n  //     }],\n  //     rich: {\n  //         a: { ... }\n  //     }\n  // }\n\n  var richItemNames = getRichItemNames(textStyleModel);\n  var richResult;\n\n  if (richItemNames) {\n    richResult = {};\n\n    for (var name in richItemNames) {\n      if (richItemNames.hasOwnProperty(name)) {\n        // Cascade is supported in rich.\n        var richTextStyle = textStyleModel.getModel(['rich', name]); // In rich, never `disableBox`.\n\n        setTokenTextStyle(richResult[name] = {}, richTextStyle, globalTextStyle, opt, isEmphasis);\n      }\n    }\n  }\n\n  textStyle.rich = richResult;\n  setTokenTextStyle(textStyle, textStyleModel, globalTextStyle, opt, isEmphasis, true);\n\n  if (opt.forceRich && !opt.textStyle) {\n    opt.textStyle = {};\n  }\n\n  return textStyle;\n} // Consider case:\n// {\n//     data: [{\n//         value: 12,\n//         label: {\n//             normal: {\n//                 rich: {\n//                     // no 'a' here but using parent 'a'.\n//                 }\n//             }\n//         }\n//     }],\n//     rich: {\n//         a: { ... }\n//     }\n// }\n\n\nfunction getRichItemNames(textStyleModel) {\n  // Use object to remove duplicated names.\n  var richItemNameMap;\n\n  while (textStyleModel && textStyleModel !== textStyleModel.ecModel) {\n    var rich = (textStyleModel.option || EMPTY_OBJ).rich;\n\n    if (rich) {\n      richItemNameMap = richItemNameMap || {};\n\n      for (var name in rich) {\n        if (rich.hasOwnProperty(name)) {\n          richItemNameMap[name] = 1;\n        }\n      }\n    }\n\n    textStyleModel = textStyleModel.parentModel;\n  }\n\n  return richItemNameMap;\n}\n\nfunction setTokenTextStyle(textStyle, textStyleModel, globalTextStyle, opt, isEmphasis, isBlock) {\n  // In merge mode, default value should not be given.\n  globalTextStyle = !isEmphasis && globalTextStyle || EMPTY_OBJ;\n  textStyle.textFill = getAutoColor(textStyleModel.getShallow('color'), opt) || globalTextStyle.color;\n  textStyle.textStroke = getAutoColor(textStyleModel.getShallow('textBorderColor'), opt) || globalTextStyle.textBorderColor;\n  textStyle.textStrokeWidth = zrUtil.retrieve2(textStyleModel.getShallow('textBorderWidth'), globalTextStyle.textBorderWidth);\n\n  if (!isEmphasis) {\n    if (isBlock) {\n      // Always set `insideRollback`, for clearing previous.\n      var originalTextPosition = textStyle.textPosition;\n      textStyle.insideRollback = applyInsideStyle(textStyle, originalTextPosition, opt); // Save original textPosition, because style.textPosition will be repalced by\n      // real location (like [10, 30]) in zrender.\n\n      textStyle.insideOriginalTextPosition = originalTextPosition;\n      textStyle.insideRollbackOpt = opt;\n    } // Set default finally.\n\n\n    if (textStyle.textFill == null) {\n      textStyle.textFill = opt.autoColor;\n    }\n  } // Do not use `getFont` here, because merge should be supported, where\n  // part of these properties may be changed in emphasis style, and the\n  // others should remain their original value got from normal style.\n\n\n  textStyle.fontStyle = textStyleModel.getShallow('fontStyle') || globalTextStyle.fontStyle;\n  textStyle.fontWeight = textStyleModel.getShallow('fontWeight') || globalTextStyle.fontWeight;\n  textStyle.fontSize = textStyleModel.getShallow('fontSize') || globalTextStyle.fontSize;\n  textStyle.fontFamily = textStyleModel.getShallow('fontFamily') || globalTextStyle.fontFamily;\n  textStyle.textAlign = textStyleModel.getShallow('align');\n  textStyle.textVerticalAlign = textStyleModel.getShallow('verticalAlign') || textStyleModel.getShallow('baseline');\n  textStyle.textLineHeight = textStyleModel.getShallow('lineHeight');\n  textStyle.textWidth = textStyleModel.getShallow('width');\n  textStyle.textHeight = textStyleModel.getShallow('height');\n  textStyle.textTag = textStyleModel.getShallow('tag');\n\n  if (!isBlock || !opt.disableBox) {\n    textStyle.textBackgroundColor = getAutoColor(textStyleModel.getShallow('backgroundColor'), opt);\n    textStyle.textPadding = textStyleModel.getShallow('padding');\n    textStyle.textBorderColor = getAutoColor(textStyleModel.getShallow('borderColor'), opt);\n    textStyle.textBorderWidth = textStyleModel.getShallow('borderWidth');\n    textStyle.textBorderRadius = textStyleModel.getShallow('borderRadius');\n    textStyle.textBoxShadowColor = textStyleModel.getShallow('shadowColor');\n    textStyle.textBoxShadowBlur = textStyleModel.getShallow('shadowBlur');\n    textStyle.textBoxShadowOffsetX = textStyleModel.getShallow('shadowOffsetX');\n    textStyle.textBoxShadowOffsetY = textStyleModel.getShallow('shadowOffsetY');\n  }\n\n  textStyle.textShadowColor = textStyleModel.getShallow('textShadowColor') || globalTextStyle.textShadowColor;\n  textStyle.textShadowBlur = textStyleModel.getShallow('textShadowBlur') || globalTextStyle.textShadowBlur;\n  textStyle.textShadowOffsetX = textStyleModel.getShallow('textShadowOffsetX') || globalTextStyle.textShadowOffsetX;\n  textStyle.textShadowOffsetY = textStyleModel.getShallow('textShadowOffsetY') || globalTextStyle.textShadowOffsetY;\n}\n\nfunction getAutoColor(color, opt) {\n  return color !== 'auto' ? color : opt && opt.autoColor ? opt.autoColor : null;\n}\n\nfunction applyInsideStyle(textStyle, textPosition, opt) {\n  var useInsideStyle = opt.useInsideStyle;\n  var insideRollback;\n\n  if (textStyle.textFill == null && useInsideStyle !== false && (useInsideStyle === true || opt.isRectText && textPosition // textPosition can be [10, 30]\n  && typeof textPosition === 'string' && textPosition.indexOf('inside') >= 0)) {\n    insideRollback = {\n      textFill: null,\n      textStroke: textStyle.textStroke,\n      textStrokeWidth: textStyle.textStrokeWidth\n    };\n    textStyle.textFill = '#fff'; // Consider text with #fff overflow its container.\n\n    if (textStyle.textStroke == null) {\n      textStyle.textStroke = opt.autoColor;\n      textStyle.textStrokeWidth == null && (textStyle.textStrokeWidth = 2);\n    }\n  }\n\n  return insideRollback;\n}\n\nfunction rollbackInsideStyle(style) {\n  var insideRollback = style.insideRollback;\n\n  if (insideRollback) {\n    style.textFill = insideRollback.textFill;\n    style.textStroke = insideRollback.textStroke;\n    style.textStrokeWidth = insideRollback.textStrokeWidth;\n  }\n}\n\nfunction getFont(opt, ecModel) {\n  // ecModel or default text style model.\n  var gTextStyleModel = ecModel || ecModel.getModel('textStyle');\n  return [// FIXME in node-canvas fontWeight is before fontStyle\n  opt.fontStyle || gTextStyleModel && gTextStyleModel.getShallow('fontStyle') || '', opt.fontWeight || gTextStyleModel && gTextStyleModel.getShallow('fontWeight') || '', (opt.fontSize || gTextStyleModel && gTextStyleModel.getShallow('fontSize') || 12) + 'px', opt.fontFamily || gTextStyleModel && gTextStyleModel.getShallow('fontFamily') || 'sans-serif'].join(' ');\n}\n\nfunction animateOrSetProps(isUpdate, el, props, animatableModel, dataIndex, cb) {\n  if (typeof dataIndex === 'function') {\n    cb = dataIndex;\n    dataIndex = null;\n  } // Do not check 'animation' property directly here. Consider this case:\n  // animation model is an `itemModel`, whose does not have `isAnimationEnabled`\n  // but its parent model (`seriesModel`) does.\n\n\n  var animationEnabled = animatableModel && animatableModel.isAnimationEnabled();\n\n  if (animationEnabled) {\n    var postfix = isUpdate ? 'Update' : '';\n    var duration = animatableModel.getShallow('animationDuration' + postfix);\n    var animationEasing = animatableModel.getShallow('animationEasing' + postfix);\n    var animationDelay = animatableModel.getShallow('animationDelay' + postfix);\n\n    if (typeof animationDelay === 'function') {\n      animationDelay = animationDelay(dataIndex, animatableModel.getAnimationDelayParams ? animatableModel.getAnimationDelayParams(el, dataIndex) : null);\n    }\n\n    if (typeof duration === 'function') {\n      duration = duration(dataIndex);\n    }\n\n    duration > 0 ? el.animateTo(props, duration, animationDelay || 0, animationEasing, cb, !!cb) : (el.stopAnimation(), el.attr(props), cb && cb());\n  } else {\n    el.stopAnimation();\n    el.attr(props);\n    cb && cb();\n  }\n}\n/**\n * Update graphic element properties with or without animation according to the\n * configuration in series.\n *\n * Caution: this method will stop previous animation.\n * So if do not use this method to one element twice before\n * animation starts, unless you know what you are doing.\n *\n * @param {module:zrender/Element} el\n * @param {Object} props\n * @param {module:echarts/model/Model} [animatableModel]\n * @param {number} [dataIndex]\n * @param {Function} [cb]\n * @example\n *     graphic.updateProps(el, {\n *         position: [100, 100]\n *     }, seriesModel, dataIndex, function () { console.log('Animation done!'); });\n *     // Or\n *     graphic.updateProps(el, {\n *         position: [100, 100]\n *     }, seriesModel, function () { console.log('Animation done!'); });\n */\n\n\nfunction updateProps(el, props, animatableModel, dataIndex, cb) {\n  animateOrSetProps(true, el, props, animatableModel, dataIndex, cb);\n}\n/**\n * Init graphic element properties with or without animation according to the\n * configuration in series.\n *\n * Caution: this method will stop previous animation.\n * So if do not use this method to one element twice before\n * animation starts, unless you know what you are doing.\n *\n * @param {module:zrender/Element} el\n * @param {Object} props\n * @param {module:echarts/model/Model} [animatableModel]\n * @param {number} [dataIndex]\n * @param {Function} cb\n */\n\n\nfunction initProps(el, props, animatableModel, dataIndex, cb) {\n  animateOrSetProps(false, el, props, animatableModel, dataIndex, cb);\n}\n/**\n * Get transform matrix of target (param target),\n * in coordinate of its ancestor (param ancestor)\n *\n * @param {module:zrender/mixin/Transformable} target\n * @param {module:zrender/mixin/Transformable} [ancestor]\n */\n\n\nfunction getTransform(target, ancestor) {\n  var mat = matrix.identity([]);\n\n  while (target && target !== ancestor) {\n    matrix.mul(mat, target.getLocalTransform(), mat);\n    target = target.parent;\n  }\n\n  return mat;\n}\n/**\n * Apply transform to an vertex.\n * @param {Array.<number>} target [x, y]\n * @param {Array.<number>|TypedArray.<number>|Object} transform Can be:\n *      + Transform matrix: like [1, 0, 0, 1, 0, 0]\n *      + {position, rotation, scale}, the same as `zrender/Transformable`.\n * @param {boolean=} invert Whether use invert matrix.\n * @return {Array.<number>} [x, y]\n */\n\n\nfunction applyTransform(target, transform, invert) {\n  if (transform && !zrUtil.isArrayLike(transform)) {\n    transform = Transformable.getLocalTransform(transform);\n  }\n\n  if (invert) {\n    transform = matrix.invert([], transform);\n  }\n\n  return vector.applyTransform([], target, transform);\n}\n/**\n * @param {string} direction 'left' 'right' 'top' 'bottom'\n * @param {Array.<number>} transform Transform matrix: like [1, 0, 0, 1, 0, 0]\n * @param {boolean=} invert Whether use invert matrix.\n * @return {string} Transformed direction. 'left' 'right' 'top' 'bottom'\n */\n\n\nfunction transformDirection(direction, transform, invert) {\n  // Pick a base, ensure that transform result will not be (0, 0).\n  var hBase = transform[4] === 0 || transform[5] === 0 || transform[0] === 0 ? 1 : Math.abs(2 * transform[4] / transform[0]);\n  var vBase = transform[4] === 0 || transform[5] === 0 || transform[2] === 0 ? 1 : Math.abs(2 * transform[4] / transform[2]);\n  var vertex = [direction === 'left' ? -hBase : direction === 'right' ? hBase : 0, direction === 'top' ? -vBase : direction === 'bottom' ? vBase : 0];\n  vertex = applyTransform(vertex, transform, invert);\n  return Math.abs(vertex[0]) > Math.abs(vertex[1]) ? vertex[0] > 0 ? 'right' : 'left' : vertex[1] > 0 ? 'bottom' : 'top';\n}\n/**\n * Apply group transition animation from g1 to g2.\n * If no animatableModel, no animation.\n */\n\n\nfunction groupTransition(g1, g2, animatableModel, cb) {\n  if (!g1 || !g2) {\n    return;\n  }\n\n  function getElMap(g) {\n    var elMap = {};\n    g.traverse(function (el) {\n      if (!el.isGroup && el.anid) {\n        elMap[el.anid] = el;\n      }\n    });\n    return elMap;\n  }\n\n  function getAnimatableProps(el) {\n    var obj = {\n      position: vector.clone(el.position),\n      rotation: el.rotation\n    };\n\n    if (el.shape) {\n      obj.shape = zrUtil.extend({}, el.shape);\n    }\n\n    return obj;\n  }\n\n  var elMap1 = getElMap(g1);\n  g2.traverse(function (el) {\n    if (!el.isGroup && el.anid) {\n      var oldEl = elMap1[el.anid];\n\n      if (oldEl) {\n        var newProp = getAnimatableProps(el);\n        el.attr(getAnimatableProps(oldEl));\n        updateProps(el, newProp, animatableModel, el.dataIndex);\n      } // else {\n      //     if (el.previousProps) {\n      //         graphic.updateProps\n      //     }\n      // }\n\n    }\n  });\n}\n/**\n * @param {Array.<Array.<number>>} points Like: [[23, 44], [53, 66], ...]\n * @param {Object} rect {x, y, width, height}\n * @return {Array.<Array.<number>>} A new clipped points.\n */\n\n\nfunction clipPointsByRect(points, rect) {\n  return zrUtil.map(points, function (point) {\n    var x = point[0];\n    x = mathMax(x, rect.x);\n    x = mathMin(x, rect.x + rect.width);\n    var y = point[1];\n    y = mathMax(y, rect.y);\n    y = mathMin(y, rect.y + rect.height);\n    return [x, y];\n  });\n}\n/**\n * @param {Object} targetRect {x, y, width, height}\n * @param {Object} rect {x, y, width, height}\n * @return {Object} A new clipped rect. If rect size are negative, return undefined.\n */\n\n\nfunction clipRectByRect(targetRect, rect) {\n  var x = mathMax(targetRect.x, rect.x);\n  var x2 = mathMin(targetRect.x + targetRect.width, rect.x + rect.width);\n  var y = mathMax(targetRect.y, rect.y);\n  var y2 = mathMin(targetRect.y + targetRect.height, rect.y + rect.height);\n\n  if (x2 >= x && y2 >= y) {\n    return {\n      x: x,\n      y: y,\n      width: x2 - x,\n      height: y2 - y\n    };\n  }\n}\n/**\n * @param {string} iconStr Support 'image://' or 'path://' or direct svg path.\n * @param {Object} [opt] Properties of `module:zrender/Element`, except `style`.\n * @param {Object} [rect] {x, y, width, height}\n * @return {module:zrender/Element} Icon path or image element.\n */\n\n\nfunction createIcon(iconStr, opt, rect) {\n  opt = zrUtil.extend({\n    rectHover: true\n  }, opt);\n  var style = opt.style = {\n    strokeNoScale: true\n  };\n  rect = rect || {\n    x: -1,\n    y: -1,\n    width: 2,\n    height: 2\n  };\n\n  if (iconStr) {\n    return iconStr.indexOf('image://') === 0 ? (style.image = iconStr.slice(8), zrUtil.defaults(style, rect), new Image(opt)) : makePath(iconStr.replace('path://', ''), opt, rect, 'center');\n  }\n}\n\nexports.extendShape = extendShape;\nexports.extendPath = extendPath;\nexports.makePath = makePath;\nexports.makeImage = makeImage;\nexports.mergePath = mergePath;\nexports.resizePath = resizePath;\nexports.subPixelOptimizeLine = subPixelOptimizeLine;\nexports.subPixelOptimizeRect = subPixelOptimizeRect;\nexports.subPixelOptimize = subPixelOptimize;\nexports.setHoverStyle = setHoverStyle;\nexports.setLabelStyle = setLabelStyle;\nexports.setTextStyle = setTextStyle;\nexports.setText = setText;\nexports.getFont = getFont;\nexports.updateProps = updateProps;\nexports.initProps = initProps;\nexports.getTransform = getTransform;\nexports.applyTransform = applyTransform;\nexports.transformDirection = transformDirection;\nexports.groupTransition = groupTransition;\nexports.clipPointsByRect = clipPointsByRect;\nexports.clipRectByRect = clipRectByRect;\nexports.createIcon = createIcon;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/graphic.js\n// module id = 1483\n// module chunks = 2 3","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar formatUtil = require(\"./format\");\n\nvar nubmerUtil = require(\"./number\");\n\nvar Model = require(\"../model/Model\");\n\nvar each = zrUtil.each;\nvar isObject = zrUtil.isObject;\n/**\n * If value is not array, then translate it to array.\n * @param  {*} value\n * @return {Array} [value] or value\n */\n\nfunction normalizeToArray(value) {\n  return value instanceof Array ? value : value == null ? [] : [value];\n}\n/**\n * Sync default option between normal and emphasis like `position` and `show`\n * In case some one will write code like\n *     label: {\n *         normal: {\n *             show: false,\n *             position: 'outside',\n *             fontSize: 18\n *         },\n *         emphasis: {\n *             show: true\n *         }\n *     }\n * @param {Object} opt\n * @param {Array.<string>} subOpts\n */\n\n\nfunction defaultEmphasis(opt, subOpts) {\n  if (opt) {\n    var emphasisOpt = opt.emphasis = opt.emphasis || {};\n    var normalOpt = opt.normal = opt.normal || {}; // Default emphasis option from normal\n\n    for (var i = 0, len = subOpts.length; i < len; i++) {\n      var subOptName = subOpts[i];\n\n      if (!emphasisOpt.hasOwnProperty(subOptName) && normalOpt.hasOwnProperty(subOptName)) {\n        emphasisOpt[subOptName] = normalOpt[subOptName];\n      }\n    }\n  }\n}\n\nvar TEXT_STYLE_OPTIONS = ['fontStyle', 'fontWeight', 'fontSize', 'fontFamily', 'rich', 'tag', 'color', 'textBorderColor', 'textBorderWidth', 'width', 'height', 'lineHeight', 'align', 'verticalAlign', 'baseline', 'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY', 'textShadowColor', 'textShadowBlur', 'textShadowOffsetX', 'textShadowOffsetY', 'backgroundColor', 'borderColor', 'borderWidth', 'borderRadius', 'padding']; // modelUtil.LABEL_OPTIONS = modelUtil.TEXT_STYLE_OPTIONS.concat([\n//     'position', 'offset', 'rotate', 'origin', 'show', 'distance', 'formatter',\n//     'fontStyle', 'fontWeight', 'fontSize', 'fontFamily',\n//     // FIXME: deprecated, check and remove it.\n//     'textStyle'\n// ]);\n\n/**\n * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n * This helper method retieves value from data.\n * @param {string|number|Date|Array|Object} dataItem\n * @return {number|string|Date|Array.<number|string|Date>}\n */\n\nfunction getDataItemValue(dataItem) {\n  // Performance sensitive.\n  return dataItem && (dataItem.value == null ? dataItem : dataItem.value);\n}\n/**\n * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n * This helper method determine if dataItem has extra option besides value\n * @param {string|number|Date|Array|Object} dataItem\n */\n\n\nfunction isDataItemOption(dataItem) {\n  return isObject(dataItem) && !(dataItem instanceof Array); // // markLine data can be array\n  // && !(dataItem[0] && isObject(dataItem[0]) && !(dataItem[0] instanceof Array));\n}\n/**\n * This helper method convert value in data.\n * @param {string|number|Date} value\n * @param {Object|string} [dimInfo] If string (like 'x'), dimType defaults 'number'.\n */\n\n\nfunction converDataValue(value, dimInfo) {\n  // Performance sensitive.\n  var dimType = dimInfo && dimInfo.type;\n\n  if (dimType === 'ordinal') {\n    return value;\n  }\n\n  if (dimType === 'time' // spead up when using timestamp\n  && typeof value !== 'number' && value != null && value !== '-') {\n    value = +nubmerUtil.parseDate(value);\n  } // dimType defaults 'number'.\n  // If dimType is not ordinal and value is null or undefined or NaN or '-',\n  // parse to NaN.\n\n\n  return value == null || value === '' ? NaN : +value; // If string (like '-'), using '+' parse to NaN\n}\n/**\n * Create a model proxy to be used in tooltip for edge data, markLine data, markPoint data.\n * @param {module:echarts/data/List} data\n * @param {Object} opt\n * @param {string} [opt.seriesIndex]\n * @param {Object} [opt.name]\n * @param {Object} [opt.mainType]\n * @param {Object} [opt.subType]\n */\n\n\nfunction createDataFormatModel(data, opt) {\n  var model = new Model();\n  zrUtil.mixin(model, dataFormatMixin);\n  model.seriesIndex = opt.seriesIndex;\n  model.name = opt.name || '';\n  model.mainType = opt.mainType;\n  model.subType = opt.subType;\n\n  model.getData = function () {\n    return data;\n  };\n\n  return model;\n} // PENDING A little ugly\n\n\nvar dataFormatMixin = {\n  /**\n   * Get params for formatter\n   * @param {number} dataIndex\n   * @param {string} [dataType]\n   * @return {Object}\n   */\n  getDataParams: function (dataIndex, dataType) {\n    var data = this.getData(dataType);\n    var rawValue = this.getRawValue(dataIndex, dataType);\n    var rawDataIndex = data.getRawIndex(dataIndex);\n    var name = data.getName(dataIndex, true);\n    var itemOpt = data.getRawDataItem(dataIndex);\n    var color = data.getItemVisual(dataIndex, 'color');\n    return {\n      componentType: this.mainType,\n      componentSubType: this.subType,\n      seriesType: this.mainType === 'series' ? this.subType : null,\n      seriesIndex: this.seriesIndex,\n      seriesId: this.id,\n      seriesName: this.name,\n      name: name,\n      dataIndex: rawDataIndex,\n      data: itemOpt,\n      dataType: dataType,\n      value: rawValue,\n      color: color,\n      marker: formatUtil.getTooltipMarker(color),\n      // Param name list for mapping `a`, `b`, `c`, `d`, `e`\n      $vars: ['seriesName', 'name', 'value']\n    };\n  },\n\n  /**\n   * Format label\n   * @param {number} dataIndex\n   * @param {string} [status='normal'] 'normal' or 'emphasis'\n   * @param {string} [dataType]\n   * @param {number} [dimIndex]\n   * @param {string} [labelProp='label']\n   * @return {string}\n   */\n  getFormattedLabel: function (dataIndex, status, dataType, dimIndex, labelProp) {\n    status = status || 'normal';\n    var data = this.getData(dataType);\n    var itemModel = data.getItemModel(dataIndex);\n    var params = this.getDataParams(dataIndex, dataType);\n\n    if (dimIndex != null && params.value instanceof Array) {\n      params.value = params.value[dimIndex];\n    }\n\n    var formatter = itemModel.get([labelProp || 'label', status, 'formatter']);\n\n    if (typeof formatter === 'function') {\n      params.status = status;\n      return formatter(params);\n    } else if (typeof formatter === 'string') {\n      return formatUtil.formatTpl(formatter, params);\n    }\n  },\n\n  /**\n   * Get raw value in option\n   * @param {number} idx\n   * @param {string} [dataType]\n   * @return {Object}\n   */\n  getRawValue: function (idx, dataType) {\n    var data = this.getData(dataType);\n    var dataItem = data.getRawDataItem(idx);\n\n    if (dataItem != null) {\n      return isObject(dataItem) && !(dataItem instanceof Array) ? dataItem.value : dataItem;\n    }\n  },\n\n  /**\n   * Should be implemented.\n   * @param {number} dataIndex\n   * @param {boolean} [multipleSeries=false]\n   * @param {number} [dataType]\n   * @return {string} tooltip string\n   */\n  formatTooltip: zrUtil.noop\n};\n/**\n * Mapping to exists for merge.\n *\n * @public\n * @param {Array.<Object>|Array.<module:echarts/model/Component>} exists\n * @param {Object|Array.<Object>} newCptOptions\n * @return {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n *                          index of which is the same as exists.\n */\n\nfunction mappingToExists(exists, newCptOptions) {\n  // Mapping by the order by original option (but not order of\n  // new option) in merge mode. Because we should ensure\n  // some specified index (like xAxisIndex) is consistent with\n  // original option, which is easy to understand, espatially in\n  // media query. And in most case, merge option is used to\n  // update partial option but not be expected to change order.\n  newCptOptions = (newCptOptions || []).slice();\n  var result = zrUtil.map(exists || [], function (obj, index) {\n    return {\n      exist: obj\n    };\n  }); // Mapping by id or name if specified.\n\n  each(newCptOptions, function (cptOption, index) {\n    if (!isObject(cptOption)) {\n      return;\n    } // id has highest priority.\n\n\n    for (var i = 0; i < result.length; i++) {\n      if (!result[i].option // Consider name: two map to one.\n      && cptOption.id != null && result[i].exist.id === cptOption.id + '') {\n        result[i].option = cptOption;\n        newCptOptions[index] = null;\n        return;\n      }\n    }\n\n    for (var i = 0; i < result.length; i++) {\n      var exist = result[i].exist;\n\n      if (!result[i].option // Consider name: two map to one.\n      // Can not match when both ids exist but different.\n      && (exist.id == null || cptOption.id == null) && cptOption.name != null && !isIdInner(cptOption) && !isIdInner(exist) && exist.name === cptOption.name + '') {\n        result[i].option = cptOption;\n        newCptOptions[index] = null;\n        return;\n      }\n    }\n  }); // Otherwise mapping by index.\n\n  each(newCptOptions, function (cptOption, index) {\n    if (!isObject(cptOption)) {\n      return;\n    }\n\n    var i = 0;\n\n    for (; i < result.length; i++) {\n      var exist = result[i].exist;\n\n      if (!result[i].option // Existing model that already has id should be able to\n      // mapped to (because after mapping performed model may\n      // be assigned with a id, whish should not affect next\n      // mapping), except those has inner id.\n      && !isIdInner(exist) // Caution:\n      // Do not overwrite id. But name can be overwritten,\n      // because axis use name as 'show label text'.\n      // 'exist' always has id and name and we dont\n      // need to check it.\n      && cptOption.id == null) {\n        result[i].option = cptOption;\n        break;\n      }\n    }\n\n    if (i >= result.length) {\n      result.push({\n        option: cptOption\n      });\n    }\n  });\n  return result;\n}\n/**\n * Make id and name for mapping result (result of mappingToExists)\n * into `keyInfo` field.\n *\n * @public\n * @param {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n *                          which order is the same as exists.\n * @return {Array.<Object>} The input.\n */\n\n\nfunction makeIdAndName(mapResult) {\n  // We use this id to hash component models and view instances\n  // in echarts. id can be specified by user, or auto generated.\n  // The id generation rule ensures new view instance are able\n  // to mapped to old instance when setOption are called in\n  // no-merge mode. So we generate model id by name and plus\n  // type in view id.\n  // name can be duplicated among components, which is convenient\n  // to specify multi components (like series) by one name.\n  // Ensure that each id is distinct.\n  var idMap = zrUtil.createHashMap();\n  each(mapResult, function (item, index) {\n    var existCpt = item.exist;\n    existCpt && idMap.set(existCpt.id, item);\n  });\n  each(mapResult, function (item, index) {\n    var opt = item.option;\n    zrUtil.assert(!opt || opt.id == null || !idMap.get(opt.id) || idMap.get(opt.id) === item, 'id duplicates: ' + (opt && opt.id));\n    opt && opt.id != null && idMap.set(opt.id, item);\n    !item.keyInfo && (item.keyInfo = {});\n  }); // Make name and id.\n\n  each(mapResult, function (item, index) {\n    var existCpt = item.exist;\n    var opt = item.option;\n    var keyInfo = item.keyInfo;\n\n    if (!isObject(opt)) {\n      return;\n    } // name can be overwitten. Consider case: axis.name = '20km'.\n    // But id generated by name will not be changed, which affect\n    // only in that case: setOption with 'not merge mode' and view\n    // instance will be recreated, which can be accepted.\n\n\n    keyInfo.name = opt.name != null ? opt.name + '' : existCpt ? existCpt.name : '\\0-'; // name may be displayed on screen, so use '-'.\n\n    if (existCpt) {\n      keyInfo.id = existCpt.id;\n    } else if (opt.id != null) {\n      keyInfo.id = opt.id + '';\n    } else {\n      // Consider this situatoin:\n      //  optionA: [{name: 'a'}, {name: 'a'}, {..}]\n      //  optionB [{..}, {name: 'a'}, {name: 'a'}]\n      // Series with the same name between optionA and optionB\n      // should be mapped.\n      var idNum = 0;\n\n      do {\n        keyInfo.id = '\\0' + keyInfo.name + '\\0' + idNum++;\n      } while (idMap.get(keyInfo.id));\n    }\n\n    idMap.set(keyInfo.id, item);\n  });\n}\n/**\n * @public\n * @param {Object} cptOption\n * @return {boolean}\n */\n\n\nfunction isIdInner(cptOption) {\n  return isObject(cptOption) && cptOption.id && (cptOption.id + '').indexOf('\\0_ec_\\0') === 0;\n}\n/**\n * A helper for removing duplicate items between batchA and batchB,\n * and in themselves, and categorize by series.\n *\n * @param {Array.<Object>} batchA Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n * @param {Array.<Object>} batchB Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n * @return {Array.<Array.<Object>, Array.<Object>>} result: [resultBatchA, resultBatchB]\n */\n\n\nfunction compressBatches(batchA, batchB) {\n  var mapA = {};\n  var mapB = {};\n  makeMap(batchA || [], mapA);\n  makeMap(batchB || [], mapB, mapA);\n  return [mapToArray(mapA), mapToArray(mapB)];\n\n  function makeMap(sourceBatch, map, otherMap) {\n    for (var i = 0, len = sourceBatch.length; i < len; i++) {\n      var seriesId = sourceBatch[i].seriesId;\n      var dataIndices = normalizeToArray(sourceBatch[i].dataIndex);\n      var otherDataIndices = otherMap && otherMap[seriesId];\n\n      for (var j = 0, lenj = dataIndices.length; j < lenj; j++) {\n        var dataIndex = dataIndices[j];\n\n        if (otherDataIndices && otherDataIndices[dataIndex]) {\n          otherDataIndices[dataIndex] = null;\n        } else {\n          (map[seriesId] || (map[seriesId] = {}))[dataIndex] = 1;\n        }\n      }\n    }\n  }\n\n  function mapToArray(map, isData) {\n    var result = [];\n\n    for (var i in map) {\n      if (map.hasOwnProperty(i) && map[i] != null) {\n        if (isData) {\n          result.push(+i);\n        } else {\n          var dataIndices = mapToArray(map[i], true);\n          dataIndices.length && result.push({\n            seriesId: i,\n            dataIndex: dataIndices\n          });\n        }\n      }\n    }\n\n    return result;\n  }\n}\n/**\n * @param {module:echarts/data/List} data\n * @param {Object} payload Contains dataIndex (means rawIndex) / dataIndexInside / name\n *                         each of which can be Array or primary type.\n * @return {number|Array.<number>} dataIndex If not found, return undefined/null.\n */\n\n\nfunction queryDataIndex(data, payload) {\n  if (payload.dataIndexInside != null) {\n    return payload.dataIndexInside;\n  } else if (payload.dataIndex != null) {\n    return zrUtil.isArray(payload.dataIndex) ? zrUtil.map(payload.dataIndex, function (value) {\n      return data.indexOfRawIndex(value);\n    }) : data.indexOfRawIndex(payload.dataIndex);\n  } else if (payload.name != null) {\n    return zrUtil.isArray(payload.name) ? zrUtil.map(payload.name, function (value) {\n      return data.indexOfName(value);\n    }) : data.indexOfName(payload.name);\n  }\n}\n/**\n * Enable property storage to any host object.\n * Notice: Serialization is not supported.\n *\n * For example:\n * var get = modelUitl.makeGetter();\n *\n * function some(hostObj) {\n *      get(hostObj)._someProperty = 1212;\n *      ...\n * }\n *\n * @return {Function}\n */\n\n\nvar makeGetter = function () {\n  var index = 0;\n  return function () {\n    var key = '\\0__ec_prop_getter_' + index++;\n    return function (hostObj) {\n      return hostObj[key] || (hostObj[key] = {});\n    };\n  };\n}();\n/**\n * @param {module:echarts/model/Global} ecModel\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex, seriesId, seriesName,\n *            geoIndex, geoId, geoName,\n *            bmapIndex, bmapId, bmapName,\n *            xAxisIndex, xAxisId, xAxisName,\n *            yAxisIndex, yAxisId, yAxisName,\n *            gridIndex, gridId, gridName,\n *            ... (can be extended)\n *        }\n *        Each properties can be number|string|Array.<number>|Array.<string>\n *        For example, a finder could be\n *        {\n *            seriesIndex: 3,\n *            geoId: ['aa', 'cc'],\n *            gridName: ['xx', 'rr']\n *        }\n *        xxxIndex can be set as 'all' (means all xxx) or 'none' (means not specify)\n *        If nothing or null/undefined specified, return nothing.\n * @param {Object} [opt]\n * @param {string} [opt.defaultMainType]\n * @param {Array.<string>} [opt.includeMainTypes]\n * @return {Object} result like:\n *        {\n *            seriesModels: [seriesModel1, seriesModel2],\n *            seriesModel: seriesModel1, // The first model\n *            geoModels: [geoModel1, geoModel2],\n *            geoModel: geoModel1, // The first model\n *            ...\n *        }\n */\n\n\nfunction parseFinder(ecModel, finder, opt) {\n  if (zrUtil.isString(finder)) {\n    var obj = {};\n    obj[finder + 'Index'] = 0;\n    finder = obj;\n  }\n\n  var defaultMainType = opt && opt.defaultMainType;\n\n  if (defaultMainType && !has(finder, defaultMainType + 'Index') && !has(finder, defaultMainType + 'Id') && !has(finder, defaultMainType + 'Name')) {\n    finder[defaultMainType + 'Index'] = 0;\n  }\n\n  var result = {};\n  each(finder, function (value, key) {\n    var value = finder[key]; // Exclude 'dataIndex' and other illgal keys.\n\n    if (key === 'dataIndex' || key === 'dataIndexInside') {\n      result[key] = value;\n      return;\n    }\n\n    var parsedKey = key.match(/^(\\w+)(Index|Id|Name)$/) || [];\n    var mainType = parsedKey[1];\n    var queryType = (parsedKey[2] || '').toLowerCase();\n\n    if (!mainType || !queryType || value == null || queryType === 'index' && value === 'none' || opt && opt.includeMainTypes && zrUtil.indexOf(opt.includeMainTypes, mainType) < 0) {\n      return;\n    }\n\n    var queryParam = {\n      mainType: mainType\n    };\n\n    if (queryType !== 'index' || value !== 'all') {\n      queryParam[queryType] = value;\n    }\n\n    var models = ecModel.queryComponents(queryParam);\n    result[mainType + 'Models'] = models;\n    result[mainType + 'Model'] = models[0];\n  });\n  return result;\n}\n/**\n * @see {module:echarts/data/helper/completeDimensions}\n * @param {module:echarts/data/List} data\n * @param {string|number} dataDim\n * @return {string}\n */\n\n\nfunction dataDimToCoordDim(data, dataDim) {\n  var dimensions = data.dimensions;\n  dataDim = data.getDimension(dataDim);\n\n  for (var i = 0; i < dimensions.length; i++) {\n    var dimItem = data.getDimensionInfo(dimensions[i]);\n\n    if (dimItem.name === dataDim) {\n      return dimItem.coordDim;\n    }\n  }\n}\n/**\n * @see {module:echarts/data/helper/completeDimensions}\n * @param {module:echarts/data/List} data\n * @param {string} coordDim\n * @return {Array.<string>} data dimensions on the coordDim.\n */\n\n\nfunction coordDimToDataDim(data, coordDim) {\n  var dataDim = [];\n  each(data.dimensions, function (dimName) {\n    var dimItem = data.getDimensionInfo(dimName);\n\n    if (dimItem.coordDim === coordDim) {\n      dataDim[dimItem.coordDimIndex] = dimItem.name;\n    }\n  });\n  return dataDim;\n}\n/**\n * @see {module:echarts/data/helper/completeDimensions}\n * @param {module:echarts/data/List} data\n * @param {string} otherDim Can be `otherDims`\n *                        like 'label' or 'tooltip'.\n * @return {Array.<string>} data dimensions on the otherDim.\n */\n\n\nfunction otherDimToDataDim(data, otherDim) {\n  var dataDim = [];\n  each(data.dimensions, function (dimName) {\n    var dimItem = data.getDimensionInfo(dimName);\n    var otherDims = dimItem.otherDims;\n    var dimIndex = otherDims[otherDim];\n\n    if (dimIndex != null && dimIndex !== false) {\n      dataDim[dimIndex] = dimItem.name;\n    }\n  });\n  return dataDim;\n}\n\nfunction has(obj, prop) {\n  return obj && obj.hasOwnProperty(prop);\n}\n\nexports.normalizeToArray = normalizeToArray;\nexports.defaultEmphasis = defaultEmphasis;\nexports.TEXT_STYLE_OPTIONS = TEXT_STYLE_OPTIONS;\nexports.getDataItemValue = getDataItemValue;\nexports.isDataItemOption = isDataItemOption;\nexports.converDataValue = converDataValue;\nexports.createDataFormatModel = createDataFormatModel;\nexports.dataFormatMixin = dataFormatMixin;\nexports.mappingToExists = mappingToExists;\nexports.makeIdAndName = makeIdAndName;\nexports.isIdInner = isIdInner;\nexports.compressBatches = compressBatches;\nexports.queryDataIndex = queryDataIndex;\nexports.makeGetter = makeGetter;\nexports.parseFinder = parseFinder;\nexports.dataDimToCoordDim = dataDimToCoordDim;\nexports.coordDimToDataDim = coordDimToDataDim;\nexports.otherDimToDataDim = otherDimToDataDim;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/model.js\n// module id = 1484\n// module chunks = 2 3","var ArrayCtor = typeof Float32Array === 'undefined' ? Array : Float32Array;\n/**\n * 创建一个向量\n * @param {number} [x=0]\n * @param {number} [y=0]\n * @return {Vector2}\n */\n\nfunction create(x, y) {\n  var out = new ArrayCtor(2);\n\n  if (x == null) {\n    x = 0;\n  }\n\n  if (y == null) {\n    y = 0;\n  }\n\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\n * 复制向量数据\n * @param {Vector2} out\n * @param {Vector2} v\n * @return {Vector2}\n */\n\n\nfunction copy(out, v) {\n  out[0] = v[0];\n  out[1] = v[1];\n  return out;\n}\n/**\n * 克隆一个向量\n * @param {Vector2} v\n * @return {Vector2}\n */\n\n\nfunction clone(v) {\n  var out = new ArrayCtor(2);\n  out[0] = v[0];\n  out[1] = v[1];\n  return out;\n}\n/**\n * 设置向量的两个项\n * @param {Vector2} out\n * @param {number} a\n * @param {number} b\n * @return {Vector2} 结果\n */\n\n\nfunction set(out, a, b) {\n  out[0] = a;\n  out[1] = b;\n  return out;\n}\n/**\n * 向量相加\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\n\nfunction add(out, v1, v2) {\n  out[0] = v1[0] + v2[0];\n  out[1] = v1[1] + v2[1];\n  return out;\n}\n/**\n * 向量缩放后相加\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @param {number} a\n */\n\n\nfunction scaleAndAdd(out, v1, v2, a) {\n  out[0] = v1[0] + v2[0] * a;\n  out[1] = v1[1] + v2[1] * a;\n  return out;\n}\n/**\n * 向量相减\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\n\nfunction sub(out, v1, v2) {\n  out[0] = v1[0] - v2[0];\n  out[1] = v1[1] - v2[1];\n  return out;\n}\n/**\n * 向量长度\n * @param {Vector2} v\n * @return {number}\n */\n\n\nfunction len(v) {\n  return Math.sqrt(lenSquare(v));\n}\n\nvar length = len; // jshint ignore:line\n\n/**\n * 向量长度平方\n * @param {Vector2} v\n * @return {number}\n */\n\nfunction lenSquare(v) {\n  return v[0] * v[0] + v[1] * v[1];\n}\n\nvar lengthSquare = lenSquare;\n/**\n * 向量乘法\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\nfunction mul(out, v1, v2) {\n  out[0] = v1[0] * v2[0];\n  out[1] = v1[1] * v2[1];\n  return out;\n}\n/**\n * 向量除法\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\n\nfunction div(out, v1, v2) {\n  out[0] = v1[0] / v2[0];\n  out[1] = v1[1] / v2[1];\n  return out;\n}\n/**\n * 向量点乘\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @return {number}\n */\n\n\nfunction dot(v1, v2) {\n  return v1[0] * v2[0] + v1[1] * v2[1];\n}\n/**\n * 向量缩放\n * @param {Vector2} out\n * @param {Vector2} v\n * @param {number} s\n */\n\n\nfunction scale(out, v, s) {\n  out[0] = v[0] * s;\n  out[1] = v[1] * s;\n  return out;\n}\n/**\n * 向量归一化\n * @param {Vector2} out\n * @param {Vector2} v\n */\n\n\nfunction normalize(out, v) {\n  var d = len(v);\n\n  if (d === 0) {\n    out[0] = 0;\n    out[1] = 0;\n  } else {\n    out[0] = v[0] / d;\n    out[1] = v[1] / d;\n  }\n\n  return out;\n}\n/**\n * 计算向量间距离\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @return {number}\n */\n\n\nfunction distance(v1, v2) {\n  return Math.sqrt((v1[0] - v2[0]) * (v1[0] - v2[0]) + (v1[1] - v2[1]) * (v1[1] - v2[1]));\n}\n\nvar dist = distance;\n/**\n * 向量距离平方\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @return {number}\n */\n\nfunction distanceSquare(v1, v2) {\n  return (v1[0] - v2[0]) * (v1[0] - v2[0]) + (v1[1] - v2[1]) * (v1[1] - v2[1]);\n}\n\nvar distSquare = distanceSquare;\n/**\n * 求负向量\n * @param {Vector2} out\n * @param {Vector2} v\n */\n\nfunction negate(out, v) {\n  out[0] = -v[0];\n  out[1] = -v[1];\n  return out;\n}\n/**\n * 插值两个点\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @param {number} t\n */\n\n\nfunction lerp(out, v1, v2, t) {\n  out[0] = v1[0] + t * (v2[0] - v1[0]);\n  out[1] = v1[1] + t * (v2[1] - v1[1]);\n  return out;\n}\n/**\n * 矩阵左乘向量\n * @param {Vector2} out\n * @param {Vector2} v\n * @param {Vector2} m\n */\n\n\nfunction applyTransform(out, v, m) {\n  var x = v[0];\n  var y = v[1];\n  out[0] = m[0] * x + m[2] * y + m[4];\n  out[1] = m[1] * x + m[3] * y + m[5];\n  return out;\n}\n/**\n * 求两个向量最小值\n * @param  {Vector2} out\n * @param  {Vector2} v1\n * @param  {Vector2} v2\n */\n\n\nfunction min(out, v1, v2) {\n  out[0] = Math.min(v1[0], v2[0]);\n  out[1] = Math.min(v1[1], v2[1]);\n  return out;\n}\n/**\n * 求两个向量最大值\n * @param  {Vector2} out\n * @param  {Vector2} v1\n * @param  {Vector2} v2\n */\n\n\nfunction max(out, v1, v2) {\n  out[0] = Math.max(v1[0], v2[0]);\n  out[1] = Math.max(v1[1], v2[1]);\n  return out;\n}\n\nexports.create = create;\nexports.copy = copy;\nexports.clone = clone;\nexports.set = set;\nexports.add = add;\nexports.scaleAndAdd = scaleAndAdd;\nexports.sub = sub;\nexports.len = len;\nexports.length = length;\nexports.lenSquare = lenSquare;\nexports.lengthSquare = lengthSquare;\nexports.mul = mul;\nexports.div = div;\nexports.dot = dot;\nexports.scale = scale;\nexports.normalize = normalize;\nexports.distance = distance;\nexports.dist = dist;\nexports.distanceSquare = distanceSquare;\nexports.distSquare = distSquare;\nexports.negate = negate;\nexports.lerp = lerp;\nexports.applyTransform = applyTransform;\nexports.min = min;\nexports.max = max;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/vector.js\n// module id = 1485\n// module chunks = 2 3","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar RADIAN_EPSILON = 1e-4;\n\nfunction _trim(str) {\n  return str.replace(/^\\s+/, '').replace(/\\s+$/, '');\n}\n/**\n * Linear mapping a value from domain to range\n * @memberOf module:echarts/util/number\n * @param  {(number|Array.<number>)} val\n * @param  {Array.<number>} domain Domain extent domain[0] can be bigger than domain[1]\n * @param  {Array.<number>} range  Range extent range[0] can be bigger than range[1]\n * @param  {boolean} clamp\n * @return {(number|Array.<number>}\n */\n\n\nfunction linearMap(val, domain, range, clamp) {\n  var subDomain = domain[1] - domain[0];\n  var subRange = range[1] - range[0];\n\n  if (subDomain === 0) {\n    return subRange === 0 ? range[0] : (range[0] + range[1]) / 2;\n  } // Avoid accuracy problem in edge, such as\n  // 146.39 - 62.83 === 83.55999999999999.\n  // See echarts/test/ut/spec/util/number.js#linearMap#accuracyError\n  // It is a little verbose for efficiency considering this method\n  // is a hotspot.\n\n\n  if (clamp) {\n    if (subDomain > 0) {\n      if (val <= domain[0]) {\n        return range[0];\n      } else if (val >= domain[1]) {\n        return range[1];\n      }\n    } else {\n      if (val >= domain[0]) {\n        return range[0];\n      } else if (val <= domain[1]) {\n        return range[1];\n      }\n    }\n  } else {\n    if (val === domain[0]) {\n      return range[0];\n    }\n\n    if (val === domain[1]) {\n      return range[1];\n    }\n  }\n\n  return (val - domain[0]) / subDomain * subRange + range[0];\n}\n/**\n * Convert a percent string to absolute number.\n * Returns NaN if percent is not a valid string or number\n * @memberOf module:echarts/util/number\n * @param {string|number} percent\n * @param {number} all\n * @return {number}\n */\n\n\nfunction parsePercent(percent, all) {\n  switch (percent) {\n    case 'center':\n    case 'middle':\n      percent = '50%';\n      break;\n\n    case 'left':\n    case 'top':\n      percent = '0%';\n      break;\n\n    case 'right':\n    case 'bottom':\n      percent = '100%';\n      break;\n  }\n\n  if (typeof percent === 'string') {\n    if (_trim(percent).match(/%$/)) {\n      return parseFloat(percent) / 100 * all;\n    }\n\n    return parseFloat(percent);\n  }\n\n  return percent == null ? NaN : +percent;\n}\n/**\n * (1) Fix rounding error of float numbers.\n * (2) Support return string to avoid scientific notation like '3.5e-7'.\n *\n * @param {number} x\n * @param {number} [precision]\n * @param {boolean} [returnStr]\n * @return {number|string}\n */\n\n\nfunction round(x, precision, returnStr) {\n  if (precision == null) {\n    precision = 10;\n  } // Avoid range error\n\n\n  precision = Math.min(Math.max(0, precision), 20);\n  x = (+x).toFixed(precision);\n  return returnStr ? x : +x;\n}\n\nfunction asc(arr) {\n  arr.sort(function (a, b) {\n    return a - b;\n  });\n  return arr;\n}\n/**\n * Get precision\n * @param {number} val\n */\n\n\nfunction getPrecision(val) {\n  val = +val;\n\n  if (isNaN(val)) {\n    return 0;\n  } // It is much faster than methods converting number to string as follows\n  //      var tmp = val.toString();\n  //      return tmp.length - 1 - tmp.indexOf('.');\n  // especially when precision is low\n\n\n  var e = 1;\n  var count = 0;\n\n  while (Math.round(val * e) / e !== val) {\n    e *= 10;\n    count++;\n  }\n\n  return count;\n}\n/**\n * @param {string|number} val\n * @return {number}\n */\n\n\nfunction getPrecisionSafe(val) {\n  var str = val.toString(); // Consider scientific notation: '3.4e-12' '3.4e+12'\n\n  var eIndex = str.indexOf('e');\n\n  if (eIndex > 0) {\n    var precision = +str.slice(eIndex + 1);\n    return precision < 0 ? -precision : 0;\n  } else {\n    var dotIndex = str.indexOf('.');\n    return dotIndex < 0 ? 0 : str.length - 1 - dotIndex;\n  }\n}\n/**\n * Minimal dicernible data precisioin according to a single pixel.\n *\n * @param {Array.<number>} dataExtent\n * @param {Array.<number>} pixelExtent\n * @return {number} precision\n */\n\n\nfunction getPixelPrecision(dataExtent, pixelExtent) {\n  var log = Math.log;\n  var LN10 = Math.LN10;\n  var dataQuantity = Math.floor(log(dataExtent[1] - dataExtent[0]) / LN10);\n  var sizeQuantity = Math.round(log(Math.abs(pixelExtent[1] - pixelExtent[0])) / LN10); // toFixed() digits argument must be between 0 and 20.\n\n  var precision = Math.min(Math.max(-dataQuantity + sizeQuantity, 0), 20);\n  return !isFinite(precision) ? 20 : precision;\n}\n/**\n * Get a data of given precision, assuring the sum of percentages\n * in valueList is 1.\n * The largest remainer method is used.\n * https://en.wikipedia.org/wiki/Largest_remainder_method\n *\n * @param {Array.<number>} valueList a list of all data\n * @param {number} idx index of the data to be processed in valueList\n * @param {number} precision integer number showing digits of precision\n * @return {number} percent ranging from 0 to 100\n */\n\n\nfunction getPercentWithPrecision(valueList, idx, precision) {\n  if (!valueList[idx]) {\n    return 0;\n  }\n\n  var sum = zrUtil.reduce(valueList, function (acc, val) {\n    return acc + (isNaN(val) ? 0 : val);\n  }, 0);\n\n  if (sum === 0) {\n    return 0;\n  }\n\n  var digits = Math.pow(10, precision);\n  var votesPerQuota = zrUtil.map(valueList, function (val) {\n    return (isNaN(val) ? 0 : val) / sum * digits * 100;\n  });\n  var targetSeats = digits * 100;\n  var seats = zrUtil.map(votesPerQuota, function (votes) {\n    // Assign automatic seats.\n    return Math.floor(votes);\n  });\n  var currentSum = zrUtil.reduce(seats, function (acc, val) {\n    return acc + val;\n  }, 0);\n  var remainder = zrUtil.map(votesPerQuota, function (votes, idx) {\n    return votes - seats[idx];\n  }); // Has remainding votes.\n\n  while (currentSum < targetSeats) {\n    // Find next largest remainder.\n    var max = Number.NEGATIVE_INFINITY;\n    var maxId = null;\n\n    for (var i = 0, len = remainder.length; i < len; ++i) {\n      if (remainder[i] > max) {\n        max = remainder[i];\n        maxId = i;\n      }\n    } // Add a vote to max remainder.\n\n\n    ++seats[maxId];\n    remainder[maxId] = 0;\n    ++currentSum;\n  }\n\n  return seats[idx] / digits;\n} // Number.MAX_SAFE_INTEGER, ie do not support.\n\n\nvar MAX_SAFE_INTEGER = 9007199254740991;\n/**\n * To 0 - 2 * PI, considering negative radian.\n * @param {number} radian\n * @return {number}\n */\n\nfunction remRadian(radian) {\n  var pi2 = Math.PI * 2;\n  return (radian % pi2 + pi2) % pi2;\n}\n/**\n * @param {type} radian\n * @return {boolean}\n */\n\n\nfunction isRadianAroundZero(val) {\n  return val > -RADIAN_EPSILON && val < RADIAN_EPSILON;\n}\n\nvar TIME_REG = /^(?:(\\d{4})(?:[-\\/](\\d{1,2})(?:[-\\/](\\d{1,2})(?:[T ](\\d{1,2})(?::(\\d\\d)(?::(\\d\\d)(?:[.,](\\d+))?)?)?(Z|[\\+\\-]\\d\\d:?\\d\\d)?)?)?)?)?$/; // jshint ignore:line\n\n/**\n * @param {string|Date|number} value These values can be accepted:\n *   + An instance of Date, represent a time in its own time zone.\n *   + Or string in a subset of ISO 8601, only including:\n *     + only year, month, date: '2012-03', '2012-03-01', '2012-03-01 05', '2012-03-01 05:06',\n *     + separated with T or space: '2012-03-01T12:22:33.123', '2012-03-01 12:22:33.123',\n *     + time zone: '2012-03-01T12:22:33Z', '2012-03-01T12:22:33+8000', '2012-03-01T12:22:33-05:00',\n *     all of which will be treated as local time if time zone is not specified\n *     (see <https://momentjs.com/>).\n *   + Or other string format, including (all of which will be treated as loacal time):\n *     '2012', '2012-3-1', '2012/3/1', '2012/03/01',\n *     '2009/6/12 2:00', '2009/6/12 2:05:08', '2009/6/12 2:05:08.123'\n *   + a timestamp, which represent a time in UTC.\n * @return {Date} date\n */\n\nfunction parseDate(value) {\n  if (value instanceof Date) {\n    return value;\n  } else if (typeof value === 'string') {\n    // Different browsers parse date in different way, so we parse it manually.\n    // Some other issues:\n    // new Date('1970-01-01') is UTC,\n    // new Date('1970/01/01') and new Date('1970-1-01') is local.\n    // See issue #3623\n    var match = TIME_REG.exec(value);\n\n    if (!match) {\n      // return Invalid Date.\n      return new Date(NaN);\n    } // Use local time when no timezone offset specifed.\n\n\n    if (!match[8]) {\n      // match[n] can only be string or undefined.\n      // But take care of '12' + 1 => '121'.\n      return new Date(+match[1], +(match[2] || 1) - 1, +match[3] || 1, +match[4] || 0, +(match[5] || 0), +match[6] || 0, +match[7] || 0);\n    } // Timezoneoffset of Javascript Date has considered DST (Daylight Saving Time,\n    // https://tc39.github.io/ecma262/#sec-daylight-saving-time-adjustment).\n    // For example, system timezone is set as \"Time Zone: America/Toronto\",\n    // then these code will get different result:\n    // `new Date(1478411999999).getTimezoneOffset();  // get 240`\n    // `new Date(1478412000000).getTimezoneOffset();  // get 300`\n    // So we should not use `new Date`, but use `Date.UTC`.\n    else {\n        var hour = +match[4] || 0;\n\n        if (match[8].toUpperCase() !== 'Z') {\n          hour -= match[8].slice(0, 3);\n        }\n\n        return new Date(Date.UTC(+match[1], +(match[2] || 1) - 1, +match[3] || 1, hour, +(match[5] || 0), +match[6] || 0, +match[7] || 0));\n      }\n  } else if (value == null) {\n    return new Date(NaN);\n  }\n\n  return new Date(Math.round(value));\n}\n/**\n * Quantity of a number. e.g. 0.1, 1, 10, 100\n *\n * @param  {number} val\n * @return {number}\n */\n\n\nfunction quantity(val) {\n  return Math.pow(10, quantityExponent(val));\n}\n\nfunction quantityExponent(val) {\n  return Math.floor(Math.log(val) / Math.LN10);\n}\n/**\n * find a “nice” number approximately equal to x. Round the number if round = true,\n * take ceiling if round = false. The primary observation is that the “nicest”\n * numbers in decimal are 1, 2, and 5, and all power-of-ten multiples of these numbers.\n *\n * See \"Nice Numbers for Graph Labels\" of Graphic Gems.\n *\n * @param  {number} val Non-negative value.\n * @param  {boolean} round\n * @return {number}\n */\n\n\nfunction nice(val, round) {\n  var exponent = quantityExponent(val);\n  var exp10 = Math.pow(10, exponent);\n  var f = val / exp10; // 1 <= f < 10\n\n  var nf;\n\n  if (round) {\n    if (f < 1.5) {\n      nf = 1;\n    } else if (f < 2.5) {\n      nf = 2;\n    } else if (f < 4) {\n      nf = 3;\n    } else if (f < 7) {\n      nf = 5;\n    } else {\n      nf = 10;\n    }\n  } else {\n    if (f < 1) {\n      nf = 1;\n    } else if (f < 2) {\n      nf = 2;\n    } else if (f < 3) {\n      nf = 3;\n    } else if (f < 5) {\n      nf = 5;\n    } else {\n      nf = 10;\n    }\n  }\n\n  val = nf * exp10; // Fix 3 * 0.1 === 0.30000000000000004 issue (see IEEE 754).\n  // 20 is the uppper bound of toFixed.\n\n  return exponent >= -20 ? +val.toFixed(exponent < 0 ? -exponent : 0) : val;\n}\n/**\n * Order intervals asc, and split them when overlap.\n * expect(numberUtil.reformIntervals([\n *     {interval: [18, 62], close: [1, 1]},\n *     {interval: [-Infinity, -70], close: [0, 0]},\n *     {interval: [-70, -26], close: [1, 1]},\n *     {interval: [-26, 18], close: [1, 1]},\n *     {interval: [62, 150], close: [1, 1]},\n *     {interval: [106, 150], close: [1, 1]},\n *     {interval: [150, Infinity], close: [0, 0]}\n * ])).toEqual([\n *     {interval: [-Infinity, -70], close: [0, 0]},\n *     {interval: [-70, -26], close: [1, 1]},\n *     {interval: [-26, 18], close: [0, 1]},\n *     {interval: [18, 62], close: [0, 1]},\n *     {interval: [62, 150], close: [0, 1]},\n *     {interval: [150, Infinity], close: [0, 0]}\n * ]);\n * @param {Array.<Object>} list, where `close` mean open or close\n *        of the interval, and Infinity can be used.\n * @return {Array.<Object>} The origin list, which has been reformed.\n */\n\n\nfunction reformIntervals(list) {\n  list.sort(function (a, b) {\n    return littleThan(a, b, 0) ? -1 : 1;\n  });\n  var curr = -Infinity;\n  var currClose = 1;\n\n  for (var i = 0; i < list.length;) {\n    var interval = list[i].interval;\n    var close = list[i].close;\n\n    for (var lg = 0; lg < 2; lg++) {\n      if (interval[lg] <= curr) {\n        interval[lg] = curr;\n        close[lg] = !lg ? 1 - currClose : 1;\n      }\n\n      curr = interval[lg];\n      currClose = close[lg];\n    }\n\n    if (interval[0] === interval[1] && close[0] * close[1] !== 1) {\n      list.splice(i, 1);\n    } else {\n      i++;\n    }\n  }\n\n  return list;\n\n  function littleThan(a, b, lg) {\n    return a.interval[lg] < b.interval[lg] || a.interval[lg] === b.interval[lg] && (a.close[lg] - b.close[lg] === (!lg ? 1 : -1) || !lg && littleThan(a, b, 1));\n  }\n}\n/**\n * parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n * ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n * subtraction forces infinities to NaN\n *\n * @param {*} v\n * @return {boolean}\n */\n\n\nfunction isNumeric(v) {\n  return v - parseFloat(v) >= 0;\n}\n\nexports.linearMap = linearMap;\nexports.parsePercent = parsePercent;\nexports.round = round;\nexports.asc = asc;\nexports.getPrecision = getPrecision;\nexports.getPrecisionSafe = getPrecisionSafe;\nexports.getPixelPrecision = getPixelPrecision;\nexports.getPercentWithPrecision = getPercentWithPrecision;\nexports.MAX_SAFE_INTEGER = MAX_SAFE_INTEGER;\nexports.remRadian = remRadian;\nexports.isRadianAroundZero = isRadianAroundZero;\nexports.parseDate = parseDate;\nexports.quantity = quantity;\nexports.nice = nice;\nexports.reformIntervals = reformIntervals;\nexports.isNumeric = isNumeric;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/number.js\n// module id = 1486\n// module chunks = 2 3","var _config = require(\"./config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrender = require(\"zrender/lib/zrender\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar colorTool = require(\"zrender/lib/tool/color\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar timsort = require(\"zrender/lib/core/timsort\");\n\nvar Eventful = require(\"zrender/lib/mixin/Eventful\");\n\nvar GlobalModel = require(\"./model/Global\");\n\nvar ExtensionAPI = require(\"./ExtensionAPI\");\n\nvar CoordinateSystemManager = require(\"./CoordinateSystem\");\n\nvar OptionManager = require(\"./model/OptionManager\");\n\nvar backwardCompat = require(\"./preprocessor/backwardCompat\");\n\nvar ComponentModel = require(\"./model/Component\");\n\nvar SeriesModel = require(\"./model/Series\");\n\nvar ComponentView = require(\"./view/Component\");\n\nvar ChartView = require(\"./view/Chart\");\n\nvar graphic = require(\"./util/graphic\");\n\nvar modelUtil = require(\"./util/model\");\n\nvar _throttle = require(\"./util/throttle\");\n\nvar throttle = _throttle.throttle;\n\nvar seriesColor = require(\"./visual/seriesColor\");\n\nvar loadingDefault = require(\"./loading/default\");\n\n/*!\n * ECharts, a javascript interactive chart library.\n *\n * Copyright (c) 2015, Baidu Inc.\n * All rights reserved.\n *\n * LICENSE\n * https://github.com/ecomfe/echarts/blob/master/LICENSE.txt\n */\nvar each = zrUtil.each;\nvar parseClassType = ComponentModel.parseClassType;\nvar version = '3.8.5';\nvar dependencies = {\n  zrender: '3.7.4'\n};\nvar PRIORITY_PROCESSOR_FILTER = 1000;\nvar PRIORITY_PROCESSOR_STATISTIC = 5000;\nvar PRIORITY_VISUAL_LAYOUT = 1000;\nvar PRIORITY_VISUAL_GLOBAL = 2000;\nvar PRIORITY_VISUAL_CHART = 3000;\nvar PRIORITY_VISUAL_COMPONENT = 4000; // FIXME\n// necessary?\n\nvar PRIORITY_VISUAL_BRUSH = 5000;\nvar PRIORITY = {\n  PROCESSOR: {\n    FILTER: PRIORITY_PROCESSOR_FILTER,\n    STATISTIC: PRIORITY_PROCESSOR_STATISTIC\n  },\n  VISUAL: {\n    LAYOUT: PRIORITY_VISUAL_LAYOUT,\n    GLOBAL: PRIORITY_VISUAL_GLOBAL,\n    CHART: PRIORITY_VISUAL_CHART,\n    COMPONENT: PRIORITY_VISUAL_COMPONENT,\n    BRUSH: PRIORITY_VISUAL_BRUSH\n  }\n}; // Main process have three entries: `setOption`, `dispatchAction` and `resize`,\n// where they must not be invoked nestedly, except the only case: invoke\n// dispatchAction with updateMethod \"none\" in main process.\n// This flag is used to carry out this rule.\n// All events will be triggered out side main process (i.e. when !this[IN_MAIN_PROCESS]).\n\nvar IN_MAIN_PROCESS = '__flagInMainProcess';\nvar HAS_GRADIENT_OR_PATTERN_BG = '__hasGradientOrPatternBg';\nvar OPTION_UPDATED = '__optionUpdated';\nvar ACTION_REG = /^[a-zA-Z0-9_]+$/;\n\nfunction createRegisterEventWithLowercaseName(method) {\n  return function (eventName, handler, context) {\n    // Event name is all lowercase\n    eventName = eventName && eventName.toLowerCase();\n    Eventful.prototype[method].call(this, eventName, handler, context);\n  };\n}\n/**\n * @module echarts~MessageCenter\n */\n\n\nfunction MessageCenter() {\n  Eventful.call(this);\n}\n\nMessageCenter.prototype.on = createRegisterEventWithLowercaseName('on');\nMessageCenter.prototype.off = createRegisterEventWithLowercaseName('off');\nMessageCenter.prototype.one = createRegisterEventWithLowercaseName('one');\nzrUtil.mixin(MessageCenter, Eventful);\n/**\n * @module echarts~ECharts\n */\n\nfunction ECharts(dom, theme, opts) {\n  opts = opts || {}; // Get theme by name\n\n  if (typeof theme === 'string') {\n    theme = themeStorage[theme];\n  }\n  /**\n   * @type {string}\n   */\n\n\n  this.id;\n  /**\n   * Group id\n   * @type {string}\n   */\n\n  this.group;\n  /**\n   * @type {HTMLElement}\n   * @private\n   */\n\n  this._dom = dom;\n  var defaultRenderer = 'canvas';\n\n  /**\n   * @type {module:zrender/ZRender}\n   * @private\n   */\n  var zr = this._zr = zrender.init(dom, {\n    renderer: opts.renderer || defaultRenderer,\n    devicePixelRatio: opts.devicePixelRatio,\n    width: opts.width,\n    height: opts.height\n  });\n  /**\n   * Expect 60 pfs.\n   * @type {Function}\n   * @private\n   */\n\n  this._throttledZrFlush = throttle(zrUtil.bind(zr.flush, zr), 17);\n  var theme = zrUtil.clone(theme);\n  theme && backwardCompat(theme, true);\n  /**\n   * @type {Object}\n   * @private\n   */\n\n  this._theme = theme;\n  /**\n   * @type {Array.<module:echarts/view/Chart>}\n   * @private\n   */\n\n  this._chartsViews = [];\n  /**\n   * @type {Object.<string, module:echarts/view/Chart>}\n   * @private\n   */\n\n  this._chartsMap = {};\n  /**\n   * @type {Array.<module:echarts/view/Component>}\n   * @private\n   */\n\n  this._componentsViews = [];\n  /**\n   * @type {Object.<string, module:echarts/view/Component>}\n   * @private\n   */\n\n  this._componentsMap = {};\n  /**\n   * @type {module:echarts/CoordinateSystem}\n   * @private\n   */\n\n  this._coordSysMgr = new CoordinateSystemManager();\n  /**\n   * @type {module:echarts/ExtensionAPI}\n   * @private\n   */\n\n  this._api = createExtensionAPI(this);\n  Eventful.call(this);\n  /**\n   * @type {module:echarts~MessageCenter}\n   * @private\n   */\n\n  this._messageCenter = new MessageCenter(); // Init mouse events\n\n  this._initEvents(); // In case some people write `window.onresize = chart.resize`\n\n\n  this.resize = zrUtil.bind(this.resize, this); // Can't dispatch action during rendering procedure\n\n  this._pendingActions = []; // Sort on demand\n\n  function prioritySortFunc(a, b) {\n    return a.prio - b.prio;\n  }\n\n  timsort(visualFuncs, prioritySortFunc);\n  timsort(dataProcessorFuncs, prioritySortFunc);\n  zr.animation.on('frame', this._onframe, this); // ECharts instance can be used as value.\n\n  zrUtil.setAsPrimitive(this);\n}\n\nvar echartsProto = ECharts.prototype;\n\nechartsProto._onframe = function () {\n  // Lazy update\n  if (this[OPTION_UPDATED]) {\n    var silent = this[OPTION_UPDATED].silent;\n    this[IN_MAIN_PROCESS] = true;\n    updateMethods.prepareAndUpdate.call(this);\n    this[IN_MAIN_PROCESS] = false;\n    this[OPTION_UPDATED] = false;\n    flushPendingActions.call(this, silent);\n    triggerUpdatedEvent.call(this, silent);\n  }\n};\n/**\n * @return {HTMLElement}\n */\n\n\nechartsProto.getDom = function () {\n  return this._dom;\n};\n/**\n * @return {module:zrender~ZRender}\n */\n\n\nechartsProto.getZr = function () {\n  return this._zr;\n};\n/**\n * Usage:\n * chart.setOption(option, notMerge, lazyUpdate);\n * chart.setOption(option, {\n *     notMerge: ...,\n *     lazyUpdate: ...,\n *     silent: ...\n * });\n *\n * @param {Object} option\n * @param {Object|boolean} [opts] opts or notMerge.\n * @param {boolean} [opts.notMerge=false]\n * @param {boolean} [opts.lazyUpdate=false] Useful when setOption frequently.\n */\n\n\nechartsProto.setOption = function (option, notMerge, lazyUpdate) {\n  var silent;\n\n  if (zrUtil.isObject(notMerge)) {\n    lazyUpdate = notMerge.lazyUpdate;\n    silent = notMerge.silent;\n    notMerge = notMerge.notMerge;\n  }\n\n  this[IN_MAIN_PROCESS] = true;\n\n  if (!this._model || notMerge) {\n    var optionManager = new OptionManager(this._api);\n    var theme = this._theme;\n    var ecModel = this._model = new GlobalModel(null, null, theme, optionManager);\n    ecModel.init(null, null, theme, optionManager);\n  }\n\n  this._model.setOption(option, optionPreprocessorFuncs);\n\n  if (lazyUpdate) {\n    this[OPTION_UPDATED] = {\n      silent: silent\n    };\n    this[IN_MAIN_PROCESS] = false;\n  } else {\n    updateMethods.prepareAndUpdate.call(this); // Ensure zr refresh sychronously, and then pixel in canvas can be\n    // fetched after `setOption`.\n\n    this._zr.flush();\n\n    this[OPTION_UPDATED] = false;\n    this[IN_MAIN_PROCESS] = false;\n    flushPendingActions.call(this, silent);\n    triggerUpdatedEvent.call(this, silent);\n  }\n};\n/**\n * @DEPRECATED\n */\n\n\nechartsProto.setTheme = function () {\n  console.log('ECharts#setTheme() is DEPRECATED in ECharts 3.0');\n};\n/**\n * @return {module:echarts/model/Global}\n */\n\n\nechartsProto.getModel = function () {\n  return this._model;\n};\n/**\n * @return {Object}\n */\n\n\nechartsProto.getOption = function () {\n  return this._model && this._model.getOption();\n};\n/**\n * @return {number}\n */\n\n\nechartsProto.getWidth = function () {\n  return this._zr.getWidth();\n};\n/**\n * @return {number}\n */\n\n\nechartsProto.getHeight = function () {\n  return this._zr.getHeight();\n};\n/**\n * @return {number}\n */\n\n\nechartsProto.getDevicePixelRatio = function () {\n  return this._zr.painter.dpr || window.devicePixelRatio || 1;\n};\n/**\n * Get canvas which has all thing rendered\n * @param {Object} opts\n * @param {string} [opts.backgroundColor]\n * @return {string}\n */\n\n\nechartsProto.getRenderedCanvas = function (opts) {\n  if (!env.canvasSupported) {\n    return;\n  }\n\n  opts = opts || {};\n  opts.pixelRatio = opts.pixelRatio || 1;\n  opts.backgroundColor = opts.backgroundColor || this._model.get('backgroundColor');\n  var zr = this._zr;\n  var list = zr.storage.getDisplayList(); // Stop animations\n\n  zrUtil.each(list, function (el) {\n    el.stopAnimation(true);\n  });\n  return zr.painter.getRenderedCanvas(opts);\n};\n/**\n * Get svg data url\n * @return {string}\n */\n\n\nechartsProto.getSvgDataUrl = function () {\n  if (!env.svgSupported) {\n    return;\n  }\n\n  var zr = this._zr;\n  var list = zr.storage.getDisplayList(); // Stop animations\n\n  zrUtil.each(list, function (el) {\n    el.stopAnimation(true);\n  });\n  return zr.painter.pathToSvg();\n};\n/**\n * @return {string}\n * @param {Object} opts\n * @param {string} [opts.type='png']\n * @param {string} [opts.pixelRatio=1]\n * @param {string} [opts.backgroundColor]\n * @param {string} [opts.excludeComponents]\n */\n\n\nechartsProto.getDataURL = function (opts) {\n  opts = opts || {};\n  var excludeComponents = opts.excludeComponents;\n  var ecModel = this._model;\n  var excludesComponentViews = [];\n  var self = this;\n  each(excludeComponents, function (componentType) {\n    ecModel.eachComponent({\n      mainType: componentType\n    }, function (component) {\n      var view = self._componentsMap[component.__viewId];\n\n      if (!view.group.ignore) {\n        excludesComponentViews.push(view);\n        view.group.ignore = true;\n      }\n    });\n  });\n  var url = this._zr.painter.getType() === 'svg' ? this.getSvgDataUrl() : this.getRenderedCanvas(opts).toDataURL('image/' + (opts && opts.type || 'png'));\n  each(excludesComponentViews, function (view) {\n    view.group.ignore = false;\n  });\n  return url;\n};\n/**\n * @return {string}\n * @param {Object} opts\n * @param {string} [opts.type='png']\n * @param {string} [opts.pixelRatio=1]\n * @param {string} [opts.backgroundColor]\n */\n\n\nechartsProto.getConnectedDataURL = function (opts) {\n  if (!env.canvasSupported) {\n    return;\n  }\n\n  var groupId = this.group;\n  var mathMin = Math.min;\n  var mathMax = Math.max;\n  var MAX_NUMBER = Infinity;\n\n  if (connectedGroups[groupId]) {\n    var left = MAX_NUMBER;\n    var top = MAX_NUMBER;\n    var right = -MAX_NUMBER;\n    var bottom = -MAX_NUMBER;\n    var canvasList = [];\n    var dpr = opts && opts.pixelRatio || 1;\n    zrUtil.each(instances, function (chart, id) {\n      if (chart.group === groupId) {\n        var canvas = chart.getRenderedCanvas(zrUtil.clone(opts));\n        var boundingRect = chart.getDom().getBoundingClientRect();\n        left = mathMin(boundingRect.left, left);\n        top = mathMin(boundingRect.top, top);\n        right = mathMax(boundingRect.right, right);\n        bottom = mathMax(boundingRect.bottom, bottom);\n        canvasList.push({\n          dom: canvas,\n          left: boundingRect.left,\n          top: boundingRect.top\n        });\n      }\n    });\n    left *= dpr;\n    top *= dpr;\n    right *= dpr;\n    bottom *= dpr;\n    var width = right - left;\n    var height = bottom - top;\n    var targetCanvas = zrUtil.createCanvas();\n    targetCanvas.width = width;\n    targetCanvas.height = height;\n    var zr = zrender.init(targetCanvas);\n    each(canvasList, function (item) {\n      var img = new graphic.Image({\n        style: {\n          x: item.left * dpr - left,\n          y: item.top * dpr - top,\n          image: item.dom\n        }\n      });\n      zr.add(img);\n    });\n    zr.refreshImmediately();\n    return targetCanvas.toDataURL('image/' + (opts && opts.type || 'png'));\n  } else {\n    return this.getDataURL(opts);\n  }\n};\n/**\n * Convert from logical coordinate system to pixel coordinate system.\n * See CoordinateSystem#convertToPixel.\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            geoIndex / geoId, geoName,\n *            bmapIndex / bmapId / bmapName,\n *            xAxisIndex / xAxisId / xAxisName,\n *            yAxisIndex / yAxisId / yAxisName,\n *            gridIndex / gridId / gridName,\n *            ... (can be extended)\n *        }\n * @param {Array|number} value\n * @return {Array|number} result\n */\n\n\nechartsProto.convertToPixel = zrUtil.curry(doConvertPixel, 'convertToPixel');\n/**\n * Convert from pixel coordinate system to logical coordinate system.\n * See CoordinateSystem#convertFromPixel.\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            geoIndex / geoId / geoName,\n *            bmapIndex / bmapId / bmapName,\n *            xAxisIndex / xAxisId / xAxisName,\n *            yAxisIndex / yAxisId / yAxisName\n *            gridIndex / gridId / gridName,\n *            ... (can be extended)\n *        }\n * @param {Array|number} value\n * @return {Array|number} result\n */\n\nechartsProto.convertFromPixel = zrUtil.curry(doConvertPixel, 'convertFromPixel');\n\nfunction doConvertPixel(methodName, finder, value) {\n  var ecModel = this._model;\n\n  var coordSysList = this._coordSysMgr.getCoordinateSystems();\n\n  var result;\n  finder = modelUtil.parseFinder(ecModel, finder);\n\n  for (var i = 0; i < coordSysList.length; i++) {\n    var coordSys = coordSysList[i];\n\n    if (coordSys[methodName] && (result = coordSys[methodName](ecModel, finder, value)) != null) {\n      return result;\n    }\n  }\n}\n/**\n * Is the specified coordinate systems or components contain the given pixel point.\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            geoIndex / geoId / geoName,\n *            bmapIndex / bmapId / bmapName,\n *            xAxisIndex / xAxisId / xAxisName,\n *            yAxisIndex / yAxisId / yAxisName,\n *            gridIndex / gridId / gridName,\n *            ... (can be extended)\n *        }\n * @param {Array|number} value\n * @return {boolean} result\n */\n\n\nechartsProto.containPixel = function (finder, value) {\n  var ecModel = this._model;\n  var result;\n  finder = modelUtil.parseFinder(ecModel, finder);\n  zrUtil.each(finder, function (models, key) {\n    key.indexOf('Models') >= 0 && zrUtil.each(models, function (model) {\n      var coordSys = model.coordinateSystem;\n\n      if (coordSys && coordSys.containPoint) {\n        result |= !!coordSys.containPoint(value);\n      } else if (key === 'seriesModels') {\n        var view = this._chartsMap[model.__viewId];\n\n        if (view && view.containPoint) {\n          result |= view.containPoint(value, model);\n        } else {}\n      } else {}\n    }, this);\n  }, this);\n  return !!result;\n};\n/**\n * Get visual from series or data.\n * @param {string|Object} finder\n *        If string, e.g., 'series', means {seriesIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            dataIndex / dataIndexInside\n *        }\n *        If dataIndex is not specified, series visual will be fetched,\n *        but not data item visual.\n *        If all of seriesIndex, seriesId, seriesName are not specified,\n *        visual will be fetched from first series.\n * @param {string} visualType 'color', 'symbol', 'symbolSize'\n */\n\n\nechartsProto.getVisual = function (finder, visualType) {\n  var ecModel = this._model;\n  finder = modelUtil.parseFinder(ecModel, finder, {\n    defaultMainType: 'series'\n  });\n  var seriesModel = finder.seriesModel;\n  var data = seriesModel.getData();\n  var dataIndexInside = finder.hasOwnProperty('dataIndexInside') ? finder.dataIndexInside : finder.hasOwnProperty('dataIndex') ? data.indexOfRawIndex(finder.dataIndex) : null;\n  return dataIndexInside != null ? data.getItemVisual(dataIndexInside, visualType) : data.getVisual(visualType);\n};\n/**\n * Get view of corresponding component model\n * @param  {module:echarts/model/Component} componentModel\n * @return {module:echarts/view/Component}\n */\n\n\nechartsProto.getViewOfComponentModel = function (componentModel) {\n  return this._componentsMap[componentModel.__viewId];\n};\n/**\n * Get view of corresponding series model\n * @param  {module:echarts/model/Series} seriesModel\n * @return {module:echarts/view/Chart}\n */\n\n\nechartsProto.getViewOfSeriesModel = function (seriesModel) {\n  return this._chartsMap[seriesModel.__viewId];\n};\n\nvar updateMethods = {\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  update: function (payload) {\n    // console.profile && console.profile('update');\n    var ecModel = this._model;\n    var api = this._api;\n    var coordSysMgr = this._coordSysMgr;\n    var zr = this._zr; // update before setOption\n\n    if (!ecModel) {\n      return;\n    } // Fixme First time update ?\n\n\n    ecModel.restoreData(); // TODO\n    // Save total ecModel here for undo/redo (after restoring data and before processing data).\n    // Undo (restoration of total ecModel) can be carried out in 'action' or outside API call.\n    // Create new coordinate system each update\n    // In LineView may save the old coordinate system and use it to get the orignal point\n\n    coordSysMgr.create(this._model, this._api);\n    processData.call(this, ecModel, api);\n    stackSeriesData.call(this, ecModel);\n    coordSysMgr.update(ecModel, api);\n    doVisualEncoding.call(this, ecModel, payload);\n    doRender.call(this, ecModel, payload); // Set background\n\n    var backgroundColor = ecModel.get('backgroundColor') || 'transparent';\n    var painter = zr.painter; // TODO all use clearColor ?\n\n    if (painter.isSingleCanvas && painter.isSingleCanvas()) {\n      zr.configLayer(0, {\n        clearColor: backgroundColor\n      });\n    } else {\n      // In IE8\n      if (!env.canvasSupported) {\n        var colorArr = colorTool.parse(backgroundColor);\n        backgroundColor = colorTool.stringify(colorArr, 'rgb');\n\n        if (colorArr[3] === 0) {\n          backgroundColor = 'transparent';\n        }\n      }\n\n      if (backgroundColor.colorStops || backgroundColor.image) {\n        // Gradient background\n        // FIXME Fixed layer？\n        zr.configLayer(0, {\n          clearColor: backgroundColor\n        });\n        this[HAS_GRADIENT_OR_PATTERN_BG] = true;\n        this._dom.style.background = 'transparent';\n      } else {\n        if (this[HAS_GRADIENT_OR_PATTERN_BG]) {\n          zr.configLayer(0, {\n            clearColor: null\n          });\n        }\n\n        this[HAS_GRADIENT_OR_PATTERN_BG] = false;\n        this._dom.style.background = backgroundColor;\n      }\n    }\n\n    each(postUpdateFuncs, function (func) {\n      func(ecModel, api);\n    }); // console.profile && console.profileEnd('update');\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateView: function (payload) {\n    var ecModel = this._model; // update before setOption\n\n    if (!ecModel) {\n      return;\n    }\n\n    ecModel.eachSeries(function (seriesModel) {\n      seriesModel.getData().clearAllVisual();\n    });\n    doVisualEncoding.call(this, ecModel, payload);\n    invokeUpdateMethod.call(this, 'updateView', ecModel, payload);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateVisual: function (payload) {\n    var ecModel = this._model; // update before setOption\n\n    if (!ecModel) {\n      return;\n    }\n\n    ecModel.eachSeries(function (seriesModel) {\n      seriesModel.getData().clearAllVisual();\n    });\n    doVisualEncoding.call(this, ecModel, payload, true);\n    invokeUpdateMethod.call(this, 'updateVisual', ecModel, payload);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateLayout: function (payload) {\n    var ecModel = this._model; // update before setOption\n\n    if (!ecModel) {\n      return;\n    }\n\n    doLayout.call(this, ecModel, payload);\n    invokeUpdateMethod.call(this, 'updateLayout', ecModel, payload);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  prepareAndUpdate: function (payload) {\n    var ecModel = this._model;\n    prepareView.call(this, 'component', ecModel);\n    prepareView.call(this, 'chart', ecModel);\n    updateMethods.update.call(this, payload);\n  }\n};\n/**\n * @private\n */\n\nfunction updateDirectly(ecIns, method, payload, mainType, subType) {\n  var ecModel = ecIns._model; // broadcast\n\n  if (!mainType) {\n    each(ecIns._componentsViews.concat(ecIns._chartsViews), callView);\n    return;\n  }\n\n  var query = {};\n  query[mainType + 'Id'] = payload[mainType + 'Id'];\n  query[mainType + 'Index'] = payload[mainType + 'Index'];\n  query[mainType + 'Name'] = payload[mainType + 'Name'];\n  var condition = {\n    mainType: mainType,\n    query: query\n  };\n  subType && (condition.subType = subType); // subType may be '' by parseClassType;\n  // If dispatchAction before setOption, do nothing.\n\n  ecModel && ecModel.eachComponent(condition, function (model, index) {\n    callView(ecIns[mainType === 'series' ? '_chartsMap' : '_componentsMap'][model.__viewId]);\n  }, ecIns);\n\n  function callView(view) {\n    view && view.__alive && view[method] && view[method](view.__model, ecModel, ecIns._api, payload);\n  }\n}\n/**\n * Resize the chart\n * @param {Object} opts\n * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n * @param {boolean} [opts.silent=false]\n */\n\n\nechartsProto.resize = function (opts) {\n  this[IN_MAIN_PROCESS] = true;\n\n  this._zr.resize(opts);\n\n  var optionChanged = this._model && this._model.resetOption('media');\n\n  var updateMethod = optionChanged ? 'prepareAndUpdate' : 'update';\n  updateMethods[updateMethod].call(this); // Resize loading effect\n\n  this._loadingFX && this._loadingFX.resize();\n  this[IN_MAIN_PROCESS] = false;\n  var silent = opts && opts.silent;\n  flushPendingActions.call(this, silent);\n  triggerUpdatedEvent.call(this, silent);\n};\n/**\n * Show loading effect\n * @param  {string} [name='default']\n * @param  {Object} [cfg]\n */\n\n\nechartsProto.showLoading = function (name, cfg) {\n  if (zrUtil.isObject(name)) {\n    cfg = name;\n    name = '';\n  }\n\n  name = name || 'default';\n  this.hideLoading();\n\n  if (!loadingEffects[name]) {\n    return;\n  }\n\n  var el = loadingEffects[name](this._api, cfg);\n  var zr = this._zr;\n  this._loadingFX = el;\n  zr.add(el);\n};\n/**\n * Hide loading effect\n */\n\n\nechartsProto.hideLoading = function () {\n  this._loadingFX && this._zr.remove(this._loadingFX);\n  this._loadingFX = null;\n};\n/**\n * @param {Object} eventObj\n * @return {Object}\n */\n\n\nechartsProto.makeActionFromEvent = function (eventObj) {\n  var payload = zrUtil.extend({}, eventObj);\n  payload.type = eventActionMap[eventObj.type];\n  return payload;\n};\n/**\n * @pubilc\n * @param {Object} payload\n * @param {string} [payload.type] Action type\n * @param {Object|boolean} [opt] If pass boolean, means opt.silent\n * @param {boolean} [opt.silent=false] Whether trigger events.\n * @param {boolean} [opt.flush=undefined]\n *                  true: Flush immediately, and then pixel in canvas can be fetched\n *                      immediately. Caution: it might affect performance.\n *                  false: Not not flush.\n *                  undefined: Auto decide whether perform flush.\n */\n\n\nechartsProto.dispatchAction = function (payload, opt) {\n  if (!zrUtil.isObject(opt)) {\n    opt = {\n      silent: !!opt\n    };\n  }\n\n  if (!actions[payload.type]) {\n    return;\n  } // Avoid dispatch action before setOption. Especially in `connect`.\n\n\n  if (!this._model) {\n    return;\n  } // May dispatchAction in rendering procedure\n\n\n  if (this[IN_MAIN_PROCESS]) {\n    this._pendingActions.push(payload);\n\n    return;\n  }\n\n  doDispatchAction.call(this, payload, opt.silent);\n\n  if (opt.flush) {\n    this._zr.flush(true);\n  } else if (opt.flush !== false && env.browser.weChat) {\n    // In WeChat embeded browser, `requestAnimationFrame` and `setInterval`\n    // hang when sliding page (on touch event), which cause that zr does not\n    // refresh util user interaction finished, which is not expected.\n    // But `dispatchAction` may be called too frequently when pan on touch\n    // screen, which impacts performance if do not throttle them.\n    this._throttledZrFlush();\n  }\n\n  flushPendingActions.call(this, opt.silent);\n  triggerUpdatedEvent.call(this, opt.silent);\n};\n\nfunction doDispatchAction(payload, silent) {\n  var payloadType = payload.type;\n  var escapeConnect = payload.escapeConnect;\n  var actionWrap = actions[payloadType];\n  var actionInfo = actionWrap.actionInfo;\n  var cptType = (actionInfo.update || 'update').split(':');\n  var updateMethod = cptType.pop();\n  cptType = cptType[0] != null && parseClassType(cptType[0]);\n  this[IN_MAIN_PROCESS] = true;\n  var payloads = [payload];\n  var batched = false; // Batch action\n\n  if (payload.batch) {\n    batched = true;\n    payloads = zrUtil.map(payload.batch, function (item) {\n      item = zrUtil.defaults(zrUtil.extend({}, item), payload);\n      item.batch = null;\n      return item;\n    });\n  }\n\n  var eventObjBatch = [];\n  var eventObj;\n  var isHighDown = payloadType === 'highlight' || payloadType === 'downplay';\n  each(payloads, function (batchItem) {\n    // Action can specify the event by return it.\n    eventObj = actionWrap.action(batchItem, this._model, this._api); // Emit event outside\n\n    eventObj = eventObj || zrUtil.extend({}, batchItem); // Convert type to eventType\n\n    eventObj.type = actionInfo.event || eventObj.type;\n    eventObjBatch.push(eventObj); // light update does not perform data process, layout and visual.\n\n    if (isHighDown) {\n      // method, payload, mainType, subType\n      updateDirectly(this, updateMethod, batchItem, 'series');\n    } else if (cptType) {\n      updateDirectly(this, updateMethod, batchItem, cptType.main, cptType.sub);\n    }\n  }, this);\n\n  if (updateMethod !== 'none' && !isHighDown && !cptType) {\n    // Still dirty\n    if (this[OPTION_UPDATED]) {\n      // FIXME Pass payload ?\n      updateMethods.prepareAndUpdate.call(this, payload);\n      this[OPTION_UPDATED] = false;\n    } else {\n      updateMethods[updateMethod].call(this, payload);\n    }\n  } // Follow the rule of action batch\n\n\n  if (batched) {\n    eventObj = {\n      type: actionInfo.event || payloadType,\n      escapeConnect: escapeConnect,\n      batch: eventObjBatch\n    };\n  } else {\n    eventObj = eventObjBatch[0];\n  }\n\n  this[IN_MAIN_PROCESS] = false;\n  !silent && this._messageCenter.trigger(eventObj.type, eventObj);\n}\n\nfunction flushPendingActions(silent) {\n  var pendingActions = this._pendingActions;\n\n  while (pendingActions.length) {\n    var payload = pendingActions.shift();\n    doDispatchAction.call(this, payload, silent);\n  }\n}\n\nfunction triggerUpdatedEvent(silent) {\n  !silent && this.trigger('updated');\n}\n/**\n * Register event\n * @method\n */\n\n\nechartsProto.on = createRegisterEventWithLowercaseName('on');\nechartsProto.off = createRegisterEventWithLowercaseName('off');\nechartsProto.one = createRegisterEventWithLowercaseName('one');\n/**\n * @param {string} methodName\n * @private\n */\n\nfunction invokeUpdateMethod(methodName, ecModel, payload) {\n  var api = this._api; // Update all components\n\n  each(this._componentsViews, function (component) {\n    var componentModel = component.__model;\n    component[methodName](componentModel, ecModel, api, payload);\n    updateZ(componentModel, component);\n  }, this); // Upate all charts\n\n  ecModel.eachSeries(function (seriesModel, idx) {\n    var chart = this._chartsMap[seriesModel.__viewId];\n    chart[methodName](seriesModel, ecModel, api, payload);\n    updateZ(seriesModel, chart);\n    updateProgressiveAndBlend(seriesModel, chart);\n  }, this); // If use hover layer\n\n  updateHoverLayerStatus(this._zr, ecModel); // Post render\n\n  each(postUpdateFuncs, function (func) {\n    func(ecModel, api);\n  });\n}\n/**\n * Prepare view instances of charts and components\n * @param  {module:echarts/model/Global} ecModel\n * @private\n */\n\n\nfunction prepareView(type, ecModel) {\n  var isComponent = type === 'component';\n  var viewList = isComponent ? this._componentsViews : this._chartsViews;\n  var viewMap = isComponent ? this._componentsMap : this._chartsMap;\n  var zr = this._zr;\n\n  for (var i = 0; i < viewList.length; i++) {\n    viewList[i].__alive = false;\n  }\n\n  ecModel[isComponent ? 'eachComponent' : 'eachSeries'](function (componentType, model) {\n    if (isComponent) {\n      if (componentType === 'series') {\n        return;\n      }\n    } else {\n      model = componentType;\n    } // Consider: id same and type changed.\n\n\n    var viewId = '_ec_' + model.id + '_' + model.type;\n    var view = viewMap[viewId];\n\n    if (!view) {\n      var classType = parseClassType(model.type);\n      var Clazz = isComponent ? ComponentView.getClass(classType.main, classType.sub) : ChartView.getClass(classType.sub);\n\n      if (Clazz) {\n        view = new Clazz();\n        view.init(ecModel, this._api);\n        viewMap[viewId] = view;\n        viewList.push(view);\n        zr.add(view.group);\n      } else {\n        // Error\n        return;\n      }\n    }\n\n    model.__viewId = view.__id = viewId;\n    view.__alive = true;\n    view.__model = model;\n    view.group.__ecComponentInfo = {\n      mainType: model.mainType,\n      index: model.componentIndex\n    };\n  }, this);\n\n  for (var i = 0; i < viewList.length;) {\n    var view = viewList[i];\n\n    if (!view.__alive) {\n      zr.remove(view.group);\n      view.dispose(ecModel, this._api);\n      viewList.splice(i, 1);\n      delete viewMap[view.__id];\n      view.__id = view.group.__ecComponentInfo = null;\n    } else {\n      i++;\n    }\n  }\n}\n/**\n * Processor data in each series\n *\n * @param {module:echarts/model/Global} ecModel\n * @private\n */\n\n\nfunction processData(ecModel, api) {\n  each(dataProcessorFuncs, function (process) {\n    process.func(ecModel, api);\n  });\n}\n/**\n * @private\n */\n\n\nfunction stackSeriesData(ecModel) {\n  var stackedDataMap = {};\n  ecModel.eachSeries(function (series) {\n    var stack = series.get('stack');\n    var data = series.getData();\n\n    if (stack && data.type === 'list') {\n      var previousStack = stackedDataMap[stack]; // Avoid conflict with Object.prototype\n\n      if (stackedDataMap.hasOwnProperty(stack) && previousStack) {\n        data.stackedOn = previousStack;\n      }\n\n      stackedDataMap[stack] = data;\n    }\n  });\n}\n/**\n * Layout before each chart render there series, special visual encoding stage\n *\n * @param {module:echarts/model/Global} ecModel\n * @private\n */\n\n\nfunction doLayout(ecModel, payload) {\n  var api = this._api;\n  each(visualFuncs, function (visual) {\n    if (visual.isLayout) {\n      visual.func(ecModel, api, payload);\n    }\n  });\n}\n/**\n * Encode visual infomation from data after data processing\n *\n * @param {module:echarts/model/Global} ecModel\n * @param {object} layout\n * @param {boolean} [excludesLayout]\n * @private\n */\n\n\nfunction doVisualEncoding(ecModel, payload, excludesLayout) {\n  var api = this._api;\n  ecModel.clearColorPalette();\n  ecModel.eachSeries(function (seriesModel) {\n    seriesModel.clearColorPalette();\n  });\n  each(visualFuncs, function (visual) {\n    (!excludesLayout || !visual.isLayout) && visual.func(ecModel, api, payload);\n  });\n}\n/**\n * Render each chart and component\n * @private\n */\n\n\nfunction doRender(ecModel, payload) {\n  var api = this._api; // Render all components\n\n  each(this._componentsViews, function (componentView) {\n    var componentModel = componentView.__model;\n    componentView.render(componentModel, ecModel, api, payload);\n    updateZ(componentModel, componentView);\n  }, this);\n  each(this._chartsViews, function (chart) {\n    chart.__alive = false;\n  }, this); // Render all charts\n\n  ecModel.eachSeries(function (seriesModel, idx) {\n    var chartView = this._chartsMap[seriesModel.__viewId];\n    chartView.__alive = true;\n    chartView.render(seriesModel, ecModel, api, payload);\n    chartView.group.silent = !!seriesModel.get('silent');\n    updateZ(seriesModel, chartView);\n    updateProgressiveAndBlend(seriesModel, chartView);\n  }, this); // If use hover layer\n\n  updateHoverLayerStatus(this._zr, ecModel); // Remove groups of unrendered charts\n\n  each(this._chartsViews, function (chart) {\n    if (!chart.__alive) {\n      chart.remove(ecModel, api);\n    }\n  }, this);\n}\n\nvar MOUSE_EVENT_NAMES = ['click', 'dblclick', 'mouseover', 'mouseout', 'mousemove', 'mousedown', 'mouseup', 'globalout', 'contextmenu'];\n/**\n * @private\n */\n\nechartsProto._initEvents = function () {\n  each(MOUSE_EVENT_NAMES, function (eveName) {\n    this._zr.on(eveName, function (e) {\n      var ecModel = this.getModel();\n      var el = e.target;\n      var params; // no e.target when 'globalout'.\n\n      if (eveName === 'globalout') {\n        params = {};\n      } else if (el && el.dataIndex != null) {\n        var dataModel = el.dataModel || ecModel.getSeriesByIndex(el.seriesIndex);\n        params = dataModel && dataModel.getDataParams(el.dataIndex, el.dataType) || {};\n      } // If element has custom eventData of components\n      else if (el && el.eventData) {\n          params = zrUtil.extend({}, el.eventData);\n        }\n\n      if (params) {\n        params.event = e;\n        params.type = eveName;\n        this.trigger(eveName, params);\n      }\n    }, this);\n  }, this);\n  each(eventActionMap, function (actionType, eventType) {\n    this._messageCenter.on(eventType, function (event) {\n      this.trigger(eventType, event);\n    }, this);\n  }, this);\n};\n/**\n * @return {boolean}\n */\n\n\nechartsProto.isDisposed = function () {\n  return this._disposed;\n};\n/**\n * Clear\n */\n\n\nechartsProto.clear = function () {\n  this.setOption({\n    series: []\n  }, true);\n};\n/**\n * Dispose instance\n */\n\n\nechartsProto.dispose = function () {\n  if (this._disposed) {\n    return;\n  }\n\n  this._disposed = true;\n  var api = this._api;\n  var ecModel = this._model;\n  each(this._componentsViews, function (component) {\n    component.dispose(ecModel, api);\n  });\n  each(this._chartsViews, function (chart) {\n    chart.dispose(ecModel, api);\n  }); // Dispose after all views disposed\n\n  this._zr.dispose();\n\n  delete instances[this.id];\n};\n\nzrUtil.mixin(ECharts, Eventful);\n\nfunction updateHoverLayerStatus(zr, ecModel) {\n  var storage = zr.storage;\n  var elCount = 0;\n  storage.traverse(function (el) {\n    if (!el.isGroup) {\n      elCount++;\n    }\n  });\n\n  if (elCount > ecModel.get('hoverLayerThreshold') && !env.node) {\n    storage.traverse(function (el) {\n      if (!el.isGroup) {\n        el.useHoverLayer = true;\n      }\n    });\n  }\n}\n/**\n * Update chart progressive and blend.\n * @param {module:echarts/model/Series|module:echarts/model/Component} model\n * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n */\n\n\nfunction updateProgressiveAndBlend(seriesModel, chartView) {\n  // Progressive configuration\n  var elCount = 0;\n  chartView.group.traverse(function (el) {\n    if (el.type !== 'group' && !el.ignore) {\n      elCount++;\n    }\n  });\n  var frameDrawNum = +seriesModel.get('progressive');\n  var needProgressive = elCount > seriesModel.get('progressiveThreshold') && frameDrawNum && !env.node;\n\n  if (needProgressive) {\n    chartView.group.traverse(function (el) {\n      // FIXME marker and other components\n      if (!el.isGroup) {\n        el.progressive = needProgressive ? Math.floor(elCount++ / frameDrawNum) : -1;\n\n        if (needProgressive) {\n          el.stopAnimation(true);\n        }\n      }\n    });\n  } // Blend configration\n\n\n  var blendMode = seriesModel.get('blendMode') || null;\n  chartView.group.traverse(function (el) {\n    // FIXME marker and other components\n    if (!el.isGroup) {\n      el.setStyle('blend', blendMode);\n    }\n  });\n}\n/**\n * @param {module:echarts/model/Series|module:echarts/model/Component} model\n * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n */\n\n\nfunction updateZ(model, view) {\n  var z = model.get('z');\n  var zlevel = model.get('zlevel'); // Set z and zlevel\n\n  view.group.traverse(function (el) {\n    if (el.type !== 'group') {\n      z != null && (el.z = z);\n      zlevel != null && (el.zlevel = zlevel);\n    }\n  });\n}\n\nfunction createExtensionAPI(ecInstance) {\n  var coordSysMgr = ecInstance._coordSysMgr;\n  return zrUtil.extend(new ExtensionAPI(ecInstance), {\n    // Inject methods\n    getCoordinateSystems: zrUtil.bind(coordSysMgr.getCoordinateSystems, coordSysMgr),\n    getComponentByElement: function (el) {\n      while (el) {\n        var modelInfo = el.__ecComponentInfo;\n\n        if (modelInfo != null) {\n          return ecInstance._model.getComponent(modelInfo.mainType, modelInfo.index);\n        }\n\n        el = el.parent;\n      }\n    }\n  });\n}\n/**\n * @type {Object} key: actionType.\n * @inner\n */\n\n\nvar actions = {};\n/**\n * Map eventType to actionType\n * @type {Object}\n */\n\nvar eventActionMap = {};\n/**\n * Data processor functions of each stage\n * @type {Array.<Object.<string, Function>>}\n * @inner\n */\n\nvar dataProcessorFuncs = [];\n/**\n * @type {Array.<Function>}\n * @inner\n */\n\nvar optionPreprocessorFuncs = [];\n/**\n * @type {Array.<Function>}\n * @inner\n */\n\nvar postUpdateFuncs = [];\n/**\n * Visual encoding functions of each stage\n * @type {Array.<Object.<string, Function>>}\n * @inner\n */\n\nvar visualFuncs = [];\n/**\n * Theme storage\n * @type {Object.<key, Object>}\n */\n\nvar themeStorage = {};\n/**\n * Loading effects\n */\n\nvar loadingEffects = {};\nvar instances = {};\nvar connectedGroups = {};\nvar idBase = new Date() - 0;\nvar groupIdBase = new Date() - 0;\nvar DOM_ATTRIBUTE_KEY = '_echarts_instance_';\nvar mapDataStores = {};\n\nfunction enableConnect(chart) {\n  var STATUS_PENDING = 0;\n  var STATUS_UPDATING = 1;\n  var STATUS_UPDATED = 2;\n  var STATUS_KEY = '__connectUpdateStatus';\n\n  function updateConnectedChartsStatus(charts, status) {\n    for (var i = 0; i < charts.length; i++) {\n      var otherChart = charts[i];\n      otherChart[STATUS_KEY] = status;\n    }\n  }\n\n  zrUtil.each(eventActionMap, function (actionType, eventType) {\n    chart._messageCenter.on(eventType, function (event) {\n      if (connectedGroups[chart.group] && chart[STATUS_KEY] !== STATUS_PENDING) {\n        if (event && event.escapeConnect) {\n          return;\n        }\n\n        var action = chart.makeActionFromEvent(event);\n        var otherCharts = [];\n        zrUtil.each(instances, function (otherChart) {\n          if (otherChart !== chart && otherChart.group === chart.group) {\n            otherCharts.push(otherChart);\n          }\n        });\n        updateConnectedChartsStatus(otherCharts, STATUS_PENDING);\n        each(otherCharts, function (otherChart) {\n          if (otherChart[STATUS_KEY] !== STATUS_UPDATING) {\n            otherChart.dispatchAction(action);\n          }\n        });\n        updateConnectedChartsStatus(otherCharts, STATUS_UPDATED);\n      }\n    });\n  });\n}\n/**\n * @param {HTMLElement} dom\n * @param {Object} [theme]\n * @param {Object} opts\n * @param {number} [opts.devicePixelRatio] Use window.devicePixelRatio by default\n * @param {string} [opts.renderer] Currently only 'canvas' is supported.\n * @param {number} [opts.width] Use clientWidth of the input `dom` by default.\n *                              Can be 'auto' (the same as null/undefined)\n * @param {number} [opts.height] Use clientHeight of the input `dom` by default.\n *                               Can be 'auto' (the same as null/undefined)\n */\n\n\nfunction init(dom, theme, opts) {\n  var existInstance = getInstanceByDom(dom);\n\n  if (existInstance) {\n    return existInstance;\n  }\n\n  var chart = new ECharts(dom, theme, opts);\n  chart.id = 'ec_' + idBase++;\n  instances[chart.id] = chart;\n\n  if (dom.setAttribute) {\n    dom.setAttribute(DOM_ATTRIBUTE_KEY, chart.id);\n  } else {\n    dom[DOM_ATTRIBUTE_KEY] = chart.id;\n  }\n\n  enableConnect(chart);\n  return chart;\n}\n/**\n * @return {string|Array.<module:echarts~ECharts>} groupId\n */\n\n\nfunction connect(groupId) {\n  // Is array of charts\n  if (zrUtil.isArray(groupId)) {\n    var charts = groupId;\n    groupId = null; // If any chart has group\n\n    zrUtil.each(charts, function (chart) {\n      if (chart.group != null) {\n        groupId = chart.group;\n      }\n    });\n    groupId = groupId || 'g_' + groupIdBase++;\n    zrUtil.each(charts, function (chart) {\n      chart.group = groupId;\n    });\n  }\n\n  connectedGroups[groupId] = true;\n  return groupId;\n}\n/**\n * @DEPRECATED\n * @return {string} groupId\n */\n\n\nfunction disConnect(groupId) {\n  connectedGroups[groupId] = false;\n}\n/**\n * @return {string} groupId\n */\n\n\nvar disconnect = disConnect;\n/**\n * Dispose a chart instance\n * @param  {module:echarts~ECharts|HTMLDomElement|string} chart\n */\n\nfunction dispose(chart) {\n  if (typeof chart === 'string') {\n    chart = instances[chart];\n  } else if (!(chart instanceof ECharts)) {\n    // Try to treat as dom\n    chart = getInstanceByDom(chart);\n  }\n\n  if (chart instanceof ECharts && !chart.isDisposed()) {\n    chart.dispose();\n  }\n}\n/**\n * @param  {HTMLElement} dom\n * @return {echarts~ECharts}\n */\n\n\nfunction getInstanceByDom(dom) {\n  var key;\n\n  if (dom.getAttribute) {\n    key = dom.getAttribute(DOM_ATTRIBUTE_KEY);\n  } else {\n    key = dom[DOM_ATTRIBUTE_KEY];\n  }\n\n  return instances[key];\n}\n/**\n * @param {string} key\n * @return {echarts~ECharts}\n */\n\n\nfunction getInstanceById(key) {\n  return instances[key];\n}\n/**\n * Register theme\n */\n\n\nfunction registerTheme(name, theme) {\n  themeStorage[name] = theme;\n}\n/**\n * Register option preprocessor\n * @param {Function} preprocessorFunc\n */\n\n\nfunction registerPreprocessor(preprocessorFunc) {\n  optionPreprocessorFuncs.push(preprocessorFunc);\n}\n/**\n * @param {number} [priority=1000]\n * @param {Function} processorFunc\n */\n\n\nfunction registerProcessor(priority, processorFunc) {\n  if (typeof priority === 'function') {\n    processorFunc = priority;\n    priority = PRIORITY_PROCESSOR_FILTER;\n  }\n\n  dataProcessorFuncs.push({\n    prio: priority,\n    func: processorFunc\n  });\n}\n/**\n * Register postUpdater\n * @param {Function} postUpdateFunc\n */\n\n\nfunction registerPostUpdate(postUpdateFunc) {\n  postUpdateFuncs.push(postUpdateFunc);\n}\n/**\n * Usage:\n * registerAction('someAction', 'someEvent', function () { ... });\n * registerAction('someAction', function () { ... });\n * registerAction(\n *     {type: 'someAction', event: 'someEvent', update: 'updateView'},\n *     function () { ... }\n * );\n *\n * @param {(string|Object)} actionInfo\n * @param {string} actionInfo.type\n * @param {string} [actionInfo.event]\n * @param {string} [actionInfo.update]\n * @param {string} [eventName]\n * @param {Function} action\n */\n\n\nfunction registerAction(actionInfo, eventName, action) {\n  if (typeof eventName === 'function') {\n    action = eventName;\n    eventName = '';\n  }\n\n  var actionType = zrUtil.isObject(actionInfo) ? actionInfo.type : [actionInfo, actionInfo = {\n    event: eventName\n  }][0]; // Event name is all lowercase\n\n  actionInfo.event = (actionInfo.event || actionType).toLowerCase();\n  eventName = actionInfo.event; // Validate action type and event name.\n\n  zrUtil.assert(ACTION_REG.test(actionType) && ACTION_REG.test(eventName));\n\n  if (!actions[actionType]) {\n    actions[actionType] = {\n      action: action,\n      actionInfo: actionInfo\n    };\n  }\n\n  eventActionMap[eventName] = actionType;\n}\n/**\n * @param {string} type\n * @param {*} CoordinateSystem\n */\n\n\nfunction registerCoordinateSystem(type, CoordinateSystem) {\n  CoordinateSystemManager.register(type, CoordinateSystem);\n}\n/**\n * Get dimensions of specified coordinate system.\n * @param {string} type\n * @return {Array.<string|Object>}\n */\n\n\nfunction getCoordinateSystemDimensions(type) {\n  var coordSysCreator = CoordinateSystemManager.get(type);\n\n  if (coordSysCreator) {\n    return coordSysCreator.getDimensionsInfo ? coordSysCreator.getDimensionsInfo() : coordSysCreator.dimensions.slice();\n  }\n}\n/**\n * Layout is a special stage of visual encoding\n * Most visual encoding like color are common for different chart\n * But each chart has it's own layout algorithm\n *\n * @param {number} [priority=1000]\n * @param {Function} layoutFunc\n */\n\n\nfunction registerLayout(priority, layoutFunc) {\n  if (typeof priority === 'function') {\n    layoutFunc = priority;\n    priority = PRIORITY_VISUAL_LAYOUT;\n  }\n\n  visualFuncs.push({\n    prio: priority,\n    func: layoutFunc,\n    isLayout: true\n  });\n}\n/**\n * @param {number} [priority=3000]\n * @param {Function} visualFunc\n */\n\n\nfunction registerVisual(priority, visualFunc) {\n  if (typeof priority === 'function') {\n    visualFunc = priority;\n    priority = PRIORITY_VISUAL_CHART;\n  }\n\n  visualFuncs.push({\n    prio: priority,\n    func: visualFunc\n  });\n}\n/**\n * @param {string} name\n */\n\n\nfunction registerLoading(name, loadingFx) {\n  loadingEffects[name] = loadingFx;\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendComponentModel(opts\n/*, superClass*/\n) {\n  // var Clazz = ComponentModel;\n  // if (superClass) {\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n  // }\n  return ComponentModel.extend(opts);\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendComponentView(opts\n/*, superClass*/\n) {\n  // var Clazz = ComponentView;\n  // if (superClass) {\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ComponentView.getClass(classType.main, classType.sub, true);\n  // }\n  return ComponentView.extend(opts);\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendSeriesModel(opts\n/*, superClass*/\n) {\n  // var Clazz = SeriesModel;\n  // if (superClass) {\n  //     superClass = 'series.' + superClass.replace('series.', '');\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n  // }\n  return SeriesModel.extend(opts);\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendChartView(opts\n/*, superClass*/\n) {\n  // var Clazz = ChartView;\n  // if (superClass) {\n  //     superClass = superClass.replace('series.', '');\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ChartView.getClass(classType.main, true);\n  // }\n  return ChartView.extend(opts);\n}\n/**\n * ZRender need a canvas context to do measureText.\n * But in node environment canvas may be created by node-canvas.\n * So we need to specify how to create a canvas instead of using document.createElement('canvas')\n *\n * Be careful of using it in the browser.\n *\n * @param {Function} creator\n * @example\n *     var Canvas = require('canvas');\n *     var echarts = require('echarts');\n *     echarts.setCanvasCreator(function () {\n *         // Small size is enough.\n *         return new Canvas(32, 32);\n *     });\n */\n\n\nfunction setCanvasCreator(creator) {\n  zrUtil.$override('createCanvas', creator);\n}\n/**\n * @param {string} mapName\n * @param {Object|string} geoJson\n * @param {Object} [specialAreas]\n *\n * @example\n *     $.get('USA.json', function (geoJson) {\n *         echarts.registerMap('USA', geoJson);\n *         // Or\n *         echarts.registerMap('USA', {\n *             geoJson: geoJson,\n *             specialAreas: {}\n *         })\n *     });\n */\n\n\nfunction registerMap(mapName, geoJson, specialAreas) {\n  if (geoJson.geoJson && !geoJson.features) {\n    specialAreas = geoJson.specialAreas;\n    geoJson = geoJson.geoJson;\n  }\n\n  if (typeof geoJson === 'string') {\n    geoJson = typeof JSON !== 'undefined' && JSON.parse ? JSON.parse(geoJson) : new Function('return (' + geoJson + ');')();\n  }\n\n  mapDataStores[mapName] = {\n    geoJson: geoJson,\n    specialAreas: specialAreas\n  };\n}\n/**\n * @param {string} mapName\n * @return {Object}\n */\n\n\nfunction getMap(mapName) {\n  return mapDataStores[mapName];\n}\n\nregisterVisual(PRIORITY_VISUAL_GLOBAL, seriesColor);\nregisterPreprocessor(backwardCompat);\nregisterLoading('default', loadingDefault); // Default actions\n\nregisterAction({\n  type: 'highlight',\n  event: 'highlight',\n  update: 'highlight'\n}, zrUtil.noop);\nregisterAction({\n  type: 'downplay',\n  event: 'downplay',\n  update: 'downplay'\n}, zrUtil.noop); // For backward compatibility, where the namespace `dataTool` will\n// be mounted on `echarts` is the extension `dataTool` is imported.\n\nvar dataTool = {};\nexports.version = version;\nexports.dependencies = dependencies;\nexports.PRIORITY = PRIORITY;\nexports.init = init;\nexports.connect = connect;\nexports.disConnect = disConnect;\nexports.disconnect = disconnect;\nexports.dispose = dispose;\nexports.getInstanceByDom = getInstanceByDom;\nexports.getInstanceById = getInstanceById;\nexports.registerTheme = registerTheme;\nexports.registerPreprocessor = registerPreprocessor;\nexports.registerProcessor = registerProcessor;\nexports.registerPostUpdate = registerPostUpdate;\nexports.registerAction = registerAction;\nexports.registerCoordinateSystem = registerCoordinateSystem;\nexports.getCoordinateSystemDimensions = getCoordinateSystemDimensions;\nexports.registerLayout = registerLayout;\nexports.registerVisual = registerVisual;\nexports.registerLoading = registerLoading;\nexports.extendComponentModel = extendComponentModel;\nexports.extendComponentView = extendComponentView;\nexports.extendSeriesModel = extendSeriesModel;\nexports.extendChartView = extendChartView;\nexports.setCanvasCreator = setCanvasCreator;\nexports.registerMap = registerMap;\nexports.getMap = getMap;\nexports.dataTool = dataTool;\nvar ___ec_export = require(\"./export\");\n(function () {\n    for (var key in ___ec_export) {\n        if (___ec_export.hasOwnProperty(key)) {\n            exports[key] = ___ec_export[key];\n        }\n    }\n})();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/echarts.js\n// module id = 1490\n// module chunks = 2 3","var Displayable = require(\"./Displayable\");\n\nvar zrUtil = require(\"../core/util\");\n\nvar PathProxy = require(\"../core/PathProxy\");\n\nvar pathContain = require(\"../contain/path\");\n\nvar Pattern = require(\"./Pattern\");\n\nvar getCanvasPattern = Pattern.prototype.getCanvasPattern;\nvar abs = Math.abs;\nvar pathProxyForDraw = new PathProxy(true);\n/**\n * @alias module:zrender/graphic/Path\n * @extends module:zrender/graphic/Displayable\n * @constructor\n * @param {Object} opts\n */\n\nfunction Path(opts) {\n  Displayable.call(this, opts);\n  /**\n   * @type {module:zrender/core/PathProxy}\n   * @readOnly\n   */\n\n  this.path = null;\n}\n\nPath.prototype = {\n  constructor: Path,\n  type: 'path',\n  __dirtyPath: true,\n  strokeContainThreshold: 5,\n  brush: function (ctx, prevEl) {\n    var style = this.style;\n    var path = this.path || pathProxyForDraw;\n    var hasStroke = style.hasStroke();\n    var hasFill = style.hasFill();\n    var fill = style.fill;\n    var stroke = style.stroke;\n    var hasFillGradient = hasFill && !!fill.colorStops;\n    var hasStrokeGradient = hasStroke && !!stroke.colorStops;\n    var hasFillPattern = hasFill && !!fill.image;\n    var hasStrokePattern = hasStroke && !!stroke.image;\n    style.bind(ctx, this, prevEl);\n    this.setTransform(ctx);\n\n    if (this.__dirty) {\n      var rect; // Update gradient because bounding rect may changed\n\n      if (hasFillGradient) {\n        rect = rect || this.getBoundingRect();\n        this._fillGradient = style.getGradient(ctx, fill, rect);\n      }\n\n      if (hasStrokeGradient) {\n        rect = rect || this.getBoundingRect();\n        this._strokeGradient = style.getGradient(ctx, stroke, rect);\n      }\n    } // Use the gradient or pattern\n\n\n    if (hasFillGradient) {\n      // PENDING If may have affect the state\n      ctx.fillStyle = this._fillGradient;\n    } else if (hasFillPattern) {\n      ctx.fillStyle = getCanvasPattern.call(fill, ctx);\n    }\n\n    if (hasStrokeGradient) {\n      ctx.strokeStyle = this._strokeGradient;\n    } else if (hasStrokePattern) {\n      ctx.strokeStyle = getCanvasPattern.call(stroke, ctx);\n    }\n\n    var lineDash = style.lineDash;\n    var lineDashOffset = style.lineDashOffset;\n    var ctxLineDash = !!ctx.setLineDash; // Update path sx, sy\n\n    var scale = this.getGlobalScale();\n    path.setScale(scale[0], scale[1]); // Proxy context\n    // Rebuild path in following 2 cases\n    // 1. Path is dirty\n    // 2. Path needs javascript implemented lineDash stroking.\n    //    In this case, lineDash information will not be saved in PathProxy\n\n    if (this.__dirtyPath || lineDash && !ctxLineDash && hasStroke) {\n      path.beginPath(ctx); // Setting line dash before build path\n\n      if (lineDash && !ctxLineDash) {\n        path.setLineDash(lineDash);\n        path.setLineDashOffset(lineDashOffset);\n      }\n\n      this.buildPath(path, this.shape, false); // Clear path dirty flag\n\n      if (this.path) {\n        this.__dirtyPath = false;\n      }\n    } else {\n      // Replay path building\n      ctx.beginPath();\n      this.path.rebuildPath(ctx);\n    }\n\n    hasFill && path.fill(ctx);\n\n    if (lineDash && ctxLineDash) {\n      ctx.setLineDash(lineDash);\n      ctx.lineDashOffset = lineDashOffset;\n    }\n\n    hasStroke && path.stroke(ctx);\n\n    if (lineDash && ctxLineDash) {\n      // PENDING\n      // Remove lineDash\n      ctx.setLineDash([]);\n    }\n\n    this.restoreTransform(ctx); // Draw rect text\n\n    if (style.text != null) {\n      this.drawRectText(ctx, this.getBoundingRect());\n    }\n  },\n  // When bundling path, some shape may decide if use moveTo to begin a new subpath or closePath\n  // Like in circle\n  buildPath: function (ctx, shapeCfg, inBundle) {},\n  createPathProxy: function () {\n    this.path = new PathProxy();\n  },\n  getBoundingRect: function () {\n    var rect = this._rect;\n    var style = this.style;\n    var needsUpdateRect = !rect;\n\n    if (needsUpdateRect) {\n      var path = this.path;\n\n      if (!path) {\n        // Create path on demand.\n        path = this.path = new PathProxy();\n      }\n\n      if (this.__dirtyPath) {\n        path.beginPath();\n        this.buildPath(path, this.shape, false);\n      }\n\n      rect = path.getBoundingRect();\n    }\n\n    this._rect = rect;\n\n    if (style.hasStroke()) {\n      // Needs update rect with stroke lineWidth when\n      // 1. Element changes scale or lineWidth\n      // 2. Shape is changed\n      var rectWithStroke = this._rectWithStroke || (this._rectWithStroke = rect.clone());\n\n      if (this.__dirty || needsUpdateRect) {\n        rectWithStroke.copy(rect); // FIXME Must after updateTransform\n\n        var w = style.lineWidth; // PENDING, Min line width is needed when line is horizontal or vertical\n\n        var lineScale = style.strokeNoScale ? this.getLineScale() : 1; // Only add extra hover lineWidth when there are no fill\n\n        if (!style.hasFill()) {\n          w = Math.max(w, this.strokeContainThreshold || 4);\n        } // Consider line width\n        // Line scale can't be 0;\n\n\n        if (lineScale > 1e-10) {\n          rectWithStroke.width += w / lineScale;\n          rectWithStroke.height += w / lineScale;\n          rectWithStroke.x -= w / lineScale / 2;\n          rectWithStroke.y -= w / lineScale / 2;\n        }\n      } // Return rect with stroke\n\n\n      return rectWithStroke;\n    }\n\n    return rect;\n  },\n  contain: function (x, y) {\n    var localPos = this.transformCoordToLocal(x, y);\n    var rect = this.getBoundingRect();\n    var style = this.style;\n    x = localPos[0];\n    y = localPos[1];\n\n    if (rect.contain(x, y)) {\n      var pathData = this.path.data;\n\n      if (style.hasStroke()) {\n        var lineWidth = style.lineWidth;\n        var lineScale = style.strokeNoScale ? this.getLineScale() : 1; // Line scale can't be 0;\n\n        if (lineScale > 1e-10) {\n          // Only add extra hover lineWidth when there are no fill\n          if (!style.hasFill()) {\n            lineWidth = Math.max(lineWidth, this.strokeContainThreshold);\n          }\n\n          if (pathContain.containStroke(pathData, lineWidth / lineScale, x, y)) {\n            return true;\n          }\n        }\n      }\n\n      if (style.hasFill()) {\n        return pathContain.contain(pathData, x, y);\n      }\n    }\n\n    return false;\n  },\n\n  /**\n   * @param  {boolean} dirtyPath\n   */\n  dirty: function (dirtyPath) {\n    if (dirtyPath == null) {\n      dirtyPath = true;\n    } // Only mark dirty, not mark clean\n\n\n    if (dirtyPath) {\n      this.__dirtyPath = dirtyPath;\n      this._rect = null;\n    }\n\n    this.__dirty = true;\n    this.__zr && this.__zr.refresh(); // Used as a clipping path\n\n    if (this.__clipTarget) {\n      this.__clipTarget.dirty();\n    }\n  },\n\n  /**\n   * Alias for animate('shape')\n   * @param {boolean} loop\n   */\n  animateShape: function (loop) {\n    return this.animate('shape', loop);\n  },\n  // Overwrite attrKV\n  attrKV: function (key, value) {\n    // FIXME\n    if (key === 'shape') {\n      this.setShape(value);\n      this.__dirtyPath = true;\n      this._rect = null;\n    } else {\n      Displayable.prototype.attrKV.call(this, key, value);\n    }\n  },\n\n  /**\n   * @param {Object|string} key\n   * @param {*} value\n   */\n  setShape: function (key, value) {\n    var shape = this.shape; // Path from string may not have shape\n\n    if (shape) {\n      if (zrUtil.isObject(key)) {\n        for (var name in key) {\n          if (key.hasOwnProperty(name)) {\n            shape[name] = key[name];\n          }\n        }\n      } else {\n        shape[key] = value;\n      }\n\n      this.dirty(true);\n    }\n\n    return this;\n  },\n  getLineScale: function () {\n    var m = this.transform; // Get the line scale.\n    // Determinant of `m` means how much the area is enlarged by the\n    // transformation. So its square root can be used as a scale factor\n    // for width.\n\n    return m && abs(m[0] - 1) > 1e-10 && abs(m[3] - 1) > 1e-10 ? Math.sqrt(abs(m[0] * m[3] - m[2] * m[1])) : 1;\n  }\n};\n/**\n * 扩展一个 Path element, 比如星形，圆等。\n * Extend a path element\n * @param {Object} props\n * @param {string} props.type Path type\n * @param {Function} props.init Initialize\n * @param {Function} props.buildPath Overwrite buildPath method\n * @param {Object} [props.style] Extended default style config\n * @param {Object} [props.shape] Extended default shape config\n */\n\nPath.extend = function (defaults) {\n  var Sub = function (opts) {\n    Path.call(this, opts);\n\n    if (defaults.style) {\n      // Extend default style\n      this.style.extendFrom(defaults.style, false);\n    } // Extend default shape\n\n\n    var defaultShape = defaults.shape;\n\n    if (defaultShape) {\n      this.shape = this.shape || {};\n      var thisShape = this.shape;\n\n      for (var name in defaultShape) {\n        if (!thisShape.hasOwnProperty(name) && defaultShape.hasOwnProperty(name)) {\n          thisShape[name] = defaultShape[name];\n        }\n      }\n    }\n\n    defaults.init && defaults.init.call(this, opts);\n  };\n\n  zrUtil.inherits(Sub, Path); // FIXME 不能 extend position, rotation 等引用对象\n\n  for (var name in defaults) {\n    // Extending prototype values and methods\n    if (name !== 'style' && name !== 'shape') {\n      Sub.prototype[name] = defaults[name];\n    }\n  }\n\n  return Sub;\n};\n\nzrUtil.inherits(Path, Displayable);\nvar _default = Path;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/Path.js\n// module id = 1493\n// module chunks = 2 3","// (1) The code `if (__DEV__) ...` can be removed by build tool.\n// (2) If intend to use `__DEV__`, this module should be imported. Use a global\n// variable `__DEV__` may cause that miss the declaration (see #6535), or the\n// declaration is behind of the using position (for example in `Model.extent`,\n// And tools like rollup can not analysis the dependency if not import).\nvar dev; // In browser\n\nif (typeof window !== 'undefined') {\n  dev = window.__DEV__;\n} // In node\nelse if (typeof global !== 'undefined') {\n    dev = global.__DEV__;\n  }\n\nif (typeof dev === 'undefined') {\n  dev = true;\n}\n\nvar __DEV__ = dev;\nexports.__DEV__ = __DEV__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/config.js\n// module id = 1494\n// module chunks = 2 3","/**\n * echarts设备环境识别\n *\n * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\n * @author firede[firede@firede.us]\n * @desc thanks zepto.\n */\nvar env = {};\n\nif (typeof navigator === 'undefined') {\n  // In node\n  env = {\n    browser: {},\n    os: {},\n    node: true,\n    // Assume canvas is supported\n    canvasSupported: true,\n    svgSupported: true\n  };\n} else {\n  env = detect(navigator.userAgent);\n}\n\nvar _default = env; // Zepto.js\n// (c) 2010-2013 Thomas Fuchs\n// Zepto.js may be freely distributed under the MIT license.\n\nfunction detect(ua) {\n  var os = {};\n  var browser = {}; // var webkit = ua.match(/Web[kK]it[\\/]{0,1}([\\d.]+)/);\n  // var android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/);\n  // var ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n  // var ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n  // var iphone = !ipad && ua.match(/(iPhone\\sOS)\\s([\\d_]+)/);\n  // var webos = ua.match(/(webOS|hpwOS)[\\s\\/]([\\d.]+)/);\n  // var touchpad = webos && ua.match(/TouchPad/);\n  // var kindle = ua.match(/Kindle\\/([\\d.]+)/);\n  // var silk = ua.match(/Silk\\/([\\d._]+)/);\n  // var blackberry = ua.match(/(BlackBerry).*Version\\/([\\d.]+)/);\n  // var bb10 = ua.match(/(BB10).*Version\\/([\\d.]+)/);\n  // var rimtabletos = ua.match(/(RIM\\sTablet\\sOS)\\s([\\d.]+)/);\n  // var playbook = ua.match(/PlayBook/);\n  // var chrome = ua.match(/Chrome\\/([\\d.]+)/) || ua.match(/CriOS\\/([\\d.]+)/);\n\n  var firefox = ua.match(/Firefox\\/([\\d.]+)/); // var safari = webkit && ua.match(/Mobile\\//) && !chrome;\n  // var webview = ua.match(/(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/) && !chrome;\n\n  var ie = ua.match(/MSIE\\s([\\d.]+)/) // IE 11 Trident/7.0; rv:11.0\n  || ua.match(/Trident\\/.+?rv:(([\\d.]+))/);\n  var edge = ua.match(/Edge\\/([\\d.]+)/); // IE 12 and 12+\n\n  var weChat = /micromessenger/i.test(ua); // Todo: clean this up with a better OS/browser seperation:\n  // - discern (more) between multiple browsers on android\n  // - decide if kindle fire in silk mode is android or not\n  // - Firefox on Android doesn't specify the Android version\n  // - possibly devide in os, device and browser hashes\n  // if (browser.webkit = !!webkit) browser.version = webkit[1];\n  // if (android) os.android = true, os.version = android[2];\n  // if (iphone && !ipod) os.ios = os.iphone = true, os.version = iphone[2].replace(/_/g, '.');\n  // if (ipad) os.ios = os.ipad = true, os.version = ipad[2].replace(/_/g, '.');\n  // if (ipod) os.ios = os.ipod = true, os.version = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\n  // if (webos) os.webos = true, os.version = webos[2];\n  // if (touchpad) os.touchpad = true;\n  // if (blackberry) os.blackberry = true, os.version = blackberry[2];\n  // if (bb10) os.bb10 = true, os.version = bb10[2];\n  // if (rimtabletos) os.rimtabletos = true, os.version = rimtabletos[2];\n  // if (playbook) browser.playbook = true;\n  // if (kindle) os.kindle = true, os.version = kindle[1];\n  // if (silk) browser.silk = true, browser.version = silk[1];\n  // if (!silk && os.android && ua.match(/Kindle Fire/)) browser.silk = true;\n  // if (chrome) browser.chrome = true, browser.version = chrome[1];\n\n  if (firefox) {\n    browser.firefox = true;\n    browser.version = firefox[1];\n  } // if (safari && (ua.match(/Safari/) || !!os.ios)) browser.safari = true;\n  // if (webview) browser.webview = true;\n\n\n  if (ie) {\n    browser.ie = true;\n    browser.version = ie[1];\n  }\n\n  if (edge) {\n    browser.edge = true;\n    browser.version = edge[1];\n  } // It is difficult to detect WeChat in Win Phone precisely, because ua can\n  // not be set on win phone. So we do not consider Win Phone.\n\n\n  if (weChat) {\n    browser.weChat = true;\n  } // os.tablet = !!(ipad || playbook || (android && !ua.match(/Mobile/)) ||\n  //     (firefox && ua.match(/Tablet/)) || (ie && !ua.match(/Phone/) && ua.match(/Touch/)));\n  // os.phone  = !!(!os.tablet && !os.ipod && (android || iphone || webos ||\n  //     (chrome && ua.match(/Android/)) || (chrome && ua.match(/CriOS\\/([\\d.]+)/)) ||\n  //     (firefox && ua.match(/Mobile/)) || (ie && ua.match(/Touch/))));\n\n\n  return {\n    browser: browser,\n    os: os,\n    node: false,\n    // 原生canvas支持，改极端点了\n    // canvasSupported : !(browser.ie && parseFloat(browser.version) < 9)\n    canvasSupported: !!document.createElement('canvas').getContext,\n    svgSupported: typeof SVGRect !== 'undefined',\n    // @see <http://stackoverflow.com/questions/4817029/whats-the-best-way-to-detect-a-touch-screen-device-using-javascript>\n    // works on most browsers\n    // IE10/11 does not support touch event, and MS Edge supports them but not by\n    // default, so we dont check navigator.maxTouchPoints for them here.\n    touchEventsSupported: 'ontouchstart' in window && !browser.ie && !browser.edge,\n    // <http://caniuse.com/#search=pointer%20event>.\n    pointerEventsSupported: 'onpointerdown' in window // Firefox supports pointer but not by default, only MS browsers are reliable on pointer\n    // events currently. So we dont use that on other browsers unless tested sufficiently.\n    // Although IE 10 supports pointer event, it use old style and is different from the\n    // standard. So we exclude that. (IE 10 is hardly used on touch device)\n    && (browser.edge || browser.ie && browser.version >= 11)\n  };\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/env.js\n// module id = 1495\n// module chunks = 2 3","var vec2 = require(\"./vector\");\n\nvar matrix = require(\"./matrix\");\n\n/**\n * @module echarts/core/BoundingRect\n */\nvar v2ApplyTransform = vec2.applyTransform;\nvar mathMin = Math.min;\nvar mathMax = Math.max;\n/**\n * @alias module:echarts/core/BoundingRect\n */\n\nfunction BoundingRect(x, y, width, height) {\n  if (width < 0) {\n    x = x + width;\n    width = -width;\n  }\n\n  if (height < 0) {\n    y = y + height;\n    height = -height;\n  }\n  /**\n   * @type {number}\n   */\n\n\n  this.x = x;\n  /**\n   * @type {number}\n   */\n\n  this.y = y;\n  /**\n   * @type {number}\n   */\n\n  this.width = width;\n  /**\n   * @type {number}\n   */\n\n  this.height = height;\n}\n\nBoundingRect.prototype = {\n  constructor: BoundingRect,\n\n  /**\n   * @param {module:echarts/core/BoundingRect} other\n   */\n  union: function (other) {\n    var x = mathMin(other.x, this.x);\n    var y = mathMin(other.y, this.y);\n    this.width = mathMax(other.x + other.width, this.x + this.width) - x;\n    this.height = mathMax(other.y + other.height, this.y + this.height) - y;\n    this.x = x;\n    this.y = y;\n  },\n\n  /**\n   * @param {Array.<number>} m\n   * @methods\n   */\n  applyTransform: function () {\n    var lt = [];\n    var rb = [];\n    var lb = [];\n    var rt = [];\n    return function (m) {\n      // In case usage like this\n      // el.getBoundingRect().applyTransform(el.transform)\n      // And element has no transform\n      if (!m) {\n        return;\n      }\n\n      lt[0] = lb[0] = this.x;\n      lt[1] = rt[1] = this.y;\n      rb[0] = rt[0] = this.x + this.width;\n      rb[1] = lb[1] = this.y + this.height;\n      v2ApplyTransform(lt, lt, m);\n      v2ApplyTransform(rb, rb, m);\n      v2ApplyTransform(lb, lb, m);\n      v2ApplyTransform(rt, rt, m);\n      this.x = mathMin(lt[0], rb[0], lb[0], rt[0]);\n      this.y = mathMin(lt[1], rb[1], lb[1], rt[1]);\n      var maxX = mathMax(lt[0], rb[0], lb[0], rt[0]);\n      var maxY = mathMax(lt[1], rb[1], lb[1], rt[1]);\n      this.width = maxX - this.x;\n      this.height = maxY - this.y;\n    };\n  }(),\n\n  /**\n   * Calculate matrix of transforming from self to target rect\n   * @param  {module:zrender/core/BoundingRect} b\n   * @return {Array.<number>}\n   */\n  calculateTransform: function (b) {\n    var a = this;\n    var sx = b.width / a.width;\n    var sy = b.height / a.height;\n    var m = matrix.create(); // 矩阵右乘\n\n    matrix.translate(m, m, [-a.x, -a.y]);\n    matrix.scale(m, m, [sx, sy]);\n    matrix.translate(m, m, [b.x, b.y]);\n    return m;\n  },\n\n  /**\n   * @param {(module:echarts/core/BoundingRect|Object)} b\n   * @return {boolean}\n   */\n  intersect: function (b) {\n    if (!b) {\n      return false;\n    }\n\n    if (!(b instanceof BoundingRect)) {\n      // Normalize negative width/height.\n      b = BoundingRect.create(b);\n    }\n\n    var a = this;\n    var ax0 = a.x;\n    var ax1 = a.x + a.width;\n    var ay0 = a.y;\n    var ay1 = a.y + a.height;\n    var bx0 = b.x;\n    var bx1 = b.x + b.width;\n    var by0 = b.y;\n    var by1 = b.y + b.height;\n    return !(ax1 < bx0 || bx1 < ax0 || ay1 < by0 || by1 < ay0);\n  },\n  contain: function (x, y) {\n    var rect = this;\n    return x >= rect.x && x <= rect.x + rect.width && y >= rect.y && y <= rect.y + rect.height;\n  },\n\n  /**\n   * @return {module:echarts/core/BoundingRect}\n   */\n  clone: function () {\n    return new BoundingRect(this.x, this.y, this.width, this.height);\n  },\n\n  /**\n   * Copy from another rect\n   */\n  copy: function (other) {\n    this.x = other.x;\n    this.y = other.y;\n    this.width = other.width;\n    this.height = other.height;\n  },\n  plain: function () {\n    return {\n      x: this.x,\n      y: this.y,\n      width: this.width,\n      height: this.height\n    };\n  }\n};\n/**\n * @param {Object|module:zrender/core/BoundingRect} rect\n * @param {number} rect.x\n * @param {number} rect.y\n * @param {number} rect.width\n * @param {number} rect.height\n * @return {module:zrender/core/BoundingRect}\n */\n\nBoundingRect.create = function (rect) {\n  return new BoundingRect(rect.x, rect.y, rect.width, rect.height);\n};\n\nvar _default = BoundingRect;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/BoundingRect.js\n// module id = 1497\n// module chunks = 2 3","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar clazzUtil = require(\"../util/clazz\");\n\nvar lineStyleMixin = require(\"./mixin/lineStyle\");\n\nvar areaStyleMixin = require(\"./mixin/areaStyle\");\n\nvar textStyleMixin = require(\"./mixin/textStyle\");\n\nvar itemStyleMixin = require(\"./mixin/itemStyle\");\n\n/**\n * @module echarts/model/Model\n */\nvar mixin = zrUtil.mixin;\n/**\n * @alias module:echarts/model/Model\n * @constructor\n * @param {Object} option\n * @param {module:echarts/model/Model} [parentModel]\n * @param {module:echarts/model/Global} [ecModel]\n */\n\nfunction Model(option, parentModel, ecModel) {\n  /**\n   * @type {module:echarts/model/Model}\n   * @readOnly\n   */\n  this.parentModel = parentModel;\n  /**\n   * @type {module:echarts/model/Global}\n   * @readOnly\n   */\n\n  this.ecModel = ecModel;\n  /**\n   * @type {Object}\n   * @protected\n   */\n\n  this.option = option; // Simple optimization\n  // if (this.init) {\n  //     if (arguments.length <= 4) {\n  //         this.init(option, parentModel, ecModel, extraOpt);\n  //     }\n  //     else {\n  //         this.init.apply(this, arguments);\n  //     }\n  // }\n}\n\nModel.prototype = {\n  constructor: Model,\n\n  /**\n   * Model 的初始化函数\n   * @param {Object} option\n   */\n  init: null,\n\n  /**\n   * 从新的 Option merge\n   */\n  mergeOption: function (option) {\n    zrUtil.merge(this.option, option, true);\n  },\n\n  /**\n   * @param {string|Array.<string>} path\n   * @param {boolean} [ignoreParent=false]\n   * @return {*}\n   */\n  get: function (path, ignoreParent) {\n    if (path == null) {\n      return this.option;\n    }\n\n    return doGet(this.option, this.parsePath(path), !ignoreParent && getParent(this, path));\n  },\n\n  /**\n   * @param {string} key\n   * @param {boolean} [ignoreParent=false]\n   * @return {*}\n   */\n  getShallow: function (key, ignoreParent) {\n    var option = this.option;\n    var val = option == null ? option : option[key];\n    var parentModel = !ignoreParent && getParent(this, key);\n\n    if (val == null && parentModel) {\n      val = parentModel.getShallow(key);\n    }\n\n    return val;\n  },\n\n  /**\n   * @param {string|Array.<string>} [path]\n   * @param {module:echarts/model/Model} [parentModel]\n   * @return {module:echarts/model/Model}\n   */\n  getModel: function (path, parentModel) {\n    var obj = path == null ? this.option : doGet(this.option, path = this.parsePath(path));\n    var thisParentModel;\n    parentModel = parentModel || (thisParentModel = getParent(this, path)) && thisParentModel.getModel(path);\n    return new Model(obj, parentModel, this.ecModel);\n  },\n\n  /**\n   * If model has option\n   */\n  isEmpty: function () {\n    return this.option == null;\n  },\n  restoreData: function () {},\n  // Pending\n  clone: function () {\n    var Ctor = this.constructor;\n    return new Ctor(zrUtil.clone(this.option));\n  },\n  setReadOnly: function (properties) {\n    clazzUtil.setReadOnly(this, properties);\n  },\n  // If path is null/undefined, return null/undefined.\n  parsePath: function (path) {\n    if (typeof path === 'string') {\n      path = path.split('.');\n    }\n\n    return path;\n  },\n\n  /**\n   * @param {Function} getParentMethod\n   *        param {Array.<string>|string} path\n   *        return {module:echarts/model/Model}\n   */\n  customizeGetParent: function (getParentMethod) {\n    clazzUtil.set(this, 'getParent', getParentMethod);\n  },\n  isAnimationEnabled: function () {\n    if (!env.node) {\n      if (this.option.animation != null) {\n        return !!this.option.animation;\n      } else if (this.parentModel) {\n        return this.parentModel.isAnimationEnabled();\n      }\n    }\n  }\n};\n\nfunction doGet(obj, pathArr, parentModel) {\n  for (var i = 0; i < pathArr.length; i++) {\n    // Ignore empty\n    if (!pathArr[i]) {\n      continue;\n    } // obj could be number/string/... (like 0)\n\n\n    obj = obj && typeof obj === 'object' ? obj[pathArr[i]] : null;\n\n    if (obj == null) {\n      break;\n    }\n  }\n\n  if (obj == null && parentModel) {\n    obj = parentModel.get(pathArr);\n  }\n\n  return obj;\n} // `path` can be null/undefined\n\n\nfunction getParent(model, path) {\n  var getParentMethod = clazzUtil.get(model, 'getParent');\n  return getParentMethod ? getParentMethod.call(model, path) : model.parentModel;\n} // Enable Model.extend.\n\n\nclazzUtil.enableClassExtend(Model);\nmixin(Model, lineStyleMixin);\nmixin(Model, areaStyleMixin);\nmixin(Model, textStyleMixin);\nmixin(Model, itemStyleMixin);\nvar _default = Model;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/Model.js\n// module id = 1498\n// module chunks = 2 3","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar textContain = require(\"zrender/lib/contain/text\");\n\nvar numberUtil = require(\"./number\");\n\n/**\n * 每三位默认加,格式化\n * @param {string|number} x\n * @return {string}\n */\nfunction addCommas(x) {\n  if (isNaN(x)) {\n    return '-';\n  }\n\n  x = (x + '').split('.');\n  return x[0].replace(/(\\d{1,3})(?=(?:\\d{3})+(?!\\d))/g, '$1,') + (x.length > 1 ? '.' + x[1] : '');\n}\n/**\n * @param {string} str\n * @param {boolean} [upperCaseFirst=false]\n * @return {string} str\n */\n\n\nfunction toCamelCase(str, upperCaseFirst) {\n  str = (str || '').toLowerCase().replace(/-(.)/g, function (match, group1) {\n    return group1.toUpperCase();\n  });\n\n  if (upperCaseFirst && str) {\n    str = str.charAt(0).toUpperCase() + str.slice(1);\n  }\n\n  return str;\n}\n\nvar normalizeCssArray = zrUtil.normalizeCssArray;\n\nfunction encodeHTML(source) {\n  return String(source).replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\"/g, '&quot;').replace(/'/g, '&#39;');\n}\n\nvar TPL_VAR_ALIAS = ['a', 'b', 'c', 'd', 'e', 'f', 'g'];\n\nvar wrapVar = function (varName, seriesIdx) {\n  return '{' + varName + (seriesIdx == null ? '' : seriesIdx) + '}';\n};\n/**\n * Template formatter\n * @param {string} tpl\n * @param {Array.<Object>|Object} paramsList\n * @param {boolean} [encode=false]\n * @return {string}\n */\n\n\nfunction formatTpl(tpl, paramsList, encode) {\n  if (!zrUtil.isArray(paramsList)) {\n    paramsList = [paramsList];\n  }\n\n  var seriesLen = paramsList.length;\n\n  if (!seriesLen) {\n    return '';\n  }\n\n  var $vars = paramsList[0].$vars || [];\n\n  for (var i = 0; i < $vars.length; i++) {\n    var alias = TPL_VAR_ALIAS[i];\n    var val = wrapVar(alias, 0);\n    tpl = tpl.replace(wrapVar(alias), encode ? encodeHTML(val) : val);\n  }\n\n  for (var seriesIdx = 0; seriesIdx < seriesLen; seriesIdx++) {\n    for (var k = 0; k < $vars.length; k++) {\n      var val = paramsList[seriesIdx][$vars[k]];\n      tpl = tpl.replace(wrapVar(TPL_VAR_ALIAS[k], seriesIdx), encode ? encodeHTML(val) : val);\n    }\n  }\n\n  return tpl;\n}\n/**\n * simple Template formatter\n *\n * @param {string} tpl\n * @param {Object} param\n * @param {boolean} [encode=false]\n * @return {string}\n */\n\n\nfunction formatTplSimple(tpl, param, encode) {\n  zrUtil.each(param, function (value, key) {\n    tpl = tpl.replace('{' + key + '}', encode ? encodeHTML(value) : value);\n  });\n  return tpl;\n}\n/**\n * @param {string} color\n * @param {string} [extraCssText]\n * @return {string}\n */\n\n\nfunction getTooltipMarker(color, extraCssText) {\n  return color ? '<span style=\"display:inline-block;margin-right:5px;' + 'border-radius:10px;width:9px;height:9px;background-color:' + encodeHTML(color) + ';' + (extraCssText || '') + '\"></span>' : '';\n}\n/**\n * @param {string} str\n * @return {string}\n * @inner\n */\n\n\nvar s2d = function (str) {\n  return str < 10 ? '0' + str : str;\n};\n/**\n * ISO Date format\n * @param {string} tpl\n * @param {number} value\n * @param {boolean} [isUTC=false] Default in local time.\n *           see `module:echarts/scale/Time`\n *           and `module:echarts/util/number#parseDate`.\n * @inner\n */\n\n\nfunction formatTime(tpl, value, isUTC) {\n  if (tpl === 'week' || tpl === 'month' || tpl === 'quarter' || tpl === 'half-year' || tpl === 'year') {\n    tpl = 'MM-dd\\nyyyy';\n  }\n\n  var date = numberUtil.parseDate(value);\n  var utc = isUTC ? 'UTC' : '';\n  var y = date['get' + utc + 'FullYear']();\n  var M = date['get' + utc + 'Month']() + 1;\n  var d = date['get' + utc + 'Date']();\n  var h = date['get' + utc + 'Hours']();\n  var m = date['get' + utc + 'Minutes']();\n  var s = date['get' + utc + 'Seconds']();\n  tpl = tpl.replace('MM', s2d(M)).replace('M', M).replace('yyyy', y).replace('yy', y % 100).replace('dd', s2d(d)).replace('d', d).replace('hh', s2d(h)).replace('h', h).replace('mm', s2d(m)).replace('m', m).replace('ss', s2d(s)).replace('s', s);\n  return tpl;\n}\n/**\n * Capital first\n * @param {string} str\n * @return {string}\n */\n\n\nfunction capitalFirst(str) {\n  return str ? str.charAt(0).toUpperCase() + str.substr(1) : str;\n}\n\nvar truncateText = textContain.truncateText;\nvar getTextRect = textContain.getBoundingRect;\nexports.addCommas = addCommas;\nexports.toCamelCase = toCamelCase;\nexports.normalizeCssArray = normalizeCssArray;\nexports.encodeHTML = encodeHTML;\nexports.formatTpl = formatTpl;\nexports.formatTplSimple = formatTplSimple;\nexports.getTooltipMarker = getTooltipMarker;\nexports.formatTime = formatTime;\nexports.capitalFirst = capitalFirst;\nexports.truncateText = truncateText;\nexports.getTextRect = getTextRect;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/format.js\n// module id = 1499\n// module chunks = 2 3","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar TYPE_DELIMITER = '.';\nvar IS_CONTAINER = '___EC__COMPONENT__CONTAINER___';\nvar MEMBER_PRIFIX = '\\0ec_\\0';\n/**\n * Hide private class member.\n * The same behavior as `host[name] = value;` (can be right-value)\n * @public\n */\n\nfunction set(host, name, value) {\n  return host[MEMBER_PRIFIX + name] = value;\n}\n/**\n * Hide private class member.\n * The same behavior as `host[name];`\n * @public\n */\n\n\nfunction get(host, name) {\n  return host[MEMBER_PRIFIX + name];\n}\n/**\n * For hidden private class member.\n * The same behavior as `host.hasOwnProperty(name);`\n * @public\n */\n\n\nfunction hasOwn(host, name) {\n  return host.hasOwnProperty(MEMBER_PRIFIX + name);\n}\n/**\n * Notice, parseClassType('') should returns {main: '', sub: ''}\n * @public\n */\n\n\nfunction parseClassType(componentType) {\n  var ret = {\n    main: '',\n    sub: ''\n  };\n\n  if (componentType) {\n    componentType = componentType.split(TYPE_DELIMITER);\n    ret.main = componentType[0] || '';\n    ret.sub = componentType[1] || '';\n  }\n\n  return ret;\n}\n/**\n * @public\n */\n\n\nfunction checkClassType(componentType) {\n  zrUtil.assert(/^[a-zA-Z0-9_]+([.][a-zA-Z0-9_]+)?$/.test(componentType), 'componentType \"' + componentType + '\" illegal');\n}\n/**\n * @public\n */\n\n\nfunction enableClassExtend(RootClass, mandatoryMethods) {\n  RootClass.$constructor = RootClass;\n\n  RootClass.extend = function (proto) {\n    var superClass = this;\n\n    var ExtendedClass = function () {\n      if (!proto.$constructor) {\n        superClass.apply(this, arguments);\n      } else {\n        proto.$constructor.apply(this, arguments);\n      }\n    };\n\n    zrUtil.extend(ExtendedClass.prototype, proto);\n    ExtendedClass.extend = this.extend;\n    ExtendedClass.superCall = superCall;\n    ExtendedClass.superApply = superApply;\n    zrUtil.inherits(ExtendedClass, this);\n    ExtendedClass.superClass = superClass;\n    return ExtendedClass;\n  };\n} // superCall should have class info, which can not be fetch from 'this'.\n// Consider this case:\n// class A has method f,\n// class B inherits class A, overrides method f, f call superApply('f'),\n// class C inherits class B, do not overrides method f,\n// then when method of class C is called, dead loop occured.\n\n\nfunction superCall(context, methodName) {\n  var args = zrUtil.slice(arguments, 2);\n  return this.superClass.prototype[methodName].apply(context, args);\n}\n\nfunction superApply(context, methodName, args) {\n  return this.superClass.prototype[methodName].apply(context, args);\n}\n/**\n * @param {Object} entity\n * @param {Object} options\n * @param {boolean} [options.registerWhenExtend]\n * @public\n */\n\n\nfunction enableClassManagement(entity, options) {\n  options = options || {};\n  /**\n   * Component model classes\n   * key: componentType,\n   * value:\n   *     componentClass, when componentType is 'xxx'\n   *     or Object.<subKey, componentClass>, when componentType is 'xxx.yy'\n   * @type {Object}\n   */\n\n  var storage = {};\n\n  entity.registerClass = function (Clazz, componentType) {\n    if (componentType) {\n      checkClassType(componentType);\n      componentType = parseClassType(componentType);\n\n      if (!componentType.sub) {\n        storage[componentType.main] = Clazz;\n      } else if (componentType.sub !== IS_CONTAINER) {\n        var container = makeContainer(componentType);\n        container[componentType.sub] = Clazz;\n      }\n    }\n\n    return Clazz;\n  };\n\n  entity.getClass = function (componentMainType, subType, throwWhenNotFound) {\n    var Clazz = storage[componentMainType];\n\n    if (Clazz && Clazz[IS_CONTAINER]) {\n      Clazz = subType ? Clazz[subType] : null;\n    }\n\n    if (throwWhenNotFound && !Clazz) {\n      throw new Error(!subType ? componentMainType + '.' + 'type should be specified.' : 'Component ' + componentMainType + '.' + (subType || '') + ' not exists. Load it first.');\n    }\n\n    return Clazz;\n  };\n\n  entity.getClassesByMainType = function (componentType) {\n    componentType = parseClassType(componentType);\n    var result = [];\n    var obj = storage[componentType.main];\n\n    if (obj && obj[IS_CONTAINER]) {\n      zrUtil.each(obj, function (o, type) {\n        type !== IS_CONTAINER && result.push(o);\n      });\n    } else {\n      result.push(obj);\n    }\n\n    return result;\n  };\n\n  entity.hasClass = function (componentType) {\n    // Just consider componentType.main.\n    componentType = parseClassType(componentType);\n    return !!storage[componentType.main];\n  };\n  /**\n   * @return {Array.<string>} Like ['aa', 'bb'], but can not be ['aa.xx']\n   */\n\n\n  entity.getAllClassMainTypes = function () {\n    var types = [];\n    zrUtil.each(storage, function (obj, type) {\n      types.push(type);\n    });\n    return types;\n  };\n  /**\n   * If a main type is container and has sub types\n   * @param  {string}  mainType\n   * @return {boolean}\n   */\n\n\n  entity.hasSubTypes = function (componentType) {\n    componentType = parseClassType(componentType);\n    var obj = storage[componentType.main];\n    return obj && obj[IS_CONTAINER];\n  };\n\n  entity.parseClassType = parseClassType;\n\n  function makeContainer(componentType) {\n    var container = storage[componentType.main];\n\n    if (!container || !container[IS_CONTAINER]) {\n      container = storage[componentType.main] = {};\n      container[IS_CONTAINER] = true;\n    }\n\n    return container;\n  }\n\n  if (options.registerWhenExtend) {\n    var originalExtend = entity.extend;\n\n    if (originalExtend) {\n      entity.extend = function (proto) {\n        var ExtendedClass = originalExtend.call(this, proto);\n        return entity.registerClass(ExtendedClass, proto.type);\n      };\n    }\n  }\n\n  return entity;\n}\n/**\n * @param {string|Array.<string>} properties\n */\n\n\nfunction setReadOnly(obj, properties) {// FIXME It seems broken in IE8 simulation of IE11\n  // if (!zrUtil.isArray(properties)) {\n  //     properties = properties != null ? [properties] : [];\n  // }\n  // zrUtil.each(properties, function (prop) {\n  //     var value = obj[prop];\n  //     Object.defineProperty\n  //         && Object.defineProperty(obj, prop, {\n  //             value: value, writable: false\n  //         });\n  //     zrUtil.isArray(obj[prop])\n  //         && Object.freeze\n  //         && Object.freeze(obj[prop]);\n  // });\n}\n\nexports.set = set;\nexports.get = get;\nexports.hasOwn = hasOwn;\nexports.parseClassType = parseClassType;\nexports.enableClassExtend = enableClassExtend;\nexports.enableClassManagement = enableClassManagement;\nexports.setReadOnly = setReadOnly;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/clazz.js\n// module id = 1505\n// module chunks = 2 3","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Model = require(\"./Model\");\n\nvar componentUtil = require(\"../util/component\");\n\nvar clazzUtil = require(\"../util/clazz\");\n\nvar layout = require(\"../util/layout\");\n\nvar boxLayoutMixin = require(\"./mixin/boxLayout\");\n\n/**\n * Component model\n *\n * @module echarts/model/Component\n */\nvar arrayPush = Array.prototype.push;\n/**\n * @alias module:echarts/model/Component\n * @constructor\n * @param {Object} option\n * @param {module:echarts/model/Model} parentModel\n * @param {module:echarts/model/Model} ecModel\n */\n\nvar ComponentModel = Model.extend({\n  type: 'component',\n\n  /**\n   * @readOnly\n   * @type {string}\n   */\n  id: '',\n\n  /**\n   * @readOnly\n   */\n  name: '',\n\n  /**\n   * @readOnly\n   * @type {string}\n   */\n  mainType: '',\n\n  /**\n   * @readOnly\n   * @type {string}\n   */\n  subType: '',\n\n  /**\n   * @readOnly\n   * @type {number}\n   */\n  componentIndex: 0,\n\n  /**\n   * @type {Object}\n   * @protected\n   */\n  defaultOption: null,\n\n  /**\n   * @type {module:echarts/model/Global}\n   * @readOnly\n   */\n  ecModel: null,\n\n  /**\n   * key: componentType\n   * value:  Component model list, can not be null.\n   * @type {Object.<string, Array.<module:echarts/model/Model>>}\n   * @readOnly\n   */\n  dependentModels: [],\n\n  /**\n   * @type {string}\n   * @readOnly\n   */\n  uid: null,\n\n  /**\n   * Support merge layout params.\n   * Only support 'box' now (left/right/top/bottom/width/height).\n   * @type {string|Object} Object can be {ignoreSize: true}\n   * @readOnly\n   */\n  layoutMode: null,\n  $constructor: function (option, parentModel, ecModel, extraOpt) {\n    Model.call(this, option, parentModel, ecModel, extraOpt);\n    this.uid = componentUtil.getUID('componentModel');\n  },\n  init: function (option, parentModel, ecModel, extraOpt) {\n    this.mergeDefaultAndTheme(option, ecModel);\n  },\n  mergeDefaultAndTheme: function (option, ecModel) {\n    var layoutMode = this.layoutMode;\n    var inputPositionParams = layoutMode ? layout.getLayoutParams(option) : {};\n    var themeModel = ecModel.getTheme();\n    zrUtil.merge(option, themeModel.get(this.mainType));\n    zrUtil.merge(option, this.getDefaultOption());\n\n    if (layoutMode) {\n      layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n    }\n  },\n  mergeOption: function (option, extraOpt) {\n    zrUtil.merge(this.option, option, true);\n    var layoutMode = this.layoutMode;\n\n    if (layoutMode) {\n      layout.mergeLayoutParam(this.option, option, layoutMode);\n    }\n  },\n  // Hooker after init or mergeOption\n  optionUpdated: function (newCptOption, isInit) {},\n  getDefaultOption: function () {\n    if (!clazzUtil.hasOwn(this, '__defaultOption')) {\n      var optList = [];\n      var Class = this.constructor;\n\n      while (Class) {\n        var opt = Class.prototype.defaultOption;\n        opt && optList.push(opt);\n        Class = Class.superClass;\n      }\n\n      var defaultOption = {};\n\n      for (var i = optList.length - 1; i >= 0; i--) {\n        defaultOption = zrUtil.merge(defaultOption, optList[i], true);\n      }\n\n      clazzUtil.set(this, '__defaultOption', defaultOption);\n    }\n\n    return clazzUtil.get(this, '__defaultOption');\n  },\n  getReferringComponents: function (mainType) {\n    return this.ecModel.queryComponents({\n      mainType: mainType,\n      index: this.get(mainType + 'Index', true),\n      id: this.get(mainType + 'Id', true)\n    });\n  }\n}); // Reset ComponentModel.extend, add preConstruct.\n// clazzUtil.enableClassExtend(\n//     ComponentModel,\n//     function (option, parentModel, ecModel, extraOpt) {\n//         // Set dependentModels, componentIndex, name, id, mainType, subType.\n//         zrUtil.extend(this, extraOpt);\n//         this.uid = componentUtil.getUID('componentModel');\n//         // this.setReadOnly([\n//         //     'type', 'id', 'uid', 'name', 'mainType', 'subType',\n//         //     'dependentModels', 'componentIndex'\n//         // ]);\n//     }\n// );\n// Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n\nclazzUtil.enableClassManagement(ComponentModel, {\n  registerWhenExtend: true\n});\ncomponentUtil.enableSubTypeDefaulter(ComponentModel); // Add capability of ComponentModel.topologicalTravel.\n\ncomponentUtil.enableTopologicalTravel(ComponentModel, getDependencies);\n\nfunction getDependencies(componentType) {\n  var deps = [];\n  zrUtil.each(ComponentModel.getClassesByMainType(componentType), function (Clazz) {\n    arrayPush.apply(deps, Clazz.prototype.dependencies || []);\n  }); // Ensure main type\n\n  return zrUtil.map(deps, function (type) {\n    return clazzUtil.parseClassType(type).main;\n  });\n}\n\nzrUtil.mixin(ComponentModel, boxLayoutMixin);\nvar _default = ComponentModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/Component.js\n// module id = 1508\n// module chunks = 2 3","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar textContain = require(\"zrender/lib/contain/text\");\n\nvar OrdinalScale = require(\"../scale/Ordinal\");\n\nvar IntervalScale = require(\"../scale/Interval\");\n\nvar Scale = require(\"../scale/Scale\");\n\nvar numberUtil = require(\"../util/number\");\n\nrequire(\"../scale/Time\");\n\nrequire(\"../scale/Log\");\n\n/**\n * Get axis scale extent before niced.\n * Item of returned array can only be number (including Infinity and NaN).\n */\nfunction getScaleExtent(scale, model) {\n  var scaleType = scale.type;\n  var min = model.getMin();\n  var max = model.getMax();\n  var fixMin = min != null;\n  var fixMax = max != null;\n  var originalExtent = scale.getExtent();\n  var axisDataLen;\n  var boundaryGap;\n  var span;\n\n  if (scaleType === 'ordinal') {\n    axisDataLen = (model.get('data') || []).length;\n  } else {\n    boundaryGap = model.get('boundaryGap');\n\n    if (!zrUtil.isArray(boundaryGap)) {\n      boundaryGap = [boundaryGap || 0, boundaryGap || 0];\n    }\n\n    if (typeof boundaryGap[0] === 'boolean') {\n      boundaryGap = [0, 0];\n    }\n\n    boundaryGap[0] = numberUtil.parsePercent(boundaryGap[0], 1);\n    boundaryGap[1] = numberUtil.parsePercent(boundaryGap[1], 1);\n    span = originalExtent[1] - originalExtent[0] || Math.abs(originalExtent[0]);\n  } // Notice: When min/max is not set (that is, when there are null/undefined,\n  // which is the most common case), these cases should be ensured:\n  // (1) For 'ordinal', show all axis.data.\n  // (2) For others:\n  //      + `boundaryGap` is applied (if min/max set, boundaryGap is\n  //      disabled).\n  //      + If `needCrossZero`, min/max should be zero, otherwise, min/max should\n  //      be the result that originalExtent enlarged by boundaryGap.\n  // (3) If no data, it should be ensured that `scale.setBlank` is set.\n  // FIXME\n  // (1) When min/max is 'dataMin' or 'dataMax', should boundaryGap be able to used?\n  // (2) When `needCrossZero` and all data is positive/negative, should it be ensured\n  // that the results processed by boundaryGap are positive/negative?\n\n\n  if (min == null) {\n    min = scaleType === 'ordinal' ? axisDataLen ? 0 : NaN : originalExtent[0] - boundaryGap[0] * span;\n  }\n\n  if (max == null) {\n    max = scaleType === 'ordinal' ? axisDataLen ? axisDataLen - 1 : NaN : originalExtent[1] + boundaryGap[1] * span;\n  }\n\n  if (min === 'dataMin') {\n    min = originalExtent[0];\n  } else if (typeof min === 'function') {\n    min = min({\n      min: originalExtent[0],\n      max: originalExtent[1]\n    });\n  }\n\n  if (max === 'dataMax') {\n    max = originalExtent[1];\n  } else if (typeof max === 'function') {\n    max = max({\n      min: originalExtent[0],\n      max: originalExtent[1]\n    });\n  }\n\n  (min == null || !isFinite(min)) && (min = NaN);\n  (max == null || !isFinite(max)) && (max = NaN);\n  scale.setBlank(zrUtil.eqNaN(min) || zrUtil.eqNaN(max)); // Evaluate if axis needs cross zero\n\n  if (model.getNeedCrossZero()) {\n    // Axis is over zero and min is not set\n    if (min > 0 && max > 0 && !fixMin) {\n      min = 0;\n    } // Axis is under zero and max is not set\n\n\n    if (min < 0 && max < 0 && !fixMax) {\n      max = 0;\n    }\n  }\n\n  return [min, max];\n}\n\nfunction niceScaleExtent(scale, model) {\n  var extent = getScaleExtent(scale, model);\n  var fixMin = model.getMin() != null;\n  var fixMax = model.getMax() != null;\n  var splitNumber = model.get('splitNumber');\n\n  if (scale.type === 'log') {\n    scale.base = model.get('logBase');\n  }\n\n  var scaleType = scale.type;\n  scale.setExtent(extent[0], extent[1]);\n  scale.niceExtent({\n    splitNumber: splitNumber,\n    fixMin: fixMin,\n    fixMax: fixMax,\n    minInterval: scaleType === 'interval' || scaleType === 'time' ? model.get('minInterval') : null,\n    maxInterval: scaleType === 'interval' || scaleType === 'time' ? model.get('maxInterval') : null\n  }); // If some one specified the min, max. And the default calculated interval\n  // is not good enough. He can specify the interval. It is often appeared\n  // in angle axis with angle 0 - 360. Interval calculated in interval scale is hard\n  // to be 60.\n  // FIXME\n\n  var interval = model.get('interval');\n\n  if (interval != null) {\n    scale.setInterval && scale.setInterval(interval);\n  }\n}\n/**\n * @param {module:echarts/model/Model} model\n * @param {string} [axisType] Default retrieve from model.type\n * @return {module:echarts/scale/*}\n */\n\n\nfunction createScaleByModel(model, axisType) {\n  axisType = axisType || model.get('type');\n\n  if (axisType) {\n    switch (axisType) {\n      // Buildin scale\n      case 'category':\n        return new OrdinalScale(model.getCategories(), [Infinity, -Infinity]);\n\n      case 'value':\n        return new IntervalScale();\n      // Extended scale, like time and log\n\n      default:\n        return (Scale.getClass(axisType) || IntervalScale).create(model);\n    }\n  }\n}\n/**\n * Check if the axis corss 0\n */\n\n\nfunction ifAxisCrossZero(axis) {\n  var dataExtent = axis.scale.getExtent();\n  var min = dataExtent[0];\n  var max = dataExtent[1];\n  return !(min > 0 && max > 0 || min < 0 && max < 0);\n}\n/**\n * @param {Array.<number>} tickCoords In axis self coordinate.\n * @param {Array.<string>} labels\n * @param {string} font\n * @param {number} axisRotate 0: towards right horizontally, clock-wise is negative.\n * @param {number} [labelRotate=0] 0: towards right horizontally, clock-wise is negative.\n * @return {number}\n */\n\n\nfunction getAxisLabelInterval(tickCoords, labels, font, axisRotate, labelRotate) {\n  var textSpaceTakenRect;\n  var autoLabelInterval = 0;\n  var accumulatedLabelInterval = 0;\n  var rotation = (axisRotate - labelRotate) / 180 * Math.PI;\n  var step = 1;\n\n  if (labels.length > 40) {\n    // Simple optimization for large amount of labels\n    step = Math.floor(labels.length / 40);\n  }\n\n  for (var i = 0; i < tickCoords.length; i += step) {\n    var tickCoord = tickCoords[i]; // Not precise, do not consider align and vertical align\n    // and each distance from axis line yet.\n\n    var rect = textContain.getBoundingRect(labels[i], font, 'center', 'top');\n    rect.x += tickCoord * Math.cos(rotation);\n    rect.y += tickCoord * Math.sin(rotation); // Magic number\n\n    rect.width *= 1.3;\n    rect.height *= 1.3;\n\n    if (!textSpaceTakenRect) {\n      textSpaceTakenRect = rect.clone();\n    } // There is no space for current label;\n    else if (textSpaceTakenRect.intersect(rect)) {\n        accumulatedLabelInterval++;\n        autoLabelInterval = Math.max(autoLabelInterval, accumulatedLabelInterval);\n      } else {\n        textSpaceTakenRect.union(rect); // Reset\n\n        accumulatedLabelInterval = 0;\n      }\n  }\n\n  if (autoLabelInterval === 0 && step > 1) {\n    return step;\n  }\n\n  return (autoLabelInterval + 1) * step - 1;\n}\n/**\n * @param {Object} axis\n * @param {Function} labelFormatter\n * @return {Array.<string>}\n */\n\n\nfunction getFormattedLabels(axis, labelFormatter) {\n  var scale = axis.scale;\n  var labels = scale.getTicksLabels();\n  var ticks = scale.getTicks();\n\n  if (typeof labelFormatter === 'string') {\n    labelFormatter = function (tpl) {\n      return function (val) {\n        return tpl.replace('{value}', val != null ? val : '');\n      };\n    }(labelFormatter); // Consider empty array\n\n\n    return zrUtil.map(labels, labelFormatter);\n  } else if (typeof labelFormatter === 'function') {\n    return zrUtil.map(ticks, function (tick, idx) {\n      return labelFormatter(getAxisRawValue(axis, tick), idx);\n    }, this);\n  } else {\n    return labels;\n  }\n}\n\nfunction getAxisRawValue(axis, value) {\n  // In category axis with data zoom, tick is not the original\n  // index of axis.data. So tick should not be exposed to user\n  // in category axis.\n  return axis.type === 'category' ? axis.scale.getLabel(value) : value;\n}\n\nexports.getScaleExtent = getScaleExtent;\nexports.niceScaleExtent = niceScaleExtent;\nexports.createScaleByModel = createScaleByModel;\nexports.ifAxisCrossZero = ifAxisCrossZero;\nexports.getAxisLabelInterval = getAxisLabelInterval;\nexports.getFormattedLabels = getFormattedLabels;\nexports.getAxisRawValue = getAxisRawValue;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/axisHelper.js\n// module id = 1516\n// module chunks = 2 3","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar _number = require(\"./number\");\n\nvar parsePercent = _number.parsePercent;\n\nvar formatUtil = require(\"./format\");\n\n// Layout helpers for each component positioning\nvar each = zrUtil.each;\n/**\n * @public\n */\n\nvar LOCATION_PARAMS = ['left', 'right', 'top', 'bottom', 'width', 'height'];\n/**\n * @public\n */\n\nvar HV_NAMES = [['width', 'left', 'right'], ['height', 'top', 'bottom']];\n\nfunction boxLayout(orient, group, gap, maxWidth, maxHeight) {\n  var x = 0;\n  var y = 0;\n\n  if (maxWidth == null) {\n    maxWidth = Infinity;\n  }\n\n  if (maxHeight == null) {\n    maxHeight = Infinity;\n  }\n\n  var currentLineMaxSize = 0;\n  group.eachChild(function (child, idx) {\n    var position = child.position;\n    var rect = child.getBoundingRect();\n    var nextChild = group.childAt(idx + 1);\n    var nextChildRect = nextChild && nextChild.getBoundingRect();\n    var nextX;\n    var nextY;\n\n    if (orient === 'horizontal') {\n      var moveX = rect.width + (nextChildRect ? -nextChildRect.x + rect.x : 0);\n      nextX = x + moveX; // Wrap when width exceeds maxWidth or meet a `newline` group\n      // FIXME compare before adding gap?\n\n      if (nextX > maxWidth || child.newline) {\n        x = 0;\n        nextX = moveX;\n        y += currentLineMaxSize + gap;\n        currentLineMaxSize = rect.height;\n      } else {\n        // FIXME: consider rect.y is not `0`?\n        currentLineMaxSize = Math.max(currentLineMaxSize, rect.height);\n      }\n    } else {\n      var moveY = rect.height + (nextChildRect ? -nextChildRect.y + rect.y : 0);\n      nextY = y + moveY; // Wrap when width exceeds maxHeight or meet a `newline` group\n\n      if (nextY > maxHeight || child.newline) {\n        x += currentLineMaxSize + gap;\n        y = 0;\n        nextY = moveY;\n        currentLineMaxSize = rect.width;\n      } else {\n        currentLineMaxSize = Math.max(currentLineMaxSize, rect.width);\n      }\n    }\n\n    if (child.newline) {\n      return;\n    }\n\n    position[0] = x;\n    position[1] = y;\n    orient === 'horizontal' ? x = nextX + gap : y = nextY + gap;\n  });\n}\n/**\n * VBox or HBox layouting\n * @param {string} orient\n * @param {module:zrender/container/Group} group\n * @param {number} gap\n * @param {number} [width=Infinity]\n * @param {number} [height=Infinity]\n */\n\n\nvar box = boxLayout;\n/**\n * VBox layouting\n * @param {module:zrender/container/Group} group\n * @param {number} gap\n * @param {number} [width=Infinity]\n * @param {number} [height=Infinity]\n */\n\nvar vbox = zrUtil.curry(boxLayout, 'vertical');\n/**\n * HBox layouting\n * @param {module:zrender/container/Group} group\n * @param {number} gap\n * @param {number} [width=Infinity]\n * @param {number} [height=Infinity]\n */\n\nvar hbox = zrUtil.curry(boxLayout, 'horizontal');\n/**\n * If x or x2 is not specified or 'center' 'left' 'right',\n * the width would be as long as possible.\n * If y or y2 is not specified or 'middle' 'top' 'bottom',\n * the height would be as long as possible.\n *\n * @param {Object} positionInfo\n * @param {number|string} [positionInfo.x]\n * @param {number|string} [positionInfo.y]\n * @param {number|string} [positionInfo.x2]\n * @param {number|string} [positionInfo.y2]\n * @param {Object} containerRect {width, height}\n * @param {string|number} margin\n * @return {Object} {width, height}\n */\n\nfunction getAvailableSize(positionInfo, containerRect, margin) {\n  var containerWidth = containerRect.width;\n  var containerHeight = containerRect.height;\n  var x = parsePercent(positionInfo.x, containerWidth);\n  var y = parsePercent(positionInfo.y, containerHeight);\n  var x2 = parsePercent(positionInfo.x2, containerWidth);\n  var y2 = parsePercent(positionInfo.y2, containerHeight);\n  (isNaN(x) || isNaN(parseFloat(positionInfo.x))) && (x = 0);\n  (isNaN(x2) || isNaN(parseFloat(positionInfo.x2))) && (x2 = containerWidth);\n  (isNaN(y) || isNaN(parseFloat(positionInfo.y))) && (y = 0);\n  (isNaN(y2) || isNaN(parseFloat(positionInfo.y2))) && (y2 = containerHeight);\n  margin = formatUtil.normalizeCssArray(margin || 0);\n  return {\n    width: Math.max(x2 - x - margin[1] - margin[3], 0),\n    height: Math.max(y2 - y - margin[0] - margin[2], 0)\n  };\n}\n/**\n * Parse position info.\n *\n * @param {Object} positionInfo\n * @param {number|string} [positionInfo.left]\n * @param {number|string} [positionInfo.top]\n * @param {number|string} [positionInfo.right]\n * @param {number|string} [positionInfo.bottom]\n * @param {number|string} [positionInfo.width]\n * @param {number|string} [positionInfo.height]\n * @param {number|string} [positionInfo.aspect] Aspect is width / height\n * @param {Object} containerRect\n * @param {string|number} [margin]\n *\n * @return {module:zrender/core/BoundingRect}\n */\n\n\nfunction getLayoutRect(positionInfo, containerRect, margin) {\n  margin = formatUtil.normalizeCssArray(margin || 0);\n  var containerWidth = containerRect.width;\n  var containerHeight = containerRect.height;\n  var left = parsePercent(positionInfo.left, containerWidth);\n  var top = parsePercent(positionInfo.top, containerHeight);\n  var right = parsePercent(positionInfo.right, containerWidth);\n  var bottom = parsePercent(positionInfo.bottom, containerHeight);\n  var width = parsePercent(positionInfo.width, containerWidth);\n  var height = parsePercent(positionInfo.height, containerHeight);\n  var verticalMargin = margin[2] + margin[0];\n  var horizontalMargin = margin[1] + margin[3];\n  var aspect = positionInfo.aspect; // If width is not specified, calculate width from left and right\n\n  if (isNaN(width)) {\n    width = containerWidth - right - horizontalMargin - left;\n  }\n\n  if (isNaN(height)) {\n    height = containerHeight - bottom - verticalMargin - top;\n  }\n\n  if (aspect != null) {\n    // If width and height are not given\n    // 1. Graph should not exceeds the container\n    // 2. Aspect must be keeped\n    // 3. Graph should take the space as more as possible\n    // FIXME\n    // Margin is not considered, because there is no case that both\n    // using margin and aspect so far.\n    if (isNaN(width) && isNaN(height)) {\n      if (aspect > containerWidth / containerHeight) {\n        width = containerWidth * 0.8;\n      } else {\n        height = containerHeight * 0.8;\n      }\n    } // Calculate width or height with given aspect\n\n\n    if (isNaN(width)) {\n      width = aspect * height;\n    }\n\n    if (isNaN(height)) {\n      height = width / aspect;\n    }\n  } // If left is not specified, calculate left from right and width\n\n\n  if (isNaN(left)) {\n    left = containerWidth - right - width - horizontalMargin;\n  }\n\n  if (isNaN(top)) {\n    top = containerHeight - bottom - height - verticalMargin;\n  } // Align left and top\n\n\n  switch (positionInfo.left || positionInfo.right) {\n    case 'center':\n      left = containerWidth / 2 - width / 2 - margin[3];\n      break;\n\n    case 'right':\n      left = containerWidth - width - horizontalMargin;\n      break;\n  }\n\n  switch (positionInfo.top || positionInfo.bottom) {\n    case 'middle':\n    case 'center':\n      top = containerHeight / 2 - height / 2 - margin[0];\n      break;\n\n    case 'bottom':\n      top = containerHeight - height - verticalMargin;\n      break;\n  } // If something is wrong and left, top, width, height are calculated as NaN\n\n\n  left = left || 0;\n  top = top || 0;\n\n  if (isNaN(width)) {\n    // Width may be NaN if only one value is given except width\n    width = containerWidth - horizontalMargin - left - (right || 0);\n  }\n\n  if (isNaN(height)) {\n    // Height may be NaN if only one value is given except height\n    height = containerHeight - verticalMargin - top - (bottom || 0);\n  }\n\n  var rect = new BoundingRect(left + margin[3], top + margin[0], width, height);\n  rect.margin = margin;\n  return rect;\n}\n/**\n * Position a zr element in viewport\n *  Group position is specified by either\n *  {left, top}, {right, bottom}\n *  If all properties exists, right and bottom will be igonred.\n *\n * Logic:\n *     1. Scale (against origin point in parent coord)\n *     2. Rotate (against origin point in parent coord)\n *     3. Traslate (with el.position by this method)\n * So this method only fixes the last step 'Traslate', which does not affect\n * scaling and rotating.\n *\n * If be called repeatly with the same input el, the same result will be gotten.\n *\n * @param {module:zrender/Element} el Should have `getBoundingRect` method.\n * @param {Object} positionInfo\n * @param {number|string} [positionInfo.left]\n * @param {number|string} [positionInfo.top]\n * @param {number|string} [positionInfo.right]\n * @param {number|string} [positionInfo.bottom]\n * @param {number|string} [positionInfo.width] Only for opt.boundingModel: 'raw'\n * @param {number|string} [positionInfo.height] Only for opt.boundingModel: 'raw'\n * @param {Object} containerRect\n * @param {string|number} margin\n * @param {Object} [opt]\n * @param {Array.<number>} [opt.hv=[1,1]] Only horizontal or only vertical.\n * @param {Array.<number>} [opt.boundingMode='all']\n *        Specify how to calculate boundingRect when locating.\n *        'all': Position the boundingRect that is transformed and uioned\n *               both itself and its descendants.\n *               This mode simplies confine the elements in the bounding\n *               of their container (e.g., using 'right: 0').\n *        'raw': Position the boundingRect that is not transformed and only itself.\n *               This mode is useful when you want a element can overflow its\n *               container. (Consider a rotated circle needs to be located in a corner.)\n *               In this mode positionInfo.width/height can only be number.\n */\n\n\nfunction positionElement(el, positionInfo, containerRect, margin, opt) {\n  var h = !opt || !opt.hv || opt.hv[0];\n  var v = !opt || !opt.hv || opt.hv[1];\n  var boundingMode = opt && opt.boundingMode || 'all';\n\n  if (!h && !v) {\n    return;\n  }\n\n  var rect;\n\n  if (boundingMode === 'raw') {\n    rect = el.type === 'group' ? new BoundingRect(0, 0, +positionInfo.width || 0, +positionInfo.height || 0) : el.getBoundingRect();\n  } else {\n    rect = el.getBoundingRect();\n\n    if (el.needLocalTransform()) {\n      var transform = el.getLocalTransform(); // Notice: raw rect may be inner object of el,\n      // which should not be modified.\n\n      rect = rect.clone();\n      rect.applyTransform(transform);\n    }\n  } // The real width and height can not be specified but calculated by the given el.\n\n\n  positionInfo = getLayoutRect(zrUtil.defaults({\n    width: rect.width,\n    height: rect.height\n  }, positionInfo), containerRect, margin); // Because 'tranlate' is the last step in transform\n  // (see zrender/core/Transformable#getLocalTransfrom),\n  // we can just only modify el.position to get final result.\n\n  var elPos = el.position;\n  var dx = h ? positionInfo.x - rect.x : 0;\n  var dy = v ? positionInfo.y - rect.y : 0;\n  el.attr('position', boundingMode === 'raw' ? [dx, dy] : [elPos[0] + dx, elPos[1] + dy]);\n}\n/**\n * @param {Object} option Contains some of the properties in HV_NAMES.\n * @param {number} hvIdx 0: horizontal; 1: vertical.\n */\n\n\nfunction sizeCalculable(option, hvIdx) {\n  return option[HV_NAMES[hvIdx][0]] != null || option[HV_NAMES[hvIdx][1]] != null && option[HV_NAMES[hvIdx][2]] != null;\n}\n/**\n * Consider Case:\n * When defulat option has {left: 0, width: 100}, and we set {right: 0}\n * through setOption or media query, using normal zrUtil.merge will cause\n * {right: 0} does not take effect.\n *\n * @example\n * ComponentModel.extend({\n *     init: function () {\n *         ...\n *         var inputPositionParams = layout.getLayoutParams(option);\n *         this.mergeOption(inputPositionParams);\n *     },\n *     mergeOption: function (newOption) {\n *         newOption && zrUtil.merge(thisOption, newOption, true);\n *         layout.mergeLayoutParam(thisOption, newOption);\n *     }\n * });\n *\n * @param {Object} targetOption\n * @param {Object} newOption\n * @param {Object|string} [opt]\n * @param {boolean|Array.<boolean>} [opt.ignoreSize=false] Used for the components\n *  that width (or height) should not be calculated by left and right (or top and bottom).\n */\n\n\nfunction mergeLayoutParam(targetOption, newOption, opt) {\n  !zrUtil.isObject(opt) && (opt = {});\n  var ignoreSize = opt.ignoreSize;\n  !zrUtil.isArray(ignoreSize) && (ignoreSize = [ignoreSize, ignoreSize]);\n  var hResult = merge(HV_NAMES[0], 0);\n  var vResult = merge(HV_NAMES[1], 1);\n  copy(HV_NAMES[0], targetOption, hResult);\n  copy(HV_NAMES[1], targetOption, vResult);\n\n  function merge(names, hvIdx) {\n    var newParams = {};\n    var newValueCount = 0;\n    var merged = {};\n    var mergedValueCount = 0;\n    var enoughParamNumber = 2;\n    each(names, function (name) {\n      merged[name] = targetOption[name];\n    });\n    each(names, function (name) {\n      // Consider case: newOption.width is null, which is\n      // set by user for removing width setting.\n      hasProp(newOption, name) && (newParams[name] = merged[name] = newOption[name]);\n      hasValue(newParams, name) && newValueCount++;\n      hasValue(merged, name) && mergedValueCount++;\n    });\n\n    if (ignoreSize[hvIdx]) {\n      // Only one of left/right is premitted to exist.\n      if (hasValue(newOption, names[1])) {\n        merged[names[2]] = null;\n      } else if (hasValue(newOption, names[2])) {\n        merged[names[1]] = null;\n      }\n\n      return merged;\n    } // Case: newOption: {width: ..., right: ...},\n    // or targetOption: {right: ...} and newOption: {width: ...},\n    // There is no conflict when merged only has params count\n    // little than enoughParamNumber.\n\n\n    if (mergedValueCount === enoughParamNumber || !newValueCount) {\n      return merged;\n    } // Case: newOption: {width: ..., right: ...},\n    // Than we can make sure user only want those two, and ignore\n    // all origin params in targetOption.\n    else if (newValueCount >= enoughParamNumber) {\n        return newParams;\n      } else {\n        // Chose another param from targetOption by priority.\n        for (var i = 0; i < names.length; i++) {\n          var name = names[i];\n\n          if (!hasProp(newParams, name) && hasProp(targetOption, name)) {\n            newParams[name] = targetOption[name];\n            break;\n          }\n        }\n\n        return newParams;\n      }\n  }\n\n  function hasProp(obj, name) {\n    return obj.hasOwnProperty(name);\n  }\n\n  function hasValue(obj, name) {\n    return obj[name] != null && obj[name] !== 'auto';\n  }\n\n  function copy(names, target, source) {\n    each(names, function (name) {\n      target[name] = source[name];\n    });\n  }\n}\n/**\n * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n * @param {Object} source\n * @return {Object} Result contains those props.\n */\n\n\nfunction getLayoutParams(source) {\n  return copyLayoutParams({}, source);\n}\n/**\n * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n * @param {Object} source\n * @return {Object} Result contains those props.\n */\n\n\nfunction copyLayoutParams(target, source) {\n  source && target && each(LOCATION_PARAMS, function (name) {\n    source.hasOwnProperty(name) && (target[name] = source[name]);\n  });\n  return target;\n}\n\nexports.LOCATION_PARAMS = LOCATION_PARAMS;\nexports.HV_NAMES = HV_NAMES;\nexports.box = box;\nexports.vbox = vbox;\nexports.hbox = hbox;\nexports.getAvailableSize = getAvailableSize;\nexports.getLayoutRect = getLayoutRect;\nexports.positionElement = positionElement;\nexports.sizeCalculable = sizeCalculable;\nexports.mergeLayoutParam = mergeLayoutParam;\nexports.getLayoutParams = getLayoutParams;\nexports.copyLayoutParams = copyLayoutParams;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/layout.js\n// module id = 1517\n// module chunks = 2 3","var BoundingRect = require(\"../core/BoundingRect\");\n\nvar imageHelper = require(\"../graphic/helper/image\");\n\nvar _util = require(\"../core/util\");\n\nvar getContext = _util.getContext;\nvar extend = _util.extend;\nvar retrieve2 = _util.retrieve2;\nvar retrieve3 = _util.retrieve3;\nvar textWidthCache = {};\nvar textWidthCacheCounter = 0;\nvar TEXT_CACHE_MAX = 5000;\nvar STYLE_REG = /\\{([a-zA-Z0-9_]+)\\|([^}]*)\\}/g;\nvar DEFAULT_FONT = '12px sans-serif'; // Avoid assign to an exported variable, for transforming to cjs.\n\nvar methods = {};\n\nfunction $override(name, fn) {\n  methods[name] = fn;\n}\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @return {number} width\n */\n\n\nfunction getWidth(text, font) {\n  font = font || DEFAULT_FONT;\n  var key = text + ':' + font;\n\n  if (textWidthCache[key]) {\n    return textWidthCache[key];\n  }\n\n  var textLines = (text + '').split('\\n');\n  var width = 0;\n\n  for (var i = 0, l = textLines.length; i < l; i++) {\n    // textContain.measureText may be overrided in SVG or VML\n    width = Math.max(measureText(textLines[i], font).width, width);\n  }\n\n  if (textWidthCacheCounter > TEXT_CACHE_MAX) {\n    textWidthCacheCounter = 0;\n    textWidthCache = {};\n  }\n\n  textWidthCacheCounter++;\n  textWidthCache[key] = width;\n  return width;\n}\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @param {string} [textAlign='left']\n * @param {string} [textVerticalAlign='top']\n * @param {Array.<number>} [textPadding]\n * @param {Object} [rich]\n * @param {Object} [truncate]\n * @return {Object} {x, y, width, height, lineHeight}\n */\n\n\nfunction getBoundingRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) {\n  return rich ? getRichTextRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) : getPlainTextRect(text, font, textAlign, textVerticalAlign, textPadding, truncate);\n}\n\nfunction getPlainTextRect(text, font, textAlign, textVerticalAlign, textPadding, truncate) {\n  var contentBlock = parsePlainText(text, font, textPadding, truncate);\n  var outerWidth = getWidth(text, font);\n\n  if (textPadding) {\n    outerWidth += textPadding[1] + textPadding[3];\n  }\n\n  var outerHeight = contentBlock.outerHeight;\n  var x = adjustTextX(0, outerWidth, textAlign);\n  var y = adjustTextY(0, outerHeight, textVerticalAlign);\n  var rect = new BoundingRect(x, y, outerWidth, outerHeight);\n  rect.lineHeight = contentBlock.lineHeight;\n  return rect;\n}\n\nfunction getRichTextRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) {\n  var contentBlock = parseRichText(text, {\n    rich: rich,\n    truncate: truncate,\n    font: font,\n    textAlign: textAlign,\n    textPadding: textPadding\n  });\n  var outerWidth = contentBlock.outerWidth;\n  var outerHeight = contentBlock.outerHeight;\n  var x = adjustTextX(0, outerWidth, textAlign);\n  var y = adjustTextY(0, outerHeight, textVerticalAlign);\n  return new BoundingRect(x, y, outerWidth, outerHeight);\n}\n/**\n * @public\n * @param {number} x\n * @param {number} width\n * @param {string} [textAlign='left']\n * @return {number} Adjusted x.\n */\n\n\nfunction adjustTextX(x, width, textAlign) {\n  // FIXME Right to left language\n  if (textAlign === 'right') {\n    x -= width;\n  } else if (textAlign === 'center') {\n    x -= width / 2;\n  }\n\n  return x;\n}\n/**\n * @public\n * @param {number} y\n * @param {number} height\n * @param {string} [textVerticalAlign='top']\n * @return {number} Adjusted y.\n */\n\n\nfunction adjustTextY(y, height, textVerticalAlign) {\n  if (textVerticalAlign === 'middle') {\n    y -= height / 2;\n  } else if (textVerticalAlign === 'bottom') {\n    y -= height;\n  }\n\n  return y;\n}\n/**\n * @public\n * @param {stirng} textPosition\n * @param {Object} rect {x, y, width, height}\n * @param {number} distance\n * @return {Object} {x, y, textAlign, textVerticalAlign}\n */\n\n\nfunction adjustTextPositionOnRect(textPosition, rect, distance) {\n  var x = rect.x;\n  var y = rect.y;\n  var height = rect.height;\n  var width = rect.width;\n  var halfHeight = height / 2;\n  var textAlign = 'left';\n  var textVerticalAlign = 'top';\n\n  switch (textPosition) {\n    case 'left':\n      x -= distance;\n      y += halfHeight;\n      textAlign = 'right';\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'right':\n      x += distance + width;\n      y += halfHeight;\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'top':\n      x += width / 2;\n      y -= distance;\n      textAlign = 'center';\n      textVerticalAlign = 'bottom';\n      break;\n\n    case 'bottom':\n      x += width / 2;\n      y += height + distance;\n      textAlign = 'center';\n      break;\n\n    case 'inside':\n      x += width / 2;\n      y += halfHeight;\n      textAlign = 'center';\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'insideLeft':\n      x += distance;\n      y += halfHeight;\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'insideRight':\n      x += width - distance;\n      y += halfHeight;\n      textAlign = 'right';\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'insideTop':\n      x += width / 2;\n      y += distance;\n      textAlign = 'center';\n      break;\n\n    case 'insideBottom':\n      x += width / 2;\n      y += height - distance;\n      textAlign = 'center';\n      textVerticalAlign = 'bottom';\n      break;\n\n    case 'insideTopLeft':\n      x += distance;\n      y += distance;\n      break;\n\n    case 'insideTopRight':\n      x += width - distance;\n      y += distance;\n      textAlign = 'right';\n      break;\n\n    case 'insideBottomLeft':\n      x += distance;\n      y += height - distance;\n      textVerticalAlign = 'bottom';\n      break;\n\n    case 'insideBottomRight':\n      x += width - distance;\n      y += height - distance;\n      textAlign = 'right';\n      textVerticalAlign = 'bottom';\n      break;\n  }\n\n  return {\n    x: x,\n    y: y,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n}\n/**\n * Show ellipsis if overflow.\n *\n * @public\n * @param  {string} text\n * @param  {string} containerWidth\n * @param  {string} font\n * @param  {number} [ellipsis='...']\n * @param  {Object} [options]\n * @param  {number} [options.maxIterations=3]\n * @param  {number} [options.minChar=0] If truncate result are less\n *                  then minChar, ellipsis will not show, which is\n *                  better for user hint in some cases.\n * @param  {number} [options.placeholder=''] When all truncated, use the placeholder.\n * @return {string}\n */\n\n\nfunction truncateText(text, containerWidth, font, ellipsis, options) {\n  if (!containerWidth) {\n    return '';\n  }\n\n  var textLines = (text + '').split('\\n');\n  options = prepareTruncateOptions(containerWidth, font, ellipsis, options); // FIXME\n  // It is not appropriate that every line has '...' when truncate multiple lines.\n\n  for (var i = 0, len = textLines.length; i < len; i++) {\n    textLines[i] = truncateSingleLine(textLines[i], options);\n  }\n\n  return textLines.join('\\n');\n}\n\nfunction prepareTruncateOptions(containerWidth, font, ellipsis, options) {\n  options = extend({}, options);\n  options.font = font;\n  var ellipsis = retrieve2(ellipsis, '...');\n  options.maxIterations = retrieve2(options.maxIterations, 2);\n  var minChar = options.minChar = retrieve2(options.minChar, 0); // FIXME\n  // Other languages?\n\n  options.cnCharWidth = getWidth('国', font); // FIXME\n  // Consider proportional font?\n\n  var ascCharWidth = options.ascCharWidth = getWidth('a', font);\n  options.placeholder = retrieve2(options.placeholder, ''); // Example 1: minChar: 3, text: 'asdfzxcv', truncate result: 'asdf', but not: 'a...'.\n  // Example 2: minChar: 3, text: '维度', truncate result: '维', but not: '...'.\n\n  var contentWidth = containerWidth = Math.max(0, containerWidth - 1); // Reserve some gap.\n\n  for (var i = 0; i < minChar && contentWidth >= ascCharWidth; i++) {\n    contentWidth -= ascCharWidth;\n  }\n\n  var ellipsisWidth = getWidth(ellipsis);\n\n  if (ellipsisWidth > contentWidth) {\n    ellipsis = '';\n    ellipsisWidth = 0;\n  }\n\n  contentWidth = containerWidth - ellipsisWidth;\n  options.ellipsis = ellipsis;\n  options.ellipsisWidth = ellipsisWidth;\n  options.contentWidth = contentWidth;\n  options.containerWidth = containerWidth;\n  return options;\n}\n\nfunction truncateSingleLine(textLine, options) {\n  var containerWidth = options.containerWidth;\n  var font = options.font;\n  var contentWidth = options.contentWidth;\n\n  if (!containerWidth) {\n    return '';\n  }\n\n  var lineWidth = getWidth(textLine, font);\n\n  if (lineWidth <= containerWidth) {\n    return textLine;\n  }\n\n  for (var j = 0;; j++) {\n    if (lineWidth <= contentWidth || j >= options.maxIterations) {\n      textLine += options.ellipsis;\n      break;\n    }\n\n    var subLength = j === 0 ? estimateLength(textLine, contentWidth, options.ascCharWidth, options.cnCharWidth) : lineWidth > 0 ? Math.floor(textLine.length * contentWidth / lineWidth) : 0;\n    textLine = textLine.substr(0, subLength);\n    lineWidth = getWidth(textLine, font);\n  }\n\n  if (textLine === '') {\n    textLine = options.placeholder;\n  }\n\n  return textLine;\n}\n\nfunction estimateLength(text, contentWidth, ascCharWidth, cnCharWidth) {\n  var width = 0;\n  var i = 0;\n\n  for (var len = text.length; i < len && width < contentWidth; i++) {\n    var charCode = text.charCodeAt(i);\n    width += 0 <= charCode && charCode <= 127 ? ascCharWidth : cnCharWidth;\n  }\n\n  return i;\n}\n/**\n * @public\n * @param {string} font\n * @return {number} line height\n */\n\n\nfunction getLineHeight(font) {\n  // FIXME A rough approach.\n  return getWidth('国', font);\n}\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @return {Object} width\n */\n\n\nfunction measureText(text, font) {\n  return methods.measureText(text, font);\n} // Avoid assign to an exported variable, for transforming to cjs.\n\n\nmethods.measureText = function (text, font) {\n  var ctx = getContext();\n  ctx.font = font || DEFAULT_FONT;\n  return ctx.measureText(text);\n};\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @param {Object} [truncate]\n * @return {Object} block: {lineHeight, lines, height, outerHeight}\n *  Notice: for performance, do not calculate outerWidth util needed.\n */\n\n\nfunction parsePlainText(text, font, padding, truncate) {\n  text != null && (text += '');\n  var lineHeight = getLineHeight(font);\n  var lines = text ? text.split('\\n') : [];\n  var height = lines.length * lineHeight;\n  var outerHeight = height;\n\n  if (padding) {\n    outerHeight += padding[0] + padding[2];\n  }\n\n  if (text && truncate) {\n    var truncOuterHeight = truncate.outerHeight;\n    var truncOuterWidth = truncate.outerWidth;\n\n    if (truncOuterHeight != null && outerHeight > truncOuterHeight) {\n      text = '';\n      lines = [];\n    } else if (truncOuterWidth != null) {\n      var options = prepareTruncateOptions(truncOuterWidth - (padding ? padding[1] + padding[3] : 0), font, truncate.ellipsis, {\n        minChar: truncate.minChar,\n        placeholder: truncate.placeholder\n      }); // FIXME\n      // It is not appropriate that every line has '...' when truncate multiple lines.\n\n      for (var i = 0, len = lines.length; i < len; i++) {\n        lines[i] = truncateSingleLine(lines[i], options);\n      }\n    }\n  }\n\n  return {\n    lines: lines,\n    height: height,\n    outerHeight: outerHeight,\n    lineHeight: lineHeight\n  };\n}\n/**\n * For example: 'some text {a|some text}other text{b|some text}xxx{c|}xxx'\n * Also consider 'bbbb{a|xxx\\nzzz}xxxx\\naaaa'.\n *\n * @public\n * @param {string} text\n * @param {Object} style\n * @return {Object} block\n * {\n *      width,\n *      height,\n *      lines: [{\n *          lineHeight,\n *          width,\n *          tokens: [[{\n *              styleName,\n *              text,\n *              width,      // include textPadding\n *              height,     // include textPadding\n *              textWidth, // pure text width\n *              textHeight, // pure text height\n *              lineHeihgt,\n *              font,\n *              textAlign,\n *              textVerticalAlign\n *          }], [...], ...]\n *      }, ...]\n * }\n * If styleName is undefined, it is plain text.\n */\n\n\nfunction parseRichText(text, style) {\n  var contentBlock = {\n    lines: [],\n    width: 0,\n    height: 0\n  };\n  text != null && (text += '');\n\n  if (!text) {\n    return contentBlock;\n  }\n\n  var lastIndex = STYLE_REG.lastIndex = 0;\n  var result;\n\n  while ((result = STYLE_REG.exec(text)) != null) {\n    var matchedIndex = result.index;\n\n    if (matchedIndex > lastIndex) {\n      pushTokens(contentBlock, text.substring(lastIndex, matchedIndex));\n    }\n\n    pushTokens(contentBlock, result[2], result[1]);\n    lastIndex = STYLE_REG.lastIndex;\n  }\n\n  if (lastIndex < text.length) {\n    pushTokens(contentBlock, text.substring(lastIndex, text.length));\n  }\n\n  var lines = contentBlock.lines;\n  var contentHeight = 0;\n  var contentWidth = 0; // For `textWidth: 100%`\n\n  var pendingList = [];\n  var stlPadding = style.textPadding;\n  var truncate = style.truncate;\n  var truncateWidth = truncate && truncate.outerWidth;\n  var truncateHeight = truncate && truncate.outerHeight;\n\n  if (stlPadding) {\n    truncateWidth != null && (truncateWidth -= stlPadding[1] + stlPadding[3]);\n    truncateHeight != null && (truncateHeight -= stlPadding[0] + stlPadding[2]);\n  } // Calculate layout info of tokens.\n\n\n  for (var i = 0; i < lines.length; i++) {\n    var line = lines[i];\n    var lineHeight = 0;\n    var lineWidth = 0;\n\n    for (var j = 0; j < line.tokens.length; j++) {\n      var token = line.tokens[j];\n      var tokenStyle = token.styleName && style.rich[token.styleName] || {}; // textPadding should not inherit from style.\n\n      var textPadding = token.textPadding = tokenStyle.textPadding; // textFont has been asigned to font by `normalizeStyle`.\n\n      var font = token.font = tokenStyle.font || style.font; // textHeight can be used when textVerticalAlign is specified in token.\n\n      var tokenHeight = token.textHeight = retrieve2( // textHeight should not be inherited, consider it can be specified\n      // as box height of the block.\n      tokenStyle.textHeight, getLineHeight(font));\n      textPadding && (tokenHeight += textPadding[0] + textPadding[2]);\n      token.height = tokenHeight;\n      token.lineHeight = retrieve3(tokenStyle.textLineHeight, style.textLineHeight, tokenHeight);\n      token.textAlign = tokenStyle && tokenStyle.textAlign || style.textAlign;\n      token.textVerticalAlign = tokenStyle && tokenStyle.textVerticalAlign || 'middle';\n\n      if (truncateHeight != null && contentHeight + token.lineHeight > truncateHeight) {\n        return {\n          lines: [],\n          width: 0,\n          height: 0\n        };\n      }\n\n      token.textWidth = getWidth(token.text, font);\n      var tokenWidth = tokenStyle.textWidth;\n      var tokenWidthNotSpecified = tokenWidth == null || tokenWidth === 'auto'; // Percent width, can be `100%`, can be used in drawing separate\n      // line when box width is needed to be auto.\n\n      if (typeof tokenWidth === 'string' && tokenWidth.charAt(tokenWidth.length - 1) === '%') {\n        token.percentWidth = tokenWidth;\n        pendingList.push(token);\n        tokenWidth = 0; // Do not truncate in this case, because there is no user case\n        // and it is too complicated.\n      } else {\n        if (tokenWidthNotSpecified) {\n          tokenWidth = token.textWidth; // FIXME: If image is not loaded and textWidth is not specified, calling\n          // `getBoundingRect()` will not get correct result.\n\n          var textBackgroundColor = tokenStyle.textBackgroundColor;\n          var bgImg = textBackgroundColor && textBackgroundColor.image; // Use cases:\n          // (1) If image is not loaded, it will be loaded at render phase and call\n          // `dirty()` and `textBackgroundColor.image` will be replaced with the loaded\n          // image, and then the right size will be calculated here at the next tick.\n          // See `graphic/helper/text.js`.\n          // (2) If image loaded, and `textBackgroundColor.image` is image src string,\n          // use `imageHelper.findExistImage` to find cached image.\n          // `imageHelper.findExistImage` will always be called here before\n          // `imageHelper.createOrUpdateImage` in `graphic/helper/text.js#renderRichText`\n          // which ensures that image will not be rendered before correct size calcualted.\n\n          if (bgImg) {\n            bgImg = imageHelper.findExistImage(bgImg);\n\n            if (imageHelper.isImageReady(bgImg)) {\n              tokenWidth = Math.max(tokenWidth, bgImg.width * tokenHeight / bgImg.height);\n            }\n          }\n        }\n\n        var paddingW = textPadding ? textPadding[1] + textPadding[3] : 0;\n        tokenWidth += paddingW;\n        var remianTruncWidth = truncateWidth != null ? truncateWidth - lineWidth : null;\n\n        if (remianTruncWidth != null && remianTruncWidth < tokenWidth) {\n          if (!tokenWidthNotSpecified || remianTruncWidth < paddingW) {\n            token.text = '';\n            token.textWidth = tokenWidth = 0;\n          } else {\n            token.text = truncateText(token.text, remianTruncWidth - paddingW, font, truncate.ellipsis, {\n              minChar: truncate.minChar\n            });\n            token.textWidth = getWidth(token.text, font);\n            tokenWidth = token.textWidth + paddingW;\n          }\n        }\n      }\n\n      lineWidth += token.width = tokenWidth;\n      tokenStyle && (lineHeight = Math.max(lineHeight, token.lineHeight));\n    }\n\n    line.width = lineWidth;\n    line.lineHeight = lineHeight;\n    contentHeight += lineHeight;\n    contentWidth = Math.max(contentWidth, lineWidth);\n  }\n\n  contentBlock.outerWidth = contentBlock.width = retrieve2(style.textWidth, contentWidth);\n  contentBlock.outerHeight = contentBlock.height = retrieve2(style.textHeight, contentHeight);\n\n  if (stlPadding) {\n    contentBlock.outerWidth += stlPadding[1] + stlPadding[3];\n    contentBlock.outerHeight += stlPadding[0] + stlPadding[2];\n  }\n\n  for (var i = 0; i < pendingList.length; i++) {\n    var token = pendingList[i];\n    var percentWidth = token.percentWidth; // Should not base on outerWidth, because token can not be placed out of padding.\n\n    token.width = parseInt(percentWidth, 10) / 100 * contentWidth;\n  }\n\n  return contentBlock;\n}\n\nfunction pushTokens(block, str, styleName) {\n  var isEmptyStr = str === '';\n  var strs = str.split('\\n');\n  var lines = block.lines;\n\n  for (var i = 0; i < strs.length; i++) {\n    var text = strs[i];\n    var token = {\n      styleName: styleName,\n      text: text,\n      isLineHolder: !text && !isEmptyStr\n    }; // The first token should be appended to the last line.\n\n    if (!i) {\n      var tokens = (lines[lines.length - 1] || (lines[0] = {\n        tokens: []\n      })).tokens; // Consider cases:\n      // (1) ''.split('\\n') => ['', '\\n', ''], the '' at the first item\n      // (which is a placeholder) should be replaced by new token.\n      // (2) A image backage, where token likes {a|}.\n      // (3) A redundant '' will affect textAlign in line.\n      // (4) tokens with the same tplName should not be merged, because\n      // they should be displayed in different box (with border and padding).\n\n      var tokensLen = tokens.length;\n      tokensLen === 1 && tokens[0].isLineHolder ? tokens[0] = token : // Consider text is '', only insert when it is the \"lineHolder\" or\n      // \"emptyStr\". Otherwise a redundant '' will affect textAlign in line.\n      (text || !tokensLen || isEmptyStr) && tokens.push(token);\n    } // Other tokens always start a new line.\n    else {\n        // If there is '', insert it as a placeholder.\n        lines.push({\n          tokens: [token]\n        });\n      }\n  }\n}\n\nfunction makeFont(style) {\n  // FIXME in node-canvas fontWeight is before fontStyle\n  // Use `fontSize` `fontFamily` to check whether font properties are defined.\n  return (style.fontSize || style.fontFamily) && [style.fontStyle, style.fontWeight, (style.fontSize || 12) + 'px', // If font properties are defined, `fontFamily` should not be ignored.\n  style.fontFamily || 'sans-serif'].join(' ') || style.textFont || style.font;\n}\n\nexports.DEFAULT_FONT = DEFAULT_FONT;\nexports.$override = $override;\nexports.getWidth = getWidth;\nexports.getBoundingRect = getBoundingRect;\nexports.adjustTextX = adjustTextX;\nexports.adjustTextY = adjustTextY;\nexports.adjustTextPositionOnRect = adjustTextPositionOnRect;\nexports.truncateText = truncateText;\nexports.getLineHeight = getLineHeight;\nexports.measureText = measureText;\nexports.parsePlainText = parsePlainText;\nexports.parseRichText = parseRichText;\nexports.makeFont = makeFont;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/text.js\n// module id = 1523\n// module chunks = 2 3","var _vector = require(\"./vector\");\n\nvar v2Create = _vector.create;\nvar v2DistSquare = _vector.distSquare;\n\n/**\n * 曲线辅助模块\n * @module zrender/core/curve\n * @author pissang(https://www.github.com/pissang)\n */\nvar mathPow = Math.pow;\nvar mathSqrt = Math.sqrt;\nvar EPSILON = 1e-8;\nvar EPSILON_NUMERIC = 1e-4;\nvar THREE_SQRT = mathSqrt(3);\nvar ONE_THIRD = 1 / 3; // 临时变量\n\nvar _v0 = v2Create();\n\nvar _v1 = v2Create();\n\nvar _v2 = v2Create();\n\nfunction isAroundZero(val) {\n  return val > -EPSILON && val < EPSILON;\n}\n\nfunction isNotAroundZero(val) {\n  return val > EPSILON || val < -EPSILON;\n}\n/**\n * 计算三次贝塞尔值\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction cubicAt(p0, p1, p2, p3, t) {\n  var onet = 1 - t;\n  return onet * onet * (onet * p0 + 3 * t * p1) + t * t * (t * p3 + 3 * onet * p2);\n}\n/**\n * 计算三次贝塞尔导数值\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction cubicDerivativeAt(p0, p1, p2, p3, t) {\n  var onet = 1 - t;\n  return 3 * (((p1 - p0) * onet + 2 * (p2 - p1) * t) * onet + (p3 - p2) * t * t);\n}\n/**\n * 计算三次贝塞尔方程根，使用盛金公式\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} val\n * @param  {Array.<number>} roots\n * @return {number} 有效根数目\n */\n\n\nfunction cubicRootAt(p0, p1, p2, p3, val, roots) {\n  // Evaluate roots of cubic functions\n  var a = p3 + 3 * (p1 - p2) - p0;\n  var b = 3 * (p2 - p1 * 2 + p0);\n  var c = 3 * (p1 - p0);\n  var d = p0 - val;\n  var A = b * b - 3 * a * c;\n  var B = b * c - 9 * a * d;\n  var C = c * c - 3 * b * d;\n  var n = 0;\n\n  if (isAroundZero(A) && isAroundZero(B)) {\n    if (isAroundZero(b)) {\n      roots[0] = 0;\n    } else {\n      var t1 = -c / b; //t1, t2, t3, b is not zero\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    }\n  } else {\n    var disc = B * B - 4 * A * C;\n\n    if (isAroundZero(disc)) {\n      var K = B / A;\n      var t1 = -b / a + K; // t1, a is not zero\n\n      var t2 = -K / 2; // t2, t3\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        roots[n++] = t2;\n      }\n    } else if (disc > 0) {\n      var discSqrt = mathSqrt(disc);\n      var Y1 = A * b + 1.5 * a * (-B + discSqrt);\n      var Y2 = A * b + 1.5 * a * (-B - discSqrt);\n\n      if (Y1 < 0) {\n        Y1 = -mathPow(-Y1, ONE_THIRD);\n      } else {\n        Y1 = mathPow(Y1, ONE_THIRD);\n      }\n\n      if (Y2 < 0) {\n        Y2 = -mathPow(-Y2, ONE_THIRD);\n      } else {\n        Y2 = mathPow(Y2, ONE_THIRD);\n      }\n\n      var t1 = (-b - (Y1 + Y2)) / (3 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    } else {\n      var T = (2 * A * b - 3 * a * B) / (2 * mathSqrt(A * A * A));\n      var theta = Math.acos(T) / 3;\n      var ASqrt = mathSqrt(A);\n      var tmp = Math.cos(theta);\n      var t1 = (-b - 2 * ASqrt * tmp) / (3 * a);\n      var t2 = (-b + ASqrt * (tmp + THREE_SQRT * Math.sin(theta))) / (3 * a);\n      var t3 = (-b + ASqrt * (tmp - THREE_SQRT * Math.sin(theta))) / (3 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        roots[n++] = t2;\n      }\n\n      if (t3 >= 0 && t3 <= 1) {\n        roots[n++] = t3;\n      }\n    }\n  }\n\n  return n;\n}\n/**\n * 计算三次贝塞尔方程极限值的位置\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {Array.<number>} extrema\n * @return {number} 有效数目\n */\n\n\nfunction cubicExtrema(p0, p1, p2, p3, extrema) {\n  var b = 6 * p2 - 12 * p1 + 6 * p0;\n  var a = 9 * p1 + 3 * p3 - 3 * p0 - 9 * p2;\n  var c = 3 * p1 - 3 * p0;\n  var n = 0;\n\n  if (isAroundZero(a)) {\n    if (isNotAroundZero(b)) {\n      var t1 = -c / b;\n\n      if (t1 >= 0 && t1 <= 1) {\n        extrema[n++] = t1;\n      }\n    }\n  } else {\n    var disc = b * b - 4 * a * c;\n\n    if (isAroundZero(disc)) {\n      extrema[0] = -b / (2 * a);\n    } else if (disc > 0) {\n      var discSqrt = mathSqrt(disc);\n      var t1 = (-b + discSqrt) / (2 * a);\n      var t2 = (-b - discSqrt) / (2 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        extrema[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        extrema[n++] = t2;\n      }\n    }\n  }\n\n  return n;\n}\n/**\n * 细分三次贝塞尔曲线\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @param  {Array.<number>} out\n */\n\n\nfunction cubicSubdivide(p0, p1, p2, p3, t, out) {\n  var p01 = (p1 - p0) * t + p0;\n  var p12 = (p2 - p1) * t + p1;\n  var p23 = (p3 - p2) * t + p2;\n  var p012 = (p12 - p01) * t + p01;\n  var p123 = (p23 - p12) * t + p12;\n  var p0123 = (p123 - p012) * t + p012; // Seg0\n\n  out[0] = p0;\n  out[1] = p01;\n  out[2] = p012;\n  out[3] = p0123; // Seg1\n\n  out[4] = p0123;\n  out[5] = p123;\n  out[6] = p23;\n  out[7] = p3;\n}\n/**\n * 投射点到三次贝塞尔曲线上，返回投射距离。\n * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {number} x3\n * @param {number} y3\n * @param {number} x\n * @param {number} y\n * @param {Array.<number>} [out] 投射点\n * @return {number}\n */\n\n\nfunction cubicProjectPoint(x0, y0, x1, y1, x2, y2, x3, y3, x, y, out) {\n  // http://pomax.github.io/bezierinfo/#projections\n  var t;\n  var interval = 0.005;\n  var d = Infinity;\n  var prev;\n  var next;\n  var d1;\n  var d2;\n  _v0[0] = x;\n  _v0[1] = y; // 先粗略估计一下可能的最小距离的 t 值\n  // PENDING\n\n  for (var _t = 0; _t < 1; _t += 0.05) {\n    _v1[0] = cubicAt(x0, x1, x2, x3, _t);\n    _v1[1] = cubicAt(y0, y1, y2, y3, _t);\n    d1 = v2DistSquare(_v0, _v1);\n\n    if (d1 < d) {\n      t = _t;\n      d = d1;\n    }\n  }\n\n  d = Infinity; // At most 32 iteration\n\n  for (var i = 0; i < 32; i++) {\n    if (interval < EPSILON_NUMERIC) {\n      break;\n    }\n\n    prev = t - interval;\n    next = t + interval; // t - interval\n\n    _v1[0] = cubicAt(x0, x1, x2, x3, prev);\n    _v1[1] = cubicAt(y0, y1, y2, y3, prev);\n    d1 = v2DistSquare(_v1, _v0);\n\n    if (prev >= 0 && d1 < d) {\n      t = prev;\n      d = d1;\n    } else {\n      // t + interval\n      _v2[0] = cubicAt(x0, x1, x2, x3, next);\n      _v2[1] = cubicAt(y0, y1, y2, y3, next);\n      d2 = v2DistSquare(_v2, _v0);\n\n      if (next <= 1 && d2 < d) {\n        t = next;\n        d = d2;\n      } else {\n        interval *= 0.5;\n      }\n    }\n  } // t\n\n\n  if (out) {\n    out[0] = cubicAt(x0, x1, x2, x3, t);\n    out[1] = cubicAt(y0, y1, y2, y3, t);\n  } // console.log(interval, i);\n\n\n  return mathSqrt(d);\n}\n/**\n * 计算二次方贝塞尔值\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction quadraticAt(p0, p1, p2, t) {\n  var onet = 1 - t;\n  return onet * (onet * p0 + 2 * t * p1) + t * t * p2;\n}\n/**\n * 计算二次方贝塞尔导数值\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction quadraticDerivativeAt(p0, p1, p2, t) {\n  return 2 * ((1 - t) * (p1 - p0) + t * (p2 - p1));\n}\n/**\n * 计算二次方贝塞尔方程根\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @param  {Array.<number>} roots\n * @return {number} 有效根数目\n */\n\n\nfunction quadraticRootAt(p0, p1, p2, val, roots) {\n  var a = p0 - 2 * p1 + p2;\n  var b = 2 * (p1 - p0);\n  var c = p0 - val;\n  var n = 0;\n\n  if (isAroundZero(a)) {\n    if (isNotAroundZero(b)) {\n      var t1 = -c / b;\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    }\n  } else {\n    var disc = b * b - 4 * a * c;\n\n    if (isAroundZero(disc)) {\n      var t1 = -b / (2 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    } else if (disc > 0) {\n      var discSqrt = mathSqrt(disc);\n      var t1 = (-b + discSqrt) / (2 * a);\n      var t2 = (-b - discSqrt) / (2 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        roots[n++] = t2;\n      }\n    }\n  }\n\n  return n;\n}\n/**\n * 计算二次贝塞尔方程极限值\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @return {number}\n */\n\n\nfunction quadraticExtremum(p0, p1, p2) {\n  var divider = p0 + p2 - 2 * p1;\n\n  if (divider === 0) {\n    // p1 is center of p0 and p2\n    return 0.5;\n  } else {\n    return (p0 - p1) / divider;\n  }\n}\n/**\n * 细分二次贝塞尔曲线\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @param  {Array.<number>} out\n */\n\n\nfunction quadraticSubdivide(p0, p1, p2, t, out) {\n  var p01 = (p1 - p0) * t + p0;\n  var p12 = (p2 - p1) * t + p1;\n  var p012 = (p12 - p01) * t + p01; // Seg0\n\n  out[0] = p0;\n  out[1] = p01;\n  out[2] = p012; // Seg1\n\n  out[3] = p012;\n  out[4] = p12;\n  out[5] = p2;\n}\n/**\n * 投射点到二次贝塞尔曲线上，返回投射距离。\n * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {number} x\n * @param {number} y\n * @param {Array.<number>} out 投射点\n * @return {number}\n */\n\n\nfunction quadraticProjectPoint(x0, y0, x1, y1, x2, y2, x, y, out) {\n  // http://pomax.github.io/bezierinfo/#projections\n  var t;\n  var interval = 0.005;\n  var d = Infinity;\n  _v0[0] = x;\n  _v0[1] = y; // 先粗略估计一下可能的最小距离的 t 值\n  // PENDING\n\n  for (var _t = 0; _t < 1; _t += 0.05) {\n    _v1[0] = quadraticAt(x0, x1, x2, _t);\n    _v1[1] = quadraticAt(y0, y1, y2, _t);\n    var d1 = v2DistSquare(_v0, _v1);\n\n    if (d1 < d) {\n      t = _t;\n      d = d1;\n    }\n  }\n\n  d = Infinity; // At most 32 iteration\n\n  for (var i = 0; i < 32; i++) {\n    if (interval < EPSILON_NUMERIC) {\n      break;\n    }\n\n    var prev = t - interval;\n    var next = t + interval; // t - interval\n\n    _v1[0] = quadraticAt(x0, x1, x2, prev);\n    _v1[1] = quadraticAt(y0, y1, y2, prev);\n    var d1 = v2DistSquare(_v1, _v0);\n\n    if (prev >= 0 && d1 < d) {\n      t = prev;\n      d = d1;\n    } else {\n      // t + interval\n      _v2[0] = quadraticAt(x0, x1, x2, next);\n      _v2[1] = quadraticAt(y0, y1, y2, next);\n      var d2 = v2DistSquare(_v2, _v0);\n\n      if (next <= 1 && d2 < d) {\n        t = next;\n        d = d2;\n      } else {\n        interval *= 0.5;\n      }\n    }\n  } // t\n\n\n  if (out) {\n    out[0] = quadraticAt(x0, x1, x2, t);\n    out[1] = quadraticAt(y0, y1, y2, t);\n  } // console.log(interval, i);\n\n\n  return mathSqrt(d);\n}\n\nexports.cubicAt = cubicAt;\nexports.cubicDerivativeAt = cubicDerivativeAt;\nexports.cubicRootAt = cubicRootAt;\nexports.cubicExtrema = cubicExtrema;\nexports.cubicSubdivide = cubicSubdivide;\nexports.cubicProjectPoint = cubicProjectPoint;\nexports.quadraticAt = quadraticAt;\nexports.quadraticDerivativeAt = quadraticDerivativeAt;\nexports.quadraticRootAt = quadraticRootAt;\nexports.quadraticExtremum = quadraticExtremum;\nexports.quadraticSubdivide = quadraticSubdivide;\nexports.quadraticProjectPoint = quadraticProjectPoint;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/curve.js\n// module id = 1524\n// module chunks = 2 3","/**\n * 3x2矩阵操作类\n * @exports zrender/tool/matrix\n */\nvar ArrayCtor = typeof Float32Array === 'undefined' ? Array : Float32Array;\n/**\n * 创建一个单位矩阵\n * @return {Float32Array|Array.<number>}\n */\n\nfunction create() {\n  var out = new ArrayCtor(6);\n  identity(out);\n  return out;\n}\n/**\n * 设置矩阵为单位矩阵\n * @param {Float32Array|Array.<number>} out\n */\n\n\nfunction identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n/**\n * 复制矩阵\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} m\n */\n\n\nfunction copy(out, m) {\n  out[0] = m[0];\n  out[1] = m[1];\n  out[2] = m[2];\n  out[3] = m[3];\n  out[4] = m[4];\n  out[5] = m[5];\n  return out;\n}\n/**\n * 矩阵相乘\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} m1\n * @param {Float32Array|Array.<number>} m2\n */\n\n\nfunction mul(out, m1, m2) {\n  // Consider matrix.mul(m, m2, m);\n  // where out is the same as m2.\n  // So use temp variable to escape error.\n  var out0 = m1[0] * m2[0] + m1[2] * m2[1];\n  var out1 = m1[1] * m2[0] + m1[3] * m2[1];\n  var out2 = m1[0] * m2[2] + m1[2] * m2[3];\n  var out3 = m1[1] * m2[2] + m1[3] * m2[3];\n  var out4 = m1[0] * m2[4] + m1[2] * m2[5] + m1[4];\n  var out5 = m1[1] * m2[4] + m1[3] * m2[5] + m1[5];\n  out[0] = out0;\n  out[1] = out1;\n  out[2] = out2;\n  out[3] = out3;\n  out[4] = out4;\n  out[5] = out5;\n  return out;\n}\n/**\n * 平移变换\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n * @param {Float32Array|Array.<number>} v\n */\n\n\nfunction translate(out, a, v) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4] + v[0];\n  out[5] = a[5] + v[1];\n  return out;\n}\n/**\n * 旋转变换\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n * @param {number} rad\n */\n\n\nfunction rotate(out, a, rad) {\n  var aa = a[0];\n  var ac = a[2];\n  var atx = a[4];\n  var ab = a[1];\n  var ad = a[3];\n  var aty = a[5];\n  var st = Math.sin(rad);\n  var ct = Math.cos(rad);\n  out[0] = aa * ct + ab * st;\n  out[1] = -aa * st + ab * ct;\n  out[2] = ac * ct + ad * st;\n  out[3] = -ac * st + ct * ad;\n  out[4] = ct * atx + st * aty;\n  out[5] = ct * aty - st * atx;\n  return out;\n}\n/**\n * 缩放变换\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n * @param {Float32Array|Array.<number>} v\n */\n\n\nfunction scale(out, a, v) {\n  var vx = v[0];\n  var vy = v[1];\n  out[0] = a[0] * vx;\n  out[1] = a[1] * vy;\n  out[2] = a[2] * vx;\n  out[3] = a[3] * vy;\n  out[4] = a[4] * vx;\n  out[5] = a[5] * vy;\n  return out;\n}\n/**\n * 求逆矩阵\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n */\n\n\nfunction invert(out, a) {\n  var aa = a[0];\n  var ac = a[2];\n  var atx = a[4];\n  var ab = a[1];\n  var ad = a[3];\n  var aty = a[5];\n  var det = aa * ad - ab * ac;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = ad * det;\n  out[1] = -ab * det;\n  out[2] = -ac * det;\n  out[3] = aa * det;\n  out[4] = (ac * aty - ad * atx) * det;\n  out[5] = (ab * atx - aa * aty) * det;\n  return out;\n}\n\nexports.create = create;\nexports.identity = identity;\nexports.copy = copy;\nexports.mul = mul;\nexports.translate = translate;\nexports.rotate = rotate;\nexports.scale = scale;\nexports.invert = invert;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/matrix.js\n// module id = 1525\n// module chunks = 2 3","var Eventful = require(\"../mixin/Eventful\");\n\nexports.Dispatcher = Eventful;\n\nvar env = require(\"./env\");\n\n/**\n * 事件辅助类\n * @module zrender/core/event\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n */\nvar isDomLevel2 = typeof window !== 'undefined' && !!window.addEventListener;\nvar MOUSE_EVENT_REG = /^(?:mouse|pointer|contextmenu|drag|drop)|click/;\n\nfunction getBoundingClientRect(el) {\n  // BlackBerry 5, iOS 3 (original iPhone) don't have getBoundingRect\n  return el.getBoundingClientRect ? el.getBoundingClientRect() : {\n    left: 0,\n    top: 0\n  };\n} // `calculate` is optional, default false\n\n\nfunction clientToLocal(el, e, out, calculate) {\n  out = out || {}; // According to the W3C Working Draft, offsetX and offsetY should be relative\n  // to the padding edge of the target element. The only browser using this convention\n  // is IE. Webkit uses the border edge, Opera uses the content edge, and FireFox does\n  // not support the properties.\n  // (see http://www.jacklmoore.com/notes/mouse-position/)\n  // In zr painter.dom, padding edge equals to border edge.\n  // FIXME\n  // When mousemove event triggered on ec tooltip, target is not zr painter.dom, and\n  // offsetX/Y is relative to e.target, where the calculation of zrX/Y via offsetX/Y\n  // is too complex. So css-transfrom dont support in this case temporarily.\n\n  if (calculate || !env.canvasSupported) {\n    defaultGetZrXY(el, e, out);\n  } // Caution: In FireFox, layerX/layerY Mouse position relative to the closest positioned\n  // ancestor element, so we should make sure el is positioned (e.g., not position:static).\n  // BTW1, Webkit don't return the same results as FF in non-simple cases (like add\n  // zoom-factor, overflow / opacity layers, transforms ...)\n  // BTW2, (ev.offsetY || ev.pageY - $(ev.target).offset().top) is not correct in preserve-3d.\n  // <https://bugs.jquery.com/ticket/8523#comment:14>\n  // BTW3, In ff, offsetX/offsetY is always 0.\n  else if (env.browser.firefox && e.layerX != null && e.layerX !== e.offsetX) {\n      out.zrX = e.layerX;\n      out.zrY = e.layerY;\n    } // For IE6+, chrome, safari, opera. (When will ff support offsetX?)\n    else if (e.offsetX != null) {\n        out.zrX = e.offsetX;\n        out.zrY = e.offsetY;\n      } // For some other device, e.g., IOS safari.\n      else {\n          defaultGetZrXY(el, e, out);\n        }\n\n  return out;\n}\n\nfunction defaultGetZrXY(el, e, out) {\n  // This well-known method below does not support css transform.\n  var box = getBoundingClientRect(el);\n  out.zrX = e.clientX - box.left;\n  out.zrY = e.clientY - box.top;\n}\n/**\n * 如果存在第三方嵌入的一些dom触发的事件，或touch事件，需要转换一下事件坐标.\n * `calculate` is optional, default false.\n */\n\n\nfunction normalizeEvent(el, e, calculate) {\n  e = e || window.event;\n\n  if (e.zrX != null) {\n    return e;\n  }\n\n  var eventType = e.type;\n  var isTouch = eventType && eventType.indexOf('touch') >= 0;\n\n  if (!isTouch) {\n    clientToLocal(el, e, e, calculate);\n    e.zrDelta = e.wheelDelta ? e.wheelDelta / 120 : -(e.detail || 0) / 3;\n  } else {\n    var touch = eventType != 'touchend' ? e.targetTouches[0] : e.changedTouches[0];\n    touch && clientToLocal(el, touch, e, calculate);\n  } // Add which for click: 1 === left; 2 === middle; 3 === right; otherwise: 0;\n  // See jQuery: https://github.com/jquery/jquery/blob/master/src/event.js\n  // If e.which has been defined, if may be readonly,\n  // see: https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/which\n\n\n  var button = e.button;\n\n  if (e.which == null && button !== undefined && MOUSE_EVENT_REG.test(e.type)) {\n    e.which = button & 1 ? 1 : button & 2 ? 3 : button & 4 ? 2 : 0;\n  }\n\n  return e;\n}\n\nfunction addEventListener(el, name, handler) {\n  if (isDomLevel2) {\n    el.addEventListener(name, handler);\n  } else {\n    el.attachEvent('on' + name, handler);\n  }\n}\n\nfunction removeEventListener(el, name, handler) {\n  if (isDomLevel2) {\n    el.removeEventListener(name, handler);\n  } else {\n    el.detachEvent('on' + name, handler);\n  }\n}\n/**\n * preventDefault and stopPropagation.\n * Notice: do not do that in zrender. Upper application\n * do that if necessary.\n *\n * @memberOf module:zrender/core/event\n * @method\n * @param {Event} e : event对象\n */\n\n\nvar stop = isDomLevel2 ? function (e) {\n  e.preventDefault();\n  e.stopPropagation();\n  e.cancelBubble = true;\n} : function (e) {\n  e.returnValue = false;\n  e.cancelBubble = true;\n};\n\nfunction notLeftMouse(e) {\n  // If e.which is undefined, considered as left mouse event.\n  return e.which > 1;\n} // 做向上兼容\n\n\nexports.clientToLocal = clientToLocal;\nexports.normalizeEvent = normalizeEvent;\nexports.addEventListener = addEventListener;\nexports.removeEventListener = removeEventListener;\nexports.stop = stop;\nexports.notLeftMouse = notLeftMouse;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/event.js\n// module id = 1531\n// module chunks = 2 3","/**\n * 事件扩展\n * @module zrender/mixin/Eventful\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\nvar arrySlice = Array.prototype.slice;\n/**\n * 事件分发器\n * @alias module:zrender/mixin/Eventful\n * @constructor\n */\n\nvar Eventful = function () {\n  this._$handlers = {};\n};\n\nEventful.prototype = {\n  constructor: Eventful,\n\n  /**\n   * 单次触发绑定，trigger后销毁\n   *\n   * @param {string} event 事件名\n   * @param {Function} handler 响应函数\n   * @param {Object} context\n   */\n  one: function (event, handler, context) {\n    var _h = this._$handlers;\n\n    if (!handler || !event) {\n      return this;\n    }\n\n    if (!_h[event]) {\n      _h[event] = [];\n    }\n\n    for (var i = 0; i < _h[event].length; i++) {\n      if (_h[event][i].h === handler) {\n        return this;\n      }\n    }\n\n    _h[event].push({\n      h: handler,\n      one: true,\n      ctx: context || this\n    });\n\n    return this;\n  },\n\n  /**\n   * 绑定事件\n   * @param {string} event 事件名\n   * @param {Function} handler 事件处理函数\n   * @param {Object} [context]\n   */\n  on: function (event, handler, context) {\n    var _h = this._$handlers;\n\n    if (!handler || !event) {\n      return this;\n    }\n\n    if (!_h[event]) {\n      _h[event] = [];\n    }\n\n    for (var i = 0; i < _h[event].length; i++) {\n      if (_h[event][i].h === handler) {\n        return this;\n      }\n    }\n\n    _h[event].push({\n      h: handler,\n      one: false,\n      ctx: context || this\n    });\n\n    return this;\n  },\n\n  /**\n   * 是否绑定了事件\n   * @param  {string}  event\n   * @return {boolean}\n   */\n  isSilent: function (event) {\n    var _h = this._$handlers;\n    return _h[event] && _h[event].length;\n  },\n\n  /**\n   * 解绑事件\n   * @param {string} event 事件名\n   * @param {Function} [handler] 事件处理函数\n   */\n  off: function (event, handler) {\n    var _h = this._$handlers;\n\n    if (!event) {\n      this._$handlers = {};\n      return this;\n    }\n\n    if (handler) {\n      if (_h[event]) {\n        var newList = [];\n\n        for (var i = 0, l = _h[event].length; i < l; i++) {\n          if (_h[event][i]['h'] != handler) {\n            newList.push(_h[event][i]);\n          }\n        }\n\n        _h[event] = newList;\n      }\n\n      if (_h[event] && _h[event].length === 0) {\n        delete _h[event];\n      }\n    } else {\n      delete _h[event];\n    }\n\n    return this;\n  },\n\n  /**\n   * 事件分发\n   *\n   * @param {string} type 事件类型\n   */\n  trigger: function (type) {\n    if (this._$handlers[type]) {\n      var args = arguments;\n      var argLen = args.length;\n\n      if (argLen > 3) {\n        args = arrySlice.call(args, 1);\n      }\n\n      var _h = this._$handlers[type];\n      var len = _h.length;\n\n      for (var i = 0; i < len;) {\n        // Optimize advise from backbone\n        switch (argLen) {\n          case 1:\n            _h[i]['h'].call(_h[i]['ctx']);\n\n            break;\n\n          case 2:\n            _h[i]['h'].call(_h[i]['ctx'], args[1]);\n\n            break;\n\n          case 3:\n            _h[i]['h'].call(_h[i]['ctx'], args[1], args[2]);\n\n            break;\n\n          default:\n            // have more than 2 given arguments\n            _h[i]['h'].apply(_h[i]['ctx'], args);\n\n            break;\n        }\n\n        if (_h[i]['one']) {\n          _h.splice(i, 1);\n\n          len--;\n        } else {\n          i++;\n        }\n      }\n    }\n\n    return this;\n  },\n\n  /**\n   * 带有context的事件分发, 最后一个参数是事件回调的context\n   * @param {string} type 事件类型\n   */\n  triggerWithContext: function (type) {\n    if (this._$handlers[type]) {\n      var args = arguments;\n      var argLen = args.length;\n\n      if (argLen > 4) {\n        args = arrySlice.call(args, 1, args.length - 1);\n      }\n\n      var ctx = args[args.length - 1];\n      var _h = this._$handlers[type];\n      var len = _h.length;\n\n      for (var i = 0; i < len;) {\n        // Optimize advise from backbone\n        switch (argLen) {\n          case 1:\n            _h[i]['h'].call(ctx);\n\n            break;\n\n          case 2:\n            _h[i]['h'].call(ctx, args[1]);\n\n            break;\n\n          case 3:\n            _h[i]['h'].call(ctx, args[1], args[2]);\n\n            break;\n\n          default:\n            // have more than 2 given arguments\n            _h[i]['h'].apply(ctx, args);\n\n            break;\n        }\n\n        if (_h[i]['one']) {\n          _h.splice(i, 1);\n\n          len--;\n        } else {\n          i++;\n        }\n      }\n    }\n\n    return this;\n  }\n}; // 对象可以通过 onxxxx 绑定事件\n\n/**\n * @event module:zrender/mixin/Eventful#onclick\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmouseover\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmouseout\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmousemove\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmousewheel\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmousedown\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmouseup\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondrag\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragstart\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragend\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragenter\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragleave\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragover\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondrop\n * @type {Function}\n * @default null\n */\n\nvar _default = Eventful;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/mixin/Eventful.js\n// module id = 1532\n// module chunks = 2 3","var LRU = require(\"../core/LRU\");\n\nvar kCSSColorTable = {\n  'transparent': [0, 0, 0, 0],\n  'aliceblue': [240, 248, 255, 1],\n  'antiquewhite': [250, 235, 215, 1],\n  'aqua': [0, 255, 255, 1],\n  'aquamarine': [127, 255, 212, 1],\n  'azure': [240, 255, 255, 1],\n  'beige': [245, 245, 220, 1],\n  'bisque': [255, 228, 196, 1],\n  'black': [0, 0, 0, 1],\n  'blanchedalmond': [255, 235, 205, 1],\n  'blue': [0, 0, 255, 1],\n  'blueviolet': [138, 43, 226, 1],\n  'brown': [165, 42, 42, 1],\n  'burlywood': [222, 184, 135, 1],\n  'cadetblue': [95, 158, 160, 1],\n  'chartreuse': [127, 255, 0, 1],\n  'chocolate': [210, 105, 30, 1],\n  'coral': [255, 127, 80, 1],\n  'cornflowerblue': [100, 149, 237, 1],\n  'cornsilk': [255, 248, 220, 1],\n  'crimson': [220, 20, 60, 1],\n  'cyan': [0, 255, 255, 1],\n  'darkblue': [0, 0, 139, 1],\n  'darkcyan': [0, 139, 139, 1],\n  'darkgoldenrod': [184, 134, 11, 1],\n  'darkgray': [169, 169, 169, 1],\n  'darkgreen': [0, 100, 0, 1],\n  'darkgrey': [169, 169, 169, 1],\n  'darkkhaki': [189, 183, 107, 1],\n  'darkmagenta': [139, 0, 139, 1],\n  'darkolivegreen': [85, 107, 47, 1],\n  'darkorange': [255, 140, 0, 1],\n  'darkorchid': [153, 50, 204, 1],\n  'darkred': [139, 0, 0, 1],\n  'darksalmon': [233, 150, 122, 1],\n  'darkseagreen': [143, 188, 143, 1],\n  'darkslateblue': [72, 61, 139, 1],\n  'darkslategray': [47, 79, 79, 1],\n  'darkslategrey': [47, 79, 79, 1],\n  'darkturquoise': [0, 206, 209, 1],\n  'darkviolet': [148, 0, 211, 1],\n  'deeppink': [255, 20, 147, 1],\n  'deepskyblue': [0, 191, 255, 1],\n  'dimgray': [105, 105, 105, 1],\n  'dimgrey': [105, 105, 105, 1],\n  'dodgerblue': [30, 144, 255, 1],\n  'firebrick': [178, 34, 34, 1],\n  'floralwhite': [255, 250, 240, 1],\n  'forestgreen': [34, 139, 34, 1],\n  'fuchsia': [255, 0, 255, 1],\n  'gainsboro': [220, 220, 220, 1],\n  'ghostwhite': [248, 248, 255, 1],\n  'gold': [255, 215, 0, 1],\n  'goldenrod': [218, 165, 32, 1],\n  'gray': [128, 128, 128, 1],\n  'green': [0, 128, 0, 1],\n  'greenyellow': [173, 255, 47, 1],\n  'grey': [128, 128, 128, 1],\n  'honeydew': [240, 255, 240, 1],\n  'hotpink': [255, 105, 180, 1],\n  'indianred': [205, 92, 92, 1],\n  'indigo': [75, 0, 130, 1],\n  'ivory': [255, 255, 240, 1],\n  'khaki': [240, 230, 140, 1],\n  'lavender': [230, 230, 250, 1],\n  'lavenderblush': [255, 240, 245, 1],\n  'lawngreen': [124, 252, 0, 1],\n  'lemonchiffon': [255, 250, 205, 1],\n  'lightblue': [173, 216, 230, 1],\n  'lightcoral': [240, 128, 128, 1],\n  'lightcyan': [224, 255, 255, 1],\n  'lightgoldenrodyellow': [250, 250, 210, 1],\n  'lightgray': [211, 211, 211, 1],\n  'lightgreen': [144, 238, 144, 1],\n  'lightgrey': [211, 211, 211, 1],\n  'lightpink': [255, 182, 193, 1],\n  'lightsalmon': [255, 160, 122, 1],\n  'lightseagreen': [32, 178, 170, 1],\n  'lightskyblue': [135, 206, 250, 1],\n  'lightslategray': [119, 136, 153, 1],\n  'lightslategrey': [119, 136, 153, 1],\n  'lightsteelblue': [176, 196, 222, 1],\n  'lightyellow': [255, 255, 224, 1],\n  'lime': [0, 255, 0, 1],\n  'limegreen': [50, 205, 50, 1],\n  'linen': [250, 240, 230, 1],\n  'magenta': [255, 0, 255, 1],\n  'maroon': [128, 0, 0, 1],\n  'mediumaquamarine': [102, 205, 170, 1],\n  'mediumblue': [0, 0, 205, 1],\n  'mediumorchid': [186, 85, 211, 1],\n  'mediumpurple': [147, 112, 219, 1],\n  'mediumseagreen': [60, 179, 113, 1],\n  'mediumslateblue': [123, 104, 238, 1],\n  'mediumspringgreen': [0, 250, 154, 1],\n  'mediumturquoise': [72, 209, 204, 1],\n  'mediumvioletred': [199, 21, 133, 1],\n  'midnightblue': [25, 25, 112, 1],\n  'mintcream': [245, 255, 250, 1],\n  'mistyrose': [255, 228, 225, 1],\n  'moccasin': [255, 228, 181, 1],\n  'navajowhite': [255, 222, 173, 1],\n  'navy': [0, 0, 128, 1],\n  'oldlace': [253, 245, 230, 1],\n  'olive': [128, 128, 0, 1],\n  'olivedrab': [107, 142, 35, 1],\n  'orange': [255, 165, 0, 1],\n  'orangered': [255, 69, 0, 1],\n  'orchid': [218, 112, 214, 1],\n  'palegoldenrod': [238, 232, 170, 1],\n  'palegreen': [152, 251, 152, 1],\n  'paleturquoise': [175, 238, 238, 1],\n  'palevioletred': [219, 112, 147, 1],\n  'papayawhip': [255, 239, 213, 1],\n  'peachpuff': [255, 218, 185, 1],\n  'peru': [205, 133, 63, 1],\n  'pink': [255, 192, 203, 1],\n  'plum': [221, 160, 221, 1],\n  'powderblue': [176, 224, 230, 1],\n  'purple': [128, 0, 128, 1],\n  'red': [255, 0, 0, 1],\n  'rosybrown': [188, 143, 143, 1],\n  'royalblue': [65, 105, 225, 1],\n  'saddlebrown': [139, 69, 19, 1],\n  'salmon': [250, 128, 114, 1],\n  'sandybrown': [244, 164, 96, 1],\n  'seagreen': [46, 139, 87, 1],\n  'seashell': [255, 245, 238, 1],\n  'sienna': [160, 82, 45, 1],\n  'silver': [192, 192, 192, 1],\n  'skyblue': [135, 206, 235, 1],\n  'slateblue': [106, 90, 205, 1],\n  'slategray': [112, 128, 144, 1],\n  'slategrey': [112, 128, 144, 1],\n  'snow': [255, 250, 250, 1],\n  'springgreen': [0, 255, 127, 1],\n  'steelblue': [70, 130, 180, 1],\n  'tan': [210, 180, 140, 1],\n  'teal': [0, 128, 128, 1],\n  'thistle': [216, 191, 216, 1],\n  'tomato': [255, 99, 71, 1],\n  'turquoise': [64, 224, 208, 1],\n  'violet': [238, 130, 238, 1],\n  'wheat': [245, 222, 179, 1],\n  'white': [255, 255, 255, 1],\n  'whitesmoke': [245, 245, 245, 1],\n  'yellow': [255, 255, 0, 1],\n  'yellowgreen': [154, 205, 50, 1]\n};\n\nfunction clampCssByte(i) {\n  // Clamp to integer 0 .. 255.\n  i = Math.round(i); // Seems to be what Chrome does (vs truncation).\n\n  return i < 0 ? 0 : i > 255 ? 255 : i;\n}\n\nfunction clampCssAngle(i) {\n  // Clamp to integer 0 .. 360.\n  i = Math.round(i); // Seems to be what Chrome does (vs truncation).\n\n  return i < 0 ? 0 : i > 360 ? 360 : i;\n}\n\nfunction clampCssFloat(f) {\n  // Clamp to float 0.0 .. 1.0.\n  return f < 0 ? 0 : f > 1 ? 1 : f;\n}\n\nfunction parseCssInt(str) {\n  // int or percentage.\n  if (str.length && str.charAt(str.length - 1) === '%') {\n    return clampCssByte(parseFloat(str) / 100 * 255);\n  }\n\n  return clampCssByte(parseInt(str, 10));\n}\n\nfunction parseCssFloat(str) {\n  // float or percentage.\n  if (str.length && str.charAt(str.length - 1) === '%') {\n    return clampCssFloat(parseFloat(str) / 100);\n  }\n\n  return clampCssFloat(parseFloat(str));\n}\n\nfunction cssHueToRgb(m1, m2, h) {\n  if (h < 0) {\n    h += 1;\n  } else if (h > 1) {\n    h -= 1;\n  }\n\n  if (h * 6 < 1) {\n    return m1 + (m2 - m1) * h * 6;\n  }\n\n  if (h * 2 < 1) {\n    return m2;\n  }\n\n  if (h * 3 < 2) {\n    return m1 + (m2 - m1) * (2 / 3 - h) * 6;\n  }\n\n  return m1;\n}\n\nfunction lerpNumber(a, b, p) {\n  return a + (b - a) * p;\n}\n\nfunction setRgba(out, r, g, b, a) {\n  out[0] = r;\n  out[1] = g;\n  out[2] = b;\n  out[3] = a;\n  return out;\n}\n\nfunction copyRgba(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n\nvar colorCache = new LRU(20);\nvar lastRemovedArr = null;\n\nfunction putToCache(colorStr, rgbaArr) {\n  // Reuse removed array\n  if (lastRemovedArr) {\n    copyRgba(lastRemovedArr, rgbaArr);\n  }\n\n  lastRemovedArr = colorCache.put(colorStr, lastRemovedArr || rgbaArr.slice());\n}\n/**\n * @param {string} colorStr\n * @param {Array.<number>} out\n * @return {Array.<number>}\n * @memberOf module:zrender/util/color\n */\n\n\nfunction parse(colorStr, rgbaArr) {\n  if (!colorStr) {\n    return;\n  }\n\n  rgbaArr = rgbaArr || [];\n  var cached = colorCache.get(colorStr);\n\n  if (cached) {\n    return copyRgba(rgbaArr, cached);\n  } // colorStr may be not string\n\n\n  colorStr = colorStr + ''; // Remove all whitespace, not compliant, but should just be more accepting.\n\n  var str = colorStr.replace(/ /g, '').toLowerCase(); // Color keywords (and transparent) lookup.\n\n  if (str in kCSSColorTable) {\n    copyRgba(rgbaArr, kCSSColorTable[str]);\n    putToCache(colorStr, rgbaArr);\n    return rgbaArr;\n  } // #abc and #abc123 syntax.\n\n\n  if (str.charAt(0) === '#') {\n    if (str.length === 4) {\n      var iv = parseInt(str.substr(1), 16); // TODO(deanm): Stricter parsing.\n\n      if (!(iv >= 0 && iv <= 0xfff)) {\n        setRgba(rgbaArr, 0, 0, 0, 1);\n        return; // Covers NaN.\n      }\n\n      setRgba(rgbaArr, (iv & 0xf00) >> 4 | (iv & 0xf00) >> 8, iv & 0xf0 | (iv & 0xf0) >> 4, iv & 0xf | (iv & 0xf) << 4, 1);\n      putToCache(colorStr, rgbaArr);\n      return rgbaArr;\n    } else if (str.length === 7) {\n      var iv = parseInt(str.substr(1), 16); // TODO(deanm): Stricter parsing.\n\n      if (!(iv >= 0 && iv <= 0xffffff)) {\n        setRgba(rgbaArr, 0, 0, 0, 1);\n        return; // Covers NaN.\n      }\n\n      setRgba(rgbaArr, (iv & 0xff0000) >> 16, (iv & 0xff00) >> 8, iv & 0xff, 1);\n      putToCache(colorStr, rgbaArr);\n      return rgbaArr;\n    }\n\n    return;\n  }\n\n  var op = str.indexOf('('),\n      ep = str.indexOf(')');\n\n  if (op !== -1 && ep + 1 === str.length) {\n    var fname = str.substr(0, op);\n    var params = str.substr(op + 1, ep - (op + 1)).split(',');\n    var alpha = 1; // To allow case fallthrough.\n\n    switch (fname) {\n      case 'rgba':\n        if (params.length !== 4) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        alpha = parseCssFloat(params.pop());\n      // jshint ignore:line\n      // Fall through.\n\n      case 'rgb':\n        if (params.length !== 3) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        setRgba(rgbaArr, parseCssInt(params[0]), parseCssInt(params[1]), parseCssInt(params[2]), alpha);\n        putToCache(colorStr, rgbaArr);\n        return rgbaArr;\n\n      case 'hsla':\n        if (params.length !== 4) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        params[3] = parseCssFloat(params[3]);\n        hsla2rgba(params, rgbaArr);\n        putToCache(colorStr, rgbaArr);\n        return rgbaArr;\n\n      case 'hsl':\n        if (params.length !== 3) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        hsla2rgba(params, rgbaArr);\n        putToCache(colorStr, rgbaArr);\n        return rgbaArr;\n\n      default:\n        return;\n    }\n  }\n\n  setRgba(rgbaArr, 0, 0, 0, 1);\n  return;\n}\n/**\n * @param {Array.<number>} hsla\n * @param {Array.<number>} rgba\n * @return {Array.<number>} rgba\n */\n\n\nfunction hsla2rgba(hsla, rgba) {\n  var h = (parseFloat(hsla[0]) % 360 + 360) % 360 / 360; // 0 .. 1\n  // NOTE(deanm): According to the CSS spec s/l should only be\n  // percentages, but we don't bother and let float or percentage.\n\n  var s = parseCssFloat(hsla[1]);\n  var l = parseCssFloat(hsla[2]);\n  var m2 = l <= 0.5 ? l * (s + 1) : l + s - l * s;\n  var m1 = l * 2 - m2;\n  rgba = rgba || [];\n  setRgba(rgba, clampCssByte(cssHueToRgb(m1, m2, h + 1 / 3) * 255), clampCssByte(cssHueToRgb(m1, m2, h) * 255), clampCssByte(cssHueToRgb(m1, m2, h - 1 / 3) * 255), 1);\n\n  if (hsla.length === 4) {\n    rgba[3] = hsla[3];\n  }\n\n  return rgba;\n}\n/**\n * @param {Array.<number>} rgba\n * @return {Array.<number>} hsla\n */\n\n\nfunction rgba2hsla(rgba) {\n  if (!rgba) {\n    return;\n  } // RGB from 0 to 255\n\n\n  var R = rgba[0] / 255;\n  var G = rgba[1] / 255;\n  var B = rgba[2] / 255;\n  var vMin = Math.min(R, G, B); // Min. value of RGB\n\n  var vMax = Math.max(R, G, B); // Max. value of RGB\n\n  var delta = vMax - vMin; // Delta RGB value\n\n  var L = (vMax + vMin) / 2;\n  var H;\n  var S; // HSL results from 0 to 1\n\n  if (delta === 0) {\n    H = 0;\n    S = 0;\n  } else {\n    if (L < 0.5) {\n      S = delta / (vMax + vMin);\n    } else {\n      S = delta / (2 - vMax - vMin);\n    }\n\n    var deltaR = ((vMax - R) / 6 + delta / 2) / delta;\n    var deltaG = ((vMax - G) / 6 + delta / 2) / delta;\n    var deltaB = ((vMax - B) / 6 + delta / 2) / delta;\n\n    if (R === vMax) {\n      H = deltaB - deltaG;\n    } else if (G === vMax) {\n      H = 1 / 3 + deltaR - deltaB;\n    } else if (B === vMax) {\n      H = 2 / 3 + deltaG - deltaR;\n    }\n\n    if (H < 0) {\n      H += 1;\n    }\n\n    if (H > 1) {\n      H -= 1;\n    }\n  }\n\n  var hsla = [H * 360, S, L];\n\n  if (rgba[3] != null) {\n    hsla.push(rgba[3]);\n  }\n\n  return hsla;\n}\n/**\n * @param {string} color\n * @param {number} level\n * @return {string}\n * @memberOf module:zrender/util/color\n */\n\n\nfunction lift(color, level) {\n  var colorArr = parse(color);\n\n  if (colorArr) {\n    for (var i = 0; i < 3; i++) {\n      if (level < 0) {\n        colorArr[i] = colorArr[i] * (1 - level) | 0;\n      } else {\n        colorArr[i] = (255 - colorArr[i]) * level + colorArr[i] | 0;\n      }\n    }\n\n    return stringify(colorArr, colorArr.length === 4 ? 'rgba' : 'rgb');\n  }\n}\n/**\n * @param {string} color\n * @return {string}\n * @memberOf module:zrender/util/color\n */\n\n\nfunction toHex(color) {\n  var colorArr = parse(color);\n\n  if (colorArr) {\n    return ((1 << 24) + (colorArr[0] << 16) + (colorArr[1] << 8) + +colorArr[2]).toString(16).slice(1);\n  }\n}\n/**\n * Map value to color. Faster than lerp methods because color is represented by rgba array.\n * @param {number} normalizedValue A float between 0 and 1.\n * @param {Array.<Array.<number>>} colors List of rgba color array\n * @param {Array.<number>} [out] Mapped gba color array\n * @return {Array.<number>} will be null/undefined if input illegal.\n */\n\n\nfunction fastLerp(normalizedValue, colors, out) {\n  if (!(colors && colors.length) || !(normalizedValue >= 0 && normalizedValue <= 1)) {\n    return;\n  }\n\n  out = out || [];\n  var value = normalizedValue * (colors.length - 1);\n  var leftIndex = Math.floor(value);\n  var rightIndex = Math.ceil(value);\n  var leftColor = colors[leftIndex];\n  var rightColor = colors[rightIndex];\n  var dv = value - leftIndex;\n  out[0] = clampCssByte(lerpNumber(leftColor[0], rightColor[0], dv));\n  out[1] = clampCssByte(lerpNumber(leftColor[1], rightColor[1], dv));\n  out[2] = clampCssByte(lerpNumber(leftColor[2], rightColor[2], dv));\n  out[3] = clampCssFloat(lerpNumber(leftColor[3], rightColor[3], dv));\n  return out;\n}\n/**\n * @deprecated\n */\n\n\nvar fastMapToColor = fastLerp;\n/**\n * @param {number} normalizedValue A float between 0 and 1.\n * @param {Array.<string>} colors Color list.\n * @param {boolean=} fullOutput Default false.\n * @return {(string|Object)} Result color. If fullOutput,\n *                           return {color: ..., leftIndex: ..., rightIndex: ..., value: ...},\n * @memberOf module:zrender/util/color\n */\n\nfunction lerp(normalizedValue, colors, fullOutput) {\n  if (!(colors && colors.length) || !(normalizedValue >= 0 && normalizedValue <= 1)) {\n    return;\n  }\n\n  var value = normalizedValue * (colors.length - 1);\n  var leftIndex = Math.floor(value);\n  var rightIndex = Math.ceil(value);\n  var leftColor = parse(colors[leftIndex]);\n  var rightColor = parse(colors[rightIndex]);\n  var dv = value - leftIndex;\n  var color = stringify([clampCssByte(lerpNumber(leftColor[0], rightColor[0], dv)), clampCssByte(lerpNumber(leftColor[1], rightColor[1], dv)), clampCssByte(lerpNumber(leftColor[2], rightColor[2], dv)), clampCssFloat(lerpNumber(leftColor[3], rightColor[3], dv))], 'rgba');\n  return fullOutput ? {\n    color: color,\n    leftIndex: leftIndex,\n    rightIndex: rightIndex,\n    value: value\n  } : color;\n}\n/**\n * @deprecated\n */\n\n\nvar mapToColor = lerp;\n/**\n * @param {string} color\n * @param {number=} h 0 ~ 360, ignore when null.\n * @param {number=} s 0 ~ 1, ignore when null.\n * @param {number=} l 0 ~ 1, ignore when null.\n * @return {string} Color string in rgba format.\n * @memberOf module:zrender/util/color\n */\n\nfunction modifyHSL(color, h, s, l) {\n  color = parse(color);\n\n  if (color) {\n    color = rgba2hsla(color);\n    h != null && (color[0] = clampCssAngle(h));\n    s != null && (color[1] = parseCssFloat(s));\n    l != null && (color[2] = parseCssFloat(l));\n    return stringify(hsla2rgba(color), 'rgba');\n  }\n}\n/**\n * @param {string} color\n * @param {number=} alpha 0 ~ 1\n * @return {string} Color string in rgba format.\n * @memberOf module:zrender/util/color\n */\n\n\nfunction modifyAlpha(color, alpha) {\n  color = parse(color);\n\n  if (color && alpha != null) {\n    color[3] = clampCssFloat(alpha);\n    return stringify(color, 'rgba');\n  }\n}\n/**\n * @param {Array.<number>} arrColor like [12,33,44,0.4]\n * @param {string} type 'rgba', 'hsva', ...\n * @return {string} Result color. (If input illegal, return undefined).\n */\n\n\nfunction stringify(arrColor, type) {\n  if (!arrColor || !arrColor.length) {\n    return;\n  }\n\n  var colorStr = arrColor[0] + ',' + arrColor[1] + ',' + arrColor[2];\n\n  if (type === 'rgba' || type === 'hsva' || type === 'hsla') {\n    colorStr += ',' + arrColor[3];\n  }\n\n  return type + '(' + colorStr + ')';\n}\n\nexports.parse = parse;\nexports.lift = lift;\nexports.toHex = toHex;\nexports.fastLerp = fastLerp;\nexports.fastMapToColor = fastMapToColor;\nexports.lerp = lerp;\nexports.mapToColor = mapToColor;\nexports.modifyHSL = modifyHSL;\nexports.modifyAlpha = modifyAlpha;\nexports.stringify = stringify;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/tool/color.js\n// module id = 1533\n// module chunks = 2 3","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Model = require(\"../../model/Model\");\n\nvar each = zrUtil.each;\nvar curry = zrUtil.curry; // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n// allAxesInfo should be updated when setOption performed.\n\nfunction collect(ecModel, api) {\n  var result = {\n    /**\n     * key: makeKey(axis.model)\n     * value: {\n     *      axis,\n     *      coordSys,\n     *      axisPointerModel,\n     *      triggerTooltip,\n     *      involveSeries,\n     *      snap,\n     *      seriesModels,\n     *      seriesDataCount\n     * }\n     */\n    axesInfo: {},\n    seriesInvolved: false,\n\n    /**\n     * key: makeKey(coordSys.model)\n     * value: Object: key makeKey(axis.model), value: axisInfo\n     */\n    coordSysAxesInfo: {},\n    coordSysMap: {}\n  };\n  collectAxesInfo(result, ecModel, api); // Check seriesInvolved for performance, in case too many series in some chart.\n\n  result.seriesInvolved && collectSeriesInfo(result, ecModel);\n  return result;\n}\n\nfunction collectAxesInfo(result, ecModel, api) {\n  var globalTooltipModel = ecModel.getComponent('tooltip');\n  var globalAxisPointerModel = ecModel.getComponent('axisPointer'); // links can only be set on global.\n\n  var linksOption = globalAxisPointerModel.get('link', true) || [];\n  var linkGroups = []; // Collect axes info.\n\n  each(api.getCoordinateSystems(), function (coordSys) {\n    // Some coordinate system do not support axes, like geo.\n    if (!coordSys.axisPointerEnabled) {\n      return;\n    }\n\n    var coordSysKey = makeKey(coordSys.model);\n    var axesInfoInCoordSys = result.coordSysAxesInfo[coordSysKey] = {};\n    result.coordSysMap[coordSysKey] = coordSys; // Set tooltip (like 'cross') is a convienent way to show axisPointer\n    // for user. So we enable seting tooltip on coordSys model.\n\n    var coordSysModel = coordSys.model;\n    var baseTooltipModel = coordSysModel.getModel('tooltip', globalTooltipModel);\n    each(coordSys.getAxes(), curry(saveTooltipAxisInfo, false, null)); // If axis tooltip used, choose tooltip axis for each coordSys.\n    // Notice this case: coordSys is `grid` but not `cartesian2D` here.\n\n    if (coordSys.getTooltipAxes && globalTooltipModel // If tooltip.showContent is set as false, tooltip will not\n    // show but axisPointer will show as normal.\n    && baseTooltipModel.get('show')) {\n      // Compatible with previous logic. But series.tooltip.trigger: 'axis'\n      // or series.data[n].tooltip.trigger: 'axis' are not support any more.\n      var triggerAxis = baseTooltipModel.get('trigger') === 'axis';\n      var cross = baseTooltipModel.get('axisPointer.type') === 'cross';\n      var tooltipAxes = coordSys.getTooltipAxes(baseTooltipModel.get('axisPointer.axis'));\n\n      if (triggerAxis || cross) {\n        each(tooltipAxes.baseAxes, curry(saveTooltipAxisInfo, cross ? 'cross' : true, triggerAxis));\n      }\n\n      if (cross) {\n        each(tooltipAxes.otherAxes, curry(saveTooltipAxisInfo, 'cross', false));\n      }\n    } // fromTooltip: true | false | 'cross'\n    // triggerTooltip: true | false | null\n\n\n    function saveTooltipAxisInfo(fromTooltip, triggerTooltip, axis) {\n      var axisPointerModel = axis.model.getModel('axisPointer', globalAxisPointerModel);\n      var axisPointerShow = axisPointerModel.get('show');\n\n      if (!axisPointerShow || axisPointerShow === 'auto' && !fromTooltip && !isHandleTrigger(axisPointerModel)) {\n        return;\n      }\n\n      if (triggerTooltip == null) {\n        triggerTooltip = axisPointerModel.get('triggerTooltip');\n      }\n\n      axisPointerModel = fromTooltip ? makeAxisPointerModel(axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip) : axisPointerModel;\n      var snap = axisPointerModel.get('snap');\n      var key = makeKey(axis.model);\n      var involveSeries = triggerTooltip || snap || axis.type === 'category'; // If result.axesInfo[key] exist, override it (tooltip has higher priority).\n\n      var axisInfo = result.axesInfo[key] = {\n        key: key,\n        axis: axis,\n        coordSys: coordSys,\n        axisPointerModel: axisPointerModel,\n        triggerTooltip: triggerTooltip,\n        involveSeries: involveSeries,\n        snap: snap,\n        useHandle: isHandleTrigger(axisPointerModel),\n        seriesModels: []\n      };\n      axesInfoInCoordSys[key] = axisInfo;\n      result.seriesInvolved |= involveSeries;\n      var groupIndex = getLinkGroupIndex(linksOption, axis);\n\n      if (groupIndex != null) {\n        var linkGroup = linkGroups[groupIndex] || (linkGroups[groupIndex] = {\n          axesInfo: {}\n        });\n        linkGroup.axesInfo[key] = axisInfo;\n        linkGroup.mapper = linksOption[groupIndex].mapper;\n        axisInfo.linkGroup = linkGroup;\n      }\n    }\n  });\n}\n\nfunction makeAxisPointerModel(axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip) {\n  var tooltipAxisPointerModel = baseTooltipModel.getModel('axisPointer');\n  var volatileOption = {};\n  each(['type', 'snap', 'lineStyle', 'shadowStyle', 'label', 'animation', 'animationDurationUpdate', 'animationEasingUpdate', 'z'], function (field) {\n    volatileOption[field] = zrUtil.clone(tooltipAxisPointerModel.get(field));\n  }); // category axis do not auto snap, otherwise some tick that do not\n  // has value can not be hovered. value/time/log axis default snap if\n  // triggered from tooltip and trigger tooltip.\n\n  volatileOption.snap = axis.type !== 'category' && !!triggerTooltip; // Compatibel with previous behavior, tooltip axis do not show label by default.\n  // Only these properties can be overrided from tooltip to axisPointer.\n\n  if (tooltipAxisPointerModel.get('type') === 'cross') {\n    volatileOption.type = 'line';\n  }\n\n  var labelOption = volatileOption.label || (volatileOption.label = {}); // Follow the convention, do not show label when triggered by tooltip by default.\n\n  labelOption.show == null && (labelOption.show = false);\n\n  if (fromTooltip === 'cross') {\n    // When 'cross', both axes show labels.\n    labelOption.show = true; // If triggerTooltip, this is a base axis, which should better not use cross style\n    // (cross style is dashed by default)\n\n    if (!triggerTooltip) {\n      var crossStyle = volatileOption.lineStyle = tooltipAxisPointerModel.get('crossStyle');\n      crossStyle && zrUtil.defaults(labelOption, crossStyle.textStyle);\n    }\n  }\n\n  return axis.model.getModel('axisPointer', new Model(volatileOption, globalAxisPointerModel, ecModel));\n}\n\nfunction collectSeriesInfo(result, ecModel) {\n  // Prepare data for axis trigger\n  ecModel.eachSeries(function (seriesModel) {\n    // Notice this case: this coordSys is `cartesian2D` but not `grid`.\n    var coordSys = seriesModel.coordinateSystem;\n    var seriesTooltipTrigger = seriesModel.get('tooltip.trigger', true);\n    var seriesTooltipShow = seriesModel.get('tooltip.show', true);\n\n    if (!coordSys || seriesTooltipTrigger === 'none' || seriesTooltipTrigger === false || seriesTooltipTrigger === 'item' || seriesTooltipShow === false || seriesModel.get('axisPointer.show', true) === false) {\n      return;\n    }\n\n    each(result.coordSysAxesInfo[makeKey(coordSys.model)], function (axisInfo) {\n      var axis = axisInfo.axis;\n\n      if (coordSys.getAxis(axis.dim) === axis) {\n        axisInfo.seriesModels.push(seriesModel);\n        axisInfo.seriesDataCount == null && (axisInfo.seriesDataCount = 0);\n        axisInfo.seriesDataCount += seriesModel.getData().count();\n      }\n    });\n  }, this);\n}\n/**\n * For example:\n * {\n *     axisPointer: {\n *         links: [{\n *             xAxisIndex: [2, 4],\n *             yAxisIndex: 'all'\n *         }, {\n *             xAxisId: ['a5', 'a7'],\n *             xAxisName: 'xxx'\n *         }]\n *     }\n * }\n */\n\n\nfunction getLinkGroupIndex(linksOption, axis) {\n  var axisModel = axis.model;\n  var dim = axis.dim;\n\n  for (var i = 0; i < linksOption.length; i++) {\n    var linkOption = linksOption[i] || {};\n\n    if (checkPropInLink(linkOption[dim + 'AxisId'], axisModel.id) || checkPropInLink(linkOption[dim + 'AxisIndex'], axisModel.componentIndex) || checkPropInLink(linkOption[dim + 'AxisName'], axisModel.name)) {\n      return i;\n    }\n  }\n}\n\nfunction checkPropInLink(linkPropValue, axisPropValue) {\n  return linkPropValue === 'all' || zrUtil.isArray(linkPropValue) && zrUtil.indexOf(linkPropValue, axisPropValue) >= 0 || linkPropValue === axisPropValue;\n}\n\nfunction fixValue(axisModel) {\n  var axisInfo = getAxisInfo(axisModel);\n\n  if (!axisInfo) {\n    return;\n  }\n\n  var axisPointerModel = axisInfo.axisPointerModel;\n  var scale = axisInfo.axis.scale;\n  var option = axisPointerModel.option;\n  var status = axisPointerModel.get('status');\n  var value = axisPointerModel.get('value'); // Parse init value for category and time axis.\n\n  if (value != null) {\n    value = scale.parse(value);\n  }\n\n  var useHandle = isHandleTrigger(axisPointerModel); // If `handle` used, `axisPointer` will always be displayed, so value\n  // and status should be initialized.\n\n  if (status == null) {\n    option.status = useHandle ? 'show' : 'hide';\n  }\n\n  var extent = scale.getExtent().slice();\n  extent[0] > extent[1] && extent.reverse();\n\n  if ( // Pick a value on axis when initializing.\n  value == null // If both `handle` and `dataZoom` are used, value may be out of axis extent,\n  // where we should re-pick a value to keep `handle` displaying normally.\n  || value > extent[1]) {\n    // Make handle displayed on the end of the axis when init, which looks better.\n    value = extent[1];\n  }\n\n  if (value < extent[0]) {\n    value = extent[0];\n  }\n\n  option.value = value;\n\n  if (useHandle) {\n    option.status = axisInfo.axis.scale.isBlank() ? 'hide' : 'show';\n  }\n}\n\nfunction getAxisInfo(axisModel) {\n  var coordSysAxesInfo = (axisModel.ecModel.getComponent('axisPointer') || {}).coordSysAxesInfo;\n  return coordSysAxesInfo && coordSysAxesInfo.axesInfo[makeKey(axisModel)];\n}\n\nfunction getAxisPointerModel(axisModel) {\n  var axisInfo = getAxisInfo(axisModel);\n  return axisInfo && axisInfo.axisPointerModel;\n}\n\nfunction isHandleTrigger(axisPointerModel) {\n  return !!axisPointerModel.get('handle.show');\n}\n/**\n * @param {module:echarts/model/Model} model\n * @return {string} unique key\n */\n\n\nfunction makeKey(model) {\n  return model.type + '||' + model.id;\n}\n\nexports.collect = collect;\nexports.fixValue = fixValue;\nexports.getAxisInfo = getAxisInfo;\nexports.getAxisPointerModel = getAxisPointerModel;\nexports.makeKey = makeKey;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axisPointer/modelHelper.js\n// module id = 1537\n// module chunks = 2 3","var zrUtil = require(\"zrender/lib/core/util\");\n\n// TODO Parse shadow style\n// TODO Only shallow path support\nfunction _default(properties) {\n  // Normalize\n  for (var i = 0; i < properties.length; i++) {\n    if (!properties[i][1]) {\n      properties[i][1] = properties[i][0];\n    }\n  }\n\n  return function (model, excludes, includes) {\n    var style = {};\n\n    for (var i = 0; i < properties.length; i++) {\n      var propName = properties[i][1];\n\n      if (excludes && zrUtil.indexOf(excludes, propName) >= 0 || includes && zrUtil.indexOf(includes, propName) < 0) {\n        continue;\n      }\n\n      var val = model.getShallow(propName);\n\n      if (val != null) {\n        style[properties[i][0]] = val;\n      }\n    }\n\n    return style;\n  };\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/mixin/makeStyleMapper.js\n// module id = 1538\n// module chunks = 2 3","var clazzUtil = require(\"../util/clazz\");\n\n/**\n * // Scale class management\n * @module echarts/scale/Scale\n */\n\n/**\n * @param {Object} [setting]\n */\nfunction Scale(setting) {\n  this._setting = setting || {};\n  /**\n   * Extent\n   * @type {Array.<number>}\n   * @protected\n   */\n\n  this._extent = [Infinity, -Infinity];\n  /**\n   * Step is calculated in adjustExtent\n   * @type {Array.<number>}\n   * @protected\n   */\n\n  this._interval = 0;\n  this.init && this.init.apply(this, arguments);\n}\n/**\n * Parse input val to valid inner number.\n * @param {*} val\n * @return {number}\n */\n\n\nScale.prototype.parse = function (val) {\n  // Notice: This would be a trap here, If the implementation\n  // of this method depends on extent, and this method is used\n  // before extent set (like in dataZoom), it would be wrong.\n  // Nevertheless, parse does not depend on extent generally.\n  return val;\n};\n\nScale.prototype.getSetting = function (name) {\n  return this._setting[name];\n};\n\nScale.prototype.contain = function (val) {\n  var extent = this._extent;\n  return val >= extent[0] && val <= extent[1];\n};\n/**\n * Normalize value to linear [0, 1], return 0.5 if extent span is 0\n * @param {number} val\n * @return {number}\n */\n\n\nScale.prototype.normalize = function (val) {\n  var extent = this._extent;\n\n  if (extent[1] === extent[0]) {\n    return 0.5;\n  }\n\n  return (val - extent[0]) / (extent[1] - extent[0]);\n};\n/**\n * Scale normalized value\n * @param {number} val\n * @return {number}\n */\n\n\nScale.prototype.scale = function (val) {\n  var extent = this._extent;\n  return val * (extent[1] - extent[0]) + extent[0];\n};\n/**\n * Set extent from data\n * @param {Array.<number>} other\n */\n\n\nScale.prototype.unionExtent = function (other) {\n  var extent = this._extent;\n  other[0] < extent[0] && (extent[0] = other[0]);\n  other[1] > extent[1] && (extent[1] = other[1]); // not setExtent because in log axis it may transformed to power\n  // this.setExtent(extent[0], extent[1]);\n};\n/**\n * Set extent from data\n * @param {module:echarts/data/List} data\n * @param {string} dim\n */\n\n\nScale.prototype.unionExtentFromData = function (data, dim) {\n  this.unionExtent(data.getDataExtent(dim, true));\n};\n/**\n * Get extent\n * @return {Array.<number>}\n */\n\n\nScale.prototype.getExtent = function () {\n  return this._extent.slice();\n};\n/**\n * Set extent\n * @param {number} start\n * @param {number} end\n */\n\n\nScale.prototype.setExtent = function (start, end) {\n  var thisExtent = this._extent;\n\n  if (!isNaN(start)) {\n    thisExtent[0] = start;\n  }\n\n  if (!isNaN(end)) {\n    thisExtent[1] = end;\n  }\n};\n/**\n * @return {Array.<string>}\n */\n\n\nScale.prototype.getTicksLabels = function () {\n  var labels = [];\n  var ticks = this.getTicks();\n\n  for (var i = 0; i < ticks.length; i++) {\n    labels.push(this.getLabel(ticks[i]));\n  }\n\n  return labels;\n};\n/**\n * When axis extent depends on data and no data exists,\n * axis ticks should not be drawn, which is named 'blank'.\n */\n\n\nScale.prototype.isBlank = function () {\n  return this._isBlank;\n},\n/**\n * When axis extent depends on data and no data exists,\n * axis ticks should not be drawn, which is named 'blank'.\n */\nScale.prototype.setBlank = function (isBlank) {\n  this._isBlank = isBlank;\n};\nclazzUtil.enableClassExtend(Scale);\nclazzUtil.enableClassManagement(Scale, {\n  registerWhenExtend: true\n});\nvar _default = Scale;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/scale/Scale.js\n// module id = 1539\n// module chunks = 2 3","var dpr = 1; // If in browser environment\n\nif (typeof window !== 'undefined') {\n  dpr = Math.max(window.devicePixelRatio || 1, 1);\n}\n/**\n * config默认配置项\n * @exports zrender/config\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n */\n\n/**\n * debug日志选项：catchBrushException为true下有效\n * 0 : 不生成debug数据，发布用\n * 1 : 异常抛出，调试用\n * 2 : 控制台输出，调试用\n */\n\n\nvar debugMode = 0; // retina 屏幕优化\n\nvar devicePixelRatio = dpr;\nexports.debugMode = debugMode;\nexports.devicePixelRatio = devicePixelRatio;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/config.js\n// module id = 1555\n// module chunks = 2 3","var zrUtil = require(\"../core/util\");\n\nvar Element = require(\"../Element\");\n\nvar BoundingRect = require(\"../core/BoundingRect\");\n\n/**\n * Group是一个容器，可以插入子节点，Group的变换也会被应用到子节点上\n * @module zrender/graphic/Group\n * @example\n *     var Group = require('zrender/container/Group');\n *     var Circle = require('zrender/graphic/shape/Circle');\n *     var g = new Group();\n *     g.position[0] = 100;\n *     g.position[1] = 100;\n *     g.add(new Circle({\n *         style: {\n *             x: 100,\n *             y: 100,\n *             r: 20,\n *         }\n *     }));\n *     zr.add(g);\n */\n\n/**\n * @alias module:zrender/graphic/Group\n * @constructor\n * @extends module:zrender/mixin/Transformable\n * @extends module:zrender/mixin/Eventful\n */\nvar Group = function (opts) {\n  opts = opts || {};\n  Element.call(this, opts);\n\n  for (var key in opts) {\n    if (opts.hasOwnProperty(key)) {\n      this[key] = opts[key];\n    }\n  }\n\n  this._children = [];\n  this.__storage = null;\n  this.__dirty = true;\n};\n\nGroup.prototype = {\n  constructor: Group,\n  isGroup: true,\n\n  /**\n   * @type {string}\n   */\n  type: 'group',\n\n  /**\n   * 所有子孙元素是否响应鼠标事件\n   * @name module:/zrender/container/Group#silent\n   * @type {boolean}\n   * @default false\n   */\n  silent: false,\n\n  /**\n   * @return {Array.<module:zrender/Element>}\n   */\n  children: function () {\n    return this._children.slice();\n  },\n\n  /**\n   * 获取指定 index 的儿子节点\n   * @param  {number} idx\n   * @return {module:zrender/Element}\n   */\n  childAt: function (idx) {\n    return this._children[idx];\n  },\n\n  /**\n   * 获取指定名字的儿子节点\n   * @param  {string} name\n   * @return {module:zrender/Element}\n   */\n  childOfName: function (name) {\n    var children = this._children;\n\n    for (var i = 0; i < children.length; i++) {\n      if (children[i].name === name) {\n        return children[i];\n      }\n    }\n  },\n\n  /**\n   * @return {number}\n   */\n  childCount: function () {\n    return this._children.length;\n  },\n\n  /**\n   * 添加子节点到最后\n   * @param {module:zrender/Element} child\n   */\n  add: function (child) {\n    if (child && child !== this && child.parent !== this) {\n      this._children.push(child);\n\n      this._doAdd(child);\n    }\n\n    return this;\n  },\n\n  /**\n   * 添加子节点在 nextSibling 之前\n   * @param {module:zrender/Element} child\n   * @param {module:zrender/Element} nextSibling\n   */\n  addBefore: function (child, nextSibling) {\n    if (child && child !== this && child.parent !== this && nextSibling && nextSibling.parent === this) {\n      var children = this._children;\n      var idx = children.indexOf(nextSibling);\n\n      if (idx >= 0) {\n        children.splice(idx, 0, child);\n\n        this._doAdd(child);\n      }\n    }\n\n    return this;\n  },\n  _doAdd: function (child) {\n    if (child.parent) {\n      child.parent.remove(child);\n    }\n\n    child.parent = this;\n    var storage = this.__storage;\n    var zr = this.__zr;\n\n    if (storage && storage !== child.__storage) {\n      storage.addToStorage(child);\n\n      if (child instanceof Group) {\n        child.addChildrenToStorage(storage);\n      }\n    }\n\n    zr && zr.refresh();\n  },\n\n  /**\n   * 移除子节点\n   * @param {module:zrender/Element} child\n   */\n  remove: function (child) {\n    var zr = this.__zr;\n    var storage = this.__storage;\n    var children = this._children;\n    var idx = zrUtil.indexOf(children, child);\n\n    if (idx < 0) {\n      return this;\n    }\n\n    children.splice(idx, 1);\n    child.parent = null;\n\n    if (storage) {\n      storage.delFromStorage(child);\n\n      if (child instanceof Group) {\n        child.delChildrenFromStorage(storage);\n      }\n    }\n\n    zr && zr.refresh();\n    return this;\n  },\n\n  /**\n   * 移除所有子节点\n   */\n  removeAll: function () {\n    var children = this._children;\n    var storage = this.__storage;\n    var child;\n    var i;\n\n    for (i = 0; i < children.length; i++) {\n      child = children[i];\n\n      if (storage) {\n        storage.delFromStorage(child);\n\n        if (child instanceof Group) {\n          child.delChildrenFromStorage(storage);\n        }\n      }\n\n      child.parent = null;\n    }\n\n    children.length = 0;\n    return this;\n  },\n\n  /**\n   * 遍历所有子节点\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  eachChild: function (cb, context) {\n    var children = this._children;\n\n    for (var i = 0; i < children.length; i++) {\n      var child = children[i];\n      cb.call(context, child, i);\n    }\n\n    return this;\n  },\n\n  /**\n   * 深度优先遍历所有子孙节点\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  traverse: function (cb, context) {\n    for (var i = 0; i < this._children.length; i++) {\n      var child = this._children[i];\n      cb.call(context, child);\n\n      if (child.type === 'group') {\n        child.traverse(cb, context);\n      }\n    }\n\n    return this;\n  },\n  addChildrenToStorage: function (storage) {\n    for (var i = 0; i < this._children.length; i++) {\n      var child = this._children[i];\n      storage.addToStorage(child);\n\n      if (child instanceof Group) {\n        child.addChildrenToStorage(storage);\n      }\n    }\n  },\n  delChildrenFromStorage: function (storage) {\n    for (var i = 0; i < this._children.length; i++) {\n      var child = this._children[i];\n      storage.delFromStorage(child);\n\n      if (child instanceof Group) {\n        child.delChildrenFromStorage(storage);\n      }\n    }\n  },\n  dirty: function () {\n    this.__dirty = true;\n    this.__zr && this.__zr.refresh();\n    return this;\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getBoundingRect: function (includeChildren) {\n    // TODO Caching\n    var rect = null;\n    var tmpRect = new BoundingRect(0, 0, 0, 0);\n    var children = includeChildren || this._children;\n    var tmpMat = [];\n\n    for (var i = 0; i < children.length; i++) {\n      var child = children[i];\n\n      if (child.ignore || child.invisible) {\n        continue;\n      }\n\n      var childRect = child.getBoundingRect();\n      var transform = child.getLocalTransform(tmpMat); // TODO\n      // The boundingRect cacluated by transforming original\n      // rect may be bigger than the actual bundingRect when rotation\n      // is used. (Consider a circle rotated aginst its center, where\n      // the actual boundingRect should be the same as that not be\n      // rotated.) But we can not find better approach to calculate\n      // actual boundingRect yet, considering performance.\n\n      if (transform) {\n        tmpRect.copy(childRect);\n        tmpRect.applyTransform(transform);\n        rect = rect || tmpRect.clone();\n        rect.union(tmpRect);\n      } else {\n        rect = rect || childRect.clone();\n        rect.union(childRect);\n      }\n    }\n\n    return rect || tmpRect;\n  }\n};\nzrUtil.inherits(Group, Element);\nvar _default = Group;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/container/Group.js\n// module id = 1556\n// module chunks = 2 3","var curve = require(\"./curve\");\n\nvar vec2 = require(\"./vector\");\n\nvar bbox = require(\"./bbox\");\n\nvar BoundingRect = require(\"./BoundingRect\");\n\nvar _config = require(\"../config\");\n\nvar dpr = _config.devicePixelRatio;\n\n/**\n * Path 代理，可以在`buildPath`中用于替代`ctx`, 会保存每个path操作的命令到pathCommands属性中\n * 可以用于 isInsidePath 判断以及获取boundingRect\n *\n * @module zrender/core/PathProxy\n * @author Yi Shen (http://www.github.com/pissang)\n */\n// TODO getTotalLength, getPointAtLength\nvar CMD = {\n  M: 1,\n  L: 2,\n  C: 3,\n  Q: 4,\n  A: 5,\n  Z: 6,\n  // Rect\n  R: 7\n}; // var CMD_MEM_SIZE = {\n//     M: 3,\n//     L: 3,\n//     C: 7,\n//     Q: 5,\n//     A: 9,\n//     R: 5,\n//     Z: 1\n// };\n\nvar min = [];\nvar max = [];\nvar min2 = [];\nvar max2 = [];\nvar mathMin = Math.min;\nvar mathMax = Math.max;\nvar mathCos = Math.cos;\nvar mathSin = Math.sin;\nvar mathSqrt = Math.sqrt;\nvar mathAbs = Math.abs;\nvar hasTypedArray = typeof Float32Array != 'undefined';\n/**\n * @alias module:zrender/core/PathProxy\n * @constructor\n */\n\nvar PathProxy = function (notSaveData) {\n  this._saveData = !(notSaveData || false);\n\n  if (this._saveData) {\n    /**\n     * Path data. Stored as flat array\n     * @type {Array.<Object>}\n     */\n    this.data = [];\n  }\n\n  this._ctx = null;\n};\n/**\n * 快速计算Path包围盒（并不是最小包围盒）\n * @return {Object}\n */\n\n\nPathProxy.prototype = {\n  constructor: PathProxy,\n  _xi: 0,\n  _yi: 0,\n  _x0: 0,\n  _y0: 0,\n  // Unit x, Unit y. Provide for avoiding drawing that too short line segment\n  _ux: 0,\n  _uy: 0,\n  _len: 0,\n  _lineDash: null,\n  _dashOffset: 0,\n  _dashIdx: 0,\n  _dashSum: 0,\n\n  /**\n   * @readOnly\n   */\n  setScale: function (sx, sy) {\n    this._ux = mathAbs(1 / dpr / sx) || 0;\n    this._uy = mathAbs(1 / dpr / sy) || 0;\n  },\n  getContext: function () {\n    return this._ctx;\n  },\n\n  /**\n   * @param  {CanvasRenderingContext2D} ctx\n   * @return {module:zrender/core/PathProxy}\n   */\n  beginPath: function (ctx) {\n    this._ctx = ctx;\n    ctx && ctx.beginPath();\n    ctx && (this.dpr = ctx.dpr); // Reset\n\n    if (this._saveData) {\n      this._len = 0;\n    }\n\n    if (this._lineDash) {\n      this._lineDash = null;\n      this._dashOffset = 0;\n    }\n\n    return this;\n  },\n\n  /**\n   * @param  {number} x\n   * @param  {number} y\n   * @return {module:zrender/core/PathProxy}\n   */\n  moveTo: function (x, y) {\n    this.addData(CMD.M, x, y);\n    this._ctx && this._ctx.moveTo(x, y); // x0, y0, xi, yi 是记录在 _dashedXXXXTo 方法中使用\n    // xi, yi 记录当前点, x0, y0 在 closePath 的时候回到起始点。\n    // 有可能在 beginPath 之后直接调用 lineTo，这时候 x0, y0 需要\n    // 在 lineTo 方法中记录，这里先不考虑这种情况，dashed line 也只在 IE10- 中不支持\n\n    this._x0 = x;\n    this._y0 = y;\n    this._xi = x;\n    this._yi = y;\n    return this;\n  },\n\n  /**\n   * @param  {number} x\n   * @param  {number} y\n   * @return {module:zrender/core/PathProxy}\n   */\n  lineTo: function (x, y) {\n    var exceedUnit = mathAbs(x - this._xi) > this._ux || mathAbs(y - this._yi) > this._uy // Force draw the first segment\n    || this._len < 5;\n    this.addData(CMD.L, x, y);\n\n    if (this._ctx && exceedUnit) {\n      this._needsDash() ? this._dashedLineTo(x, y) : this._ctx.lineTo(x, y);\n    }\n\n    if (exceedUnit) {\n      this._xi = x;\n      this._yi = y;\n    }\n\n    return this;\n  },\n\n  /**\n   * @param  {number} x1\n   * @param  {number} y1\n   * @param  {number} x2\n   * @param  {number} y2\n   * @param  {number} x3\n   * @param  {number} y3\n   * @return {module:zrender/core/PathProxy}\n   */\n  bezierCurveTo: function (x1, y1, x2, y2, x3, y3) {\n    this.addData(CMD.C, x1, y1, x2, y2, x3, y3);\n\n    if (this._ctx) {\n      this._needsDash() ? this._dashedBezierTo(x1, y1, x2, y2, x3, y3) : this._ctx.bezierCurveTo(x1, y1, x2, y2, x3, y3);\n    }\n\n    this._xi = x3;\n    this._yi = y3;\n    return this;\n  },\n\n  /**\n   * @param  {number} x1\n   * @param  {number} y1\n   * @param  {number} x2\n   * @param  {number} y2\n   * @return {module:zrender/core/PathProxy}\n   */\n  quadraticCurveTo: function (x1, y1, x2, y2) {\n    this.addData(CMD.Q, x1, y1, x2, y2);\n\n    if (this._ctx) {\n      this._needsDash() ? this._dashedQuadraticTo(x1, y1, x2, y2) : this._ctx.quadraticCurveTo(x1, y1, x2, y2);\n    }\n\n    this._xi = x2;\n    this._yi = y2;\n    return this;\n  },\n\n  /**\n   * @param  {number} cx\n   * @param  {number} cy\n   * @param  {number} r\n   * @param  {number} startAngle\n   * @param  {number} endAngle\n   * @param  {boolean} anticlockwise\n   * @return {module:zrender/core/PathProxy}\n   */\n  arc: function (cx, cy, r, startAngle, endAngle, anticlockwise) {\n    this.addData(CMD.A, cx, cy, r, r, startAngle, endAngle - startAngle, 0, anticlockwise ? 0 : 1);\n    this._ctx && this._ctx.arc(cx, cy, r, startAngle, endAngle, anticlockwise);\n    this._xi = mathCos(endAngle) * r + cx;\n    this._yi = mathSin(endAngle) * r + cx;\n    return this;\n  },\n  // TODO\n  arcTo: function (x1, y1, x2, y2, radius) {\n    if (this._ctx) {\n      this._ctx.arcTo(x1, y1, x2, y2, radius);\n    }\n\n    return this;\n  },\n  // TODO\n  rect: function (x, y, w, h) {\n    this._ctx && this._ctx.rect(x, y, w, h);\n    this.addData(CMD.R, x, y, w, h);\n    return this;\n  },\n\n  /**\n   * @return {module:zrender/core/PathProxy}\n   */\n  closePath: function () {\n    this.addData(CMD.Z);\n    var ctx = this._ctx;\n    var x0 = this._x0;\n    var y0 = this._y0;\n\n    if (ctx) {\n      this._needsDash() && this._dashedLineTo(x0, y0);\n      ctx.closePath();\n    }\n\n    this._xi = x0;\n    this._yi = y0;\n    return this;\n  },\n\n  /**\n   * Context 从外部传入，因为有可能是 rebuildPath 完之后再 fill。\n   * stroke 同样\n   * @param {CanvasRenderingContext2D} ctx\n   * @return {module:zrender/core/PathProxy}\n   */\n  fill: function (ctx) {\n    ctx && ctx.fill();\n    this.toStatic();\n  },\n\n  /**\n   * @param {CanvasRenderingContext2D} ctx\n   * @return {module:zrender/core/PathProxy}\n   */\n  stroke: function (ctx) {\n    ctx && ctx.stroke();\n    this.toStatic();\n  },\n\n  /**\n   * 必须在其它绘制命令前调用\n   * Must be invoked before all other path drawing methods\n   * @return {module:zrender/core/PathProxy}\n   */\n  setLineDash: function (lineDash) {\n    if (lineDash instanceof Array) {\n      this._lineDash = lineDash;\n      this._dashIdx = 0;\n      var lineDashSum = 0;\n\n      for (var i = 0; i < lineDash.length; i++) {\n        lineDashSum += lineDash[i];\n      }\n\n      this._dashSum = lineDashSum;\n    }\n\n    return this;\n  },\n\n  /**\n   * 必须在其它绘制命令前调用\n   * Must be invoked before all other path drawing methods\n   * @return {module:zrender/core/PathProxy}\n   */\n  setLineDashOffset: function (offset) {\n    this._dashOffset = offset;\n    return this;\n  },\n\n  /**\n   *\n   * @return {boolean}\n   */\n  len: function () {\n    return this._len;\n  },\n\n  /**\n   * 直接设置 Path 数据\n   */\n  setData: function (data) {\n    var len = data.length;\n\n    if (!(this.data && this.data.length == len) && hasTypedArray) {\n      this.data = new Float32Array(len);\n    }\n\n    for (var i = 0; i < len; i++) {\n      this.data[i] = data[i];\n    }\n\n    this._len = len;\n  },\n\n  /**\n   * 添加子路径\n   * @param {module:zrender/core/PathProxy|Array.<module:zrender/core/PathProxy>} path\n   */\n  appendPath: function (path) {\n    if (!(path instanceof Array)) {\n      path = [path];\n    }\n\n    var len = path.length;\n    var appendSize = 0;\n    var offset = this._len;\n\n    for (var i = 0; i < len; i++) {\n      appendSize += path[i].len();\n    }\n\n    if (hasTypedArray && this.data instanceof Float32Array) {\n      this.data = new Float32Array(offset + appendSize);\n    }\n\n    for (var i = 0; i < len; i++) {\n      var appendPathData = path[i].data;\n\n      for (var k = 0; k < appendPathData.length; k++) {\n        this.data[offset++] = appendPathData[k];\n      }\n    }\n\n    this._len = offset;\n  },\n\n  /**\n   * 填充 Path 数据。\n   * 尽量复用而不申明新的数组。大部分图形重绘的指令数据长度都是不变的。\n   */\n  addData: function (cmd) {\n    if (!this._saveData) {\n      return;\n    }\n\n    var data = this.data;\n\n    if (this._len + arguments.length > data.length) {\n      // 因为之前的数组已经转换成静态的 Float32Array\n      // 所以不够用时需要扩展一个新的动态数组\n      this._expandData();\n\n      data = this.data;\n    }\n\n    for (var i = 0; i < arguments.length; i++) {\n      data[this._len++] = arguments[i];\n    }\n\n    this._prevCmd = cmd;\n  },\n  _expandData: function () {\n    // Only if data is Float32Array\n    if (!(this.data instanceof Array)) {\n      var newData = [];\n\n      for (var i = 0; i < this._len; i++) {\n        newData[i] = this.data[i];\n      }\n\n      this.data = newData;\n    }\n  },\n\n  /**\n   * If needs js implemented dashed line\n   * @return {boolean}\n   * @private\n   */\n  _needsDash: function () {\n    return this._lineDash;\n  },\n  _dashedLineTo: function (x1, y1) {\n    var dashSum = this._dashSum;\n    var offset = this._dashOffset;\n    var lineDash = this._lineDash;\n    var ctx = this._ctx;\n    var x0 = this._xi;\n    var y0 = this._yi;\n    var dx = x1 - x0;\n    var dy = y1 - y0;\n    var dist = mathSqrt(dx * dx + dy * dy);\n    var x = x0;\n    var y = y0;\n    var dash;\n    var nDash = lineDash.length;\n    var idx;\n    dx /= dist;\n    dy /= dist;\n\n    if (offset < 0) {\n      // Convert to positive offset\n      offset = dashSum + offset;\n    }\n\n    offset %= dashSum;\n    x -= offset * dx;\n    y -= offset * dy;\n\n    while (dx > 0 && x <= x1 || dx < 0 && x >= x1 || dx == 0 && (dy > 0 && y <= y1 || dy < 0 && y >= y1)) {\n      idx = this._dashIdx;\n      dash = lineDash[idx];\n      x += dx * dash;\n      y += dy * dash;\n      this._dashIdx = (idx + 1) % nDash; // Skip positive offset\n\n      if (dx > 0 && x < x0 || dx < 0 && x > x0 || dy > 0 && y < y0 || dy < 0 && y > y0) {\n        continue;\n      }\n\n      ctx[idx % 2 ? 'moveTo' : 'lineTo'](dx >= 0 ? mathMin(x, x1) : mathMax(x, x1), dy >= 0 ? mathMin(y, y1) : mathMax(y, y1));\n    } // Offset for next lineTo\n\n\n    dx = x - x1;\n    dy = y - y1;\n    this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n  },\n  // Not accurate dashed line to\n  _dashedBezierTo: function (x1, y1, x2, y2, x3, y3) {\n    var dashSum = this._dashSum;\n    var offset = this._dashOffset;\n    var lineDash = this._lineDash;\n    var ctx = this._ctx;\n    var x0 = this._xi;\n    var y0 = this._yi;\n    var t;\n    var dx;\n    var dy;\n    var cubicAt = curve.cubicAt;\n    var bezierLen = 0;\n    var idx = this._dashIdx;\n    var nDash = lineDash.length;\n    var x;\n    var y;\n    var tmpLen = 0;\n\n    if (offset < 0) {\n      // Convert to positive offset\n      offset = dashSum + offset;\n    }\n\n    offset %= dashSum; // Bezier approx length\n\n    for (t = 0; t < 1; t += 0.1) {\n      dx = cubicAt(x0, x1, x2, x3, t + 0.1) - cubicAt(x0, x1, x2, x3, t);\n      dy = cubicAt(y0, y1, y2, y3, t + 0.1) - cubicAt(y0, y1, y2, y3, t);\n      bezierLen += mathSqrt(dx * dx + dy * dy);\n    } // Find idx after add offset\n\n\n    for (; idx < nDash; idx++) {\n      tmpLen += lineDash[idx];\n\n      if (tmpLen > offset) {\n        break;\n      }\n    }\n\n    t = (tmpLen - offset) / bezierLen;\n\n    while (t <= 1) {\n      x = cubicAt(x0, x1, x2, x3, t);\n      y = cubicAt(y0, y1, y2, y3, t); // Use line to approximate dashed bezier\n      // Bad result if dash is long\n\n      idx % 2 ? ctx.moveTo(x, y) : ctx.lineTo(x, y);\n      t += lineDash[idx] / bezierLen;\n      idx = (idx + 1) % nDash;\n    } // Finish the last segment and calculate the new offset\n\n\n    idx % 2 !== 0 && ctx.lineTo(x3, y3);\n    dx = x3 - x;\n    dy = y3 - y;\n    this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n  },\n  _dashedQuadraticTo: function (x1, y1, x2, y2) {\n    // Convert quadratic to cubic using degree elevation\n    var x3 = x2;\n    var y3 = y2;\n    x2 = (x2 + 2 * x1) / 3;\n    y2 = (y2 + 2 * y1) / 3;\n    x1 = (this._xi + 2 * x1) / 3;\n    y1 = (this._yi + 2 * y1) / 3;\n\n    this._dashedBezierTo(x1, y1, x2, y2, x3, y3);\n  },\n\n  /**\n   * 转成静态的 Float32Array 减少堆内存占用\n   * Convert dynamic array to static Float32Array\n   */\n  toStatic: function () {\n    var data = this.data;\n\n    if (data instanceof Array) {\n      data.length = this._len;\n\n      if (hasTypedArray) {\n        this.data = new Float32Array(data);\n      }\n    }\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getBoundingRect: function () {\n    min[0] = min[1] = min2[0] = min2[1] = Number.MAX_VALUE;\n    max[0] = max[1] = max2[0] = max2[1] = -Number.MAX_VALUE;\n    var data = this.data;\n    var xi = 0;\n    var yi = 0;\n    var x0 = 0;\n    var y0 = 0;\n\n    for (var i = 0; i < data.length;) {\n      var cmd = data[i++];\n\n      if (i == 1) {\n        // 如果第一个命令是 L, C, Q\n        // 则 previous point 同绘制命令的第一个 point\n        //\n        // 第一个命令为 Arc 的情况下会在后面特殊处理\n        xi = data[i];\n        yi = data[i + 1];\n        x0 = xi;\n        y0 = yi;\n      }\n\n      switch (cmd) {\n        case CMD.M:\n          // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n          // 在 closePath 的时候使用\n          x0 = data[i++];\n          y0 = data[i++];\n          xi = x0;\n          yi = y0;\n          min2[0] = x0;\n          min2[1] = y0;\n          max2[0] = x0;\n          max2[1] = y0;\n          break;\n\n        case CMD.L:\n          bbox.fromLine(xi, yi, data[i], data[i + 1], min2, max2);\n          xi = data[i++];\n          yi = data[i++];\n          break;\n\n        case CMD.C:\n          bbox.fromCubic(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], min2, max2);\n          xi = data[i++];\n          yi = data[i++];\n          break;\n\n        case CMD.Q:\n          bbox.fromQuadratic(xi, yi, data[i++], data[i++], data[i], data[i + 1], min2, max2);\n          xi = data[i++];\n          yi = data[i++];\n          break;\n\n        case CMD.A:\n          // TODO Arc 判断的开销比较大\n          var cx = data[i++];\n          var cy = data[i++];\n          var rx = data[i++];\n          var ry = data[i++];\n          var startAngle = data[i++];\n          var endAngle = data[i++] + startAngle; // TODO Arc 旋转\n\n          var psi = data[i++];\n          var anticlockwise = 1 - data[i++];\n\n          if (i == 1) {\n            // 直接使用 arc 命令\n            // 第一个命令起点还未定义\n            x0 = mathCos(startAngle) * rx + cx;\n            y0 = mathSin(startAngle) * ry + cy;\n          }\n\n          bbox.fromArc(cx, cy, rx, ry, startAngle, endAngle, anticlockwise, min2, max2);\n          xi = mathCos(endAngle) * rx + cx;\n          yi = mathSin(endAngle) * ry + cy;\n          break;\n\n        case CMD.R:\n          x0 = xi = data[i++];\n          y0 = yi = data[i++];\n          var width = data[i++];\n          var height = data[i++]; // Use fromLine\n\n          bbox.fromLine(x0, y0, x0 + width, y0 + height, min2, max2);\n          break;\n\n        case CMD.Z:\n          xi = x0;\n          yi = y0;\n          break;\n      } // Union\n\n\n      vec2.min(min, min, min2);\n      vec2.max(max, max, max2);\n    } // No data\n\n\n    if (i === 0) {\n      min[0] = min[1] = max[0] = max[1] = 0;\n    }\n\n    return new BoundingRect(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n  },\n\n  /**\n   * Rebuild path from current data\n   * Rebuild path will not consider javascript implemented line dash.\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  rebuildPath: function (ctx) {\n    var d = this.data;\n    var x0, y0;\n    var xi, yi;\n    var x, y;\n    var ux = this._ux;\n    var uy = this._uy;\n    var len = this._len;\n\n    for (var i = 0; i < len;) {\n      var cmd = d[i++];\n\n      if (i == 1) {\n        // 如果第一个命令是 L, C, Q\n        // 则 previous point 同绘制命令的第一个 point\n        //\n        // 第一个命令为 Arc 的情况下会在后面特殊处理\n        xi = d[i];\n        yi = d[i + 1];\n        x0 = xi;\n        y0 = yi;\n      }\n\n      switch (cmd) {\n        case CMD.M:\n          x0 = xi = d[i++];\n          y0 = yi = d[i++];\n          ctx.moveTo(xi, yi);\n          break;\n\n        case CMD.L:\n          x = d[i++];\n          y = d[i++]; // Not draw too small seg between\n\n          if (mathAbs(x - xi) > ux || mathAbs(y - yi) > uy || i === len - 1) {\n            ctx.lineTo(x, y);\n            xi = x;\n            yi = y;\n          }\n\n          break;\n\n        case CMD.C:\n          ctx.bezierCurveTo(d[i++], d[i++], d[i++], d[i++], d[i++], d[i++]);\n          xi = d[i - 2];\n          yi = d[i - 1];\n          break;\n\n        case CMD.Q:\n          ctx.quadraticCurveTo(d[i++], d[i++], d[i++], d[i++]);\n          xi = d[i - 2];\n          yi = d[i - 1];\n          break;\n\n        case CMD.A:\n          var cx = d[i++];\n          var cy = d[i++];\n          var rx = d[i++];\n          var ry = d[i++];\n          var theta = d[i++];\n          var dTheta = d[i++];\n          var psi = d[i++];\n          var fs = d[i++];\n          var r = rx > ry ? rx : ry;\n          var scaleX = rx > ry ? 1 : rx / ry;\n          var scaleY = rx > ry ? ry / rx : 1;\n          var isEllipse = Math.abs(rx - ry) > 1e-3;\n          var endAngle = theta + dTheta;\n\n          if (isEllipse) {\n            ctx.translate(cx, cy);\n            ctx.rotate(psi);\n            ctx.scale(scaleX, scaleY);\n            ctx.arc(0, 0, r, theta, endAngle, 1 - fs);\n            ctx.scale(1 / scaleX, 1 / scaleY);\n            ctx.rotate(-psi);\n            ctx.translate(-cx, -cy);\n          } else {\n            ctx.arc(cx, cy, r, theta, endAngle, 1 - fs);\n          }\n\n          if (i == 1) {\n            // 直接使用 arc 命令\n            // 第一个命令起点还未定义\n            x0 = mathCos(theta) * rx + cx;\n            y0 = mathSin(theta) * ry + cy;\n          }\n\n          xi = mathCos(endAngle) * rx + cx;\n          yi = mathSin(endAngle) * ry + cy;\n          break;\n\n        case CMD.R:\n          x0 = xi = d[i];\n          y0 = yi = d[i + 1];\n          ctx.rect(d[i++], d[i++], d[i++], d[i++]);\n          break;\n\n        case CMD.Z:\n          ctx.closePath();\n          xi = x0;\n          yi = y0;\n      }\n    }\n  }\n};\nPathProxy.CMD = CMD;\nvar _default = PathProxy;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/PathProxy.js\n// module id = 1557\n// module chunks = 2 3","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar coordinateSystemCreators = {};\n\nfunction CoordinateSystemManager() {\n  this._coordinateSystems = [];\n}\n\nCoordinateSystemManager.prototype = {\n  constructor: CoordinateSystemManager,\n  create: function (ecModel, api) {\n    var coordinateSystems = [];\n    zrUtil.each(coordinateSystemCreators, function (creater, type) {\n      var list = creater.create(ecModel, api);\n      coordinateSystems = coordinateSystems.concat(list || []);\n    });\n    this._coordinateSystems = coordinateSystems;\n  },\n  update: function (ecModel, api) {\n    zrUtil.each(this._coordinateSystems, function (coordSys) {\n      // FIXME MUST have\n      coordSys.update && coordSys.update(ecModel, api);\n    });\n  },\n  getCoordinateSystems: function () {\n    return this._coordinateSystems.slice();\n  }\n};\n\nCoordinateSystemManager.register = function (type, coordinateSystemCreator) {\n  coordinateSystemCreators[type] = coordinateSystemCreator;\n};\n\nCoordinateSystemManager.get = function (type) {\n  return coordinateSystemCreators[type];\n};\n\nvar _default = CoordinateSystemManager;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/CoordinateSystem.js\n// module id = 1564\n// module chunks = 2 3","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar List = require(\"../../data/List\");\n\nvar completeDimensions = require(\"../../data/helper/completeDimensions\");\n\nvar _model = require(\"../../util/model\");\n\nvar getDataItemValue = _model.getDataItemValue;\nvar converDataValue = _model.converDataValue;\nvar isDataItemOption = _model.isDataItemOption;\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\nfunction firstDataNotNull(data) {\n  var i = 0;\n\n  while (i < data.length && data[i] == null) {\n    i++;\n  }\n\n  return data[i];\n}\n\nfunction ifNeedCompleteOrdinalData(data) {\n  var sampleItem = firstDataNotNull(data);\n  return sampleItem != null && !zrUtil.isArray(getDataItemValue(sampleItem));\n}\n/**\n * Helper function to create a list from option data\n */\n\n\nfunction createListFromArray(data, seriesModel, ecModel) {\n  // If data is undefined\n  data = data || [];\n  var coordSysName = seriesModel.get('coordinateSystem');\n  var creator = creators[coordSysName];\n  var registeredCoordSys = CoordinateSystem.get(coordSysName);\n  var completeDimOpt = {\n    encodeDef: seriesModel.get('encode'),\n    dimsDef: seriesModel.get('dimensions')\n  }; // FIXME\n\n  var axesInfo = creator && creator(data, seriesModel, ecModel, completeDimOpt);\n  var dimensions = axesInfo && axesInfo.dimensions;\n\n  if (!dimensions) {\n    // Get dimensions from registered coordinate system\n    dimensions = registeredCoordSys && (registeredCoordSys.getDimensionsInfo ? registeredCoordSys.getDimensionsInfo() : registeredCoordSys.dimensions.slice()) || ['x', 'y'];\n    dimensions = completeDimensions(dimensions, data, completeDimOpt);\n  }\n\n  var categoryIndex = axesInfo ? axesInfo.categoryIndex : -1;\n  var list = new List(dimensions, seriesModel);\n  var nameList = createNameList(axesInfo, data);\n  var categories = {};\n  var dimValueGetter = categoryIndex >= 0 && ifNeedCompleteOrdinalData(data) ? function (itemOpt, dimName, dataIndex, dimIndex) {\n    // If any dataItem is like { value: 10 }\n    if (isDataItemOption(itemOpt)) {\n      list.hasItemOption = true;\n    } // Use dataIndex as ordinal value in categoryAxis\n\n\n    return dimIndex === categoryIndex ? dataIndex : converDataValue(getDataItemValue(itemOpt), dimensions[dimIndex]);\n  } : function (itemOpt, dimName, dataIndex, dimIndex) {\n    var value = getDataItemValue(itemOpt);\n    var val = converDataValue(value && value[dimIndex], dimensions[dimIndex]); // If any dataItem is like { value: 10 }\n\n    if (isDataItemOption(itemOpt)) {\n      list.hasItemOption = true;\n    }\n\n    var categoryAxesModels = axesInfo && axesInfo.categoryAxesModels;\n\n    if (categoryAxesModels && categoryAxesModels[dimName]) {\n      // If given value is a category string\n      if (typeof val === 'string') {\n        // Lazy get categories\n        categories[dimName] = categories[dimName] || categoryAxesModels[dimName].getCategories();\n        val = zrUtil.indexOf(categories[dimName], val);\n\n        if (val < 0 && !isNaN(val)) {\n          // In case some one write '1', '2' istead of 1, 2\n          val = +val;\n        }\n      }\n    }\n\n    return val;\n  };\n  list.hasItemOption = false;\n  list.initData(data, nameList, dimValueGetter);\n  return list;\n}\n\nfunction isStackable(axisType) {\n  return axisType !== 'category' && axisType !== 'time';\n}\n\nfunction getDimTypeByAxis(axisType) {\n  return axisType === 'category' ? 'ordinal' : axisType === 'time' ? 'time' : 'float';\n}\n/**\n * Creaters for each coord system.\n */\n\n\nvar creators = {\n  cartesian2d: function (data, seriesModel, ecModel, completeDimOpt) {\n    var axesModels = zrUtil.map(['xAxis', 'yAxis'], function (name) {\n      return ecModel.queryComponents({\n        mainType: name,\n        index: seriesModel.get(name + 'Index'),\n        id: seriesModel.get(name + 'Id')\n      })[0];\n    });\n    var xAxisModel = axesModels[0];\n    var yAxisModel = axesModels[1];\n    var xAxisType = xAxisModel.get('type');\n    var yAxisType = yAxisModel.get('type');\n    var dimensions = [{\n      name: 'x',\n      type: getDimTypeByAxis(xAxisType),\n      stackable: isStackable(xAxisType)\n    }, {\n      name: 'y',\n      // If two category axes\n      type: getDimTypeByAxis(yAxisType),\n      stackable: isStackable(yAxisType)\n    }];\n    var isXAxisCateogry = xAxisType === 'category';\n    var isYAxisCategory = yAxisType === 'category';\n    dimensions = completeDimensions(dimensions, data, completeDimOpt);\n    var categoryAxesModels = {};\n\n    if (isXAxisCateogry) {\n      categoryAxesModels.x = xAxisModel;\n    }\n\n    if (isYAxisCategory) {\n      categoryAxesModels.y = yAxisModel;\n    }\n\n    return {\n      dimensions: dimensions,\n      categoryIndex: isXAxisCateogry ? 0 : isYAxisCategory ? 1 : -1,\n      categoryAxesModels: categoryAxesModels\n    };\n  },\n  singleAxis: function (data, seriesModel, ecModel, completeDimOpt) {\n    var singleAxisModel = ecModel.queryComponents({\n      mainType: 'singleAxis',\n      index: seriesModel.get('singleAxisIndex'),\n      id: seriesModel.get('singleAxisId')\n    })[0];\n    var singleAxisType = singleAxisModel.get('type');\n    var isCategory = singleAxisType === 'category';\n    var dimensions = [{\n      name: 'single',\n      type: getDimTypeByAxis(singleAxisType),\n      stackable: isStackable(singleAxisType)\n    }];\n    dimensions = completeDimensions(dimensions, data, completeDimOpt);\n    var categoryAxesModels = {};\n\n    if (isCategory) {\n      categoryAxesModels.single = singleAxisModel;\n    }\n\n    return {\n      dimensions: dimensions,\n      categoryIndex: isCategory ? 0 : -1,\n      categoryAxesModels: categoryAxesModels\n    };\n  },\n  polar: function (data, seriesModel, ecModel, completeDimOpt) {\n    var polarModel = ecModel.queryComponents({\n      mainType: 'polar',\n      index: seriesModel.get('polarIndex'),\n      id: seriesModel.get('polarId')\n    })[0];\n    var angleAxisModel = polarModel.findAxisModel('angleAxis');\n    var radiusAxisModel = polarModel.findAxisModel('radiusAxis');\n    var radiusAxisType = radiusAxisModel.get('type');\n    var angleAxisType = angleAxisModel.get('type');\n    var dimensions = [{\n      name: 'radius',\n      type: getDimTypeByAxis(radiusAxisType),\n      stackable: isStackable(radiusAxisType)\n    }, {\n      name: 'angle',\n      type: getDimTypeByAxis(angleAxisType),\n      stackable: isStackable(angleAxisType)\n    }];\n    var isAngleAxisCateogry = angleAxisType === 'category';\n    var isRadiusAxisCateogry = radiusAxisType === 'category';\n    dimensions = completeDimensions(dimensions, data, completeDimOpt);\n    var categoryAxesModels = {};\n\n    if (isRadiusAxisCateogry) {\n      categoryAxesModels.radius = radiusAxisModel;\n    }\n\n    if (isAngleAxisCateogry) {\n      categoryAxesModels.angle = angleAxisModel;\n    }\n\n    return {\n      dimensions: dimensions,\n      categoryIndex: isAngleAxisCateogry ? 1 : isRadiusAxisCateogry ? 0 : -1,\n      categoryAxesModels: categoryAxesModels\n    };\n  },\n  geo: function (data, seriesModel, ecModel, completeDimOpt) {\n    // TODO Region\n    // 多个散点图系列在同一个地区的时候\n    return {\n      dimensions: completeDimensions([{\n        name: 'lng'\n      }, {\n        name: 'lat'\n      }], data, completeDimOpt)\n    };\n  }\n};\n\nfunction createNameList(result, data) {\n  var nameList = [];\n  var categoryDim = result && result.dimensions[result.categoryIndex];\n  var categoryAxisModel;\n\n  if (categoryDim) {\n    categoryAxisModel = result.categoryAxesModels[categoryDim.name];\n  }\n\n  if (categoryAxisModel) {\n    // FIXME Two category axis\n    var categories = categoryAxisModel.getCategories();\n\n    if (categories) {\n      var dataLen = data.length; // Ordered data is given explicitly like\n      // [[3, 0.2], [1, 0.3], [2, 0.15]]\n      // or given scatter data,\n      // pick the category\n\n      if (zrUtil.isArray(data[0]) && data[0].length > 1) {\n        nameList = [];\n\n        for (var i = 0; i < dataLen; i++) {\n          nameList[i] = categories[data[i][result.categoryIndex || 0]];\n        }\n      } else {\n        nameList = categories.slice(0);\n      }\n    }\n  }\n\n  return nameList;\n}\n\nvar _default = createListFromArray;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/helper/createListFromArray.js\n// module id = 1565\n// module chunks = 2 3","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar _format = require(\"../util/format\");\n\nvar formatTime = _format.formatTime;\nvar encodeHTML = _format.encodeHTML;\nvar addCommas = _format.addCommas;\nvar getTooltipMarker = _format.getTooltipMarker;\n\nvar _clazz = require(\"../util/clazz\");\n\nvar set = _clazz.set;\nvar get = _clazz.get;\n\nvar modelUtil = require(\"../util/model\");\n\nvar ComponentModel = require(\"./Component\");\n\nvar colorPaletteMixin = require(\"./mixin/colorPalette\");\n\nvar _layout = require(\"../util/layout\");\n\nvar getLayoutParams = _layout.getLayoutParams;\nvar mergeLayoutParam = _layout.mergeLayoutParam;\nvar SeriesModel = ComponentModel.extend({\n  type: 'series.__base__',\n\n  /**\n   * @readOnly\n   */\n  seriesIndex: 0,\n  // coodinateSystem will be injected in the echarts/CoordinateSystem\n  coordinateSystem: null,\n\n  /**\n   * @type {Object}\n   * @protected\n   */\n  defaultOption: null,\n\n  /**\n   * Data provided for legend\n   * @type {Function}\n   */\n  // PENDING\n  legendDataProvider: null,\n\n  /**\n   * Access path of color for visual\n   */\n  visualColorAccessPath: 'itemStyle.normal.color',\n\n  /**\n   * Support merge layout params.\n   * Only support 'box' now (left/right/top/bottom/width/height).\n   * @type {string|Object} Object can be {ignoreSize: true}\n   * @readOnly\n   */\n  layoutMode: null,\n  init: function (option, parentModel, ecModel, extraOpt) {\n    /**\n     * @type {number}\n     * @readOnly\n     */\n    this.seriesIndex = this.componentIndex;\n    this.mergeDefaultAndTheme(option, ecModel);\n    var data = this.getInitialData(option, ecModel);\n\n    /**\n     * @type {module:echarts/data/List|module:echarts/data/Tree|module:echarts/data/Graph}\n     * @private\n     */\n    set(this, 'dataBeforeProcessed', data); // If we reverse the order (make data firstly, and then make\n    // dataBeforeProcessed by cloneShallow), cloneShallow will\n    // cause data.graph.data !== data when using\n    // module:echarts/data/Graph or module:echarts/data/Tree.\n    // See module:echarts/data/helper/linkList\n\n    this.restoreData();\n  },\n\n  /**\n   * Util for merge default and theme to option\n   * @param  {Object} option\n   * @param  {module:echarts/model/Global} ecModel\n   */\n  mergeDefaultAndTheme: function (option, ecModel) {\n    var layoutMode = this.layoutMode;\n    var inputPositionParams = layoutMode ? getLayoutParams(option) : {}; // Backward compat: using subType on theme.\n    // But if name duplicate between series subType\n    // (for example: parallel) add component mainType,\n    // add suffix 'Series'.\n\n    var themeSubType = this.subType;\n\n    if (ComponentModel.hasClass(themeSubType)) {\n      themeSubType += 'Series';\n    }\n\n    zrUtil.merge(option, ecModel.getTheme().get(this.subType));\n    zrUtil.merge(option, this.getDefaultOption()); // Default label emphasis `show`\n\n    modelUtil.defaultEmphasis(option.label, ['show']);\n    this.fillDataTextStyle(option.data);\n\n    if (layoutMode) {\n      mergeLayoutParam(option, inputPositionParams, layoutMode);\n    }\n  },\n  mergeOption: function (newSeriesOption, ecModel) {\n    newSeriesOption = zrUtil.merge(this.option, newSeriesOption, true);\n    this.fillDataTextStyle(newSeriesOption.data);\n    var layoutMode = this.layoutMode;\n\n    if (layoutMode) {\n      mergeLayoutParam(this.option, newSeriesOption, layoutMode);\n    }\n\n    var data = this.getInitialData(newSeriesOption, ecModel); // TODO Merge data?\n\n    if (data) {\n      set(this, 'data', data);\n      set(this, 'dataBeforeProcessed', data.cloneShallow());\n    }\n  },\n  fillDataTextStyle: function (data) {\n    // Default data label emphasis `show`\n    // FIXME Tree structure data ?\n    // FIXME Performance ?\n    if (data) {\n      var props = ['show'];\n\n      for (var i = 0; i < data.length; i++) {\n        if (data[i] && data[i].label) {\n          modelUtil.defaultEmphasis(data[i].label, props);\n        }\n      }\n    }\n  },\n\n  /**\n   * Init a data structure from data related option in series\n   * Must be overwritten\n   */\n  getInitialData: function () {},\n\n  /**\n   * @param {string} [dataType]\n   * @return {module:echarts/data/List}\n   */\n  getData: function (dataType) {\n    var data = get(this, 'data');\n    return dataType == null ? data : data.getLinkedData(dataType);\n  },\n\n  /**\n   * @param {module:echarts/data/List} data\n   */\n  setData: function (data) {\n    set(this, 'data', data);\n  },\n\n  /**\n   * Get data before processed\n   * @return {module:echarts/data/List}\n   */\n  getRawData: function () {\n    return get(this, 'dataBeforeProcessed');\n  },\n\n  /**\n   * Coord dimension to data dimension.\n   *\n   * By default the result is the same as dimensions of series data.\n   * But in some series data dimensions are different from coord dimensions (i.e.\n   * candlestick and boxplot). Override this method to handle those cases.\n   *\n   * Coord dimension to data dimension can be one-to-many\n   *\n   * @param {string} coordDim\n   * @return {Array.<string>} dimensions on the axis.\n   */\n  coordDimToDataDim: function (coordDim) {\n    return modelUtil.coordDimToDataDim(this.getData(), coordDim);\n  },\n\n  /**\n   * Convert data dimension to coord dimension.\n   *\n   * @param {string|number} dataDim\n   * @return {string}\n   */\n  dataDimToCoordDim: function (dataDim) {\n    return modelUtil.dataDimToCoordDim(this.getData(), dataDim);\n  },\n\n  /**\n   * Get base axis if has coordinate system and has axis.\n   * By default use coordSys.getBaseAxis();\n   * Can be overrided for some chart.\n   * @return {type} description\n   */\n  getBaseAxis: function () {\n    var coordSys = this.coordinateSystem;\n    return coordSys && coordSys.getBaseAxis && coordSys.getBaseAxis();\n  },\n  // FIXME\n\n  /**\n   * Default tooltip formatter\n   *\n   * @param {number} dataIndex\n   * @param {boolean} [multipleSeries=false]\n   * @param {number} [dataType]\n   */\n  formatTooltip: function (dataIndex, multipleSeries, dataType) {\n    function formatArrayValue(value) {\n      var vertially = zrUtil.reduce(value, function (vertially, val, idx) {\n        var dimItem = data.getDimensionInfo(idx);\n        return vertially |= dimItem && dimItem.tooltip !== false && dimItem.tooltipName != null;\n      }, 0);\n      var result = [];\n      var tooltipDims = modelUtil.otherDimToDataDim(data, 'tooltip');\n      tooltipDims.length ? zrUtil.each(tooltipDims, function (dimIdx) {\n        setEachItem(data.get(dimIdx, dataIndex), dimIdx);\n      }) // By default, all dims is used on tooltip.\n      : zrUtil.each(value, setEachItem);\n\n      function setEachItem(val, dimIdx) {\n        var dimInfo = data.getDimensionInfo(dimIdx); // If `dimInfo.tooltip` is not set, show tooltip.\n\n        if (!dimInfo || dimInfo.otherDims.tooltip === false) {\n          return;\n        }\n\n        var dimType = dimInfo.type;\n        var valStr = (vertially ? '- ' + (dimInfo.tooltipName || dimInfo.name) + ': ' : '') + (dimType === 'ordinal' ? val + '' : dimType === 'time' ? multipleSeries ? '' : formatTime('yyyy/MM/dd hh:mm:ss', val) : addCommas(val));\n        valStr && result.push(encodeHTML(valStr));\n      }\n\n      return (vertially ? '<br/>' : '') + result.join(vertially ? '<br/>' : ', ');\n    }\n\n    var data = get(this, 'data');\n    var value = this.getRawValue(dataIndex);\n    var formattedValue = zrUtil.isArray(value) ? formatArrayValue(value) : encodeHTML(addCommas(value));\n    var name = data.getName(dataIndex);\n    var color = data.getItemVisual(dataIndex, 'color');\n\n    if (zrUtil.isObject(color) && color.colorStops) {\n      color = (color.colorStops[0] || {}).color;\n    }\n\n    color = color || 'transparent';\n    var colorEl = getTooltipMarker(color);\n    var seriesName = this.name; // FIXME\n\n    if (seriesName === '\\0-') {\n      // Not show '-'\n      seriesName = '';\n    }\n\n    seriesName = seriesName ? encodeHTML(seriesName) + (!multipleSeries ? '<br/>' : ': ') : '';\n    return !multipleSeries ? seriesName + colorEl + (name ? encodeHTML(name) + ': ' + formattedValue : formattedValue) : colorEl + seriesName + formattedValue;\n  },\n\n  /**\n   * @return {boolean}\n   */\n  isAnimationEnabled: function () {\n    if (env.node) {\n      return false;\n    }\n\n    var animationEnabled = this.getShallow('animation');\n\n    if (animationEnabled) {\n      if (this.getData().count() > this.getShallow('animationThreshold')) {\n        animationEnabled = false;\n      }\n    }\n\n    return animationEnabled;\n  },\n  restoreData: function () {\n    set(this, 'data', get(this, 'dataBeforeProcessed').cloneShallow());\n  },\n  getColorFromPalette: function (name, scope) {\n    var ecModel = this.ecModel; // PENDING\n\n    var color = colorPaletteMixin.getColorFromPalette.call(this, name, scope);\n\n    if (!color) {\n      color = ecModel.getColorFromPalette(name, scope);\n    }\n\n    return color;\n  },\n\n  /**\n   * Get data indices for show tooltip content. See tooltip.\n   * @abstract\n   * @param {Array.<string>|string} dim\n   * @param {Array.<number>} value\n   * @param {module:echarts/coord/single/SingleAxis} baseAxis\n   * @return {Object} {dataIndices, nestestValue}.\n   */\n  getAxisTooltipData: null,\n\n  /**\n   * See tooltip.\n   * @abstract\n   * @param {number} dataIndex\n   * @return {Array.<number>} Point of tooltip. null/undefined can be returned.\n   */\n  getTooltipPosition: null\n});\nzrUtil.mixin(SeriesModel, modelUtil.dataFormatMixin);\nzrUtil.mixin(SeriesModel, colorPaletteMixin);\nvar _default = SeriesModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/Series.js\n// module id = 1566\n// module chunks = 2 3","var numberUtil = require(\"../util/number\");\n\nvar formatUtil = require(\"../util/format\");\n\nvar Scale = require(\"./Scale\");\n\nvar helper = require(\"./helper\");\n\n/**\n * Interval scale\n * @module echarts/scale/Interval\n */\nvar roundNumber = numberUtil.round;\n/**\n * @alias module:echarts/coord/scale/Interval\n * @constructor\n */\n\nvar IntervalScale = Scale.extend({\n  type: 'interval',\n  _interval: 0,\n  _intervalPrecision: 2,\n  setExtent: function (start, end) {\n    var thisExtent = this._extent; //start,end may be a Number like '25',so...\n\n    if (!isNaN(start)) {\n      thisExtent[0] = parseFloat(start);\n    }\n\n    if (!isNaN(end)) {\n      thisExtent[1] = parseFloat(end);\n    }\n  },\n  unionExtent: function (other) {\n    var extent = this._extent;\n    other[0] < extent[0] && (extent[0] = other[0]);\n    other[1] > extent[1] && (extent[1] = other[1]); // unionExtent may called by it's sub classes\n\n    IntervalScale.prototype.setExtent.call(this, extent[0], extent[1]);\n  },\n\n  /**\n   * Get interval\n   */\n  getInterval: function () {\n    return this._interval;\n  },\n\n  /**\n   * Set interval\n   */\n  setInterval: function (interval) {\n    this._interval = interval; // Dropped auto calculated niceExtent and use user setted extent\n    // We assume user wan't to set both interval, min, max to get a better result\n\n    this._niceExtent = this._extent.slice();\n    this._intervalPrecision = helper.getIntervalPrecision(interval);\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getTicks: function () {\n    return helper.intervalScaleGetTicks(this._interval, this._extent, this._niceExtent, this._intervalPrecision);\n  },\n\n  /**\n   * @return {Array.<string>}\n   */\n  getTicksLabels: function () {\n    var labels = [];\n    var ticks = this.getTicks();\n\n    for (var i = 0; i < ticks.length; i++) {\n      labels.push(this.getLabel(ticks[i]));\n    }\n\n    return labels;\n  },\n\n  /**\n   * @param {number} data\n   * @param {Object} [opt]\n   * @param {number|string} [opt.precision] If 'auto', use nice presision.\n   * @param {boolean} [opt.pad] returns 1.50 but not 1.5 if precision is 2.\n   * @return {string}\n   */\n  getLabel: function (data, opt) {\n    if (data == null) {\n      return '';\n    }\n\n    var precision = opt && opt.precision;\n\n    if (precision == null) {\n      precision = numberUtil.getPrecisionSafe(data) || 0;\n    } else if (precision === 'auto') {\n      // Should be more precise then tick.\n      precision = this._intervalPrecision;\n    } // (1) If `precision` is set, 12.005 should be display as '12.00500'.\n    // (2) Use roundNumber (toFixed) to avoid scientific notation like '3.5e-7'.\n\n\n    data = roundNumber(data, precision, true);\n    return formatUtil.addCommas(data);\n  },\n\n  /**\n   * Update interval and extent of intervals for nice ticks\n   *\n   * @param {number} [splitNumber = 5] Desired number of ticks\n   * @param {number} [minInterval]\n   * @param {number} [maxInterval]\n   */\n  niceTicks: function (splitNumber, minInterval, maxInterval) {\n    splitNumber = splitNumber || 5;\n    var extent = this._extent;\n    var span = extent[1] - extent[0];\n\n    if (!isFinite(span)) {\n      return;\n    } // User may set axis min 0 and data are all negative\n    // FIXME If it needs to reverse ?\n\n\n    if (span < 0) {\n      span = -span;\n      extent.reverse();\n    }\n\n    var result = helper.intervalScaleNiceTicks(extent, splitNumber, minInterval, maxInterval);\n    this._intervalPrecision = result.intervalPrecision;\n    this._interval = result.interval;\n    this._niceExtent = result.niceTickExtent;\n  },\n\n  /**\n   * Nice extent.\n   * @param {Object} opt\n   * @param {number} [opt.splitNumber = 5] Given approx tick number\n   * @param {boolean} [opt.fixMin=false]\n   * @param {boolean} [opt.fixMax=false]\n   * @param {boolean} [opt.minInterval]\n   * @param {boolean} [opt.maxInterval]\n   */\n  niceExtent: function (opt) {\n    var extent = this._extent; // If extent start and end are same, expand them\n\n    if (extent[0] === extent[1]) {\n      if (extent[0] !== 0) {\n        // Expand extent\n        var expandSize = extent[0]; // In the fowllowing case\n        //      Axis has been fixed max 100\n        //      Plus data are all 100 and axis extent are [100, 100].\n        // Extend to the both side will cause expanded max is larger than fixed max.\n        // So only expand to the smaller side.\n\n        if (!opt.fixMax) {\n          extent[1] += expandSize / 2;\n          extent[0] -= expandSize / 2;\n        } else {\n          extent[0] -= expandSize / 2;\n        }\n      } else {\n        extent[1] = 1;\n      }\n    }\n\n    var span = extent[1] - extent[0]; // If there are no data and extent are [Infinity, -Infinity]\n\n    if (!isFinite(span)) {\n      extent[0] = 0;\n      extent[1] = 1;\n    }\n\n    this.niceTicks(opt.splitNumber, opt.minInterval, opt.maxInterval); // var extent = this._extent;\n\n    var interval = this._interval;\n\n    if (!opt.fixMin) {\n      extent[0] = roundNumber(Math.floor(extent[0] / interval) * interval);\n    }\n\n    if (!opt.fixMax) {\n      extent[1] = roundNumber(Math.ceil(extent[1] / interval) * interval);\n    }\n  }\n});\n/**\n * @return {module:echarts/scale/Time}\n */\n\nIntervalScale.create = function () {\n  return new IntervalScale();\n};\n\nvar _default = IntervalScale;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/scale/Interval.js\n// module id = 1567\n// module chunks = 2 3","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _clazz = require(\"./clazz\");\n\nvar parseClassType = _clazz.parseClassType;\nvar base = 0;\nvar DELIMITER = '_';\n/**\n * @public\n * @param {string} type\n * @return {string}\n */\n\nfunction getUID(type) {\n  // Considering the case of crossing js context,\n  // use Math.random to make id as unique as possible.\n  return [type || '', base++, Math.random()].join(DELIMITER);\n}\n/**\n * @inner\n */\n\n\nfunction enableSubTypeDefaulter(entity) {\n  var subTypeDefaulters = {};\n\n  entity.registerSubTypeDefaulter = function (componentType, defaulter) {\n    componentType = parseClassType(componentType);\n    subTypeDefaulters[componentType.main] = defaulter;\n  };\n\n  entity.determineSubType = function (componentType, option) {\n    var type = option.type;\n\n    if (!type) {\n      var componentTypeMain = parseClassType(componentType).main;\n\n      if (entity.hasSubTypes(componentType) && subTypeDefaulters[componentTypeMain]) {\n        type = subTypeDefaulters[componentTypeMain](option);\n      }\n    }\n\n    return type;\n  };\n\n  return entity;\n}\n/**\n * Topological travel on Activity Network (Activity On Vertices).\n * Dependencies is defined in Model.prototype.dependencies, like ['xAxis', 'yAxis'].\n *\n * If 'xAxis' or 'yAxis' is absent in componentTypeList, just ignore it in topology.\n *\n * If there is circle dependencey, Error will be thrown.\n *\n */\n\n\nfunction enableTopologicalTravel(entity, dependencyGetter) {\n  /**\n   * @public\n   * @param {Array.<string>} targetNameList Target Component type list.\n   *                                           Can be ['aa', 'bb', 'aa.xx']\n   * @param {Array.<string>} fullNameList By which we can build dependency graph.\n   * @param {Function} callback Params: componentType, dependencies.\n   * @param {Object} context Scope of callback.\n   */\n  entity.topologicalTravel = function (targetNameList, fullNameList, callback, context) {\n    if (!targetNameList.length) {\n      return;\n    }\n\n    var result = makeDepndencyGraph(fullNameList);\n    var graph = result.graph;\n    var stack = result.noEntryList;\n    var targetNameSet = {};\n    zrUtil.each(targetNameList, function (name) {\n      targetNameSet[name] = true;\n    });\n\n    while (stack.length) {\n      var currComponentType = stack.pop();\n      var currVertex = graph[currComponentType];\n      var isInTargetNameSet = !!targetNameSet[currComponentType];\n\n      if (isInTargetNameSet) {\n        callback.call(context, currComponentType, currVertex.originalDeps.slice());\n        delete targetNameSet[currComponentType];\n      }\n\n      zrUtil.each(currVertex.successor, isInTargetNameSet ? removeEdgeAndAdd : removeEdge);\n    }\n\n    zrUtil.each(targetNameSet, function () {\n      throw new Error('Circle dependency may exists');\n    });\n\n    function removeEdge(succComponentType) {\n      graph[succComponentType].entryCount--;\n\n      if (graph[succComponentType].entryCount === 0) {\n        stack.push(succComponentType);\n      }\n    } // Consider this case: legend depends on series, and we call\n    // chart.setOption({series: [...]}), where only series is in option.\n    // If we do not have 'removeEdgeAndAdd', legendModel.mergeOption will\n    // not be called, but only sereis.mergeOption is called. Thus legend\n    // have no chance to update its local record about series (like which\n    // name of series is available in legend).\n\n\n    function removeEdgeAndAdd(succComponentType) {\n      targetNameSet[succComponentType] = true;\n      removeEdge(succComponentType);\n    }\n  };\n  /**\n   * DepndencyGraph: {Object}\n   * key: conponentType,\n   * value: {\n   *     successor: [conponentTypes...],\n   *     originalDeps: [conponentTypes...],\n   *     entryCount: {number}\n   * }\n   */\n\n\n  function makeDepndencyGraph(fullNameList) {\n    var graph = {};\n    var noEntryList = [];\n    zrUtil.each(fullNameList, function (name) {\n      var thisItem = createDependencyGraphItem(graph, name);\n      var originalDeps = thisItem.originalDeps = dependencyGetter(name);\n      var availableDeps = getAvailableDependencies(originalDeps, fullNameList);\n      thisItem.entryCount = availableDeps.length;\n\n      if (thisItem.entryCount === 0) {\n        noEntryList.push(name);\n      }\n\n      zrUtil.each(availableDeps, function (dependentName) {\n        if (zrUtil.indexOf(thisItem.predecessor, dependentName) < 0) {\n          thisItem.predecessor.push(dependentName);\n        }\n\n        var thatItem = createDependencyGraphItem(graph, dependentName);\n\n        if (zrUtil.indexOf(thatItem.successor, dependentName) < 0) {\n          thatItem.successor.push(name);\n        }\n      });\n    });\n    return {\n      graph: graph,\n      noEntryList: noEntryList\n    };\n  }\n\n  function createDependencyGraphItem(graph, name) {\n    if (!graph[name]) {\n      graph[name] = {\n        predecessor: [],\n        successor: []\n      };\n    }\n\n    return graph[name];\n  }\n\n  function getAvailableDependencies(originalDeps, fullNameList) {\n    var availableDeps = [];\n    zrUtil.each(originalDeps, function (dep) {\n      zrUtil.indexOf(fullNameList, dep) >= 0 && availableDeps.push(dep);\n    });\n    return availableDeps;\n  }\n}\n\nexports.getUID = getUID;\nexports.enableSubTypeDefaulter = enableSubTypeDefaulter;\nexports.enableTopologicalTravel = enableTopologicalTravel;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/component.js\n// module id = 1568\n// module chunks = 2 3","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"./graphic\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\n// Symbol factory\n\n/**\n * Triangle shape\n * @inner\n */\nvar Triangle = graphic.extendShape({\n  type: 'triangle',\n  shape: {\n    cx: 0,\n    cy: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (path, shape) {\n    var cx = shape.cx;\n    var cy = shape.cy;\n    var width = shape.width / 2;\n    var height = shape.height / 2;\n    path.moveTo(cx, cy - height);\n    path.lineTo(cx + width, cy + height);\n    path.lineTo(cx - width, cy + height);\n    path.closePath();\n  }\n});\n/**\n * Diamond shape\n * @inner\n */\n\nvar Diamond = graphic.extendShape({\n  type: 'diamond',\n  shape: {\n    cx: 0,\n    cy: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (path, shape) {\n    var cx = shape.cx;\n    var cy = shape.cy;\n    var width = shape.width / 2;\n    var height = shape.height / 2;\n    path.moveTo(cx, cy - height);\n    path.lineTo(cx + width, cy);\n    path.lineTo(cx, cy + height);\n    path.lineTo(cx - width, cy);\n    path.closePath();\n  }\n});\n/**\n * Pin shape\n * @inner\n */\n\nvar Pin = graphic.extendShape({\n  type: 'pin',\n  shape: {\n    // x, y on the cusp\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (path, shape) {\n    var x = shape.x;\n    var y = shape.y;\n    var w = shape.width / 5 * 3; // Height must be larger than width\n\n    var h = Math.max(w, shape.height);\n    var r = w / 2; // Dist on y with tangent point and circle center\n\n    var dy = r * r / (h - r);\n    var cy = y - h + r + dy;\n    var angle = Math.asin(dy / r); // Dist on x with tangent point and circle center\n\n    var dx = Math.cos(angle) * r;\n    var tanX = Math.sin(angle);\n    var tanY = Math.cos(angle);\n    var cpLen = r * 0.6;\n    var cpLen2 = r * 0.7;\n    path.moveTo(x - dx, cy + dy);\n    path.arc(x, cy, r, Math.PI - angle, Math.PI * 2 + angle);\n    path.bezierCurveTo(x + dx - tanX * cpLen, cy + dy + tanY * cpLen, x, y - cpLen2, x, y);\n    path.bezierCurveTo(x, y - cpLen2, x - dx + tanX * cpLen, cy + dy + tanY * cpLen, x - dx, cy + dy);\n    path.closePath();\n  }\n});\n/**\n * Arrow shape\n * @inner\n */\n\nvar Arrow = graphic.extendShape({\n  type: 'arrow',\n  shape: {\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (ctx, shape) {\n    var height = shape.height;\n    var width = shape.width;\n    var x = shape.x;\n    var y = shape.y;\n    var dx = width / 3 * 2;\n    ctx.moveTo(x, y);\n    ctx.lineTo(x + dx, y + height);\n    ctx.lineTo(x, y + height / 4 * 3);\n    ctx.lineTo(x - dx, y + height);\n    ctx.lineTo(x, y);\n    ctx.closePath();\n  }\n});\n/**\n * Map of path contructors\n * @type {Object.<string, module:zrender/graphic/Path>}\n */\n\nvar symbolCtors = {\n  line: graphic.Line,\n  rect: graphic.Rect,\n  roundRect: graphic.Rect,\n  square: graphic.Rect,\n  circle: graphic.Circle,\n  diamond: Diamond,\n  pin: Pin,\n  arrow: Arrow,\n  triangle: Triangle\n};\nvar symbolShapeMakers = {\n  line: function (x, y, w, h, shape) {\n    // FIXME\n    shape.x1 = x;\n    shape.y1 = y + h / 2;\n    shape.x2 = x + w;\n    shape.y2 = y + h / 2;\n  },\n  rect: function (x, y, w, h, shape) {\n    shape.x = x;\n    shape.y = y;\n    shape.width = w;\n    shape.height = h;\n  },\n  roundRect: function (x, y, w, h, shape) {\n    shape.x = x;\n    shape.y = y;\n    shape.width = w;\n    shape.height = h;\n    shape.r = Math.min(w, h) / 4;\n  },\n  square: function (x, y, w, h, shape) {\n    var size = Math.min(w, h);\n    shape.x = x;\n    shape.y = y;\n    shape.width = size;\n    shape.height = size;\n  },\n  circle: function (x, y, w, h, shape) {\n    // Put circle in the center of square\n    shape.cx = x + w / 2;\n    shape.cy = y + h / 2;\n    shape.r = Math.min(w, h) / 2;\n  },\n  diamond: function (x, y, w, h, shape) {\n    shape.cx = x + w / 2;\n    shape.cy = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  },\n  pin: function (x, y, w, h, shape) {\n    shape.x = x + w / 2;\n    shape.y = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  },\n  arrow: function (x, y, w, h, shape) {\n    shape.x = x + w / 2;\n    shape.y = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  },\n  triangle: function (x, y, w, h, shape) {\n    shape.cx = x + w / 2;\n    shape.cy = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  }\n};\nvar symbolBuildProxies = {};\nzrUtil.each(symbolCtors, function (Ctor, name) {\n  symbolBuildProxies[name] = new Ctor();\n});\nvar SymbolClz = graphic.extendShape({\n  type: 'symbol',\n  shape: {\n    symbolType: '',\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  beforeBrush: function () {\n    var style = this.style;\n    var shape = this.shape; // FIXME\n\n    if (shape.symbolType === 'pin' && style.textPosition === 'inside') {\n      style.textPosition = ['50%', '40%'];\n      style.textAlign = 'center';\n      style.textVerticalAlign = 'middle';\n    }\n  },\n  buildPath: function (ctx, shape, inBundle) {\n    var symbolType = shape.symbolType;\n    var proxySymbol = symbolBuildProxies[symbolType];\n\n    if (shape.symbolType !== 'none') {\n      if (!proxySymbol) {\n        // Default rect\n        symbolType = 'rect';\n        proxySymbol = symbolBuildProxies[symbolType];\n      }\n\n      symbolShapeMakers[symbolType](shape.x, shape.y, shape.width, shape.height, proxySymbol.shape);\n      proxySymbol.buildPath(ctx, proxySymbol.shape, inBundle);\n    }\n  }\n}); // Provide setColor helper method to avoid determine if set the fill or stroke outside\n\nfunction symbolPathSetColor(color, innerColor) {\n  if (this.type !== 'image') {\n    var symbolStyle = this.style;\n    var symbolShape = this.shape;\n\n    if (symbolShape && symbolShape.symbolType === 'line') {\n      symbolStyle.stroke = color;\n    } else if (this.__isEmptyBrush) {\n      symbolStyle.stroke = color;\n      symbolStyle.fill = innerColor || '#fff';\n    } else {\n      // FIXME 判断图形默认是填充还是描边，使用 onlyStroke ?\n      symbolStyle.fill && (symbolStyle.fill = color);\n      symbolStyle.stroke && (symbolStyle.stroke = color);\n    }\n\n    this.dirty(false);\n  }\n}\n/**\n * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\n * @param {string} symbolType\n * @param {number} x\n * @param {number} y\n * @param {number} w\n * @param {number} h\n * @param {string} color\n * @param {boolean} [keepAspect=false] whether to keep the ratio of w/h,\n *                            for path and image only.\n */\n\n\nfunction createSymbol(symbolType, x, y, w, h, color, keepAspect) {\n  // TODO Support image object, DynamicImage.\n  var isEmpty = symbolType.indexOf('empty') === 0;\n\n  if (isEmpty) {\n    symbolType = symbolType.substr(5, 1).toLowerCase() + symbolType.substr(6);\n  }\n\n  var symbolPath;\n\n  if (symbolType.indexOf('image://') === 0) {\n    symbolPath = graphic.makeImage(symbolType.slice(8), new BoundingRect(x, y, w, h), keepAspect ? 'center' : 'cover');\n  } else if (symbolType.indexOf('path://') === 0) {\n    symbolPath = graphic.makePath(symbolType.slice(7), {}, new BoundingRect(x, y, w, h), keepAspect ? 'center' : 'cover');\n  } else {\n    symbolPath = new SymbolClz({\n      shape: {\n        symbolType: symbolType,\n        x: x,\n        y: y,\n        width: w,\n        height: h\n      }\n    });\n  }\n\n  symbolPath.__isEmptyBrush = isEmpty;\n  symbolPath.setColor = symbolPathSetColor;\n  symbolPath.setColor(color);\n  return symbolPath;\n}\n\nexports.createSymbol = createSymbol;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/symbol.js\n// module id = 1569\n// module chunks = 2 3","var ORIGIN_METHOD = '\\0__throttleOriginMethod';\nvar RATE = '\\0__throttleRate';\nvar THROTTLE_TYPE = '\\0__throttleType';\n/**\n * @public\n * @param {(Function)} fn\n * @param {number} [delay=0] Unit: ms.\n * @param {boolean} [debounce=false]\n *        true: If call interval less than `delay`, only the last call works.\n *        false: If call interval less than `delay, call works on fixed rate.\n * @return {(Function)} throttled fn.\n */\n\nfunction throttle(fn, delay, debounce) {\n  var currCall;\n  var lastCall = 0;\n  var lastExec = 0;\n  var timer = null;\n  var diff;\n  var scope;\n  var args;\n  var debounceNextCall;\n  delay = delay || 0;\n\n  function exec() {\n    lastExec = new Date().getTime();\n    timer = null;\n    fn.apply(scope, args || []);\n  }\n\n  var cb = function () {\n    currCall = new Date().getTime();\n    scope = this;\n    args = arguments;\n    var thisDelay = debounceNextCall || delay;\n    var thisDebounce = debounceNextCall || debounce;\n    debounceNextCall = null;\n    diff = currCall - (thisDebounce ? lastCall : lastExec) - thisDelay;\n    clearTimeout(timer);\n\n    if (thisDebounce) {\n      timer = setTimeout(exec, thisDelay);\n    } else {\n      if (diff >= 0) {\n        exec();\n      } else {\n        timer = setTimeout(exec, -diff);\n      }\n    }\n\n    lastCall = currCall;\n  };\n  /**\n   * Clear throttle.\n   * @public\n   */\n\n\n  cb.clear = function () {\n    if (timer) {\n      clearTimeout(timer);\n      timer = null;\n    }\n  };\n  /**\n   * Enable debounce once.\n   */\n\n\n  cb.debounceNextCall = function (debounceDelay) {\n    debounceNextCall = debounceDelay;\n  };\n\n  return cb;\n}\n/**\n * Create throttle method or update throttle rate.\n *\n * @example\n * ComponentView.prototype.render = function () {\n *     ...\n *     throttle.createOrUpdate(\n *         this,\n *         '_dispatchAction',\n *         this.model.get('throttle'),\n *         'fixRate'\n *     );\n * };\n * ComponentView.prototype.remove = function () {\n *     throttle.clear(this, '_dispatchAction');\n * };\n * ComponentView.prototype.dispose = function () {\n *     throttle.clear(this, '_dispatchAction');\n * };\n *\n * @public\n * @param {Object} obj\n * @param {string} fnAttr\n * @param {number} [rate]\n * @param {string} [throttleType='fixRate'] 'fixRate' or 'debounce'\n * @return {Function} throttled function.\n */\n\n\nfunction createOrUpdate(obj, fnAttr, rate, throttleType) {\n  var fn = obj[fnAttr];\n\n  if (!fn) {\n    return;\n  }\n\n  var originFn = fn[ORIGIN_METHOD] || fn;\n  var lastThrottleType = fn[THROTTLE_TYPE];\n  var lastRate = fn[RATE];\n\n  if (lastRate !== rate || lastThrottleType !== throttleType) {\n    if (rate == null || !throttleType) {\n      return obj[fnAttr] = originFn;\n    }\n\n    fn = obj[fnAttr] = throttle(originFn, rate, throttleType === 'debounce');\n    fn[ORIGIN_METHOD] = originFn;\n    fn[THROTTLE_TYPE] = throttleType;\n    fn[RATE] = rate;\n  }\n\n  return fn;\n}\n/**\n * Clear throttle. Example see throttle.createOrUpdate.\n *\n * @public\n * @param {Object} obj\n * @param {string} fnAttr\n */\n\n\nfunction clear(obj, fnAttr) {\n  var fn = obj[fnAttr];\n\n  if (fn && fn[ORIGIN_METHOD]) {\n    obj[fnAttr] = fn[ORIGIN_METHOD];\n  }\n}\n\nexports.throttle = throttle;\nexports.createOrUpdate = createOrUpdate;\nexports.clear = clear;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/throttle.js\n// module id = 1570\n// module chunks = 2 3","// https://github.com/mziccard/node-timsort\nvar DEFAULT_MIN_MERGE = 32;\nvar DEFAULT_MIN_GALLOPING = 7;\nvar DEFAULT_TMP_STORAGE_LENGTH = 256;\n\nfunction minRunLength(n) {\n  var r = 0;\n\n  while (n >= DEFAULT_MIN_MERGE) {\n    r |= n & 1;\n    n >>= 1;\n  }\n\n  return n + r;\n}\n\nfunction makeAscendingRun(array, lo, hi, compare) {\n  var runHi = lo + 1;\n\n  if (runHi === hi) {\n    return 1;\n  }\n\n  if (compare(array[runHi++], array[lo]) < 0) {\n    while (runHi < hi && compare(array[runHi], array[runHi - 1]) < 0) {\n      runHi++;\n    }\n\n    reverseRun(array, lo, runHi);\n  } else {\n    while (runHi < hi && compare(array[runHi], array[runHi - 1]) >= 0) {\n      runHi++;\n    }\n  }\n\n  return runHi - lo;\n}\n\nfunction reverseRun(array, lo, hi) {\n  hi--;\n\n  while (lo < hi) {\n    var t = array[lo];\n    array[lo++] = array[hi];\n    array[hi--] = t;\n  }\n}\n\nfunction binaryInsertionSort(array, lo, hi, start, compare) {\n  if (start === lo) {\n    start++;\n  }\n\n  for (; start < hi; start++) {\n    var pivot = array[start];\n    var left = lo;\n    var right = start;\n    var mid;\n\n    while (left < right) {\n      mid = left + right >>> 1;\n\n      if (compare(pivot, array[mid]) < 0) {\n        right = mid;\n      } else {\n        left = mid + 1;\n      }\n    }\n\n    var n = start - left;\n\n    switch (n) {\n      case 3:\n        array[left + 3] = array[left + 2];\n\n      case 2:\n        array[left + 2] = array[left + 1];\n\n      case 1:\n        array[left + 1] = array[left];\n        break;\n\n      default:\n        while (n > 0) {\n          array[left + n] = array[left + n - 1];\n          n--;\n        }\n\n    }\n\n    array[left] = pivot;\n  }\n}\n\nfunction gallopLeft(value, array, start, length, hint, compare) {\n  var lastOffset = 0;\n  var maxOffset = 0;\n  var offset = 1;\n\n  if (compare(value, array[start + hint]) > 0) {\n    maxOffset = length - hint;\n\n    while (offset < maxOffset && compare(value, array[start + hint + offset]) > 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    lastOffset += hint;\n    offset += hint;\n  } else {\n    maxOffset = hint + 1;\n\n    while (offset < maxOffset && compare(value, array[start + hint - offset]) <= 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    var tmp = lastOffset;\n    lastOffset = hint - offset;\n    offset = hint - tmp;\n  }\n\n  lastOffset++;\n\n  while (lastOffset < offset) {\n    var m = lastOffset + (offset - lastOffset >>> 1);\n\n    if (compare(value, array[start + m]) > 0) {\n      lastOffset = m + 1;\n    } else {\n      offset = m;\n    }\n  }\n\n  return offset;\n}\n\nfunction gallopRight(value, array, start, length, hint, compare) {\n  var lastOffset = 0;\n  var maxOffset = 0;\n  var offset = 1;\n\n  if (compare(value, array[start + hint]) < 0) {\n    maxOffset = hint + 1;\n\n    while (offset < maxOffset && compare(value, array[start + hint - offset]) < 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    var tmp = lastOffset;\n    lastOffset = hint - offset;\n    offset = hint - tmp;\n  } else {\n    maxOffset = length - hint;\n\n    while (offset < maxOffset && compare(value, array[start + hint + offset]) >= 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    lastOffset += hint;\n    offset += hint;\n  }\n\n  lastOffset++;\n\n  while (lastOffset < offset) {\n    var m = lastOffset + (offset - lastOffset >>> 1);\n\n    if (compare(value, array[start + m]) < 0) {\n      offset = m;\n    } else {\n      lastOffset = m + 1;\n    }\n  }\n\n  return offset;\n}\n\nfunction TimSort(array, compare) {\n  var minGallop = DEFAULT_MIN_GALLOPING;\n  var length = 0;\n  var tmpStorageLength = DEFAULT_TMP_STORAGE_LENGTH;\n  var stackLength = 0;\n  var runStart;\n  var runLength;\n  var stackSize = 0;\n  length = array.length;\n\n  if (length < 2 * DEFAULT_TMP_STORAGE_LENGTH) {\n    tmpStorageLength = length >>> 1;\n  }\n\n  var tmp = [];\n  stackLength = length < 120 ? 5 : length < 1542 ? 10 : length < 119151 ? 19 : 40;\n  runStart = [];\n  runLength = [];\n\n  function pushRun(_runStart, _runLength) {\n    runStart[stackSize] = _runStart;\n    runLength[stackSize] = _runLength;\n    stackSize += 1;\n  }\n\n  function mergeRuns() {\n    while (stackSize > 1) {\n      var n = stackSize - 2;\n\n      if (n >= 1 && runLength[n - 1] <= runLength[n] + runLength[n + 1] || n >= 2 && runLength[n - 2] <= runLength[n] + runLength[n - 1]) {\n        if (runLength[n - 1] < runLength[n + 1]) {\n          n--;\n        }\n      } else if (runLength[n] > runLength[n + 1]) {\n        break;\n      }\n\n      mergeAt(n);\n    }\n  }\n\n  function forceMergeRuns() {\n    while (stackSize > 1) {\n      var n = stackSize - 2;\n\n      if (n > 0 && runLength[n - 1] < runLength[n + 1]) {\n        n--;\n      }\n\n      mergeAt(n);\n    }\n  }\n\n  function mergeAt(i) {\n    var start1 = runStart[i];\n    var length1 = runLength[i];\n    var start2 = runStart[i + 1];\n    var length2 = runLength[i + 1];\n    runLength[i] = length1 + length2;\n\n    if (i === stackSize - 3) {\n      runStart[i + 1] = runStart[i + 2];\n      runLength[i + 1] = runLength[i + 2];\n    }\n\n    stackSize--;\n    var k = gallopRight(array[start2], array, start1, length1, 0, compare);\n    start1 += k;\n    length1 -= k;\n\n    if (length1 === 0) {\n      return;\n    }\n\n    length2 = gallopLeft(array[start1 + length1 - 1], array, start2, length2, length2 - 1, compare);\n\n    if (length2 === 0) {\n      return;\n    }\n\n    if (length1 <= length2) {\n      mergeLow(start1, length1, start2, length2);\n    } else {\n      mergeHigh(start1, length1, start2, length2);\n    }\n  }\n\n  function mergeLow(start1, length1, start2, length2) {\n    var i = 0;\n\n    for (i = 0; i < length1; i++) {\n      tmp[i] = array[start1 + i];\n    }\n\n    var cursor1 = 0;\n    var cursor2 = start2;\n    var dest = start1;\n    array[dest++] = array[cursor2++];\n\n    if (--length2 === 0) {\n      for (i = 0; i < length1; i++) {\n        array[dest + i] = tmp[cursor1 + i];\n      }\n\n      return;\n    }\n\n    if (length1 === 1) {\n      for (i = 0; i < length2; i++) {\n        array[dest + i] = array[cursor2 + i];\n      }\n\n      array[dest + length2] = tmp[cursor1];\n      return;\n    }\n\n    var _minGallop = minGallop;\n    var count1, count2, exit;\n\n    while (1) {\n      count1 = 0;\n      count2 = 0;\n      exit = false;\n\n      do {\n        if (compare(array[cursor2], tmp[cursor1]) < 0) {\n          array[dest++] = array[cursor2++];\n          count2++;\n          count1 = 0;\n\n          if (--length2 === 0) {\n            exit = true;\n            break;\n          }\n        } else {\n          array[dest++] = tmp[cursor1++];\n          count1++;\n          count2 = 0;\n\n          if (--length1 === 1) {\n            exit = true;\n            break;\n          }\n        }\n      } while ((count1 | count2) < _minGallop);\n\n      if (exit) {\n        break;\n      }\n\n      do {\n        count1 = gallopRight(array[cursor2], tmp, cursor1, length1, 0, compare);\n\n        if (count1 !== 0) {\n          for (i = 0; i < count1; i++) {\n            array[dest + i] = tmp[cursor1 + i];\n          }\n\n          dest += count1;\n          cursor1 += count1;\n          length1 -= count1;\n\n          if (length1 <= 1) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest++] = array[cursor2++];\n\n        if (--length2 === 0) {\n          exit = true;\n          break;\n        }\n\n        count2 = gallopLeft(tmp[cursor1], array, cursor2, length2, 0, compare);\n\n        if (count2 !== 0) {\n          for (i = 0; i < count2; i++) {\n            array[dest + i] = array[cursor2 + i];\n          }\n\n          dest += count2;\n          cursor2 += count2;\n          length2 -= count2;\n\n          if (length2 === 0) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest++] = tmp[cursor1++];\n\n        if (--length1 === 1) {\n          exit = true;\n          break;\n        }\n\n        _minGallop--;\n      } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n      if (exit) {\n        break;\n      }\n\n      if (_minGallop < 0) {\n        _minGallop = 0;\n      }\n\n      _minGallop += 2;\n    }\n\n    minGallop = _minGallop;\n    minGallop < 1 && (minGallop = 1);\n\n    if (length1 === 1) {\n      for (i = 0; i < length2; i++) {\n        array[dest + i] = array[cursor2 + i];\n      }\n\n      array[dest + length2] = tmp[cursor1];\n    } else if (length1 === 0) {\n      throw new Error(); // throw new Error('mergeLow preconditions were not respected');\n    } else {\n      for (i = 0; i < length1; i++) {\n        array[dest + i] = tmp[cursor1 + i];\n      }\n    }\n  }\n\n  function mergeHigh(start1, length1, start2, length2) {\n    var i = 0;\n\n    for (i = 0; i < length2; i++) {\n      tmp[i] = array[start2 + i];\n    }\n\n    var cursor1 = start1 + length1 - 1;\n    var cursor2 = length2 - 1;\n    var dest = start2 + length2 - 1;\n    var customCursor = 0;\n    var customDest = 0;\n    array[dest--] = array[cursor1--];\n\n    if (--length1 === 0) {\n      customCursor = dest - (length2 - 1);\n\n      for (i = 0; i < length2; i++) {\n        array[customCursor + i] = tmp[i];\n      }\n\n      return;\n    }\n\n    if (length2 === 1) {\n      dest -= length1;\n      cursor1 -= length1;\n      customDest = dest + 1;\n      customCursor = cursor1 + 1;\n\n      for (i = length1 - 1; i >= 0; i--) {\n        array[customDest + i] = array[customCursor + i];\n      }\n\n      array[dest] = tmp[cursor2];\n      return;\n    }\n\n    var _minGallop = minGallop;\n\n    while (true) {\n      var count1 = 0;\n      var count2 = 0;\n      var exit = false;\n\n      do {\n        if (compare(tmp[cursor2], array[cursor1]) < 0) {\n          array[dest--] = array[cursor1--];\n          count1++;\n          count2 = 0;\n\n          if (--length1 === 0) {\n            exit = true;\n            break;\n          }\n        } else {\n          array[dest--] = tmp[cursor2--];\n          count2++;\n          count1 = 0;\n\n          if (--length2 === 1) {\n            exit = true;\n            break;\n          }\n        }\n      } while ((count1 | count2) < _minGallop);\n\n      if (exit) {\n        break;\n      }\n\n      do {\n        count1 = length1 - gallopRight(tmp[cursor2], array, start1, length1, length1 - 1, compare);\n\n        if (count1 !== 0) {\n          dest -= count1;\n          cursor1 -= count1;\n          length1 -= count1;\n          customDest = dest + 1;\n          customCursor = cursor1 + 1;\n\n          for (i = count1 - 1; i >= 0; i--) {\n            array[customDest + i] = array[customCursor + i];\n          }\n\n          if (length1 === 0) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest--] = tmp[cursor2--];\n\n        if (--length2 === 1) {\n          exit = true;\n          break;\n        }\n\n        count2 = length2 - gallopLeft(array[cursor1], tmp, 0, length2, length2 - 1, compare);\n\n        if (count2 !== 0) {\n          dest -= count2;\n          cursor2 -= count2;\n          length2 -= count2;\n          customDest = dest + 1;\n          customCursor = cursor2 + 1;\n\n          for (i = 0; i < count2; i++) {\n            array[customDest + i] = tmp[customCursor + i];\n          }\n\n          if (length2 <= 1) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest--] = array[cursor1--];\n\n        if (--length1 === 0) {\n          exit = true;\n          break;\n        }\n\n        _minGallop--;\n      } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n      if (exit) {\n        break;\n      }\n\n      if (_minGallop < 0) {\n        _minGallop = 0;\n      }\n\n      _minGallop += 2;\n    }\n\n    minGallop = _minGallop;\n\n    if (minGallop < 1) {\n      minGallop = 1;\n    }\n\n    if (length2 === 1) {\n      dest -= length1;\n      cursor1 -= length1;\n      customDest = dest + 1;\n      customCursor = cursor1 + 1;\n\n      for (i = length1 - 1; i >= 0; i--) {\n        array[customDest + i] = array[customCursor + i];\n      }\n\n      array[dest] = tmp[cursor2];\n    } else if (length2 === 0) {\n      throw new Error(); // throw new Error('mergeHigh preconditions were not respected');\n    } else {\n      customCursor = dest - (length2 - 1);\n\n      for (i = 0; i < length2; i++) {\n        array[customCursor + i] = tmp[i];\n      }\n    }\n  }\n\n  this.mergeRuns = mergeRuns;\n  this.forceMergeRuns = forceMergeRuns;\n  this.pushRun = pushRun;\n}\n\nfunction sort(array, compare, lo, hi) {\n  if (!lo) {\n    lo = 0;\n  }\n\n  if (!hi) {\n    hi = array.length;\n  }\n\n  var remaining = hi - lo;\n\n  if (remaining < 2) {\n    return;\n  }\n\n  var runLength = 0;\n\n  if (remaining < DEFAULT_MIN_MERGE) {\n    runLength = makeAscendingRun(array, lo, hi, compare);\n    binaryInsertionSort(array, lo, hi, lo + runLength, compare);\n    return;\n  }\n\n  var ts = new TimSort(array, compare);\n  var minRun = minRunLength(remaining);\n\n  do {\n    runLength = makeAscendingRun(array, lo, hi, compare);\n\n    if (runLength < minRun) {\n      var force = remaining;\n\n      if (force > minRun) {\n        force = minRun;\n      }\n\n      binaryInsertionSort(array, lo, lo + force, lo + runLength, compare);\n      runLength = force;\n    }\n\n    ts.pushRun(lo, runLength);\n    ts.mergeRuns();\n    remaining -= runLength;\n    lo += runLength;\n  } while (remaining !== 0);\n\n  ts.forceMergeRuns();\n}\n\nmodule.exports = sort;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/timsort.js\n// module id = 1574\n// module chunks = 2 3","var zrUtil = require(\"../core/util\");\n\nvar Style = require(\"./Style\");\n\nvar Element = require(\"../Element\");\n\nvar RectText = require(\"./mixin/RectText\");\n\n/**\n * 可绘制的图形基类\n * Base class of all displayable graphic objects\n * @module zrender/graphic/Displayable\n */\n\n/**\n * @alias module:zrender/graphic/Displayable\n * @extends module:zrender/Element\n * @extends module:zrender/graphic/mixin/RectText\n */\nfunction Displayable(opts) {\n  opts = opts || {};\n  Element.call(this, opts); // Extend properties\n\n  for (var name in opts) {\n    if (opts.hasOwnProperty(name) && name !== 'style') {\n      this[name] = opts[name];\n    }\n  }\n  /**\n   * @type {module:zrender/graphic/Style}\n   */\n\n\n  this.style = new Style(opts.style, this);\n  this._rect = null; // Shapes for cascade clipping.\n\n  this.__clipPaths = []; // FIXME Stateful must be mixined after style is setted\n  // Stateful.call(this, opts);\n}\n\nDisplayable.prototype = {\n  constructor: Displayable,\n  type: 'displayable',\n\n  /**\n   * Displayable 是否为脏，Painter 中会根据该标记判断是否需要是否需要重新绘制\n   * Dirty flag. From which painter will determine if this displayable object needs brush\n   * @name module:zrender/graphic/Displayable#__dirty\n   * @type {boolean}\n   */\n  __dirty: true,\n\n  /**\n   * 图形是否可见，为true时不绘制图形，但是仍能触发鼠标事件\n   * If ignore drawing of the displayable object. Mouse event will still be triggered\n   * @name module:/zrender/graphic/Displayable#invisible\n   * @type {boolean}\n   * @default false\n   */\n  invisible: false,\n\n  /**\n   * @name module:/zrender/graphic/Displayable#z\n   * @type {number}\n   * @default 0\n   */\n  z: 0,\n\n  /**\n   * @name module:/zrender/graphic/Displayable#z\n   * @type {number}\n   * @default 0\n   */\n  z2: 0,\n\n  /**\n   * z层level，决定绘画在哪层canvas中\n   * @name module:/zrender/graphic/Displayable#zlevel\n   * @type {number}\n   * @default 0\n   */\n  zlevel: 0,\n\n  /**\n   * 是否可拖拽\n   * @name module:/zrender/graphic/Displayable#draggable\n   * @type {boolean}\n   * @default false\n   */\n  draggable: false,\n\n  /**\n   * 是否正在拖拽\n   * @name module:/zrender/graphic/Displayable#draggable\n   * @type {boolean}\n   * @default false\n   */\n  dragging: false,\n\n  /**\n   * 是否相应鼠标事件\n   * @name module:/zrender/graphic/Displayable#silent\n   * @type {boolean}\n   * @default false\n   */\n  silent: false,\n\n  /**\n   * If enable culling\n   * @type {boolean}\n   * @default false\n   */\n  culling: false,\n\n  /**\n   * Mouse cursor when hovered\n   * @name module:/zrender/graphic/Displayable#cursor\n   * @type {string}\n   */\n  cursor: 'pointer',\n\n  /**\n   * If hover area is bounding rect\n   * @name module:/zrender/graphic/Displayable#rectHover\n   * @type {string}\n   */\n  rectHover: false,\n\n  /**\n   * Render the element progressively when the value >= 0,\n   * usefull for large data.\n   * @type {number}\n   */\n  progressive: -1,\n  beforeBrush: function (ctx) {},\n  afterBrush: function (ctx) {},\n\n  /**\n   * 图形绘制方法\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  // Interface\n  brush: function (ctx, prevEl) {},\n\n  /**\n   * 获取最小包围盒\n   * @return {module:zrender/core/BoundingRect}\n   */\n  // Interface\n  getBoundingRect: function () {},\n\n  /**\n   * 判断坐标 x, y 是否在图形上\n   * If displayable element contain coord x, y\n   * @param  {number} x\n   * @param  {number} y\n   * @return {boolean}\n   */\n  contain: function (x, y) {\n    return this.rectContain(x, y);\n  },\n\n  /**\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  traverse: function (cb, context) {\n    cb.call(context, this);\n  },\n\n  /**\n   * 判断坐标 x, y 是否在图形的包围盒上\n   * If bounding rect of element contain coord x, y\n   * @param  {number} x\n   * @param  {number} y\n   * @return {boolean}\n   */\n  rectContain: function (x, y) {\n    var coord = this.transformCoordToLocal(x, y);\n    var rect = this.getBoundingRect();\n    return rect.contain(coord[0], coord[1]);\n  },\n\n  /**\n   * 标记图形元素为脏，并且在下一帧重绘\n   * Mark displayable element dirty and refresh next frame\n   */\n  dirty: function () {\n    this.__dirty = true;\n    this._rect = null;\n    this.__zr && this.__zr.refresh();\n  },\n\n  /**\n   * 图形是否会触发事件\n   * If displayable object binded any event\n   * @return {boolean}\n   */\n  // TODO, 通过 bind 绑定的事件\n  // isSilent: function () {\n  //     return !(\n  //         this.hoverable || this.draggable\n  //         || this.onmousemove || this.onmouseover || this.onmouseout\n  //         || this.onmousedown || this.onmouseup || this.onclick\n  //         || this.ondragenter || this.ondragover || this.ondragleave\n  //         || this.ondrop\n  //     );\n  // },\n\n  /**\n   * Alias for animate('style')\n   * @param {boolean} loop\n   */\n  animateStyle: function (loop) {\n    return this.animate('style', loop);\n  },\n  attrKV: function (key, value) {\n    if (key !== 'style') {\n      Element.prototype.attrKV.call(this, key, value);\n    } else {\n      this.style.set(value);\n    }\n  },\n\n  /**\n   * @param {Object|string} key\n   * @param {*} value\n   */\n  setStyle: function (key, value) {\n    this.style.set(key, value);\n    this.dirty(false);\n    return this;\n  },\n\n  /**\n   * Use given style object\n   * @param  {Object} obj\n   */\n  useStyle: function (obj) {\n    this.style = new Style(obj, this);\n    this.dirty(false);\n    return this;\n  }\n};\nzrUtil.inherits(Displayable, Element);\nzrUtil.mixin(Displayable, RectText); // zrUtil.mixin(Displayable, Stateful);\n\nvar _default = Displayable;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/Displayable.js\n// module id = 1575\n// module chunks = 2 3","/**\n * @param {Array.<Object>} colorStops\n */\nvar Gradient = function (colorStops) {\n  this.colorStops = colorStops || [];\n};\n\nGradient.prototype = {\n  constructor: Gradient,\n  addColorStop: function (offset, color) {\n    this.colorStops.push({\n      offset: offset,\n      color: color\n    });\n  }\n};\nvar _default = Gradient;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/Gradient.js\n// module id = 1576\n// module chunks = 2 3","var LRU = require(\"../../core/LRU\");\n\nvar globalImageCache = new LRU(50);\n/**\n * @param {string|HTMLImageElement|HTMLCanvasElement|Canvas} newImageOrSrc\n * @return {HTMLImageElement|HTMLCanvasElement|Canvas} image\n */\n\nfunction findExistImage(newImageOrSrc) {\n  if (typeof newImageOrSrc === 'string') {\n    var cachedImgObj = globalImageCache.get(newImageOrSrc);\n    return cachedImgObj && cachedImgObj.image;\n  } else {\n    return newImageOrSrc;\n  }\n}\n/**\n * Caution: User should cache loaded images, but not just count on LRU.\n * Consider if required images more than LRU size, will dead loop occur?\n *\n * @param {string|HTMLImageElement|HTMLCanvasElement|Canvas} newImageOrSrc\n * @param {HTMLImageElement|HTMLCanvasElement|Canvas} image Existent image.\n * @param {module:zrender/Element} [hostEl] For calling `dirty`.\n * @param {Function} [cb] params: (image, cbPayload)\n * @param {Object} [cbPayload] Payload on cb calling.\n * @return {HTMLImageElement|HTMLCanvasElement|Canvas} image\n */\n\n\nfunction createOrUpdateImage(newImageOrSrc, image, hostEl, cb, cbPayload) {\n  if (!newImageOrSrc) {\n    return image;\n  } else if (typeof newImageOrSrc === 'string') {\n    // Image should not be loaded repeatly.\n    if (image && image.__zrImageSrc === newImageOrSrc || !hostEl) {\n      return image;\n    } // Only when there is no existent image or existent image src\n    // is different, this method is responsible for load.\n\n\n    var cachedImgObj = globalImageCache.get(newImageOrSrc);\n    var pendingWrap = {\n      hostEl: hostEl,\n      cb: cb,\n      cbPayload: cbPayload\n    };\n\n    if (cachedImgObj) {\n      image = cachedImgObj.image;\n      !isImageReady(image) && cachedImgObj.pending.push(pendingWrap);\n    } else {\n      !image && (image = new Image());\n      image.onload = imageOnLoad;\n      globalImageCache.put(newImageOrSrc, image.__cachedImgObj = {\n        image: image,\n        pending: [pendingWrap]\n      });\n      image.src = image.__zrImageSrc = newImageOrSrc;\n    }\n\n    return image;\n  } // newImageOrSrc is an HTMLImageElement or HTMLCanvasElement or Canvas\n  else {\n      return newImageOrSrc;\n    }\n}\n\nfunction imageOnLoad() {\n  var cachedImgObj = this.__cachedImgObj;\n  this.onload = this.__cachedImgObj = null;\n\n  for (var i = 0; i < cachedImgObj.pending.length; i++) {\n    var pendingWrap = cachedImgObj.pending[i];\n    var cb = pendingWrap.cb;\n    cb && cb(this, pendingWrap.cbPayload);\n    pendingWrap.hostEl.dirty();\n  }\n\n  cachedImgObj.pending.length = 0;\n}\n\nfunction isImageReady(image) {\n  return image && image.width && image.height;\n}\n\nexports.findExistImage = findExistImage;\nexports.createOrUpdateImage = createOrUpdateImage;\nexports.isImageReady = isImageReady;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/helper/image.js\n// module id = 1577\n// module chunks = 2 3","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\n\nvar _labelHelper = require(\"./labelHelper\");\n\nvar findLabelValueDim = _labelHelper.findLabelValueDim;\n\n/**\n * @module echarts/chart/helper/Symbol\n */\nfunction getSymbolSize(data, idx) {\n  var symbolSize = data.getItemVisual(idx, 'symbolSize');\n  return symbolSize instanceof Array ? symbolSize.slice() : [+symbolSize, +symbolSize];\n}\n\nfunction getScale(symbolSize) {\n  return [symbolSize[0] / 2, symbolSize[1] / 2];\n}\n/**\n * @constructor\n * @alias {module:echarts/chart/helper/Symbol}\n * @param {module:echarts/data/List} data\n * @param {number} idx\n * @extends {module:zrender/graphic/Group}\n */\n\n\nfunction SymbolClz(data, idx, seriesScope) {\n  graphic.Group.call(this);\n  this.updateData(data, idx, seriesScope);\n}\n\nvar symbolProto = SymbolClz.prototype;\n\nfunction driftSymbol(dx, dy) {\n  this.parent.drift(dx, dy);\n}\n\nsymbolProto._createSymbol = function (symbolType, data, idx, symbolSize) {\n  // Remove paths created before\n  this.removeAll();\n  var color = data.getItemVisual(idx, 'color'); // var symbolPath = createSymbol(\n  //     symbolType, -0.5, -0.5, 1, 1, color\n  // );\n  // If width/height are set too small (e.g., set to 1) on ios10\n  // and macOS Sierra, a circle stroke become a rect, no matter what\n  // the scale is set. So we set width/height as 2. See #4150.\n\n  var symbolPath = createSymbol(symbolType, -1, -1, 2, 2, color);\n  symbolPath.attr({\n    z2: 100,\n    culling: true,\n    scale: getScale(symbolSize)\n  }); // Rewrite drift method\n\n  symbolPath.drift = driftSymbol;\n  this._symbolType = symbolType;\n  this.add(symbolPath);\n};\n/**\n * Stop animation\n * @param {boolean} toLastFrame\n */\n\n\nsymbolProto.stopSymbolAnimation = function (toLastFrame) {\n  this.childAt(0).stopAnimation(toLastFrame);\n};\n/**\n * FIXME:\n * Caution: This method breaks the encapsulation of this module,\n * but it indeed brings convenience. So do not use the method\n * unless you detailedly know all the implements of `Symbol`,\n * especially animation.\n *\n * Get symbol path element.\n */\n\n\nsymbolProto.getSymbolPath = function () {\n  return this.childAt(0);\n};\n/**\n * Get scale(aka, current symbol size).\n * Including the change caused by animation\n */\n\n\nsymbolProto.getScale = function () {\n  return this.childAt(0).scale;\n};\n/**\n * Highlight symbol\n */\n\n\nsymbolProto.highlight = function () {\n  this.childAt(0).trigger('emphasis');\n};\n/**\n * Downplay symbol\n */\n\n\nsymbolProto.downplay = function () {\n  this.childAt(0).trigger('normal');\n};\n/**\n * @param {number} zlevel\n * @param {number} z\n */\n\n\nsymbolProto.setZ = function (zlevel, z) {\n  var symbolPath = this.childAt(0);\n  symbolPath.zlevel = zlevel;\n  symbolPath.z = z;\n};\n\nsymbolProto.setDraggable = function (draggable) {\n  var symbolPath = this.childAt(0);\n  symbolPath.draggable = draggable;\n  symbolPath.cursor = draggable ? 'move' : 'pointer';\n};\n/**\n * Update symbol properties\n * @param {module:echarts/data/List} data\n * @param {number} idx\n * @param {Object} [seriesScope]\n * @param {Object} [seriesScope.itemStyle]\n * @param {Object} [seriesScope.hoverItemStyle]\n * @param {Object} [seriesScope.symbolRotate]\n * @param {Object} [seriesScope.symbolOffset]\n * @param {module:echarts/model/Model} [seriesScope.labelModel]\n * @param {module:echarts/model/Model} [seriesScope.hoverLabelModel]\n * @param {boolean} [seriesScope.hoverAnimation]\n * @param {Object} [seriesScope.cursorStyle]\n * @param {module:echarts/model/Model} [seriesScope.itemModel]\n * @param {string} [seriesScope.symbolInnerColor]\n * @param {Object} [seriesScope.fadeIn=false]\n */\n\n\nsymbolProto.updateData = function (data, idx, seriesScope) {\n  this.silent = false;\n  var symbolType = data.getItemVisual(idx, 'symbol') || 'circle';\n  var seriesModel = data.hostModel;\n  var symbolSize = getSymbolSize(data, idx);\n  var isInit = symbolType !== this._symbolType;\n\n  if (isInit) {\n    this._createSymbol(symbolType, data, idx, symbolSize);\n  } else {\n    var symbolPath = this.childAt(0);\n    symbolPath.silent = false;\n    graphic.updateProps(symbolPath, {\n      scale: getScale(symbolSize)\n    }, seriesModel, idx);\n  }\n\n  this._updateCommon(data, idx, symbolSize, seriesScope);\n\n  if (isInit) {\n    var symbolPath = this.childAt(0);\n    var fadeIn = seriesScope && seriesScope.fadeIn;\n    var target = {\n      scale: symbolPath.scale.slice()\n    };\n    fadeIn && (target.style = {\n      opacity: symbolPath.style.opacity\n    });\n    symbolPath.scale = [0, 0];\n    fadeIn && (symbolPath.style.opacity = 0);\n    graphic.initProps(symbolPath, target, seriesModel, idx);\n  }\n\n  this._seriesModel = seriesModel;\n}; // Update common properties\n\n\nvar normalStyleAccessPath = ['itemStyle', 'normal'];\nvar emphasisStyleAccessPath = ['itemStyle', 'emphasis'];\nvar normalLabelAccessPath = ['label', 'normal'];\nvar emphasisLabelAccessPath = ['label', 'emphasis'];\n/**\n * @param {module:echarts/data/List} data\n * @param {number} idx\n * @param {Array.<number>} symbolSize\n * @param {Object} [seriesScope]\n */\n\nsymbolProto._updateCommon = function (data, idx, symbolSize, seriesScope) {\n  var symbolPath = this.childAt(0);\n  var seriesModel = data.hostModel;\n  var color = data.getItemVisual(idx, 'color'); // Reset style\n\n  if (symbolPath.type !== 'image') {\n    symbolPath.useStyle({\n      strokeNoScale: true\n    });\n  }\n\n  var itemStyle = seriesScope && seriesScope.itemStyle;\n  var hoverItemStyle = seriesScope && seriesScope.hoverItemStyle;\n  var symbolRotate = seriesScope && seriesScope.symbolRotate;\n  var symbolOffset = seriesScope && seriesScope.symbolOffset;\n  var labelModel = seriesScope && seriesScope.labelModel;\n  var hoverLabelModel = seriesScope && seriesScope.hoverLabelModel;\n  var hoverAnimation = seriesScope && seriesScope.hoverAnimation;\n  var cursorStyle = seriesScope && seriesScope.cursorStyle;\n\n  if (!seriesScope || data.hasItemOption) {\n    var itemModel = seriesScope && seriesScope.itemModel ? seriesScope.itemModel : data.getItemModel(idx); // Color must be excluded.\n    // Because symbol provide setColor individually to set fill and stroke\n\n    itemStyle = itemModel.getModel(normalStyleAccessPath).getItemStyle(['color']);\n    hoverItemStyle = itemModel.getModel(emphasisStyleAccessPath).getItemStyle();\n    symbolRotate = itemModel.getShallow('symbolRotate');\n    symbolOffset = itemModel.getShallow('symbolOffset');\n    labelModel = itemModel.getModel(normalLabelAccessPath);\n    hoverLabelModel = itemModel.getModel(emphasisLabelAccessPath);\n    hoverAnimation = itemModel.getShallow('hoverAnimation');\n    cursorStyle = itemModel.getShallow('cursor');\n  } else {\n    hoverItemStyle = zrUtil.extend({}, hoverItemStyle);\n  }\n\n  var elStyle = symbolPath.style;\n  symbolPath.attr('rotation', (symbolRotate || 0) * Math.PI / 180 || 0);\n\n  if (symbolOffset) {\n    symbolPath.attr('position', [parsePercent(symbolOffset[0], symbolSize[0]), parsePercent(symbolOffset[1], symbolSize[1])]);\n  }\n\n  cursorStyle && symbolPath.attr('cursor', cursorStyle); // PENDING setColor before setStyle!!!\n\n  symbolPath.setColor(color, seriesScope && seriesScope.symbolInnerColor);\n  symbolPath.setStyle(itemStyle);\n  var opacity = data.getItemVisual(idx, 'opacity');\n\n  if (opacity != null) {\n    elStyle.opacity = opacity;\n  }\n\n  var useNameLabel = seriesScope && seriesScope.useNameLabel;\n  var valueDim = !useNameLabel && findLabelValueDim(data);\n\n  if (useNameLabel || valueDim != null) {\n    graphic.setLabelStyle(elStyle, hoverItemStyle, labelModel, hoverLabelModel, {\n      labelFetcher: seriesModel,\n      labelDataIndex: idx,\n      defaultText: useNameLabel ? data.getName(idx) : data.get(valueDim, idx),\n      isRectText: true,\n      autoColor: color\n    });\n  }\n\n  symbolPath.off('mouseover').off('mouseout').off('emphasis').off('normal');\n  symbolPath.hoverStyle = hoverItemStyle; // FIXME\n  // Do not use symbol.trigger('emphasis'), but use symbol.highlight() instead.\n\n  graphic.setHoverStyle(symbolPath);\n  var scale = getScale(symbolSize);\n\n  if (hoverAnimation && seriesModel.isAnimationEnabled()) {\n    var onEmphasis = function () {\n      var ratio = scale[1] / scale[0];\n      this.animateTo({\n        scale: [Math.max(scale[0] * 1.1, scale[0] + 3), Math.max(scale[1] * 1.1, scale[1] + 3 * ratio)]\n      }, 400, 'elasticOut');\n    };\n\n    var onNormal = function () {\n      this.animateTo({\n        scale: scale\n      }, 400, 'elasticOut');\n    };\n\n    symbolPath.on('mouseover', onEmphasis).on('mouseout', onNormal).on('emphasis', onEmphasis).on('normal', onNormal);\n  }\n};\n/**\n * @param {Function} cb\n * @param {Object} [opt]\n * @param {Object} [opt.keepLabel=true]\n */\n\n\nsymbolProto.fadeOut = function (cb, opt) {\n  var symbolPath = this.childAt(0); // Avoid mistaken hover when fading out\n\n  this.silent = symbolPath.silent = true; // Not show text when animating\n\n  !(opt && opt.keepLabel) && (symbolPath.style.text = null);\n  graphic.updateProps(symbolPath, {\n    style: {\n      opacity: 0\n    },\n    scale: [0, 0]\n  }, this._seriesModel, this.dataIndex, cb);\n};\n\nzrUtil.inherits(SymbolClz, graphic.Group);\nvar _default = SymbolClz;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/helper/Symbol.js\n// module id = 1602\n// module chunks = 2 3","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../../util/model\");\n\n/**\n * @param {Object} finder contains {seriesIndex, dataIndex, dataIndexInside}\n * @param {module:echarts/model/Global} ecModel\n * @return {Object} {point: [x, y], el: ...} point Will not be null.\n */\nfunction _default(finder, ecModel) {\n  var point = [];\n  var seriesIndex = finder.seriesIndex;\n  var seriesModel;\n\n  if (seriesIndex == null || !(seriesModel = ecModel.getSeriesByIndex(seriesIndex))) {\n    return {\n      point: []\n    };\n  }\n\n  var data = seriesModel.getData();\n  var dataIndex = modelUtil.queryDataIndex(data, finder);\n\n  if (dataIndex == null || zrUtil.isArray(dataIndex)) {\n    return {\n      point: []\n    };\n  }\n\n  var el = data.getItemGraphicEl(dataIndex);\n  var coordSys = seriesModel.coordinateSystem;\n\n  if (seriesModel.getTooltipPosition) {\n    point = seriesModel.getTooltipPosition(dataIndex) || [];\n  } else if (coordSys && coordSys.dataToPoint) {\n    point = coordSys.dataToPoint(data.getValues(zrUtil.map(coordSys.dimensions, function (dim) {\n      return seriesModel.coordDimToDataDim(dim)[0];\n    }), dataIndex, true)) || [];\n  } else if (el) {\n    // Use graphic bounding rect\n    var rect = el.getBoundingRect().clone();\n    rect.applyTransform(el.transform);\n    point = [rect.x + rect.width / 2, rect.y + rect.height / 2];\n  }\n\n  return {\n    point: point,\n    el: el\n  };\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axisPointer/findPointFromSeries.js\n// module id = 1603\n// module chunks = 2 3","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar get = modelUtil.makeGetter();\nvar each = zrUtil.each;\n/**\n * @param {string} key\n * @param {module:echarts/ExtensionAPI} api\n * @param {Function} handler\n *      param: {string} currTrigger\n *      param: {Array.<number>} point\n */\n\nfunction register(key, api, handler) {\n  if (env.node) {\n    return;\n  }\n\n  var zr = api.getZr();\n  get(zr).records || (get(zr).records = {});\n  initGlobalListeners(zr, api);\n  var record = get(zr).records[key] || (get(zr).records[key] = {});\n  record.handler = handler;\n}\n\nfunction initGlobalListeners(zr, api) {\n  if (get(zr).initialized) {\n    return;\n  }\n\n  get(zr).initialized = true;\n  useHandler('click', zrUtil.curry(doEnter, 'click'));\n  useHandler('mousemove', zrUtil.curry(doEnter, 'mousemove')); // useHandler('mouseout', onLeave);\n\n  useHandler('globalout', onLeave);\n\n  function useHandler(eventType, cb) {\n    zr.on(eventType, function (e) {\n      var dis = makeDispatchAction(api);\n      each(get(zr).records, function (record) {\n        record && cb(record, e, dis.dispatchAction);\n      });\n      dispatchTooltipFinally(dis.pendings, api);\n    });\n  }\n}\n\nfunction dispatchTooltipFinally(pendings, api) {\n  var showLen = pendings.showTip.length;\n  var hideLen = pendings.hideTip.length;\n  var actuallyPayload;\n\n  if (showLen) {\n    actuallyPayload = pendings.showTip[showLen - 1];\n  } else if (hideLen) {\n    actuallyPayload = pendings.hideTip[hideLen - 1];\n  }\n\n  if (actuallyPayload) {\n    actuallyPayload.dispatchAction = null;\n    api.dispatchAction(actuallyPayload);\n  }\n}\n\nfunction onLeave(record, e, dispatchAction) {\n  record.handler('leave', null, dispatchAction);\n}\n\nfunction doEnter(currTrigger, record, e, dispatchAction) {\n  record.handler(currTrigger, e, dispatchAction);\n}\n\nfunction makeDispatchAction(api) {\n  var pendings = {\n    showTip: [],\n    hideTip: []\n  }; // FIXME\n  // better approach?\n  // 'showTip' and 'hideTip' can be triggered by axisPointer and tooltip,\n  // which may be conflict, (axisPointer call showTip but tooltip call hideTip);\n  // So we have to add \"final stage\" to merge those dispatched actions.\n\n  var dispatchAction = function (payload) {\n    var pendingList = pendings[payload.type];\n\n    if (pendingList) {\n      pendingList.push(payload);\n    } else {\n      payload.dispatchAction = dispatchAction;\n      api.dispatchAction(payload);\n    }\n  };\n\n  return {\n    dispatchAction: dispatchAction,\n    pendings: pendings\n  };\n}\n/**\n * @param {string} key\n * @param {module:echarts/ExtensionAPI} api\n */\n\n\nfunction unregister(key, api) {\n  if (env.node) {\n    return;\n  }\n\n  var zr = api.getZr();\n  var record = (get(zr).records || {})[key];\n\n  if (record) {\n    get(zr).records[key] = null;\n  }\n}\n\nexports.register = register;\nexports.unregister = unregister;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axisPointer/globalListener.js\n// module id = 1604\n// module chunks = 2 3","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar textContain = require(\"zrender/lib/contain/text\");\n\nvar formatUtil = require(\"../../util/format\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar axisHelper = require(\"../../coord/axisHelper\");\n\nvar AxisBuilder = require(\"../axis/AxisBuilder\");\n\n/**\n * @param {module:echarts/model/Model} axisPointerModel\n */\nfunction buildElStyle(axisPointerModel) {\n  var axisPointerType = axisPointerModel.get('type');\n  var styleModel = axisPointerModel.getModel(axisPointerType + 'Style');\n  var style;\n\n  if (axisPointerType === 'line') {\n    style = styleModel.getLineStyle();\n    style.fill = null;\n  } else if (axisPointerType === 'shadow') {\n    style = styleModel.getAreaStyle();\n    style.stroke = null;\n  }\n\n  return style;\n}\n/**\n * @param {Function} labelPos {align, verticalAlign, position}\n */\n\n\nfunction buildLabelElOption(elOption, axisModel, axisPointerModel, api, labelPos) {\n  var value = axisPointerModel.get('value');\n  var text = getValueLabel(value, axisModel.axis, axisModel.ecModel, axisPointerModel.get('seriesDataIndices'), {\n    precision: axisPointerModel.get('label.precision'),\n    formatter: axisPointerModel.get('label.formatter')\n  });\n  var labelModel = axisPointerModel.getModel('label');\n  var paddings = formatUtil.normalizeCssArray(labelModel.get('padding') || 0);\n  var font = labelModel.getFont();\n  var textRect = textContain.getBoundingRect(text, font);\n  var position = labelPos.position;\n  var width = textRect.width + paddings[1] + paddings[3];\n  var height = textRect.height + paddings[0] + paddings[2]; // Adjust by align.\n\n  var align = labelPos.align;\n  align === 'right' && (position[0] -= width);\n  align === 'center' && (position[0] -= width / 2);\n  var verticalAlign = labelPos.verticalAlign;\n  verticalAlign === 'bottom' && (position[1] -= height);\n  verticalAlign === 'middle' && (position[1] -= height / 2); // Not overflow ec container\n\n  confineInContainer(position, width, height, api);\n  var bgColor = labelModel.get('backgroundColor');\n\n  if (!bgColor || bgColor === 'auto') {\n    bgColor = axisModel.get('axisLine.lineStyle.color');\n  }\n\n  elOption.label = {\n    shape: {\n      x: 0,\n      y: 0,\n      width: width,\n      height: height,\n      r: labelModel.get('borderRadius')\n    },\n    position: position.slice(),\n    // TODO: rich\n    style: {\n      text: text,\n      textFont: font,\n      textFill: labelModel.getTextColor(),\n      textPosition: 'inside',\n      fill: bgColor,\n      stroke: labelModel.get('borderColor') || 'transparent',\n      lineWidth: labelModel.get('borderWidth') || 0,\n      shadowBlur: labelModel.get('shadowBlur'),\n      shadowColor: labelModel.get('shadowColor'),\n      shadowOffsetX: labelModel.get('shadowOffsetX'),\n      shadowOffsetY: labelModel.get('shadowOffsetY')\n    },\n    // Lable should be over axisPointer.\n    z2: 10\n  };\n} // Do not overflow ec container\n\n\nfunction confineInContainer(position, width, height, api) {\n  var viewWidth = api.getWidth();\n  var viewHeight = api.getHeight();\n  position[0] = Math.min(position[0] + width, viewWidth) - width;\n  position[1] = Math.min(position[1] + height, viewHeight) - height;\n  position[0] = Math.max(position[0], 0);\n  position[1] = Math.max(position[1], 0);\n}\n/**\n * @param {number} value\n * @param {module:echarts/coord/Axis} axis\n * @param {module:echarts/model/Global} ecModel\n * @param {Object} opt\n * @param {Array.<Object>} seriesDataIndices\n * @param {number|string} opt.precision 'auto' or a number\n * @param {string|Function} opt.formatter label formatter\n */\n\n\nfunction getValueLabel(value, axis, ecModel, seriesDataIndices, opt) {\n  var text = axis.scale.getLabel( // If `precision` is set, width can be fixed (like '12.00500'), which\n  // helps to debounce when when moving label.\n  value, {\n    precision: opt.precision\n  });\n  var formatter = opt.formatter;\n\n  if (formatter) {\n    var params = {\n      value: axisHelper.getAxisRawValue(axis, value),\n      seriesData: []\n    };\n    zrUtil.each(seriesDataIndices, function (idxItem) {\n      var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n      var dataIndex = idxItem.dataIndexInside;\n      var dataParams = series && series.getDataParams(dataIndex);\n      dataParams && params.seriesData.push(dataParams);\n    });\n\n    if (zrUtil.isString(formatter)) {\n      text = formatter.replace('{value}', text);\n    } else if (zrUtil.isFunction(formatter)) {\n      text = formatter(params);\n    }\n  }\n\n  return text;\n}\n/**\n * @param {module:echarts/coord/Axis} axis\n * @param {number} value\n * @param {Object} layoutInfo {\n *  rotation, position, labelOffset, labelDirection, labelMargin\n * }\n */\n\n\nfunction getTransformedPosition(axis, value, layoutInfo) {\n  var transform = matrix.create();\n  matrix.rotate(transform, transform, layoutInfo.rotation);\n  matrix.translate(transform, transform, layoutInfo.position);\n  return graphic.applyTransform([axis.dataToCoord(value), (layoutInfo.labelOffset || 0) + (layoutInfo.labelDirection || 1) * (layoutInfo.labelMargin || 0)], transform);\n}\n\nfunction buildCartesianSingleLabelElOption(value, elOption, layoutInfo, axisModel, axisPointerModel, api) {\n  var textLayout = AxisBuilder.innerTextLayout(layoutInfo.rotation, 0, layoutInfo.labelDirection);\n  layoutInfo.labelMargin = axisPointerModel.get('label.margin');\n  buildLabelElOption(elOption, axisModel, axisPointerModel, api, {\n    position: getTransformedPosition(axisModel.axis, value, layoutInfo),\n    align: textLayout.textAlign,\n    verticalAlign: textLayout.textVerticalAlign\n  });\n}\n/**\n * @param {Array.<number>} p1\n * @param {Array.<number>} p2\n * @param {number} [xDimIndex=0] or 1\n */\n\n\nfunction makeLineShape(p1, p2, xDimIndex) {\n  xDimIndex = xDimIndex || 0;\n  return {\n    x1: p1[xDimIndex],\n    y1: p1[1 - xDimIndex],\n    x2: p2[xDimIndex],\n    y2: p2[1 - xDimIndex]\n  };\n}\n/**\n * @param {Array.<number>} xy\n * @param {Array.<number>} wh\n * @param {number} [xDimIndex=0] or 1\n */\n\n\nfunction makeRectShape(xy, wh, xDimIndex) {\n  xDimIndex = xDimIndex || 0;\n  return {\n    x: xy[xDimIndex],\n    y: xy[1 - xDimIndex],\n    width: wh[xDimIndex],\n    height: wh[1 - xDimIndex]\n  };\n}\n\nfunction makeSectorShape(cx, cy, r0, r, startAngle, endAngle) {\n  return {\n    cx: cx,\n    cy: cy,\n    r0: r0,\n    r: r,\n    startAngle: startAngle,\n    endAngle: endAngle,\n    clockwise: true\n  };\n}\n\nexports.buildElStyle = buildElStyle;\nexports.buildLabelElOption = buildLabelElOption;\nexports.getValueLabel = getValueLabel;\nexports.getTransformedPosition = getTransformedPosition;\nexports.buildCartesianSingleLabelElOption = buildCartesianSingleLabelElOption;\nexports.makeLineShape = makeLineShape;\nexports.makeRectShape = makeRectShape;\nexports.makeSectorShape = makeSectorShape;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axisPointer/viewHelper.js\n// module id = 1605\n// module chunks = 2 3","var _util = require(\"zrender/lib/core/util\");\n\nvar retrieve = _util.retrieve;\nvar defaults = _util.defaults;\nvar extend = _util.extend;\nvar each = _util.each;\n\nvar formatUtil = require(\"../../util/format\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar Model = require(\"../../model/Model\");\n\nvar _number = require(\"../../util/number\");\n\nvar isRadianAroundZero = _number.isRadianAroundZero;\nvar remRadian = _number.remRadian;\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar matrixUtil = require(\"zrender/lib/core/matrix\");\n\nvar _vector = require(\"zrender/lib/core/vector\");\n\nvar v2ApplyTransform = _vector.applyTransform;\nvar PI = Math.PI;\n\nfunction makeAxisEventDataBase(axisModel) {\n  var eventData = {\n    componentType: axisModel.mainType\n  };\n  eventData[axisModel.mainType + 'Index'] = axisModel.componentIndex;\n  return eventData;\n}\n/**\n * A final axis is translated and rotated from a \"standard axis\".\n * So opt.position and opt.rotation is required.\n *\n * A standard axis is and axis from [0, 0] to [0, axisExtent[1]],\n * for example: (0, 0) ------------> (0, 50)\n *\n * nameDirection or tickDirection or labelDirection is 1 means tick\n * or label is below the standard axis, whereas is -1 means above\n * the standard axis. labelOffset means offset between label and axis,\n * which is useful when 'onZero', where axisLabel is in the grid and\n * label in outside grid.\n *\n * Tips: like always,\n * positive rotation represents anticlockwise, and negative rotation\n * represents clockwise.\n * The direction of position coordinate is the same as the direction\n * of screen coordinate.\n *\n * Do not need to consider axis 'inverse', which is auto processed by\n * axis extent.\n *\n * @param {module:zrender/container/Group} group\n * @param {Object} axisModel\n * @param {Object} opt Standard axis parameters.\n * @param {Array.<number>} opt.position [x, y]\n * @param {number} opt.rotation by radian\n * @param {number} [opt.nameDirection=1] 1 or -1 Used when nameLocation is 'middle' or 'center'.\n * @param {number} [opt.tickDirection=1] 1 or -1\n * @param {number} [opt.labelDirection=1] 1 or -1\n * @param {number} [opt.labelOffset=0] Usefull when onZero.\n * @param {string} [opt.axisLabelShow] default get from axisModel.\n * @param {string} [opt.axisName] default get from axisModel.\n * @param {number} [opt.axisNameAvailableWidth]\n * @param {number} [opt.labelRotate] by degree, default get from axisModel.\n * @param {number} [opt.labelInterval] Default label interval when label\n *                                     interval from model is null or 'auto'.\n * @param {number} [opt.strokeContainThreshold] Default label interval when label\n * @param {number} [opt.nameTruncateMaxWidth]\n */\n\n\nvar AxisBuilder = function (axisModel, opt) {\n  /**\n   * @readOnly\n   */\n  this.opt = opt;\n  /**\n   * @readOnly\n   */\n\n  this.axisModel = axisModel; // Default value\n\n  defaults(opt, {\n    labelOffset: 0,\n    nameDirection: 1,\n    tickDirection: 1,\n    labelDirection: 1,\n    silent: true\n  });\n  /**\n   * @readOnly\n   */\n\n  this.group = new graphic.Group(); // FIXME Not use a seperate text group?\n\n  var dumbGroup = new graphic.Group({\n    position: opt.position.slice(),\n    rotation: opt.rotation\n  }); // this.group.add(dumbGroup);\n  // this._dumbGroup = dumbGroup;\n\n  dumbGroup.updateTransform();\n  this._transform = dumbGroup.transform;\n  this._dumbGroup = dumbGroup;\n};\n\nAxisBuilder.prototype = {\n  constructor: AxisBuilder,\n  hasBuilder: function (name) {\n    return !!builders[name];\n  },\n  add: function (name) {\n    builders[name].call(this);\n  },\n  getGroup: function () {\n    return this.group;\n  }\n};\nvar builders = {\n  /**\n   * @private\n   */\n  axisLine: function () {\n    var opt = this.opt;\n    var axisModel = this.axisModel;\n\n    if (!axisModel.get('axisLine.show')) {\n      return;\n    }\n\n    var extent = this.axisModel.axis.getExtent();\n    var matrix = this._transform;\n    var pt1 = [extent[0], 0];\n    var pt2 = [extent[1], 0];\n\n    if (matrix) {\n      v2ApplyTransform(pt1, pt1, matrix);\n      v2ApplyTransform(pt2, pt2, matrix);\n    }\n\n    var lineStyle = extend({\n      lineCap: 'round'\n    }, axisModel.getModel('axisLine.lineStyle').getLineStyle());\n    this.group.add(new graphic.Line(graphic.subPixelOptimizeLine({\n      // Id for animation\n      anid: 'line',\n      shape: {\n        x1: pt1[0],\n        y1: pt1[1],\n        x2: pt2[0],\n        y2: pt2[1]\n      },\n      style: lineStyle,\n      strokeContainThreshold: opt.strokeContainThreshold || 5,\n      silent: true,\n      z2: 1\n    })));\n    var arrows = axisModel.get('axisLine.symbol');\n    var arrowSize = axisModel.get('axisLine.symbolSize');\n\n    if (arrows != null) {\n      if (typeof arrows === 'string') {\n        // Use the same arrow for start and end point\n        arrows = [arrows, arrows];\n      }\n\n      if (typeof arrowSize === 'string' || typeof arrowSize === 'number') {\n        // Use the same size for width and height\n        arrowSize = [arrowSize, arrowSize];\n      }\n\n      var symbolWidth = arrowSize[0];\n      var symbolHeight = arrowSize[1];\n      each([[opt.rotation + Math.PI / 2, pt1], [opt.rotation - Math.PI / 2, pt2]], function (item, index) {\n        if (arrows[index] !== 'none' && arrows[index] != null) {\n          var symbol = createSymbol(arrows[index], -symbolWidth / 2, -symbolHeight / 2, symbolWidth, symbolHeight, lineStyle.stroke, true);\n          symbol.attr({\n            rotation: item[0],\n            position: item[1],\n            silent: true\n          });\n          this.group.add(symbol);\n        }\n      }, this);\n    }\n  },\n\n  /**\n   * @private\n   */\n  axisTickLabel: function () {\n    var axisModel = this.axisModel;\n    var opt = this.opt;\n    var tickEls = buildAxisTick(this, axisModel, opt);\n    var labelEls = buildAxisLabel(this, axisModel, opt);\n    fixMinMaxLabelShow(axisModel, labelEls, tickEls);\n  },\n\n  /**\n   * @private\n   */\n  axisName: function () {\n    var opt = this.opt;\n    var axisModel = this.axisModel;\n    var name = retrieve(opt.axisName, axisModel.get('name'));\n\n    if (!name) {\n      return;\n    }\n\n    var nameLocation = axisModel.get('nameLocation');\n    var nameDirection = opt.nameDirection;\n    var textStyleModel = axisModel.getModel('nameTextStyle');\n    var gap = axisModel.get('nameGap') || 0;\n    var extent = this.axisModel.axis.getExtent();\n    var gapSignal = extent[0] > extent[1] ? -1 : 1;\n    var pos = [nameLocation === 'start' ? extent[0] - gapSignal * gap : nameLocation === 'end' ? extent[1] + gapSignal * gap : (extent[0] + extent[1]) / 2, // 'middle'\n    // Reuse labelOffset.\n    isNameLocationCenter(nameLocation) ? opt.labelOffset + nameDirection * gap : 0];\n    var labelLayout;\n    var nameRotation = axisModel.get('nameRotate');\n\n    if (nameRotation != null) {\n      nameRotation = nameRotation * PI / 180; // To radian.\n    }\n\n    var axisNameAvailableWidth;\n\n    if (isNameLocationCenter(nameLocation)) {\n      labelLayout = innerTextLayout(opt.rotation, nameRotation != null ? nameRotation : opt.rotation, // Adapt to axis.\n      nameDirection);\n    } else {\n      labelLayout = endTextLayout(opt, nameLocation, nameRotation || 0, extent);\n      axisNameAvailableWidth = opt.axisNameAvailableWidth;\n\n      if (axisNameAvailableWidth != null) {\n        axisNameAvailableWidth = Math.abs(axisNameAvailableWidth / Math.sin(labelLayout.rotation));\n        !isFinite(axisNameAvailableWidth) && (axisNameAvailableWidth = null);\n      }\n    }\n\n    var textFont = textStyleModel.getFont();\n    var truncateOpt = axisModel.get('nameTruncate', true) || {};\n    var ellipsis = truncateOpt.ellipsis;\n    var maxWidth = retrieve(opt.nameTruncateMaxWidth, truncateOpt.maxWidth, axisNameAvailableWidth); // FIXME\n    // truncate rich text? (consider performance)\n\n    var truncatedText = ellipsis != null && maxWidth != null ? formatUtil.truncateText(name, maxWidth, textFont, ellipsis, {\n      minChar: 2,\n      placeholder: truncateOpt.placeholder\n    }) : name;\n    var tooltipOpt = axisModel.get('tooltip', true);\n    var mainType = axisModel.mainType;\n    var formatterParams = {\n      componentType: mainType,\n      name: name,\n      $vars: ['name']\n    };\n    formatterParams[mainType + 'Index'] = axisModel.componentIndex;\n    var textEl = new graphic.Text({\n      // Id for animation\n      anid: 'name',\n      __fullText: name,\n      __truncatedText: truncatedText,\n      position: pos,\n      rotation: labelLayout.rotation,\n      silent: isSilent(axisModel),\n      z2: 1,\n      tooltip: tooltipOpt && tooltipOpt.show ? extend({\n        content: name,\n        formatter: function () {\n          return name;\n        },\n        formatterParams: formatterParams\n      }, tooltipOpt) : null\n    });\n    graphic.setTextStyle(textEl.style, textStyleModel, {\n      text: truncatedText,\n      textFont: textFont,\n      textFill: textStyleModel.getTextColor() || axisModel.get('axisLine.lineStyle.color'),\n      textAlign: labelLayout.textAlign,\n      textVerticalAlign: labelLayout.textVerticalAlign\n    });\n\n    if (axisModel.get('triggerEvent')) {\n      textEl.eventData = makeAxisEventDataBase(axisModel);\n      textEl.eventData.targetType = 'axisName';\n      textEl.eventData.name = name;\n    } // FIXME\n\n\n    this._dumbGroup.add(textEl);\n\n    textEl.updateTransform();\n    this.group.add(textEl);\n    textEl.decomposeTransform();\n  }\n};\n/**\n * @public\n * @static\n * @param {Object} opt\n * @param {number} axisRotation in radian\n * @param {number} textRotation in radian\n * @param {number} direction\n * @return {Object} {\n *  rotation, // according to axis\n *  textAlign,\n *  textVerticalAlign\n * }\n */\n\nvar innerTextLayout = AxisBuilder.innerTextLayout = function (axisRotation, textRotation, direction) {\n  var rotationDiff = remRadian(textRotation - axisRotation);\n  var textAlign;\n  var textVerticalAlign;\n\n  if (isRadianAroundZero(rotationDiff)) {\n    // Label is parallel with axis line.\n    textVerticalAlign = direction > 0 ? 'top' : 'bottom';\n    textAlign = 'center';\n  } else if (isRadianAroundZero(rotationDiff - PI)) {\n    // Label is inverse parallel with axis line.\n    textVerticalAlign = direction > 0 ? 'bottom' : 'top';\n    textAlign = 'center';\n  } else {\n    textVerticalAlign = 'middle';\n\n    if (rotationDiff > 0 && rotationDiff < PI) {\n      textAlign = direction > 0 ? 'right' : 'left';\n    } else {\n      textAlign = direction > 0 ? 'left' : 'right';\n    }\n  }\n\n  return {\n    rotation: rotationDiff,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n};\n\nfunction endTextLayout(opt, textPosition, textRotate, extent) {\n  var rotationDiff = remRadian(textRotate - opt.rotation);\n  var textAlign;\n  var textVerticalAlign;\n  var inverse = extent[0] > extent[1];\n  var onLeft = textPosition === 'start' && !inverse || textPosition !== 'start' && inverse;\n\n  if (isRadianAroundZero(rotationDiff - PI / 2)) {\n    textVerticalAlign = onLeft ? 'bottom' : 'top';\n    textAlign = 'center';\n  } else if (isRadianAroundZero(rotationDiff - PI * 1.5)) {\n    textVerticalAlign = onLeft ? 'top' : 'bottom';\n    textAlign = 'center';\n  } else {\n    textVerticalAlign = 'middle';\n\n    if (rotationDiff < PI * 1.5 && rotationDiff > PI / 2) {\n      textAlign = onLeft ? 'left' : 'right';\n    } else {\n      textAlign = onLeft ? 'right' : 'left';\n    }\n  }\n\n  return {\n    rotation: rotationDiff,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n}\n\nfunction isSilent(axisModel) {\n  var tooltipOpt = axisModel.get('tooltip');\n  return axisModel.get('silent') // Consider mouse cursor, add these restrictions.\n  || !(axisModel.get('triggerEvent') || tooltipOpt && tooltipOpt.show);\n}\n\nfunction fixMinMaxLabelShow(axisModel, labelEls, tickEls) {\n  // If min or max are user set, we need to check\n  // If the tick on min(max) are overlap on their neighbour tick\n  // If they are overlapped, we need to hide the min(max) tick label\n  var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n  var showMaxLabel = axisModel.get('axisLabel.showMaxLabel'); // FIXME\n  // Have not consider onBand yet, where tick els is more than label els.\n\n  labelEls = labelEls || [];\n  tickEls = tickEls || [];\n  var firstLabel = labelEls[0];\n  var nextLabel = labelEls[1];\n  var lastLabel = labelEls[labelEls.length - 1];\n  var prevLabel = labelEls[labelEls.length - 2];\n  var firstTick = tickEls[0];\n  var nextTick = tickEls[1];\n  var lastTick = tickEls[tickEls.length - 1];\n  var prevTick = tickEls[tickEls.length - 2];\n\n  if (showMinLabel === false) {\n    ignoreEl(firstLabel);\n    ignoreEl(firstTick);\n  } else if (isTwoLabelOverlapped(firstLabel, nextLabel)) {\n    if (showMinLabel) {\n      ignoreEl(nextLabel);\n      ignoreEl(nextTick);\n    } else {\n      ignoreEl(firstLabel);\n      ignoreEl(firstTick);\n    }\n  }\n\n  if (showMaxLabel === false) {\n    ignoreEl(lastLabel);\n    ignoreEl(lastTick);\n  } else if (isTwoLabelOverlapped(prevLabel, lastLabel)) {\n    if (showMaxLabel) {\n      ignoreEl(prevLabel);\n      ignoreEl(prevTick);\n    } else {\n      ignoreEl(lastLabel);\n      ignoreEl(lastTick);\n    }\n  }\n}\n\nfunction ignoreEl(el) {\n  el && (el.ignore = true);\n}\n\nfunction isTwoLabelOverlapped(current, next, labelLayout) {\n  // current and next has the same rotation.\n  var firstRect = current && current.getBoundingRect().clone();\n  var nextRect = next && next.getBoundingRect().clone();\n\n  if (!firstRect || !nextRect) {\n    return;\n  } // When checking intersect of two rotated labels, we use mRotationBack\n  // to avoid that boundingRect is enlarge when using `boundingRect.applyTransform`.\n\n\n  var mRotationBack = matrixUtil.identity([]);\n  matrixUtil.rotate(mRotationBack, mRotationBack, -current.rotation);\n  firstRect.applyTransform(matrixUtil.mul([], mRotationBack, current.getLocalTransform()));\n  nextRect.applyTransform(matrixUtil.mul([], mRotationBack, next.getLocalTransform()));\n  return firstRect.intersect(nextRect);\n}\n\nfunction isNameLocationCenter(nameLocation) {\n  return nameLocation === 'middle' || nameLocation === 'center';\n}\n/**\n * @static\n */\n\n\nvar ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick = function (axis, i, interval, ticksCnt, showMinLabel, showMaxLabel) {\n  if (i === 0 && showMinLabel || i === ticksCnt - 1 && showMaxLabel) {\n    return false;\n  } // FIXME\n  // Have not consider label overlap (if label is too long) yet.\n\n\n  var rawTick;\n  var scale = axis.scale;\n  return scale.type === 'ordinal' && (typeof interval === 'function' ? (rawTick = scale.getTicks()[i], !interval(rawTick, scale.getLabel(rawTick))) : i % (interval + 1));\n};\n/**\n * @static\n */\n\n\nvar getInterval = AxisBuilder.getInterval = function (model, labelInterval) {\n  var interval = model.get('interval');\n\n  if (interval == null || interval == 'auto') {\n    interval = labelInterval;\n  }\n\n  return interval;\n};\n\nfunction buildAxisTick(axisBuilder, axisModel, opt) {\n  var axis = axisModel.axis;\n\n  if (!axisModel.get('axisTick.show') || axis.scale.isBlank()) {\n    return;\n  }\n\n  var tickModel = axisModel.getModel('axisTick');\n  var lineStyleModel = tickModel.getModel('lineStyle');\n  var tickLen = tickModel.get('length');\n  var tickInterval = getInterval(tickModel, opt.labelInterval);\n  var ticksCoords = axis.getTicksCoords(tickModel.get('alignWithLabel')); // FIXME\n  // Corresponds to ticksCoords ?\n\n  var ticks = axis.scale.getTicks();\n  var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n  var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n  var pt1 = [];\n  var pt2 = [];\n  var matrix = axisBuilder._transform;\n  var tickEls = [];\n  var ticksCnt = ticksCoords.length;\n\n  for (var i = 0; i < ticksCnt; i++) {\n    // Only ordinal scale support tick interval\n    if (ifIgnoreOnTick(axis, i, tickInterval, ticksCnt, showMinLabel, showMaxLabel)) {\n      continue;\n    }\n\n    var tickCoord = ticksCoords[i];\n    pt1[0] = tickCoord;\n    pt1[1] = 0;\n    pt2[0] = tickCoord;\n    pt2[1] = opt.tickDirection * tickLen;\n\n    if (matrix) {\n      v2ApplyTransform(pt1, pt1, matrix);\n      v2ApplyTransform(pt2, pt2, matrix);\n    } // Tick line, Not use group transform to have better line draw\n\n\n    var tickEl = new graphic.Line(graphic.subPixelOptimizeLine({\n      // Id for animation\n      anid: 'tick_' + ticks[i],\n      shape: {\n        x1: pt1[0],\n        y1: pt1[1],\n        x2: pt2[0],\n        y2: pt2[1]\n      },\n      style: defaults(lineStyleModel.getLineStyle(), {\n        stroke: axisModel.get('axisLine.lineStyle.color')\n      }),\n      z2: 2,\n      silent: true\n    }));\n    axisBuilder.group.add(tickEl);\n    tickEls.push(tickEl);\n  }\n\n  return tickEls;\n}\n\nfunction buildAxisLabel(axisBuilder, axisModel, opt) {\n  var axis = axisModel.axis;\n  var show = retrieve(opt.axisLabelShow, axisModel.get('axisLabel.show'));\n\n  if (!show || axis.scale.isBlank()) {\n    return;\n  }\n\n  var labelModel = axisModel.getModel('axisLabel');\n  var labelMargin = labelModel.get('margin');\n  var ticks = axis.scale.getTicks();\n  var labels = axisModel.getFormattedLabels(); // Special label rotate.\n\n  var labelRotation = (retrieve(opt.labelRotate, labelModel.get('rotate')) || 0) * PI / 180;\n  var labelLayout = innerTextLayout(opt.rotation, labelRotation, opt.labelDirection);\n  var categoryData = axisModel.get('data');\n  var labelEls = [];\n  var silent = isSilent(axisModel);\n  var triggerEvent = axisModel.get('triggerEvent');\n  var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n  var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n  each(ticks, function (tickVal, index) {\n    if (ifIgnoreOnTick(axis, index, opt.labelInterval, ticks.length, showMinLabel, showMaxLabel)) {\n      return;\n    }\n\n    var itemLabelModel = labelModel;\n\n    if (categoryData && categoryData[tickVal] && categoryData[tickVal].textStyle) {\n      itemLabelModel = new Model(categoryData[tickVal].textStyle, labelModel, axisModel.ecModel);\n    }\n\n    var textColor = itemLabelModel.getTextColor() || axisModel.get('axisLine.lineStyle.color');\n    var tickCoord = axis.dataToCoord(tickVal);\n    var pos = [tickCoord, opt.labelOffset + opt.labelDirection * labelMargin];\n    var labelStr = axis.scale.getLabel(tickVal);\n    var textEl = new graphic.Text({\n      // Id for animation\n      anid: 'label_' + tickVal,\n      position: pos,\n      rotation: labelLayout.rotation,\n      silent: silent,\n      z2: 10\n    });\n    graphic.setTextStyle(textEl.style, itemLabelModel, {\n      text: labels[index],\n      textAlign: itemLabelModel.getShallow('align', true) || labelLayout.textAlign,\n      textVerticalAlign: itemLabelModel.getShallow('verticalAlign', true) || itemLabelModel.getShallow('baseline', true) || labelLayout.textVerticalAlign,\n      textFill: typeof textColor === 'function' ? textColor( // (1) In category axis with data zoom, tick is not the original\n      // index of axis.data. So tick should not be exposed to user\n      // in category axis.\n      // (2) Compatible with previous version, which always returns labelStr.\n      // But in interval scale labelStr is like '223,445', which maked\n      // user repalce ','. So we modify it to return original val but remain\n      // it as 'string' to avoid error in replacing.\n      axis.type === 'category' ? labelStr : axis.type === 'value' ? tickVal + '' : tickVal, index) : textColor\n    }); // Pack data for mouse event\n\n    if (triggerEvent) {\n      textEl.eventData = makeAxisEventDataBase(axisModel);\n      textEl.eventData.targetType = 'axisLabel';\n      textEl.eventData.value = labelStr;\n    } // FIXME\n\n\n    axisBuilder._dumbGroup.add(textEl);\n\n    textEl.updateTransform();\n    labelEls.push(textEl);\n    axisBuilder.group.add(textEl);\n    textEl.decomposeTransform();\n  });\n  return labelEls;\n}\n\nvar _default = AxisBuilder;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axis/AxisBuilder.js\n// module id = 1606\n// module chunks = 2 3","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar axisPointerModelHelper = require(\"../axisPointer/modelHelper\");\n\n/**\n * Base class of AxisView.\n */\nvar AxisView = echarts.extendComponentView({\n  type: 'axis',\n\n  /**\n   * @private\n   */\n  _axisPointer: null,\n\n  /**\n   * @protected\n   * @type {string}\n   */\n  axisPointerClass: null,\n\n  /**\n   * @override\n   */\n  render: function (axisModel, ecModel, api, payload) {\n    // FIXME\n    // This process should proformed after coordinate systems updated\n    // (axis scale updated), and should be performed each time update.\n    // So put it here temporarily, although it is not appropriate to\n    // put a model-writing procedure in `view`.\n    this.axisPointerClass && axisPointerModelHelper.fixValue(axisModel);\n    AxisView.superApply(this, 'render', arguments);\n    updateAxisPointer(this, axisModel, ecModel, api, payload, true);\n  },\n\n  /**\n   * Action handler.\n   * @public\n   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n   * @param {module:echarts/model/Global} ecModel\n   * @param {module:echarts/ExtensionAPI} api\n   * @param {Object} payload\n   */\n  updateAxisPointer: function (axisModel, ecModel, api, payload, force) {\n    updateAxisPointer(this, axisModel, ecModel, api, payload, false);\n  },\n\n  /**\n   * @override\n   */\n  remove: function (ecModel, api) {\n    var axisPointer = this._axisPointer;\n    axisPointer && axisPointer.remove(api);\n    AxisView.superApply(this, 'remove', arguments);\n  },\n\n  /**\n   * @override\n   */\n  dispose: function (ecModel, api) {\n    disposeAxisPointer(this, api);\n    AxisView.superApply(this, 'dispose', arguments);\n  }\n});\n\nfunction updateAxisPointer(axisView, axisModel, ecModel, api, payload, forceRender) {\n  var Clazz = AxisView.getAxisPointerClass(axisView.axisPointerClass);\n\n  if (!Clazz) {\n    return;\n  }\n\n  var axisPointerModel = axisPointerModelHelper.getAxisPointerModel(axisModel);\n  axisPointerModel ? (axisView._axisPointer || (axisView._axisPointer = new Clazz())).render(axisModel, axisPointerModel, api, forceRender) : disposeAxisPointer(axisView, api);\n}\n\nfunction disposeAxisPointer(axisView, ecModel, api) {\n  var axisPointer = axisView._axisPointer;\n  axisPointer && axisPointer.dispose(ecModel, api);\n  axisView._axisPointer = null;\n}\n\nvar axisPointerClazz = [];\n\nAxisView.registerAxisPointerClass = function (type, clazz) {\n  axisPointerClazz[type] = clazz;\n};\n\nAxisView.getAxisPointerClass = function (type) {\n  return type && axisPointerClazz[type];\n};\n\nvar _default = AxisView;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axis/AxisView.js\n// module id = 1607\n// module chunks = 2 3","var zrUtil = require(\"zrender/lib/core/util\");\n\n/**\n * @param {Object} opt {labelInside}\n * @return {Object} {\n *  position, rotation, labelDirection, labelOffset,\n *  tickDirection, labelRotate, labelInterval, z2\n * }\n */\nfunction layout(gridModel, axisModel, opt) {\n  opt = opt || {};\n  var grid = gridModel.coordinateSystem;\n  var axis = axisModel.axis;\n  var layout = {};\n  var rawAxisPosition = axis.position;\n  var axisPosition = axis.onZero ? 'onZero' : rawAxisPosition;\n  var axisDim = axis.dim;\n  var rect = grid.getRect();\n  var rectBound = [rect.x, rect.x + rect.width, rect.y, rect.y + rect.height];\n  var idx = {\n    left: 0,\n    right: 1,\n    top: 0,\n    bottom: 1,\n    onZero: 2\n  };\n  var axisOffset = axisModel.get('offset') || 0;\n  var posBound = axisDim === 'x' ? [rectBound[2] - axisOffset, rectBound[3] + axisOffset] : [rectBound[0] - axisOffset, rectBound[1] + axisOffset];\n\n  if (axis.onZero) {\n    var otherAxis = grid.getAxis(axisDim === 'x' ? 'y' : 'x', axis.onZeroAxisIndex);\n    var onZeroCoord = otherAxis.toGlobalCoord(otherAxis.dataToCoord(0));\n    posBound[idx['onZero']] = Math.max(Math.min(onZeroCoord, posBound[1]), posBound[0]);\n  } // Axis position\n\n\n  layout.position = [axisDim === 'y' ? posBound[idx[axisPosition]] : rectBound[0], axisDim === 'x' ? posBound[idx[axisPosition]] : rectBound[3]]; // Axis rotation\n\n  layout.rotation = Math.PI / 2 * (axisDim === 'x' ? 0 : 1); // Tick and label direction, x y is axisDim\n\n  var dirMap = {\n    top: -1,\n    bottom: 1,\n    left: -1,\n    right: 1\n  };\n  layout.labelDirection = layout.tickDirection = layout.nameDirection = dirMap[rawAxisPosition];\n  layout.labelOffset = axis.onZero ? posBound[idx[rawAxisPosition]] - posBound[idx['onZero']] : 0;\n\n  if (axisModel.get('axisTick.inside')) {\n    layout.tickDirection = -layout.tickDirection;\n  }\n\n  if (zrUtil.retrieve(opt.labelInside, axisModel.get('axisLabel.inside'))) {\n    layout.labelDirection = -layout.labelDirection;\n  } // Special label rotation\n\n\n  var labelRotate = axisModel.get('axisLabel.rotate');\n  layout.labelRotate = axisPosition === 'top' ? -labelRotate : labelRotate; // label interval when auto mode.\n\n  layout.labelInterval = axis.getLabelInterval(); // Over splitLine and splitArea\n\n  layout.z2 = 1;\n  return layout;\n}\n\nexports.layout = layout;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axis/cartesianAxisHelper.js\n// module id = 1608\n// module chunks = 2 3","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../util/graphic\");\n\nrequire(\"../coord/cartesian/Grid\");\n\nrequire(\"./axis\");\n\n// Grid view\necharts.extendComponentView({\n  type: 'grid',\n  render: function (gridModel, ecModel) {\n    this.group.removeAll();\n\n    if (gridModel.get('show')) {\n      this.group.add(new graphic.Rect({\n        shape: gridModel.coordinateSystem.getRect(),\n        style: zrUtil.defaults({\n          fill: gridModel.get('backgroundColor')\n        }, gridModel.getItemStyle()),\n        silent: true,\n        z2: -1\n      }));\n    }\n  }\n});\necharts.registerPreprocessor(function (option) {\n  // Only create grid when need\n  if (option.xAxis && option.yAxis && !option.grid) {\n    option.grid = {};\n  }\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/gridSimple.js\n// module id = 1609\n// module chunks = 2 3","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar numberUtil = require(\"../util/number\");\n\nvar axisHelper = require(\"./axisHelper\");\n\nvar linearMap = numberUtil.linearMap;\n\nfunction fixExtentWithBands(extent, nTick) {\n  var size = extent[1] - extent[0];\n  var len = nTick;\n  var margin = size / len / 2;\n  extent[0] += margin;\n  extent[1] -= margin;\n}\n\nvar normalizedExtent = [0, 1];\n/**\n * @name module:echarts/coord/CartesianAxis\n * @constructor\n */\n\nvar Axis = function (dim, scale, extent) {\n  /**\n   * Axis dimension. Such as 'x', 'y', 'z', 'angle', 'radius'\n   * @type {string}\n   */\n  this.dim = dim;\n  /**\n   * Axis scale\n   * @type {module:echarts/coord/scale/*}\n   */\n\n  this.scale = scale;\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n\n  this._extent = extent || [0, 0];\n  /**\n   * @type {boolean}\n   */\n\n  this.inverse = false;\n  /**\n   * Usually true when axis has a ordinal scale\n   * @type {boolean}\n   */\n\n  this.onBand = false;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._labelInterval;\n};\n\nAxis.prototype = {\n  constructor: Axis,\n\n  /**\n   * If axis extent contain given coord\n   * @param {number} coord\n   * @return {boolean}\n   */\n  contain: function (coord) {\n    var extent = this._extent;\n    var min = Math.min(extent[0], extent[1]);\n    var max = Math.max(extent[0], extent[1]);\n    return coord >= min && coord <= max;\n  },\n\n  /**\n   * If axis extent contain given data\n   * @param {number} data\n   * @return {boolean}\n   */\n  containData: function (data) {\n    return this.contain(this.dataToCoord(data));\n  },\n\n  /**\n   * Get coord extent.\n   * @return {Array.<number>}\n   */\n  getExtent: function () {\n    return this._extent.slice();\n  },\n\n  /**\n   * Get precision used for formatting\n   * @param {Array.<number>} [dataExtent]\n   * @return {number}\n   */\n  getPixelPrecision: function (dataExtent) {\n    return numberUtil.getPixelPrecision(dataExtent || this.scale.getExtent(), this._extent);\n  },\n\n  /**\n   * Set coord extent\n   * @param {number} start\n   * @param {number} end\n   */\n  setExtent: function (start, end) {\n    var extent = this._extent;\n    extent[0] = start;\n    extent[1] = end;\n  },\n\n  /**\n   * Convert data to coord. Data is the rank if it has a ordinal scale\n   * @param {number} data\n   * @param  {boolean} clamp\n   * @return {number}\n   */\n  dataToCoord: function (data, clamp) {\n    var extent = this._extent;\n    var scale = this.scale;\n    data = scale.normalize(data);\n\n    if (this.onBand && scale.type === 'ordinal') {\n      extent = extent.slice();\n      fixExtentWithBands(extent, scale.count());\n    }\n\n    return linearMap(data, normalizedExtent, extent, clamp);\n  },\n\n  /**\n   * Convert coord to data. Data is the rank if it has a ordinal scale\n   * @param {number} coord\n   * @param  {boolean} clamp\n   * @return {number}\n   */\n  coordToData: function (coord, clamp) {\n    var extent = this._extent;\n    var scale = this.scale;\n\n    if (this.onBand && scale.type === 'ordinal') {\n      extent = extent.slice();\n      fixExtentWithBands(extent, scale.count());\n    }\n\n    var t = linearMap(coord, extent, normalizedExtent, clamp);\n    return this.scale.scale(t);\n  },\n\n  /**\n   * Convert pixel point to data in axis\n   * @param {Array.<number>} point\n   * @param  {boolean} clamp\n   * @return {number} data\n   */\n  pointToData: function (point, clamp) {// Should be implemented in derived class if necessary.\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getTicksCoords: function (alignWithLabel) {\n    if (this.onBand && !alignWithLabel) {\n      var bands = this.getBands();\n      var coords = [];\n\n      for (var i = 0; i < bands.length; i++) {\n        coords.push(bands[i][0]);\n      }\n\n      if (bands[i - 1]) {\n        coords.push(bands[i - 1][1]);\n      }\n\n      return coords;\n    } else {\n      return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\n    }\n  },\n\n  /**\n   * Coords of labels are on the ticks or on the middle of bands\n   * @return {Array.<number>}\n   */\n  getLabelsCoords: function () {\n    return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\n  },\n\n  /**\n   * Get bands.\n   *\n   * If axis has labels [1, 2, 3, 4]. Bands on the axis are\n   * |---1---|---2---|---3---|---4---|.\n   *\n   * @return {Array}\n   */\n  // FIXME Situation when labels is on ticks\n  getBands: function () {\n    var extent = this.getExtent();\n    var bands = [];\n    var len = this.scale.count();\n    var start = extent[0];\n    var end = extent[1];\n    var span = end - start;\n\n    for (var i = 0; i < len; i++) {\n      bands.push([span * i / len + start, span * (i + 1) / len + start]);\n    }\n\n    return bands;\n  },\n\n  /**\n   * Get width of band\n   * @return {number}\n   */\n  getBandWidth: function () {\n    var axisExtent = this._extent;\n    var dataExtent = this.scale.getExtent();\n    var len = dataExtent[1] - dataExtent[0] + (this.onBand ? 1 : 0); // Fix #2728, avoid NaN when only one data.\n\n    len === 0 && (len = 1);\n    var size = Math.abs(axisExtent[1] - axisExtent[0]);\n    return Math.abs(size) / len;\n  },\n\n  /**\n   * @abstract\n   * @return {boolean} Is horizontal\n   */\n  isHorizontal: null,\n\n  /**\n   * @abstract\n   * @return {number} Get axis rotate, by degree.\n   */\n  getRotate: null,\n\n  /**\n   * Get interval of the axis label.\n   * To get precise result, at least one of `getRotate` and `isHorizontal`\n   * should be implemented.\n   * @return {number}\n   */\n  getLabelInterval: function () {\n    var labelInterval = this._labelInterval;\n\n    if (!labelInterval) {\n      var axisModel = this.model;\n      var labelModel = axisModel.getModel('axisLabel');\n      labelInterval = labelModel.get('interval');\n\n      if (this.type === 'category' && (labelInterval == null || labelInterval === 'auto')) {\n        labelInterval = axisHelper.getAxisLabelInterval(zrUtil.map(this.scale.getTicks(), this.dataToCoord, this), axisModel.getFormattedLabels(), labelModel.getFont(), this.getRotate ? this.getRotate() : this.isHorizontal && !this.isHorizontal() ? 90 : 0, labelModel.get('rotate'));\n      }\n\n      this._labelInterval = labelInterval;\n    }\n\n    return labelInterval;\n  }\n};\nvar _default = Axis;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/Axis.js\n// module id = 1610\n// module chunks = 2 3","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar axisHelper = require(\"./axisHelper\");\n\nfunction getName(obj) {\n  if (zrUtil.isObject(obj) && obj.value != null) {\n    return obj.value;\n  } else {\n    return obj + '';\n  }\n}\n\nvar _default = {\n  /**\n   * Format labels\n   * @return {Array.<string>}\n   */\n  getFormattedLabels: function () {\n    return axisHelper.getFormattedLabels(this.axis, this.get('axisLabel.formatter'));\n  },\n\n  /**\n   * Get categories\n   */\n  getCategories: function () {\n    return this.get('type') === 'category' && zrUtil.map(this.get('data'), getName);\n  },\n\n  /**\n   * @param {boolean} origin\n   * @return {number|string} min value or 'dataMin' or null/undefined (means auto) or NaN\n   */\n  getMin: function (origin) {\n    var option = this.option;\n    var min = !origin && option.rangeStart != null ? option.rangeStart : option.min;\n\n    if (this.axis && min != null && min !== 'dataMin' && typeof min !== 'function' && !zrUtil.eqNaN(min)) {\n      min = this.axis.scale.parse(min);\n    }\n\n    return min;\n  },\n\n  /**\n   * @param {boolean} origin\n   * @return {number|string} max value or 'dataMax' or null/undefined (means auto) or NaN\n   */\n  getMax: function (origin) {\n    var option = this.option;\n    var max = !origin && option.rangeEnd != null ? option.rangeEnd : option.max;\n\n    if (this.axis && max != null && max !== 'dataMax' && typeof max !== 'function' && !zrUtil.eqNaN(max)) {\n      max = this.axis.scale.parse(max);\n    }\n\n    return max;\n  },\n\n  /**\n   * @return {boolean}\n   */\n  getNeedCrossZero: function () {\n    var option = this.option;\n    return option.rangeStart != null || option.rangeEnd != null ? false : !option.scale;\n  },\n\n  /**\n   * Should be implemented by each axis model if necessary.\n   * @return {module:echarts/model/Component} coordinate system model\n   */\n  getCoordSysModel: zrUtil.noop,\n\n  /**\n   * @param {number} rangeStart Can only be finite number or null/undefined or NaN.\n   * @param {number} rangeEnd Can only be finite number or null/undefined or NaN.\n   */\n  setRange: function (rangeStart, rangeEnd) {\n    this.option.rangeStart = rangeStart;\n    this.option.rangeEnd = rangeEnd;\n  },\n\n  /**\n   * Reset range\n   */\n  resetRange: function () {\n    // rangeStart and rangeEnd is readonly.\n    this.option.rangeStart = this.option.rangeEnd = null;\n  }\n};\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/axisModelCommonMixin.js\n// module id = 1611\n// module chunks = 2 3","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\nvar axisModelCreator = require(\"../axisModelCreator\");\n\nvar axisModelCommonMixin = require(\"../axisModelCommonMixin\");\n\nvar AxisModel = ComponentModel.extend({\n  type: 'cartesian2dAxis',\n\n  /**\n   * @type {module:echarts/coord/cartesian/Axis2D}\n   */\n  axis: null,\n\n  /**\n   * @override\n   */\n  init: function () {\n    AxisModel.superApply(this, 'init', arguments);\n    this.resetRange();\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function () {\n    AxisModel.superApply(this, 'mergeOption', arguments);\n    this.resetRange();\n  },\n\n  /**\n   * @override\n   */\n  restoreData: function () {\n    AxisModel.superApply(this, 'restoreData', arguments);\n    this.resetRange();\n  },\n\n  /**\n   * @override\n   * @return {module:echarts/model/Component}\n   */\n  getCoordSysModel: function () {\n    return this.ecModel.queryComponents({\n      mainType: 'grid',\n      index: this.option.gridIndex,\n      id: this.option.gridId\n    })[0];\n  }\n});\n\nfunction getAxisType(axisDim, option) {\n  // Default axis with data is category axis\n  return option.type || (option.data ? 'category' : 'value');\n}\n\nzrUtil.merge(AxisModel.prototype, axisModelCommonMixin);\nvar extraOption = {\n  // gridIndex: 0,\n  // gridId: '',\n  // Offset is for multiple axis on the same position\n  offset: 0\n};\naxisModelCreator('x', AxisModel, getAxisType, extraOption);\naxisModelCreator('y', AxisModel, getAxisType, extraOption);\nvar _default = AxisModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/cartesian/AxisModel.js\n// module id = 1612\n// module chunks = 2 3","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar _layout = require(\"../../util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\n\nvar axisHelper = require(\"../../coord/axisHelper\");\n\nvar Cartesian2D = require(\"./Cartesian2D\");\n\nvar Axis2D = require(\"./Axis2D\");\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\nrequire(\"./GridModel\");\n\n/**\n * Grid is a region which contains at most 4 cartesian systems\n *\n * TODO Default cartesian\n */\n// Depends on GridModel, AxisModel, which performs preprocess.\nvar each = zrUtil.each;\nvar ifAxisCrossZero = axisHelper.ifAxisCrossZero;\nvar niceScaleExtent = axisHelper.niceScaleExtent;\n/**\n * Check if the axis is used in the specified grid\n * @inner\n */\n\nfunction isAxisUsedInTheGrid(axisModel, gridModel, ecModel) {\n  return axisModel.getCoordSysModel() === gridModel;\n}\n\nfunction rotateTextRect(textRect, rotate) {\n  var rotateRadians = rotate * Math.PI / 180;\n  var boundingBox = textRect.plain();\n  var beforeWidth = boundingBox.width;\n  var beforeHeight = boundingBox.height;\n  var afterWidth = beforeWidth * Math.cos(rotateRadians) + beforeHeight * Math.sin(rotateRadians);\n  var afterHeight = beforeWidth * Math.sin(rotateRadians) + beforeHeight * Math.cos(rotateRadians);\n  var rotatedRect = new BoundingRect(boundingBox.x, boundingBox.y, afterWidth, afterHeight);\n  return rotatedRect;\n}\n\nfunction getLabelUnionRect(axis) {\n  var axisModel = axis.model;\n  var labels = axisModel.getFormattedLabels();\n  var axisLabelModel = axisModel.getModel('axisLabel');\n  var rect;\n  var step = 1;\n  var labelCount = labels.length;\n\n  if (labelCount > 40) {\n    // Simple optimization for large amount of labels\n    step = Math.ceil(labelCount / 40);\n  }\n\n  for (var i = 0; i < labelCount; i += step) {\n    if (!axis.isLabelIgnored(i)) {\n      var unrotatedSingleRect = axisLabelModel.getTextRect(labels[i]);\n      var singleRect = rotateTextRect(unrotatedSingleRect, axisLabelModel.get('rotate') || 0);\n      rect ? rect.union(singleRect) : rect = singleRect;\n    }\n  }\n\n  return rect;\n}\n\nfunction Grid(gridModel, ecModel, api) {\n  /**\n   * @type {Object.<string, module:echarts/coord/cartesian/Cartesian2D>}\n   * @private\n   */\n  this._coordsMap = {};\n  /**\n   * @type {Array.<module:echarts/coord/cartesian/Cartesian>}\n   * @private\n   */\n\n  this._coordsList = [];\n  /**\n   * @type {Object.<string, module:echarts/coord/cartesian/Axis2D>}\n   * @private\n   */\n\n  this._axesMap = {};\n  /**\n   * @type {Array.<module:echarts/coord/cartesian/Axis2D>}\n   * @private\n   */\n\n  this._axesList = [];\n\n  this._initCartesian(gridModel, ecModel, api);\n\n  this.model = gridModel;\n}\n\nvar gridProto = Grid.prototype;\ngridProto.type = 'grid';\ngridProto.axisPointerEnabled = true;\n\ngridProto.getRect = function () {\n  return this._rect;\n};\n\ngridProto.update = function (ecModel, api) {\n  var axesMap = this._axesMap;\n\n  this._updateScale(ecModel, this.model);\n\n  each(axesMap.x, function (xAxis) {\n    niceScaleExtent(xAxis.scale, xAxis.model);\n  });\n  each(axesMap.y, function (yAxis) {\n    niceScaleExtent(yAxis.scale, yAxis.model);\n  });\n  each(axesMap.x, function (xAxis) {\n    fixAxisOnZero(axesMap, 'y', xAxis);\n  });\n  each(axesMap.y, function (yAxis) {\n    fixAxisOnZero(axesMap, 'x', yAxis);\n  }); // Resize again if containLabel is enabled\n  // FIXME It may cause getting wrong grid size in data processing stage\n\n  this.resize(this.model, api);\n};\n\nfunction fixAxisOnZero(axesMap, otherAxisDim, axis) {\n  // onZero can not be enabled in these two situations:\n  // 1. When any other axis is a category axis.\n  // 2. When no axis is cross 0 point.\n  var axes = axesMap[otherAxisDim];\n\n  if (!axis.onZero) {\n    return;\n  }\n\n  var onZeroAxisIndex = axis.onZeroAxisIndex; // If target axis is specified.\n\n  if (onZeroAxisIndex != null) {\n    var otherAxis = axes[onZeroAxisIndex];\n\n    if (otherAxis && canNotOnZeroToAxis(otherAxis)) {\n      axis.onZero = false;\n    }\n\n    return;\n  }\n\n  for (var idx in axes) {\n    if (axes.hasOwnProperty(idx)) {\n      var otherAxis = axes[idx];\n\n      if (otherAxis && !canNotOnZeroToAxis(otherAxis)) {\n        onZeroAxisIndex = +idx;\n        break;\n      }\n    }\n  }\n\n  if (onZeroAxisIndex == null) {\n    axis.onZero = false;\n  }\n\n  axis.onZeroAxisIndex = onZeroAxisIndex;\n}\n\nfunction canNotOnZeroToAxis(axis) {\n  return axis.type === 'category' || axis.type === 'time' || !ifAxisCrossZero(axis);\n}\n/**\n * Resize the grid\n * @param {module:echarts/coord/cartesian/GridModel} gridModel\n * @param {module:echarts/ExtensionAPI} api\n */\n\n\ngridProto.resize = function (gridModel, api, ignoreContainLabel) {\n  var gridRect = getLayoutRect(gridModel.getBoxLayoutParams(), {\n    width: api.getWidth(),\n    height: api.getHeight()\n  });\n  this._rect = gridRect;\n  var axesList = this._axesList;\n  adjustAxes(); // Minus label size\n\n  if (!ignoreContainLabel && gridModel.get('containLabel')) {\n    each(axesList, function (axis) {\n      if (!axis.model.get('axisLabel.inside')) {\n        var labelUnionRect = getLabelUnionRect(axis);\n\n        if (labelUnionRect) {\n          var dim = axis.isHorizontal() ? 'height' : 'width';\n          var margin = axis.model.get('axisLabel.margin');\n          gridRect[dim] -= labelUnionRect[dim] + margin;\n\n          if (axis.position === 'top') {\n            gridRect.y += labelUnionRect.height + margin;\n          } else if (axis.position === 'left') {\n            gridRect.x += labelUnionRect.width + margin;\n          }\n        }\n      }\n    });\n    adjustAxes();\n  }\n\n  function adjustAxes() {\n    each(axesList, function (axis) {\n      var isHorizontal = axis.isHorizontal();\n      var extent = isHorizontal ? [0, gridRect.width] : [0, gridRect.height];\n      var idx = axis.inverse ? 1 : 0;\n      axis.setExtent(extent[idx], extent[1 - idx]);\n      updateAxisTransfrom(axis, isHorizontal ? gridRect.x : gridRect.y);\n    });\n  }\n};\n/**\n * @param {string} axisType\n * @param {number} [axisIndex]\n */\n\n\ngridProto.getAxis = function (axisType, axisIndex) {\n  var axesMapOnDim = this._axesMap[axisType];\n\n  if (axesMapOnDim != null) {\n    if (axisIndex == null) {\n      // Find first axis\n      for (var name in axesMapOnDim) {\n        if (axesMapOnDim.hasOwnProperty(name)) {\n          return axesMapOnDim[name];\n        }\n      }\n    }\n\n    return axesMapOnDim[axisIndex];\n  }\n};\n/**\n * @return {Array.<module:echarts/coord/Axis>}\n */\n\n\ngridProto.getAxes = function () {\n  return this._axesList.slice();\n};\n/**\n * Usage:\n *      grid.getCartesian(xAxisIndex, yAxisIndex);\n *      grid.getCartesian(xAxisIndex);\n *      grid.getCartesian(null, yAxisIndex);\n *      grid.getCartesian({xAxisIndex: ..., yAxisIndex: ...});\n *\n * @param {number|Object} [xAxisIndex]\n * @param {number} [yAxisIndex]\n */\n\n\ngridProto.getCartesian = function (xAxisIndex, yAxisIndex) {\n  if (xAxisIndex != null && yAxisIndex != null) {\n    var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n    return this._coordsMap[key];\n  }\n\n  if (zrUtil.isObject(xAxisIndex)) {\n    yAxisIndex = xAxisIndex.yAxisIndex;\n    xAxisIndex = xAxisIndex.xAxisIndex;\n  } // When only xAxisIndex or yAxisIndex given, find its first cartesian.\n\n\n  for (var i = 0, coordList = this._coordsList; i < coordList.length; i++) {\n    if (coordList[i].getAxis('x').index === xAxisIndex || coordList[i].getAxis('y').index === yAxisIndex) {\n      return coordList[i];\n    }\n  }\n};\n\ngridProto.getCartesians = function () {\n  return this._coordsList.slice();\n};\n/**\n * @implements\n * see {module:echarts/CoodinateSystem}\n */\n\n\ngridProto.convertToPixel = function (ecModel, finder, value) {\n  var target = this._findConvertTarget(ecModel, finder);\n\n  return target.cartesian ? target.cartesian.dataToPoint(value) : target.axis ? target.axis.toGlobalCoord(target.axis.dataToCoord(value)) : null;\n};\n/**\n * @implements\n * see {module:echarts/CoodinateSystem}\n */\n\n\ngridProto.convertFromPixel = function (ecModel, finder, value) {\n  var target = this._findConvertTarget(ecModel, finder);\n\n  return target.cartesian ? target.cartesian.pointToData(value) : target.axis ? target.axis.coordToData(target.axis.toLocalCoord(value)) : null;\n};\n/**\n * @inner\n */\n\n\ngridProto._findConvertTarget = function (ecModel, finder) {\n  var seriesModel = finder.seriesModel;\n  var xAxisModel = finder.xAxisModel || seriesModel && seriesModel.getReferringComponents('xAxis')[0];\n  var yAxisModel = finder.yAxisModel || seriesModel && seriesModel.getReferringComponents('yAxis')[0];\n  var gridModel = finder.gridModel;\n  var coordsList = this._coordsList;\n  var cartesian;\n  var axis;\n\n  if (seriesModel) {\n    cartesian = seriesModel.coordinateSystem;\n    zrUtil.indexOf(coordsList, cartesian) < 0 && (cartesian = null);\n  } else if (xAxisModel && yAxisModel) {\n    cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n  } else if (xAxisModel) {\n    axis = this.getAxis('x', xAxisModel.componentIndex);\n  } else if (yAxisModel) {\n    axis = this.getAxis('y', yAxisModel.componentIndex);\n  } // Lowest priority.\n  else if (gridModel) {\n      var grid = gridModel.coordinateSystem;\n\n      if (grid === this) {\n        cartesian = this._coordsList[0];\n      }\n    }\n\n  return {\n    cartesian: cartesian,\n    axis: axis\n  };\n};\n/**\n * @implements\n * see {module:echarts/CoodinateSystem}\n */\n\n\ngridProto.containPoint = function (point) {\n  var coord = this._coordsList[0];\n\n  if (coord) {\n    return coord.containPoint(point);\n  }\n};\n/**\n * Initialize cartesian coordinate systems\n * @private\n */\n\n\ngridProto._initCartesian = function (gridModel, ecModel, api) {\n  var axisPositionUsed = {\n    left: false,\n    right: false,\n    top: false,\n    bottom: false\n  };\n  var axesMap = {\n    x: {},\n    y: {}\n  };\n  var axesCount = {\n    x: 0,\n    y: 0\n  }; /// Create axis\n\n  ecModel.eachComponent('xAxis', createAxisCreator('x'), this);\n  ecModel.eachComponent('yAxis', createAxisCreator('y'), this);\n\n  if (!axesCount.x || !axesCount.y) {\n    // Roll back when there no either x or y axis\n    this._axesMap = {};\n    this._axesList = [];\n    return;\n  }\n\n  this._axesMap = axesMap; /// Create cartesian2d\n\n  each(axesMap.x, function (xAxis, xAxisIndex) {\n    each(axesMap.y, function (yAxis, yAxisIndex) {\n      var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n      var cartesian = new Cartesian2D(key);\n      cartesian.grid = this;\n      cartesian.model = gridModel;\n      this._coordsMap[key] = cartesian;\n\n      this._coordsList.push(cartesian);\n\n      cartesian.addAxis(xAxis);\n      cartesian.addAxis(yAxis);\n    }, this);\n  }, this);\n\n  function createAxisCreator(axisType) {\n    return function (axisModel, idx) {\n      if (!isAxisUsedInTheGrid(axisModel, gridModel, ecModel)) {\n        return;\n      }\n\n      var axisPosition = axisModel.get('position');\n\n      if (axisType === 'x') {\n        // Fix position\n        if (axisPosition !== 'top' && axisPosition !== 'bottom') {\n          // Default bottom of X\n          axisPosition = 'bottom';\n\n          if (axisPositionUsed[axisPosition]) {\n            axisPosition = axisPosition === 'top' ? 'bottom' : 'top';\n          }\n        }\n      } else {\n        // Fix position\n        if (axisPosition !== 'left' && axisPosition !== 'right') {\n          // Default left of Y\n          axisPosition = 'left';\n\n          if (axisPositionUsed[axisPosition]) {\n            axisPosition = axisPosition === 'left' ? 'right' : 'left';\n          }\n        }\n      }\n\n      axisPositionUsed[axisPosition] = true;\n      var axis = new Axis2D(axisType, axisHelper.createScaleByModel(axisModel), [0, 0], axisModel.get('type'), axisPosition);\n      var isCategory = axis.type === 'category';\n      axis.onBand = isCategory && axisModel.get('boundaryGap');\n      axis.inverse = axisModel.get('inverse');\n      axis.onZero = axisModel.get('axisLine.onZero');\n      axis.onZeroAxisIndex = axisModel.get('axisLine.onZeroAxisIndex'); // Inject axis into axisModel\n\n      axisModel.axis = axis; // Inject axisModel into axis\n\n      axis.model = axisModel; // Inject grid info axis\n\n      axis.grid = this; // Index of axis, can be used as key\n\n      axis.index = idx;\n\n      this._axesList.push(axis);\n\n      axesMap[axisType][idx] = axis;\n      axesCount[axisType]++;\n    };\n  }\n};\n/**\n * Update cartesian properties from series\n * @param  {module:echarts/model/Option} option\n * @private\n */\n\n\ngridProto._updateScale = function (ecModel, gridModel) {\n  // Reset scale\n  zrUtil.each(this._axesList, function (axis) {\n    axis.scale.setExtent(Infinity, -Infinity);\n  });\n  ecModel.eachSeries(function (seriesModel) {\n    if (isCartesian2D(seriesModel)) {\n      var axesModels = findAxesModels(seriesModel, ecModel);\n      var xAxisModel = axesModels[0];\n      var yAxisModel = axesModels[1];\n\n      if (!isAxisUsedInTheGrid(xAxisModel, gridModel, ecModel) || !isAxisUsedInTheGrid(yAxisModel, gridModel, ecModel)) {\n        return;\n      }\n\n      var cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n      var data = seriesModel.getData();\n      var xAxis = cartesian.getAxis('x');\n      var yAxis = cartesian.getAxis('y');\n\n      if (data.type === 'list') {\n        unionExtent(data, xAxis, seriesModel);\n        unionExtent(data, yAxis, seriesModel);\n      }\n    }\n  }, this);\n\n  function unionExtent(data, axis, seriesModel) {\n    each(seriesModel.coordDimToDataDim(axis.dim), function (dim) {\n      axis.scale.unionExtentFromData(data, dim);\n    });\n  }\n};\n/**\n * @param {string} [dim] 'x' or 'y' or 'auto' or null/undefined\n * @return {Object} {baseAxes: [], otherAxes: []}\n */\n\n\ngridProto.getTooltipAxes = function (dim) {\n  var baseAxes = [];\n  var otherAxes = [];\n  each(this.getCartesians(), function (cartesian) {\n    var baseAxis = dim != null && dim !== 'auto' ? cartesian.getAxis(dim) : cartesian.getBaseAxis();\n    var otherAxis = cartesian.getOtherAxis(baseAxis);\n    zrUtil.indexOf(baseAxes, baseAxis) < 0 && baseAxes.push(baseAxis);\n    zrUtil.indexOf(otherAxes, otherAxis) < 0 && otherAxes.push(otherAxis);\n  });\n  return {\n    baseAxes: baseAxes,\n    otherAxes: otherAxes\n  };\n};\n/**\n * @inner\n */\n\n\nfunction updateAxisTransfrom(axis, coordBase) {\n  var axisExtent = axis.getExtent();\n  var axisExtentSum = axisExtent[0] + axisExtent[1]; // Fast transform\n\n  axis.toGlobalCoord = axis.dim === 'x' ? function (coord) {\n    return coord + coordBase;\n  } : function (coord) {\n    return axisExtentSum - coord + coordBase;\n  };\n  axis.toLocalCoord = axis.dim === 'x' ? function (coord) {\n    return coord - coordBase;\n  } : function (coord) {\n    return axisExtentSum - coord + coordBase;\n  };\n}\n\nvar axesTypes = ['xAxis', 'yAxis'];\n/**\n * @inner\n */\n\nfunction findAxesModels(seriesModel, ecModel) {\n  return zrUtil.map(axesTypes, function (axisType) {\n    var axisModel = seriesModel.getReferringComponents(axisType)[0];\n    return axisModel;\n  });\n}\n/**\n * @inner\n */\n\n\nfunction isCartesian2D(seriesModel) {\n  return seriesModel.get('coordinateSystem') === 'cartesian2d';\n}\n\nGrid.create = function (ecModel, api) {\n  var grids = [];\n  ecModel.eachComponent('grid', function (gridModel, idx) {\n    var grid = new Grid(gridModel, ecModel, api);\n    grid.name = 'grid_' + idx; // dataSampling requires axis extent, so resize\n    // should be performed in create stage.\n\n    grid.resize(gridModel, api, true);\n    gridModel.coordinateSystem = grid;\n    grids.push(grid);\n  }); // Inject the coordinateSystems into seriesModel\n\n  ecModel.eachSeries(function (seriesModel) {\n    if (!isCartesian2D(seriesModel)) {\n      return;\n    }\n\n    var axesModels = findAxesModels(seriesModel, ecModel);\n    var xAxisModel = axesModels[0];\n    var yAxisModel = axesModels[1];\n    var gridModel = xAxisModel.getCoordSysModel();\n    var grid = gridModel.coordinateSystem;\n    seriesModel.coordinateSystem = grid.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n  });\n  return grids;\n}; // For deciding which dimensions to use when creating list data\n\n\nGrid.dimensions = Grid.prototype.dimensions = Cartesian2D.prototype.dimensions;\nCoordinateSystem.register('cartesian2d', Grid);\nvar _default = Grid;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/cartesian/Grid.js\n// module id = 1613\n// module chunks = 2 3","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Model = require(\"../model/Model\");\n\nvar DataDiffer = require(\"./DataDiffer\");\n\nvar modelUtil = require(\"../util/model\");\n\n/**\n * List for data storage\n * @module echarts/data/List\n */\nvar isObject = zrUtil.isObject;\nvar UNDEFINED = 'undefined';\nvar globalObj = typeof window === UNDEFINED ? global : window;\nvar dataCtors = {\n  'float': typeof globalObj.Float64Array === UNDEFINED ? Array : globalObj.Float64Array,\n  'int': typeof globalObj.Int32Array === UNDEFINED ? Array : globalObj.Int32Array,\n  // Ordinal data type can be string or int\n  'ordinal': Array,\n  'number': Array,\n  'time': Array\n};\nvar TRANSFERABLE_PROPERTIES = ['stackedOn', 'hasItemOption', '_nameList', '_idList', '_rawData'];\n\nfunction transferProperties(a, b) {\n  zrUtil.each(TRANSFERABLE_PROPERTIES.concat(b.__wrappedMethods || []), function (propName) {\n    if (b.hasOwnProperty(propName)) {\n      a[propName] = b[propName];\n    }\n  });\n  a.__wrappedMethods = b.__wrappedMethods;\n}\n\nfunction DefaultDataProvider(dataArray) {\n  this._array = dataArray || [];\n}\n\nDefaultDataProvider.prototype.pure = false;\n\nDefaultDataProvider.prototype.count = function () {\n  return this._array.length;\n};\n\nDefaultDataProvider.prototype.getItem = function (idx) {\n  return this._array[idx];\n};\n/**\n * @constructor\n * @alias module:echarts/data/List\n *\n * @param {Array.<string|Object>} dimensions\n *      For example, ['someDimName', {name: 'someDimName', type: 'someDimType'}, ...].\n *      Dimensions should be concrete names like x, y, z, lng, lat, angle, radius\n * @param {module:echarts/model/Model} hostModel\n */\n\n\nvar List = function (dimensions, hostModel) {\n  dimensions = dimensions || ['x', 'y'];\n  var dimensionInfos = {};\n  var dimensionNames = [];\n\n  for (var i = 0; i < dimensions.length; i++) {\n    var dimensionName;\n    var dimensionInfo = {};\n\n    if (typeof dimensions[i] === 'string') {\n      dimensionName = dimensions[i];\n      dimensionInfo = {\n        name: dimensionName,\n        coordDim: dimensionName,\n        coordDimIndex: 0,\n        stackable: false,\n        // Type can be 'float', 'int', 'number'\n        // Default is number, Precision of float may not enough\n        type: 'number'\n      };\n    } else {\n      dimensionInfo = dimensions[i];\n      dimensionName = dimensionInfo.name;\n      dimensionInfo.type = dimensionInfo.type || 'number';\n\n      if (!dimensionInfo.coordDim) {\n        dimensionInfo.coordDim = dimensionName;\n        dimensionInfo.coordDimIndex = 0;\n      }\n    }\n\n    dimensionInfo.otherDims = dimensionInfo.otherDims || {};\n    dimensionNames.push(dimensionName);\n    dimensionInfos[dimensionName] = dimensionInfo;\n  }\n  /**\n   * @readOnly\n   * @type {Array.<string>}\n   */\n\n\n  this.dimensions = dimensionNames;\n  /**\n   * Infomation of each data dimension, like data type.\n   * @type {Object}\n   */\n\n  this._dimensionInfos = dimensionInfos;\n  /**\n   * @type {module:echarts/model/Model}\n   */\n\n  this.hostModel = hostModel;\n  /**\n   * @type {module:echarts/model/Model}\n   */\n\n  this.dataType;\n  /**\n   * Indices stores the indices of data subset after filtered.\n   * This data subset will be used in chart.\n   * @type {Array.<number>}\n   * @readOnly\n   */\n\n  this.indices = [];\n  /**\n   * Data storage\n   * @type {Object.<key, TypedArray|Array>}\n   * @private\n   */\n\n  this._storage = {};\n  /**\n   * @type {Array.<string>}\n   */\n\n  this._nameList = [];\n  /**\n   * @type {Array.<string>}\n   */\n\n  this._idList = [];\n  /**\n   * Models of data option is stored sparse for optimizing memory cost\n   * @type {Array.<module:echarts/model/Model>}\n   * @private\n   */\n\n  this._optionModels = [];\n  /**\n   * @param {module:echarts/data/List}\n   */\n\n  this.stackedOn = null;\n  /**\n   * Global visual properties after visual coding\n   * @type {Object}\n   * @private\n   */\n\n  this._visual = {};\n  /**\n   * Globel layout properties.\n   * @type {Object}\n   * @private\n   */\n\n  this._layout = {};\n  /**\n   * Item visual properties after visual coding\n   * @type {Array.<Object>}\n   * @private\n   */\n\n  this._itemVisuals = [];\n  /**\n   * Item layout properties after layout\n   * @type {Array.<Object>}\n   * @private\n   */\n\n  this._itemLayouts = [];\n  /**\n   * Graphic elemnents\n   * @type {Array.<module:zrender/Element>}\n   * @private\n   */\n\n  this._graphicEls = [];\n  /**\n   * @type {Array.<Array|Object>}\n   * @private\n   */\n\n  this._rawData;\n  /**\n   * @type {Object}\n   * @private\n   */\n\n  this._extent;\n};\n\nvar listProto = List.prototype;\nlistProto.type = 'list';\n/**\n * If each data item has it's own option\n * @type {boolean}\n */\n\nlistProto.hasItemOption = true;\n/**\n * Get dimension name\n * @param {string|number} dim\n *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n * @return {string} Concrete dim name.\n */\n\nlistProto.getDimension = function (dim) {\n  if (!isNaN(dim)) {\n    dim = this.dimensions[dim] || dim;\n  }\n\n  return dim;\n};\n/**\n * Get type and stackable info of particular dimension\n * @param {string|number} dim\n *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n */\n\n\nlistProto.getDimensionInfo = function (dim) {\n  return zrUtil.clone(this._dimensionInfos[this.getDimension(dim)]);\n};\n/**\n * Initialize from data\n * @param {Array.<Object|number|Array>} data\n * @param {Array.<string>} [nameList]\n * @param {Function} [dimValueGetter] (dataItem, dimName, dataIndex, dimIndex) => number\n */\n\n\nlistProto.initData = function (data, nameList, dimValueGetter) {\n  data = data || [];\n  var isDataArray = zrUtil.isArray(data);\n\n  if (isDataArray) {\n    data = new DefaultDataProvider(data);\n  }\n\n  this._rawData = data; // Clear\n\n  var storage = this._storage = {};\n  var indices = this.indices = [];\n  var dimensions = this.dimensions;\n  var dimensionInfoMap = this._dimensionInfos;\n  var size = data.count();\n  var idList = [];\n  var nameRepeatCount = {};\n  var nameDimIdx;\n  nameList = nameList || []; // Init storage\n\n  for (var i = 0; i < dimensions.length; i++) {\n    var dimInfo = dimensionInfoMap[dimensions[i]];\n    dimInfo.otherDims.itemName === 0 && (nameDimIdx = i);\n    var DataCtor = dataCtors[dimInfo.type];\n    storage[dimensions[i]] = new DataCtor(size);\n  }\n\n  var self = this;\n\n  if (!dimValueGetter) {\n    self.hasItemOption = false;\n  } // Default dim value getter\n\n\n  dimValueGetter = dimValueGetter || function (dataItem, dimName, dataIndex, dimIndex) {\n    var value = modelUtil.getDataItemValue(dataItem); // If any dataItem is like { value: 10 }\n\n    if (modelUtil.isDataItemOption(dataItem)) {\n      self.hasItemOption = true;\n    }\n\n    return modelUtil.converDataValue(value instanceof Array ? value[dimIndex] // If value is a single number or something else not array.\n    : value, dimensionInfoMap[dimName]);\n  };\n\n  for (var i = 0; i < size; i++) {\n    // NOTICE: Try not to write things into dataItem\n    var dataItem = data.getItem(i); // Each data item is value\n    // [1, 2]\n    // 2\n    // Bar chart, line chart which uses category axis\n    // only gives the 'y' value. 'x' value is the indices of cateogry\n    // Use a tempValue to normalize the value to be a (x, y) value\n    // Store the data by dimensions\n\n    for (var k = 0; k < dimensions.length; k++) {\n      var dim = dimensions[k];\n      var dimStorage = storage[dim]; // PENDING NULL is empty or zero\n\n      dimStorage[i] = dimValueGetter(dataItem, dim, i, k);\n    }\n\n    indices.push(i);\n  } // Use the name in option and create id\n\n\n  for (var i = 0; i < size; i++) {\n    var dataItem = data.getItem(i);\n\n    if (!nameList[i] && dataItem) {\n      if (dataItem.name != null) {\n        nameList[i] = dataItem.name;\n      } else if (nameDimIdx != null) {\n        nameList[i] = storage[dimensions[nameDimIdx]][i];\n      }\n    }\n\n    var name = nameList[i] || ''; // Try using the id in option\n\n    var id = dataItem && dataItem.id;\n\n    if (!id && name) {\n      // Use name as id and add counter to avoid same name\n      nameRepeatCount[name] = nameRepeatCount[name] || 0;\n      id = name;\n\n      if (nameRepeatCount[name] > 0) {\n        id += '__ec__' + nameRepeatCount[name];\n      }\n\n      nameRepeatCount[name]++;\n    }\n\n    id && (idList[i] = id);\n  }\n\n  this._nameList = nameList;\n  this._idList = idList;\n};\n/**\n * @return {number}\n */\n\n\nlistProto.count = function () {\n  return this.indices.length;\n};\n/**\n * Get value. Return NaN if idx is out of range.\n * @param {string} dim Dim must be concrete name.\n * @param {number} idx\n * @param {boolean} stack\n * @return {number}\n */\n\n\nlistProto.get = function (dim, idx, stack) {\n  var storage = this._storage;\n  var dataIndex = this.indices[idx]; // If value not exists\n\n  if (dataIndex == null || !storage[dim]) {\n    return NaN;\n  }\n\n  var value = storage[dim][dataIndex]; // FIXME ordinal data type is not stackable\n\n  if (stack) {\n    var dimensionInfo = this._dimensionInfos[dim];\n\n    if (dimensionInfo && dimensionInfo.stackable) {\n      var stackedOn = this.stackedOn;\n\n      while (stackedOn) {\n        // Get no stacked data of stacked on\n        var stackedValue = stackedOn.get(dim, idx); // Considering positive stack, negative stack and empty data\n\n        if (value >= 0 && stackedValue > 0 || // Positive stack\n        value <= 0 && stackedValue < 0 // Negative stack\n        ) {\n            value += stackedValue;\n          }\n\n        stackedOn = stackedOn.stackedOn;\n      }\n    }\n  }\n\n  return value;\n};\n/**\n * Get value for multi dimensions.\n * @param {Array.<string>} [dimensions] If ignored, using all dimensions.\n * @param {number} idx\n * @param {boolean} stack\n * @return {number}\n */\n\n\nlistProto.getValues = function (dimensions, idx, stack) {\n  var values = [];\n\n  if (!zrUtil.isArray(dimensions)) {\n    stack = idx;\n    idx = dimensions;\n    dimensions = this.dimensions;\n  }\n\n  for (var i = 0, len = dimensions.length; i < len; i++) {\n    values.push(this.get(dimensions[i], idx, stack));\n  }\n\n  return values;\n};\n/**\n * If value is NaN. Inlcuding '-'\n * @param {string} dim\n * @param {number} idx\n * @return {number}\n */\n\n\nlistProto.hasValue = function (idx) {\n  var dimensions = this.dimensions;\n  var dimensionInfos = this._dimensionInfos;\n\n  for (var i = 0, len = dimensions.length; i < len; i++) {\n    if ( // Ordinal type can be string or number\n    dimensionInfos[dimensions[i]].type !== 'ordinal' && isNaN(this.get(dimensions[i], idx))) {\n      return false;\n    }\n  }\n\n  return true;\n};\n/**\n * Get extent of data in one dimension\n * @param {string} dim\n * @param {boolean} stack\n * @param {Function} filter\n */\n\n\nlistProto.getDataExtent = function (dim, stack, filter) {\n  dim = this.getDimension(dim);\n  var dimData = this._storage[dim];\n  var dimInfo = this.getDimensionInfo(dim);\n  stack = dimInfo && dimInfo.stackable && stack;\n  var dimExtent = (this._extent || (this._extent = {}))[dim + !!stack];\n  var value;\n\n  if (dimExtent) {\n    return dimExtent;\n  } // var dimInfo = this._dimensionInfos[dim];\n\n\n  if (dimData) {\n    var min = Infinity;\n    var max = -Infinity; // var isOrdinal = dimInfo.type === 'ordinal';\n\n    for (var i = 0, len = this.count(); i < len; i++) {\n      value = this.get(dim, i, stack); // FIXME\n      // if (isOrdinal && typeof value === 'string') {\n      //     value = zrUtil.indexOf(dimData, value);\n      // }\n\n      if (!filter || filter(value, dim, i)) {\n        value < min && (min = value);\n        value > max && (max = value);\n      }\n    }\n\n    return this._extent[dim + !!stack] = [min, max];\n  } else {\n    return [Infinity, -Infinity];\n  }\n};\n/**\n * Get sum of data in one dimension\n * @param {string} dim\n * @param {boolean} stack\n */\n\n\nlistProto.getSum = function (dim, stack) {\n  var dimData = this._storage[dim];\n  var sum = 0;\n\n  if (dimData) {\n    for (var i = 0, len = this.count(); i < len; i++) {\n      var value = this.get(dim, i, stack);\n\n      if (!isNaN(value)) {\n        sum += value;\n      }\n    }\n  }\n\n  return sum;\n};\n/**\n * Retreive the index with given value\n * @param {number} idx\n * @param {number} value\n * @return {number}\n */\n// FIXME Precision of float value\n\n\nlistProto.indexOf = function (dim, value) {\n  var storage = this._storage;\n  var dimData = storage[dim];\n  var indices = this.indices;\n\n  if (dimData) {\n    for (var i = 0, len = indices.length; i < len; i++) {\n      var rawIndex = indices[i];\n\n      if (dimData[rawIndex] === value) {\n        return i;\n      }\n    }\n  }\n\n  return -1;\n};\n/**\n * Retreive the index with given name\n * @param {number} idx\n * @param {number} name\n * @return {number}\n */\n\n\nlistProto.indexOfName = function (name) {\n  var indices = this.indices;\n  var nameList = this._nameList;\n\n  for (var i = 0, len = indices.length; i < len; i++) {\n    var rawIndex = indices[i];\n\n    if (nameList[rawIndex] === name) {\n      return i;\n    }\n  }\n\n  return -1;\n};\n/**\n * Retreive the index with given raw data index\n * @param {number} idx\n * @param {number} name\n * @return {number}\n */\n\n\nlistProto.indexOfRawIndex = function (rawIndex) {\n  // Indices are ascending\n  var indices = this.indices; // If rawIndex === dataIndex\n\n  var rawDataIndex = indices[rawIndex];\n\n  if (rawDataIndex != null && rawDataIndex === rawIndex) {\n    return rawIndex;\n  }\n\n  var left = 0;\n  var right = indices.length - 1;\n\n  while (left <= right) {\n    var mid = (left + right) / 2 | 0;\n\n    if (indices[mid] < rawIndex) {\n      left = mid + 1;\n    } else if (indices[mid] > rawIndex) {\n      right = mid - 1;\n    } else {\n      return mid;\n    }\n  }\n\n  return -1;\n};\n/**\n * Retreive the index of nearest value\n * @param {string} dim\n * @param {number} value\n * @param {boolean} stack If given value is after stacked\n * @param {number} [maxDistance=Infinity]\n * @return {Array.<number>} Considere multiple points has the same value.\n */\n\n\nlistProto.indicesOfNearest = function (dim, value, stack, maxDistance) {\n  var storage = this._storage;\n  var dimData = storage[dim];\n  var nearestIndices = [];\n\n  if (!dimData) {\n    return nearestIndices;\n  }\n\n  if (maxDistance == null) {\n    maxDistance = Infinity;\n  }\n\n  var minDist = Number.MAX_VALUE;\n  var minDiff = -1;\n\n  for (var i = 0, len = this.count(); i < len; i++) {\n    var diff = value - this.get(dim, i, stack);\n    var dist = Math.abs(diff);\n\n    if (diff <= maxDistance && dist <= minDist) {\n      // For the case of two data are same on xAxis, which has sequence data.\n      // Show the nearest index\n      // https://github.com/ecomfe/echarts/issues/2869\n      if (dist < minDist || diff >= 0 && minDiff < 0) {\n        minDist = dist;\n        minDiff = diff;\n        nearestIndices.length = 0;\n      }\n\n      nearestIndices.push(i);\n    }\n  }\n\n  return nearestIndices;\n};\n/**\n * Get raw data index\n * @param {number} idx\n * @return {number}\n */\n\n\nlistProto.getRawIndex = function (idx) {\n  var rawIdx = this.indices[idx];\n  return rawIdx == null ? -1 : rawIdx;\n};\n/**\n * Get raw data item\n * @param {number} idx\n * @return {number}\n */\n\n\nlistProto.getRawDataItem = function (idx) {\n  return this._rawData.getItem(this.getRawIndex(idx));\n};\n/**\n * @param {number} idx\n * @param {boolean} [notDefaultIdx=false]\n * @return {string}\n */\n\n\nlistProto.getName = function (idx) {\n  return this._nameList[this.indices[idx]] || '';\n};\n/**\n * @param {number} idx\n * @param {boolean} [notDefaultIdx=false]\n * @return {string}\n */\n\n\nlistProto.getId = function (idx) {\n  return this._idList[this.indices[idx]] || this.getRawIndex(idx) + '';\n};\n\nfunction normalizeDimensions(dimensions) {\n  if (!zrUtil.isArray(dimensions)) {\n    dimensions = [dimensions];\n  }\n\n  return dimensions;\n}\n/**\n * Data iteration\n * @param {string|Array.<string>}\n * @param {Function} cb\n * @param {boolean} [stack=false]\n * @param {*} [context=this]\n *\n * @example\n *  list.each('x', function (x, idx) {});\n *  list.each(['x', 'y'], function (x, y, idx) {});\n *  list.each(function (idx) {})\n */\n\n\nlistProto.each = function (dims, cb, stack, context) {\n  if (typeof dims === 'function') {\n    context = stack;\n    stack = cb;\n    cb = dims;\n    dims = [];\n  }\n\n  dims = zrUtil.map(normalizeDimensions(dims), this.getDimension, this);\n  var value = [];\n  var dimSize = dims.length;\n  var indices = this.indices;\n  context = context || this;\n\n  for (var i = 0; i < indices.length; i++) {\n    // Simple optimization\n    switch (dimSize) {\n      case 0:\n        cb.call(context, i);\n        break;\n\n      case 1:\n        cb.call(context, this.get(dims[0], i, stack), i);\n        break;\n\n      case 2:\n        cb.call(context, this.get(dims[0], i, stack), this.get(dims[1], i, stack), i);\n        break;\n\n      default:\n        for (var k = 0; k < dimSize; k++) {\n          value[k] = this.get(dims[k], i, stack);\n        } // Index\n\n\n        value[k] = i;\n        cb.apply(context, value);\n    }\n  }\n};\n/**\n * Data filter\n * @param {string|Array.<string>}\n * @param {Function} cb\n * @param {boolean} [stack=false]\n * @param {*} [context=this]\n */\n\n\nlistProto.filterSelf = function (dimensions, cb, stack, context) {\n  if (typeof dimensions === 'function') {\n    context = stack;\n    stack = cb;\n    cb = dimensions;\n    dimensions = [];\n  }\n\n  dimensions = zrUtil.map(normalizeDimensions(dimensions), this.getDimension, this);\n  var newIndices = [];\n  var value = [];\n  var dimSize = dimensions.length;\n  var indices = this.indices;\n  context = context || this;\n\n  for (var i = 0; i < indices.length; i++) {\n    var keep; // Simple optimization\n\n    if (!dimSize) {\n      keep = cb.call(context, i);\n    } else if (dimSize === 1) {\n      keep = cb.call(context, this.get(dimensions[0], i, stack), i);\n    } else {\n      for (var k = 0; k < dimSize; k++) {\n        value[k] = this.get(dimensions[k], i, stack);\n      }\n\n      value[k] = i;\n      keep = cb.apply(context, value);\n    }\n\n    if (keep) {\n      newIndices.push(indices[i]);\n    }\n  }\n\n  this.indices = newIndices; // Reset data extent\n\n  this._extent = {};\n  return this;\n};\n/**\n * Data mapping to a plain array\n * @param {string|Array.<string>} [dimensions]\n * @param {Function} cb\n * @param {boolean} [stack=false]\n * @param {*} [context=this]\n * @return {Array}\n */\n\n\nlistProto.mapArray = function (dimensions, cb, stack, context) {\n  if (typeof dimensions === 'function') {\n    context = stack;\n    stack = cb;\n    cb = dimensions;\n    dimensions = [];\n  }\n\n  var result = [];\n  this.each(dimensions, function () {\n    result.push(cb && cb.apply(this, arguments));\n  }, stack, context);\n  return result;\n};\n\nfunction cloneListForMapAndSample(original, excludeDimensions) {\n  var allDimensions = original.dimensions;\n  var list = new List(zrUtil.map(allDimensions, original.getDimensionInfo, original), original.hostModel); // FIXME If needs stackedOn, value may already been stacked\n\n  transferProperties(list, original);\n  var storage = list._storage = {};\n  var originalStorage = original._storage; // Init storage\n\n  for (var i = 0; i < allDimensions.length; i++) {\n    var dim = allDimensions[i];\n    var dimStore = originalStorage[dim];\n\n    if (zrUtil.indexOf(excludeDimensions, dim) >= 0) {\n      storage[dim] = new dimStore.constructor(originalStorage[dim].length);\n    } else {\n      // Direct reference for other dimensions\n      storage[dim] = originalStorage[dim];\n    }\n  }\n\n  return list;\n}\n/**\n * Data mapping to a new List with given dimensions\n * @param {string|Array.<string>} dimensions\n * @param {Function} cb\n * @param {boolean} [stack=false]\n * @param {*} [context=this]\n * @return {Array}\n */\n\n\nlistProto.map = function (dimensions, cb, stack, context) {\n  dimensions = zrUtil.map(normalizeDimensions(dimensions), this.getDimension, this);\n  var list = cloneListForMapAndSample(this, dimensions); // Following properties are all immutable.\n  // So we can reference to the same value\n\n  var indices = list.indices = this.indices;\n  var storage = list._storage;\n  var tmpRetValue = [];\n  this.each(dimensions, function () {\n    var idx = arguments[arguments.length - 1];\n    var retValue = cb && cb.apply(this, arguments);\n\n    if (retValue != null) {\n      // a number\n      if (typeof retValue === 'number') {\n        tmpRetValue[0] = retValue;\n        retValue = tmpRetValue;\n      }\n\n      for (var i = 0; i < retValue.length; i++) {\n        var dim = dimensions[i];\n        var dimStore = storage[dim];\n        var rawIdx = indices[idx];\n\n        if (dimStore) {\n          dimStore[rawIdx] = retValue[i];\n        }\n      }\n    }\n  }, stack, context);\n  return list;\n};\n/**\n * Large data down sampling on given dimension\n * @param {string} dimension\n * @param {number} rate\n * @param {Function} sampleValue\n * @param {Function} sampleIndex Sample index for name and id\n */\n\n\nlistProto.downSample = function (dimension, rate, sampleValue, sampleIndex) {\n  var list = cloneListForMapAndSample(this, [dimension]);\n  var storage = this._storage;\n  var targetStorage = list._storage;\n  var originalIndices = this.indices;\n  var indices = list.indices = [];\n  var frameValues = [];\n  var frameIndices = [];\n  var frameSize = Math.floor(1 / rate);\n  var dimStore = targetStorage[dimension];\n  var len = this.count(); // Copy data from original data\n\n  for (var i = 0; i < storage[dimension].length; i++) {\n    targetStorage[dimension][i] = storage[dimension][i];\n  }\n\n  for (var i = 0; i < len; i += frameSize) {\n    // Last frame\n    if (frameSize > len - i) {\n      frameSize = len - i;\n      frameValues.length = frameSize;\n    }\n\n    for (var k = 0; k < frameSize; k++) {\n      var idx = originalIndices[i + k];\n      frameValues[k] = dimStore[idx];\n      frameIndices[k] = idx;\n    }\n\n    var value = sampleValue(frameValues);\n    var idx = frameIndices[sampleIndex(frameValues, value) || 0]; // Only write value on the filtered data\n\n    dimStore[idx] = value;\n    indices.push(idx);\n  }\n\n  return list;\n};\n/**\n * Get model of one data item.\n *\n * @param {number} idx\n */\n// FIXME Model proxy ?\n\n\nlistProto.getItemModel = function (idx) {\n  var hostModel = this.hostModel;\n  idx = this.indices[idx];\n  return new Model(this._rawData.getItem(idx), hostModel, hostModel && hostModel.ecModel);\n};\n/**\n * Create a data differ\n * @param {module:echarts/data/List} otherList\n * @return {module:echarts/data/DataDiffer}\n */\n\n\nlistProto.diff = function (otherList) {\n  var idList = this._idList;\n  var otherIdList = otherList && otherList._idList;\n  var val; // Use prefix to avoid index to be the same as otherIdList[idx],\n  // which will cause weird udpate animation.\n\n  var prefix = 'e\\0\\0';\n  return new DataDiffer(otherList ? otherList.indices : [], this.indices, function (idx) {\n    return (val = otherIdList[idx]) != null ? val : prefix + idx;\n  }, function (idx) {\n    return (val = idList[idx]) != null ? val : prefix + idx;\n  });\n};\n/**\n * Get visual property.\n * @param {string} key\n */\n\n\nlistProto.getVisual = function (key) {\n  var visual = this._visual;\n  return visual && visual[key];\n};\n/**\n * Set visual property\n * @param {string|Object} key\n * @param {*} [value]\n *\n * @example\n *  setVisual('color', color);\n *  setVisual({\n *      'color': color\n *  });\n */\n\n\nlistProto.setVisual = function (key, val) {\n  if (isObject(key)) {\n    for (var name in key) {\n      if (key.hasOwnProperty(name)) {\n        this.setVisual(name, key[name]);\n      }\n    }\n\n    return;\n  }\n\n  this._visual = this._visual || {};\n  this._visual[key] = val;\n};\n/**\n * Set layout property.\n * @param {string|Object} key\n * @param {*} [val]\n */\n\n\nlistProto.setLayout = function (key, val) {\n  if (isObject(key)) {\n    for (var name in key) {\n      if (key.hasOwnProperty(name)) {\n        this.setLayout(name, key[name]);\n      }\n    }\n\n    return;\n  }\n\n  this._layout[key] = val;\n};\n/**\n * Get layout property.\n * @param  {string} key.\n * @return {*}\n */\n\n\nlistProto.getLayout = function (key) {\n  return this._layout[key];\n};\n/**\n * Get layout of single data item\n * @param {number} idx\n */\n\n\nlistProto.getItemLayout = function (idx) {\n  return this._itemLayouts[idx];\n};\n/**\n * Set layout of single data item\n * @param {number} idx\n * @param {Object} layout\n * @param {boolean=} [merge=false]\n */\n\n\nlistProto.setItemLayout = function (idx, layout, merge) {\n  this._itemLayouts[idx] = merge ? zrUtil.extend(this._itemLayouts[idx] || {}, layout) : layout;\n};\n/**\n * Clear all layout of single data item\n */\n\n\nlistProto.clearItemLayouts = function () {\n  this._itemLayouts.length = 0;\n};\n/**\n * Get visual property of single data item\n * @param {number} idx\n * @param {string} key\n * @param {boolean} [ignoreParent=false]\n */\n\n\nlistProto.getItemVisual = function (idx, key, ignoreParent) {\n  var itemVisual = this._itemVisuals[idx];\n  var val = itemVisual && itemVisual[key];\n\n  if (val == null && !ignoreParent) {\n    // Use global visual property\n    return this.getVisual(key);\n  }\n\n  return val;\n};\n/**\n * Set visual property of single data item\n *\n * @param {number} idx\n * @param {string|Object} key\n * @param {*} [value]\n *\n * @example\n *  setItemVisual(0, 'color', color);\n *  setItemVisual(0, {\n *      'color': color\n *  });\n */\n\n\nlistProto.setItemVisual = function (idx, key, value) {\n  var itemVisual = this._itemVisuals[idx] || {};\n  this._itemVisuals[idx] = itemVisual;\n\n  if (isObject(key)) {\n    for (var name in key) {\n      if (key.hasOwnProperty(name)) {\n        itemVisual[name] = key[name];\n      }\n    }\n\n    return;\n  }\n\n  itemVisual[key] = value;\n};\n/**\n * Clear itemVisuals and list visual.\n */\n\n\nlistProto.clearAllVisual = function () {\n  this._visual = {};\n  this._itemVisuals = [];\n};\n\nvar setItemDataAndSeriesIndex = function (child) {\n  child.seriesIndex = this.seriesIndex;\n  child.dataIndex = this.dataIndex;\n  child.dataType = this.dataType;\n};\n/**\n * Set graphic element relative to data. It can be set as null\n * @param {number} idx\n * @param {module:zrender/Element} [el]\n */\n\n\nlistProto.setItemGraphicEl = function (idx, el) {\n  var hostModel = this.hostModel;\n\n  if (el) {\n    // Add data index and series index for indexing the data by element\n    // Useful in tooltip\n    el.dataIndex = idx;\n    el.dataType = this.dataType;\n    el.seriesIndex = hostModel && hostModel.seriesIndex;\n\n    if (el.type === 'group') {\n      el.traverse(setItemDataAndSeriesIndex, el);\n    }\n  }\n\n  this._graphicEls[idx] = el;\n};\n/**\n * @param {number} idx\n * @return {module:zrender/Element}\n */\n\n\nlistProto.getItemGraphicEl = function (idx) {\n  return this._graphicEls[idx];\n};\n/**\n * @param {Function} cb\n * @param {*} context\n */\n\n\nlistProto.eachItemGraphicEl = function (cb, context) {\n  zrUtil.each(this._graphicEls, function (el, idx) {\n    if (el) {\n      cb && cb.call(context, el, idx);\n    }\n  });\n};\n/**\n * Shallow clone a new list except visual and layout properties, and graph elements.\n * New list only change the indices.\n */\n\n\nlistProto.cloneShallow = function () {\n  var dimensionInfoList = zrUtil.map(this.dimensions, this.getDimensionInfo, this);\n  var list = new List(dimensionInfoList, this.hostModel); // FIXME\n\n  list._storage = this._storage;\n  transferProperties(list, this); // Clone will not change the data extent and indices\n\n  list.indices = this.indices.slice();\n\n  if (this._extent) {\n    list._extent = zrUtil.extend({}, this._extent);\n  }\n\n  return list;\n};\n/**\n * Wrap some method to add more feature\n * @param {string} methodName\n * @param {Function} injectFunction\n */\n\n\nlistProto.wrapMethod = function (methodName, injectFunction) {\n  var originalMethod = this[methodName];\n\n  if (typeof originalMethod !== 'function') {\n    return;\n  }\n\n  this.__wrappedMethods = this.__wrappedMethods || [];\n\n  this.__wrappedMethods.push(methodName);\n\n  this[methodName] = function () {\n    var res = originalMethod.apply(this, arguments);\n    return injectFunction.apply(this, [res].concat(zrUtil.slice(arguments)));\n  };\n}; // Methods that create a new list based on this list should be listed here.\n// Notice that those method should `RETURN` the new list.\n\n\nlistProto.TRANSFERABLE_METHODS = ['cloneShallow', 'downSample', 'map']; // Methods that change indices of this list should be listed here.\n\nlistProto.CHANGABLE_METHODS = ['filterSelf'];\nvar _default = List;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/data/List.js\n// module id = 1614\n// module chunks = 2 3","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _model = require(\"../../util/model\");\n\nvar normalizeToArray = _model.normalizeToArray;\n\n/**\n * Complete dimensions by data (guess dimension).\n */\nvar each = zrUtil.each;\nvar isString = zrUtil.isString;\nvar defaults = zrUtil.defaults;\nvar OTHER_DIMS = {\n  tooltip: 1,\n  label: 1,\n  itemName: 1\n};\n/**\n * Complete the dimensions array, by user defined `dimension` and `encode`,\n * and guessing from the data structure.\n * If no 'value' dimension specified, the first no-named dimension will be\n * named as 'value'.\n *\n * @param {Array.<string>} sysDims Necessary dimensions, like ['x', 'y'], which\n *      provides not only dim template, but also default order.\n *      `name` of each item provides default coord name.\n *      [{dimsDef: []}, ...] can be specified to give names.\n * @param {Array} data Data list. [[1, 2, 3], [2, 3, 4]].\n * @param {Object} [opt]\n * @param {Array.<Object|string>} [opt.dimsDef] option.series.dimensions User defined dimensions\n *      For example: ['asdf', {name, type}, ...].\n * @param {Object} [opt.encodeDef] option.series.encode {x: 2, y: [3, 1], tooltip: [1, 2], label: 3}\n * @param {string} [opt.extraPrefix] Prefix of name when filling the left dimensions.\n * @param {string} [opt.extraFromZero] If specified, extra dim names will be:\n *                      extraPrefix + 0, extraPrefix + extraBaseIndex + 1 ...\n *                      If not specified, extra dim names will be:\n *                      extraPrefix, extraPrefix + 0, extraPrefix + 1 ...\n * @param {number} [opt.dimCount] If not specified, guess by the first data item.\n * @return {Array.<Object>} [{\n *      name: string mandatory,\n *      coordDim: string mandatory,\n *      coordDimIndex: number mandatory,\n *      type: string optional,\n *      tooltipName: string optional,\n *      otherDims: {\n *          tooltip: number optional,\n *          label: number optional\n *      },\n *      isExtraCoord: boolean true or undefined.\n *      other props ...\n * }]\n */\n\nfunction completeDimensions(sysDims, data, opt) {\n  data = data || [];\n  opt = opt || {};\n  sysDims = (sysDims || []).slice();\n  var dimsDef = (opt.dimsDef || []).slice();\n  var encodeDef = zrUtil.createHashMap(opt.encodeDef);\n  var dataDimNameMap = zrUtil.createHashMap();\n  var coordDimNameMap = zrUtil.createHashMap(); // var valueCandidate;\n\n  var result = [];\n  var dimCount = opt.dimCount;\n\n  if (dimCount == null) {\n    var value0 = retrieveValue(data[0]);\n    dimCount = Math.max(zrUtil.isArray(value0) && value0.length || 1, sysDims.length, dimsDef.length);\n    each(sysDims, function (sysDimItem) {\n      var sysDimItemDimsDef = sysDimItem.dimsDef;\n      sysDimItemDimsDef && (dimCount = Math.max(dimCount, sysDimItemDimsDef.length));\n    });\n  } // Apply user defined dims (`name` and `type`) and init result.\n\n\n  for (var i = 0; i < dimCount; i++) {\n    var dimDefItem = isString(dimsDef[i]) ? {\n      name: dimsDef[i]\n    } : dimsDef[i] || {};\n    var userDimName = dimDefItem.name;\n    var resultItem = result[i] = {\n      otherDims: {}\n    }; // Name will be applied later for avoiding duplication.\n\n    if (userDimName != null && dataDimNameMap.get(userDimName) == null) {\n      // Only if `series.dimensions` is defined in option, tooltipName\n      // will be set, and dimension will be diplayed vertically in\n      // tooltip by default.\n      resultItem.name = resultItem.tooltipName = userDimName;\n      dataDimNameMap.set(userDimName, i);\n    }\n\n    dimDefItem.type != null && (resultItem.type = dimDefItem.type);\n  } // Set `coordDim` and `coordDimIndex` by `encodeDef` and normalize `encodeDef`.\n\n\n  encodeDef.each(function (dataDims, coordDim) {\n    dataDims = encodeDef.set(coordDim, normalizeToArray(dataDims).slice());\n    each(dataDims, function (resultDimIdx, coordDimIndex) {\n      // The input resultDimIdx can be dim name or index.\n      isString(resultDimIdx) && (resultDimIdx = dataDimNameMap.get(resultDimIdx));\n\n      if (resultDimIdx != null && resultDimIdx < dimCount) {\n        dataDims[coordDimIndex] = resultDimIdx;\n        applyDim(result[resultDimIdx], coordDim, coordDimIndex);\n      }\n    });\n  }); // Apply templetes and default order from `sysDims`.\n\n  var availDimIdx = 0;\n  each(sysDims, function (sysDimItem, sysDimIndex) {\n    var coordDim;\n    var sysDimItem;\n    var sysDimItemDimsDef;\n    var sysDimItemOtherDims;\n\n    if (isString(sysDimItem)) {\n      coordDim = sysDimItem;\n      sysDimItem = {};\n    } else {\n      coordDim = sysDimItem.name;\n      sysDimItem = zrUtil.clone(sysDimItem); // `coordDimIndex` should not be set directly.\n\n      sysDimItemDimsDef = sysDimItem.dimsDef;\n      sysDimItemOtherDims = sysDimItem.otherDims;\n      sysDimItem.name = sysDimItem.coordDim = sysDimItem.coordDimIndex = sysDimItem.dimsDef = sysDimItem.otherDims = null;\n    }\n\n    var dataDims = normalizeToArray(encodeDef.get(coordDim)); // dimensions provides default dim sequences.\n\n    if (!dataDims.length) {\n      for (var i = 0; i < (sysDimItemDimsDef && sysDimItemDimsDef.length || 1); i++) {\n        while (availDimIdx < result.length && result[availDimIdx].coordDim != null) {\n          availDimIdx++;\n        }\n\n        availDimIdx < result.length && dataDims.push(availDimIdx++);\n      }\n    } // Apply templates.\n\n\n    each(dataDims, function (resultDimIdx, coordDimIndex) {\n      var resultItem = result[resultDimIdx];\n      applyDim(defaults(resultItem, sysDimItem), coordDim, coordDimIndex);\n\n      if (resultItem.name == null && sysDimItemDimsDef) {\n        resultItem.name = resultItem.tooltipName = sysDimItemDimsDef[coordDimIndex];\n      }\n\n      sysDimItemOtherDims && defaults(resultItem.otherDims, sysDimItemOtherDims);\n    });\n  }); // Make sure the first extra dim is 'value'.\n\n  var extra = opt.extraPrefix || 'value'; // Set dim `name` and other `coordDim` and other props.\n\n  for (var resultDimIdx = 0; resultDimIdx < dimCount; resultDimIdx++) {\n    var resultItem = result[resultDimIdx] = result[resultDimIdx] || {};\n    var coordDim = resultItem.coordDim;\n    coordDim == null && (resultItem.coordDim = genName(extra, coordDimNameMap, opt.extraFromZero), resultItem.coordDimIndex = 0, resultItem.isExtraCoord = true);\n    resultItem.name == null && (resultItem.name = genName(resultItem.coordDim, dataDimNameMap));\n    resultItem.type == null && guessOrdinal(data, resultDimIdx) && (resultItem.type = 'ordinal');\n  }\n\n  return result;\n\n  function applyDim(resultItem, coordDim, coordDimIndex) {\n    if (OTHER_DIMS[coordDim]) {\n      resultItem.otherDims[coordDim] = coordDimIndex;\n    } else {\n      resultItem.coordDim = coordDim;\n      resultItem.coordDimIndex = coordDimIndex;\n      coordDimNameMap.set(coordDim, true);\n    }\n  }\n\n  function genName(name, map, fromZero) {\n    if (fromZero || map.get(name) != null) {\n      var i = 0;\n\n      while (map.get(name + i) != null) {\n        i++;\n      }\n\n      name += i;\n    }\n\n    map.set(name, true);\n    return name;\n  }\n} // The rule should not be complex, otherwise user might not\n// be able to known where the data is wrong.\n\n\nvar guessOrdinal = completeDimensions.guessOrdinal = function (data, dimIndex) {\n  for (var i = 0, len = data.length; i < len; i++) {\n    var value = retrieveValue(data[i]);\n\n    if (!zrUtil.isArray(value)) {\n      return false;\n    }\n\n    var value = value[dimIndex]; // Consider usage convenience, '1', '2' will be treated as \"number\".\n    // `isFinit('')` get `true`.\n\n    if (value != null && isFinite(value) && value !== '') {\n      return false;\n    } else if (isString(value) && value !== '-') {\n      return true;\n    }\n  }\n\n  return false;\n};\n\nfunction retrieveValue(o) {\n  return zrUtil.isArray(o) ? o : zrUtil.isObject(o) ? o.value : o;\n}\n\nvar _default = completeDimensions;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/data/helper/completeDimensions.js\n// module id = 1615\n// module chunks = 2 3","var _clazz = require(\"../../util/clazz\");\n\nvar set = _clazz.set;\nvar get = _clazz.get;\nvar _default = {\n  clearColorPalette: function () {\n    set(this, 'colorIdx', 0);\n    set(this, 'colorNameMap', {});\n  },\n  getColorFromPalette: function (name, scope) {\n    scope = scope || this;\n    var colorIdx = get(scope, 'colorIdx') || 0;\n    var colorNameMap = get(scope, 'colorNameMap') || set(scope, 'colorNameMap', {}); // Use `hasOwnProperty` to avoid conflict with Object.prototype.\n\n    if (colorNameMap.hasOwnProperty(name)) {\n      return colorNameMap[name];\n    }\n\n    var colorPalette = this.get('color', true) || [];\n\n    if (!colorPalette.length) {\n      return;\n    }\n\n    var color = colorPalette[colorIdx];\n\n    if (name) {\n      colorNameMap[name] = color;\n    }\n\n    set(scope, 'colorIdx', (colorIdx + 1) % colorPalette.length);\n    return color;\n  }\n};\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/mixin/colorPalette.js\n// module id = 1616\n// module chunks = 2 3","var numberUtil = require(\"../util/number\");\n\n/**\n * For testable.\n */\nvar roundNumber = numberUtil.round;\n/**\n * @param {Array.<number>} extent Both extent[0] and extent[1] should be valid number.\n *                                Should be extent[0] < extent[1].\n * @param {number} splitNumber splitNumber should be >= 1.\n * @param {number} [minInterval]\n * @param {number} [maxInterval]\n * @return {Object} {interval, intervalPrecision, niceTickExtent}\n */\n\nfunction intervalScaleNiceTicks(extent, splitNumber, minInterval, maxInterval) {\n  var result = {};\n  var span = extent[1] - extent[0];\n  var interval = result.interval = numberUtil.nice(span / splitNumber, true);\n\n  if (minInterval != null && interval < minInterval) {\n    interval = result.interval = minInterval;\n  }\n\n  if (maxInterval != null && interval > maxInterval) {\n    interval = result.interval = maxInterval;\n  } // Tow more digital for tick.\n\n\n  var precision = result.intervalPrecision = getIntervalPrecision(interval); // Niced extent inside original extent\n\n  var niceTickExtent = result.niceTickExtent = [roundNumber(Math.ceil(extent[0] / interval) * interval, precision), roundNumber(Math.floor(extent[1] / interval) * interval, precision)];\n  fixExtent(niceTickExtent, extent);\n  return result;\n}\n/**\n * @param {number} interval\n * @return {number} interval precision\n */\n\n\nfunction getIntervalPrecision(interval) {\n  // Tow more digital for tick.\n  return numberUtil.getPrecisionSafe(interval) + 2;\n}\n\nfunction clamp(niceTickExtent, idx, extent) {\n  niceTickExtent[idx] = Math.max(Math.min(niceTickExtent[idx], extent[1]), extent[0]);\n} // In some cases (e.g., splitNumber is 1), niceTickExtent may be out of extent.\n\n\nfunction fixExtent(niceTickExtent, extent) {\n  !isFinite(niceTickExtent[0]) && (niceTickExtent[0] = extent[0]);\n  !isFinite(niceTickExtent[1]) && (niceTickExtent[1] = extent[1]);\n  clamp(niceTickExtent, 0, extent);\n  clamp(niceTickExtent, 1, extent);\n\n  if (niceTickExtent[0] > niceTickExtent[1]) {\n    niceTickExtent[0] = niceTickExtent[1];\n  }\n}\n\nfunction intervalScaleGetTicks(interval, extent, niceTickExtent, intervalPrecision) {\n  var ticks = []; // If interval is 0, return [];\n\n  if (!interval) {\n    return ticks;\n  } // Consider this case: using dataZoom toolbox, zoom and zoom.\n\n\n  var safeLimit = 10000;\n\n  if (extent[0] < niceTickExtent[0]) {\n    ticks.push(extent[0]);\n  }\n\n  var tick = niceTickExtent[0];\n\n  while (tick <= niceTickExtent[1]) {\n    ticks.push(tick); // Avoid rounding error\n\n    tick = roundNumber(tick + interval, intervalPrecision);\n\n    if (tick === ticks[ticks.length - 1]) {\n      // Consider out of safe float point, e.g.,\n      // -3711126.9907707 + 2e-10 === -3711126.9907707\n      break;\n    }\n\n    if (ticks.length > safeLimit) {\n      return [];\n    }\n  } // Consider this case: the last item of ticks is smaller\n  // than niceTickExtent[1] and niceTickExtent[1] === extent[1].\n\n\n  if (extent[1] > (ticks.length ? ticks[ticks.length - 1] : niceTickExtent[1])) {\n    ticks.push(extent[1]);\n  }\n\n  return ticks;\n}\n\nexports.intervalScaleNiceTicks = intervalScaleNiceTicks;\nexports.getIntervalPrecision = getIntervalPrecision;\nexports.fixExtent = fixExtent;\nexports.intervalScaleGetTicks = intervalScaleGetTicks;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/scale/helper.js\n// module id = 1617\n// module chunks = 2 3","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Group = require(\"zrender/lib/container/Group\");\n\nvar componentUtil = require(\"../util/component\");\n\nvar clazzUtil = require(\"../util/clazz\");\n\nvar modelUtil = require(\"../util/model\");\n\nfunction Chart() {\n  /**\n   * @type {module:zrender/container/Group}\n   * @readOnly\n   */\n  this.group = new Group();\n  /**\n   * @type {string}\n   * @readOnly\n   */\n\n  this.uid = componentUtil.getUID('viewChart');\n}\n\nChart.prototype = {\n  type: 'chart',\n\n  /**\n   * Init the chart\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  init: function (ecModel, api) {},\n\n  /**\n   * Render the chart\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  render: function (seriesModel, ecModel, api, payload) {},\n\n  /**\n   * Highlight series or specified data item\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  highlight: function (seriesModel, ecModel, api, payload) {\n    toggleHighlight(seriesModel.getData(), payload, 'emphasis');\n  },\n\n  /**\n   * Downplay series or specified data item\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  downplay: function (seriesModel, ecModel, api, payload) {\n    toggleHighlight(seriesModel.getData(), payload, 'normal');\n  },\n\n  /**\n   * Remove self\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  remove: function (ecModel, api) {\n    this.group.removeAll();\n  },\n\n  /**\n   * Dispose self\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  dispose: function () {}\n  /**\n   * The view contains the given point.\n   * @interface\n   * @param {Array.<number>} point\n   * @return {boolean}\n   */\n  // containPoint: function () {}\n\n};\nvar chartProto = Chart.prototype;\n\nchartProto.updateView = chartProto.updateLayout = chartProto.updateVisual = function (seriesModel, ecModel, api, payload) {\n  this.render(seriesModel, ecModel, api, payload);\n};\n/**\n * Set state of single element\n * @param  {module:zrender/Element} el\n * @param  {string} state\n */\n\n\nfunction elSetState(el, state) {\n  if (el) {\n    el.trigger(state);\n\n    if (el.type === 'group') {\n      for (var i = 0; i < el.childCount(); i++) {\n        elSetState(el.childAt(i), state);\n      }\n    }\n  }\n}\n/**\n * @param  {module:echarts/data/List} data\n * @param  {Object} payload\n * @param  {string} state 'normal'|'emphasis'\n * @inner\n */\n\n\nfunction toggleHighlight(data, payload, state) {\n  var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n  if (dataIndex != null) {\n    zrUtil.each(modelUtil.normalizeToArray(dataIndex), function (dataIdx) {\n      elSetState(data.getItemGraphicEl(dataIdx), state);\n    });\n  } else {\n    data.eachItemGraphicEl(function (el) {\n      elSetState(el, state);\n    });\n  }\n} // Enable Chart.extend.\n\n\nclazzUtil.enableClassExtend(Chart, ['dispose']); // Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n\nclazzUtil.enableClassManagement(Chart, {\n  registerWhenExtend: true\n});\nvar _default = Chart;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/view/Chart.js\n// module id = 1618\n// module chunks = 2 3","var guid = require(\"./core/guid\");\n\nvar Eventful = require(\"./mixin/Eventful\");\n\nvar Transformable = require(\"./mixin/Transformable\");\n\nvar Animatable = require(\"./mixin/Animatable\");\n\nvar zrUtil = require(\"./core/util\");\n\n/**\n * @alias module:zrender/Element\n * @constructor\n * @extends {module:zrender/mixin/Animatable}\n * @extends {module:zrender/mixin/Transformable}\n * @extends {module:zrender/mixin/Eventful}\n */\nvar Element = function (opts) {\n  // jshint ignore:line\n  Transformable.call(this, opts);\n  Eventful.call(this, opts);\n  Animatable.call(this, opts);\n  /**\n   * 画布元素ID\n   * @type {string}\n   */\n\n  this.id = opts.id || guid();\n};\n\nElement.prototype = {\n  /**\n   * 元素类型\n   * Element type\n   * @type {string}\n   */\n  type: 'element',\n\n  /**\n   * 元素名字\n   * Element name\n   * @type {string}\n   */\n  name: '',\n\n  /**\n   * ZRender 实例对象，会在 element 添加到 zrender 实例中后自动赋值\n   * ZRender instance will be assigned when element is associated with zrender\n   * @name module:/zrender/Element#__zr\n   * @type {module:zrender/ZRender}\n   */\n  __zr: null,\n\n  /**\n   * 图形是否忽略，为true时忽略图形的绘制以及事件触发\n   * If ignore drawing and events of the element object\n   * @name module:/zrender/Element#ignore\n   * @type {boolean}\n   * @default false\n   */\n  ignore: false,\n\n  /**\n   * 用于裁剪的路径(shape)，所有 Group 内的路径在绘制时都会被这个路径裁剪\n   * 该路径会继承被裁减对象的变换\n   * @type {module:zrender/graphic/Path}\n   * @see http://www.w3.org/TR/2dcontext/#clipping-region\n   * @readOnly\n   */\n  clipPath: null,\n\n  /**\n   * Drift element\n   * @param  {number} dx dx on the global space\n   * @param  {number} dy dy on the global space\n   */\n  drift: function (dx, dy) {\n    switch (this.draggable) {\n      case 'horizontal':\n        dy = 0;\n        break;\n\n      case 'vertical':\n        dx = 0;\n        break;\n    }\n\n    var m = this.transform;\n\n    if (!m) {\n      m = this.transform = [1, 0, 0, 1, 0, 0];\n    }\n\n    m[4] += dx;\n    m[5] += dy;\n    this.decomposeTransform();\n    this.dirty(false);\n  },\n\n  /**\n   * Hook before update\n   */\n  beforeUpdate: function () {},\n\n  /**\n   * Hook after update\n   */\n  afterUpdate: function () {},\n\n  /**\n   * Update each frame\n   */\n  update: function () {\n    this.updateTransform();\n  },\n\n  /**\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  traverse: function (cb, context) {},\n\n  /**\n   * @protected\n   */\n  attrKV: function (key, value) {\n    if (key === 'position' || key === 'scale' || key === 'origin') {\n      // Copy the array\n      if (value) {\n        var target = this[key];\n\n        if (!target) {\n          target = this[key] = [];\n        }\n\n        target[0] = value[0];\n        target[1] = value[1];\n      }\n    } else {\n      this[key] = value;\n    }\n  },\n\n  /**\n   * Hide the element\n   */\n  hide: function () {\n    this.ignore = true;\n    this.__zr && this.__zr.refresh();\n  },\n\n  /**\n   * Show the element\n   */\n  show: function () {\n    this.ignore = false;\n    this.__zr && this.__zr.refresh();\n  },\n\n  /**\n   * @param {string|Object} key\n   * @param {*} value\n   */\n  attr: function (key, value) {\n    if (typeof key === 'string') {\n      this.attrKV(key, value);\n    } else if (zrUtil.isObject(key)) {\n      for (var name in key) {\n        if (key.hasOwnProperty(name)) {\n          this.attrKV(name, key[name]);\n        }\n      }\n    }\n\n    this.dirty(false);\n    return this;\n  },\n\n  /**\n   * @param {module:zrender/graphic/Path} clipPath\n   */\n  setClipPath: function (clipPath) {\n    var zr = this.__zr;\n\n    if (zr) {\n      clipPath.addSelfToZr(zr);\n    } // Remove previous clip path\n\n\n    if (this.clipPath && this.clipPath !== clipPath) {\n      this.removeClipPath();\n    }\n\n    this.clipPath = clipPath;\n    clipPath.__zr = zr;\n    clipPath.__clipTarget = this;\n    this.dirty(false);\n  },\n\n  /**\n   */\n  removeClipPath: function () {\n    var clipPath = this.clipPath;\n\n    if (clipPath) {\n      if (clipPath.__zr) {\n        clipPath.removeSelfFromZr(clipPath.__zr);\n      }\n\n      clipPath.__zr = null;\n      clipPath.__clipTarget = null;\n      this.clipPath = null;\n      this.dirty(false);\n    }\n  },\n\n  /**\n   * Add self from zrender instance.\n   * Not recursively because it will be invoked when element added to storage.\n   * @param {module:zrender/ZRender} zr\n   */\n  addSelfToZr: function (zr) {\n    this.__zr = zr; // 添加动画\n\n    var animators = this.animators;\n\n    if (animators) {\n      for (var i = 0; i < animators.length; i++) {\n        zr.animation.addAnimator(animators[i]);\n      }\n    }\n\n    if (this.clipPath) {\n      this.clipPath.addSelfToZr(zr);\n    }\n  },\n\n  /**\n   * Remove self from zrender instance.\n   * Not recursively because it will be invoked when element added to storage.\n   * @param {module:zrender/ZRender} zr\n   */\n  removeSelfFromZr: function (zr) {\n    this.__zr = null; // 移除动画\n\n    var animators = this.animators;\n\n    if (animators) {\n      for (var i = 0; i < animators.length; i++) {\n        zr.animation.removeAnimator(animators[i]);\n      }\n    }\n\n    if (this.clipPath) {\n      this.clipPath.removeSelfFromZr(zr);\n    }\n  }\n};\nzrUtil.mixin(Element, Animatable);\nzrUtil.mixin(Element, Transformable);\nzrUtil.mixin(Element, Eventful);\nvar _default = Element;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/Element.js\n// module id = 1633\n// module chunks = 2 3","var Clip = require(\"./Clip\");\n\nvar color = require(\"../tool/color\");\n\nvar _util = require(\"../core/util\");\n\nvar isArrayLike = _util.isArrayLike;\n\n/**\n * @module echarts/animation/Animator\n */\nvar arraySlice = Array.prototype.slice;\n\nfunction defaultGetter(target, key) {\n  return target[key];\n}\n\nfunction defaultSetter(target, key, value) {\n  target[key] = value;\n}\n/**\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} percent\n * @return {number}\n */\n\n\nfunction interpolateNumber(p0, p1, percent) {\n  return (p1 - p0) * percent + p0;\n}\n/**\n * @param  {string} p0\n * @param  {string} p1\n * @param  {number} percent\n * @return {string}\n */\n\n\nfunction interpolateString(p0, p1, percent) {\n  return percent > 0.5 ? p1 : p0;\n}\n/**\n * @param  {Array} p0\n * @param  {Array} p1\n * @param  {number} percent\n * @param  {Array} out\n * @param  {number} arrDim\n */\n\n\nfunction interpolateArray(p0, p1, percent, out, arrDim) {\n  var len = p0.length;\n\n  if (arrDim == 1) {\n    for (var i = 0; i < len; i++) {\n      out[i] = interpolateNumber(p0[i], p1[i], percent);\n    }\n  } else {\n    var len2 = len && p0[0].length;\n\n    for (var i = 0; i < len; i++) {\n      for (var j = 0; j < len2; j++) {\n        out[i][j] = interpolateNumber(p0[i][j], p1[i][j], percent);\n      }\n    }\n  }\n} // arr0 is source array, arr1 is target array.\n// Do some preprocess to avoid error happened when interpolating from arr0 to arr1\n\n\nfunction fillArr(arr0, arr1, arrDim) {\n  var arr0Len = arr0.length;\n  var arr1Len = arr1.length;\n\n  if (arr0Len !== arr1Len) {\n    // FIXME Not work for TypedArray\n    var isPreviousLarger = arr0Len > arr1Len;\n\n    if (isPreviousLarger) {\n      // Cut the previous\n      arr0.length = arr1Len;\n    } else {\n      // Fill the previous\n      for (var i = arr0Len; i < arr1Len; i++) {\n        arr0.push(arrDim === 1 ? arr1[i] : arraySlice.call(arr1[i]));\n      }\n    }\n  } // Handling NaN value\n\n\n  var len2 = arr0[0] && arr0[0].length;\n\n  for (var i = 0; i < arr0.length; i++) {\n    if (arrDim === 1) {\n      if (isNaN(arr0[i])) {\n        arr0[i] = arr1[i];\n      }\n    } else {\n      for (var j = 0; j < len2; j++) {\n        if (isNaN(arr0[i][j])) {\n          arr0[i][j] = arr1[i][j];\n        }\n      }\n    }\n  }\n}\n/**\n * @param  {Array} arr0\n * @param  {Array} arr1\n * @param  {number} arrDim\n * @return {boolean}\n */\n\n\nfunction isArraySame(arr0, arr1, arrDim) {\n  if (arr0 === arr1) {\n    return true;\n  }\n\n  var len = arr0.length;\n\n  if (len !== arr1.length) {\n    return false;\n  }\n\n  if (arrDim === 1) {\n    for (var i = 0; i < len; i++) {\n      if (arr0[i] !== arr1[i]) {\n        return false;\n      }\n    }\n  } else {\n    var len2 = arr0[0].length;\n\n    for (var i = 0; i < len; i++) {\n      for (var j = 0; j < len2; j++) {\n        if (arr0[i][j] !== arr1[i][j]) {\n          return false;\n        }\n      }\n    }\n  }\n\n  return true;\n}\n/**\n * Catmull Rom interpolate array\n * @param  {Array} p0\n * @param  {Array} p1\n * @param  {Array} p2\n * @param  {Array} p3\n * @param  {number} t\n * @param  {number} t2\n * @param  {number} t3\n * @param  {Array} out\n * @param  {number} arrDim\n */\n\n\nfunction catmullRomInterpolateArray(p0, p1, p2, p3, t, t2, t3, out, arrDim) {\n  var len = p0.length;\n\n  if (arrDim == 1) {\n    for (var i = 0; i < len; i++) {\n      out[i] = catmullRomInterpolate(p0[i], p1[i], p2[i], p3[i], t, t2, t3);\n    }\n  } else {\n    var len2 = p0[0].length;\n\n    for (var i = 0; i < len; i++) {\n      for (var j = 0; j < len2; j++) {\n        out[i][j] = catmullRomInterpolate(p0[i][j], p1[i][j], p2[i][j], p3[i][j], t, t2, t3);\n      }\n    }\n  }\n}\n/**\n * Catmull Rom interpolate number\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @param  {number} t2\n * @param  {number} t3\n * @return {number}\n */\n\n\nfunction catmullRomInterpolate(p0, p1, p2, p3, t, t2, t3) {\n  var v0 = (p2 - p0) * 0.5;\n  var v1 = (p3 - p1) * 0.5;\n  return (2 * (p1 - p2) + v0 + v1) * t3 + (-3 * (p1 - p2) - 2 * v0 - v1) * t2 + v0 * t + p1;\n}\n\nfunction cloneValue(value) {\n  if (isArrayLike(value)) {\n    var len = value.length;\n\n    if (isArrayLike(value[0])) {\n      var ret = [];\n\n      for (var i = 0; i < len; i++) {\n        ret.push(arraySlice.call(value[i]));\n      }\n\n      return ret;\n    }\n\n    return arraySlice.call(value);\n  }\n\n  return value;\n}\n\nfunction rgba2String(rgba) {\n  rgba[0] = Math.floor(rgba[0]);\n  rgba[1] = Math.floor(rgba[1]);\n  rgba[2] = Math.floor(rgba[2]);\n  return 'rgba(' + rgba.join(',') + ')';\n}\n\nfunction getArrayDim(keyframes) {\n  var lastValue = keyframes[keyframes.length - 1].value;\n  return isArrayLike(lastValue && lastValue[0]) ? 2 : 1;\n}\n\nfunction createTrackClip(animator, easing, oneTrackDone, keyframes, propName, forceAnimate) {\n  var getter = animator._getter;\n  var setter = animator._setter;\n  var useSpline = easing === 'spline';\n  var trackLen = keyframes.length;\n\n  if (!trackLen) {\n    return;\n  } // Guess data type\n\n\n  var firstVal = keyframes[0].value;\n  var isValueArray = isArrayLike(firstVal);\n  var isValueColor = false;\n  var isValueString = false; // For vertices morphing\n\n  var arrDim = isValueArray ? getArrayDim(keyframes) : 0;\n  var trackMaxTime; // Sort keyframe as ascending\n\n  keyframes.sort(function (a, b) {\n    return a.time - b.time;\n  });\n  trackMaxTime = keyframes[trackLen - 1].time; // Percents of each keyframe\n\n  var kfPercents = []; // Value of each keyframe\n\n  var kfValues = [];\n  var prevValue = keyframes[0].value;\n  var isAllValueEqual = true;\n\n  for (var i = 0; i < trackLen; i++) {\n    kfPercents.push(keyframes[i].time / trackMaxTime); // Assume value is a color when it is a string\n\n    var value = keyframes[i].value; // Check if value is equal, deep check if value is array\n\n    if (!(isValueArray && isArraySame(value, prevValue, arrDim) || !isValueArray && value === prevValue)) {\n      isAllValueEqual = false;\n    }\n\n    prevValue = value; // Try converting a string to a color array\n\n    if (typeof value == 'string') {\n      var colorArray = color.parse(value);\n\n      if (colorArray) {\n        value = colorArray;\n        isValueColor = true;\n      } else {\n        isValueString = true;\n      }\n    }\n\n    kfValues.push(value);\n  }\n\n  if (!forceAnimate && isAllValueEqual) {\n    return;\n  }\n\n  var lastValue = kfValues[trackLen - 1]; // Polyfill array and NaN value\n\n  for (var i = 0; i < trackLen - 1; i++) {\n    if (isValueArray) {\n      fillArr(kfValues[i], lastValue, arrDim);\n    } else {\n      if (isNaN(kfValues[i]) && !isNaN(lastValue) && !isValueString && !isValueColor) {\n        kfValues[i] = lastValue;\n      }\n    }\n  }\n\n  isValueArray && fillArr(getter(animator._target, propName), lastValue, arrDim); // Cache the key of last frame to speed up when\n  // animation playback is sequency\n\n  var lastFrame = 0;\n  var lastFramePercent = 0;\n  var start;\n  var w;\n  var p0;\n  var p1;\n  var p2;\n  var p3;\n\n  if (isValueColor) {\n    var rgba = [0, 0, 0, 0];\n  }\n\n  var onframe = function (target, percent) {\n    // Find the range keyframes\n    // kf1-----kf2---------current--------kf3\n    // find kf2 and kf3 and do interpolation\n    var frame; // In the easing function like elasticOut, percent may less than 0\n\n    if (percent < 0) {\n      frame = 0;\n    } else if (percent < lastFramePercent) {\n      // Start from next key\n      // PENDING start from lastFrame ?\n      start = Math.min(lastFrame + 1, trackLen - 1);\n\n      for (frame = start; frame >= 0; frame--) {\n        if (kfPercents[frame] <= percent) {\n          break;\n        }\n      } // PENDING really need to do this ?\n\n\n      frame = Math.min(frame, trackLen - 2);\n    } else {\n      for (frame = lastFrame; frame < trackLen; frame++) {\n        if (kfPercents[frame] > percent) {\n          break;\n        }\n      }\n\n      frame = Math.min(frame - 1, trackLen - 2);\n    }\n\n    lastFrame = frame;\n    lastFramePercent = percent;\n    var range = kfPercents[frame + 1] - kfPercents[frame];\n\n    if (range === 0) {\n      return;\n    } else {\n      w = (percent - kfPercents[frame]) / range;\n    }\n\n    if (useSpline) {\n      p1 = kfValues[frame];\n      p0 = kfValues[frame === 0 ? frame : frame - 1];\n      p2 = kfValues[frame > trackLen - 2 ? trackLen - 1 : frame + 1];\n      p3 = kfValues[frame > trackLen - 3 ? trackLen - 1 : frame + 2];\n\n      if (isValueArray) {\n        catmullRomInterpolateArray(p0, p1, p2, p3, w, w * w, w * w * w, getter(target, propName), arrDim);\n      } else {\n        var value;\n\n        if (isValueColor) {\n          value = catmullRomInterpolateArray(p0, p1, p2, p3, w, w * w, w * w * w, rgba, 1);\n          value = rgba2String(rgba);\n        } else if (isValueString) {\n          // String is step(0.5)\n          return interpolateString(p1, p2, w);\n        } else {\n          value = catmullRomInterpolate(p0, p1, p2, p3, w, w * w, w * w * w);\n        }\n\n        setter(target, propName, value);\n      }\n    } else {\n      if (isValueArray) {\n        interpolateArray(kfValues[frame], kfValues[frame + 1], w, getter(target, propName), arrDim);\n      } else {\n        var value;\n\n        if (isValueColor) {\n          interpolateArray(kfValues[frame], kfValues[frame + 1], w, rgba, 1);\n          value = rgba2String(rgba);\n        } else if (isValueString) {\n          // String is step(0.5)\n          return interpolateString(kfValues[frame], kfValues[frame + 1], w);\n        } else {\n          value = interpolateNumber(kfValues[frame], kfValues[frame + 1], w);\n        }\n\n        setter(target, propName, value);\n      }\n    }\n  };\n\n  var clip = new Clip({\n    target: animator._target,\n    life: trackMaxTime,\n    loop: animator._loop,\n    delay: animator._delay,\n    onframe: onframe,\n    ondestroy: oneTrackDone\n  });\n\n  if (easing && easing !== 'spline') {\n    clip.easing = easing;\n  }\n\n  return clip;\n}\n/**\n * @alias module:zrender/animation/Animator\n * @constructor\n * @param {Object} target\n * @param {boolean} loop\n * @param {Function} getter\n * @param {Function} setter\n */\n\n\nvar Animator = function (target, loop, getter, setter) {\n  this._tracks = {};\n  this._target = target;\n  this._loop = loop || false;\n  this._getter = getter || defaultGetter;\n  this._setter = setter || defaultSetter;\n  this._clipCount = 0;\n  this._delay = 0;\n  this._doneList = [];\n  this._onframeList = [];\n  this._clipList = [];\n};\n\nAnimator.prototype = {\n  /**\n   * 设置动画关键帧\n   * @param  {number} time 关键帧时间，单位是ms\n   * @param  {Object} props 关键帧的属性值，key-value表示\n   * @return {module:zrender/animation/Animator}\n   */\n  when: function (time\n  /* ms */\n  , props) {\n    var tracks = this._tracks;\n\n    for (var propName in props) {\n      if (!props.hasOwnProperty(propName)) {\n        continue;\n      }\n\n      if (!tracks[propName]) {\n        tracks[propName] = []; // Invalid value\n\n        var value = this._getter(this._target, propName);\n\n        if (value == null) {\n          // zrLog('Invalid property ' + propName);\n          continue;\n        } // If time is 0\n        //  Then props is given initialize value\n        // Else\n        //  Initialize value from current prop value\n\n\n        if (time !== 0) {\n          tracks[propName].push({\n            time: 0,\n            value: cloneValue(value)\n          });\n        }\n      }\n\n      tracks[propName].push({\n        time: time,\n        value: props[propName]\n      });\n    }\n\n    return this;\n  },\n\n  /**\n   * 添加动画每一帧的回调函数\n   * @param  {Function} callback\n   * @return {module:zrender/animation/Animator}\n   */\n  during: function (callback) {\n    this._onframeList.push(callback);\n\n    return this;\n  },\n  pause: function () {\n    for (var i = 0; i < this._clipList.length; i++) {\n      this._clipList[i].pause();\n    }\n\n    this._paused = true;\n  },\n  resume: function () {\n    for (var i = 0; i < this._clipList.length; i++) {\n      this._clipList[i].resume();\n    }\n\n    this._paused = false;\n  },\n  isPaused: function () {\n    return !!this._paused;\n  },\n  _doneCallback: function () {\n    // Clear all tracks\n    this._tracks = {}; // Clear all clips\n\n    this._clipList.length = 0;\n    var doneList = this._doneList;\n    var len = doneList.length;\n\n    for (var i = 0; i < len; i++) {\n      doneList[i].call(this);\n    }\n  },\n\n  /**\n   * 开始执行动画\n   * @param  {string|Function} [easing]\n   *         动画缓动函数，详见{@link module:zrender/animation/easing}\n   * @param  {boolean} forceAnimate\n   * @return {module:zrender/animation/Animator}\n   */\n  start: function (easing, forceAnimate) {\n    var self = this;\n    var clipCount = 0;\n\n    var oneTrackDone = function () {\n      clipCount--;\n\n      if (!clipCount) {\n        self._doneCallback();\n      }\n    };\n\n    var lastClip;\n\n    for (var propName in this._tracks) {\n      if (!this._tracks.hasOwnProperty(propName)) {\n        continue;\n      }\n\n      var clip = createTrackClip(this, easing, oneTrackDone, this._tracks[propName], propName, forceAnimate);\n\n      if (clip) {\n        this._clipList.push(clip);\n\n        clipCount++; // If start after added to animation\n\n        if (this.animation) {\n          this.animation.addClip(clip);\n        }\n\n        lastClip = clip;\n      }\n    } // Add during callback on the last clip\n\n\n    if (lastClip) {\n      var oldOnFrame = lastClip.onframe;\n\n      lastClip.onframe = function (target, percent) {\n        oldOnFrame(target, percent);\n\n        for (var i = 0; i < self._onframeList.length; i++) {\n          self._onframeList[i](target, percent);\n        }\n      };\n    } // This optimization will help the case that in the upper application\n    // the view may be refreshed frequently, where animation will be\n    // called repeatly but nothing changed.\n\n\n    if (!clipCount) {\n      this._doneCallback();\n    }\n\n    return this;\n  },\n\n  /**\n   * 停止动画\n   * @param {boolean} forwardToLast If move to last frame before stop\n   */\n  stop: function (forwardToLast) {\n    var clipList = this._clipList;\n    var animation = this.animation;\n\n    for (var i = 0; i < clipList.length; i++) {\n      var clip = clipList[i];\n\n      if (forwardToLast) {\n        // Move to last frame before stop\n        clip.onframe(this._target, 1);\n      }\n\n      animation && animation.removeClip(clip);\n    }\n\n    clipList.length = 0;\n  },\n\n  /**\n   * 设置动画延迟开始的时间\n   * @param  {number} time 单位ms\n   * @return {module:zrender/animation/Animator}\n   */\n  delay: function (time) {\n    this._delay = time;\n    return this;\n  },\n\n  /**\n   * 添加动画结束的回调\n   * @param  {Function} cb\n   * @return {module:zrender/animation/Animator}\n   */\n  done: function (cb) {\n    if (cb) {\n      this._doneList.push(cb);\n    }\n\n    return this;\n  },\n\n  /**\n   * @return {Array.<module:zrender/animation/Clip>}\n   */\n  getClips: function () {\n    return this._clipList;\n  }\n};\nvar _default = Animator;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/animation/Animator.js\n// module id = 1634\n// module chunks = 2 3","var _default = typeof window !== 'undefined' && (window.requestAnimationFrame && window.requestAnimationFrame.bind(window) || // https://github.com/ecomfe/zrender/issues/189#issuecomment-224919809\nwindow.msRequestAnimationFrame && window.msRequestAnimationFrame.bind(window) || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame) || function (func) {\n  setTimeout(func, 16);\n};\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/animation/requestAnimationFrame.js\n// module id = 1635\n// module chunks = 2 3","var PI2 = Math.PI * 2;\n\nfunction normalizeRadian(angle) {\n  angle %= PI2;\n\n  if (angle < 0) {\n    angle += PI2;\n  }\n\n  return angle;\n}\n\nexports.normalizeRadian = normalizeRadian;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/util.js\n// module id = 1636\n// module chunks = 2 3","function windingLine(x0, y0, x1, y1, x, y) {\n  if (y > y0 && y > y1 || y < y0 && y < y1) {\n    return 0;\n  } // Ignore horizontal line\n\n\n  if (y1 === y0) {\n    return 0;\n  }\n\n  var dir = y1 < y0 ? 1 : -1;\n  var t = (y - y0) / (y1 - y0); // Avoid winding error when intersection point is the connect point of two line of polygon\n\n  if (t === 1 || t === 0) {\n    dir = y1 < y0 ? 0.5 : -0.5;\n  }\n\n  var x_ = t * (x1 - x0) + x0;\n  return x_ > x ? dir : 0;\n}\n\nmodule.exports = windingLine;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/windingLine.js\n// module id = 1637\n// module chunks = 2 3","// Simple LRU cache use doubly linked list\n// @module zrender/core/LRU\n\n/**\n * Simple double linked list. Compared with array, it has O(1) remove operation.\n * @constructor\n */\nvar LinkedList = function () {\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n  this.head = null;\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n\n  this.tail = null;\n  this._len = 0;\n};\n\nvar linkedListProto = LinkedList.prototype;\n/**\n * Insert a new value at the tail\n * @param  {} val\n * @return {module:zrender/core/LRU~Entry}\n */\n\nlinkedListProto.insert = function (val) {\n  var entry = new Entry(val);\n  this.insertEntry(entry);\n  return entry;\n};\n/**\n * Insert an entry at the tail\n * @param  {module:zrender/core/LRU~Entry} entry\n */\n\n\nlinkedListProto.insertEntry = function (entry) {\n  if (!this.head) {\n    this.head = this.tail = entry;\n  } else {\n    this.tail.next = entry;\n    entry.prev = this.tail;\n    entry.next = null;\n    this.tail = entry;\n  }\n\n  this._len++;\n};\n/**\n * Remove entry.\n * @param  {module:zrender/core/LRU~Entry} entry\n */\n\n\nlinkedListProto.remove = function (entry) {\n  var prev = entry.prev;\n  var next = entry.next;\n\n  if (prev) {\n    prev.next = next;\n  } else {\n    // Is head\n    this.head = next;\n  }\n\n  if (next) {\n    next.prev = prev;\n  } else {\n    // Is tail\n    this.tail = prev;\n  }\n\n  entry.next = entry.prev = null;\n  this._len--;\n};\n/**\n * @return {number}\n */\n\n\nlinkedListProto.len = function () {\n  return this._len;\n};\n/**\n * Clear list\n */\n\n\nlinkedListProto.clear = function () {\n  this.head = this.tail = null;\n  this._len = 0;\n};\n/**\n * @constructor\n * @param {} val\n */\n\n\nvar Entry = function (val) {\n  /**\n   * @type {}\n   */\n  this.value = val;\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n\n  this.next;\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n\n  this.prev;\n};\n/**\n * LRU Cache\n * @constructor\n * @alias module:zrender/core/LRU\n */\n\n\nvar LRU = function (maxSize) {\n  this._list = new LinkedList();\n  this._map = {};\n  this._maxSize = maxSize || 10;\n  this._lastRemovedEntry = null;\n};\n\nvar LRUProto = LRU.prototype;\n/**\n * @param  {string} key\n * @param  {} value\n * @return {} Removed value\n */\n\nLRUProto.put = function (key, value) {\n  var list = this._list;\n  var map = this._map;\n  var removed = null;\n\n  if (map[key] == null) {\n    var len = list.len(); // Reuse last removed entry\n\n    var entry = this._lastRemovedEntry;\n\n    if (len >= this._maxSize && len > 0) {\n      // Remove the least recently used\n      var leastUsedEntry = list.head;\n      list.remove(leastUsedEntry);\n      delete map[leastUsedEntry.key];\n      removed = leastUsedEntry.value;\n      this._lastRemovedEntry = leastUsedEntry;\n    }\n\n    if (entry) {\n      entry.value = value;\n    } else {\n      entry = new Entry(value);\n    }\n\n    entry.key = key;\n    list.insertEntry(entry);\n    map[key] = entry;\n  }\n\n  return removed;\n};\n/**\n * @param  {string} key\n * @return {}\n */\n\n\nLRUProto.get = function (key) {\n  var entry = this._map[key];\n  var list = this._list;\n\n  if (entry != null) {\n    // Put the latest used entry in the tail\n    if (entry !== list.tail) {\n      list.remove(entry);\n      list.insertEntry(entry);\n    }\n\n    return entry.value;\n  }\n};\n/**\n * Clear the cache\n */\n\n\nLRUProto.clear = function () {\n  this._list.clear();\n\n  this._map = {};\n};\n\nvar _default = LRU;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/LRU.js\n// module id = 1638\n// module chunks = 2 3","var vec2 = require(\"./vector\");\n\nvar curve = require(\"./curve\");\n\n/**\n * @author Yi Shen(https://github.com/pissang)\n */\nvar mathMin = Math.min;\nvar mathMax = Math.max;\nvar mathSin = Math.sin;\nvar mathCos = Math.cos;\nvar PI2 = Math.PI * 2;\nvar start = vec2.create();\nvar end = vec2.create();\nvar extremity = vec2.create();\n/**\n * 从顶点数组中计算出最小包围盒，写入`min`和`max`中\n * @module zrender/core/bbox\n * @param {Array<Object>} points 顶点数组\n * @param {number} min\n * @param {number} max\n */\n\nfunction fromPoints(points, min, max) {\n  if (points.length === 0) {\n    return;\n  }\n\n  var p = points[0];\n  var left = p[0];\n  var right = p[0];\n  var top = p[1];\n  var bottom = p[1];\n  var i;\n\n  for (i = 1; i < points.length; i++) {\n    p = points[i];\n    left = mathMin(left, p[0]);\n    right = mathMax(right, p[0]);\n    top = mathMin(top, p[1]);\n    bottom = mathMax(bottom, p[1]);\n  }\n\n  min[0] = left;\n  min[1] = top;\n  max[0] = right;\n  max[1] = bottom;\n}\n/**\n * @memberOf module:zrender/core/bbox\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\n\nfunction fromLine(x0, y0, x1, y1, min, max) {\n  min[0] = mathMin(x0, x1);\n  min[1] = mathMin(y0, y1);\n  max[0] = mathMax(x0, x1);\n  max[1] = mathMax(y0, y1);\n}\n\nvar xDim = [];\nvar yDim = [];\n/**\n * 从三阶贝塞尔曲线(p0, p1, p2, p3)中计算出最小包围盒，写入`min`和`max`中\n * @memberOf module:zrender/core/bbox\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {number} x3\n * @param {number} y3\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\nfunction fromCubic(x0, y0, x1, y1, x2, y2, x3, y3, min, max) {\n  var cubicExtrema = curve.cubicExtrema;\n  var cubicAt = curve.cubicAt;\n  var i;\n  var n = cubicExtrema(x0, x1, x2, x3, xDim);\n  min[0] = Infinity;\n  min[1] = Infinity;\n  max[0] = -Infinity;\n  max[1] = -Infinity;\n\n  for (i = 0; i < n; i++) {\n    var x = cubicAt(x0, x1, x2, x3, xDim[i]);\n    min[0] = mathMin(x, min[0]);\n    max[0] = mathMax(x, max[0]);\n  }\n\n  n = cubicExtrema(y0, y1, y2, y3, yDim);\n\n  for (i = 0; i < n; i++) {\n    var y = cubicAt(y0, y1, y2, y3, yDim[i]);\n    min[1] = mathMin(y, min[1]);\n    max[1] = mathMax(y, max[1]);\n  }\n\n  min[0] = mathMin(x0, min[0]);\n  max[0] = mathMax(x0, max[0]);\n  min[0] = mathMin(x3, min[0]);\n  max[0] = mathMax(x3, max[0]);\n  min[1] = mathMin(y0, min[1]);\n  max[1] = mathMax(y0, max[1]);\n  min[1] = mathMin(y3, min[1]);\n  max[1] = mathMax(y3, max[1]);\n}\n/**\n * 从二阶贝塞尔曲线(p0, p1, p2)中计算出最小包围盒，写入`min`和`max`中\n * @memberOf module:zrender/core/bbox\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\n\nfunction fromQuadratic(x0, y0, x1, y1, x2, y2, min, max) {\n  var quadraticExtremum = curve.quadraticExtremum;\n  var quadraticAt = curve.quadraticAt; // Find extremities, where derivative in x dim or y dim is zero\n\n  var tx = mathMax(mathMin(quadraticExtremum(x0, x1, x2), 1), 0);\n  var ty = mathMax(mathMin(quadraticExtremum(y0, y1, y2), 1), 0);\n  var x = quadraticAt(x0, x1, x2, tx);\n  var y = quadraticAt(y0, y1, y2, ty);\n  min[0] = mathMin(x0, x2, x);\n  min[1] = mathMin(y0, y2, y);\n  max[0] = mathMax(x0, x2, x);\n  max[1] = mathMax(y0, y2, y);\n}\n/**\n * 从圆弧中计算出最小包围盒，写入`min`和`max`中\n * @method\n * @memberOf module:zrender/core/bbox\n * @param {number} x\n * @param {number} y\n * @param {number} rx\n * @param {number} ry\n * @param {number} startAngle\n * @param {number} endAngle\n * @param {number} anticlockwise\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\n\nfunction fromArc(x, y, rx, ry, startAngle, endAngle, anticlockwise, min, max) {\n  var vec2Min = vec2.min;\n  var vec2Max = vec2.max;\n  var diff = Math.abs(startAngle - endAngle);\n\n  if (diff % PI2 < 1e-4 && diff > 1e-4) {\n    // Is a circle\n    min[0] = x - rx;\n    min[1] = y - ry;\n    max[0] = x + rx;\n    max[1] = y + ry;\n    return;\n  }\n\n  start[0] = mathCos(startAngle) * rx + x;\n  start[1] = mathSin(startAngle) * ry + y;\n  end[0] = mathCos(endAngle) * rx + x;\n  end[1] = mathSin(endAngle) * ry + y;\n  vec2Min(min, start, end);\n  vec2Max(max, start, end); // Thresh to [0, Math.PI * 2]\n\n  startAngle = startAngle % PI2;\n\n  if (startAngle < 0) {\n    startAngle = startAngle + PI2;\n  }\n\n  endAngle = endAngle % PI2;\n\n  if (endAngle < 0) {\n    endAngle = endAngle + PI2;\n  }\n\n  if (startAngle > endAngle && !anticlockwise) {\n    endAngle += PI2;\n  } else if (startAngle < endAngle && anticlockwise) {\n    startAngle += PI2;\n  }\n\n  if (anticlockwise) {\n    var tmp = endAngle;\n    endAngle = startAngle;\n    startAngle = tmp;\n  } // var number = 0;\n  // var step = (anticlockwise ? -Math.PI : Math.PI) / 2;\n\n\n  for (var angle = 0; angle < endAngle; angle += Math.PI / 2) {\n    if (angle > startAngle) {\n      extremity[0] = mathCos(angle) * rx + x;\n      extremity[1] = mathSin(angle) * ry + y;\n      vec2Min(min, extremity, min);\n      vec2Max(max, extremity, max);\n    }\n  }\n}\n\nexports.fromPoints = fromPoints;\nexports.fromLine = fromLine;\nexports.fromCubic = fromCubic;\nexports.fromQuadratic = fromQuadratic;\nexports.fromArc = fromArc;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/bbox.js\n// module id = 1639\n// module chunks = 2 3","/**\n * zrender: 生成唯一id\n *\n * @author errorrik (errorrik@gmail.com)\n */\nvar idStart = 0x0907;\n\nfunction _default() {\n  return idStart++;\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/guid.js\n// module id = 1640\n// module chunks = 2 3","var _config = require(\"../config\");\n\nvar debugMode = _config.debugMode;\n\nvar log = function () {};\n\nif (debugMode === 1) {\n  log = function () {\n    for (var k in arguments) {\n      throw new Error(arguments[k]);\n    }\n  };\n} else if (debugMode > 1) {\n  log = function () {\n    for (var k in arguments) {\n      console.log(arguments[k]);\n    }\n  };\n}\n\nvar _default = log;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/log.js\n// module id = 1641\n// module chunks = 2 3","var Displayable = require(\"./Displayable\");\n\nvar BoundingRect = require(\"../core/BoundingRect\");\n\nvar zrUtil = require(\"../core/util\");\n\nvar imageHelper = require(\"./helper/image\");\n\n/**\n * @alias zrender/graphic/Image\n * @extends module:zrender/graphic/Displayable\n * @constructor\n * @param {Object} opts\n */\nfunction ZImage(opts) {\n  Displayable.call(this, opts);\n}\n\nZImage.prototype = {\n  constructor: ZImage,\n  type: 'image',\n  brush: function (ctx, prevEl) {\n    var style = this.style;\n    var src = style.image; // Must bind each time\n\n    style.bind(ctx, this, prevEl);\n    var image = this._image = imageHelper.createOrUpdateImage(src, this._image, this, this.onload);\n\n    if (!image || !imageHelper.isImageReady(image)) {\n      return;\n    } // 图片已经加载完成\n    // if (image.nodeName.toUpperCase() == 'IMG') {\n    //     if (!image.complete) {\n    //         return;\n    //     }\n    // }\n    // Else is canvas\n\n\n    var x = style.x || 0;\n    var y = style.y || 0;\n    var width = style.width;\n    var height = style.height;\n    var aspect = image.width / image.height;\n\n    if (width == null && height != null) {\n      // Keep image/height ratio\n      width = height * aspect;\n    } else if (height == null && width != null) {\n      height = width / aspect;\n    } else if (width == null && height == null) {\n      width = image.width;\n      height = image.height;\n    } // 设置transform\n\n\n    this.setTransform(ctx);\n\n    if (style.sWidth && style.sHeight) {\n      var sx = style.sx || 0;\n      var sy = style.sy || 0;\n      ctx.drawImage(image, sx, sy, style.sWidth, style.sHeight, x, y, width, height);\n    } else if (style.sx && style.sy) {\n      var sx = style.sx;\n      var sy = style.sy;\n      var sWidth = width - sx;\n      var sHeight = height - sy;\n      ctx.drawImage(image, sx, sy, sWidth, sHeight, x, y, width, height);\n    } else {\n      ctx.drawImage(image, x, y, width, height);\n    }\n\n    this.restoreTransform(ctx); // Draw rect text\n\n    if (style.text != null) {\n      this.drawRectText(ctx, this.getBoundingRect());\n    }\n  },\n  getBoundingRect: function () {\n    var style = this.style;\n\n    if (!this._rect) {\n      this._rect = new BoundingRect(style.x || 0, style.y || 0, style.width || 0, style.height || 0);\n    }\n\n    return this._rect;\n  }\n};\nzrUtil.inherits(ZImage, Displayable);\nvar _default = ZImage;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/Image.js\n// module id = 1642\n// module chunks = 2 3","var Pattern = function (image, repeat) {\n  // Should do nothing more in this constructor. Because gradient can be\n  // declard by `color: {image: ...}`, where this constructor will not be called.\n  this.image = image;\n  this.repeat = repeat; // Can be cloned\n\n  this.type = 'pattern';\n};\n\nPattern.prototype.getCanvasPattern = function (ctx) {\n  return ctx.createPattern(this.image, this.repeat || 'repeat');\n};\n\nvar _default = Pattern;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/Pattern.js\n// module id = 1643\n// module chunks = 2 3","var STYLE_COMMON_PROPS = [['shadowBlur', 0], ['shadowOffsetX', 0], ['shadowOffsetY', 0], ['shadowColor', '#000'], ['lineCap', 'butt'], ['lineJoin', 'miter'], ['miterLimit', 10]]; // var SHADOW_PROPS = STYLE_COMMON_PROPS.slice(0, 4);\n// var LINE_PROPS = STYLE_COMMON_PROPS.slice(4);\n\nvar Style = function (opts, host) {\n  this.extendFrom(opts, false);\n  this.host = host;\n};\n\nfunction createLinearGradient(ctx, obj, rect) {\n  var x = obj.x == null ? 0 : obj.x;\n  var x2 = obj.x2 == null ? 1 : obj.x2;\n  var y = obj.y == null ? 0 : obj.y;\n  var y2 = obj.y2 == null ? 0 : obj.y2;\n\n  if (!obj.global) {\n    x = x * rect.width + rect.x;\n    x2 = x2 * rect.width + rect.x;\n    y = y * rect.height + rect.y;\n    y2 = y2 * rect.height + rect.y;\n  }\n\n  var canvasGradient = ctx.createLinearGradient(x, y, x2, y2);\n  return canvasGradient;\n}\n\nfunction createRadialGradient(ctx, obj, rect) {\n  var width = rect.width;\n  var height = rect.height;\n  var min = Math.min(width, height);\n  var x = obj.x == null ? 0.5 : obj.x;\n  var y = obj.y == null ? 0.5 : obj.y;\n  var r = obj.r == null ? 0.5 : obj.r;\n\n  if (!obj.global) {\n    x = x * width + rect.x;\n    y = y * height + rect.y;\n    r = r * min;\n  }\n\n  var canvasGradient = ctx.createRadialGradient(x, y, 0, x, y, r);\n  return canvasGradient;\n}\n\nStyle.prototype = {\n  constructor: Style,\n\n  /**\n   * @type {module:zrender/graphic/Displayable}\n   */\n  host: null,\n\n  /**\n   * @type {string}\n   */\n  fill: '#000',\n\n  /**\n   * @type {string}\n   */\n  stroke: null,\n\n  /**\n   * @type {number}\n   */\n  opacity: 1,\n\n  /**\n   * @type {Array.<number>}\n   */\n  lineDash: null,\n\n  /**\n   * @type {number}\n   */\n  lineDashOffset: 0,\n\n  /**\n   * @type {number}\n   */\n  shadowBlur: 0,\n\n  /**\n   * @type {number}\n   */\n  shadowOffsetX: 0,\n\n  /**\n   * @type {number}\n   */\n  shadowOffsetY: 0,\n\n  /**\n   * @type {number}\n   */\n  lineWidth: 1,\n\n  /**\n   * If stroke ignore scale\n   * @type {Boolean}\n   */\n  strokeNoScale: false,\n  // Bounding rect text configuration\n  // Not affected by element transform\n\n  /**\n   * @type {string}\n   */\n  text: null,\n\n  /**\n   * If `fontSize` or `fontFamily` exists, `font` will be reset by\n   * `fontSize`, `fontStyle`, `fontWeight`, `fontFamily`.\n   * So do not visit it directly in upper application (like echarts),\n   * but use `contain/text#makeFont` instead.\n   * @type {string}\n   */\n  font: null,\n\n  /**\n   * The same as font. Use font please.\n   * @deprecated\n   * @type {string}\n   */\n  textFont: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * @type {string}\n   */\n  fontStyle: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * @type {string}\n   */\n  fontWeight: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * Should be 12 but not '12px'.\n   * @type {number}\n   */\n  fontSize: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * @type {string}\n   */\n  fontFamily: null,\n\n  /**\n   * Reserved for special functinality, like 'hr'.\n   * @type {string}\n   */\n  textTag: null,\n\n  /**\n   * @type {string}\n   */\n  textFill: '#000',\n\n  /**\n   * @type {string}\n   */\n  textStroke: null,\n\n  /**\n   * @type {number}\n   */\n  textWidth: null,\n\n  /**\n   * Only for textBackground.\n   * @type {number}\n   */\n  textHeight: null,\n\n  /**\n   * textStroke may be set as some color as a default\n   * value in upper applicaion, where the default value\n   * of textStrokeWidth should be 0 to make sure that\n   * user can choose to do not use text stroke.\n   * @type {number}\n   */\n  textStrokeWidth: 0,\n\n  /**\n   * @type {number}\n   */\n  textLineHeight: null,\n\n  /**\n   * 'inside', 'left', 'right', 'top', 'bottom'\n   * [x, y]\n   * Based on x, y of rect.\n   * @type {string|Array.<number>}\n   * @default 'inside'\n   */\n  textPosition: 'inside',\n\n  /**\n   * If not specified, use the boundingRect of a `displayable`.\n   * @type {Object}\n   */\n  textRect: null,\n\n  /**\n   * [x, y]\n   * @type {Array.<number>}\n   */\n  textOffset: null,\n\n  /**\n   * @type {string}\n   */\n  textAlign: null,\n\n  /**\n   * @type {string}\n   */\n  textVerticalAlign: null,\n\n  /**\n   * @type {number}\n   */\n  textDistance: 5,\n\n  /**\n   * @type {string}\n   */\n  textShadowColor: 'transparent',\n\n  /**\n   * @type {number}\n   */\n  textShadowBlur: 0,\n\n  /**\n   * @type {number}\n   */\n  textShadowOffsetX: 0,\n\n  /**\n   * @type {number}\n   */\n  textShadowOffsetY: 0,\n\n  /**\n   * @type {string}\n   */\n  textBoxShadowColor: 'transparent',\n\n  /**\n   * @type {number}\n   */\n  textBoxShadowBlur: 0,\n\n  /**\n   * @type {number}\n   */\n  textBoxShadowOffsetX: 0,\n\n  /**\n   * @type {number}\n   */\n  textBoxShadowOffsetY: 0,\n\n  /**\n   * Whether transform text.\n   * Only useful in Path and Image element\n   * @type {boolean}\n   */\n  transformText: false,\n\n  /**\n   * Text rotate around position of Path or Image\n   * Only useful in Path and Image element and transformText is false.\n   */\n  textRotation: 0,\n\n  /**\n   * Text origin of text rotation, like [10, 40].\n   * Based on x, y of rect.\n   * Useful in label rotation of circular symbol.\n   * By default, this origin is textPosition.\n   * Can be 'center'.\n   * @type {string|Array.<number>}\n   */\n  textOrigin: null,\n\n  /**\n   * @type {string}\n   */\n  textBackgroundColor: null,\n\n  /**\n   * @type {string}\n   */\n  textBorderColor: null,\n\n  /**\n   * @type {number}\n   */\n  textBorderWidth: 0,\n\n  /**\n   * @type {number}\n   */\n  textBorderRadius: 0,\n\n  /**\n   * Can be `2` or `[2, 4]` or `[2, 3, 4, 5]`\n   * @type {number|Array.<number>}\n   */\n  textPadding: null,\n\n  /**\n   * Text styles for rich text.\n   * @type {Object}\n   */\n  rich: null,\n\n  /**\n   * {outerWidth, outerHeight, ellipsis, placeholder}\n   * @type {Object}\n   */\n  truncate: null,\n\n  /**\n   * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n   * @type {string}\n   */\n  blend: null,\n\n  /**\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  bind: function (ctx, el, prevEl) {\n    var style = this;\n    var prevStyle = prevEl && prevEl.style;\n    var firstDraw = !prevStyle;\n\n    for (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n      var prop = STYLE_COMMON_PROPS[i];\n      var styleName = prop[0];\n\n      if (firstDraw || style[styleName] !== prevStyle[styleName]) {\n        // FIXME Invalid property value will cause style leak from previous element.\n        ctx[styleName] = style[styleName] || prop[1];\n      }\n    }\n\n    if (firstDraw || style.fill !== prevStyle.fill) {\n      ctx.fillStyle = style.fill;\n    }\n\n    if (firstDraw || style.stroke !== prevStyle.stroke) {\n      ctx.strokeStyle = style.stroke;\n    }\n\n    if (firstDraw || style.opacity !== prevStyle.opacity) {\n      ctx.globalAlpha = style.opacity == null ? 1 : style.opacity;\n    }\n\n    if (firstDraw || style.blend !== prevStyle.blend) {\n      ctx.globalCompositeOperation = style.blend || 'source-over';\n    }\n\n    if (this.hasStroke()) {\n      var lineWidth = style.lineWidth;\n      ctx.lineWidth = lineWidth / (this.strokeNoScale && el && el.getLineScale ? el.getLineScale() : 1);\n    }\n  },\n  hasFill: function () {\n    var fill = this.fill;\n    return fill != null && fill !== 'none';\n  },\n  hasStroke: function () {\n    var stroke = this.stroke;\n    return stroke != null && stroke !== 'none' && this.lineWidth > 0;\n  },\n\n  /**\n   * Extend from other style\n   * @param {zrender/graphic/Style} otherStyle\n   * @param {boolean} overwrite true: overwrirte any way.\n   *                            false: overwrite only when !target.hasOwnProperty\n   *                            others: overwrite when property is not null/undefined.\n   */\n  extendFrom: function (otherStyle, overwrite) {\n    if (otherStyle) {\n      for (var name in otherStyle) {\n        if (otherStyle.hasOwnProperty(name) && (overwrite === true || (overwrite === false ? !this.hasOwnProperty(name) : otherStyle[name] != null))) {\n          this[name] = otherStyle[name];\n        }\n      }\n    }\n  },\n\n  /**\n   * Batch setting style with a given object\n   * @param {Object|string} obj\n   * @param {*} [obj]\n   */\n  set: function (obj, value) {\n    if (typeof obj === 'string') {\n      this[obj] = value;\n    } else {\n      this.extendFrom(obj, true);\n    }\n  },\n\n  /**\n   * Clone\n   * @return {zrender/graphic/Style} [description]\n   */\n  clone: function () {\n    var newStyle = new this.constructor();\n    newStyle.extendFrom(this, true);\n    return newStyle;\n  },\n  getGradient: function (ctx, obj, rect) {\n    var method = obj.type === 'radial' ? createRadialGradient : createLinearGradient;\n    var canvasGradient = method(ctx, obj, rect);\n    var colorStops = obj.colorStops;\n\n    for (var i = 0; i < colorStops.length; i++) {\n      canvasGradient.addColorStop(colorStops[i].offset, colorStops[i].color);\n    }\n\n    return canvasGradient;\n  }\n};\nvar styleProto = Style.prototype;\n\nfor (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n  var prop = STYLE_COMMON_PROPS[i];\n\n  if (!(prop[0] in styleProto)) {\n    styleProto[prop[0]] = prop[1];\n  }\n} // Provide for others\n\n\nStyle.getGradient = styleProto.getGradient;\nvar _default = Style;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/Style.js\n// module id = 1644\n// module chunks = 2 3","var env = require(\"../../core/env\");\n\n// Fix weird bug in some version of IE11 (like 11.0.9600.178**),\n// where exception \"unexpected call to method or property access\"\n// might be thrown when calling ctx.fill or ctx.stroke after a path\n// whose area size is zero is drawn and ctx.clip() is called and\n// shadowBlur is set. See #4572, #3112, #5777.\n// (e.g.,\n//  ctx.moveTo(10, 10);\n//  ctx.lineTo(20, 10);\n//  ctx.closePath();\n//  ctx.clip();\n//  ctx.shadowBlur = 10;\n//  ...\n//  ctx.fill();\n// )\nvar shadowTemp = [['shadowBlur', 0], ['shadowColor', '#000'], ['shadowOffsetX', 0], ['shadowOffsetY', 0]];\n\nfunction _default(orignalBrush) {\n  // version string can be: '11.0'\n  return env.browser.ie && env.browser.version >= 11 ? function () {\n    var clipPaths = this.__clipPaths;\n    var style = this.style;\n    var modified;\n\n    if (clipPaths) {\n      for (var i = 0; i < clipPaths.length; i++) {\n        var clipPath = clipPaths[i];\n        var shape = clipPath && clipPath.shape;\n        var type = clipPath && clipPath.type;\n\n        if (shape && (type === 'sector' && shape.startAngle === shape.endAngle || type === 'rect' && (!shape.width || !shape.height))) {\n          for (var j = 0; j < shadowTemp.length; j++) {\n            // It is save to put shadowTemp static, because shadowTemp\n            // will be all modified each item brush called.\n            shadowTemp[j][2] = style[shadowTemp[j][0]];\n            style[shadowTemp[j][0]] = shadowTemp[j][1];\n          }\n\n          modified = true;\n          break;\n        }\n      }\n    }\n\n    orignalBrush.apply(this, arguments);\n\n    if (modified) {\n      for (var j = 0; j < shadowTemp.length; j++) {\n        style[shadowTemp[j][0]] = shadowTemp[j][2];\n      }\n    }\n  } : orignalBrush;\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/helper/fixClipWithShadow.js\n// module id = 1645\n// module chunks = 2 3","var smoothSpline = require(\"./smoothSpline\");\n\nvar smoothBezier = require(\"./smoothBezier\");\n\nfunction buildPath(ctx, shape, closePath) {\n  var points = shape.points;\n  var smooth = shape.smooth;\n\n  if (points && points.length >= 2) {\n    if (smooth && smooth !== 'spline') {\n      var controlPoints = smoothBezier(points, smooth, closePath, shape.smoothConstraint);\n      ctx.moveTo(points[0][0], points[0][1]);\n      var len = points.length;\n\n      for (var i = 0; i < (closePath ? len : len - 1); i++) {\n        var cp1 = controlPoints[i * 2];\n        var cp2 = controlPoints[i * 2 + 1];\n        var p = points[(i + 1) % len];\n        ctx.bezierCurveTo(cp1[0], cp1[1], cp2[0], cp2[1], p[0], p[1]);\n      }\n    } else {\n      if (smooth === 'spline') {\n        points = smoothSpline(points, closePath);\n      }\n\n      ctx.moveTo(points[0][0], points[0][1]);\n\n      for (var i = 1, l = points.length; i < l; i++) {\n        ctx.lineTo(points[i][0], points[i][1]);\n      }\n    }\n\n    closePath && ctx.closePath();\n  }\n}\n\nexports.buildPath = buildPath;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/helper/poly.js\n// module id = 1646\n// module chunks = 2 3","function buildPath(ctx, shape) {\n  var x = shape.x;\n  var y = shape.y;\n  var width = shape.width;\n  var height = shape.height;\n  var r = shape.r;\n  var r1;\n  var r2;\n  var r3;\n  var r4; // Convert width and height to positive for better borderRadius\n\n  if (width < 0) {\n    x = x + width;\n    width = -width;\n  }\n\n  if (height < 0) {\n    y = y + height;\n    height = -height;\n  }\n\n  if (typeof r === 'number') {\n    r1 = r2 = r3 = r4 = r;\n  } else if (r instanceof Array) {\n    if (r.length === 1) {\n      r1 = r2 = r3 = r4 = r[0];\n    } else if (r.length === 2) {\n      r1 = r3 = r[0];\n      r2 = r4 = r[1];\n    } else if (r.length === 3) {\n      r1 = r[0];\n      r2 = r4 = r[1];\n      r3 = r[2];\n    } else {\n      r1 = r[0];\n      r2 = r[1];\n      r3 = r[2];\n      r4 = r[3];\n    }\n  } else {\n    r1 = r2 = r3 = r4 = 0;\n  }\n\n  var total;\n\n  if (r1 + r2 > width) {\n    total = r1 + r2;\n    r1 *= width / total;\n    r2 *= width / total;\n  }\n\n  if (r3 + r4 > width) {\n    total = r3 + r4;\n    r3 *= width / total;\n    r4 *= width / total;\n  }\n\n  if (r2 + r3 > height) {\n    total = r2 + r3;\n    r2 *= height / total;\n    r3 *= height / total;\n  }\n\n  if (r1 + r4 > height) {\n    total = r1 + r4;\n    r1 *= height / total;\n    r4 *= height / total;\n  }\n\n  ctx.moveTo(x + r1, y);\n  ctx.lineTo(x + width - r2, y);\n  r2 !== 0 && ctx.quadraticCurveTo(x + width, y, x + width, y + r2);\n  ctx.lineTo(x + width, y + height - r3);\n  r3 !== 0 && ctx.quadraticCurveTo(x + width, y + height, x + width - r3, y + height);\n  ctx.lineTo(x + r4, y + height);\n  r4 !== 0 && ctx.quadraticCurveTo(x, y + height, x, y + height - r4);\n  ctx.lineTo(x, y + r1);\n  r1 !== 0 && ctx.quadraticCurveTo(x, y, x + r1, y);\n}\n\nexports.buildPath = buildPath;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/helper/roundRect.js\n// module id = 1647\n// module chunks = 2 3","var _util = require(\"../../core/util\");\n\nvar retrieve2 = _util.retrieve2;\nvar retrieve3 = _util.retrieve3;\nvar each = _util.each;\nvar normalizeCssArray = _util.normalizeCssArray;\nvar isString = _util.isString;\nvar isObject = _util.isObject;\n\nvar textContain = require(\"../../contain/text\");\n\nvar roundRectHelper = require(\"./roundRect\");\n\nvar imageHelper = require(\"./image\");\n\n// TODO: Have not support 'start', 'end' yet.\nvar VALID_TEXT_ALIGN = {\n  left: 1,\n  right: 1,\n  center: 1\n};\nvar VALID_TEXT_VERTICAL_ALIGN = {\n  top: 1,\n  bottom: 1,\n  middle: 1\n};\n/**\n * @param {module:zrender/graphic/Style} style\n * @return {module:zrender/graphic/Style} The input style.\n */\n\nfunction normalizeTextStyle(style) {\n  normalizeStyle(style);\n  each(style.rich, normalizeStyle);\n  return style;\n}\n\nfunction normalizeStyle(style) {\n  if (style) {\n    style.font = textContain.makeFont(style);\n    var textAlign = style.textAlign;\n    textAlign === 'middle' && (textAlign = 'center');\n    style.textAlign = textAlign == null || VALID_TEXT_ALIGN[textAlign] ? textAlign : 'left'; // Compatible with textBaseline.\n\n    var textVerticalAlign = style.textVerticalAlign || style.textBaseline;\n    textVerticalAlign === 'center' && (textVerticalAlign = 'middle');\n    style.textVerticalAlign = textVerticalAlign == null || VALID_TEXT_VERTICAL_ALIGN[textVerticalAlign] ? textVerticalAlign : 'top';\n    var textPadding = style.textPadding;\n\n    if (textPadding) {\n      style.textPadding = normalizeCssArray(style.textPadding);\n    }\n  }\n}\n/**\n * @param {CanvasRenderingContext2D} ctx\n * @param {string} text\n * @param {module:zrender/graphic/Style} style\n * @param {Object|boolean} [rect] {x, y, width, height}\n *                  If set false, rect text is not used.\n */\n\n\nfunction renderText(hostEl, ctx, text, style, rect) {\n  style.rich ? renderRichText(hostEl, ctx, text, style, rect) : renderPlainText(hostEl, ctx, text, style, rect);\n}\n\nfunction renderPlainText(hostEl, ctx, text, style, rect) {\n  var font = setCtx(ctx, 'font', style.font || textContain.DEFAULT_FONT);\n  var textPadding = style.textPadding;\n  var contentBlock = hostEl.__textCotentBlock;\n\n  if (!contentBlock || hostEl.__dirty) {\n    contentBlock = hostEl.__textCotentBlock = textContain.parsePlainText(text, font, textPadding, style.truncate);\n  }\n\n  var outerHeight = contentBlock.outerHeight;\n  var textLines = contentBlock.lines;\n  var lineHeight = contentBlock.lineHeight;\n  var boxPos = getBoxPosition(outerHeight, style, rect);\n  var baseX = boxPos.baseX;\n  var baseY = boxPos.baseY;\n  var textAlign = boxPos.textAlign;\n  var textVerticalAlign = boxPos.textVerticalAlign; // Origin of textRotation should be the base point of text drawing.\n\n  applyTextRotation(ctx, style, rect, baseX, baseY);\n  var boxY = textContain.adjustTextY(baseY, outerHeight, textVerticalAlign);\n  var textX = baseX;\n  var textY = boxY;\n  var needDrawBg = needDrawBackground(style);\n\n  if (needDrawBg || textPadding) {\n    // Consider performance, do not call getTextWidth util necessary.\n    var textWidth = textContain.getWidth(text, font);\n    var outerWidth = textWidth;\n    textPadding && (outerWidth += textPadding[1] + textPadding[3]);\n    var boxX = textContain.adjustTextX(baseX, outerWidth, textAlign);\n    needDrawBg && drawBackground(hostEl, ctx, style, boxX, boxY, outerWidth, outerHeight);\n\n    if (textPadding) {\n      textX = getTextXForPadding(baseX, textAlign, textPadding);\n      textY += textPadding[0];\n    }\n  }\n\n  setCtx(ctx, 'textAlign', textAlign || 'left'); // Force baseline to be \"middle\". Otherwise, if using \"top\", the\n  // text will offset downward a little bit in font \"Microsoft YaHei\".\n\n  setCtx(ctx, 'textBaseline', 'middle'); // Always set shadowBlur and shadowOffset to avoid leak from displayable.\n\n  setCtx(ctx, 'shadowBlur', style.textShadowBlur || 0);\n  setCtx(ctx, 'shadowColor', style.textShadowColor || 'transparent');\n  setCtx(ctx, 'shadowOffsetX', style.textShadowOffsetX || 0);\n  setCtx(ctx, 'shadowOffsetY', style.textShadowOffsetY || 0); // `textBaseline` is set as 'middle'.\n\n  textY += lineHeight / 2;\n  var textStrokeWidth = style.textStrokeWidth;\n  var textStroke = getStroke(style.textStroke, textStrokeWidth);\n  var textFill = getFill(style.textFill);\n\n  if (textStroke) {\n    setCtx(ctx, 'lineWidth', textStrokeWidth);\n    setCtx(ctx, 'strokeStyle', textStroke);\n  }\n\n  if (textFill) {\n    setCtx(ctx, 'fillStyle', textFill);\n  }\n\n  for (var i = 0; i < textLines.length; i++) {\n    // Fill after stroke so the outline will not cover the main part.\n    textStroke && ctx.strokeText(textLines[i], textX, textY);\n    textFill && ctx.fillText(textLines[i], textX, textY);\n    textY += lineHeight;\n  }\n}\n\nfunction renderRichText(hostEl, ctx, text, style, rect) {\n  var contentBlock = hostEl.__textCotentBlock;\n\n  if (!contentBlock || hostEl.__dirty) {\n    contentBlock = hostEl.__textCotentBlock = textContain.parseRichText(text, style);\n  }\n\n  drawRichText(hostEl, ctx, contentBlock, style, rect);\n}\n\nfunction drawRichText(hostEl, ctx, contentBlock, style, rect) {\n  var contentWidth = contentBlock.width;\n  var outerWidth = contentBlock.outerWidth;\n  var outerHeight = contentBlock.outerHeight;\n  var textPadding = style.textPadding;\n  var boxPos = getBoxPosition(outerHeight, style, rect);\n  var baseX = boxPos.baseX;\n  var baseY = boxPos.baseY;\n  var textAlign = boxPos.textAlign;\n  var textVerticalAlign = boxPos.textVerticalAlign; // Origin of textRotation should be the base point of text drawing.\n\n  applyTextRotation(ctx, style, rect, baseX, baseY);\n  var boxX = textContain.adjustTextX(baseX, outerWidth, textAlign);\n  var boxY = textContain.adjustTextY(baseY, outerHeight, textVerticalAlign);\n  var xLeft = boxX;\n  var lineTop = boxY;\n\n  if (textPadding) {\n    xLeft += textPadding[3];\n    lineTop += textPadding[0];\n  }\n\n  var xRight = xLeft + contentWidth;\n  needDrawBackground(style) && drawBackground(hostEl, ctx, style, boxX, boxY, outerWidth, outerHeight);\n\n  for (var i = 0; i < contentBlock.lines.length; i++) {\n    var line = contentBlock.lines[i];\n    var tokens = line.tokens;\n    var tokenCount = tokens.length;\n    var lineHeight = line.lineHeight;\n    var usedWidth = line.width;\n    var leftIndex = 0;\n    var lineXLeft = xLeft;\n    var lineXRight = xRight;\n    var rightIndex = tokenCount - 1;\n    var token;\n\n    while (leftIndex < tokenCount && (token = tokens[leftIndex], !token.textAlign || token.textAlign === 'left')) {\n      placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXLeft, 'left');\n      usedWidth -= token.width;\n      lineXLeft += token.width;\n      leftIndex++;\n    }\n\n    while (rightIndex >= 0 && (token = tokens[rightIndex], token.textAlign === 'right')) {\n      placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXRight, 'right');\n      usedWidth -= token.width;\n      lineXRight -= token.width;\n      rightIndex--;\n    } // The other tokens are placed as textAlign 'center' if there is enough space.\n\n\n    lineXLeft += (contentWidth - (lineXLeft - xLeft) - (xRight - lineXRight) - usedWidth) / 2;\n\n    while (leftIndex <= rightIndex) {\n      token = tokens[leftIndex]; // Consider width specified by user, use 'center' rather than 'left'.\n\n      placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXLeft + token.width / 2, 'center');\n      lineXLeft += token.width;\n      leftIndex++;\n    }\n\n    lineTop += lineHeight;\n  }\n}\n\nfunction applyTextRotation(ctx, style, rect, x, y) {\n  // textRotation only apply in RectText.\n  if (rect && style.textRotation) {\n    var origin = style.textOrigin;\n\n    if (origin === 'center') {\n      x = rect.width / 2 + rect.x;\n      y = rect.height / 2 + rect.y;\n    } else if (origin) {\n      x = origin[0] + rect.x;\n      y = origin[1] + rect.y;\n    }\n\n    ctx.translate(x, y); // Positive: anticlockwise\n\n    ctx.rotate(-style.textRotation);\n    ctx.translate(-x, -y);\n  }\n}\n\nfunction placeToken(hostEl, ctx, token, style, lineHeight, lineTop, x, textAlign) {\n  var tokenStyle = style.rich[token.styleName] || {}; // 'ctx.textBaseline' is always set as 'middle', for sake of\n  // the bias of \"Microsoft YaHei\".\n\n  var textVerticalAlign = token.textVerticalAlign;\n  var y = lineTop + lineHeight / 2;\n\n  if (textVerticalAlign === 'top') {\n    y = lineTop + token.height / 2;\n  } else if (textVerticalAlign === 'bottom') {\n    y = lineTop + lineHeight - token.height / 2;\n  }\n\n  !token.isLineHolder && needDrawBackground(tokenStyle) && drawBackground(hostEl, ctx, tokenStyle, textAlign === 'right' ? x - token.width : textAlign === 'center' ? x - token.width / 2 : x, y - token.height / 2, token.width, token.height);\n  var textPadding = token.textPadding;\n\n  if (textPadding) {\n    x = getTextXForPadding(x, textAlign, textPadding);\n    y -= token.height / 2 - textPadding[2] - token.textHeight / 2;\n  }\n\n  setCtx(ctx, 'shadowBlur', retrieve3(tokenStyle.textShadowBlur, style.textShadowBlur, 0));\n  setCtx(ctx, 'shadowColor', tokenStyle.textShadowColor || style.textShadowColor || 'transparent');\n  setCtx(ctx, 'shadowOffsetX', retrieve3(tokenStyle.textShadowOffsetX, style.textShadowOffsetX, 0));\n  setCtx(ctx, 'shadowOffsetY', retrieve3(tokenStyle.textShadowOffsetY, style.textShadowOffsetY, 0));\n  setCtx(ctx, 'textAlign', textAlign); // Force baseline to be \"middle\". Otherwise, if using \"top\", the\n  // text will offset downward a little bit in font \"Microsoft YaHei\".\n\n  setCtx(ctx, 'textBaseline', 'middle');\n  setCtx(ctx, 'font', token.font || textContain.DEFAULT_FONT);\n  var textStroke = getStroke(tokenStyle.textStroke || style.textStroke, textStrokeWidth);\n  var textFill = getFill(tokenStyle.textFill || style.textFill);\n  var textStrokeWidth = retrieve2(tokenStyle.textStrokeWidth, style.textStrokeWidth); // Fill after stroke so the outline will not cover the main part.\n\n  if (textStroke) {\n    setCtx(ctx, 'lineWidth', textStrokeWidth);\n    setCtx(ctx, 'strokeStyle', textStroke);\n    ctx.strokeText(token.text, x, y);\n  }\n\n  if (textFill) {\n    setCtx(ctx, 'fillStyle', textFill);\n    ctx.fillText(token.text, x, y);\n  }\n}\n\nfunction needDrawBackground(style) {\n  return style.textBackgroundColor || style.textBorderWidth && style.textBorderColor;\n} // style: {textBackgroundColor, textBorderWidth, textBorderColor, textBorderRadius}\n// shape: {x, y, width, height}\n\n\nfunction drawBackground(hostEl, ctx, style, x, y, width, height) {\n  var textBackgroundColor = style.textBackgroundColor;\n  var textBorderWidth = style.textBorderWidth;\n  var textBorderColor = style.textBorderColor;\n  var isPlainBg = isString(textBackgroundColor);\n  setCtx(ctx, 'shadowBlur', style.textBoxShadowBlur || 0);\n  setCtx(ctx, 'shadowColor', style.textBoxShadowColor || 'transparent');\n  setCtx(ctx, 'shadowOffsetX', style.textBoxShadowOffsetX || 0);\n  setCtx(ctx, 'shadowOffsetY', style.textBoxShadowOffsetY || 0);\n\n  if (isPlainBg || textBorderWidth && textBorderColor) {\n    ctx.beginPath();\n    var textBorderRadius = style.textBorderRadius;\n\n    if (!textBorderRadius) {\n      ctx.rect(x, y, width, height);\n    } else {\n      roundRectHelper.buildPath(ctx, {\n        x: x,\n        y: y,\n        width: width,\n        height: height,\n        r: textBorderRadius\n      });\n    }\n\n    ctx.closePath();\n  }\n\n  if (isPlainBg) {\n    setCtx(ctx, 'fillStyle', textBackgroundColor);\n    ctx.fill();\n  } else if (isObject(textBackgroundColor)) {\n    var image = textBackgroundColor.image;\n    image = imageHelper.createOrUpdateImage(image, null, hostEl, onBgImageLoaded, textBackgroundColor);\n\n    if (image && imageHelper.isImageReady(image)) {\n      ctx.drawImage(image, x, y, width, height);\n    }\n  }\n\n  if (textBorderWidth && textBorderColor) {\n    setCtx(ctx, 'lineWidth', textBorderWidth);\n    setCtx(ctx, 'strokeStyle', textBorderColor);\n    ctx.stroke();\n  }\n}\n\nfunction onBgImageLoaded(image, textBackgroundColor) {\n  // Replace image, so that `contain/text.js#parseRichText`\n  // will get correct result in next tick.\n  textBackgroundColor.image = image;\n}\n\nfunction getBoxPosition(blockHeiht, style, rect) {\n  var baseX = style.x || 0;\n  var baseY = style.y || 0;\n  var textAlign = style.textAlign;\n  var textVerticalAlign = style.textVerticalAlign; // Text position represented by coord\n\n  if (rect) {\n    var textPosition = style.textPosition;\n\n    if (textPosition instanceof Array) {\n      // Percent\n      baseX = rect.x + parsePercent(textPosition[0], rect.width);\n      baseY = rect.y + parsePercent(textPosition[1], rect.height);\n    } else {\n      var res = textContain.adjustTextPositionOnRect(textPosition, rect, style.textDistance);\n      baseX = res.x;\n      baseY = res.y; // Default align and baseline when has textPosition\n\n      textAlign = textAlign || res.textAlign;\n      textVerticalAlign = textVerticalAlign || res.textVerticalAlign;\n    } // textOffset is only support in RectText, otherwise\n    // we have to adjust boundingRect for textOffset.\n\n\n    var textOffset = style.textOffset;\n\n    if (textOffset) {\n      baseX += textOffset[0];\n      baseY += textOffset[1];\n    }\n  }\n\n  return {\n    baseX: baseX,\n    baseY: baseY,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n}\n\nfunction setCtx(ctx, prop, value) {\n  // FIXME ??? performance try\n  // if (ctx.__currentValues[prop] !== value) {\n  // ctx[prop] = ctx.__currentValues[prop] = value;\n  ctx[prop] = value; // }\n\n  return ctx[prop];\n}\n/**\n * @param {string} [stroke] If specified, do not check style.textStroke.\n * @param {string} [lineWidth] If specified, do not check style.textStroke.\n * @param {number} style\n */\n\n\nfunction getStroke(stroke, lineWidth) {\n  return stroke == null || lineWidth <= 0 || stroke === 'transparent' || stroke === 'none' ? null // TODO pattern and gradient?\n  : stroke.image || stroke.colorStops ? '#000' : stroke;\n}\n\nfunction getFill(fill) {\n  return fill == null || fill === 'none' ? null // TODO pattern and gradient?\n  : fill.image || fill.colorStops ? '#000' : fill;\n}\n\nfunction parsePercent(value, maxValue) {\n  if (typeof value === 'string') {\n    if (value.lastIndexOf('%') >= 0) {\n      return parseFloat(value) / 100 * maxValue;\n    }\n\n    return parseFloat(value);\n  }\n\n  return value;\n}\n\nfunction getTextXForPadding(x, textAlign, textPadding) {\n  return textAlign === 'right' ? x - textPadding[1] : textAlign === 'center' ? x + textPadding[3] / 2 - textPadding[1] / 2 : x + textPadding[3];\n}\n/**\n * @param {string} text\n * @param {module:zrender/Style} style\n * @return {boolean}\n */\n\n\nfunction needDrawText(text, style) {\n  return text != null && (text || style.textBackgroundColor || style.textBorderWidth && style.textBorderColor || style.textPadding);\n}\n\nexports.normalizeTextStyle = normalizeTextStyle;\nexports.renderText = renderText;\nexports.getStroke = getStroke;\nexports.getFill = getFill;\nexports.needDrawText = needDrawText;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/helper/text.js\n// module id = 1648\n// module chunks = 2 3","var matrix = require(\"../core/matrix\");\n\nvar vector = require(\"../core/vector\");\n\n/**\n * 提供变换扩展\n * @module zrender/mixin/Transformable\n * @author pissang (https://www.github.com/pissang)\n */\nvar mIdentity = matrix.identity;\nvar EPSILON = 5e-5;\n\nfunction isNotAroundZero(val) {\n  return val > EPSILON || val < -EPSILON;\n}\n/**\n * @alias module:zrender/mixin/Transformable\n * @constructor\n */\n\n\nvar Transformable = function (opts) {\n  opts = opts || {}; // If there are no given position, rotation, scale\n\n  if (!opts.position) {\n    /**\n     * 平移\n     * @type {Array.<number>}\n     * @default [0, 0]\n     */\n    this.position = [0, 0];\n  }\n\n  if (opts.rotation == null) {\n    /**\n     * 旋转\n     * @type {Array.<number>}\n     * @default 0\n     */\n    this.rotation = 0;\n  }\n\n  if (!opts.scale) {\n    /**\n     * 缩放\n     * @type {Array.<number>}\n     * @default [1, 1]\n     */\n    this.scale = [1, 1];\n  }\n  /**\n   * 旋转和缩放的原点\n   * @type {Array.<number>}\n   * @default null\n   */\n\n\n  this.origin = this.origin || null;\n};\n\nvar transformableProto = Transformable.prototype;\ntransformableProto.transform = null;\n/**\n * 判断是否需要有坐标变换\n * 如果有坐标变换, 则从position, rotation, scale以及父节点的transform计算出自身的transform矩阵\n */\n\ntransformableProto.needLocalTransform = function () {\n  return isNotAroundZero(this.rotation) || isNotAroundZero(this.position[0]) || isNotAroundZero(this.position[1]) || isNotAroundZero(this.scale[0] - 1) || isNotAroundZero(this.scale[1] - 1);\n};\n\ntransformableProto.updateTransform = function () {\n  var parent = this.parent;\n  var parentHasTransform = parent && parent.transform;\n  var needLocalTransform = this.needLocalTransform();\n  var m = this.transform;\n\n  if (!(needLocalTransform || parentHasTransform)) {\n    m && mIdentity(m);\n    return;\n  }\n\n  m = m || matrix.create();\n\n  if (needLocalTransform) {\n    this.getLocalTransform(m);\n  } else {\n    mIdentity(m);\n  } // 应用父节点变换\n\n\n  if (parentHasTransform) {\n    if (needLocalTransform) {\n      matrix.mul(m, parent.transform, m);\n    } else {\n      matrix.copy(m, parent.transform);\n    }\n  } // 保存这个变换矩阵\n\n\n  this.transform = m;\n  this.invTransform = this.invTransform || matrix.create();\n  matrix.invert(this.invTransform, m);\n};\n\ntransformableProto.getLocalTransform = function (m) {\n  return Transformable.getLocalTransform(this, m);\n};\n/**\n * 将自己的transform应用到context上\n * @param {CanvasRenderingContext2D} ctx\n */\n\n\ntransformableProto.setTransform = function (ctx) {\n  var m = this.transform;\n  var dpr = ctx.dpr || 1;\n\n  if (m) {\n    ctx.setTransform(dpr * m[0], dpr * m[1], dpr * m[2], dpr * m[3], dpr * m[4], dpr * m[5]);\n  } else {\n    ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n  }\n};\n\ntransformableProto.restoreTransform = function (ctx) {\n  var dpr = ctx.dpr || 1;\n  ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n};\n\nvar tmpTransform = [];\n/**\n * 分解`transform`矩阵到`position`, `rotation`, `scale`\n */\n\ntransformableProto.decomposeTransform = function () {\n  if (!this.transform) {\n    return;\n  }\n\n  var parent = this.parent;\n  var m = this.transform;\n\n  if (parent && parent.transform) {\n    // Get local transform and decompose them to position, scale, rotation\n    matrix.mul(tmpTransform, parent.invTransform, m);\n    m = tmpTransform;\n  }\n\n  var sx = m[0] * m[0] + m[1] * m[1];\n  var sy = m[2] * m[2] + m[3] * m[3];\n  var position = this.position;\n  var scale = this.scale;\n\n  if (isNotAroundZero(sx - 1)) {\n    sx = Math.sqrt(sx);\n  }\n\n  if (isNotAroundZero(sy - 1)) {\n    sy = Math.sqrt(sy);\n  }\n\n  if (m[0] < 0) {\n    sx = -sx;\n  }\n\n  if (m[3] < 0) {\n    sy = -sy;\n  }\n\n  position[0] = m[4];\n  position[1] = m[5];\n  scale[0] = sx;\n  scale[1] = sy;\n  this.rotation = Math.atan2(-m[1] / sy, m[0] / sx);\n};\n/**\n * Get global scale\n * @return {Array.<number>}\n */\n\n\ntransformableProto.getGlobalScale = function () {\n  var m = this.transform;\n\n  if (!m) {\n    return [1, 1];\n  }\n\n  var sx = Math.sqrt(m[0] * m[0] + m[1] * m[1]);\n  var sy = Math.sqrt(m[2] * m[2] + m[3] * m[3]);\n\n  if (m[0] < 0) {\n    sx = -sx;\n  }\n\n  if (m[3] < 0) {\n    sy = -sy;\n  }\n\n  return [sx, sy];\n};\n/**\n * 变换坐标位置到 shape 的局部坐标空间\n * @method\n * @param {number} x\n * @param {number} y\n * @return {Array.<number>}\n */\n\n\ntransformableProto.transformCoordToLocal = function (x, y) {\n  var v2 = [x, y];\n  var invTransform = this.invTransform;\n\n  if (invTransform) {\n    vector.applyTransform(v2, v2, invTransform);\n  }\n\n  return v2;\n};\n/**\n * 变换局部坐标位置到全局坐标空间\n * @method\n * @param {number} x\n * @param {number} y\n * @return {Array.<number>}\n */\n\n\ntransformableProto.transformCoordToGlobal = function (x, y) {\n  var v2 = [x, y];\n  var transform = this.transform;\n\n  if (transform) {\n    vector.applyTransform(v2, v2, transform);\n  }\n\n  return v2;\n};\n/**\n * @static\n * @param {Object} target\n * @param {Array.<number>} target.origin\n * @param {number} target.rotation\n * @param {Array.<number>} target.position\n * @param {Array.<number>} [m]\n */\n\n\nTransformable.getLocalTransform = function (target, m) {\n  m = m || [];\n  mIdentity(m);\n  var origin = target.origin;\n  var scale = target.scale || [1, 1];\n  var rotation = target.rotation || 0;\n  var position = target.position || [0, 0];\n\n  if (origin) {\n    // Translate to origin\n    m[4] -= origin[0];\n    m[5] -= origin[1];\n  }\n\n  matrix.scale(m, m, scale);\n\n  if (rotation) {\n    matrix.rotate(m, m, rotation);\n  }\n\n  if (origin) {\n    // Translate back from origin\n    m[4] += origin[0];\n    m[5] += origin[1];\n  }\n\n  m[4] += position[0];\n  m[5] += position[1];\n  return m;\n};\n\nvar _default = Transformable;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/mixin/Transformable.js\n// module id = 1649\n// module chunks = 2 3","var guid = require(\"./core/guid\");\n\nvar env = require(\"./core/env\");\n\nvar zrUtil = require(\"./core/util\");\n\nvar Handler = require(\"./Handler\");\n\nvar Storage = require(\"./Storage\");\n\nvar Painter = require(\"./Painter\");\n\nvar Animation = require(\"./animation/Animation\");\n\nvar HandlerProxy = require(\"./dom/HandlerProxy\");\n\n/*!\n* ZRender, a high performance 2d drawing library.\n*\n* Copyright (c) 2013, Baidu Inc.\n* All rights reserved.\n*\n* LICENSE\n* https://github.com/ecomfe/zrender/blob/master/LICENSE.txt\n*/\nvar useVML = !env.canvasSupported;\nvar painterCtors = {\n  canvas: Painter\n};\nvar instances = {}; // ZRender实例map索引\n\n/**\n * @type {string}\n */\n\nvar version = '3.7.4';\n/**\n * Initializing a zrender instance\n * @param {HTMLElement} dom\n * @param {Object} opts\n * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n * @param {number} [opts.devicePixelRatio]\n * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n * @return {module:zrender/ZRender}\n */\n\nfunction init(dom, opts) {\n  var zr = new ZRender(guid(), dom, opts);\n  instances[zr.id] = zr;\n  return zr;\n}\n/**\n * Dispose zrender instance\n * @param {module:zrender/ZRender} zr\n */\n\n\nfunction dispose(zr) {\n  if (zr) {\n    zr.dispose();\n  } else {\n    for (var key in instances) {\n      if (instances.hasOwnProperty(key)) {\n        instances[key].dispose();\n      }\n    }\n\n    instances = {};\n  }\n\n  return this;\n}\n/**\n * Get zrender instance by id\n * @param {string} id zrender instance id\n * @return {module:zrender/ZRender}\n */\n\n\nfunction getInstance(id) {\n  return instances[id];\n}\n\nfunction registerPainter(name, Ctor) {\n  painterCtors[name] = Ctor;\n}\n\nfunction delInstance(id) {\n  delete instances[id];\n}\n/**\n * @module zrender/ZRender\n */\n\n/**\n * @constructor\n * @alias module:zrender/ZRender\n * @param {string} id\n * @param {HTMLElement} dom\n * @param {Object} opts\n * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n * @param {number} [opts.devicePixelRatio]\n * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n */\n\n\nvar ZRender = function (id, dom, opts) {\n  opts = opts || {};\n  /**\n   * @type {HTMLDomElement}\n   */\n\n  this.dom = dom;\n  /**\n   * @type {string}\n   */\n\n  this.id = id;\n  var self = this;\n  var storage = new Storage();\n  var rendererType = opts.renderer; // TODO WebGL\n\n  if (useVML) {\n    if (!painterCtors.vml) {\n      throw new Error('You need to require \\'zrender/vml/vml\\' to support IE8');\n    }\n\n    rendererType = 'vml';\n  } else if (!rendererType || !painterCtors[rendererType]) {\n    rendererType = 'canvas';\n  }\n\n  var painter = new painterCtors[rendererType](dom, storage, opts);\n  this.storage = storage;\n  this.painter = painter;\n  var handerProxy = !env.node ? new HandlerProxy(painter.getViewportRoot()) : null;\n  this.handler = new Handler(storage, painter, handerProxy, painter.root);\n  /**\n   * @type {module:zrender/animation/Animation}\n   */\n\n  this.animation = new Animation({\n    stage: {\n      update: zrUtil.bind(this.flush, this)\n    }\n  });\n  this.animation.start();\n  /**\n   * @type {boolean}\n   * @private\n   */\n\n  this._needsRefresh; // 修改 storage.delFromStorage, 每次删除元素之前删除动画\n  // FIXME 有点ugly\n\n  var oldDelFromStorage = storage.delFromStorage;\n  var oldAddToStorage = storage.addToStorage;\n\n  storage.delFromStorage = function (el) {\n    oldDelFromStorage.call(storage, el);\n    el && el.removeSelfFromZr(self);\n  };\n\n  storage.addToStorage = function (el) {\n    oldAddToStorage.call(storage, el);\n    el.addSelfToZr(self);\n  };\n};\n\nZRender.prototype = {\n  constructor: ZRender,\n\n  /**\n   * 获取实例唯一标识\n   * @return {string}\n   */\n  getId: function () {\n    return this.id;\n  },\n\n  /**\n   * 添加元素\n   * @param  {module:zrender/Element} el\n   */\n  add: function (el) {\n    this.storage.addRoot(el);\n    this._needsRefresh = true;\n  },\n\n  /**\n   * 删除元素\n   * @param  {module:zrender/Element} el\n   */\n  remove: function (el) {\n    this.storage.delRoot(el);\n    this._needsRefresh = true;\n  },\n\n  /**\n   * Change configuration of layer\n   * @param {string} zLevel\n   * @param {Object} config\n   * @param {string} [config.clearColor=0] Clear color\n   * @param {string} [config.motionBlur=false] If enable motion blur\n   * @param {number} [config.lastFrameAlpha=0.7] Motion blur factor. Larger value cause longer trailer\n  */\n  configLayer: function (zLevel, config) {\n    this.painter.configLayer(zLevel, config);\n    this._needsRefresh = true;\n  },\n\n  /**\n   * Repaint the canvas immediately\n   */\n  refreshImmediately: function () {\n    // var start = new Date();\n    // Clear needsRefresh ahead to avoid something wrong happens in refresh\n    // Or it will cause zrender refreshes again and again.\n    this._needsRefresh = false;\n    this.painter.refresh();\n    /**\n     * Avoid trigger zr.refresh in Element#beforeUpdate hook\n     */\n\n    this._needsRefresh = false; // var end = new Date();\n    // var log = document.getElementById('log');\n    // if (log) {\n    //     log.innerHTML = log.innerHTML + '<br>' + (end - start);\n    // }\n  },\n\n  /**\n   * Mark and repaint the canvas in the next frame of browser\n   */\n  refresh: function () {\n    this._needsRefresh = true;\n  },\n\n  /**\n   * Perform all refresh\n   */\n  flush: function () {\n    if (this._needsRefresh) {\n      this.refreshImmediately();\n    }\n\n    if (this._needsRefreshHover) {\n      this.refreshHoverImmediately();\n    }\n  },\n\n  /**\n   * Add element to hover layer\n   * @param  {module:zrender/Element} el\n   * @param {Object} style\n   */\n  addHover: function (el, style) {\n    if (this.painter.addHover) {\n      this.painter.addHover(el, style);\n      this.refreshHover();\n    }\n  },\n\n  /**\n   * Add element from hover layer\n   * @param  {module:zrender/Element} el\n   */\n  removeHover: function (el) {\n    if (this.painter.removeHover) {\n      this.painter.removeHover(el);\n      this.refreshHover();\n    }\n  },\n\n  /**\n   * Clear all hover elements in hover layer\n   * @param  {module:zrender/Element} el\n   */\n  clearHover: function () {\n    if (this.painter.clearHover) {\n      this.painter.clearHover();\n      this.refreshHover();\n    }\n  },\n\n  /**\n   * Refresh hover in next frame\n   */\n  refreshHover: function () {\n    this._needsRefreshHover = true;\n  },\n\n  /**\n   * Refresh hover immediately\n   */\n  refreshHoverImmediately: function () {\n    this._needsRefreshHover = false;\n    this.painter.refreshHover && this.painter.refreshHover();\n  },\n\n  /**\n   * Resize the canvas.\n   * Should be invoked when container size is changed\n   * @param {Object} [opts]\n   * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n   * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n   */\n  resize: function (opts) {\n    opts = opts || {};\n    this.painter.resize(opts.width, opts.height);\n    this.handler.resize();\n  },\n\n  /**\n   * Stop and clear all animation immediately\n   */\n  clearAnimation: function () {\n    this.animation.clear();\n  },\n\n  /**\n   * Get container width\n   */\n  getWidth: function () {\n    return this.painter.getWidth();\n  },\n\n  /**\n   * Get container height\n   */\n  getHeight: function () {\n    return this.painter.getHeight();\n  },\n\n  /**\n   * Export the canvas as Base64 URL\n   * @param {string} type\n   * @param {string} [backgroundColor='#fff']\n   * @return {string} Base64 URL\n   */\n  // toDataURL: function(type, backgroundColor) {\n  //     return this.painter.getRenderedCanvas({\n  //         backgroundColor: backgroundColor\n  //     }).toDataURL(type);\n  // },\n\n  /**\n   * Converting a path to image.\n   * It has much better performance of drawing image rather than drawing a vector path.\n   * @param {module:zrender/graphic/Path} e\n   * @param {number} width\n   * @param {number} height\n   */\n  pathToImage: function (e, dpr) {\n    return this.painter.pathToImage(e, dpr);\n  },\n\n  /**\n   * Set default cursor\n   * @param {string} [cursorStyle='default'] 例如 crosshair\n   */\n  setCursorStyle: function (cursorStyle) {\n    this.handler.setCursorStyle(cursorStyle);\n  },\n\n  /**\n   * Find hovered element\n   * @param {number} x\n   * @param {number} y\n   * @return {Object} {target, topTarget}\n   */\n  findHover: function (x, y) {\n    return this.handler.findHover(x, y);\n  },\n\n  /**\n   * Bind event\n   *\n   * @param {string} eventName Event name\n   * @param {Function} eventHandler Handler function\n   * @param {Object} [context] Context object\n   */\n  on: function (eventName, eventHandler, context) {\n    this.handler.on(eventName, eventHandler, context);\n  },\n\n  /**\n   * Unbind event\n   * @param {string} eventName Event name\n   * @param {Function} [eventHandler] Handler function\n   */\n  off: function (eventName, eventHandler) {\n    this.handler.off(eventName, eventHandler);\n  },\n\n  /**\n   * Trigger event manually\n   *\n   * @param {string} eventName Event name\n   * @param {event=} event Event object\n   */\n  trigger: function (eventName, event) {\n    this.handler.trigger(eventName, event);\n  },\n\n  /**\n   * Clear all objects and the canvas.\n   */\n  clear: function () {\n    this.storage.delRoot();\n    this.painter.clear();\n  },\n\n  /**\n   * Dispose self.\n   */\n  dispose: function () {\n    this.animation.stop();\n    this.clear();\n    this.storage.dispose();\n    this.painter.dispose();\n    this.handler.dispose();\n    this.animation = this.storage = this.painter = this.handler = null;\n    delInstance(this.id);\n  }\n};\nexports.version = version;\nexports.init = init;\nexports.dispose = dispose;\nexports.getInstance = getInstance;\nexports.registerPainter = registerPainter;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/zrender.js\n// module id = 1650\n// module chunks = 2 3","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar echartsAPIList = ['getDom', 'getZr', 'getWidth', 'getHeight', 'getDevicePixelRatio', 'dispatchAction', 'isDisposed', 'on', 'off', 'getDataURL', 'getConnectedDataURL', 'getModel', 'getOption', 'getViewOfComponentModel', 'getViewOfSeriesModel']; // And `getCoordinateSystems` and `getComponentByElement` will be injected in echarts.js\n\nfunction ExtensionAPI(chartInstance) {\n  zrUtil.each(echartsAPIList, function (name) {\n    this[name] = zrUtil.bind(chartInstance[name], chartInstance);\n  }, this);\n}\n\nvar _default = ExtensionAPI;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/ExtensionAPI.js\n// module id = 1675\n// module chunks = 2 3","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar barLayoutGrid = require(\"../layout/barGrid\");\n\nrequire(\"../coord/cartesian/Grid\");\n\nrequire(\"./bar/BarSeries\");\n\nrequire(\"./bar/BarView\");\n\nrequire(\"../component/gridSimple\");\n\n// In case developer forget to include grid component\necharts.registerLayout(zrUtil.curry(barLayoutGrid, 'bar')); // Visual coding for legend\n\necharts.registerVisual(function (ecModel) {\n  ecModel.eachSeriesByType('bar', function (seriesModel) {\n    var data = seriesModel.getData();\n    data.setVisual('legendSymbol', 'roundRect');\n  });\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/bar.js\n// module id = 1676\n// module chunks = 2 3","var BaseBarSeries = require(\"./BaseBarSeries\");\n\nvar _default = BaseBarSeries.extend({\n  type: 'series.bar',\n  dependencies: ['grid', 'polar'],\n  brushSelector: 'rect'\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/bar/BarSeries.js\n// module id = 1677\n// module chunks = 2 3","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _helper = require(\"./helper\");\n\nvar setLabel = _helper.setLabel;\n\nvar Model = require(\"../../model/Model\");\n\nvar barItemStyle = require(\"./barItemStyle\");\n\nvar BAR_BORDER_WIDTH_QUERY = ['itemStyle', 'normal', 'barBorderWidth']; // FIXME\n// Just for compatible with ec2.\n\nzrUtil.extend(Model.prototype, barItemStyle);\n\nvar _default = echarts.extendChartView({\n  type: 'bar',\n  render: function (seriesModel, ecModel, api) {\n    var coordinateSystemType = seriesModel.get('coordinateSystem');\n\n    if (coordinateSystemType === 'cartesian2d' || coordinateSystemType === 'polar') {\n      this._render(seriesModel, ecModel, api);\n    } else {}\n\n    return this.group;\n  },\n  dispose: zrUtil.noop,\n  _render: function (seriesModel, ecModel, api) {\n    var group = this.group;\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var coord = seriesModel.coordinateSystem;\n    var baseAxis = coord.getBaseAxis();\n    var isHorizontalOrRadial;\n\n    if (coord.type === 'cartesian2d') {\n      isHorizontalOrRadial = baseAxis.isHorizontal();\n    } else if (coord.type === 'polar') {\n      isHorizontalOrRadial = baseAxis.dim === 'angle';\n    }\n\n    var animationModel = seriesModel.isAnimationEnabled() ? seriesModel : null;\n    data.diff(oldData).add(function (dataIndex) {\n      if (!data.hasValue(dataIndex)) {\n        return;\n      }\n\n      var itemModel = data.getItemModel(dataIndex);\n      var layout = getLayout[coord.type](data, dataIndex, itemModel);\n      var el = elementCreator[coord.type](data, dataIndex, itemModel, layout, isHorizontalOrRadial, animationModel);\n      data.setItemGraphicEl(dataIndex, el);\n      group.add(el);\n      updateStyle(el, data, dataIndex, itemModel, layout, seriesModel, isHorizontalOrRadial, coord.type === 'polar');\n    }).update(function (newIndex, oldIndex) {\n      var el = oldData.getItemGraphicEl(oldIndex);\n\n      if (!data.hasValue(newIndex)) {\n        group.remove(el);\n        return;\n      }\n\n      var itemModel = data.getItemModel(newIndex);\n      var layout = getLayout[coord.type](data, newIndex, itemModel);\n\n      if (el) {\n        graphic.updateProps(el, {\n          shape: layout\n        }, animationModel, newIndex);\n      } else {\n        el = elementCreator[coord.type](data, newIndex, itemModel, layout, isHorizontalOrRadial, animationModel, true);\n      }\n\n      data.setItemGraphicEl(newIndex, el); // Add back\n\n      group.add(el);\n      updateStyle(el, data, newIndex, itemModel, layout, seriesModel, isHorizontalOrRadial, coord.type === 'polar');\n    }).remove(function (dataIndex) {\n      var el = oldData.getItemGraphicEl(dataIndex);\n\n      if (coord.type === 'cartesian2d') {\n        el && removeRect(dataIndex, animationModel, el);\n      } else {\n        el && removeSector(dataIndex, animationModel, el);\n      }\n    }).execute();\n    this._data = data;\n  },\n  remove: function (ecModel, api) {\n    var group = this.group;\n    var data = this._data;\n\n    if (ecModel.get('animation')) {\n      if (data) {\n        data.eachItemGraphicEl(function (el) {\n          if (el.type === 'sector') {\n            removeSector(el.dataIndex, ecModel, el);\n          } else {\n            removeRect(el.dataIndex, ecModel, el);\n          }\n        });\n      }\n    } else {\n      group.removeAll();\n    }\n  }\n});\n\nvar elementCreator = {\n  cartesian2d: function (data, dataIndex, itemModel, layout, isHorizontal, animationModel, isUpdate) {\n    var rect = new graphic.Rect({\n      shape: zrUtil.extend({}, layout)\n    }); // Animation\n\n    if (animationModel) {\n      var rectShape = rect.shape;\n      var animateProperty = isHorizontal ? 'height' : 'width';\n      var animateTarget = {};\n      rectShape[animateProperty] = 0;\n      animateTarget[animateProperty] = layout[animateProperty];\n      graphic[isUpdate ? 'updateProps' : 'initProps'](rect, {\n        shape: animateTarget\n      }, animationModel, dataIndex);\n    }\n\n    return rect;\n  },\n  polar: function (data, dataIndex, itemModel, layout, isRadial, animationModel, isUpdate) {\n    var sector = new graphic.Sector({\n      shape: zrUtil.extend({}, layout)\n    }); // Animation\n\n    if (animationModel) {\n      var sectorShape = sector.shape;\n      var animateProperty = isRadial ? 'r' : 'endAngle';\n      var animateTarget = {};\n      sectorShape[animateProperty] = isRadial ? 0 : layout.startAngle;\n      animateTarget[animateProperty] = layout[animateProperty];\n      graphic[isUpdate ? 'updateProps' : 'initProps'](sector, {\n        shape: animateTarget\n      }, animationModel, dataIndex);\n    }\n\n    return sector;\n  }\n};\n\nfunction removeRect(dataIndex, animationModel, el) {\n  // Not show text when animating\n  el.style.text = null;\n  graphic.updateProps(el, {\n    shape: {\n      width: 0\n    }\n  }, animationModel, dataIndex, function () {\n    el.parent && el.parent.remove(el);\n  });\n}\n\nfunction removeSector(dataIndex, animationModel, el) {\n  // Not show text when animating\n  el.style.text = null;\n  graphic.updateProps(el, {\n    shape: {\n      r: el.shape.r0\n    }\n  }, animationModel, dataIndex, function () {\n    el.parent && el.parent.remove(el);\n  });\n}\n\nvar getLayout = {\n  cartesian2d: function (data, dataIndex, itemModel) {\n    var layout = data.getItemLayout(dataIndex);\n    var fixedLineWidth = getLineWidth(itemModel, layout); // fix layout with lineWidth\n\n    var signX = layout.width > 0 ? 1 : -1;\n    var signY = layout.height > 0 ? 1 : -1;\n    return {\n      x: layout.x + signX * fixedLineWidth / 2,\n      y: layout.y + signY * fixedLineWidth / 2,\n      width: layout.width - signX * fixedLineWidth,\n      height: layout.height - signY * fixedLineWidth\n    };\n  },\n  polar: function (data, dataIndex, itemModel) {\n    var layout = data.getItemLayout(dataIndex);\n    return {\n      cx: layout.cx,\n      cy: layout.cy,\n      r0: layout.r0,\n      r: layout.r,\n      startAngle: layout.startAngle,\n      endAngle: layout.endAngle\n    };\n  }\n};\n\nfunction updateStyle(el, data, dataIndex, itemModel, layout, seriesModel, isHorizontal, isPolar) {\n  var color = data.getItemVisual(dataIndex, 'color');\n  var opacity = data.getItemVisual(dataIndex, 'opacity');\n  var itemStyleModel = itemModel.getModel('itemStyle.normal');\n  var hoverStyle = itemModel.getModel('itemStyle.emphasis').getBarItemStyle();\n\n  if (!isPolar) {\n    el.setShape('r', itemStyleModel.get('barBorderRadius') || 0);\n  }\n\n  el.useStyle(zrUtil.defaults({\n    fill: color,\n    opacity: opacity\n  }, itemStyleModel.getBarItemStyle()));\n  var cursorStyle = itemModel.getShallow('cursor');\n  cursorStyle && el.attr('cursor', cursorStyle);\n  var labelPositionOutside = isHorizontal ? layout.height > 0 ? 'bottom' : 'top' : layout.width > 0 ? 'left' : 'right';\n\n  if (!isPolar) {\n    setLabel(el.style, hoverStyle, itemModel, color, seriesModel, dataIndex, labelPositionOutside);\n  }\n\n  graphic.setHoverStyle(el, hoverStyle);\n} // In case width or height are too small.\n\n\nfunction getLineWidth(itemModel, rawLayout) {\n  var lineWidth = itemModel.get(BAR_BORDER_WIDTH_QUERY) || 0;\n  return Math.min(lineWidth, Math.abs(rawLayout.width), Math.abs(rawLayout.height));\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/bar/BarView.js\n// module id = 1678\n// module chunks = 2 3","var SeriesModel = require(\"../../model/Series\");\n\nvar createListFromArray = require(\"../helper/createListFromArray\");\n\nvar _default = SeriesModel.extend({\n  type: 'series.__base_bar__',\n  getInitialData: function (option, ecModel) {\n    return createListFromArray(option.data, this, ecModel);\n  },\n  getMarkerPosition: function (value) {\n    var coordSys = this.coordinateSystem;\n\n    if (coordSys) {\n      // PENDING if clamp ?\n      var pt = coordSys.dataToPoint(value, true);\n      var data = this.getData();\n      var offset = data.getLayout('offset');\n      var size = data.getLayout('size');\n      var offsetIndex = coordSys.getBaseAxis().isHorizontal() ? 0 : 1;\n      pt[offsetIndex] += offset + size / 2;\n      return pt;\n    }\n\n    return [NaN, NaN];\n  },\n  defaultOption: {\n    zlevel: 0,\n    // 一级层叠\n    z: 2,\n    // 二级层叠\n    coordinateSystem: 'cartesian2d',\n    legendHoverLink: true,\n    // stack: null\n    // Cartesian coordinate system\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // 最小高度改为0\n    barMinHeight: 0,\n    // 最小角度为0，仅对极坐标系下的柱状图有效\n    barMinAngle: 0,\n    // cursor: null,\n    // barMaxWidth: null,\n    // 默认自适应\n    // barWidth: null,\n    // 柱间距离，默认为柱形宽度的30%，可设固定值\n    // barGap: '30%',\n    // 类目间柱形距离，默认为类目间距的20%，可设固定值\n    // barCategoryGap: '20%',\n    // label: {\n    //     normal: {\n    //         show: false\n    //     }\n    // },\n    itemStyle: {// normal: {\n      // color: '各异'\n      // },\n      // emphasis: {}\n    }\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/bar/BaseBarSeries.js\n// module id = 1679\n// module chunks = 2 3","var makeStyleMapper = require(\"../../model/mixin/makeStyleMapper\");\n\nvar getBarItemStyle = makeStyleMapper([['fill', 'color'], ['stroke', 'borderColor'], ['lineWidth', 'borderWidth'], // Compatitable with 2\n['stroke', 'barBorderColor'], ['lineWidth', 'barBorderWidth'], ['opacity'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor']]);\nvar _default = {\n  getBarItemStyle: function (excludes) {\n    var style = getBarItemStyle(this, excludes);\n\n    if (this.getBorderLineDash) {\n      var lineDash = this.getBorderLineDash();\n      lineDash && (style.lineDash = lineDash);\n    }\n\n    return style;\n  }\n};\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/bar/barItemStyle.js\n// module id = 1680\n// module chunks = 2 3","var graphic = require(\"../../util/graphic\");\n\nfunction setLabel(normalStyle, hoverStyle, itemModel, color, seriesModel, dataIndex, labelPositionOutside) {\n  var labelModel = itemModel.getModel('label.normal');\n  var hoverLabelModel = itemModel.getModel('label.emphasis');\n  graphic.setLabelStyle(normalStyle, hoverStyle, labelModel, hoverLabelModel, {\n    labelFetcher: seriesModel,\n    labelDataIndex: dataIndex,\n    defaultText: seriesModel.getRawValue(dataIndex),\n    isRectText: true,\n    autoColor: color\n  });\n  fixPosition(normalStyle);\n  fixPosition(hoverStyle);\n}\n\nfunction fixPosition(style, labelPositionOutside) {\n  if (style.textPosition === 'outside') {\n    style.textPosition = labelPositionOutside;\n  }\n}\n\nexports.setLabel = setLabel;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/bar/helper.js\n// module id = 1681\n// module chunks = 2 3","var graphic = require(\"../../util/graphic\");\n\nvar SymbolClz = require(\"./Symbol\");\n\n/**\n * @module echarts/chart/helper/SymbolDraw\n */\n\n/**\n * @constructor\n * @alias module:echarts/chart/helper/SymbolDraw\n * @param {module:zrender/graphic/Group} [symbolCtor]\n */\nfunction SymbolDraw(symbolCtor) {\n  this.group = new graphic.Group();\n  this._symbolCtor = symbolCtor || SymbolClz;\n}\n\nvar symbolDrawProto = SymbolDraw.prototype;\n\nfunction symbolNeedsDraw(data, idx, isIgnore) {\n  var point = data.getItemLayout(idx); // Is an object\n  // if (point && point.hasOwnProperty('point')) {\n  //     point = point.point;\n  // }\n\n  return point && !isNaN(point[0]) && !isNaN(point[1]) && !(isIgnore && isIgnore(idx)) && data.getItemVisual(idx, 'symbol') !== 'none';\n}\n/**\n * Update symbols draw by new data\n * @param {module:echarts/data/List} data\n * @param {Array.<boolean>} [isIgnore]\n */\n\n\nsymbolDrawProto.updateData = function (data, isIgnore) {\n  var group = this.group;\n  var seriesModel = data.hostModel;\n  var oldData = this._data;\n  var SymbolCtor = this._symbolCtor;\n  var seriesScope = {\n    itemStyle: seriesModel.getModel('itemStyle.normal').getItemStyle(['color']),\n    hoverItemStyle: seriesModel.getModel('itemStyle.emphasis').getItemStyle(),\n    symbolRotate: seriesModel.get('symbolRotate'),\n    symbolOffset: seriesModel.get('symbolOffset'),\n    hoverAnimation: seriesModel.get('hoverAnimation'),\n    labelModel: seriesModel.getModel('label.normal'),\n    hoverLabelModel: seriesModel.getModel('label.emphasis'),\n    cursorStyle: seriesModel.get('cursor')\n  };\n  data.diff(oldData).add(function (newIdx) {\n    var point = data.getItemLayout(newIdx);\n\n    if (symbolNeedsDraw(data, newIdx, isIgnore)) {\n      var symbolEl = new SymbolCtor(data, newIdx, seriesScope);\n      symbolEl.attr('position', point);\n      data.setItemGraphicEl(newIdx, symbolEl);\n      group.add(symbolEl);\n    }\n  }).update(function (newIdx, oldIdx) {\n    var symbolEl = oldData.getItemGraphicEl(oldIdx);\n    var point = data.getItemLayout(newIdx);\n\n    if (!symbolNeedsDraw(data, newIdx, isIgnore)) {\n      group.remove(symbolEl);\n      return;\n    }\n\n    if (!symbolEl) {\n      symbolEl = new SymbolCtor(data, newIdx);\n      symbolEl.attr('position', point);\n    } else {\n      symbolEl.updateData(data, newIdx, seriesScope);\n      graphic.updateProps(symbolEl, {\n        position: point\n      }, seriesModel);\n    } // Add back\n\n\n    group.add(symbolEl);\n    data.setItemGraphicEl(newIdx, symbolEl);\n  }).remove(function (oldIdx) {\n    var el = oldData.getItemGraphicEl(oldIdx);\n    el && el.fadeOut(function () {\n      group.remove(el);\n    });\n  }).execute();\n  this._data = data;\n};\n\nsymbolDrawProto.updateLayout = function () {\n  var data = this._data;\n\n  if (data) {\n    // Not use animation\n    data.eachItemGraphicEl(function (el, idx) {\n      var point = data.getItemLayout(idx);\n      el.attr('position', point);\n    });\n  }\n};\n\nsymbolDrawProto.remove = function (enableAnimation) {\n  var group = this.group;\n  var data = this._data;\n\n  if (data) {\n    if (enableAnimation) {\n      data.eachItemGraphicEl(function (el) {\n        el.fadeOut(function () {\n          group.remove(el);\n        });\n      });\n    } else {\n      group.removeAll();\n    }\n  }\n};\n\nvar _default = SymbolDraw;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/helper/SymbolDraw.js\n// module id = 1682\n// module chunks = 2 3","var _model = require(\"../../util/model\");\n\nvar otherDimToDataDim = _model.otherDimToDataDim;\n\n/**\n * @module echarts/chart/helper/Symbol\n */\nfunction findLabelValueDim(data) {\n  var valueDim;\n  var labelDims = otherDimToDataDim(data, 'label');\n\n  if (labelDims.length) {\n    valueDim = labelDims[0];\n  } else {\n    // Get last value dim\n    var dimensions = data.dimensions.slice();\n    var dataType;\n\n    while (dimensions.length && (valueDim = dimensions.pop(), dataType = data.getDimensionInfo(valueDim).type, dataType === 'ordinal' || dataType === 'time')) {} // jshint ignore:line\n\n  }\n\n  return valueDim;\n}\n\nexports.findLabelValueDim = findLabelValueDim;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/helper/labelHelper.js\n// module id = 1683\n// module chunks = 2 3","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nrequire(\"./line/LineSeries\");\n\nrequire(\"./line/LineView\");\n\nvar visualSymbol = require(\"../visual/symbol\");\n\nvar layoutPoints = require(\"../layout/points\");\n\nvar dataSample = require(\"../processor/dataSample\");\n\nrequire(\"../component/gridSimple\");\n\n// In case developer forget to include grid component\necharts.registerVisual(zrUtil.curry(visualSymbol, 'line', 'circle', 'line'));\necharts.registerLayout(zrUtil.curry(layoutPoints, 'line')); // Down sample after filter\n\necharts.registerProcessor(echarts.PRIORITY.PROCESSOR.STATISTIC, zrUtil.curry(dataSample, 'line'));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/line.js\n// module id = 1684\n// module chunks = 2 3","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar createListFromArray = require(\"../helper/createListFromArray\");\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar _default = SeriesModel.extend({\n  type: 'series.line',\n  dependencies: ['grid', 'polar'],\n  getInitialData: function (option, ecModel) {\n    return createListFromArray(option.data, this, ecModel);\n  },\n  defaultOption: {\n    zlevel: 0,\n    // 一级层叠\n    z: 2,\n    // 二级层叠\n    coordinateSystem: 'cartesian2d',\n    legendHoverLink: true,\n    hoverAnimation: true,\n    // stack: null\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // polarIndex: 0,\n    // If clip the overflow value\n    clipOverflow: true,\n    // cursor: null,\n    label: {\n      normal: {\n        position: 'top'\n      }\n    },\n    // itemStyle: {\n    //     normal: {},\n    //     emphasis: {}\n    // },\n    lineStyle: {\n      normal: {\n        width: 2,\n        type: 'solid'\n      }\n    },\n    // areaStyle: {},\n    // false, 'start', 'end', 'middle'\n    step: false,\n    // Disabled if step is true\n    smooth: false,\n    smoothMonotone: null,\n    // 拐点图形类型\n    symbol: 'emptyCircle',\n    // 拐点图形大小\n    symbolSize: 4,\n    // 拐点图形旋转控制\n    symbolRotate: null,\n    // 是否显示 symbol, 只有在 tooltip hover 的时候显示\n    showSymbol: true,\n    // 标志图形默认只有主轴显示（随主轴标签间隔隐藏策略）\n    showAllSymbol: false,\n    // 是否连接断点\n    connectNulls: false,\n    // 数据过滤，'average', 'max', 'min', 'sum'\n    sampling: 'none',\n    animationEasing: 'linear',\n    // Disable progressive\n    progressive: 0,\n    hoverLayerThreshold: Infinity\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/line/LineSeries.js\n// module id = 1685\n// module chunks = 2 3","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar SymbolDraw = require(\"../helper/SymbolDraw\");\n\nvar SymbolClz = require(\"../helper/Symbol\");\n\nvar lineAnimationDiff = require(\"./lineAnimationDiff\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar _poly = require(\"./poly\");\n\nvar Polyline = _poly.Polyline;\nvar Polygon = _poly.Polygon;\n\nvar ChartView = require(\"../../view/Chart\");\n\n// FIXME step not support polar\nfunction isPointsSame(points1, points2) {\n  if (points1.length !== points2.length) {\n    return;\n  }\n\n  for (var i = 0; i < points1.length; i++) {\n    var p1 = points1[i];\n    var p2 = points2[i];\n\n    if (p1[0] !== p2[0] || p1[1] !== p2[1]) {\n      return;\n    }\n  }\n\n  return true;\n}\n\nfunction getSmooth(smooth) {\n  return typeof smooth === 'number' ? smooth : smooth ? 0.3 : 0;\n}\n\nfunction getAxisExtentWithGap(axis) {\n  var extent = axis.getGlobalExtent();\n\n  if (axis.onBand) {\n    // Remove extra 1px to avoid line miter in clipped edge\n    var halfBandWidth = axis.getBandWidth() / 2 - 1;\n    var dir = extent[1] > extent[0] ? 1 : -1;\n    extent[0] += dir * halfBandWidth;\n    extent[1] -= dir * halfBandWidth;\n  }\n\n  return extent;\n}\n\nfunction sign(val) {\n  return val >= 0 ? 1 : -1;\n}\n/**\n * @param {module:echarts/coord/cartesian/Cartesian2D|module:echarts/coord/polar/Polar} coordSys\n * @param {module:echarts/data/List} data\n * @param {Array.<Array.<number>>} points\n * @private\n */\n\n\nfunction getStackedOnPoints(coordSys, data) {\n  var baseAxis = coordSys.getBaseAxis();\n  var valueAxis = coordSys.getOtherAxis(baseAxis);\n  var valueStart = 0;\n\n  if (!baseAxis.onZero) {\n    var extent = valueAxis.scale.getExtent();\n\n    if (extent[0] > 0) {\n      // Both positive\n      valueStart = extent[0];\n    } else if (extent[1] < 0) {\n      // Both negative\n      valueStart = extent[1];\n    } // If is one positive, and one negative, onZero shall be true\n\n  }\n\n  var valueDim = valueAxis.dim;\n  var baseDataOffset = valueDim === 'x' || valueDim === 'radius' ? 1 : 0;\n  return data.mapArray([valueDim], function (val, idx) {\n    var stackedOnSameSign;\n    var stackedOn = data.stackedOn; // Find first stacked value with same sign\n\n    while (stackedOn && sign(stackedOn.get(valueDim, idx)) === sign(val)) {\n      stackedOnSameSign = stackedOn;\n      break;\n    }\n\n    var stackedData = [];\n    stackedData[baseDataOffset] = data.get(baseAxis.dim, idx);\n    stackedData[1 - baseDataOffset] = stackedOnSameSign ? stackedOnSameSign.get(valueDim, idx, true) : valueStart;\n    return coordSys.dataToPoint(stackedData);\n  }, true);\n}\n\nfunction createGridClipShape(cartesian, hasAnimation, seriesModel) {\n  var xExtent = getAxisExtentWithGap(cartesian.getAxis('x'));\n  var yExtent = getAxisExtentWithGap(cartesian.getAxis('y'));\n  var isHorizontal = cartesian.getBaseAxis().isHorizontal();\n  var x = Math.min(xExtent[0], xExtent[1]);\n  var y = Math.min(yExtent[0], yExtent[1]);\n  var width = Math.max(xExtent[0], xExtent[1]) - x;\n  var height = Math.max(yExtent[0], yExtent[1]) - y;\n  var lineWidth = seriesModel.get('lineStyle.normal.width') || 2; // Expand clip shape to avoid clipping when line value exceeds axis\n\n  var expandSize = seriesModel.get('clipOverflow') ? lineWidth / 2 : Math.max(width, height);\n\n  if (isHorizontal) {\n    y -= expandSize;\n    height += expandSize * 2;\n  } else {\n    x -= expandSize;\n    width += expandSize * 2;\n  }\n\n  var clipPath = new graphic.Rect({\n    shape: {\n      x: x,\n      y: y,\n      width: width,\n      height: height\n    }\n  });\n\n  if (hasAnimation) {\n    clipPath.shape[isHorizontal ? 'width' : 'height'] = 0;\n    graphic.initProps(clipPath, {\n      shape: {\n        width: width,\n        height: height\n      }\n    }, seriesModel);\n  }\n\n  return clipPath;\n}\n\nfunction createPolarClipShape(polar, hasAnimation, seriesModel) {\n  var angleAxis = polar.getAngleAxis();\n  var radiusAxis = polar.getRadiusAxis();\n  var radiusExtent = radiusAxis.getExtent();\n  var angleExtent = angleAxis.getExtent();\n  var RADIAN = Math.PI / 180;\n  var clipPath = new graphic.Sector({\n    shape: {\n      cx: polar.cx,\n      cy: polar.cy,\n      r0: radiusExtent[0],\n      r: radiusExtent[1],\n      startAngle: -angleExtent[0] * RADIAN,\n      endAngle: -angleExtent[1] * RADIAN,\n      clockwise: angleAxis.inverse\n    }\n  });\n\n  if (hasAnimation) {\n    clipPath.shape.endAngle = -angleExtent[0] * RADIAN;\n    graphic.initProps(clipPath, {\n      shape: {\n        endAngle: -angleExtent[1] * RADIAN\n      }\n    }, seriesModel);\n  }\n\n  return clipPath;\n}\n\nfunction createClipShape(coordSys, hasAnimation, seriesModel) {\n  return coordSys.type === 'polar' ? createPolarClipShape(coordSys, hasAnimation, seriesModel) : createGridClipShape(coordSys, hasAnimation, seriesModel);\n}\n\nfunction turnPointsIntoStep(points, coordSys, stepTurnAt) {\n  var baseAxis = coordSys.getBaseAxis();\n  var baseIndex = baseAxis.dim === 'x' || baseAxis.dim === 'radius' ? 0 : 1;\n  var stepPoints = [];\n\n  for (var i = 0; i < points.length - 1; i++) {\n    var nextPt = points[i + 1];\n    var pt = points[i];\n    stepPoints.push(pt);\n    var stepPt = [];\n\n    switch (stepTurnAt) {\n      case 'end':\n        stepPt[baseIndex] = nextPt[baseIndex];\n        stepPt[1 - baseIndex] = pt[1 - baseIndex]; // default is start\n\n        stepPoints.push(stepPt);\n        break;\n\n      case 'middle':\n        // default is start\n        var middle = (pt[baseIndex] + nextPt[baseIndex]) / 2;\n        var stepPt2 = [];\n        stepPt[baseIndex] = stepPt2[baseIndex] = middle;\n        stepPt[1 - baseIndex] = pt[1 - baseIndex];\n        stepPt2[1 - baseIndex] = nextPt[1 - baseIndex];\n        stepPoints.push(stepPt);\n        stepPoints.push(stepPt2);\n        break;\n\n      default:\n        stepPt[baseIndex] = pt[baseIndex];\n        stepPt[1 - baseIndex] = nextPt[1 - baseIndex]; // default is start\n\n        stepPoints.push(stepPt);\n    }\n  } // Last points\n\n\n  points[i] && stepPoints.push(points[i]);\n  return stepPoints;\n}\n\nfunction getVisualGradient(data, coordSys) {\n  var visualMetaList = data.getVisual('visualMeta');\n\n  if (!visualMetaList || !visualMetaList.length || !data.count()) {\n    // When data.count() is 0, gradient range can not be calculated.\n    return;\n  }\n\n  var visualMeta;\n\n  for (var i = visualMetaList.length - 1; i >= 0; i--) {\n    // Can only be x or y\n    if (visualMetaList[i].dimension < 2) {\n      visualMeta = visualMetaList[i];\n      break;\n    }\n  }\n\n  if (!visualMeta || coordSys.type !== 'cartesian2d') {\n    return;\n  } // If the area to be rendered is bigger than area defined by LinearGradient,\n  // the canvas spec prescribes that the color of the first stop and the last\n  // stop should be used. But if two stops are added at offset 0, in effect\n  // browsers use the color of the second stop to render area outside\n  // LinearGradient. So we can only infinitesimally extend area defined in\n  // LinearGradient to render `outerColors`.\n\n\n  var dimension = visualMeta.dimension;\n  var dimName = data.dimensions[dimension];\n  var axis = coordSys.getAxis(dimName); // dataToCoor mapping may not be linear, but must be monotonic.\n\n  var colorStops = zrUtil.map(visualMeta.stops, function (stop) {\n    return {\n      coord: axis.toGlobalCoord(axis.dataToCoord(stop.value)),\n      color: stop.color\n    };\n  });\n  var stopLen = colorStops.length;\n  var outerColors = visualMeta.outerColors.slice();\n\n  if (stopLen && colorStops[0].coord > colorStops[stopLen - 1].coord) {\n    colorStops.reverse();\n    outerColors.reverse();\n  }\n\n  var tinyExtent = 10; // Arbitrary value: 10px\n\n  var minCoord = colorStops[0].coord - tinyExtent;\n  var maxCoord = colorStops[stopLen - 1].coord + tinyExtent;\n  var coordSpan = maxCoord - minCoord;\n\n  if (coordSpan < 1e-3) {\n    return 'transparent';\n  }\n\n  zrUtil.each(colorStops, function (stop) {\n    stop.offset = (stop.coord - minCoord) / coordSpan;\n  });\n  colorStops.push({\n    offset: stopLen ? colorStops[stopLen - 1].offset : 0.5,\n    color: outerColors[1] || 'transparent'\n  });\n  colorStops.unshift({\n    // notice colorStops.length have been changed.\n    offset: stopLen ? colorStops[0].offset : 0.5,\n    color: outerColors[0] || 'transparent'\n  }); // zrUtil.each(colorStops, function (colorStop) {\n  //     // Make sure each offset has rounded px to avoid not sharp edge\n  //     colorStop.offset = (Math.round(colorStop.offset * (end - start) + start) - start) / (end - start);\n  // });\n\n  var gradient = new graphic.LinearGradient(0, 0, 0, 0, colorStops, true);\n  gradient[dimName] = minCoord;\n  gradient[dimName + '2'] = maxCoord;\n  return gradient;\n}\n\nvar _default = ChartView.extend({\n  type: 'line',\n  init: function () {\n    var lineGroup = new graphic.Group();\n    var symbolDraw = new SymbolDraw();\n    this.group.add(symbolDraw.group);\n    this._symbolDraw = symbolDraw;\n    this._lineGroup = lineGroup;\n  },\n  render: function (seriesModel, ecModel, api) {\n    var coordSys = seriesModel.coordinateSystem;\n    var group = this.group;\n    var data = seriesModel.getData();\n    var lineStyleModel = seriesModel.getModel('lineStyle.normal');\n    var areaStyleModel = seriesModel.getModel('areaStyle.normal');\n    var points = data.mapArray(data.getItemLayout, true);\n    var isCoordSysPolar = coordSys.type === 'polar';\n    var prevCoordSys = this._coordSys;\n    var symbolDraw = this._symbolDraw;\n    var polyline = this._polyline;\n    var polygon = this._polygon;\n    var lineGroup = this._lineGroup;\n    var hasAnimation = seriesModel.get('animation');\n    var isAreaChart = !areaStyleModel.isEmpty();\n    var stackedOnPoints = getStackedOnPoints(coordSys, data);\n    var showSymbol = seriesModel.get('showSymbol');\n\n    var isSymbolIgnore = showSymbol && !isCoordSysPolar && !seriesModel.get('showAllSymbol') && this._getSymbolIgnoreFunc(data, coordSys); // Remove temporary symbols\n\n\n    var oldData = this._data;\n    oldData && oldData.eachItemGraphicEl(function (el, idx) {\n      if (el.__temp) {\n        group.remove(el);\n        oldData.setItemGraphicEl(idx, null);\n      }\n    }); // Remove previous created symbols if showSymbol changed to false\n\n    if (!showSymbol) {\n      symbolDraw.remove();\n    }\n\n    group.add(lineGroup); // FIXME step not support polar\n\n    var step = !isCoordSysPolar && seriesModel.get('step'); // Initialization animation or coordinate system changed\n\n    if (!(polyline && prevCoordSys.type === coordSys.type && step === this._step)) {\n      showSymbol && symbolDraw.updateData(data, isSymbolIgnore);\n\n      if (step) {\n        // TODO If stacked series is not step\n        points = turnPointsIntoStep(points, coordSys, step);\n        stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n      }\n\n      polyline = this._newPolyline(points, coordSys, hasAnimation);\n\n      if (isAreaChart) {\n        polygon = this._newPolygon(points, stackedOnPoints, coordSys, hasAnimation);\n      }\n\n      lineGroup.setClipPath(createClipShape(coordSys, true, seriesModel));\n    } else {\n      if (isAreaChart && !polygon) {\n        // If areaStyle is added\n        polygon = this._newPolygon(points, stackedOnPoints, coordSys, hasAnimation);\n      } else if (polygon && !isAreaChart) {\n        // If areaStyle is removed\n        lineGroup.remove(polygon);\n        polygon = this._polygon = null;\n      } // Update clipPath\n\n\n      lineGroup.setClipPath(createClipShape(coordSys, false, seriesModel)); // Always update, or it is wrong in the case turning on legend\n      // because points are not changed\n\n      showSymbol && symbolDraw.updateData(data, isSymbolIgnore); // Stop symbol animation and sync with line points\n      // FIXME performance?\n\n      data.eachItemGraphicEl(function (el) {\n        el.stopAnimation(true);\n      }); // In the case data zoom triggerred refreshing frequently\n      // Data may not change if line has a category axis. So it should animate nothing\n\n      if (!isPointsSame(this._stackedOnPoints, stackedOnPoints) || !isPointsSame(this._points, points)) {\n        if (hasAnimation) {\n          this._updateAnimation(data, stackedOnPoints, coordSys, api, step);\n        } else {\n          // Not do it in update with animation\n          if (step) {\n            // TODO If stacked series is not step\n            points = turnPointsIntoStep(points, coordSys, step);\n            stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n          }\n\n          polyline.setShape({\n            points: points\n          });\n          polygon && polygon.setShape({\n            points: points,\n            stackedOnPoints: stackedOnPoints\n          });\n        }\n      }\n    }\n\n    var visualColor = getVisualGradient(data, coordSys) || data.getVisual('color');\n    polyline.useStyle(zrUtil.defaults( // Use color in lineStyle first\n    lineStyleModel.getLineStyle(), {\n      fill: 'none',\n      stroke: visualColor,\n      lineJoin: 'bevel'\n    }));\n    var smooth = seriesModel.get('smooth');\n    smooth = getSmooth(seriesModel.get('smooth'));\n    polyline.setShape({\n      smooth: smooth,\n      smoothMonotone: seriesModel.get('smoothMonotone'),\n      connectNulls: seriesModel.get('connectNulls')\n    });\n\n    if (polygon) {\n      var stackedOn = data.stackedOn;\n      var stackedOnSmooth = 0;\n      polygon.useStyle(zrUtil.defaults(areaStyleModel.getAreaStyle(), {\n        fill: visualColor,\n        opacity: 0.7,\n        lineJoin: 'bevel'\n      }));\n\n      if (stackedOn) {\n        var stackedOnSeries = stackedOn.hostModel;\n        stackedOnSmooth = getSmooth(stackedOnSeries.get('smooth'));\n      }\n\n      polygon.setShape({\n        smooth: smooth,\n        stackedOnSmooth: stackedOnSmooth,\n        smoothMonotone: seriesModel.get('smoothMonotone'),\n        connectNulls: seriesModel.get('connectNulls')\n      });\n    }\n\n    this._data = data; // Save the coordinate system for transition animation when data changed\n\n    this._coordSys = coordSys;\n    this._stackedOnPoints = stackedOnPoints;\n    this._points = points;\n    this._step = step;\n  },\n  dispose: function () {},\n  highlight: function (seriesModel, ecModel, api, payload) {\n    var data = seriesModel.getData();\n    var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n    if (!(dataIndex instanceof Array) && dataIndex != null && dataIndex >= 0) {\n      var symbol = data.getItemGraphicEl(dataIndex);\n\n      if (!symbol) {\n        // Create a temporary symbol if it is not exists\n        var pt = data.getItemLayout(dataIndex);\n\n        if (!pt) {\n          // Null data\n          return;\n        }\n\n        symbol = new SymbolClz(data, dataIndex);\n        symbol.position = pt;\n        symbol.setZ(seriesModel.get('zlevel'), seriesModel.get('z'));\n        symbol.ignore = isNaN(pt[0]) || isNaN(pt[1]);\n        symbol.__temp = true;\n        data.setItemGraphicEl(dataIndex, symbol); // Stop scale animation\n\n        symbol.stopSymbolAnimation(true);\n        this.group.add(symbol);\n      }\n\n      symbol.highlight();\n    } else {\n      // Highlight whole series\n      ChartView.prototype.highlight.call(this, seriesModel, ecModel, api, payload);\n    }\n  },\n  downplay: function (seriesModel, ecModel, api, payload) {\n    var data = seriesModel.getData();\n    var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n    if (dataIndex != null && dataIndex >= 0) {\n      var symbol = data.getItemGraphicEl(dataIndex);\n\n      if (symbol) {\n        if (symbol.__temp) {\n          data.setItemGraphicEl(dataIndex, null);\n          this.group.remove(symbol);\n        } else {\n          symbol.downplay();\n        }\n      }\n    } else {\n      // FIXME\n      // can not downplay completely.\n      // Downplay whole series\n      ChartView.prototype.downplay.call(this, seriesModel, ecModel, api, payload);\n    }\n  },\n\n  /**\n   * @param {module:zrender/container/Group} group\n   * @param {Array.<Array.<number>>} points\n   * @private\n   */\n  _newPolyline: function (points) {\n    var polyline = this._polyline; // Remove previous created polyline\n\n    if (polyline) {\n      this._lineGroup.remove(polyline);\n    }\n\n    polyline = new Polyline({\n      shape: {\n        points: points\n      },\n      silent: true,\n      z2: 10\n    });\n\n    this._lineGroup.add(polyline);\n\n    this._polyline = polyline;\n    return polyline;\n  },\n\n  /**\n   * @param {module:zrender/container/Group} group\n   * @param {Array.<Array.<number>>} stackedOnPoints\n   * @param {Array.<Array.<number>>} points\n   * @private\n   */\n  _newPolygon: function (points, stackedOnPoints) {\n    var polygon = this._polygon; // Remove previous created polygon\n\n    if (polygon) {\n      this._lineGroup.remove(polygon);\n    }\n\n    polygon = new Polygon({\n      shape: {\n        points: points,\n        stackedOnPoints: stackedOnPoints\n      },\n      silent: true\n    });\n\n    this._lineGroup.add(polygon);\n\n    this._polygon = polygon;\n    return polygon;\n  },\n\n  /**\n   * @private\n   */\n  _getSymbolIgnoreFunc: function (data, coordSys) {\n    var categoryAxis = coordSys.getAxesByScale('ordinal')[0]; // `getLabelInterval` is provided by echarts/component/axis\n\n    if (categoryAxis && categoryAxis.isLabelIgnored) {\n      return zrUtil.bind(categoryAxis.isLabelIgnored, categoryAxis);\n    }\n  },\n\n  /**\n   * @private\n   */\n  // FIXME Two value axis\n  _updateAnimation: function (data, stackedOnPoints, coordSys, api, step) {\n    var polyline = this._polyline;\n    var polygon = this._polygon;\n    var seriesModel = data.hostModel;\n    var diff = lineAnimationDiff(this._data, data, this._stackedOnPoints, stackedOnPoints, this._coordSys, coordSys);\n    var current = diff.current;\n    var stackedOnCurrent = diff.stackedOnCurrent;\n    var next = diff.next;\n    var stackedOnNext = diff.stackedOnNext;\n\n    if (step) {\n      // TODO If stacked series is not step\n      current = turnPointsIntoStep(diff.current, coordSys, step);\n      stackedOnCurrent = turnPointsIntoStep(diff.stackedOnCurrent, coordSys, step);\n      next = turnPointsIntoStep(diff.next, coordSys, step);\n      stackedOnNext = turnPointsIntoStep(diff.stackedOnNext, coordSys, step);\n    } // `diff.current` is subset of `current` (which should be ensured by\n    // turnPointsIntoStep), so points in `__points` can be updated when\n    // points in `current` are update during animation.\n\n\n    polyline.shape.__points = diff.current;\n    polyline.shape.points = current;\n    graphic.updateProps(polyline, {\n      shape: {\n        points: next\n      }\n    }, seriesModel);\n\n    if (polygon) {\n      polygon.setShape({\n        points: current,\n        stackedOnPoints: stackedOnCurrent\n      });\n      graphic.updateProps(polygon, {\n        shape: {\n          points: next,\n          stackedOnPoints: stackedOnNext\n        }\n      }, seriesModel);\n    }\n\n    var updatedDataInfo = [];\n    var diffStatus = diff.status;\n\n    for (var i = 0; i < diffStatus.length; i++) {\n      var cmd = diffStatus[i].cmd;\n\n      if (cmd === '=') {\n        var el = data.getItemGraphicEl(diffStatus[i].idx1);\n\n        if (el) {\n          updatedDataInfo.push({\n            el: el,\n            ptIdx: i // Index of points\n\n          });\n        }\n      }\n    }\n\n    if (polyline.animators && polyline.animators.length) {\n      polyline.animators[0].during(function () {\n        for (var i = 0; i < updatedDataInfo.length; i++) {\n          var el = updatedDataInfo[i].el;\n          el.attr('position', polyline.shape.__points[updatedDataInfo[i].ptIdx]);\n        }\n      });\n    }\n  },\n  remove: function (ecModel) {\n    var group = this.group;\n    var oldData = this._data;\n\n    this._lineGroup.removeAll();\n\n    this._symbolDraw.remove(true); // Remove temporary created elements when highlighting\n\n\n    oldData && oldData.eachItemGraphicEl(function (el, idx) {\n      if (el.__temp) {\n        group.remove(el);\n        oldData.setItemGraphicEl(idx, null);\n      }\n    });\n    this._polyline = this._polygon = this._coordSys = this._points = this._stackedOnPoints = this._data = null;\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/line/LineView.js\n// module id = 1686\n// module chunks = 2 3","// var arrayDiff = require('zrender/src/core/arrayDiff');\n// 'zrender/src/core/arrayDiff' has been used before, but it did\n// not do well in performance when roam with fixed dataZoom window.\nfunction sign(val) {\n  return val >= 0 ? 1 : -1;\n}\n\nfunction getStackedOnPoint(coordSys, data, idx) {\n  var baseAxis = coordSys.getBaseAxis();\n  var valueAxis = coordSys.getOtherAxis(baseAxis);\n  var valueStart = baseAxis.onZero ? 0 : valueAxis.scale.getExtent()[0];\n  var valueDim = valueAxis.dim;\n  var baseDataOffset = valueDim === 'x' || valueDim === 'radius' ? 1 : 0;\n  var stackedOnSameSign;\n  var stackedOn = data.stackedOn;\n  var val = data.get(valueDim, idx); // Find first stacked value with same sign\n\n  while (stackedOn && sign(stackedOn.get(valueDim, idx)) === sign(val)) {\n    stackedOnSameSign = stackedOn;\n    break;\n  }\n\n  var stackedData = [];\n  stackedData[baseDataOffset] = data.get(baseAxis.dim, idx);\n  stackedData[1 - baseDataOffset] = stackedOnSameSign ? stackedOnSameSign.get(valueDim, idx, true) : valueStart;\n  return coordSys.dataToPoint(stackedData);\n} // function convertToIntId(newIdList, oldIdList) {\n//     // Generate int id instead of string id.\n//     // Compare string maybe slow in score function of arrDiff\n//     // Assume id in idList are all unique\n//     var idIndicesMap = {};\n//     var idx = 0;\n//     for (var i = 0; i < newIdList.length; i++) {\n//         idIndicesMap[newIdList[i]] = idx;\n//         newIdList[i] = idx++;\n//     }\n//     for (var i = 0; i < oldIdList.length; i++) {\n//         var oldId = oldIdList[i];\n//         // Same with newIdList\n//         if (idIndicesMap[oldId]) {\n//             oldIdList[i] = idIndicesMap[oldId];\n//         }\n//         else {\n//             oldIdList[i] = idx++;\n//         }\n//     }\n// }\n\n\nfunction diffData(oldData, newData) {\n  var diffResult = [];\n  newData.diff(oldData).add(function (idx) {\n    diffResult.push({\n      cmd: '+',\n      idx: idx\n    });\n  }).update(function (newIdx, oldIdx) {\n    diffResult.push({\n      cmd: '=',\n      idx: oldIdx,\n      idx1: newIdx\n    });\n  }).remove(function (idx) {\n    diffResult.push({\n      cmd: '-',\n      idx: idx\n    });\n  }).execute();\n  return diffResult;\n}\n\nfunction _default(oldData, newData, oldStackedOnPoints, newStackedOnPoints, oldCoordSys, newCoordSys) {\n  var diff = diffData(oldData, newData); // var newIdList = newData.mapArray(newData.getId);\n  // var oldIdList = oldData.mapArray(oldData.getId);\n  // convertToIntId(newIdList, oldIdList);\n  // // FIXME One data ?\n  // diff = arrayDiff(oldIdList, newIdList);\n\n  var currPoints = [];\n  var nextPoints = []; // Points for stacking base line\n\n  var currStackedPoints = [];\n  var nextStackedPoints = [];\n  var status = [];\n  var sortedIndices = [];\n  var rawIndices = [];\n  var dims = newCoordSys.dimensions;\n\n  for (var i = 0; i < diff.length; i++) {\n    var diffItem = diff[i];\n    var pointAdded = true; // FIXME, animation is not so perfect when dataZoom window moves fast\n    // Which is in case remvoing or add more than one data in the tail or head\n\n    switch (diffItem.cmd) {\n      case '=':\n        var currentPt = oldData.getItemLayout(diffItem.idx);\n        var nextPt = newData.getItemLayout(diffItem.idx1); // If previous data is NaN, use next point directly\n\n        if (isNaN(currentPt[0]) || isNaN(currentPt[1])) {\n          currentPt = nextPt.slice();\n        }\n\n        currPoints.push(currentPt);\n        nextPoints.push(nextPt);\n        currStackedPoints.push(oldStackedOnPoints[diffItem.idx]);\n        nextStackedPoints.push(newStackedOnPoints[diffItem.idx1]);\n        rawIndices.push(newData.getRawIndex(diffItem.idx1));\n        break;\n\n      case '+':\n        var idx = diffItem.idx;\n        currPoints.push(oldCoordSys.dataToPoint([newData.get(dims[0], idx, true), newData.get(dims[1], idx, true)]));\n        nextPoints.push(newData.getItemLayout(idx).slice());\n        currStackedPoints.push(getStackedOnPoint(oldCoordSys, newData, idx));\n        nextStackedPoints.push(newStackedOnPoints[idx]);\n        rawIndices.push(newData.getRawIndex(idx));\n        break;\n\n      case '-':\n        var idx = diffItem.idx;\n        var rawIndex = oldData.getRawIndex(idx); // Data is replaced. In the case of dynamic data queue\n        // FIXME FIXME FIXME\n\n        if (rawIndex !== idx) {\n          currPoints.push(oldData.getItemLayout(idx));\n          nextPoints.push(newCoordSys.dataToPoint([oldData.get(dims[0], idx, true), oldData.get(dims[1], idx, true)]));\n          currStackedPoints.push(oldStackedOnPoints[idx]);\n          nextStackedPoints.push(getStackedOnPoint(newCoordSys, oldData, idx));\n          rawIndices.push(rawIndex);\n        } else {\n          pointAdded = false;\n        }\n\n    } // Original indices\n\n\n    if (pointAdded) {\n      status.push(diffItem);\n      sortedIndices.push(sortedIndices.length);\n    }\n  } // Diff result may be crossed if all items are changed\n  // Sort by data index\n\n\n  sortedIndices.sort(function (a, b) {\n    return rawIndices[a] - rawIndices[b];\n  });\n  var sortedCurrPoints = [];\n  var sortedNextPoints = [];\n  var sortedCurrStackedPoints = [];\n  var sortedNextStackedPoints = [];\n  var sortedStatus = [];\n\n  for (var i = 0; i < sortedIndices.length; i++) {\n    var idx = sortedIndices[i];\n    sortedCurrPoints[i] = currPoints[idx];\n    sortedNextPoints[i] = nextPoints[idx];\n    sortedCurrStackedPoints[i] = currStackedPoints[idx];\n    sortedNextStackedPoints[i] = nextStackedPoints[idx];\n    sortedStatus[i] = status[idx];\n  }\n\n  return {\n    current: sortedCurrPoints,\n    next: sortedNextPoints,\n    stackedOnCurrent: sortedCurrStackedPoints,\n    stackedOnNext: sortedNextStackedPoints,\n    status: sortedStatus\n  };\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/line/lineAnimationDiff.js\n// module id = 1687\n// module chunks = 2 3","var Path = require(\"zrender/lib/graphic/Path\");\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n\nvar fixClipWithShadow = require(\"zrender/lib/graphic/helper/fixClipWithShadow\");\n\n// Poly path support NaN point\nvar vec2Min = vec2.min;\nvar vec2Max = vec2.max;\nvar scaleAndAdd = vec2.scaleAndAdd;\nvar v2Copy = vec2.copy; // Temporary variable\n\nvar v = [];\nvar cp0 = [];\nvar cp1 = [];\n\nfunction isPointNull(p) {\n  return isNaN(p[0]) || isNaN(p[1]);\n}\n\nfunction drawSegment(ctx, points, start, segLen, allLen, dir, smoothMin, smoothMax, smooth, smoothMonotone, connectNulls) {\n  var prevIdx = 0;\n  var idx = start;\n\n  for (var k = 0; k < segLen; k++) {\n    var p = points[idx];\n\n    if (idx >= allLen || idx < 0) {\n      break;\n    }\n\n    if (isPointNull(p)) {\n      if (connectNulls) {\n        idx += dir;\n        continue;\n      }\n\n      break;\n    }\n\n    if (idx === start) {\n      ctx[dir > 0 ? 'moveTo' : 'lineTo'](p[0], p[1]);\n      v2Copy(cp0, p);\n    } else {\n      if (smooth > 0) {\n        var nextIdx = idx + dir;\n        var nextP = points[nextIdx];\n\n        if (connectNulls) {\n          // Find next point not null\n          while (nextP && isPointNull(points[nextIdx])) {\n            nextIdx += dir;\n            nextP = points[nextIdx];\n          }\n        }\n\n        var ratioNextSeg = 0.5;\n        var prevP = points[prevIdx];\n        var nextP = points[nextIdx]; // Last point\n\n        if (!nextP || isPointNull(nextP)) {\n          v2Copy(cp1, p);\n        } else {\n          // If next data is null in not connect case\n          if (isPointNull(nextP) && !connectNulls) {\n            nextP = p;\n          }\n\n          vec2.sub(v, nextP, prevP);\n          var lenPrevSeg;\n          var lenNextSeg;\n\n          if (smoothMonotone === 'x' || smoothMonotone === 'y') {\n            var dim = smoothMonotone === 'x' ? 0 : 1;\n            lenPrevSeg = Math.abs(p[dim] - prevP[dim]);\n            lenNextSeg = Math.abs(p[dim] - nextP[dim]);\n          } else {\n            lenPrevSeg = vec2.dist(p, prevP);\n            lenNextSeg = vec2.dist(p, nextP);\n          } // Use ratio of seg length\n\n\n          ratioNextSeg = lenNextSeg / (lenNextSeg + lenPrevSeg);\n          scaleAndAdd(cp1, p, v, -smooth * (1 - ratioNextSeg));\n        } // Smooth constraint\n\n\n        vec2Min(cp0, cp0, smoothMax);\n        vec2Max(cp0, cp0, smoothMin);\n        vec2Min(cp1, cp1, smoothMax);\n        vec2Max(cp1, cp1, smoothMin);\n        ctx.bezierCurveTo(cp0[0], cp0[1], cp1[0], cp1[1], p[0], p[1]); // cp0 of next segment\n\n        scaleAndAdd(cp0, p, v, smooth * ratioNextSeg);\n      } else {\n        ctx.lineTo(p[0], p[1]);\n      }\n    }\n\n    prevIdx = idx;\n    idx += dir;\n  }\n\n  return k;\n}\n\nfunction getBoundingBox(points, smoothConstraint) {\n  var ptMin = [Infinity, Infinity];\n  var ptMax = [-Infinity, -Infinity];\n\n  if (smoothConstraint) {\n    for (var i = 0; i < points.length; i++) {\n      var pt = points[i];\n\n      if (pt[0] < ptMin[0]) {\n        ptMin[0] = pt[0];\n      }\n\n      if (pt[1] < ptMin[1]) {\n        ptMin[1] = pt[1];\n      }\n\n      if (pt[0] > ptMax[0]) {\n        ptMax[0] = pt[0];\n      }\n\n      if (pt[1] > ptMax[1]) {\n        ptMax[1] = pt[1];\n      }\n    }\n  }\n\n  return {\n    min: smoothConstraint ? ptMin : ptMax,\n    max: smoothConstraint ? ptMax : ptMin\n  };\n}\n\nvar Polyline = Path.extend({\n  type: 'ec-polyline',\n  shape: {\n    points: [],\n    smooth: 0,\n    smoothConstraint: true,\n    smoothMonotone: null,\n    connectNulls: false\n  },\n  style: {\n    fill: null,\n    stroke: '#000'\n  },\n  brush: fixClipWithShadow(Path.prototype.brush),\n  buildPath: function (ctx, shape) {\n    var points = shape.points;\n    var i = 0;\n    var len = points.length;\n    var result = getBoundingBox(points, shape.smoothConstraint);\n\n    if (shape.connectNulls) {\n      // Must remove first and last null values avoid draw error in polygon\n      for (; len > 0; len--) {\n        if (!isPointNull(points[len - 1])) {\n          break;\n        }\n      }\n\n      for (; i < len; i++) {\n        if (!isPointNull(points[i])) {\n          break;\n        }\n      }\n    }\n\n    while (i < len) {\n      i += drawSegment(ctx, points, i, len, len, 1, result.min, result.max, shape.smooth, shape.smoothMonotone, shape.connectNulls) + 1;\n    }\n  }\n});\nvar Polygon = Path.extend({\n  type: 'ec-polygon',\n  shape: {\n    points: [],\n    // Offset between stacked base points and points\n    stackedOnPoints: [],\n    smooth: 0,\n    stackedOnSmooth: 0,\n    smoothConstraint: true,\n    smoothMonotone: null,\n    connectNulls: false\n  },\n  brush: fixClipWithShadow(Path.prototype.brush),\n  buildPath: function (ctx, shape) {\n    var points = shape.points;\n    var stackedOnPoints = shape.stackedOnPoints;\n    var i = 0;\n    var len = points.length;\n    var smoothMonotone = shape.smoothMonotone;\n    var bbox = getBoundingBox(points, shape.smoothConstraint);\n    var stackedOnBBox = getBoundingBox(stackedOnPoints, shape.smoothConstraint);\n\n    if (shape.connectNulls) {\n      // Must remove first and last null values avoid draw error in polygon\n      for (; len > 0; len--) {\n        if (!isPointNull(points[len - 1])) {\n          break;\n        }\n      }\n\n      for (; i < len; i++) {\n        if (!isPointNull(points[i])) {\n          break;\n        }\n      }\n    }\n\n    while (i < len) {\n      var k = drawSegment(ctx, points, i, len, len, 1, bbox.min, bbox.max, shape.smooth, smoothMonotone, shape.connectNulls);\n      drawSegment(ctx, stackedOnPoints, i + k - 1, k, len, -1, stackedOnBBox.min, stackedOnBBox.max, shape.stackedOnSmooth, smoothMonotone, shape.connectNulls);\n      i += k + 1;\n      ctx.closePath();\n    }\n  }\n});\nexports.Polyline = Polyline;\nexports.Polygon = Polygon;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/line/poly.js\n// module id = 1688\n// module chunks = 2 3","require(\"../coord/cartesian/AxisModel\");\n\nrequire(\"./axis/CartesianAxisView\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axis.js\n// module id = 1689\n// module chunks = 2 3","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar axisPointerModelHelper = require(\"./axisPointer/modelHelper\");\n\nvar axisTrigger = require(\"./axisPointer/axisTrigger\");\n\nrequire(\"./axisPointer/AxisPointerModel\");\n\nrequire(\"./axisPointer/AxisPointerView\");\n\nrequire(\"./axisPointer/CartesianAxisPointer\");\n\n// CartesianAxisPointer is not supposed to be required here. But consider\n// echarts.simple.js and online build tooltip, which only require gridSimple,\n// CartesianAxisPointer should be able to required somewhere.\necharts.registerPreprocessor(function (option) {\n  // Always has a global axisPointerModel for default setting.\n  if (option) {\n    (!option.axisPointer || option.axisPointer.length === 0) && (option.axisPointer = {});\n    var link = option.axisPointer.link; // Normalize to array to avoid object mergin. But if link\n    // is not set, remain null/undefined, otherwise it will\n    // override existent link setting.\n\n    if (link && !zrUtil.isArray(link)) {\n      option.axisPointer.link = [link];\n    }\n  }\n}); // This process should proformed after coordinate systems created\n// and series data processed. So put it on statistic processing stage.\n\necharts.registerProcessor(echarts.PRIORITY.PROCESSOR.STATISTIC, function (ecModel, api) {\n  // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n  // allAxesInfo should be updated when setOption performed.\n  ecModel.getComponent('axisPointer').coordSysAxesInfo = axisPointerModelHelper.collect(ecModel, api);\n}); // Broadcast to all views.\n\necharts.registerAction({\n  type: 'updateAxisPointer',\n  event: 'updateAxisPointer',\n  update: ':updateAxisPointer'\n}, axisTrigger);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axisPointer.js\n// module id = 1690\n// module chunks = 2 3","var echarts = require(\"../../echarts\");\n\nvar AxisPointerModel = echarts.extendComponentModel({\n  type: 'axisPointer',\n  coordSysAxesInfo: null,\n  defaultOption: {\n    // 'auto' means that show when triggered by tooltip or handle.\n    show: 'auto',\n    // 'click' | 'mousemove' | 'none'\n    triggerOn: null,\n    // set default in AxisPonterView.js\n    zlevel: 0,\n    z: 50,\n    type: 'line',\n    // axispointer triggered by tootip determine snap automatically,\n    // see `modelHelper`.\n    snap: false,\n    triggerTooltip: true,\n    value: null,\n    status: null,\n    // Init value depends on whether handle is used.\n    // [group0, group1, ...]\n    // Each group can be: {\n    //      mapper: function () {},\n    //      singleTooltip: 'multiple',  // 'multiple' or 'single'\n    //      xAxisId: ...,\n    //      yAxisName: ...,\n    //      angleAxisIndex: ...\n    // }\n    // mapper: can be ignored.\n    //      input: {axisInfo, value}\n    //      output: {axisInfo, value}\n    link: [],\n    // Do not set 'auto' here, otherwise global animation: false\n    // will not effect at this axispointer.\n    animation: null,\n    animationDurationUpdate: 200,\n    lineStyle: {\n      color: '#aaa',\n      width: 1,\n      type: 'solid'\n    },\n    shadowStyle: {\n      color: 'rgba(150,150,150,0.3)'\n    },\n    label: {\n      show: true,\n      formatter: null,\n      // string | Function\n      precision: 'auto',\n      // Or a number like 0, 1, 2 ...\n      margin: 3,\n      color: '#fff',\n      padding: [5, 7, 5, 7],\n      backgroundColor: 'auto',\n      // default: axis line color\n      borderColor: null,\n      borderWidth: 0,\n      shadowBlur: 3,\n      shadowColor: '#aaa' // Considering applicability, common style should\n      // better not have shadowOffset.\n      // shadowOffsetX: 0,\n      // shadowOffsetY: 2\n\n    },\n    handle: {\n      show: false,\n      icon: 'M10.7,11.9v-1.3H9.3v1.3c-4.9,0.3-8.8,4.4-8.8,9.4c0,5,3.9,9.1,8.8,9.4h1.3c4.9-0.3,8.8-4.4,8.8-9.4C19.5,16.3,15.6,12.2,10.7,11.9z M13.3,24.4H6.7v-1.2h6.6z M13.3,22H6.7v-1.2h6.6z M13.3,19.6H6.7v-1.2h6.6z',\n      // jshint ignore:line\n      size: 45,\n      // handle margin is from symbol center to axis, which is stable when circular move.\n      margin: 50,\n      // color: '#1b8bbd'\n      // color: '#2f4554'\n      color: '#333',\n      shadowBlur: 3,\n      shadowColor: '#aaa',\n      shadowOffsetX: 0,\n      shadowOffsetY: 2,\n      // For mobile performance\n      throttle: 40\n    }\n  }\n});\nvar _default = AxisPointerModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axisPointer/AxisPointerModel.js\n// module id = 1691\n// module chunks = 2 3","var echarts = require(\"../../echarts\");\n\nvar globalListener = require(\"./globalListener\");\n\nvar AxisPointerView = echarts.extendComponentView({\n  type: 'axisPointer',\n  render: function (globalAxisPointerModel, ecModel, api) {\n    var globalTooltipModel = ecModel.getComponent('tooltip');\n    var triggerOn = globalAxisPointerModel.get('triggerOn') || globalTooltipModel && globalTooltipModel.get('triggerOn') || 'mousemove|click'; // Register global listener in AxisPointerView to enable\n    // AxisPointerView to be independent to Tooltip.\n\n    globalListener.register('axisPointer', api, function (currTrigger, e, dispatchAction) {\n      // If 'none', it is not controlled by mouse totally.\n      if (triggerOn !== 'none' && (currTrigger === 'leave' || triggerOn.indexOf(currTrigger) >= 0)) {\n        dispatchAction({\n          type: 'updateAxisPointer',\n          currTrigger: currTrigger,\n          x: e && e.offsetX,\n          y: e && e.offsetY\n        });\n      }\n    });\n  },\n\n  /**\n   * @override\n   */\n  remove: function (ecModel, api) {\n    globalListener.unregister(api.getZr(), 'axisPointer');\n    AxisPointerView.superApply(this._model, 'remove', arguments);\n  },\n\n  /**\n   * @override\n   */\n  dispose: function (ecModel, api) {\n    globalListener.unregister('axisPointer', api);\n    AxisPointerView.superApply(this._model, 'dispose', arguments);\n  }\n});\nvar _default = AxisPointerView;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axisPointer/AxisPointerView.js\n// module id = 1692\n// module chunks = 2 3","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar clazzUtil = require(\"../../util/clazz\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar axisPointerModelHelper = require(\"./modelHelper\");\n\nvar eventTool = require(\"zrender/lib/core/event\");\n\nvar throttleUtil = require(\"../../util/throttle\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar get = modelUtil.makeGetter();\nvar clone = zrUtil.clone;\nvar bind = zrUtil.bind;\n/**\n * Base axis pointer class in 2D.\n * Implemenents {module:echarts/component/axis/IAxisPointer}.\n */\n\nfunction BaseAxisPointer() {}\n\nBaseAxisPointer.prototype = {\n  /**\n   * @private\n   */\n  _group: null,\n\n  /**\n   * @private\n   */\n  _lastGraphicKey: null,\n\n  /**\n   * @private\n   */\n  _handle: null,\n\n  /**\n   * @private\n   */\n  _dragging: false,\n\n  /**\n   * @private\n   */\n  _lastValue: null,\n\n  /**\n   * @private\n   */\n  _lastStatus: null,\n\n  /**\n   * @private\n   */\n  _payloadInfo: null,\n\n  /**\n   * In px, arbitrary value. Do not set too small,\n   * no animation is ok for most cases.\n   * @protected\n   */\n  animationThreshold: 15,\n\n  /**\n   * @implement\n   */\n  render: function (axisModel, axisPointerModel, api, forceRender) {\n    var value = axisPointerModel.get('value');\n    var status = axisPointerModel.get('status'); // Bind them to `this`, not in closure, otherwise they will not\n    // be replaced when user calling setOption in not merge mode.\n\n    this._axisModel = axisModel;\n    this._axisPointerModel = axisPointerModel;\n    this._api = api; // Optimize: `render` will be called repeatly during mouse move.\n    // So it is power consuming if performing `render` each time,\n    // especially on mobile device.\n\n    if (!forceRender && this._lastValue === value && this._lastStatus === status) {\n      return;\n    }\n\n    this._lastValue = value;\n    this._lastStatus = status;\n    var group = this._group;\n    var handle = this._handle;\n\n    if (!status || status === 'hide') {\n      // Do not clear here, for animation better.\n      group && group.hide();\n      handle && handle.hide();\n      return;\n    }\n\n    group && group.show();\n    handle && handle.show(); // Otherwise status is 'show'\n\n    var elOption = {};\n    this.makeElOption(elOption, value, axisModel, axisPointerModel, api); // Enable change axis pointer type.\n\n    var graphicKey = elOption.graphicKey;\n\n    if (graphicKey !== this._lastGraphicKey) {\n      this.clear(api);\n    }\n\n    this._lastGraphicKey = graphicKey;\n    var moveAnimation = this._moveAnimation = this.determineAnimation(axisModel, axisPointerModel);\n\n    if (!group) {\n      group = this._group = new graphic.Group();\n      this.createPointerEl(group, elOption, axisModel, axisPointerModel);\n      this.createLabelEl(group, elOption, axisModel, axisPointerModel);\n      api.getZr().add(group);\n    } else {\n      var doUpdateProps = zrUtil.curry(updateProps, axisPointerModel, moveAnimation);\n      this.updatePointerEl(group, elOption, doUpdateProps, axisPointerModel);\n      this.updateLabelEl(group, elOption, doUpdateProps, axisPointerModel);\n    }\n\n    updateMandatoryProps(group, axisPointerModel, true);\n\n    this._renderHandle(value);\n  },\n\n  /**\n   * @implement\n   */\n  remove: function (api) {\n    this.clear(api);\n  },\n\n  /**\n   * @implement\n   */\n  dispose: function (api) {\n    this.clear(api);\n  },\n\n  /**\n   * @protected\n   */\n  determineAnimation: function (axisModel, axisPointerModel) {\n    var animation = axisPointerModel.get('animation');\n    var axis = axisModel.axis;\n    var isCategoryAxis = axis.type === 'category';\n    var useSnap = axisPointerModel.get('snap'); // Value axis without snap always do not snap.\n\n    if (!useSnap && !isCategoryAxis) {\n      return false;\n    }\n\n    if (animation === 'auto' || animation == null) {\n      var animationThreshold = this.animationThreshold;\n\n      if (isCategoryAxis && axis.getBandWidth() > animationThreshold) {\n        return true;\n      } // It is important to auto animation when snap used. Consider if there is\n      // a dataZoom, animation will be disabled when too many points exist, while\n      // it will be enabled for better visual effect when little points exist.\n\n\n      if (useSnap) {\n        var seriesDataCount = axisPointerModelHelper.getAxisInfo(axisModel).seriesDataCount;\n        var axisExtent = axis.getExtent(); // Approximate band width\n\n        return Math.abs(axisExtent[0] - axisExtent[1]) / seriesDataCount > animationThreshold;\n      }\n\n      return false;\n    }\n\n    return animation === true;\n  },\n\n  /**\n   * add {pointer, label, graphicKey} to elOption\n   * @protected\n   */\n  makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {// Shoule be implemenented by sub-class.\n  },\n\n  /**\n   * @protected\n   */\n  createPointerEl: function (group, elOption, axisModel, axisPointerModel) {\n    var pointerOption = elOption.pointer;\n\n    if (pointerOption) {\n      var pointerEl = get(group).pointerEl = new graphic[pointerOption.type](clone(elOption.pointer));\n      group.add(pointerEl);\n    }\n  },\n\n  /**\n   * @protected\n   */\n  createLabelEl: function (group, elOption, axisModel, axisPointerModel) {\n    if (elOption.label) {\n      var labelEl = get(group).labelEl = new graphic.Rect(clone(elOption.label));\n      group.add(labelEl);\n      updateLabelShowHide(labelEl, axisPointerModel);\n    }\n  },\n\n  /**\n   * @protected\n   */\n  updatePointerEl: function (group, elOption, updateProps) {\n    var pointerEl = get(group).pointerEl;\n\n    if (pointerEl) {\n      pointerEl.setStyle(elOption.pointer.style);\n      updateProps(pointerEl, {\n        shape: elOption.pointer.shape\n      });\n    }\n  },\n\n  /**\n   * @protected\n   */\n  updateLabelEl: function (group, elOption, updateProps, axisPointerModel) {\n    var labelEl = get(group).labelEl;\n\n    if (labelEl) {\n      labelEl.setStyle(elOption.label.style);\n      updateProps(labelEl, {\n        // Consider text length change in vertical axis, animation should\n        // be used on shape, otherwise the effect will be weird.\n        shape: elOption.label.shape,\n        position: elOption.label.position\n      });\n      updateLabelShowHide(labelEl, axisPointerModel);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _renderHandle: function (value) {\n    if (this._dragging || !this.updateHandleTransform) {\n      return;\n    }\n\n    var axisPointerModel = this._axisPointerModel;\n\n    var zr = this._api.getZr();\n\n    var handle = this._handle;\n    var handleModel = axisPointerModel.getModel('handle');\n    var status = axisPointerModel.get('status');\n\n    if (!handleModel.get('show') || !status || status === 'hide') {\n      handle && zr.remove(handle);\n      this._handle = null;\n      return;\n    }\n\n    var isInit;\n\n    if (!this._handle) {\n      isInit = true;\n      handle = this._handle = graphic.createIcon(handleModel.get('icon'), {\n        cursor: 'move',\n        draggable: true,\n        onmousemove: function (e) {\n          // Fot mobile devicem, prevent screen slider on the button.\n          eventTool.stop(e.event);\n        },\n        onmousedown: bind(this._onHandleDragMove, this, 0, 0),\n        drift: bind(this._onHandleDragMove, this),\n        ondragend: bind(this._onHandleDragEnd, this)\n      });\n      zr.add(handle);\n    }\n\n    updateMandatoryProps(handle, axisPointerModel, false); // update style\n\n    var includeStyles = ['color', 'borderColor', 'borderWidth', 'opacity', 'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY'];\n    handle.setStyle(handleModel.getItemStyle(null, includeStyles)); // update position\n\n    var handleSize = handleModel.get('size');\n\n    if (!zrUtil.isArray(handleSize)) {\n      handleSize = [handleSize, handleSize];\n    }\n\n    handle.attr('scale', [handleSize[0] / 2, handleSize[1] / 2]);\n    throttleUtil.createOrUpdate(this, '_doDispatchAxisPointer', handleModel.get('throttle') || 0, 'fixRate');\n\n    this._moveHandleToValue(value, isInit);\n  },\n\n  /**\n   * @private\n   */\n  _moveHandleToValue: function (value, isInit) {\n    updateProps(this._axisPointerModel, !isInit && this._moveAnimation, this._handle, getHandleTransProps(this.getHandleTransform(value, this._axisModel, this._axisPointerModel)));\n  },\n\n  /**\n   * @private\n   */\n  _onHandleDragMove: function (dx, dy) {\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    this._dragging = true; // Persistent for throttle.\n\n    var trans = this.updateHandleTransform(getHandleTransProps(handle), [dx, dy], this._axisModel, this._axisPointerModel);\n    this._payloadInfo = trans;\n    handle.stopAnimation();\n    handle.attr(getHandleTransProps(trans));\n    get(handle).lastProp = null;\n\n    this._doDispatchAxisPointer();\n  },\n\n  /**\n   * Throttled method.\n   * @private\n   */\n  _doDispatchAxisPointer: function () {\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    var payloadInfo = this._payloadInfo;\n    var axisModel = this._axisModel;\n\n    this._api.dispatchAction({\n      type: 'updateAxisPointer',\n      x: payloadInfo.cursorPoint[0],\n      y: payloadInfo.cursorPoint[1],\n      tooltipOption: payloadInfo.tooltipOption,\n      axesInfo: [{\n        axisDim: axisModel.axis.dim,\n        axisIndex: axisModel.componentIndex\n      }]\n    });\n  },\n\n  /**\n   * @private\n   */\n  _onHandleDragEnd: function (moveAnimation) {\n    this._dragging = false;\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    var value = this._axisPointerModel.get('value'); // Consider snap or categroy axis, handle may be not consistent with\n    // axisPointer. So move handle to align the exact value position when\n    // drag ended.\n\n\n    this._moveHandleToValue(value); // For the effect: tooltip will be shown when finger holding on handle\n    // button, and will be hidden after finger left handle button.\n\n\n    this._api.dispatchAction({\n      type: 'hideTip'\n    });\n  },\n\n  /**\n   * Should be implemenented by sub-class if support `handle`.\n   * @protected\n   * @param {number} value\n   * @param {module:echarts/model/Model} axisModel\n   * @param {module:echarts/model/Model} axisPointerModel\n   * @return {Object} {position: [x, y], rotation: 0}\n   */\n  getHandleTransform: null,\n\n  /**\n   * * Should be implemenented by sub-class if support `handle`.\n   * @protected\n   * @param {Object} transform {position, rotation}\n   * @param {Array.<number>} delta [dx, dy]\n   * @param {module:echarts/model/Model} axisModel\n   * @param {module:echarts/model/Model} axisPointerModel\n   * @return {Object} {position: [x, y], rotation: 0, cursorPoint: [x, y]}\n   */\n  updateHandleTransform: null,\n\n  /**\n   * @private\n   */\n  clear: function (api) {\n    this._lastValue = null;\n    this._lastStatus = null;\n    var zr = api.getZr();\n    var group = this._group;\n    var handle = this._handle;\n\n    if (zr && group) {\n      this._lastGraphicKey = null;\n      group && zr.remove(group);\n      handle && zr.remove(handle);\n      this._group = null;\n      this._handle = null;\n      this._payloadInfo = null;\n    }\n  },\n\n  /**\n   * @protected\n   */\n  doClear: function () {// Implemented by sub-class if necessary.\n  },\n\n  /**\n   * @protected\n   * @param {Array.<number>} xy\n   * @param {Array.<number>} wh\n   * @param {number} [xDimIndex=0] or 1\n   */\n  buildLabel: function (xy, wh, xDimIndex) {\n    xDimIndex = xDimIndex || 0;\n    return {\n      x: xy[xDimIndex],\n      y: xy[1 - xDimIndex],\n      width: wh[xDimIndex],\n      height: wh[1 - xDimIndex]\n    };\n  }\n};\nBaseAxisPointer.prototype.constructor = BaseAxisPointer;\n\nfunction updateProps(animationModel, moveAnimation, el, props) {\n  // Animation optimize.\n  if (!propsEqual(get(el).lastProp, props)) {\n    get(el).lastProp = props;\n    moveAnimation ? graphic.updateProps(el, props, animationModel) : (el.stopAnimation(), el.attr(props));\n  }\n}\n\nfunction propsEqual(lastProps, newProps) {\n  if (zrUtil.isObject(lastProps) && zrUtil.isObject(newProps)) {\n    var equals = true;\n    zrUtil.each(newProps, function (item, key) {\n      equals = equals && propsEqual(lastProps[key], item);\n    });\n    return !!equals;\n  } else {\n    return lastProps === newProps;\n  }\n}\n\nfunction updateLabelShowHide(labelEl, axisPointerModel) {\n  labelEl[axisPointerModel.get('label.show') ? 'show' : 'hide']();\n}\n\nfunction getHandleTransProps(trans) {\n  return {\n    position: trans.position.slice(),\n    rotation: trans.rotation || 0\n  };\n}\n\nfunction updateMandatoryProps(group, axisPointerModel, silent) {\n  var z = axisPointerModel.get('z');\n  var zlevel = axisPointerModel.get('zlevel');\n  group && group.traverse(function (el) {\n    if (el.type !== 'group') {\n      z != null && (el.z = z);\n      zlevel != null && (el.zlevel = zlevel);\n      el.silent = silent;\n    }\n  });\n}\n\nclazzUtil.enableClassExtend(BaseAxisPointer);\nvar _default = BaseAxisPointer;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axisPointer/BaseAxisPointer.js\n// module id = 1693\n// module chunks = 2 3","var graphic = require(\"../../util/graphic\");\n\nvar BaseAxisPointer = require(\"./BaseAxisPointer\");\n\nvar viewHelper = require(\"./viewHelper\");\n\nvar cartesianAxisHelper = require(\"../axis/cartesianAxisHelper\");\n\nvar AxisView = require(\"../axis/AxisView\");\n\nvar CartesianAxisPointer = BaseAxisPointer.extend({\n  /**\n   * @override\n   */\n  makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\n    var axis = axisModel.axis;\n    var grid = axis.grid;\n    var axisPointerType = axisPointerModel.get('type');\n    var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n    var pixelValue = axis.toGlobalCoord(axis.dataToCoord(value, true));\n\n    if (axisPointerType && axisPointerType !== 'none') {\n      var elStyle = viewHelper.buildElStyle(axisPointerModel);\n      var pointerOption = pointerShapeBuilder[axisPointerType](axis, pixelValue, otherExtent, elStyle);\n      pointerOption.style = elStyle;\n      elOption.graphicKey = pointerOption.type;\n      elOption.pointer = pointerOption;\n    }\n\n    var layoutInfo = cartesianAxisHelper.layout(grid.model, axisModel);\n    viewHelper.buildCartesianSingleLabelElOption(value, elOption, layoutInfo, axisModel, axisPointerModel, api);\n  },\n\n  /**\n   * @override\n   */\n  getHandleTransform: function (value, axisModel, axisPointerModel) {\n    var layoutInfo = cartesianAxisHelper.layout(axisModel.axis.grid.model, axisModel, {\n      labelInside: false\n    });\n    layoutInfo.labelMargin = axisPointerModel.get('handle.margin');\n    return {\n      position: viewHelper.getTransformedPosition(axisModel.axis, value, layoutInfo),\n      rotation: layoutInfo.rotation + (layoutInfo.labelDirection < 0 ? Math.PI : 0)\n    };\n  },\n\n  /**\n   * @override\n   */\n  updateHandleTransform: function (transform, delta, axisModel, axisPointerModel) {\n    var axis = axisModel.axis;\n    var grid = axis.grid;\n    var axisExtent = axis.getGlobalExtent(true);\n    var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n    var dimIndex = axis.dim === 'x' ? 0 : 1;\n    var currPosition = transform.position;\n    currPosition[dimIndex] += delta[dimIndex];\n    currPosition[dimIndex] = Math.min(axisExtent[1], currPosition[dimIndex]);\n    currPosition[dimIndex] = Math.max(axisExtent[0], currPosition[dimIndex]);\n    var cursorOtherValue = (otherExtent[1] + otherExtent[0]) / 2;\n    var cursorPoint = [cursorOtherValue, cursorOtherValue];\n    cursorPoint[dimIndex] = currPosition[dimIndex]; // Make tooltip do not overlap axisPointer and in the middle of the grid.\n\n    var tooltipOptions = [{\n      verticalAlign: 'middle'\n    }, {\n      align: 'center'\n    }];\n    return {\n      position: currPosition,\n      rotation: transform.rotation,\n      cursorPoint: cursorPoint,\n      tooltipOption: tooltipOptions[dimIndex]\n    };\n  }\n});\n\nfunction getCartesian(grid, axis) {\n  var opt = {};\n  opt[axis.dim + 'AxisIndex'] = axis.index;\n  return grid.getCartesian(opt);\n}\n\nvar pointerShapeBuilder = {\n  line: function (axis, pixelValue, otherExtent, elStyle) {\n    var targetShape = viewHelper.makeLineShape([pixelValue, otherExtent[0]], [pixelValue, otherExtent[1]], getAxisDimIndex(axis));\n    graphic.subPixelOptimizeLine({\n      shape: targetShape,\n      style: elStyle\n    });\n    return {\n      type: 'Line',\n      shape: targetShape\n    };\n  },\n  shadow: function (axis, pixelValue, otherExtent, elStyle) {\n    var bandWidth = axis.getBandWidth();\n    var span = otherExtent[1] - otherExtent[0];\n    return {\n      type: 'Rect',\n      shape: viewHelper.makeRectShape([pixelValue - bandWidth / 2, otherExtent[0]], [bandWidth, span], getAxisDimIndex(axis))\n    };\n  }\n};\n\nfunction getAxisDimIndex(axis) {\n  return axis.dim === 'x' ? 0 : 1;\n}\n\nAxisView.registerAxisPointerClass('CartesianAxisPointer', CartesianAxisPointer);\nvar _default = CartesianAxisPointer;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axisPointer/CartesianAxisPointer.js\n// module id = 1694\n// module chunks = 2 3","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar modelHelper = require(\"./modelHelper\");\n\nvar findPointFromSeries = require(\"./findPointFromSeries\");\n\nvar each = zrUtil.each;\nvar curry = zrUtil.curry;\nvar get = modelUtil.makeGetter();\n/**\n * Basic logic: check all axis, if they do not demand show/highlight,\n * then hide/downplay them.\n *\n * @param {Object} coordSysAxesInfo\n * @param {Object} payload\n * @param {string} [payload.currTrigger] 'click' | 'mousemove' | 'leave'\n * @param {Array.<number>} [payload.x] x and y, which are mandatory, specify a point to\n *              trigger axisPointer and tooltip.\n * @param {Array.<number>} [payload.y] x and y, which are mandatory, specify a point to\n *              trigger axisPointer and tooltip.\n * @param {Object} [payload.seriesIndex] finder, optional, restrict target axes.\n * @param {Object} [payload.dataIndex] finder, restrict target axes.\n * @param {Object} [payload.axesInfo] finder, restrict target axes.\n *        [{\n *          axisDim: 'x'|'y'|'angle'|...,\n *          axisIndex: ...,\n *          value: ...\n *        }, ...]\n * @param {Function} [payload.dispatchAction]\n * @param {Object} [payload.tooltipOption]\n * @param {Object|Array.<number>|Function} [payload.position] Tooltip position,\n *        which can be specified in dispatchAction\n * @param {module:echarts/model/Global} ecModel\n * @param {module:echarts/ExtensionAPI} api\n * @return {Object} content of event obj for echarts.connect.\n */\n\nfunction _default(payload, ecModel, api) {\n  var currTrigger = payload.currTrigger;\n  var point = [payload.x, payload.y];\n  var finder = payload;\n  var dispatchAction = payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n  var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo; // Pending\n  // See #6121. But we are not able to reproduce it yet.\n\n  if (!coordSysAxesInfo) {\n    return;\n  }\n\n  if (illegalPoint(point)) {\n    // Used in the default behavior of `connection`: use the sample seriesIndex\n    // and dataIndex. And also used in the tooltipView trigger.\n    point = findPointFromSeries({\n      seriesIndex: finder.seriesIndex,\n      // Do not use dataIndexInside from other ec instance.\n      // FIXME: auto detect it?\n      dataIndex: finder.dataIndex\n    }, ecModel).point;\n  }\n\n  var isIllegalPoint = illegalPoint(point); // Axis and value can be specified when calling dispatchAction({type: 'updateAxisPointer'}).\n  // Notice: In this case, it is difficult to get the `point` (which is necessary to show\n  // tooltip, so if point is not given, we just use the point found by sample seriesIndex\n  // and dataIndex.\n\n  var inputAxesInfo = finder.axesInfo;\n  var axesInfo = coordSysAxesInfo.axesInfo;\n  var shouldHide = currTrigger === 'leave' || illegalPoint(point);\n  var outputFinder = {};\n  var showValueMap = {};\n  var dataByCoordSys = {\n    list: [],\n    map: {}\n  };\n  var updaters = {\n    showPointer: curry(showPointer, showValueMap),\n    showTooltip: curry(showTooltip, dataByCoordSys)\n  }; // Process for triggered axes.\n\n  each(coordSysAxesInfo.coordSysMap, function (coordSys, coordSysKey) {\n    // If a point given, it must be contained by the coordinate system.\n    var coordSysContainsPoint = isIllegalPoint || coordSys.containPoint(point);\n    each(coordSysAxesInfo.coordSysAxesInfo[coordSysKey], function (axisInfo, key) {\n      var axis = axisInfo.axis;\n      var inputAxisInfo = findInputAxisInfo(inputAxesInfo, axisInfo); // If no inputAxesInfo, no axis is restricted.\n\n      if (!shouldHide && coordSysContainsPoint && (!inputAxesInfo || inputAxisInfo)) {\n        var val = inputAxisInfo && inputAxisInfo.value;\n\n        if (val == null && !isIllegalPoint) {\n          val = axis.pointToData(point);\n        }\n\n        val != null && processOnAxis(axisInfo, val, updaters, false, outputFinder);\n      }\n    });\n  }); // Process for linked axes.\n\n  var linkTriggers = {};\n  each(axesInfo, function (tarAxisInfo, tarKey) {\n    var linkGroup = tarAxisInfo.linkGroup; // If axis has been triggered in the previous stage, it should not be triggered by link.\n\n    if (linkGroup && !showValueMap[tarKey]) {\n      each(linkGroup.axesInfo, function (srcAxisInfo, srcKey) {\n        var srcValItem = showValueMap[srcKey]; // If srcValItem exist, source axis is triggered, so link to target axis.\n\n        if (srcAxisInfo !== tarAxisInfo && srcValItem) {\n          var val = srcValItem.value;\n          linkGroup.mapper && (val = tarAxisInfo.axis.scale.parse(linkGroup.mapper(val, makeMapperParam(srcAxisInfo), makeMapperParam(tarAxisInfo))));\n          linkTriggers[tarAxisInfo.key] = val;\n        }\n      });\n    }\n  });\n  each(linkTriggers, function (val, tarKey) {\n    processOnAxis(axesInfo[tarKey], val, updaters, true, outputFinder);\n  });\n  updateModelActually(showValueMap, axesInfo, outputFinder);\n  dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction);\n  dispatchHighDownActually(axesInfo, dispatchAction, api);\n  return outputFinder;\n}\n\nfunction processOnAxis(axisInfo, newValue, updaters, dontSnap, outputFinder) {\n  var axis = axisInfo.axis;\n\n  if (axis.scale.isBlank() || !axis.containData(newValue)) {\n    return;\n  }\n\n  if (!axisInfo.involveSeries) {\n    updaters.showPointer(axisInfo, newValue);\n    return;\n  } // Heavy calculation. So put it after axis.containData checking.\n\n\n  var payloadInfo = buildPayloadsBySeries(newValue, axisInfo);\n  var payloadBatch = payloadInfo.payloadBatch;\n  var snapToValue = payloadInfo.snapToValue; // Fill content of event obj for echarts.connect.\n  // By defualt use the first involved series data as a sample to connect.\n\n  if (payloadBatch[0] && outputFinder.seriesIndex == null) {\n    zrUtil.extend(outputFinder, payloadBatch[0]);\n  } // If no linkSource input, this process is for collecting link\n  // target, where snap should not be accepted.\n\n\n  if (!dontSnap && axisInfo.snap) {\n    if (axis.containData(snapToValue) && snapToValue != null) {\n      newValue = snapToValue;\n    }\n  }\n\n  updaters.showPointer(axisInfo, newValue, payloadBatch, outputFinder); // Tooltip should always be snapToValue, otherwise there will be\n  // incorrect \"axis value ~ series value\" mapping displayed in tooltip.\n\n  updaters.showTooltip(axisInfo, payloadInfo, snapToValue);\n}\n\nfunction buildPayloadsBySeries(value, axisInfo) {\n  var axis = axisInfo.axis;\n  var dim = axis.dim;\n  var snapToValue = value;\n  var payloadBatch = [];\n  var minDist = Number.MAX_VALUE;\n  var minDiff = -1;\n  each(axisInfo.seriesModels, function (series, idx) {\n    var dataDim = series.coordDimToDataDim(dim);\n    var seriesNestestValue;\n    var dataIndices;\n\n    if (series.getAxisTooltipData) {\n      var result = series.getAxisTooltipData(dataDim, value, axis);\n      dataIndices = result.dataIndices;\n      seriesNestestValue = result.nestestValue;\n    } else {\n      dataIndices = series.getData().indicesOfNearest(dataDim[0], value, // Add a threshold to avoid find the wrong dataIndex\n      // when data length is not same.\n      false, axis.type === 'category' ? 0.5 : null);\n\n      if (!dataIndices.length) {\n        return;\n      }\n\n      seriesNestestValue = series.getData().get(dataDim[0], dataIndices[0]);\n    }\n\n    if (seriesNestestValue == null || !isFinite(seriesNestestValue)) {\n      return;\n    }\n\n    var diff = value - seriesNestestValue;\n    var dist = Math.abs(diff); // Consider category case\n\n    if (dist <= minDist) {\n      if (dist < minDist || diff >= 0 && minDiff < 0) {\n        minDist = dist;\n        minDiff = diff;\n        snapToValue = seriesNestestValue;\n        payloadBatch.length = 0;\n      }\n\n      each(dataIndices, function (dataIndex) {\n        payloadBatch.push({\n          seriesIndex: series.seriesIndex,\n          dataIndexInside: dataIndex,\n          dataIndex: series.getData().getRawIndex(dataIndex)\n        });\n      });\n    }\n  });\n  return {\n    payloadBatch: payloadBatch,\n    snapToValue: snapToValue\n  };\n}\n\nfunction showPointer(showValueMap, axisInfo, value, payloadBatch) {\n  showValueMap[axisInfo.key] = {\n    value: value,\n    payloadBatch: payloadBatch\n  };\n}\n\nfunction showTooltip(dataByCoordSys, axisInfo, payloadInfo, value) {\n  var payloadBatch = payloadInfo.payloadBatch;\n  var axis = axisInfo.axis;\n  var axisModel = axis.model;\n  var axisPointerModel = axisInfo.axisPointerModel; // If no data, do not create anything in dataByCoordSys,\n  // whose length will be used to judge whether dispatch action.\n\n  if (!axisInfo.triggerTooltip || !payloadBatch.length) {\n    return;\n  }\n\n  var coordSysModel = axisInfo.coordSys.model;\n  var coordSysKey = modelHelper.makeKey(coordSysModel);\n  var coordSysItem = dataByCoordSys.map[coordSysKey];\n\n  if (!coordSysItem) {\n    coordSysItem = dataByCoordSys.map[coordSysKey] = {\n      coordSysId: coordSysModel.id,\n      coordSysIndex: coordSysModel.componentIndex,\n      coordSysType: coordSysModel.type,\n      coordSysMainType: coordSysModel.mainType,\n      dataByAxis: []\n    };\n    dataByCoordSys.list.push(coordSysItem);\n  }\n\n  coordSysItem.dataByAxis.push({\n    axisDim: axis.dim,\n    axisIndex: axisModel.componentIndex,\n    axisType: axisModel.type,\n    axisId: axisModel.id,\n    value: value,\n    // Caustion: viewHelper.getValueLabel is actually on \"view stage\", which\n    // depends that all models have been updated. So it should not be performed\n    // here. Considering axisPointerModel used here is volatile, which is hard\n    // to be retrieve in TooltipView, we prepare parameters here.\n    valueLabelOpt: {\n      precision: axisPointerModel.get('label.precision'),\n      formatter: axisPointerModel.get('label.formatter')\n    },\n    seriesDataIndices: payloadBatch.slice()\n  });\n}\n\nfunction updateModelActually(showValueMap, axesInfo, outputFinder) {\n  var outputAxesInfo = outputFinder.axesInfo = []; // Basic logic: If no 'show' required, 'hide' this axisPointer.\n\n  each(axesInfo, function (axisInfo, key) {\n    var option = axisInfo.axisPointerModel.option;\n    var valItem = showValueMap[key];\n\n    if (valItem) {\n      !axisInfo.useHandle && (option.status = 'show');\n      option.value = valItem.value; // For label formatter param and highlight.\n\n      option.seriesDataIndices = (valItem.payloadBatch || []).slice();\n    } // When always show (e.g., handle used), remain\n    // original value and status.\n    else {\n        // If hide, value still need to be set, consider\n        // click legend to toggle axis blank.\n        !axisInfo.useHandle && (option.status = 'hide');\n      } // If status is 'hide', should be no info in payload.\n\n\n    option.status === 'show' && outputAxesInfo.push({\n      axisDim: axisInfo.axis.dim,\n      axisIndex: axisInfo.axis.model.componentIndex,\n      value: option.value\n    });\n  });\n}\n\nfunction dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction) {\n  // Basic logic: If no showTip required, hideTip will be dispatched.\n  if (illegalPoint(point) || !dataByCoordSys.list.length) {\n    dispatchAction({\n      type: 'hideTip'\n    });\n    return;\n  } // In most case only one axis (or event one series is used). It is\n  // convinient to fetch payload.seriesIndex and payload.dataIndex\n  // dirtectly. So put the first seriesIndex and dataIndex of the first\n  // axis on the payload.\n\n\n  var sampleItem = ((dataByCoordSys.list[0].dataByAxis[0] || {}).seriesDataIndices || [])[0] || {};\n  dispatchAction({\n    type: 'showTip',\n    escapeConnect: true,\n    x: point[0],\n    y: point[1],\n    tooltipOption: payload.tooltipOption,\n    position: payload.position,\n    dataIndexInside: sampleItem.dataIndexInside,\n    dataIndex: sampleItem.dataIndex,\n    seriesIndex: sampleItem.seriesIndex,\n    dataByCoordSys: dataByCoordSys.list\n  });\n}\n\nfunction dispatchHighDownActually(axesInfo, dispatchAction, api) {\n  // FIXME\n  // highlight status modification shoule be a stage of main process?\n  // (Consider confilct (e.g., legend and axisPointer) and setOption)\n  var zr = api.getZr();\n  var highDownKey = 'axisPointerLastHighlights';\n  var lastHighlights = get(zr)[highDownKey] || {};\n  var newHighlights = get(zr)[highDownKey] = {}; // Update highlight/downplay status according to axisPointer model.\n  // Build hash map and remove duplicate incidentally.\n\n  each(axesInfo, function (axisInfo, key) {\n    var option = axisInfo.axisPointerModel.option;\n    option.status === 'show' && each(option.seriesDataIndices, function (batchItem) {\n      var key = batchItem.seriesIndex + ' | ' + batchItem.dataIndex;\n      newHighlights[key] = batchItem;\n    });\n  }); // Diff.\n\n  var toHighlight = [];\n  var toDownplay = [];\n  zrUtil.each(lastHighlights, function (batchItem, key) {\n    !newHighlights[key] && toDownplay.push(batchItem);\n  });\n  zrUtil.each(newHighlights, function (batchItem, key) {\n    !lastHighlights[key] && toHighlight.push(batchItem);\n  });\n  toDownplay.length && api.dispatchAction({\n    type: 'downplay',\n    escapeConnect: true,\n    batch: toDownplay\n  });\n  toHighlight.length && api.dispatchAction({\n    type: 'highlight',\n    escapeConnect: true,\n    batch: toHighlight\n  });\n}\n\nfunction findInputAxisInfo(inputAxesInfo, axisInfo) {\n  for (var i = 0; i < (inputAxesInfo || []).length; i++) {\n    var inputAxisInfo = inputAxesInfo[i];\n\n    if (axisInfo.axis.dim === inputAxisInfo.axisDim && axisInfo.axis.model.componentIndex === inputAxisInfo.axisIndex) {\n      return inputAxisInfo;\n    }\n  }\n}\n\nfunction makeMapperParam(axisInfo) {\n  var axisModel = axisInfo.axis.model;\n  var item = {};\n  var dim = item.axisDim = axisInfo.axis.dim;\n  item.axisIndex = item[dim + 'AxisIndex'] = axisModel.componentIndex;\n  item.axisName = item[dim + 'AxisName'] = axisModel.name;\n  item.axisId = item[dim + 'AxisId'] = axisModel.id;\n  return item;\n}\n\nfunction illegalPoint(point) {\n  return !point || point[0] == null || isNaN(point[0]) || point[1] == null || isNaN(point[1]);\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axisPointer/axisTrigger.js\n// module id = 1695\n// module chunks = 2 3","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar AxisBuilder = require(\"./AxisBuilder\");\n\nvar AxisView = require(\"./AxisView\");\n\nvar cartesianAxisHelper = require(\"./cartesianAxisHelper\");\n\nvar ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick;\nvar getInterval = AxisBuilder.getInterval;\nvar axisBuilderAttrs = ['axisLine', 'axisTickLabel', 'axisName'];\nvar selfBuilderAttrs = ['splitArea', 'splitLine']; // function getAlignWithLabel(model, axisModel) {\n//     var alignWithLabel = model.get('alignWithLabel');\n//     if (alignWithLabel === 'auto') {\n//         alignWithLabel = axisModel.get('axisTick.alignWithLabel');\n//     }\n//     return alignWithLabel;\n// }\n\nvar CartesianAxisView = AxisView.extend({\n  type: 'cartesianAxis',\n  axisPointerClass: 'CartesianAxisPointer',\n\n  /**\n   * @override\n   */\n  render: function (axisModel, ecModel, api, payload) {\n    this.group.removeAll();\n    var oldAxisGroup = this._axisGroup;\n    this._axisGroup = new graphic.Group();\n    this.group.add(this._axisGroup);\n\n    if (!axisModel.get('show')) {\n      return;\n    }\n\n    var gridModel = axisModel.getCoordSysModel();\n    var layout = cartesianAxisHelper.layout(gridModel, axisModel);\n    var axisBuilder = new AxisBuilder(axisModel, layout);\n    zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n\n    this._axisGroup.add(axisBuilder.getGroup());\n\n    zrUtil.each(selfBuilderAttrs, function (name) {\n      if (axisModel.get(name + '.show')) {\n        this['_' + name](axisModel, gridModel, layout.labelInterval);\n      }\n    }, this);\n    graphic.groupTransition(oldAxisGroup, this._axisGroup, axisModel);\n    CartesianAxisView.superCall(this, 'render', axisModel, ecModel, api, payload);\n  },\n\n  /**\n   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n   * @param {module:echarts/coord/cartesian/GridModel} gridModel\n   * @param {number|Function} labelInterval\n   * @private\n   */\n  _splitLine: function (axisModel, gridModel, labelInterval) {\n    var axis = axisModel.axis;\n\n    if (axis.scale.isBlank()) {\n      return;\n    }\n\n    var splitLineModel = axisModel.getModel('splitLine');\n    var lineStyleModel = splitLineModel.getModel('lineStyle');\n    var lineColors = lineStyleModel.get('color');\n    var lineInterval = getInterval(splitLineModel, labelInterval);\n    lineColors = zrUtil.isArray(lineColors) ? lineColors : [lineColors];\n    var gridRect = gridModel.coordinateSystem.getRect();\n    var isHorizontal = axis.isHorizontal();\n    var lineCount = 0;\n    var ticksCoords = axis.getTicksCoords();\n    var ticks = axis.scale.getTicks();\n    var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n    var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n    var p1 = [];\n    var p2 = []; // Simple optimization\n    // Batching the lines if color are the same\n\n    var lineStyle = lineStyleModel.getLineStyle();\n\n    for (var i = 0; i < ticksCoords.length; i++) {\n      if (ifIgnoreOnTick(axis, i, lineInterval, ticksCoords.length, showMinLabel, showMaxLabel)) {\n        continue;\n      }\n\n      var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\n\n      if (isHorizontal) {\n        p1[0] = tickCoord;\n        p1[1] = gridRect.y;\n        p2[0] = tickCoord;\n        p2[1] = gridRect.y + gridRect.height;\n      } else {\n        p1[0] = gridRect.x;\n        p1[1] = tickCoord;\n        p2[0] = gridRect.x + gridRect.width;\n        p2[1] = tickCoord;\n      }\n\n      var colorIndex = lineCount++ % lineColors.length;\n\n      this._axisGroup.add(new graphic.Line(graphic.subPixelOptimizeLine({\n        anid: 'line_' + ticks[i],\n        shape: {\n          x1: p1[0],\n          y1: p1[1],\n          x2: p2[0],\n          y2: p2[1]\n        },\n        style: zrUtil.defaults({\n          stroke: lineColors[colorIndex]\n        }, lineStyle),\n        silent: true\n      })));\n    }\n  },\n\n  /**\n   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n   * @param {module:echarts/coord/cartesian/GridModel} gridModel\n   * @param {number|Function} labelInterval\n   * @private\n   */\n  _splitArea: function (axisModel, gridModel, labelInterval) {\n    var axis = axisModel.axis;\n\n    if (axis.scale.isBlank()) {\n      return;\n    }\n\n    var splitAreaModel = axisModel.getModel('splitArea');\n    var areaStyleModel = splitAreaModel.getModel('areaStyle');\n    var areaColors = areaStyleModel.get('color');\n    var gridRect = gridModel.coordinateSystem.getRect();\n    var ticksCoords = axis.getTicksCoords();\n    var ticks = axis.scale.getTicks();\n    var prevX = axis.toGlobalCoord(ticksCoords[0]);\n    var prevY = axis.toGlobalCoord(ticksCoords[0]);\n    var count = 0;\n    var areaInterval = getInterval(splitAreaModel, labelInterval);\n    var areaStyle = areaStyleModel.getAreaStyle();\n    areaColors = zrUtil.isArray(areaColors) ? areaColors : [areaColors];\n    var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n    var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n\n    for (var i = 1; i < ticksCoords.length; i++) {\n      if (ifIgnoreOnTick(axis, i, areaInterval, ticksCoords.length, showMinLabel, showMaxLabel)) {\n        continue;\n      }\n\n      var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\n      var x;\n      var y;\n      var width;\n      var height;\n\n      if (axis.isHorizontal()) {\n        x = prevX;\n        y = gridRect.y;\n        width = tickCoord - x;\n        height = gridRect.height;\n      } else {\n        x = gridRect.x;\n        y = prevY;\n        width = gridRect.width;\n        height = tickCoord - y;\n      }\n\n      var colorIndex = count++ % areaColors.length;\n\n      this._axisGroup.add(new graphic.Rect({\n        anid: 'area_' + ticks[i],\n        shape: {\n          x: x,\n          y: y,\n          width: width,\n          height: height\n        },\n        style: zrUtil.defaults({\n          fill: areaColors[colorIndex]\n        }, areaStyle),\n        silent: true\n      }));\n\n      prevX = x + width;\n      prevY = y + height;\n    }\n  }\n});\nCartesianAxisView.extend({\n  type: 'xAxis'\n});\nCartesianAxisView.extend({\n  type: 'yAxis'\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axis/CartesianAxisView.js\n// module id = 1696\n// module chunks = 2 3","var echarts = require(\"../echarts\");\n\nvar graphic = require(\"../util/graphic\");\n\nvar _layout = require(\"../util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\n// Model\necharts.extendComponentModel({\n  type: 'title',\n  layoutMode: {\n    type: 'box',\n    ignoreSize: true\n  },\n  defaultOption: {\n    // 一级层叠\n    zlevel: 0,\n    // 二级层叠\n    z: 6,\n    show: true,\n    text: '',\n    // 超链接跳转\n    // link: null,\n    // 仅支持self | blank\n    target: 'blank',\n    subtext: '',\n    // 超链接跳转\n    // sublink: null,\n    // 仅支持self | blank\n    subtarget: 'blank',\n    // 'center' ¦ 'left' ¦ 'right'\n    // ¦ {number}（x坐标，单位px）\n    left: 0,\n    // 'top' ¦ 'bottom' ¦ 'center'\n    // ¦ {number}（y坐标，单位px）\n    top: 0,\n    // 水平对齐\n    // 'auto' | 'left' | 'right' | 'center'\n    // 默认根据 left 的位置判断是左对齐还是右对齐\n    // textAlign: null\n    //\n    // 垂直对齐\n    // 'auto' | 'top' | 'bottom' | 'middle'\n    // 默认根据 top 位置判断是上对齐还是下对齐\n    // textBaseline: null\n    backgroundColor: 'rgba(0,0,0,0)',\n    // 标题边框颜色\n    borderColor: '#ccc',\n    // 标题边框线宽，单位px，默认为0（无边框）\n    borderWidth: 0,\n    // 标题内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    padding: 5,\n    // 主副标题纵向间隔，单位px，默认为10，\n    itemGap: 10,\n    textStyle: {\n      fontSize: 18,\n      fontWeight: 'bolder',\n      color: '#333'\n    },\n    subtextStyle: {\n      color: '#aaa'\n    }\n  }\n}); // View\n\necharts.extendComponentView({\n  type: 'title',\n  render: function (titleModel, ecModel, api) {\n    this.group.removeAll();\n\n    if (!titleModel.get('show')) {\n      return;\n    }\n\n    var group = this.group;\n    var textStyleModel = titleModel.getModel('textStyle');\n    var subtextStyleModel = titleModel.getModel('subtextStyle');\n    var textAlign = titleModel.get('textAlign');\n    var textBaseline = titleModel.get('textBaseline');\n    var textEl = new graphic.Text({\n      style: graphic.setTextStyle({}, textStyleModel, {\n        text: titleModel.get('text'),\n        textFill: textStyleModel.getTextColor()\n      }, {\n        disableBox: true\n      }),\n      z2: 10\n    });\n    var textRect = textEl.getBoundingRect();\n    var subText = titleModel.get('subtext');\n    var subTextEl = new graphic.Text({\n      style: graphic.setTextStyle({}, subtextStyleModel, {\n        text: subText,\n        textFill: subtextStyleModel.getTextColor(),\n        y: textRect.height + titleModel.get('itemGap'),\n        textVerticalAlign: 'top'\n      }, {\n        disableBox: true\n      }),\n      z2: 10\n    });\n    var link = titleModel.get('link');\n    var sublink = titleModel.get('sublink');\n    textEl.silent = !link;\n    subTextEl.silent = !sublink;\n\n    if (link) {\n      textEl.on('click', function () {\n        window.open(link, '_' + titleModel.get('target'));\n      });\n    }\n\n    if (sublink) {\n      subTextEl.on('click', function () {\n        window.open(sublink, '_' + titleModel.get('subtarget'));\n      });\n    }\n\n    group.add(textEl);\n    subText && group.add(subTextEl); // If no subText, but add subTextEl, there will be an empty line.\n\n    var groupRect = group.getBoundingRect();\n    var layoutOption = titleModel.getBoxLayoutParams();\n    layoutOption.width = groupRect.width;\n    layoutOption.height = groupRect.height;\n    var layoutRect = getLayoutRect(layoutOption, {\n      width: api.getWidth(),\n      height: api.getHeight()\n    }, titleModel.get('padding')); // Adjust text align based on position\n\n    if (!textAlign) {\n      // Align left if title is on the left. center and right is same\n      textAlign = titleModel.get('left') || titleModel.get('right');\n\n      if (textAlign === 'middle') {\n        textAlign = 'center';\n      } // Adjust layout by text align\n\n\n      if (textAlign === 'right') {\n        layoutRect.x += layoutRect.width;\n      } else if (textAlign === 'center') {\n        layoutRect.x += layoutRect.width / 2;\n      }\n    }\n\n    if (!textBaseline) {\n      textBaseline = titleModel.get('top') || titleModel.get('bottom');\n\n      if (textBaseline === 'center') {\n        textBaseline = 'middle';\n      }\n\n      if (textBaseline === 'bottom') {\n        layoutRect.y += layoutRect.height;\n      } else if (textBaseline === 'middle') {\n        layoutRect.y += layoutRect.height / 2;\n      }\n\n      textBaseline = textBaseline || 'top';\n    }\n\n    group.attr('position', [layoutRect.x, layoutRect.y]);\n    var alignStyle = {\n      textAlign: textAlign,\n      textVerticalAlign: textBaseline\n    };\n    textEl.setStyle(alignStyle);\n    subTextEl.setStyle(alignStyle); // Render background\n    // Get groupRect again because textAlign has been changed\n\n    groupRect = group.getBoundingRect();\n    var padding = layoutRect.margin;\n    var style = titleModel.getItemStyle(['color', 'opacity']);\n    style.fill = titleModel.get('backgroundColor');\n    var rect = new graphic.Rect({\n      shape: {\n        x: groupRect.x - padding[3],\n        y: groupRect.y - padding[0],\n        width: groupRect.width + padding[1] + padding[3],\n        height: groupRect.height + padding[0] + padding[2],\n        r: titleModel.get('borderRadius')\n      },\n      style: style,\n      silent: true\n    });\n    graphic.subPixelOptimizeRect(rect);\n    group.add(rect);\n  }\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/title.js\n// module id = 1697\n// module chunks = 2 3","var echarts = require(\"../echarts\");\n\nrequire(\"./axisPointer\");\n\nrequire(\"./tooltip/TooltipModel\");\n\nrequire(\"./tooltip/TooltipView\");\n\n// FIXME Better way to pack data in graphic element\n\n/**\n * @action\n * @property {string} type\n * @property {number} seriesIndex\n * @property {number} dataIndex\n * @property {number} [x]\n * @property {number} [y]\n */\necharts.registerAction({\n  type: 'showTip',\n  event: 'showTip',\n  update: 'tooltip:manuallyShowTip'\n}, // noop\nfunction () {});\necharts.registerAction({\n  type: 'hideTip',\n  event: 'hideTip',\n  update: 'tooltip:manuallyHideTip'\n}, // noop\nfunction () {});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/tooltip.js\n// module id = 1698\n// module chunks = 2 3","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar zrColor = require(\"zrender/lib/tool/color\");\n\nvar eventUtil = require(\"zrender/lib/core/event\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar formatUtil = require(\"../../util/format\");\n\nvar each = zrUtil.each;\nvar toCamelCase = formatUtil.toCamelCase;\nvar vendors = ['', '-webkit-', '-moz-', '-o-'];\nvar gCssText = 'position:absolute;display:block;border-style:solid;white-space:nowrap;z-index:9999999;';\n/**\n * @param {number} duration\n * @return {string}\n * @inner\n */\n\nfunction assembleTransition(duration) {\n  var transitionCurve = 'cubic-bezier(0.23, 1, 0.32, 1)';\n  var transitionText = 'left ' + duration + 's ' + transitionCurve + ',' + 'top ' + duration + 's ' + transitionCurve;\n  return zrUtil.map(vendors, function (vendorPrefix) {\n    return vendorPrefix + 'transition:' + transitionText;\n  }).join(';');\n}\n/**\n * @param {Object} textStyle\n * @return {string}\n * @inner\n */\n\n\nfunction assembleFont(textStyleModel) {\n  var cssText = [];\n  var fontSize = textStyleModel.get('fontSize');\n  var color = textStyleModel.getTextColor();\n  color && cssText.push('color:' + color);\n  cssText.push('font:' + textStyleModel.getFont());\n  fontSize && cssText.push('line-height:' + Math.round(fontSize * 3 / 2) + 'px');\n  each(['decoration', 'align'], function (name) {\n    var val = textStyleModel.get(name);\n    val && cssText.push('text-' + name + ':' + val);\n  });\n  return cssText.join(';');\n}\n/**\n * @param {Object} tooltipModel\n * @return {string}\n * @inner\n */\n\n\nfunction assembleCssText(tooltipModel) {\n  var cssText = [];\n  var transitionDuration = tooltipModel.get('transitionDuration');\n  var backgroundColor = tooltipModel.get('backgroundColor');\n  var textStyleModel = tooltipModel.getModel('textStyle');\n  var padding = tooltipModel.get('padding'); // Animation transition. Do not animate when transitionDuration is 0.\n\n  transitionDuration && cssText.push(assembleTransition(transitionDuration));\n\n  if (backgroundColor) {\n    if (env.canvasSupported) {\n      cssText.push('background-Color:' + backgroundColor);\n    } else {\n      // for ie\n      cssText.push('background-Color:#' + zrColor.toHex(backgroundColor));\n      cssText.push('filter:alpha(opacity=70)');\n    }\n  } // Border style\n\n\n  each(['width', 'color', 'radius'], function (name) {\n    var borderName = 'border-' + name;\n    var camelCase = toCamelCase(borderName);\n    var val = tooltipModel.get(camelCase);\n    val != null && cssText.push(borderName + ':' + val + (name === 'color' ? '' : 'px'));\n  }); // Text style\n\n  cssText.push(assembleFont(textStyleModel)); // Padding\n\n  if (padding != null) {\n    cssText.push('padding:' + formatUtil.normalizeCssArray(padding).join('px ') + 'px');\n  }\n\n  return cssText.join(';') + ';';\n}\n/**\n * @alias module:echarts/component/tooltip/TooltipContent\n * @constructor\n */\n\n\nfunction TooltipContent(container, api) {\n  var el = document.createElement('div');\n  var zr = this._zr = api.getZr();\n  this.el = el;\n  this._x = api.getWidth() / 2;\n  this._y = api.getHeight() / 2;\n  container.appendChild(el);\n  this._container = container;\n  this._show = false;\n  /**\n   * @private\n   */\n\n  this._hideTimeout;\n  var self = this;\n\n  el.onmouseenter = function () {\n    // clear the timeout in hideLater and keep showing tooltip\n    if (self._enterable) {\n      clearTimeout(self._hideTimeout);\n      self._show = true;\n    }\n\n    self._inContent = true;\n  };\n\n  el.onmousemove = function (e) {\n    e = e || window.event;\n\n    if (!self._enterable) {\n      // Try trigger zrender event to avoid mouse\n      // in and out shape too frequently\n      var handler = zr.handler;\n      eventUtil.normalizeEvent(container, e, true);\n      handler.dispatch('mousemove', e);\n    }\n  };\n\n  el.onmouseleave = function () {\n    if (self._enterable) {\n      if (self._show) {\n        self.hideLater(self._hideDelay);\n      }\n    }\n\n    self._inContent = false;\n  };\n}\n\nTooltipContent.prototype = {\n  constructor: TooltipContent,\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  _enterable: true,\n\n  /**\n   * Update when tooltip is rendered\n   */\n  update: function () {\n    // FIXME\n    // Move this logic to ec main?\n    var container = this._container;\n    var stl = container.currentStyle || document.defaultView.getComputedStyle(container);\n    var domStyle = container.style;\n\n    if (domStyle.position !== 'absolute' && stl.position !== 'absolute') {\n      domStyle.position = 'relative';\n    } // Hide the tooltip\n    // PENDING\n    // this.hide();\n\n  },\n  show: function (tooltipModel) {\n    clearTimeout(this._hideTimeout);\n    var el = this.el;\n    el.style.cssText = gCssText + assembleCssText(tooltipModel) // http://stackoverflow.com/questions/21125587/css3-transition-not-working-in-chrome-anymore\n    + ';left:' + this._x + 'px;top:' + this._y + 'px;' + (tooltipModel.get('extraCssText') || '');\n    el.style.display = el.innerHTML ? 'block' : 'none';\n    this._show = true;\n  },\n  setContent: function (content) {\n    this.el.innerHTML = content == null ? '' : content;\n  },\n  setEnterable: function (enterable) {\n    this._enterable = enterable;\n  },\n  getSize: function () {\n    var el = this.el;\n    return [el.clientWidth, el.clientHeight];\n  },\n  moveTo: function (x, y) {\n    // xy should be based on canvas root. But tooltipContent is\n    // the sibling of canvas root. So padding of ec container\n    // should be considered here.\n    var zr = this._zr;\n    var viewportRootOffset;\n\n    if (zr && zr.painter && (viewportRootOffset = zr.painter.getViewportRootOffset())) {\n      x += viewportRootOffset.offsetLeft;\n      y += viewportRootOffset.offsetTop;\n    }\n\n    var style = this.el.style;\n    style.left = x + 'px';\n    style.top = y + 'px';\n    this._x = x;\n    this._y = y;\n  },\n  hide: function () {\n    this.el.style.display = 'none';\n    this._show = false;\n  },\n  hideLater: function (time) {\n    if (this._show && !(this._inContent && this._enterable)) {\n      if (time) {\n        this._hideDelay = time; // Set show false to avoid invoke hideLater mutiple times\n\n        this._show = false;\n        this._hideTimeout = setTimeout(zrUtil.bind(this.hide, this), time);\n      } else {\n        this.hide();\n      }\n    }\n  },\n  isShow: function () {\n    return this._show;\n  }\n};\nvar _default = TooltipContent;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/tooltip/TooltipContent.js\n// module id = 1699\n// module chunks = 2 3","var echarts = require(\"../../echarts\");\n\nvar _default = echarts.extendComponentModel({\n  type: 'tooltip',\n  dependencies: ['axisPointer'],\n  defaultOption: {\n    zlevel: 0,\n    z: 8,\n    show: true,\n    // tooltip主体内容\n    showContent: true,\n    // 'trigger' only works on coordinate system.\n    // 'item' | 'axis' | 'none'\n    trigger: 'item',\n    // 'click' | 'mousemove' | 'none'\n    triggerOn: 'mousemove|click',\n    alwaysShowContent: false,\n    displayMode: 'single',\n    // 'single' | 'multipleByCoordSys'\n    // 位置 {Array} | {Function}\n    // position: null\n    // Consider triggered from axisPointer handle, verticalAlign should be 'middle'\n    // align: null,\n    // verticalAlign: null,\n    // 是否约束 content 在 viewRect 中。默认 false 是为了兼容以前版本。\n    confine: false,\n    // 内容格式器：{string}（Template） ¦ {Function}\n    // formatter: null\n    showDelay: 0,\n    // 隐藏延迟，单位ms\n    hideDelay: 100,\n    // 动画变换时间，单位s\n    transitionDuration: 0.4,\n    enterable: false,\n    // 提示背景颜色，默认为透明度为0.7的黑色\n    backgroundColor: 'rgba(50,50,50,0.7)',\n    // 提示边框颜色\n    borderColor: '#333',\n    // 提示边框圆角，单位px，默认为4\n    borderRadius: 4,\n    // 提示边框线宽，单位px，默认为0（无边框）\n    borderWidth: 0,\n    // 提示内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    padding: 5,\n    // Extra css text\n    extraCssText: '',\n    // 坐标轴指示器，坐标轴触发有效\n    axisPointer: {\n      // 默认为直线\n      // 可选为：'line' | 'shadow' | 'cross'\n      type: 'line',\n      // type 为 line 的时候有效，指定 tooltip line 所在的轴，可选\n      // 可选 'x' | 'y' | 'angle' | 'radius' | 'auto'\n      // 默认 'auto'，会选择类型为 cateogry 的轴，对于双数值轴，笛卡尔坐标系会默认选择 x 轴\n      // 极坐标系会默认选择 angle 轴\n      axis: 'auto',\n      animation: 'auto',\n      animationDurationUpdate: 200,\n      animationEasingUpdate: 'exponentialOut',\n      crossStyle: {\n        color: '#999',\n        width: 1,\n        type: 'dashed',\n        // TODO formatter\n        textStyle: {} // lineStyle and shadowStyle should not be specified here,\n        // otherwise it will always override those styles on option.axisPointer.\n\n      }\n    },\n    textStyle: {\n      color: '#fff',\n      fontSize: 14\n    }\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/tooltip/TooltipModel.js\n// module id = 1700\n// module chunks = 2 3","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar TooltipContent = require(\"./TooltipContent\");\n\nvar formatUtil = require(\"../../util/format\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar findPointFromSeries = require(\"../axisPointer/findPointFromSeries\");\n\nvar layoutUtil = require(\"../../util/layout\");\n\nvar Model = require(\"../../model/Model\");\n\nvar globalListener = require(\"../axisPointer/globalListener\");\n\nvar axisHelper = require(\"../../coord/axisHelper\");\n\nvar axisPointerViewHelper = require(\"../axisPointer/viewHelper\");\n\nvar bind = zrUtil.bind;\nvar each = zrUtil.each;\nvar parsePercent = numberUtil.parsePercent;\nvar proxyRect = new graphic.Rect({\n  shape: {\n    x: -1,\n    y: -1,\n    width: 2,\n    height: 2\n  }\n});\n\nvar _default = echarts.extendComponentView({\n  type: 'tooltip',\n  init: function (ecModel, api) {\n    if (env.node) {\n      return;\n    }\n\n    var tooltipContent = new TooltipContent(api.getDom(), api);\n    this._tooltipContent = tooltipContent;\n  },\n  render: function (tooltipModel, ecModel, api) {\n    if (env.node) {\n      return;\n    } // Reset\n\n\n    this.group.removeAll();\n    /**\n     * @private\n     * @type {module:echarts/component/tooltip/TooltipModel}\n     */\n\n    this._tooltipModel = tooltipModel;\n    /**\n     * @private\n     * @type {module:echarts/model/Global}\n     */\n\n    this._ecModel = ecModel;\n    /**\n     * @private\n     * @type {module:echarts/ExtensionAPI}\n     */\n\n    this._api = api;\n    /**\n     * Should be cleaned when render.\n     * @private\n     * @type {Array.<Array.<Object>>}\n     */\n\n    this._lastDataByCoordSys = null;\n    /**\n     * @private\n     * @type {boolean}\n     */\n\n    this._alwaysShowContent = tooltipModel.get('alwaysShowContent');\n    var tooltipContent = this._tooltipContent;\n    tooltipContent.update();\n    tooltipContent.setEnterable(tooltipModel.get('enterable'));\n\n    this._initGlobalListener();\n\n    this._keepShow();\n  },\n  _initGlobalListener: function () {\n    var tooltipModel = this._tooltipModel;\n    var triggerOn = tooltipModel.get('triggerOn');\n    globalListener.register('itemTooltip', this._api, bind(function (currTrigger, e, dispatchAction) {\n      // If 'none', it is not controlled by mouse totally.\n      if (triggerOn !== 'none') {\n        if (triggerOn.indexOf(currTrigger) >= 0) {\n          this._tryShow(e, dispatchAction);\n        } else if (currTrigger === 'leave') {\n          this._hide(dispatchAction);\n        }\n      }\n    }, this));\n  },\n  _keepShow: function () {\n    var tooltipModel = this._tooltipModel;\n    var ecModel = this._ecModel;\n    var api = this._api; // Try to keep the tooltip show when refreshing\n\n    if (this._lastX != null && this._lastY != null // When user is willing to control tooltip totally using API,\n    // self.manuallyShowTip({x, y}) might cause tooltip hide,\n    // which is not expected.\n    && tooltipModel.get('triggerOn') !== 'none') {\n      var self = this;\n      clearTimeout(this._refreshUpdateTimeout);\n      this._refreshUpdateTimeout = setTimeout(function () {\n        // Show tip next tick after other charts are rendered\n        // In case highlight action has wrong result\n        // FIXME\n        self.manuallyShowTip(tooltipModel, ecModel, api, {\n          x: self._lastX,\n          y: self._lastY\n        });\n      });\n    }\n  },\n\n  /**\n   * Show tip manually by\n   * dispatchAction({\n   *     type: 'showTip',\n   *     x: 10,\n   *     y: 10\n   * });\n   * Or\n   * dispatchAction({\n   *      type: 'showTip',\n   *      seriesIndex: 0,\n   *      dataIndex or dataIndexInside or name\n   * });\n   *\n   *  TODO Batch\n   */\n  manuallyShowTip: function (tooltipModel, ecModel, api, payload) {\n    if (payload.from === this.uid || env.node) {\n      return;\n    }\n\n    var dispatchAction = makeDispatchAction(payload, api); // Reset ticket\n\n    this._ticket = ''; // When triggered from axisPointer.\n\n    var dataByCoordSys = payload.dataByCoordSys;\n\n    if (payload.tooltip && payload.x != null && payload.y != null) {\n      var el = proxyRect;\n      el.position = [payload.x, payload.y];\n      el.update();\n      el.tooltip = payload.tooltip; // Manually show tooltip while view is not using zrender elements.\n\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        target: el\n      }, dispatchAction);\n    } else if (dataByCoordSys) {\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        position: payload.position,\n        event: {},\n        dataByCoordSys: payload.dataByCoordSys,\n        tooltipOption: payload.tooltipOption\n      }, dispatchAction);\n    } else if (payload.seriesIndex != null) {\n      if (this._manuallyAxisShowTip(tooltipModel, ecModel, api, payload)) {\n        return;\n      }\n\n      var pointInfo = findPointFromSeries(payload, ecModel);\n      var cx = pointInfo.point[0];\n      var cy = pointInfo.point[1];\n\n      if (cx != null && cy != null) {\n        this._tryShow({\n          offsetX: cx,\n          offsetY: cy,\n          position: payload.position,\n          target: pointInfo.el,\n          event: {}\n        }, dispatchAction);\n      }\n    } else if (payload.x != null && payload.y != null) {\n      // FIXME\n      // should wrap dispatchAction like `axisPointer/globalListener` ?\n      api.dispatchAction({\n        type: 'updateAxisPointer',\n        x: payload.x,\n        y: payload.y\n      });\n\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        position: payload.position,\n        target: api.getZr().findHover(payload.x, payload.y).target,\n        event: {}\n      }, dispatchAction);\n    }\n  },\n  manuallyHideTip: function (tooltipModel, ecModel, api, payload) {\n    var tooltipContent = this._tooltipContent;\n\n    if (!this._alwaysShowContent) {\n      tooltipContent.hideLater(this._tooltipModel.get('hideDelay'));\n    }\n\n    this._lastX = this._lastY = null;\n\n    if (payload.from !== this.uid) {\n      this._hide(makeDispatchAction(payload, api));\n    }\n  },\n  // Be compatible with previous design, that is, when tooltip.type is 'axis' and\n  // dispatchAction 'showTip' with seriesIndex and dataIndex will trigger axis pointer\n  // and tooltip.\n  _manuallyAxisShowTip: function (tooltipModel, ecModel, api, payload) {\n    var seriesIndex = payload.seriesIndex;\n    var dataIndex = payload.dataIndex;\n    var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo;\n\n    if (seriesIndex == null || dataIndex == null || coordSysAxesInfo == null) {\n      return;\n    }\n\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n\n    if (!seriesModel) {\n      return;\n    }\n\n    var data = seriesModel.getData();\n    var tooltipModel = buildTooltipModel([data.getItemModel(dataIndex), seriesModel, (seriesModel.coordinateSystem || {}).model, tooltipModel]);\n\n    if (tooltipModel.get('trigger') !== 'axis') {\n      return;\n    }\n\n    api.dispatchAction({\n      type: 'updateAxisPointer',\n      seriesIndex: seriesIndex,\n      dataIndex: dataIndex,\n      position: payload.position\n    });\n    return true;\n  },\n  _tryShow: function (e, dispatchAction) {\n    var el = e.target;\n    var tooltipModel = this._tooltipModel;\n\n    if (!tooltipModel) {\n      return;\n    } // Save mouse x, mouse y. So we can try to keep showing the tip if chart is refreshed\n\n\n    this._lastX = e.offsetX;\n    this._lastY = e.offsetY;\n    var dataByCoordSys = e.dataByCoordSys;\n\n    if (dataByCoordSys && dataByCoordSys.length) {\n      this._showAxisTooltip(dataByCoordSys, e);\n    } // Always show item tooltip if mouse is on the element with dataIndex\n    else if (el && el.dataIndex != null) {\n        this._lastDataByCoordSys = null;\n\n        this._showSeriesItemTooltip(e, el, dispatchAction);\n      } // Tooltip provided directly. Like legend.\n      else if (el && el.tooltip) {\n          this._lastDataByCoordSys = null;\n\n          this._showComponentItemTooltip(e, el, dispatchAction);\n        } else {\n          this._lastDataByCoordSys = null;\n\n          this._hide(dispatchAction);\n        }\n  },\n  _showOrMove: function (tooltipModel, cb) {\n    // showDelay is used in this case: tooltip.enterable is set\n    // as true. User intent to move mouse into tooltip and click\n    // something. `showDelay` makes it easyer to enter the content\n    // but tooltip do not move immediately.\n    var delay = tooltipModel.get('showDelay');\n    cb = zrUtil.bind(cb, this);\n    clearTimeout(this._showTimout);\n    delay > 0 ? this._showTimout = setTimeout(cb, delay) : cb();\n  },\n  _showAxisTooltip: function (dataByCoordSys, e) {\n    var ecModel = this._ecModel;\n    var globalTooltipModel = this._tooltipModel;\n    var point = [e.offsetX, e.offsetY];\n    var singleDefaultHTML = [];\n    var singleParamsList = [];\n    var singleTooltipModel = buildTooltipModel([e.tooltipOption, globalTooltipModel]);\n    each(dataByCoordSys, function (itemCoordSys) {\n      // var coordParamList = [];\n      // var coordDefaultHTML = [];\n      // var coordTooltipModel = buildTooltipModel([\n      //     e.tooltipOption,\n      //     itemCoordSys.tooltipOption,\n      //     ecModel.getComponent(itemCoordSys.coordSysMainType, itemCoordSys.coordSysIndex),\n      //     globalTooltipModel\n      // ]);\n      // var displayMode = coordTooltipModel.get('displayMode');\n      // var paramsList = displayMode === 'single' ? singleParamsList : [];\n      each(itemCoordSys.dataByAxis, function (item) {\n        var axisModel = ecModel.getComponent(item.axisDim + 'Axis', item.axisIndex);\n        var axisValue = item.value;\n        var seriesDefaultHTML = [];\n\n        if (!axisModel || axisValue == null) {\n          return;\n        }\n\n        var valueLabel = axisPointerViewHelper.getValueLabel(axisValue, axisModel.axis, ecModel, item.seriesDataIndices, item.valueLabelOpt);\n        zrUtil.each(item.seriesDataIndices, function (idxItem) {\n          var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n          var dataIndex = idxItem.dataIndexInside;\n          var dataParams = series && series.getDataParams(dataIndex);\n          dataParams.axisDim = item.axisDim;\n          dataParams.axisIndex = item.axisIndex;\n          dataParams.axisType = item.axisType;\n          dataParams.axisId = item.axisId;\n          dataParams.axisValue = axisHelper.getAxisRawValue(axisModel.axis, axisValue);\n          dataParams.axisValueLabel = valueLabel;\n\n          if (dataParams) {\n            singleParamsList.push(dataParams);\n            seriesDefaultHTML.push(series.formatTooltip(dataIndex, true));\n          }\n        }); // Default tooltip content\n        // FIXME\n        // (1) shold be the first data which has name?\n        // (2) themeRiver, firstDataIndex is array, and first line is unnecessary.\n\n        var firstLine = valueLabel;\n        singleDefaultHTML.push((firstLine ? formatUtil.encodeHTML(firstLine) + '<br />' : '') + seriesDefaultHTML.join('<br />'));\n      });\n    }, this); // In most case, the second axis is shown upper than the first one.\n\n    singleDefaultHTML.reverse();\n    singleDefaultHTML = singleDefaultHTML.join('<br /><br />');\n    var positionExpr = e.position;\n\n    this._showOrMove(singleTooltipModel, function () {\n      if (this._updateContentNotChangedOnAxis(dataByCoordSys)) {\n        this._updatePosition(singleTooltipModel, positionExpr, point[0], point[1], this._tooltipContent, singleParamsList);\n      } else {\n        this._showTooltipContent(singleTooltipModel, singleDefaultHTML, singleParamsList, Math.random(), point[0], point[1], positionExpr);\n      }\n    }); // Do not trigger events here, because this branch only be entered\n    // from dispatchAction.\n\n  },\n  _showSeriesItemTooltip: function (e, el, dispatchAction) {\n    var ecModel = this._ecModel; // Use dataModel in element if possible\n    // Used when mouseover on a element like markPoint or edge\n    // In which case, the data is not main data in series.\n\n    var seriesIndex = el.seriesIndex;\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex); // For example, graph link.\n\n    var dataModel = el.dataModel || seriesModel;\n    var dataIndex = el.dataIndex;\n    var dataType = el.dataType;\n    var data = dataModel.getData();\n    var tooltipModel = buildTooltipModel([data.getItemModel(dataIndex), dataModel, seriesModel && (seriesModel.coordinateSystem || {}).model, this._tooltipModel]);\n    var tooltipTrigger = tooltipModel.get('trigger');\n\n    if (tooltipTrigger != null && tooltipTrigger !== 'item') {\n      return;\n    }\n\n    var params = dataModel.getDataParams(dataIndex, dataType);\n    var defaultHtml = dataModel.formatTooltip(dataIndex, false, dataType);\n    var asyncTicket = 'item_' + dataModel.name + '_' + dataIndex;\n\n    this._showOrMove(tooltipModel, function () {\n      this._showTooltipContent(tooltipModel, defaultHtml, params, asyncTicket, e.offsetX, e.offsetY, e.position, e.target);\n    }); // FIXME\n    // duplicated showtip if manuallyShowTip is called from dispatchAction.\n\n\n    dispatchAction({\n      type: 'showTip',\n      dataIndexInside: dataIndex,\n      dataIndex: data.getRawIndex(dataIndex),\n      seriesIndex: seriesIndex,\n      from: this.uid\n    });\n  },\n  _showComponentItemTooltip: function (e, el, dispatchAction) {\n    var tooltipOpt = el.tooltip;\n\n    if (typeof tooltipOpt === 'string') {\n      var content = tooltipOpt;\n      tooltipOpt = {\n        content: content,\n        // Fixed formatter\n        formatter: content\n      };\n    }\n\n    var subTooltipModel = new Model(tooltipOpt, this._tooltipModel, this._ecModel);\n    var defaultHtml = subTooltipModel.get('content');\n    var asyncTicket = Math.random(); // Do not check whether `trigger` is 'none' here, because `trigger`\n    // only works on cooridinate system. In fact, we have not found case\n    // that requires setting `trigger` nothing on component yet.\n\n    this._showOrMove(subTooltipModel, function () {\n      this._showTooltipContent(subTooltipModel, defaultHtml, subTooltipModel.get('formatterParams') || {}, asyncTicket, e.offsetX, e.offsetY, e.position, el);\n    }); // If not dispatch showTip, tip may be hide triggered by axis.\n\n\n    dispatchAction({\n      type: 'showTip',\n      from: this.uid\n    });\n  },\n  _showTooltipContent: function (tooltipModel, defaultHtml, params, asyncTicket, x, y, positionExpr, el) {\n    // Reset ticket\n    this._ticket = '';\n\n    if (!tooltipModel.get('showContent') || !tooltipModel.get('show')) {\n      return;\n    }\n\n    var tooltipContent = this._tooltipContent;\n    var formatter = tooltipModel.get('formatter');\n    positionExpr = positionExpr || tooltipModel.get('position');\n    var html = defaultHtml;\n\n    if (formatter && typeof formatter === 'string') {\n      html = formatUtil.formatTpl(formatter, params, true);\n    } else if (typeof formatter === 'function') {\n      var callback = bind(function (cbTicket, html) {\n        if (cbTicket === this._ticket) {\n          tooltipContent.setContent(html);\n\n          this._updatePosition(tooltipModel, positionExpr, x, y, tooltipContent, params, el);\n        }\n      }, this);\n      this._ticket = asyncTicket;\n      html = formatter(params, asyncTicket, callback);\n    }\n\n    tooltipContent.setContent(html);\n    tooltipContent.show(tooltipModel);\n\n    this._updatePosition(tooltipModel, positionExpr, x, y, tooltipContent, params, el);\n  },\n\n  /**\n   * @param  {string|Function|Array.<number>|Object} positionExpr\n   * @param  {number} x Mouse x\n   * @param  {number} y Mouse y\n   * @param  {boolean} confine Whether confine tooltip content in view rect.\n   * @param  {Object|<Array.<Object>} params\n   * @param  {module:zrender/Element} el target element\n   * @param  {module:echarts/ExtensionAPI} api\n   * @return {Array.<number>}\n   */\n  _updatePosition: function (tooltipModel, positionExpr, x, y, content, params, el) {\n    var viewWidth = this._api.getWidth();\n\n    var viewHeight = this._api.getHeight();\n\n    positionExpr = positionExpr || tooltipModel.get('position');\n    var contentSize = content.getSize();\n    var align = tooltipModel.get('align');\n    var vAlign = tooltipModel.get('verticalAlign');\n    var rect = el && el.getBoundingRect().clone();\n    el && rect.applyTransform(el.transform);\n\n    if (typeof positionExpr === 'function') {\n      // Callback of position can be an array or a string specify the position\n      positionExpr = positionExpr([x, y], params, content.el, rect, {\n        viewSize: [viewWidth, viewHeight],\n        contentSize: contentSize.slice()\n      });\n    }\n\n    if (zrUtil.isArray(positionExpr)) {\n      x = parsePercent(positionExpr[0], viewWidth);\n      y = parsePercent(positionExpr[1], viewHeight);\n    } else if (zrUtil.isObject(positionExpr)) {\n      positionExpr.width = contentSize[0];\n      positionExpr.height = contentSize[1];\n      var layoutRect = layoutUtil.getLayoutRect(positionExpr, {\n        width: viewWidth,\n        height: viewHeight\n      });\n      x = layoutRect.x;\n      y = layoutRect.y;\n      align = null; // When positionExpr is left/top/right/bottom,\n      // align and verticalAlign will not work.\n\n      vAlign = null;\n    } // Specify tooltip position by string 'top' 'bottom' 'left' 'right' around graphic element\n    else if (typeof positionExpr === 'string' && el) {\n        var pos = calcTooltipPosition(positionExpr, rect, contentSize);\n        x = pos[0];\n        y = pos[1];\n      } else {\n        var pos = refixTooltipPosition(x, y, content.el, viewWidth, viewHeight, align ? null : 20, vAlign ? null : 20);\n        x = pos[0];\n        y = pos[1];\n      }\n\n    align && (x -= isCenterAlign(align) ? contentSize[0] / 2 : align === 'right' ? contentSize[0] : 0);\n    vAlign && (y -= isCenterAlign(vAlign) ? contentSize[1] / 2 : vAlign === 'bottom' ? contentSize[1] : 0);\n\n    if (tooltipModel.get('confine')) {\n      var pos = confineTooltipPosition(x, y, content.el, viewWidth, viewHeight);\n      x = pos[0];\n      y = pos[1];\n    }\n\n    content.moveTo(x, y);\n  },\n  // FIXME\n  // Should we remove this but leave this to user?\n  _updateContentNotChangedOnAxis: function (dataByCoordSys) {\n    var lastCoordSys = this._lastDataByCoordSys;\n    var contentNotChanged = !!lastCoordSys && lastCoordSys.length === dataByCoordSys.length;\n    contentNotChanged && each(lastCoordSys, function (lastItemCoordSys, indexCoordSys) {\n      var lastDataByAxis = lastItemCoordSys.dataByAxis || {};\n      var thisItemCoordSys = dataByCoordSys[indexCoordSys] || {};\n      var thisDataByAxis = thisItemCoordSys.dataByAxis || [];\n      contentNotChanged &= lastDataByAxis.length === thisDataByAxis.length;\n      contentNotChanged && each(lastDataByAxis, function (lastItem, indexAxis) {\n        var thisItem = thisDataByAxis[indexAxis] || {};\n        var lastIndices = lastItem.seriesDataIndices || [];\n        var newIndices = thisItem.seriesDataIndices || [];\n        contentNotChanged &= lastItem.value === thisItem.value && lastItem.axisType === thisItem.axisType && lastItem.axisId === thisItem.axisId && lastIndices.length === newIndices.length;\n        contentNotChanged && each(lastIndices, function (lastIdxItem, j) {\n          var newIdxItem = newIndices[j];\n          contentNotChanged &= lastIdxItem.seriesIndex === newIdxItem.seriesIndex && lastIdxItem.dataIndex === newIdxItem.dataIndex;\n        });\n      });\n    });\n    this._lastDataByCoordSys = dataByCoordSys;\n    return !!contentNotChanged;\n  },\n  _hide: function (dispatchAction) {\n    // Do not directly hideLater here, because this behavior may be prevented\n    // in dispatchAction when showTip is dispatched.\n    // FIXME\n    // duplicated hideTip if manuallyHideTip is called from dispatchAction.\n    this._lastDataByCoordSys = null;\n    dispatchAction({\n      type: 'hideTip',\n      from: this.uid\n    });\n  },\n  dispose: function (ecModel, api) {\n    if (env.node) {\n      return;\n    }\n\n    this._tooltipContent.hide();\n\n    globalListener.unregister('itemTooltip', api);\n  }\n});\n/**\n * @param {Array.<Object|module:echarts/model/Model>} modelCascade\n * From top to bottom. (the last one should be globalTooltipModel);\n */\n\n\nfunction buildTooltipModel(modelCascade) {\n  var resultModel = modelCascade.pop();\n\n  while (modelCascade.length) {\n    var tooltipOpt = modelCascade.pop();\n\n    if (tooltipOpt) {\n      if (tooltipOpt instanceof Model) {\n        tooltipOpt = tooltipOpt.get('tooltip', true);\n      } // In each data item tooltip can be simply write:\n      // {\n      //  value: 10,\n      //  tooltip: 'Something you need to know'\n      // }\n\n\n      if (typeof tooltipOpt === 'string') {\n        tooltipOpt = {\n          formatter: tooltipOpt\n        };\n      }\n\n      resultModel = new Model(tooltipOpt, resultModel, resultModel.ecModel);\n    }\n  }\n\n  return resultModel;\n}\n\nfunction makeDispatchAction(payload, api) {\n  return payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n}\n\nfunction refixTooltipPosition(x, y, el, viewWidth, viewHeight, gapH, gapV) {\n  var size = getOuterSize(el);\n  var width = size.width;\n  var height = size.height;\n\n  if (gapH != null) {\n    if (x + width + gapH > viewWidth) {\n      x -= width + gapH;\n    } else {\n      x += gapH;\n    }\n  }\n\n  if (gapV != null) {\n    if (y + height + gapV > viewHeight) {\n      y -= height + gapV;\n    } else {\n      y += gapV;\n    }\n  }\n\n  return [x, y];\n}\n\nfunction confineTooltipPosition(x, y, el, viewWidth, viewHeight) {\n  var size = getOuterSize(el);\n  var width = size.width;\n  var height = size.height;\n  x = Math.min(x + width, viewWidth) - width;\n  y = Math.min(y + height, viewHeight) - height;\n  x = Math.max(x, 0);\n  y = Math.max(y, 0);\n  return [x, y];\n}\n\nfunction getOuterSize(el) {\n  var width = el.clientWidth;\n  var height = el.clientHeight; // Consider browser compatibility.\n  // IE8 does not support getComputedStyle.\n\n  if (document.defaultView && document.defaultView.getComputedStyle) {\n    var stl = document.defaultView.getComputedStyle(el);\n\n    if (stl) {\n      width += parseInt(stl.paddingLeft, 10) + parseInt(stl.paddingRight, 10) + parseInt(stl.borderLeftWidth, 10) + parseInt(stl.borderRightWidth, 10);\n      height += parseInt(stl.paddingTop, 10) + parseInt(stl.paddingBottom, 10) + parseInt(stl.borderTopWidth, 10) + parseInt(stl.borderBottomWidth, 10);\n    }\n  }\n\n  return {\n    width: width,\n    height: height\n  };\n}\n\nfunction calcTooltipPosition(position, rect, contentSize) {\n  var domWidth = contentSize[0];\n  var domHeight = contentSize[1];\n  var gap = 5;\n  var x = 0;\n  var y = 0;\n  var rectWidth = rect.width;\n  var rectHeight = rect.height;\n\n  switch (position) {\n    case 'inside':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n      break;\n\n    case 'top':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y - domHeight - gap;\n      break;\n\n    case 'bottom':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y + rectHeight + gap;\n      break;\n\n    case 'left':\n      x = rect.x - domWidth - gap;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n      break;\n\n    case 'right':\n      x = rect.x + rectWidth + gap;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n  }\n\n  return [x, y];\n}\n\nfunction isCenterAlign(align) {\n  return align === 'center' || align === 'middle';\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/tooltip/TooltipView.js\n// module id = 1701\n// module chunks = 2 3","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar defaultOption = {\n  show: true,\n  zlevel: 0,\n  // 一级层叠\n  z: 0,\n  // 二级层叠\n  // 反向坐标轴\n  inverse: false,\n  // 坐标轴名字，默认为空\n  name: '',\n  // 坐标轴名字位置，支持'start' | 'middle' | 'end'\n  nameLocation: 'end',\n  // 坐标轴名字旋转，degree。\n  nameRotate: null,\n  // Adapt to axis rotate, when nameLocation is 'middle'.\n  nameTruncate: {\n    maxWidth: null,\n    ellipsis: '...',\n    placeholder: '.'\n  },\n  // 坐标轴文字样式，默认取全局样式\n  nameTextStyle: {},\n  // 文字与轴线距离\n  nameGap: 15,\n  silent: false,\n  // Default false to support tooltip.\n  triggerEvent: false,\n  // Default false to avoid legacy user event listener fail.\n  tooltip: {\n    show: false\n  },\n  axisPointer: {},\n  // 坐标轴线\n  axisLine: {\n    // 默认显示，属性show控制显示与否\n    show: true,\n    onZero: true,\n    onZeroAxisIndex: null,\n    // 属性lineStyle控制线条样式\n    lineStyle: {\n      color: '#333',\n      width: 1,\n      type: 'solid'\n    },\n    // 坐标轴两端的箭头\n    symbol: ['none', 'none'],\n    symbolSize: [10, 15]\n  },\n  // 坐标轴小标记\n  axisTick: {\n    // 属性show控制显示与否，默认显示\n    show: true,\n    // 控制小标记是否在grid里\n    inside: false,\n    // 属性length控制线长\n    length: 5,\n    // 属性lineStyle控制线条样式\n    lineStyle: {\n      width: 1\n    }\n  },\n  // 坐标轴文本标签，详见axis.axisLabel\n  axisLabel: {\n    show: true,\n    // 控制文本标签是否在grid里\n    inside: false,\n    rotate: 0,\n    showMinLabel: null,\n    // true | false | null (auto)\n    showMaxLabel: null,\n    // true | false | null (auto)\n    margin: 8,\n    // formatter: null,\n    // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n    fontSize: 12\n  },\n  // 分隔线\n  splitLine: {\n    // 默认显示，属性show控制显示与否\n    show: true,\n    // 属性lineStyle（详见lineStyle）控制线条样式\n    lineStyle: {\n      color: ['#ccc'],\n      width: 1,\n      type: 'solid'\n    }\n  },\n  // 分隔区域\n  splitArea: {\n    // 默认不显示，属性show控制显示与否\n    show: false,\n    // 属性areaStyle（详见areaStyle）控制区域样式\n    areaStyle: {\n      color: ['rgba(250,250,250,0.3)', 'rgba(200,200,200,0.3)']\n    }\n  }\n};\nvar axisDefault = {};\naxisDefault.categoryAxis = zrUtil.merge({\n  // 类目起始和结束两端空白策略\n  boundaryGap: true,\n  // splitArea: {\n  // show: false\n  // },\n  splitLine: {\n    show: false\n  },\n  // 坐标轴小标记\n  axisTick: {\n    // If tick is align with label when boundaryGap is true\n    alignWithLabel: false,\n    interval: 'auto'\n  },\n  // 坐标轴文本标签，详见axis.axisLabel\n  axisLabel: {\n    interval: 'auto'\n  }\n}, defaultOption);\naxisDefault.valueAxis = zrUtil.merge({\n  // 数值起始和结束两端空白策略\n  boundaryGap: [0, 0],\n  // 最小值, 设置成 'dataMin' 则从数据中计算最小值\n  // min: null,\n  // 最大值，设置成 'dataMax' 则从数据中计算最大值\n  // max: null,\n  // Readonly prop, specifies start value of the range when using data zoom.\n  // rangeStart: null\n  // Readonly prop, specifies end value of the range when using data zoom.\n  // rangeEnd: null\n  // 脱离0值比例，放大聚焦到最终_min，_max区间\n  // scale: false,\n  // 分割段数，默认为5\n  splitNumber: 5 // Minimum interval\n  // minInterval: null\n  // maxInterval: null\n\n}, defaultOption); // FIXME\n\naxisDefault.timeAxis = zrUtil.defaults({\n  scale: true,\n  min: 'dataMin',\n  max: 'dataMax'\n}, axisDefault.valueAxis);\naxisDefault.logAxis = zrUtil.defaults({\n  scale: true,\n  logBase: 10\n}, axisDefault.valueAxis);\nvar _default = axisDefault;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/axisDefault.js\n// module id = 1702\n// module chunks = 2 3","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar axisDefault = require(\"./axisDefault\");\n\nvar ComponentModel = require(\"../model/Component\");\n\nvar _layout = require(\"../util/layout\");\n\nvar getLayoutParams = _layout.getLayoutParams;\nvar mergeLayoutParam = _layout.mergeLayoutParam;\n// FIXME axisType is fixed ?\nvar AXIS_TYPES = ['value', 'category', 'time', 'log'];\n/**\n * Generate sub axis model class\n * @param {string} axisName 'x' 'y' 'radius' 'angle' 'parallel'\n * @param {module:echarts/model/Component} BaseAxisModelClass\n * @param {Function} axisTypeDefaulter\n * @param {Object} [extraDefaultOption]\n */\n\nfunction _default(axisName, BaseAxisModelClass, axisTypeDefaulter, extraDefaultOption) {\n  zrUtil.each(AXIS_TYPES, function (axisType) {\n    BaseAxisModelClass.extend({\n      type: axisName + 'Axis.' + axisType,\n      mergeDefaultAndTheme: function (option, ecModel) {\n        var layoutMode = this.layoutMode;\n        var inputPositionParams = layoutMode ? getLayoutParams(option) : {};\n        var themeModel = ecModel.getTheme();\n        zrUtil.merge(option, themeModel.get(axisType + 'Axis'));\n        zrUtil.merge(option, this.getDefaultOption());\n        option.type = axisTypeDefaulter(axisName, option);\n\n        if (layoutMode) {\n          mergeLayoutParam(option, inputPositionParams, layoutMode);\n        }\n      },\n      defaultOption: zrUtil.mergeAll([{}, axisDefault[axisType + 'Axis'], extraDefaultOption], true)\n    });\n  });\n  ComponentModel.registerSubTypeDefaulter(axisName + 'Axis', zrUtil.curry(axisTypeDefaulter, axisName));\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/axisModelCreator.js\n// module id = 1703\n// module chunks = 2 3","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Axis = require(\"../Axis\");\n\n/**\n * Extend axis 2d\n * @constructor module:echarts/coord/cartesian/Axis2D\n * @extends {module:echarts/coord/cartesian/Axis}\n * @param {string} dim\n * @param {*} scale\n * @param {Array.<number>} coordExtent\n * @param {string} axisType\n * @param {string} position\n */\nvar Axis2D = function (dim, scale, coordExtent, axisType, position) {\n  Axis.call(this, dim, scale, coordExtent);\n  /**\n   * Axis type\n   *  - 'category'\n   *  - 'value'\n   *  - 'time'\n   *  - 'log'\n   * @type {string}\n   */\n\n  this.type = axisType || 'value';\n  /**\n   * Axis position\n   *  - 'top'\n   *  - 'bottom'\n   *  - 'left'\n   *  - 'right'\n   */\n\n  this.position = position || 'bottom';\n};\n\nAxis2D.prototype = {\n  constructor: Axis2D,\n\n  /**\n   * Index of axis, can be used as key\n   */\n  index: 0,\n\n  /**\n   * If axis is on the zero position of the other axis\n   * @type {boolean}\n   */\n  onZero: false,\n\n  /**\n   * Axis model\n   * @param {module:echarts/coord/cartesian/AxisModel}\n   */\n  model: null,\n  isHorizontal: function () {\n    var position = this.position;\n    return position === 'top' || position === 'bottom';\n  },\n\n  /**\n   * Each item cooresponds to this.getExtent(), which\n   * means globalExtent[0] may greater than globalExtent[1],\n   * unless `asc` is input.\n   *\n   * @param {boolean} [asc]\n   * @return {Array.<number>}\n   */\n  getGlobalExtent: function (asc) {\n    var ret = this.getExtent();\n    ret[0] = this.toGlobalCoord(ret[0]);\n    ret[1] = this.toGlobalCoord(ret[1]);\n    asc && ret[0] > ret[1] && ret.reverse();\n    return ret;\n  },\n  getOtherAxis: function () {\n    this.grid.getOtherAxis();\n  },\n\n  /**\n   * If label is ignored.\n   * Automatically used when axis is category and label can not be all shown\n   * @param  {number}  idx\n   * @return {boolean}\n   */\n  isLabelIgnored: function (idx) {\n    if (this.type === 'category') {\n      var labelInterval = this.getLabelInterval();\n      return typeof labelInterval === 'function' && !labelInterval(idx, this.scale.getLabel(idx)) || idx % (labelInterval + 1);\n    }\n  },\n\n  /**\n   * @override\n   */\n  pointToData: function (point, clamp) {\n    return this.coordToData(this.toLocalCoord(point[this.dim === 'x' ? 0 : 1]), clamp);\n  },\n\n  /**\n   * Transform global coord to local coord,\n   * i.e. var localCoord = axis.toLocalCoord(80);\n   * designate by module:echarts/coord/cartesian/Grid.\n   * @type {Function}\n   */\n  toLocalCoord: null,\n\n  /**\n   * Transform global coord to local coord,\n   * i.e. var globalCoord = axis.toLocalCoord(40);\n   * designate by module:echarts/coord/cartesian/Grid.\n   * @type {Function}\n   */\n  toGlobalCoord: null\n};\nzrUtil.inherits(Axis2D, Axis);\nvar _default = Axis2D;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/cartesian/Axis2D.js\n// module id = 1704\n// module chunks = 2 3","var zrUtil = require(\"zrender/lib/core/util\");\n\n/**\n * Cartesian coordinate system\n * @module  echarts/coord/Cartesian\n *\n */\nfunction dimAxisMapper(dim) {\n  return this._axes[dim];\n}\n/**\n * @alias module:echarts/coord/Cartesian\n * @constructor\n */\n\n\nvar Cartesian = function (name) {\n  this._axes = {};\n  this._dimList = [];\n  /**\n   * @type {string}\n   */\n\n  this.name = name || '';\n};\n\nCartesian.prototype = {\n  constructor: Cartesian,\n  type: 'cartesian',\n\n  /**\n   * Get axis\n   * @param  {number|string} dim\n   * @return {module:echarts/coord/Cartesian~Axis}\n   */\n  getAxis: function (dim) {\n    return this._axes[dim];\n  },\n\n  /**\n   * Get axes list\n   * @return {Array.<module:echarts/coord/Cartesian~Axis>}\n   */\n  getAxes: function () {\n    return zrUtil.map(this._dimList, dimAxisMapper, this);\n  },\n\n  /**\n   * Get axes list by given scale type\n   */\n  getAxesByScale: function (scaleType) {\n    scaleType = scaleType.toLowerCase();\n    return zrUtil.filter(this.getAxes(), function (axis) {\n      return axis.scale.type === scaleType;\n    });\n  },\n\n  /**\n   * Add axis\n   * @param {module:echarts/coord/Cartesian.Axis}\n   */\n  addAxis: function (axis) {\n    var dim = axis.dim;\n    this._axes[dim] = axis;\n\n    this._dimList.push(dim);\n  },\n\n  /**\n   * Convert data to coord in nd space\n   * @param {Array.<number>|Object.<string, number>} val\n   * @return {Array.<number>|Object.<string, number>}\n   */\n  dataToCoord: function (val) {\n    return this._dataCoordConvert(val, 'dataToCoord');\n  },\n\n  /**\n   * Convert coord in nd space to data\n   * @param  {Array.<number>|Object.<string, number>} val\n   * @return {Array.<number>|Object.<string, number>}\n   */\n  coordToData: function (val) {\n    return this._dataCoordConvert(val, 'coordToData');\n  },\n  _dataCoordConvert: function (input, method) {\n    var dimList = this._dimList;\n    var output = input instanceof Array ? [] : {};\n\n    for (var i = 0; i < dimList.length; i++) {\n      var dim = dimList[i];\n      var axis = this._axes[dim];\n      output[dim] = axis[method](input[dim]);\n    }\n\n    return output;\n  }\n};\nvar _default = Cartesian;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/cartesian/Cartesian.js\n// module id = 1705\n// module chunks = 2 3","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Cartesian = require(\"./Cartesian\");\n\nfunction Cartesian2D(name) {\n  Cartesian.call(this, name);\n}\n\nCartesian2D.prototype = {\n  constructor: Cartesian2D,\n  type: 'cartesian2d',\n\n  /**\n   * @type {Array.<string>}\n   * @readOnly\n   */\n  dimensions: ['x', 'y'],\n\n  /**\n   * Base axis will be used on stacking.\n   *\n   * @return {module:echarts/coord/cartesian/Axis2D}\n   */\n  getBaseAxis: function () {\n    return this.getAxesByScale('ordinal')[0] || this.getAxesByScale('time')[0] || this.getAxis('x');\n  },\n\n  /**\n   * If contain point\n   * @param {Array.<number>} point\n   * @return {boolean}\n   */\n  containPoint: function (point) {\n    var axisX = this.getAxis('x');\n    var axisY = this.getAxis('y');\n    return axisX.contain(axisX.toLocalCoord(point[0])) && axisY.contain(axisY.toLocalCoord(point[1]));\n  },\n\n  /**\n   * If contain data\n   * @param {Array.<number>} data\n   * @return {boolean}\n   */\n  containData: function (data) {\n    return this.getAxis('x').containData(data[0]) && this.getAxis('y').containData(data[1]);\n  },\n\n  /**\n   * @param {Array.<number>} data\n   * @param {boolean} [clamp=false]\n   * @return {Array.<number>}\n   */\n  dataToPoint: function (data, clamp) {\n    var xAxis = this.getAxis('x');\n    var yAxis = this.getAxis('y');\n    return [xAxis.toGlobalCoord(xAxis.dataToCoord(data[0], clamp)), yAxis.toGlobalCoord(yAxis.dataToCoord(data[1], clamp))];\n  },\n\n  /**\n   * @param {Array.<number>} point\n   * @param {boolean} [clamp=false]\n   * @return {Array.<number>}\n   */\n  pointToData: function (point, clamp) {\n    var xAxis = this.getAxis('x');\n    var yAxis = this.getAxis('y');\n    return [xAxis.coordToData(xAxis.toLocalCoord(point[0]), clamp), yAxis.coordToData(yAxis.toLocalCoord(point[1]), clamp)];\n  },\n\n  /**\n   * Get other axis\n   * @param {module:echarts/coord/cartesian/Axis2D} axis\n   */\n  getOtherAxis: function (axis) {\n    return this.getAxis(axis.dim === 'x' ? 'y' : 'x');\n  }\n};\nzrUtil.inherits(Cartesian2D, Cartesian);\nvar _default = Cartesian2D;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/cartesian/Cartesian2D.js\n// module id = 1706\n// module chunks = 2 3","require(\"./AxisModel\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\n// Grid 是在有直角坐标系的时候必须要存在的\n// 所以这里也要被 Cartesian2D 依赖\nvar _default = ComponentModel.extend({\n  type: 'grid',\n  dependencies: ['xAxis', 'yAxis'],\n  layoutMode: 'box',\n\n  /**\n   * @type {module:echarts/coord/cartesian/Grid}\n   */\n  coordinateSystem: null,\n  defaultOption: {\n    show: false,\n    zlevel: 0,\n    z: 0,\n    left: '10%',\n    top: 60,\n    right: '10%',\n    bottom: 60,\n    // If grid size contain label\n    containLabel: false,\n    // width: {totalWidth} - left - right,\n    // height: {totalHeight} - top - bottom,\n    backgroundColor: 'rgba(0,0,0,0)',\n    borderWidth: 1,\n    borderColor: '#ccc'\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/cartesian/GridModel.js\n// module id = 1707\n// module chunks = 2 3","var BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar bbox = require(\"zrender/lib/core/bbox\");\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n\nvar polygonContain = require(\"zrender/lib/contain/polygon\");\n\n/**\n * @module echarts/coord/geo/Region\n */\n\n/**\n * @param {string} name\n * @param {Array} geometries\n * @param {Array.<number>} cp\n */\nfunction Region(name, geometries, cp) {\n  /**\n   * @type {string}\n   * @readOnly\n   */\n  this.name = name;\n  /**\n   * @type {Array.<Array>}\n   * @readOnly\n   */\n\n  this.geometries = geometries;\n\n  if (!cp) {\n    var rect = this.getBoundingRect();\n    cp = [rect.x + rect.width / 2, rect.y + rect.height / 2];\n  } else {\n    cp = [cp[0], cp[1]];\n  }\n  /**\n   * @type {Array.<number>}\n   */\n\n\n  this.center = cp;\n}\n\nRegion.prototype = {\n  constructor: Region,\n  properties: null,\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getBoundingRect: function () {\n    var rect = this._rect;\n\n    if (rect) {\n      return rect;\n    }\n\n    var MAX_NUMBER = Number.MAX_VALUE;\n    var min = [MAX_NUMBER, MAX_NUMBER];\n    var max = [-MAX_NUMBER, -MAX_NUMBER];\n    var min2 = [];\n    var max2 = [];\n    var geometries = this.geometries;\n\n    for (var i = 0; i < geometries.length; i++) {\n      // Only support polygon\n      if (geometries[i].type !== 'polygon') {\n        continue;\n      } // Doesn't consider hole\n\n\n      var exterior = geometries[i].exterior;\n      bbox.fromPoints(exterior, min2, max2);\n      vec2.min(min, min, min2);\n      vec2.max(max, max, max2);\n    } // No data\n\n\n    if (i === 0) {\n      min[0] = min[1] = max[0] = max[1] = 0;\n    }\n\n    return this._rect = new BoundingRect(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n  },\n\n  /**\n   * @param {<Array.<number>} coord\n   * @return {boolean}\n   */\n  contain: function (coord) {\n    var rect = this.getBoundingRect();\n    var geometries = this.geometries;\n\n    if (!rect.contain(coord[0], coord[1])) {\n      return false;\n    }\n\n    loopGeo: for (var i = 0, len = geometries.length; i < len; i++) {\n      // Only support polygon.\n      if (geometries[i].type !== 'polygon') {\n        continue;\n      }\n\n      var exterior = geometries[i].exterior;\n      var interiors = geometries[i].interiors;\n\n      if (polygonContain.contain(exterior, coord[0], coord[1])) {\n        // Not in the region if point is in the hole.\n        for (var k = 0; k < (interiors ? interiors.length : 0); k++) {\n          if (polygonContain.contain(interiors[k])) {\n            continue loopGeo;\n          }\n        }\n\n        return true;\n      }\n    }\n\n    return false;\n  },\n  transformTo: function (x, y, width, height) {\n    var rect = this.getBoundingRect();\n    var aspect = rect.width / rect.height;\n\n    if (!width) {\n      width = aspect * height;\n    } else if (!height) {\n      height = width / aspect;\n    }\n\n    var target = new BoundingRect(x, y, width, height);\n    var transform = rect.calculateTransform(target);\n    var geometries = this.geometries;\n\n    for (var i = 0; i < geometries.length; i++) {\n      // Only support polygon.\n      if (geometries[i].type !== 'polygon') {\n        continue;\n      }\n\n      var exterior = geometries[i].exterior;\n      var interiors = geometries[i].interiors;\n\n      for (var p = 0; p < exterior.length; p++) {\n        vec2.applyTransform(exterior[p], exterior[p], transform);\n      }\n\n      for (var h = 0; h < (interiors ? interiors.length : 0); h++) {\n        for (var p = 0; p < interiors[h].length; p++) {\n          vec2.applyTransform(interiors[h][p], interiors[h][p], transform);\n        }\n      }\n    }\n\n    rect = this._rect;\n    rect.copy(target); // Update center\n\n    this.center = [rect.x + rect.width / 2, rect.y + rect.height / 2];\n  }\n};\nvar _default = Region;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/geo/Region.js\n// module id = 1708\n// module chunks = 2 3","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Region = require(\"./Region\");\n\n/**\n * Parse and decode geo json\n * @module echarts/coord/geo/parseGeoJson\n */\nfunction decode(json) {\n  if (!json.UTF8Encoding) {\n    return json;\n  }\n\n  var encodeScale = json.UTF8Scale;\n\n  if (encodeScale == null) {\n    encodeScale = 1024;\n  }\n\n  var features = json.features;\n\n  for (var f = 0; f < features.length; f++) {\n    var feature = features[f];\n    var geometry = feature.geometry;\n    var coordinates = geometry.coordinates;\n    var encodeOffsets = geometry.encodeOffsets;\n\n    for (var c = 0; c < coordinates.length; c++) {\n      var coordinate = coordinates[c];\n\n      if (geometry.type === 'Polygon') {\n        coordinates[c] = decodePolygon(coordinate, encodeOffsets[c], encodeScale);\n      } else if (geometry.type === 'MultiPolygon') {\n        for (var c2 = 0; c2 < coordinate.length; c2++) {\n          var polygon = coordinate[c2];\n          coordinate[c2] = decodePolygon(polygon, encodeOffsets[c][c2], encodeScale);\n        }\n      }\n    }\n  } // Has been decoded\n\n\n  json.UTF8Encoding = false;\n  return json;\n}\n\nfunction decodePolygon(coordinate, encodeOffsets, encodeScale) {\n  var result = [];\n  var prevX = encodeOffsets[0];\n  var prevY = encodeOffsets[1];\n\n  for (var i = 0; i < coordinate.length; i += 2) {\n    var x = coordinate.charCodeAt(i) - 64;\n    var y = coordinate.charCodeAt(i + 1) - 64; // ZigZag decoding\n\n    x = x >> 1 ^ -(x & 1);\n    y = y >> 1 ^ -(y & 1); // Delta deocding\n\n    x += prevX;\n    y += prevY;\n    prevX = x;\n    prevY = y; // Dequantize\n\n    result.push([x / encodeScale, y / encodeScale]);\n  }\n\n  return result;\n}\n/**\n * @alias module:echarts/coord/geo/parseGeoJson\n * @param {Object} geoJson\n * @return {module:zrender/container/Group}\n */\n\n\nfunction _default(geoJson) {\n  decode(geoJson);\n  return zrUtil.map(zrUtil.filter(geoJson.features, function (featureObj) {\n    // Output of mapshaper may have geometry null\n    return featureObj.geometry && featureObj.properties && featureObj.geometry.coordinates.length > 0;\n  }), function (featureObj) {\n    var properties = featureObj.properties;\n    var geo = featureObj.geometry;\n    var coordinates = geo.coordinates;\n    var geometries = [];\n\n    if (geo.type === 'Polygon') {\n      geometries.push({\n        type: 'polygon',\n        // According to the GeoJSON specification.\n        // First must be exterior, and the rest are all interior(holes).\n        exterior: coordinates[0],\n        interiors: coordinates.slice(1)\n      });\n    }\n\n    if (geo.type === 'MultiPolygon') {\n      zrUtil.each(coordinates, function (item) {\n        if (item[0]) {\n          geometries.push({\n            type: 'polygon',\n            exterior: item[0],\n            interiors: item.slice(1)\n          });\n        }\n      });\n    }\n\n    var region = new Region(properties.name, geometries, properties.cp);\n    region.properties = properties;\n    return region;\n  });\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/geo/parseGeoJson.js\n// module id = 1709\n// module chunks = 2 3","function defaultKeyGetter(item) {\n  return item;\n}\n/**\n * @param {Array} oldArr\n * @param {Array} newArr\n * @param {Function} oldKeyGetter\n * @param {Function} newKeyGetter\n * @param {Object} [context] Can be visited by this.context in callback.\n */\n\n\nfunction DataDiffer(oldArr, newArr, oldKeyGetter, newKeyGetter, context) {\n  this._old = oldArr;\n  this._new = newArr;\n  this._oldKeyGetter = oldKeyGetter || defaultKeyGetter;\n  this._newKeyGetter = newKeyGetter || defaultKeyGetter;\n  this.context = context;\n}\n\nDataDiffer.prototype = {\n  constructor: DataDiffer,\n\n  /**\n   * Callback function when add a data\n   */\n  add: function (func) {\n    this._add = func;\n    return this;\n  },\n\n  /**\n   * Callback function when update a data\n   */\n  update: function (func) {\n    this._update = func;\n    return this;\n  },\n\n  /**\n   * Callback function when remove a data\n   */\n  remove: function (func) {\n    this._remove = func;\n    return this;\n  },\n  execute: function () {\n    var oldArr = this._old;\n    var newArr = this._new;\n    var oldDataIndexMap = {};\n    var newDataIndexMap = {};\n    var oldDataKeyArr = [];\n    var newDataKeyArr = [];\n    var i;\n    initIndexMap(oldArr, oldDataIndexMap, oldDataKeyArr, '_oldKeyGetter', this);\n    initIndexMap(newArr, newDataIndexMap, newDataKeyArr, '_newKeyGetter', this); // Travel by inverted order to make sure order consistency\n    // when duplicate keys exists (consider newDataIndex.pop() below).\n    // For performance consideration, these code below do not look neat.\n\n    for (i = 0; i < oldArr.length; i++) {\n      var key = oldDataKeyArr[i];\n      var idx = newDataIndexMap[key]; // idx can never be empty array here. see 'set null' logic below.\n\n      if (idx != null) {\n        // Consider there is duplicate key (for example, use dataItem.name as key).\n        // We should make sure every item in newArr and oldArr can be visited.\n        var len = idx.length;\n\n        if (len) {\n          len === 1 && (newDataIndexMap[key] = null);\n          idx = idx.unshift();\n        } else {\n          newDataIndexMap[key] = null;\n        }\n\n        this._update && this._update(idx, i);\n      } else {\n        this._remove && this._remove(i);\n      }\n    }\n\n    for (var i = 0; i < newDataKeyArr.length; i++) {\n      var key = newDataKeyArr[i];\n\n      if (newDataIndexMap.hasOwnProperty(key)) {\n        var idx = newDataIndexMap[key];\n\n        if (idx == null) {\n          continue;\n        } // idx can never be empty array here. see 'set null' logic above.\n\n\n        if (!idx.length) {\n          this._add && this._add(idx);\n        } else {\n          for (var j = 0, len = idx.length; j < len; j++) {\n            this._add && this._add(idx[j]);\n          }\n        }\n      }\n    }\n  }\n};\n\nfunction initIndexMap(arr, map, keyArr, keyGetterName, dataDiffer) {\n  for (var i = 0; i < arr.length; i++) {\n    // Add prefix to avoid conflict with Object.prototype.\n    var key = '_ec_' + dataDiffer[keyGetterName](arr[i], i);\n    var existence = map[key];\n\n    if (existence == null) {\n      keyArr.push(key);\n      map[key] = i;\n    } else {\n      if (!existence.length) {\n        map[key] = existence = [existence];\n      }\n\n      existence.push(i);\n    }\n  }\n}\n\nvar _default = DataDiffer;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/data/DataDiffer.js\n// module id = 1710\n// module chunks = 2 3","var zrender = require(\"zrender/lib/zrender\");\n\nexports.zrender = zrender;\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nexports.matrix = matrix;\n\nvar vector = require(\"zrender/lib/core/vector\");\n\nexports.vector = vector;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar colorTool = require(\"zrender/lib/tool/color\");\n\nexports.color = colorTool;\n\nvar graphic = require(\"./util/graphic\");\n\nexports.graphic = graphic;\n\nvar numberUtil = require(\"./util/number\");\n\nexports.number = numberUtil;\n\nvar formatUtil = require(\"./util/format\");\n\nexports.format = formatUtil;\n\nvar _throttle = require(\"./util/throttle\");\n\nvar throttle = _throttle.throttle;\nexports.throttle = _throttle.throttle;\n\nvar ecHelper = require(\"./helper\");\n\nexports.helper = ecHelper;\n\nvar _List = require(\"./data/List\");\n\nexports.List = _List;\n\nvar _Model = require(\"./model/Model\");\n\nexports.Model = _Model;\n\nvar _Axis = require(\"./coord/Axis\");\n\nexports.Axis = _Axis;\n\nvar _env = require(\"zrender/lib/core/env\");\n\nexports.env = _env;\n\nvar _parseGeoJson = require(\"./coord/geo/parseGeoJson\");\n\nexports.parseGeoJson = _parseGeoJson;\n\n/**\n * Do not mount those modules on 'src/echarts' for better tree shaking.\n */\nvar ecUtil = {};\nzrUtil.each(['map', 'each', 'filter', 'indexOf', 'inherits', 'reduce', 'filter', 'bind', 'curry', 'isArray', 'isString', 'isObject', 'isFunction', 'extend', 'defaults', 'clone', 'merge'], function (name) {\n  ecUtil[name] = zrUtil[name];\n});\nexports.util = ecUtil;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/export.js\n// module id = 1711\n// module chunks = 2 3","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar createListFromArray = require(\"./chart/helper/createListFromArray\");\n\nvar axisHelper = require(\"./coord/axisHelper\");\n\nvar axisModelCommonMixin = require(\"./coord/axisModelCommonMixin\");\n\nvar Model = require(\"./model/Model\");\n\nvar _completeDimensions = require(\"./data/helper/completeDimensions\");\n\nexports.completeDimensions = _completeDimensions;\n\nvar _symbol = require(\"./util/symbol\");\n\nexports.createSymbol = _symbol.createSymbol;\n\n/**\n * Create a muti dimension List structure from seriesModel.\n * @param  {module:echarts/model/Model} seriesModel\n * @return {module:echarts/data/List} list\n */\nfunction createList(seriesModel) {\n  var data = seriesModel.get('data');\n  return createListFromArray(data, seriesModel, seriesModel.ecModel);\n}\n/**\n * @see {module:echarts/data/helper/completeDimensions}\n */\n\n\n/**\n * Create scale\n * @param {Array.<number>} dataExtent\n * @param {Object|module:echarts/Model} option\n */\nfunction createScale(dataExtent, option) {\n  var axisModel = option;\n\n  if (!(option instanceof Model)) {\n    axisModel = new Model(option);\n    zrUtil.mixin(axisModel, axisModelCommonMixin);\n  }\n\n  var scale = axisHelper.createScaleByModel(axisModel);\n  scale.setExtent(dataExtent[0], dataExtent[1]);\n  axisHelper.niceScaleExtent(scale, axisModel);\n  return scale;\n}\n/**\n * Mixin common methods to axis model,\n *\n * Inlcude methods\n * `getFormattedLabels() => Array.<string>`\n * `getCategories() => Array.<string>`\n * `getMin(origin: boolean) => number`\n * `getMax(origin: boolean) => number`\n * `getNeedCrossZero() => boolean`\n * `setRange(start: number, end: number)`\n * `resetRange()`\n */\n\n\nfunction mixinAxisModelCommonMethods(Model) {\n  zrUtil.mixin(Model, axisModelCommonMixin);\n}\n\nexports.createList = createList;\nexports.createScale = createScale;\nexports.mixinAxisModelCommonMethods = mixinAxisModelCommonMethods;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/helper.js\n// module id = 1712\n// module chunks = 2 3","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _number = require(\"../util/number\");\n\nvar parsePercent = _number.parsePercent;\nvar STACK_PREFIX = '__ec_stack_';\n\nfunction getSeriesStackId(seriesModel) {\n  return seriesModel.get('stack') || STACK_PREFIX + seriesModel.seriesIndex;\n}\n\nfunction getAxisKey(axis) {\n  return axis.dim + axis.index;\n}\n/**\n * @param {Object} opt\n * @param {module:echarts/coord/Axis} opt.axis Only support category axis currently.\n * @param {number} opt.count Positive interger.\n * @param {number} [opt.barWidth]\n * @param {number} [opt.barMaxWidth]\n * @param {number} [opt.barGap]\n * @param {number} [opt.barCategoryGap]\n * @return {Object} {width, offset, offsetCenter} If axis.type is not 'category', return undefined.\n */\n\n\nfunction getLayoutOnAxis(opt, api) {\n  var params = [];\n  var baseAxis = opt.axis;\n  var axisKey = 'axis0';\n\n  if (baseAxis.type !== 'category') {\n    return;\n  }\n\n  var bandWidth = baseAxis.getBandWidth();\n\n  for (var i = 0; i < opt.count || 0; i++) {\n    params.push(zrUtil.defaults({\n      bandWidth: bandWidth,\n      axisKey: axisKey,\n      stackId: STACK_PREFIX + i\n    }, opt));\n  }\n\n  var widthAndOffsets = doCalBarWidthAndOffset(params, api);\n  var result = [];\n\n  for (var i = 0; i < opt.count; i++) {\n    var item = widthAndOffsets[axisKey][STACK_PREFIX + i];\n    item.offsetCenter = item.offset + item.width / 2;\n    result.push(item);\n  }\n\n  return result;\n}\n\nfunction calBarWidthAndOffset(barSeries, api) {\n  var seriesInfoList = zrUtil.map(barSeries, function (seriesModel) {\n    var data = seriesModel.getData();\n    var cartesian = seriesModel.coordinateSystem;\n    var baseAxis = cartesian.getBaseAxis();\n    var axisExtent = baseAxis.getExtent();\n    var bandWidth = baseAxis.type === 'category' ? baseAxis.getBandWidth() : Math.abs(axisExtent[1] - axisExtent[0]) / data.count();\n    var barWidth = parsePercent(seriesModel.get('barWidth'), bandWidth);\n    var barMaxWidth = parsePercent(seriesModel.get('barMaxWidth'), bandWidth);\n    var barGap = seriesModel.get('barGap');\n    var barCategoryGap = seriesModel.get('barCategoryGap');\n    return {\n      bandWidth: bandWidth,\n      barWidth: barWidth,\n      barMaxWidth: barMaxWidth,\n      barGap: barGap,\n      barCategoryGap: barCategoryGap,\n      axisKey: getAxisKey(baseAxis),\n      stackId: getSeriesStackId(seriesModel)\n    };\n  });\n  return doCalBarWidthAndOffset(seriesInfoList, api);\n}\n\nfunction doCalBarWidthAndOffset(seriesInfoList, api) {\n  // Columns info on each category axis. Key is cartesian name\n  var columnsMap = {};\n  zrUtil.each(seriesInfoList, function (seriesInfo, idx) {\n    var axisKey = seriesInfo.axisKey;\n    var bandWidth = seriesInfo.bandWidth;\n    var columnsOnAxis = columnsMap[axisKey] || {\n      bandWidth: bandWidth,\n      remainedWidth: bandWidth,\n      autoWidthCount: 0,\n      categoryGap: '20%',\n      gap: '30%',\n      stacks: {}\n    };\n    var stacks = columnsOnAxis.stacks;\n    columnsMap[axisKey] = columnsOnAxis;\n    var stackId = seriesInfo.stackId;\n\n    if (!stacks[stackId]) {\n      columnsOnAxis.autoWidthCount++;\n    }\n\n    stacks[stackId] = stacks[stackId] || {\n      width: 0,\n      maxWidth: 0\n    }; // Caution: In a single coordinate system, these barGrid attributes\n    // will be shared by series. Consider that they have default values,\n    // only the attributes set on the last series will work.\n    // Do not change this fact unless there will be a break change.\n    // TODO\n\n    var barWidth = seriesInfo.barWidth;\n\n    if (barWidth && !stacks[stackId].width) {\n      // See #6312, do not restrict width.\n      stacks[stackId].width = barWidth;\n      barWidth = Math.min(columnsOnAxis.remainedWidth, barWidth);\n      columnsOnAxis.remainedWidth -= barWidth;\n    }\n\n    var barMaxWidth = seriesInfo.barMaxWidth;\n    barMaxWidth && (stacks[stackId].maxWidth = barMaxWidth);\n    var barGap = seriesInfo.barGap;\n    barGap != null && (columnsOnAxis.gap = barGap);\n    var barCategoryGap = seriesInfo.barCategoryGap;\n    barCategoryGap != null && (columnsOnAxis.categoryGap = barCategoryGap);\n  });\n  var result = {};\n  zrUtil.each(columnsMap, function (columnsOnAxis, coordSysName) {\n    result[coordSysName] = {};\n    var stacks = columnsOnAxis.stacks;\n    var bandWidth = columnsOnAxis.bandWidth;\n    var categoryGap = parsePercent(columnsOnAxis.categoryGap, bandWidth);\n    var barGapPercent = parsePercent(columnsOnAxis.gap, 1);\n    var remainedWidth = columnsOnAxis.remainedWidth;\n    var autoWidthCount = columnsOnAxis.autoWidthCount;\n    var autoWidth = (remainedWidth - categoryGap) / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\n    autoWidth = Math.max(autoWidth, 0); // Find if any auto calculated bar exceeded maxBarWidth\n\n    zrUtil.each(stacks, function (column, stack) {\n      var maxWidth = column.maxWidth;\n\n      if (maxWidth && maxWidth < autoWidth) {\n        maxWidth = Math.min(maxWidth, remainedWidth);\n\n        if (column.width) {\n          maxWidth = Math.min(maxWidth, column.width);\n        }\n\n        remainedWidth -= maxWidth;\n        column.width = maxWidth;\n        autoWidthCount--;\n      }\n    }); // Recalculate width again\n\n    autoWidth = (remainedWidth - categoryGap) / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\n    autoWidth = Math.max(autoWidth, 0);\n    var widthSum = 0;\n    var lastColumn;\n    zrUtil.each(stacks, function (column, idx) {\n      if (!column.width) {\n        column.width = autoWidth;\n      }\n\n      lastColumn = column;\n      widthSum += column.width * (1 + barGapPercent);\n    });\n\n    if (lastColumn) {\n      widthSum -= lastColumn.width * barGapPercent;\n    }\n\n    var offset = -widthSum / 2;\n    zrUtil.each(stacks, function (column, stackId) {\n      result[coordSysName][stackId] = result[coordSysName][stackId] || {\n        offset: offset,\n        width: column.width\n      };\n      offset += column.width * (1 + barGapPercent);\n    });\n  });\n  return result;\n}\n/**\n * @param {string} seriesType\n * @param {module:echarts/model/Global} ecModel\n * @param {module:echarts/ExtensionAPI} api\n */\n\n\nfunction barLayoutGrid(seriesType, ecModel, api) {\n  var barWidthAndOffset = calBarWidthAndOffset(zrUtil.filter(ecModel.getSeriesByType(seriesType), function (seriesModel) {\n    return !ecModel.isSeriesFiltered(seriesModel) && seriesModel.coordinateSystem && seriesModel.coordinateSystem.type === 'cartesian2d';\n  }));\n  var lastStackCoords = {};\n  var lastStackCoordsOrigin = {};\n  ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n    // Check series coordinate, do layout for cartesian2d only\n    if (seriesModel.coordinateSystem.type !== 'cartesian2d') {\n      return;\n    }\n\n    var data = seriesModel.getData();\n    var cartesian = seriesModel.coordinateSystem;\n    var baseAxis = cartesian.getBaseAxis();\n    var stackId = getSeriesStackId(seriesModel);\n    var columnLayoutInfo = barWidthAndOffset[getAxisKey(baseAxis)][stackId];\n    var columnOffset = columnLayoutInfo.offset;\n    var columnWidth = columnLayoutInfo.width;\n    var valueAxis = cartesian.getOtherAxis(baseAxis);\n    var barMinHeight = seriesModel.get('barMinHeight') || 0;\n    var valueAxisStart = baseAxis.onZero ? valueAxis.toGlobalCoord(valueAxis.dataToCoord(0)) : valueAxis.getGlobalExtent()[0];\n    var coordDims = [seriesModel.coordDimToDataDim('x')[0], seriesModel.coordDimToDataDim('y')[0]];\n    var coords = data.mapArray(coordDims, function (x, y) {\n      return cartesian.dataToPoint([x, y]);\n    }, true);\n    lastStackCoords[stackId] = lastStackCoords[stackId] || [];\n    lastStackCoordsOrigin[stackId] = lastStackCoordsOrigin[stackId] || []; // Fix #4243\n\n    data.setLayout({\n      offset: columnOffset,\n      size: columnWidth\n    });\n    data.each(seriesModel.coordDimToDataDim(valueAxis.dim)[0], function (value, idx) {\n      if (isNaN(value)) {\n        return;\n      }\n\n      if (!lastStackCoords[stackId][idx]) {\n        lastStackCoords[stackId][idx] = {\n          p: valueAxisStart,\n          // Positive stack\n          n: valueAxisStart // Negative stack\n\n        };\n        lastStackCoordsOrigin[stackId][idx] = {\n          p: valueAxisStart,\n          // Positive stack\n          n: valueAxisStart // Negative stack\n\n        };\n      }\n\n      var sign = value >= 0 ? 'p' : 'n';\n      var coord = coords[idx];\n      var lastCoord = lastStackCoords[stackId][idx][sign];\n      var lastCoordOrigin = lastStackCoordsOrigin[stackId][idx][sign];\n      var x;\n      var y;\n      var width;\n      var height;\n\n      if (valueAxis.isHorizontal()) {\n        x = lastCoord;\n        y = coord[1] + columnOffset;\n        width = coord[0] - lastCoordOrigin;\n        height = columnWidth;\n        lastStackCoordsOrigin[stackId][idx][sign] += width;\n\n        if (Math.abs(width) < barMinHeight) {\n          width = (width < 0 ? -1 : 1) * barMinHeight;\n        }\n\n        lastStackCoords[stackId][idx][sign] += width;\n      } else {\n        x = coord[0] + columnOffset;\n        y = lastCoord;\n        width = columnWidth;\n        height = coord[1] - lastCoordOrigin;\n        lastStackCoordsOrigin[stackId][idx][sign] += height;\n\n        if (Math.abs(height) < barMinHeight) {\n          // Include zero to has a positive bar\n          height = (height <= 0 ? -1 : 1) * barMinHeight;\n        }\n\n        lastStackCoords[stackId][idx][sign] += height;\n      }\n\n      data.setItemLayout(idx, {\n        x: x,\n        y: y,\n        width: width,\n        height: height\n      });\n    }, true);\n  }, this);\n}\n\nbarLayoutGrid.getLayoutOnAxis = getLayoutOnAxis;\nvar _default = barLayoutGrid;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/layout/barGrid.js\n// module id = 1713\n// module chunks = 2 3","function _default(seriesType, ecModel) {\n  ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n    var data = seriesModel.getData();\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (!coordSys) {\n      return;\n    }\n\n    var dims = [];\n    var coordDims = coordSys.dimensions;\n\n    for (var i = 0; i < coordDims.length; i++) {\n      dims.push(seriesModel.coordDimToDataDim(coordSys.dimensions[i])[0]);\n    }\n\n    if (dims.length === 1) {\n      data.each(dims[0], function (x, idx) {\n        // Also {Array.<number>}, not undefined to avoid if...else... statement\n        data.setItemLayout(idx, isNaN(x) ? [NaN, NaN] : coordSys.dataToPoint(x));\n      });\n    } else if (dims.length === 2) {\n      data.each(dims, function (x, y, idx) {\n        // Also {Array.<number>}, not undefined to avoid if...else... statement\n        data.setItemLayout(idx, isNaN(x) || isNaN(y) ? [NaN, NaN] : coordSys.dataToPoint([x, y]));\n      }, true);\n    }\n  });\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/layout/points.js\n// module id = 1714\n// module chunks = 2 3","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../util/graphic\");\n\nvar PI = Math.PI;\n/**\n * @param {module:echarts/ExtensionAPI} api\n * @param {Object} [opts]\n * @param {string} [opts.text]\n * @param {string} [opts.color]\n * @param {string} [opts.textColor]\n * @return {module:zrender/Element}\n */\n\nfunction _default(api, opts) {\n  opts = opts || {};\n  zrUtil.defaults(opts, {\n    text: 'loading',\n    color: '#c23531',\n    textColor: '#000',\n    maskColor: 'rgba(255, 255, 255, 0.8)',\n    zlevel: 0\n  });\n  var mask = new graphic.Rect({\n    style: {\n      fill: opts.maskColor\n    },\n    zlevel: opts.zlevel,\n    z: 10000\n  });\n  var arc = new graphic.Arc({\n    shape: {\n      startAngle: -PI / 2,\n      endAngle: -PI / 2 + 0.1,\n      r: 10\n    },\n    style: {\n      stroke: opts.color,\n      lineCap: 'round',\n      lineWidth: 5\n    },\n    zlevel: opts.zlevel,\n    z: 10001\n  });\n  var labelRect = new graphic.Rect({\n    style: {\n      fill: 'none',\n      text: opts.text,\n      textPosition: 'right',\n      textDistance: 10,\n      textFill: opts.textColor\n    },\n    zlevel: opts.zlevel,\n    z: 10001\n  });\n  arc.animateShape(true).when(1000, {\n    endAngle: PI * 3 / 2\n  }).start('circularInOut');\n  arc.animateShape(true).when(1000, {\n    startAngle: PI * 3 / 2\n  }).delay(300).start('circularInOut');\n  var group = new graphic.Group();\n  group.add(arc);\n  group.add(labelRect);\n  group.add(mask); // Inject resize\n\n  group.resize = function () {\n    var cx = api.getWidth() / 2;\n    var cy = api.getHeight() / 2;\n    arc.setShape({\n      cx: cx,\n      cy: cy\n    });\n    var r = arc.shape.r;\n    labelRect.setShape({\n      x: cx - r,\n      y: cy - r,\n      width: r * 2,\n      height: r * 2\n    });\n    mask.setShape({\n      x: 0,\n      y: 0,\n      width: api.getWidth(),\n      height: api.getHeight()\n    });\n  };\n\n  group.resize();\n  return group;\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/loading/default.js\n// module id = 1715\n// module chunks = 2 3","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../util/model\");\n\nvar Model = require(\"./Model\");\n\nvar ComponentModel = require(\"./Component\");\n\nvar globalDefault = require(\"./globalDefault\");\n\nvar colorPaletteMinin = require(\"./mixin/colorPalette\");\n\n/**\n * ECharts global model\n *\n * @module {echarts/model/Global}\n */\n\n/**\n * Caution: If the mechanism should be changed some day, these cases\n * should be considered:\n *\n * (1) In `merge option` mode, if using the same option to call `setOption`\n * many times, the result should be the same (try our best to ensure that).\n * (2) In `merge option` mode, if a component has no id/name specified, it\n * will be merged by index, and the result sequence of the components is\n * consistent to the original sequence.\n * (3) `reset` feature (in toolbox). Find detailed info in comments about\n * `mergeOption` in module:echarts/model/OptionManager.\n */\nvar each = zrUtil.each;\nvar filter = zrUtil.filter;\nvar map = zrUtil.map;\nvar isArray = zrUtil.isArray;\nvar indexOf = zrUtil.indexOf;\nvar isObject = zrUtil.isObject;\nvar OPTION_INNER_KEY = '\\0_ec_inner';\n/**\n * @alias module:echarts/model/Global\n *\n * @param {Object} option\n * @param {module:echarts/model/Model} parentModel\n * @param {Object} theme\n */\n\nvar GlobalModel = Model.extend({\n  constructor: GlobalModel,\n  init: function (option, parentModel, theme, optionManager) {\n    theme = theme || {};\n    this.option = null; // Mark as not initialized.\n\n    /**\n     * @type {module:echarts/model/Model}\n     * @private\n     */\n\n    this._theme = new Model(theme);\n    /**\n     * @type {module:echarts/model/OptionManager}\n     */\n\n    this._optionManager = optionManager;\n  },\n  setOption: function (option, optionPreprocessorFuncs) {\n    zrUtil.assert(!(OPTION_INNER_KEY in option), 'please use chart.getOption()');\n\n    this._optionManager.setOption(option, optionPreprocessorFuncs);\n\n    this.resetOption(null);\n  },\n\n  /**\n   * @param {string} type null/undefined: reset all.\n   *                      'recreate': force recreate all.\n   *                      'timeline': only reset timeline option\n   *                      'media': only reset media query option\n   * @return {boolean} Whether option changed.\n   */\n  resetOption: function (type) {\n    var optionChanged = false;\n    var optionManager = this._optionManager;\n\n    if (!type || type === 'recreate') {\n      var baseOption = optionManager.mountOption(type === 'recreate');\n\n      if (!this.option || type === 'recreate') {\n        initBase.call(this, baseOption);\n      } else {\n        this.restoreData();\n        this.mergeOption(baseOption);\n      }\n\n      optionChanged = true;\n    }\n\n    if (type === 'timeline' || type === 'media') {\n      this.restoreData();\n    }\n\n    if (!type || type === 'recreate' || type === 'timeline') {\n      var timelineOption = optionManager.getTimelineOption(this);\n      timelineOption && (this.mergeOption(timelineOption), optionChanged = true);\n    }\n\n    if (!type || type === 'recreate' || type === 'media') {\n      var mediaOptions = optionManager.getMediaOption(this, this._api);\n\n      if (mediaOptions.length) {\n        each(mediaOptions, function (mediaOption) {\n          this.mergeOption(mediaOption, optionChanged = true);\n        }, this);\n      }\n    }\n\n    return optionChanged;\n  },\n\n  /**\n   * @protected\n   */\n  mergeOption: function (newOption) {\n    var option = this.option;\n    var componentsMap = this._componentsMap;\n    var newCptTypes = []; // 如果不存在对应的 component model 则直接 merge\n\n    each(newOption, function (componentOption, mainType) {\n      if (componentOption == null) {\n        return;\n      }\n\n      if (!ComponentModel.hasClass(mainType)) {\n        option[mainType] = option[mainType] == null ? zrUtil.clone(componentOption) : zrUtil.merge(option[mainType], componentOption, true);\n      } else {\n        newCptTypes.push(mainType);\n      }\n    }); // FIXME OPTION 同步是否要改回原来的\n\n    ComponentModel.topologicalTravel(newCptTypes, ComponentModel.getAllClassMainTypes(), visitComponent, this);\n    this._seriesIndices = this._seriesIndices || [];\n\n    function visitComponent(mainType, dependencies) {\n      var newCptOptionList = modelUtil.normalizeToArray(newOption[mainType]);\n      var mapResult = modelUtil.mappingToExists(componentsMap.get(mainType), newCptOptionList);\n      modelUtil.makeIdAndName(mapResult); // Set mainType and complete subType.\n\n      each(mapResult, function (item, index) {\n        var opt = item.option;\n\n        if (isObject(opt)) {\n          item.keyInfo.mainType = mainType;\n          item.keyInfo.subType = determineSubType(mainType, opt, item.exist);\n        }\n      });\n      var dependentModels = getComponentsByTypes(componentsMap, dependencies);\n      option[mainType] = [];\n      componentsMap.set(mainType, []);\n      each(mapResult, function (resultItem, index) {\n        var componentModel = resultItem.exist;\n        var newCptOption = resultItem.option;\n        zrUtil.assert(isObject(newCptOption) || componentModel, 'Empty component definition'); // Consider where is no new option and should be merged using {},\n        // see removeEdgeAndAdd in topologicalTravel and\n        // ComponentModel.getAllClassMainTypes.\n\n        if (!newCptOption) {\n          componentModel.mergeOption({}, this);\n          componentModel.optionUpdated({}, false);\n        } else {\n          var ComponentModelClass = ComponentModel.getClass(mainType, resultItem.keyInfo.subType, true);\n\n          if (componentModel && componentModel instanceof ComponentModelClass) {\n            componentModel.name = resultItem.keyInfo.name;\n            componentModel.mergeOption(newCptOption, this);\n            componentModel.optionUpdated(newCptOption, false);\n          } else {\n            // PENDING Global as parent ?\n            var extraOpt = zrUtil.extend({\n              dependentModels: dependentModels,\n              componentIndex: index\n            }, resultItem.keyInfo);\n            componentModel = new ComponentModelClass(newCptOption, this, this, extraOpt);\n            zrUtil.extend(componentModel, extraOpt);\n            componentModel.init(newCptOption, this, this, extraOpt); // Call optionUpdated after init.\n            // newCptOption has been used as componentModel.option\n            // and may be merged with theme and default, so pass null\n            // to avoid confusion.\n\n            componentModel.optionUpdated(null, true);\n          }\n        }\n\n        componentsMap.get(mainType)[index] = componentModel;\n        option[mainType][index] = componentModel.option;\n      }, this); // Backup series for filtering.\n\n      if (mainType === 'series') {\n        this._seriesIndices = createSeriesIndices(componentsMap.get('series'));\n      }\n    }\n  },\n\n  /**\n   * Get option for output (cloned option and inner info removed)\n   * @public\n   * @return {Object}\n   */\n  getOption: function () {\n    var option = zrUtil.clone(this.option);\n    each(option, function (opts, mainType) {\n      if (ComponentModel.hasClass(mainType)) {\n        var opts = modelUtil.normalizeToArray(opts);\n\n        for (var i = opts.length - 1; i >= 0; i--) {\n          // Remove options with inner id.\n          if (modelUtil.isIdInner(opts[i])) {\n            opts.splice(i, 1);\n          }\n        }\n\n        option[mainType] = opts;\n      }\n    });\n    delete option[OPTION_INNER_KEY];\n    return option;\n  },\n\n  /**\n   * @return {module:echarts/model/Model}\n   */\n  getTheme: function () {\n    return this._theme;\n  },\n\n  /**\n   * @param {string} mainType\n   * @param {number} [idx=0]\n   * @return {module:echarts/model/Component}\n   */\n  getComponent: function (mainType, idx) {\n    var list = this._componentsMap.get(mainType);\n\n    if (list) {\n      return list[idx || 0];\n    }\n  },\n\n  /**\n   * If none of index and id and name used, return all components with mainType.\n   * @param {Object} condition\n   * @param {string} condition.mainType\n   * @param {string} [condition.subType] If ignore, only query by mainType\n   * @param {number|Array.<number>} [condition.index] Either input index or id or name.\n   * @param {string|Array.<string>} [condition.id] Either input index or id or name.\n   * @param {string|Array.<string>} [condition.name] Either input index or id or name.\n   * @return {Array.<module:echarts/model/Component>}\n   */\n  queryComponents: function (condition) {\n    var mainType = condition.mainType;\n\n    if (!mainType) {\n      return [];\n    }\n\n    var index = condition.index;\n    var id = condition.id;\n    var name = condition.name;\n\n    var cpts = this._componentsMap.get(mainType);\n\n    if (!cpts || !cpts.length) {\n      return [];\n    }\n\n    var result;\n\n    if (index != null) {\n      if (!isArray(index)) {\n        index = [index];\n      }\n\n      result = filter(map(index, function (idx) {\n        return cpts[idx];\n      }), function (val) {\n        return !!val;\n      });\n    } else if (id != null) {\n      var isIdArray = isArray(id);\n      result = filter(cpts, function (cpt) {\n        return isIdArray && indexOf(id, cpt.id) >= 0 || !isIdArray && cpt.id === id;\n      });\n    } else if (name != null) {\n      var isNameArray = isArray(name);\n      result = filter(cpts, function (cpt) {\n        return isNameArray && indexOf(name, cpt.name) >= 0 || !isNameArray && cpt.name === name;\n      });\n    } else {\n      // Return all components with mainType\n      result = cpts.slice();\n    }\n\n    return filterBySubType(result, condition);\n  },\n\n  /**\n   * The interface is different from queryComponents,\n   * which is convenient for inner usage.\n   *\n   * @usage\n   * var result = findComponents(\n   *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}}\n   * );\n   * var result = findComponents(\n   *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}}\n   * );\n   * var result = findComponents(\n   *     {mainType: 'series'},\n   *     function (model, index) {...}\n   * );\n   * // result like [component0, componnet1, ...]\n   *\n   * @param {Object} condition\n   * @param {string} condition.mainType Mandatory.\n   * @param {string} [condition.subType] Optional.\n   * @param {Object} [condition.query] like {xxxIndex, xxxId, xxxName},\n   *        where xxx is mainType.\n   *        If query attribute is null/undefined or has no index/id/name,\n   *        do not filtering by query conditions, which is convenient for\n   *        no-payload situations or when target of action is global.\n   * @param {Function} [condition.filter] parameter: component, return boolean.\n   * @return {Array.<module:echarts/model/Component>}\n   */\n  findComponents: function (condition) {\n    var query = condition.query;\n    var mainType = condition.mainType;\n    var queryCond = getQueryCond(query);\n    var result = queryCond ? this.queryComponents(queryCond) : this._componentsMap.get(mainType);\n    return doFilter(filterBySubType(result, condition));\n\n    function getQueryCond(q) {\n      var indexAttr = mainType + 'Index';\n      var idAttr = mainType + 'Id';\n      var nameAttr = mainType + 'Name';\n      return q && (q[indexAttr] != null || q[idAttr] != null || q[nameAttr] != null) ? {\n        mainType: mainType,\n        // subType will be filtered finally.\n        index: q[indexAttr],\n        id: q[idAttr],\n        name: q[nameAttr]\n      } : null;\n    }\n\n    function doFilter(res) {\n      return condition.filter ? filter(res, condition.filter) : res;\n    }\n  },\n\n  /**\n   * @usage\n   * eachComponent('legend', function (legendModel, index) {\n   *     ...\n   * });\n   * eachComponent(function (componentType, model, index) {\n   *     // componentType does not include subType\n   *     // (componentType is 'xxx' but not 'xxx.aa')\n   * });\n   * eachComponent(\n   *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}},\n   *     function (model, index) {...}\n   * );\n   * eachComponent(\n   *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}},\n   *     function (model, index) {...}\n   * );\n   *\n   * @param {string|Object=} mainType When mainType is object, the definition\n   *                                  is the same as the method 'findComponents'.\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachComponent: function (mainType, cb, context) {\n    var componentsMap = this._componentsMap;\n\n    if (typeof mainType === 'function') {\n      context = cb;\n      cb = mainType;\n      componentsMap.each(function (components, componentType) {\n        each(components, function (component, index) {\n          cb.call(context, componentType, component, index);\n        });\n      });\n    } else if (zrUtil.isString(mainType)) {\n      each(componentsMap.get(mainType), cb, context);\n    } else if (isObject(mainType)) {\n      var queryResult = this.findComponents(mainType);\n      each(queryResult, cb, context);\n    }\n  },\n\n  /**\n   * @param {string} name\n   * @return {Array.<module:echarts/model/Series>}\n   */\n  getSeriesByName: function (name) {\n    var series = this._componentsMap.get('series');\n\n    return filter(series, function (oneSeries) {\n      return oneSeries.name === name;\n    });\n  },\n\n  /**\n   * @param {number} seriesIndex\n   * @return {module:echarts/model/Series}\n   */\n  getSeriesByIndex: function (seriesIndex) {\n    return this._componentsMap.get('series')[seriesIndex];\n  },\n\n  /**\n   * @param {string} subType\n   * @return {Array.<module:echarts/model/Series>}\n   */\n  getSeriesByType: function (subType) {\n    var series = this._componentsMap.get('series');\n\n    return filter(series, function (oneSeries) {\n      return oneSeries.subType === subType;\n    });\n  },\n\n  /**\n   * @return {Array.<module:echarts/model/Series>}\n   */\n  getSeries: function () {\n    return this._componentsMap.get('series').slice();\n  },\n\n  /**\n   * After filtering, series may be different\n   * frome raw series.\n   *\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachSeries: function (cb, context) {\n    assertSeriesInitialized(this);\n    each(this._seriesIndices, function (rawSeriesIndex) {\n      var series = this._componentsMap.get('series')[rawSeriesIndex];\n\n      cb.call(context, series, rawSeriesIndex);\n    }, this);\n  },\n\n  /**\n   * Iterate raw series before filtered.\n   *\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachRawSeries: function (cb, context) {\n    each(this._componentsMap.get('series'), cb, context);\n  },\n\n  /**\n   * After filtering, series may be different.\n   * frome raw series.\n   *\n   * @parma {string} subType\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachSeriesByType: function (subType, cb, context) {\n    assertSeriesInitialized(this);\n    each(this._seriesIndices, function (rawSeriesIndex) {\n      var series = this._componentsMap.get('series')[rawSeriesIndex];\n\n      if (series.subType === subType) {\n        cb.call(context, series, rawSeriesIndex);\n      }\n    }, this);\n  },\n\n  /**\n   * Iterate raw series before filtered of given type.\n   *\n   * @parma {string} subType\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachRawSeriesByType: function (subType, cb, context) {\n    return each(this.getSeriesByType(subType), cb, context);\n  },\n\n  /**\n   * @param {module:echarts/model/Series} seriesModel\n   */\n  isSeriesFiltered: function (seriesModel) {\n    assertSeriesInitialized(this);\n    return zrUtil.indexOf(this._seriesIndices, seriesModel.componentIndex) < 0;\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getCurrentSeriesIndices: function () {\n    return (this._seriesIndices || []).slice();\n  },\n\n  /**\n   * @param {Function} cb\n   * @param {*} context\n   */\n  filterSeries: function (cb, context) {\n    assertSeriesInitialized(this);\n    var filteredSeries = filter(this._componentsMap.get('series'), cb, context);\n    this._seriesIndices = createSeriesIndices(filteredSeries);\n  },\n  restoreData: function () {\n    var componentsMap = this._componentsMap;\n    this._seriesIndices = createSeriesIndices(componentsMap.get('series'));\n    var componentTypes = [];\n    componentsMap.each(function (components, componentType) {\n      componentTypes.push(componentType);\n    });\n    ComponentModel.topologicalTravel(componentTypes, ComponentModel.getAllClassMainTypes(), function (componentType, dependencies) {\n      each(componentsMap.get(componentType), function (component) {\n        component.restoreData();\n      });\n    });\n  }\n});\n/**\n * @inner\n */\n\nfunction mergeTheme(option, theme) {\n  zrUtil.each(theme, function (themeItem, name) {\n    // 如果有 component model 则把具体的 merge 逻辑交给该 model 处理\n    if (!ComponentModel.hasClass(name)) {\n      if (typeof themeItem === 'object') {\n        option[name] = !option[name] ? zrUtil.clone(themeItem) : zrUtil.merge(option[name], themeItem, false);\n      } else {\n        if (option[name] == null) {\n          option[name] = themeItem;\n        }\n      }\n    }\n  });\n}\n\nfunction initBase(baseOption) {\n  baseOption = baseOption; // Using OPTION_INNER_KEY to mark that this option can not be used outside,\n  // i.e. `chart.setOption(chart.getModel().option);` is forbiden.\n\n  this.option = {};\n  this.option[OPTION_INNER_KEY] = 1;\n  /**\n   * Init with series: [], in case of calling findSeries method\n   * before series initialized.\n   * @type {Object.<string, Array.<module:echarts/model/Model>>}\n   * @private\n   */\n\n  this._componentsMap = zrUtil.createHashMap({\n    series: []\n  });\n  /**\n   * Mapping between filtered series list and raw series list.\n   * key: filtered series indices, value: raw series indices.\n   * @type {Array.<nubmer>}\n   * @private\n   */\n\n  this._seriesIndices = null;\n  mergeTheme(baseOption, this._theme.option); // TODO Needs clone when merging to the unexisted property\n\n  zrUtil.merge(baseOption, globalDefault, false);\n  this.mergeOption(baseOption);\n}\n/**\n * @inner\n * @param {Array.<string>|string} types model types\n * @return {Object} key: {string} type, value: {Array.<Object>} models\n */\n\n\nfunction getComponentsByTypes(componentsMap, types) {\n  if (!zrUtil.isArray(types)) {\n    types = types ? [types] : [];\n  }\n\n  var ret = {};\n  each(types, function (type) {\n    ret[type] = (componentsMap.get(type) || []).slice();\n  });\n  return ret;\n}\n/**\n * @inner\n */\n\n\nfunction determineSubType(mainType, newCptOption, existComponent) {\n  var subType = newCptOption.type ? newCptOption.type : existComponent ? existComponent.subType // Use determineSubType only when there is no existComponent.\n  : ComponentModel.determineSubType(mainType, newCptOption); // tooltip, markline, markpoint may always has no subType\n\n  return subType;\n}\n/**\n * @inner\n */\n\n\nfunction createSeriesIndices(seriesModels) {\n  return map(seriesModels, function (series) {\n    return series.componentIndex;\n  }) || [];\n}\n/**\n * @inner\n */\n\n\nfunction filterBySubType(components, condition) {\n  // Using hasOwnProperty for restrict. Consider\n  // subType is undefined in user payload.\n  return condition.hasOwnProperty('subType') ? filter(components, function (cpt) {\n    return cpt.subType === condition.subType;\n  }) : components;\n}\n/**\n * @inner\n */\n\n\nfunction assertSeriesInitialized(ecModel) {}\n\nzrUtil.mixin(GlobalModel, colorPaletteMinin);\nvar _default = GlobalModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/Global.js\n// module id = 1716\n// module chunks = 2 3","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../util/model\");\n\nvar ComponentModel = require(\"./Component\");\n\n/**\n * ECharts option manager\n *\n * @module {echarts/model/OptionManager}\n */\nvar each = zrUtil.each;\nvar clone = zrUtil.clone;\nvar map = zrUtil.map;\nvar merge = zrUtil.merge;\nvar QUERY_REG = /^(min|max)?(.+)$/;\n/**\n * TERM EXPLANATIONS:\n *\n * [option]:\n *\n *     An object that contains definitions of components. For example:\n *     var option = {\n *         title: {...},\n *         legend: {...},\n *         visualMap: {...},\n *         series: [\n *             {data: [...]},\n *             {data: [...]},\n *             ...\n *         ]\n *     };\n *\n * [rawOption]:\n *\n *     An object input to echarts.setOption. 'rawOption' may be an\n *     'option', or may be an object contains multi-options. For example:\n *     var option = {\n *         baseOption: {\n *             title: {...},\n *             legend: {...},\n *             series: [\n *                 {data: [...]},\n *                 {data: [...]},\n *                 ...\n *             ]\n *         },\n *         timeline: {...},\n *         options: [\n *             {title: {...}, series: {data: [...]}},\n *             {title: {...}, series: {data: [...]}},\n *             ...\n *         ],\n *         media: [\n *             {\n *                 query: {maxWidth: 320},\n *                 option: {series: {x: 20}, visualMap: {show: false}}\n *             },\n *             {\n *                 query: {minWidth: 320, maxWidth: 720},\n *                 option: {series: {x: 500}, visualMap: {show: true}}\n *             },\n *             {\n *                 option: {series: {x: 1200}, visualMap: {show: true}}\n *             }\n *         ]\n *     };\n *\n * @alias module:echarts/model/OptionManager\n * @param {module:echarts/ExtensionAPI} api\n */\n\nfunction OptionManager(api) {\n  /**\n   * @private\n   * @type {module:echarts/ExtensionAPI}\n   */\n  this._api = api;\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._timelineOptions = [];\n  /**\n   * @private\n   * @type {Array.<Object>}\n   */\n\n  this._mediaList = [];\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._mediaDefault;\n  /**\n   * -1, means default.\n   * empty means no media.\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._currentMediaIndices = [];\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._optionBackup;\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._newBaseOption;\n} // timeline.notMerge is not supported in ec3. Firstly there is rearly\n// case that notMerge is needed. Secondly supporting 'notMerge' requires\n// rawOption cloned and backuped when timeline changed, which does no\n// good to performance. What's more, that both timeline and setOption\n// method supply 'notMerge' brings complex and some problems.\n// Consider this case:\n// (step1) chart.setOption({timeline: {notMerge: false}, ...}, false);\n// (step2) chart.setOption({timeline: {notMerge: true}, ...}, false);\n\n\nOptionManager.prototype = {\n  constructor: OptionManager,\n\n  /**\n   * @public\n   * @param {Object} rawOption Raw option.\n   * @param {module:echarts/model/Global} ecModel\n   * @param {Array.<Function>} optionPreprocessorFuncs\n   * @return {Object} Init option\n   */\n  setOption: function (rawOption, optionPreprocessorFuncs) {\n    rawOption = clone(rawOption, true); // FIXME\n    // 如果 timeline options 或者 media 中设置了某个属性，而baseOption中没有设置，则进行警告。\n\n    var oldOptionBackup = this._optionBackup;\n    var newParsedOption = parseRawOption.call(this, rawOption, optionPreprocessorFuncs, !oldOptionBackup);\n    this._newBaseOption = newParsedOption.baseOption; // For setOption at second time (using merge mode);\n\n    if (oldOptionBackup) {\n      // Only baseOption can be merged.\n      mergeOption(oldOptionBackup.baseOption, newParsedOption.baseOption); // For simplicity, timeline options and media options do not support merge,\n      // that is, if you `setOption` twice and both has timeline options, the latter\n      // timeline opitons will not be merged to the formers, but just substitude them.\n\n      if (newParsedOption.timelineOptions.length) {\n        oldOptionBackup.timelineOptions = newParsedOption.timelineOptions;\n      }\n\n      if (newParsedOption.mediaList.length) {\n        oldOptionBackup.mediaList = newParsedOption.mediaList;\n      }\n\n      if (newParsedOption.mediaDefault) {\n        oldOptionBackup.mediaDefault = newParsedOption.mediaDefault;\n      }\n    } else {\n      this._optionBackup = newParsedOption;\n    }\n  },\n\n  /**\n   * @param {boolean} isRecreate\n   * @return {Object}\n   */\n  mountOption: function (isRecreate) {\n    var optionBackup = this._optionBackup; // TODO\n    // 如果没有reset功能则不clone。\n\n    this._timelineOptions = map(optionBackup.timelineOptions, clone);\n    this._mediaList = map(optionBackup.mediaList, clone);\n    this._mediaDefault = clone(optionBackup.mediaDefault);\n    this._currentMediaIndices = [];\n    return clone(isRecreate // this._optionBackup.baseOption, which is created at the first `setOption`\n    // called, and is merged into every new option by inner method `mergeOption`\n    // each time `setOption` called, can be only used in `isRecreate`, because\n    // its reliability is under suspicion. In other cases option merge is\n    // performed by `model.mergeOption`.\n    ? optionBackup.baseOption : this._newBaseOption);\n  },\n\n  /**\n   * @param {module:echarts/model/Global} ecModel\n   * @return {Object}\n   */\n  getTimelineOption: function (ecModel) {\n    var option;\n    var timelineOptions = this._timelineOptions;\n\n    if (timelineOptions.length) {\n      // getTimelineOption can only be called after ecModel inited,\n      // so we can get currentIndex from timelineModel.\n      var timelineModel = ecModel.getComponent('timeline');\n\n      if (timelineModel) {\n        option = clone(timelineOptions[timelineModel.getCurrentIndex()], true);\n      }\n    }\n\n    return option;\n  },\n\n  /**\n   * @param {module:echarts/model/Global} ecModel\n   * @return {Array.<Object>}\n   */\n  getMediaOption: function (ecModel) {\n    var ecWidth = this._api.getWidth();\n\n    var ecHeight = this._api.getHeight();\n\n    var mediaList = this._mediaList;\n    var mediaDefault = this._mediaDefault;\n    var indices = [];\n    var result = []; // No media defined.\n\n    if (!mediaList.length && !mediaDefault) {\n      return result;\n    } // Multi media may be applied, the latter defined media has higher priority.\n\n\n    for (var i = 0, len = mediaList.length; i < len; i++) {\n      if (applyMediaQuery(mediaList[i].query, ecWidth, ecHeight)) {\n        indices.push(i);\n      }\n    } // FIXME\n    // 是否mediaDefault应该强制用户设置，否则可能修改不能回归。\n\n\n    if (!indices.length && mediaDefault) {\n      indices = [-1];\n    }\n\n    if (indices.length && !indicesEquals(indices, this._currentMediaIndices)) {\n      result = map(indices, function (index) {\n        return clone(index === -1 ? mediaDefault.option : mediaList[index].option);\n      });\n    } // Otherwise return nothing.\n\n\n    this._currentMediaIndices = indices;\n    return result;\n  }\n};\n\nfunction parseRawOption(rawOption, optionPreprocessorFuncs, isNew) {\n  var timelineOptions = [];\n  var mediaList = [];\n  var mediaDefault;\n  var baseOption; // Compatible with ec2.\n\n  var timelineOpt = rawOption.timeline;\n\n  if (rawOption.baseOption) {\n    baseOption = rawOption.baseOption;\n  } // For timeline\n\n\n  if (timelineOpt || rawOption.options) {\n    baseOption = baseOption || {};\n    timelineOptions = (rawOption.options || []).slice();\n  } // For media query\n\n\n  if (rawOption.media) {\n    baseOption = baseOption || {};\n    var media = rawOption.media;\n    each(media, function (singleMedia) {\n      if (singleMedia && singleMedia.option) {\n        if (singleMedia.query) {\n          mediaList.push(singleMedia);\n        } else if (!mediaDefault) {\n          // Use the first media default.\n          mediaDefault = singleMedia;\n        }\n      }\n    });\n  } // For normal option\n\n\n  if (!baseOption) {\n    baseOption = rawOption;\n  } // Set timelineOpt to baseOption in ec3,\n  // which is convenient for merge option.\n\n\n  if (!baseOption.timeline) {\n    baseOption.timeline = timelineOpt;\n  } // Preprocess.\n\n\n  each([baseOption].concat(timelineOptions).concat(zrUtil.map(mediaList, function (media) {\n    return media.option;\n  })), function (option) {\n    each(optionPreprocessorFuncs, function (preProcess) {\n      preProcess(option, isNew);\n    });\n  });\n  return {\n    baseOption: baseOption,\n    timelineOptions: timelineOptions,\n    mediaDefault: mediaDefault,\n    mediaList: mediaList\n  };\n}\n/**\n * @see <http://www.w3.org/TR/css3-mediaqueries/#media1>\n * Support: width, height, aspectRatio\n * Can use max or min as prefix.\n */\n\n\nfunction applyMediaQuery(query, ecWidth, ecHeight) {\n  var realMap = {\n    width: ecWidth,\n    height: ecHeight,\n    aspectratio: ecWidth / ecHeight // lowser case for convenientce.\n\n  };\n  var applicatable = true;\n  zrUtil.each(query, function (value, attr) {\n    var matched = attr.match(QUERY_REG);\n\n    if (!matched || !matched[1] || !matched[2]) {\n      return;\n    }\n\n    var operator = matched[1];\n    var realAttr = matched[2].toLowerCase();\n\n    if (!compare(realMap[realAttr], value, operator)) {\n      applicatable = false;\n    }\n  });\n  return applicatable;\n}\n\nfunction compare(real, expect, operator) {\n  if (operator === 'min') {\n    return real >= expect;\n  } else if (operator === 'max') {\n    return real <= expect;\n  } else {\n    // Equals\n    return real === expect;\n  }\n}\n\nfunction indicesEquals(indices1, indices2) {\n  // indices is always order by asc and has only finite number.\n  return indices1.join(',') === indices2.join(',');\n}\n/**\n * Consider case:\n * `chart.setOption(opt1);`\n * Then user do some interaction like dataZoom, dataView changing.\n * `chart.setOption(opt2);`\n * Then user press 'reset button' in toolbox.\n *\n * After doing that all of the interaction effects should be reset, the\n * chart should be the same as the result of invoke\n * `chart.setOption(opt1); chart.setOption(opt2);`.\n *\n * Although it is not able ensure that\n * `chart.setOption(opt1); chart.setOption(opt2);` is equivalents to\n * `chart.setOption(merge(opt1, opt2));` exactly,\n * this might be the only simple way to implement that feature.\n *\n * MEMO: We've considered some other approaches:\n * 1. Each model handle its self restoration but not uniform treatment.\n *     (Too complex in logic and error-prone)\n * 2. Use a shadow ecModel. (Performace expensive)\n */\n\n\nfunction mergeOption(oldOption, newOption) {\n  newOption = newOption || {};\n  each(newOption, function (newCptOpt, mainType) {\n    if (newCptOpt == null) {\n      return;\n    }\n\n    var oldCptOpt = oldOption[mainType];\n\n    if (!ComponentModel.hasClass(mainType)) {\n      oldOption[mainType] = merge(oldCptOpt, newCptOpt, true);\n    } else {\n      newCptOpt = modelUtil.normalizeToArray(newCptOpt);\n      oldCptOpt = modelUtil.normalizeToArray(oldCptOpt);\n      var mapResult = modelUtil.mappingToExists(oldCptOpt, newCptOpt);\n      oldOption[mainType] = map(mapResult, function (item) {\n        return item.option && item.exist ? merge(item.exist, item.option, true) : item.exist || item.option;\n      });\n    }\n  });\n}\n\nvar _default = OptionManager;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/OptionManager.js\n// module id = 1717\n// module chunks = 2 3","var platform = ''; // Navigator not exists in node\n\nif (typeof navigator !== 'undefined') {\n  platform = navigator.platform || '';\n}\n\nvar _default = {\n  // 全图默认背景\n  // backgroundColor: 'rgba(0,0,0,0)',\n  // https://dribbble.com/shots/1065960-Infographic-Pie-chart-visualization\n  // color: ['#5793f3', '#d14a61', '#fd9c35', '#675bba', '#fec42c', '#dd4444', '#d4df5a', '#cd4870'],\n  // 浅色\n  // color: ['#bcd3bb', '#e88f70', '#edc1a5', '#9dc5c8', '#e1e8c8', '#7b7c68', '#e5b5b5', '#f0b489', '#928ea8', '#bda29a'],\n  // color: ['#cc5664', '#9bd6ec', '#ea946e', '#8acaaa', '#f1ec64', '#ee8686', '#a48dc1', '#5da6bc', '#b9dcae'],\n  // 深色\n  color: ['#c23531', '#2f4554', '#61a0a8', '#d48265', '#91c7ae', '#749f83', '#ca8622', '#bda29a', '#6e7074', '#546570', '#c4ccd3'],\n  // 默认需要 Grid 配置项\n  // grid: {},\n  // 主题，主题\n  textStyle: {\n    // color: '#000',\n    // decoration: 'none',\n    // PENDING\n    fontFamily: platform.match(/^Win/) ? 'Microsoft YaHei' : 'sans-serif',\n    // fontFamily: 'Arial, Verdana, sans-serif',\n    fontSize: 12,\n    fontStyle: 'normal',\n    fontWeight: 'normal'\n  },\n  // http://blogs.adobe.com/webplatform/2014/02/24/using-blend-modes-in-html-canvas/\n  // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n  // Default is source-over\n  blendMode: null,\n  animation: 'auto',\n  animationDuration: 1000,\n  animationDurationUpdate: 300,\n  animationEasing: 'exponentialOut',\n  animationEasingUpdate: 'cubicOut',\n  animationThreshold: 2000,\n  // Configuration for progressive/incremental rendering\n  progressiveThreshold: 3000,\n  progressive: 400,\n  // Threshold of if use single hover layer to optimize.\n  // It is recommended that `hoverLayerThreshold` is equivalent to or less than\n  // `progressiveThreshold`, otherwise hover will cause restart of progressive,\n  // which is unexpected.\n  // see example <echarts/test/heatmap-large.html>.\n  hoverLayerThreshold: 3000,\n  // See: module:echarts/scale/Time\n  useUTC: false\n};\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/globalDefault.js\n// module id = 1718\n// module chunks = 2 3","var makeStyleMapper = require(\"./makeStyleMapper\");\n\nvar getAreaStyle = makeStyleMapper([['fill', 'color'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['opacity'], ['shadowColor']]);\nvar _default = {\n  getAreaStyle: function (excludes, includes) {\n    return getAreaStyle(this, excludes, includes);\n  }\n};\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/mixin/areaStyle.js\n// module id = 1719\n// module chunks = 2 3","var _default = {\n  getBoxLayoutParams: function () {\n    return {\n      left: this.get('left'),\n      top: this.get('top'),\n      right: this.get('right'),\n      bottom: this.get('bottom'),\n      width: this.get('width'),\n      height: this.get('height')\n    };\n  }\n};\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/mixin/boxLayout.js\n// module id = 1720\n// module chunks = 2 3","var makeStyleMapper = require(\"./makeStyleMapper\");\n\nvar getItemStyle = makeStyleMapper([['fill', 'color'], ['stroke', 'borderColor'], ['lineWidth', 'borderWidth'], ['opacity'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor'], ['textPosition'], ['textAlign']]);\nvar _default = {\n  getItemStyle: function (excludes, includes) {\n    var style = getItemStyle(this, excludes, includes);\n    var lineDash = this.getBorderLineDash();\n    lineDash && (style.lineDash = lineDash);\n    return style;\n  },\n  getBorderLineDash: function () {\n    var lineType = this.get('borderType');\n    return lineType === 'solid' || lineType == null ? null : lineType === 'dashed' ? [5, 5] : [1, 1];\n  }\n};\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/mixin/itemStyle.js\n// module id = 1721\n// module chunks = 2 3","var makeStyleMapper = require(\"./makeStyleMapper\");\n\nvar getLineStyle = makeStyleMapper([['lineWidth', 'width'], ['stroke', 'color'], ['opacity'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor']]);\nvar _default = {\n  getLineStyle: function (excludes) {\n    var style = getLineStyle(this, excludes);\n    var lineDash = this.getLineDash(style.lineWidth);\n    lineDash && (style.lineDash = lineDash);\n    return style;\n  },\n  getLineDash: function (lineWidth) {\n    if (lineWidth == null) {\n      lineWidth = 1;\n    }\n\n    var lineType = this.get('type');\n    var dotSize = Math.max(lineWidth, 2);\n    var dashSize = lineWidth * 4;\n    return lineType === 'solid' || lineType == null ? null : lineType === 'dashed' ? [dashSize, dashSize] : [dotSize, dotSize];\n  }\n};\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/mixin/lineStyle.js\n// module id = 1722\n// module chunks = 2 3","var textContain = require(\"zrender/lib/contain/text\");\n\nvar graphicUtil = require(\"../../util/graphic\");\n\nvar PATH_COLOR = ['textStyle', 'color'];\nvar _default = {\n  /**\n   * Get color property or get color from option.textStyle.color\n   * @param {boolean} [isEmphasis]\n   * @return {string}\n   */\n  getTextColor: function (isEmphasis) {\n    var ecModel = this.ecModel;\n    return this.getShallow('color') || (!isEmphasis && ecModel ? ecModel.get(PATH_COLOR) : null);\n  },\n\n  /**\n   * Create font string from fontStyle, fontWeight, fontSize, fontFamily\n   * @return {string}\n   */\n  getFont: function () {\n    return graphicUtil.getFont({\n      fontStyle: this.getShallow('fontStyle'),\n      fontWeight: this.getShallow('fontWeight'),\n      fontSize: this.getShallow('fontSize'),\n      fontFamily: this.getShallow('fontFamily')\n    }, this.ecModel);\n  },\n  getTextRect: function (text) {\n    return textContain.getBoundingRect(text, this.getFont(), this.getShallow('align'), this.getShallow('verticalAlign') || this.getShallow('baseline'), this.getShallow('padding'), this.getShallow('rich'), this.getShallow('truncateText'));\n  }\n};\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/mixin/textStyle.js\n// module id = 1723\n// module chunks = 2 3","var _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\nvar isArray = _util.isArray;\nvar isObject = _util.isObject;\n\nvar compatStyle = require(\"./helper/compatStyle\");\n\nvar _model = require(\"../util/model\");\n\nvar normalizeToArray = _model.normalizeToArray;\n\n// Compatitable with 2.0\nfunction get(opt, path) {\n  path = path.split(',');\n  var obj = opt;\n\n  for (var i = 0; i < path.length; i++) {\n    obj = obj && obj[path[i]];\n\n    if (obj == null) {\n      break;\n    }\n  }\n\n  return obj;\n}\n\nfunction set(opt, path, val, overwrite) {\n  path = path.split(',');\n  var obj = opt;\n  var key;\n\n  for (var i = 0; i < path.length - 1; i++) {\n    key = path[i];\n\n    if (obj[key] == null) {\n      obj[key] = {};\n    }\n\n    obj = obj[key];\n  }\n\n  if (overwrite || obj[path[i]] == null) {\n    obj[path[i]] = val;\n  }\n}\n\nfunction compatLayoutProperties(option) {\n  each(LAYOUT_PROPERTIES, function (prop) {\n    if (prop[0] in option && !(prop[1] in option)) {\n      option[prop[1]] = option[prop[0]];\n    }\n  });\n}\n\nvar LAYOUT_PROPERTIES = [['x', 'left'], ['y', 'top'], ['x2', 'right'], ['y2', 'bottom']];\nvar COMPATITABLE_COMPONENTS = ['grid', 'geo', 'parallel', 'legend', 'toolbox', 'title', 'visualMap', 'dataZoom', 'timeline'];\nvar COMPATITABLE_SERIES = ['bar', 'boxplot', 'candlestick', 'chord', 'effectScatter', 'funnel', 'gauge', 'lines', 'graph', 'heatmap', 'line', 'map', 'parallel', 'pie', 'radar', 'sankey', 'scatter', 'treemap'];\n\nfunction _default(option, isTheme) {\n  compatStyle(option, isTheme); // Make sure series array for model initialization.\n\n  option.series = normalizeToArray(option.series);\n  each(option.series, function (seriesOpt) {\n    if (!isObject(seriesOpt)) {\n      return;\n    }\n\n    var seriesType = seriesOpt.type;\n\n    if (seriesType === 'pie' || seriesType === 'gauge') {\n      if (seriesOpt.clockWise != null) {\n        seriesOpt.clockwise = seriesOpt.clockWise;\n      }\n    }\n\n    if (seriesType === 'gauge') {\n      var pointerColor = get(seriesOpt, 'pointer.color');\n      pointerColor != null && set(seriesOpt, 'itemStyle.normal.color', pointerColor);\n    }\n\n    for (var i = 0; i < COMPATITABLE_SERIES.length; i++) {\n      if (COMPATITABLE_SERIES[i] === seriesOpt.type) {\n        compatLayoutProperties(seriesOpt);\n        break;\n      }\n    }\n  }); // dataRange has changed to visualMap\n\n  if (option.dataRange) {\n    option.visualMap = option.dataRange;\n  }\n\n  each(COMPATITABLE_COMPONENTS, function (componentName) {\n    var options = option[componentName];\n\n    if (options) {\n      if (!isArray(options)) {\n        options = [options];\n      }\n\n      each(options, function (option) {\n        compatLayoutProperties(option);\n      });\n    }\n  });\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/preprocessor/backwardCompat.js\n// module id = 1724\n// module chunks = 2 3","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar each = zrUtil.each;\nvar isObject = zrUtil.isObject;\nvar POSSIBLE_STYLES = ['areaStyle', 'lineStyle', 'nodeStyle', 'linkStyle', 'chordStyle', 'label', 'labelLine'];\n\nfunction compatItemStyle(opt) {\n  var itemStyleOpt = opt && opt.itemStyle;\n\n  if (!itemStyleOpt) {\n    return;\n  }\n\n  for (var i = 0, len = POSSIBLE_STYLES.length; i < len; i++) {\n    var styleName = POSSIBLE_STYLES[i];\n    var normalItemStyleOpt = itemStyleOpt.normal;\n    var emphasisItemStyleOpt = itemStyleOpt.emphasis;\n\n    if (normalItemStyleOpt && normalItemStyleOpt[styleName]) {\n      opt[styleName] = opt[styleName] || {};\n\n      if (!opt[styleName].normal) {\n        opt[styleName].normal = normalItemStyleOpt[styleName];\n      } else {\n        zrUtil.merge(opt[styleName].normal, normalItemStyleOpt[styleName]);\n      }\n\n      normalItemStyleOpt[styleName] = null;\n    }\n\n    if (emphasisItemStyleOpt && emphasisItemStyleOpt[styleName]) {\n      opt[styleName] = opt[styleName] || {};\n\n      if (!opt[styleName].emphasis) {\n        opt[styleName].emphasis = emphasisItemStyleOpt[styleName];\n      } else {\n        zrUtil.merge(opt[styleName].emphasis, emphasisItemStyleOpt[styleName]);\n      }\n\n      emphasisItemStyleOpt[styleName] = null;\n    }\n  }\n}\n\nfunction compatTextStyle(opt, propName) {\n  var labelOptSingle = isObject(opt) && opt[propName];\n  var textStyle = isObject(labelOptSingle) && labelOptSingle.textStyle;\n\n  if (textStyle) {\n    for (var i = 0, len = modelUtil.TEXT_STYLE_OPTIONS.length; i < len; i++) {\n      var propName = modelUtil.TEXT_STYLE_OPTIONS[i];\n\n      if (textStyle.hasOwnProperty(propName)) {\n        labelOptSingle[propName] = textStyle[propName];\n      }\n    }\n  }\n}\n\nfunction compatLabelTextStyle(labelOpt) {\n  if (isObject(labelOpt)) {\n    compatTextStyle(labelOpt, 'normal');\n    compatTextStyle(labelOpt, 'emphasis');\n  }\n}\n\nfunction processSeries(seriesOpt) {\n  if (!isObject(seriesOpt)) {\n    return;\n  }\n\n  compatItemStyle(seriesOpt);\n  compatLabelTextStyle(seriesOpt.label); // treemap\n\n  compatLabelTextStyle(seriesOpt.upperLabel); // graph\n\n  compatLabelTextStyle(seriesOpt.edgeLabel);\n  var markPoint = seriesOpt.markPoint;\n  compatItemStyle(markPoint);\n  compatLabelTextStyle(markPoint && markPoint.label);\n  var markLine = seriesOpt.markLine;\n  compatItemStyle(seriesOpt.markLine);\n  compatLabelTextStyle(markLine && markLine.label);\n  var markArea = seriesOpt.markArea;\n  compatLabelTextStyle(markArea && markArea.label); // For gauge\n\n  compatTextStyle(seriesOpt, 'axisLabel');\n  compatTextStyle(seriesOpt, 'title');\n  compatTextStyle(seriesOpt, 'detail');\n  var data = seriesOpt.data;\n\n  if (data) {\n    for (var i = 0; i < data.length; i++) {\n      compatItemStyle(data[i]);\n      compatLabelTextStyle(data[i] && data[i].label);\n    }\n  } // mark point data\n\n\n  var markPoint = seriesOpt.markPoint;\n\n  if (markPoint && markPoint.data) {\n    var mpData = markPoint.data;\n\n    for (var i = 0; i < mpData.length; i++) {\n      compatItemStyle(mpData[i]);\n      compatLabelTextStyle(mpData[i] && mpData[i].label);\n    }\n  } // mark line data\n\n\n  var markLine = seriesOpt.markLine;\n\n  if (markLine && markLine.data) {\n    var mlData = markLine.data;\n\n    for (var i = 0; i < mlData.length; i++) {\n      if (zrUtil.isArray(mlData[i])) {\n        compatItemStyle(mlData[i][0]);\n        compatLabelTextStyle(mlData[i][0] && mlData[i][0].label);\n        compatItemStyle(mlData[i][1]);\n        compatLabelTextStyle(mlData[i][1] && mlData[i][1].label);\n      } else {\n        compatItemStyle(mlData[i]);\n        compatLabelTextStyle(mlData[i] && mlData[i].label);\n      }\n    }\n  }\n}\n\nfunction toArr(o) {\n  return zrUtil.isArray(o) ? o : o ? [o] : [];\n}\n\nfunction toObj(o) {\n  return (zrUtil.isArray(o) ? o[0] : o) || {};\n}\n\nfunction _default(option, isTheme) {\n  each(toArr(option.series), function (seriesOpt) {\n    isObject(seriesOpt) && processSeries(seriesOpt);\n  });\n  var axes = ['xAxis', 'yAxis', 'radiusAxis', 'angleAxis', 'singleAxis', 'parallelAxis', 'radar'];\n  isTheme && axes.push('valueAxis', 'categoryAxis', 'logAxis', 'timeAxis');\n  each(axes, function (axisName) {\n    each(toArr(option[axisName]), function (axisOpt) {\n      if (axisOpt) {\n        compatTextStyle(axisOpt, 'axisLabel');\n        compatTextStyle(axisOpt.axisPointer, 'label');\n      }\n    });\n  });\n  each(toArr(option.parallel), function (parallelOpt) {\n    var parallelAxisDefault = parallelOpt && parallelOpt.parallelAxisDefault;\n    compatTextStyle(parallelAxisDefault, 'axisLabel');\n    compatTextStyle(parallelAxisDefault && parallelAxisDefault.axisPointer, 'label');\n  });\n  each(toArr(option.calendar), function (calendarOpt) {\n    compatTextStyle(calendarOpt, 'dayLabel');\n    compatTextStyle(calendarOpt, 'monthLabel');\n    compatTextStyle(calendarOpt, 'yearLabel');\n  }); // radar.name.textStyle\n\n  each(toArr(option.radar), function (radarOpt) {\n    compatTextStyle(radarOpt, 'name');\n  });\n  each(toArr(option.geo), function (geoOpt) {\n    if (isObject(geoOpt)) {\n      compatLabelTextStyle(geoOpt.label);\n      each(toArr(geoOpt.regions), function (regionObj) {\n        compatLabelTextStyle(regionObj.label);\n      });\n    }\n  });\n  compatLabelTextStyle(toObj(option.timeline).label);\n  compatTextStyle(toObj(option.axisPointer), 'label');\n  compatTextStyle(toObj(option.tooltip).axisPointer, 'label');\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/preprocessor/helper/compatStyle.js\n// module id = 1725\n// module chunks = 2 3","var samplers = {\n  average: function (frame) {\n    var sum = 0;\n    var count = 0;\n\n    for (var i = 0; i < frame.length; i++) {\n      if (!isNaN(frame[i])) {\n        sum += frame[i];\n        count++;\n      }\n    } // Return NaN if count is 0\n\n\n    return count === 0 ? NaN : sum / count;\n  },\n  sum: function (frame) {\n    var sum = 0;\n\n    for (var i = 0; i < frame.length; i++) {\n      // Ignore NaN\n      sum += frame[i] || 0;\n    }\n\n    return sum;\n  },\n  max: function (frame) {\n    var max = -Infinity;\n\n    for (var i = 0; i < frame.length; i++) {\n      frame[i] > max && (max = frame[i]);\n    }\n\n    return max;\n  },\n  min: function (frame) {\n    var min = Infinity;\n\n    for (var i = 0; i < frame.length; i++) {\n      frame[i] < min && (min = frame[i]);\n    }\n\n    return min;\n  },\n  // TODO\n  // Median\n  nearest: function (frame) {\n    return frame[0];\n  }\n};\n\nvar indexSampler = function (frame, value) {\n  return Math.round(frame.length / 2);\n};\n\nfunction _default(seriesType, ecModel, api) {\n  ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n    var data = seriesModel.getData();\n    var sampling = seriesModel.get('sampling');\n    var coordSys = seriesModel.coordinateSystem; // Only cartesian2d support down sampling\n\n    if (coordSys.type === 'cartesian2d' && sampling) {\n      var baseAxis = coordSys.getBaseAxis();\n      var valueAxis = coordSys.getOtherAxis(baseAxis);\n      var extent = baseAxis.getExtent(); // Coordinste system has been resized\n\n      var size = extent[1] - extent[0];\n      var rate = Math.round(data.count() / size);\n\n      if (rate > 1) {\n        var sampler;\n\n        if (typeof sampling === 'string') {\n          sampler = samplers[sampling];\n        } else if (typeof sampling === 'function') {\n          sampler = sampling;\n        }\n\n        if (sampler) {\n          data = data.downSample(valueAxis.dim, 1 / rate, sampler, indexSampler);\n          seriesModel.setData(data);\n        }\n      }\n    }\n  }, this);\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/processor/dataSample.js\n// module id = 1726\n// module chunks = 2 3","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Scale = require(\"./Scale\");\n\nvar numberUtil = require(\"../util/number\");\n\nvar IntervalScale = require(\"./Interval\");\n\n/**\n * Log scale\n * @module echarts/scale/Log\n */\n// Use some method of IntervalScale\nvar scaleProto = Scale.prototype;\nvar intervalScaleProto = IntervalScale.prototype;\nvar getPrecisionSafe = numberUtil.getPrecisionSafe;\nvar roundingErrorFix = numberUtil.round;\nvar mathFloor = Math.floor;\nvar mathCeil = Math.ceil;\nvar mathPow = Math.pow;\nvar mathLog = Math.log;\nvar LogScale = Scale.extend({\n  type: 'log',\n  base: 10,\n  $constructor: function () {\n    Scale.apply(this, arguments);\n    this._originalScale = new IntervalScale();\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getTicks: function () {\n    var originalScale = this._originalScale;\n    var extent = this._extent;\n    var originalExtent = originalScale.getExtent();\n    return zrUtil.map(intervalScaleProto.getTicks.call(this), function (val) {\n      var powVal = numberUtil.round(mathPow(this.base, val)); // Fix #4158\n\n      powVal = val === extent[0] && originalScale.__fixMin ? fixRoundingError(powVal, originalExtent[0]) : powVal;\n      powVal = val === extent[1] && originalScale.__fixMax ? fixRoundingError(powVal, originalExtent[1]) : powVal;\n      return powVal;\n    }, this);\n  },\n\n  /**\n   * @param {number} val\n   * @return {string}\n   */\n  getLabel: intervalScaleProto.getLabel,\n\n  /**\n   * @param  {number} val\n   * @return {number}\n   */\n  scale: function (val) {\n    val = scaleProto.scale.call(this, val);\n    return mathPow(this.base, val);\n  },\n\n  /**\n   * @param {number} start\n   * @param {number} end\n   */\n  setExtent: function (start, end) {\n    var base = this.base;\n    start = mathLog(start) / mathLog(base);\n    end = mathLog(end) / mathLog(base);\n    intervalScaleProto.setExtent.call(this, start, end);\n  },\n\n  /**\n   * @return {number} end\n   */\n  getExtent: function () {\n    var base = this.base;\n    var extent = scaleProto.getExtent.call(this);\n    extent[0] = mathPow(base, extent[0]);\n    extent[1] = mathPow(base, extent[1]); // Fix #4158\n\n    var originalScale = this._originalScale;\n    var originalExtent = originalScale.getExtent();\n    originalScale.__fixMin && (extent[0] = fixRoundingError(extent[0], originalExtent[0]));\n    originalScale.__fixMax && (extent[1] = fixRoundingError(extent[1], originalExtent[1]));\n    return extent;\n  },\n\n  /**\n   * @param  {Array.<number>} extent\n   */\n  unionExtent: function (extent) {\n    this._originalScale.unionExtent(extent);\n\n    var base = this.base;\n    extent[0] = mathLog(extent[0]) / mathLog(base);\n    extent[1] = mathLog(extent[1]) / mathLog(base);\n    scaleProto.unionExtent.call(this, extent);\n  },\n\n  /**\n   * @override\n   */\n  unionExtentFromData: function (data, dim) {\n    this.unionExtent(data.getDataExtent(dim, true, function (val) {\n      return val > 0;\n    }));\n  },\n\n  /**\n   * Update interval and extent of intervals for nice ticks\n   * @param  {number} [approxTickNum = 10] Given approx tick number\n   */\n  niceTicks: function (approxTickNum) {\n    approxTickNum = approxTickNum || 10;\n    var extent = this._extent;\n    var span = extent[1] - extent[0];\n\n    if (span === Infinity || span <= 0) {\n      return;\n    }\n\n    var interval = numberUtil.quantity(span);\n    var err = approxTickNum / span * interval; // Filter ticks to get closer to the desired count.\n\n    if (err <= 0.5) {\n      interval *= 10;\n    } // Interval should be integer\n\n\n    while (!isNaN(interval) && Math.abs(interval) < 1 && Math.abs(interval) > 0) {\n      interval *= 10;\n    }\n\n    var niceExtent = [numberUtil.round(mathCeil(extent[0] / interval) * interval), numberUtil.round(mathFloor(extent[1] / interval) * interval)];\n    this._interval = interval;\n    this._niceExtent = niceExtent;\n  },\n\n  /**\n   * Nice extent.\n   * @override\n   */\n  niceExtent: function (opt) {\n    intervalScaleProto.niceExtent.call(this, opt);\n    var originalScale = this._originalScale;\n    originalScale.__fixMin = opt.fixMin;\n    originalScale.__fixMax = opt.fixMax;\n  }\n});\nzrUtil.each(['contain', 'normalize'], function (methodName) {\n  LogScale.prototype[methodName] = function (val) {\n    val = mathLog(val) / mathLog(this.base);\n    return scaleProto[methodName].call(this, val);\n  };\n});\n\nLogScale.create = function () {\n  return new LogScale();\n};\n\nfunction fixRoundingError(val, originalVal) {\n  return roundingErrorFix(val, getPrecisionSafe(originalVal));\n}\n\nvar _default = LogScale;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/scale/Log.js\n// module id = 1727\n// module chunks = 2 3","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Scale = require(\"./Scale\");\n\n/**\n * Linear continuous scale\n * @module echarts/coord/scale/Ordinal\n *\n * http://en.wikipedia.org/wiki/Level_of_measurement\n */\n// FIXME only one data\nvar scaleProto = Scale.prototype;\nvar OrdinalScale = Scale.extend({\n  type: 'ordinal',\n  init: function (data, extent) {\n    this._data = data;\n    this._extent = extent || [0, data.length - 1];\n  },\n  parse: function (val) {\n    return typeof val === 'string' ? zrUtil.indexOf(this._data, val) // val might be float.\n    : Math.round(val);\n  },\n  contain: function (rank) {\n    rank = this.parse(rank);\n    return scaleProto.contain.call(this, rank) && this._data[rank] != null;\n  },\n\n  /**\n   * Normalize given rank or name to linear [0, 1]\n   * @param {number|string} [val]\n   * @return {number}\n   */\n  normalize: function (val) {\n    return scaleProto.normalize.call(this, this.parse(val));\n  },\n  scale: function (val) {\n    return Math.round(scaleProto.scale.call(this, val));\n  },\n\n  /**\n   * @return {Array}\n   */\n  getTicks: function () {\n    var ticks = [];\n    var extent = this._extent;\n    var rank = extent[0];\n\n    while (rank <= extent[1]) {\n      ticks.push(rank);\n      rank++;\n    }\n\n    return ticks;\n  },\n\n  /**\n   * Get item on rank n\n   * @param {number} n\n   * @return {string}\n   */\n  getLabel: function (n) {\n    return this._data[n];\n  },\n\n  /**\n   * @return {number}\n   */\n  count: function () {\n    return this._extent[1] - this._extent[0] + 1;\n  },\n\n  /**\n   * @override\n   */\n  unionExtentFromData: function (data, dim) {\n    this.unionExtent(data.getDataExtent(dim, false));\n  },\n  niceTicks: zrUtil.noop,\n  niceExtent: zrUtil.noop\n});\n/**\n * @return {module:echarts/scale/Time}\n */\n\nOrdinalScale.create = function () {\n  return new OrdinalScale();\n};\n\nvar _default = OrdinalScale;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/scale/Ordinal.js\n// module id = 1728\n// module chunks = 2 3","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar numberUtil = require(\"../util/number\");\n\nvar formatUtil = require(\"../util/format\");\n\nvar scaleHelper = require(\"./helper\");\n\nvar IntervalScale = require(\"./Interval\");\n\n// [About UTC and local time zone]:\n// In most cases, `number.parseDate` will treat input data string as local time\n// (except time zone is specified in time string). And `format.formateTime` returns\n// local time by default. option.useUTC is false by default. This design have\n// concidered these common case:\n// (1) Time that is persistent in server is in UTC, but it is needed to be diplayed\n// in local time by default.\n// (2) By default, the input data string (e.g., '2011-01-02') should be displayed\n// as its original time, without any time difference.\nvar intervalScaleProto = IntervalScale.prototype;\nvar mathCeil = Math.ceil;\nvar mathFloor = Math.floor;\nvar ONE_SECOND = 1000;\nvar ONE_MINUTE = ONE_SECOND * 60;\nvar ONE_HOUR = ONE_MINUTE * 60;\nvar ONE_DAY = ONE_HOUR * 24; // FIXME 公用？\n\nvar bisect = function (a, x, lo, hi) {\n  while (lo < hi) {\n    var mid = lo + hi >>> 1;\n\n    if (a[mid][1] < x) {\n      lo = mid + 1;\n    } else {\n      hi = mid;\n    }\n  }\n\n  return lo;\n};\n/**\n * @alias module:echarts/coord/scale/Time\n * @constructor\n */\n\n\nvar TimeScale = IntervalScale.extend({\n  type: 'time',\n\n  /**\n   * @override\n   */\n  getLabel: function (val) {\n    var stepLvl = this._stepLvl;\n    var date = new Date(val);\n    return formatUtil.formatTime(stepLvl[0], date, this.getSetting('useUTC'));\n  },\n\n  /**\n   * @override\n   */\n  niceExtent: function (opt) {\n    var extent = this._extent; // If extent start and end are same, expand them\n\n    if (extent[0] === extent[1]) {\n      // Expand extent\n      extent[0] -= ONE_DAY;\n      extent[1] += ONE_DAY;\n    } // If there are no data and extent are [Infinity, -Infinity]\n\n\n    if (extent[1] === -Infinity && extent[0] === Infinity) {\n      var d = new Date();\n      extent[1] = +new Date(d.getFullYear(), d.getMonth(), d.getDate());\n      extent[0] = extent[1] - ONE_DAY;\n    }\n\n    this.niceTicks(opt.splitNumber, opt.minInterval, opt.maxInterval); // var extent = this._extent;\n\n    var interval = this._interval;\n\n    if (!opt.fixMin) {\n      extent[0] = numberUtil.round(mathFloor(extent[0] / interval) * interval);\n    }\n\n    if (!opt.fixMax) {\n      extent[1] = numberUtil.round(mathCeil(extent[1] / interval) * interval);\n    }\n  },\n\n  /**\n   * @override\n   */\n  niceTicks: function (approxTickNum, minInterval, maxInterval) {\n    approxTickNum = approxTickNum || 10;\n    var extent = this._extent;\n    var span = extent[1] - extent[0];\n    var approxInterval = span / approxTickNum;\n\n    if (minInterval != null && approxInterval < minInterval) {\n      approxInterval = minInterval;\n    }\n\n    if (maxInterval != null && approxInterval > maxInterval) {\n      approxInterval = maxInterval;\n    }\n\n    var scaleLevelsLen = scaleLevels.length;\n    var idx = bisect(scaleLevels, approxInterval, 0, scaleLevelsLen);\n    var level = scaleLevels[Math.min(idx, scaleLevelsLen - 1)];\n    var interval = level[1]; // Same with interval scale if span is much larger than 1 year\n\n    if (level[0] === 'year') {\n      var yearSpan = span / interval; // From \"Nice Numbers for Graph Labels\" of Graphic Gems\n      // var niceYearSpan = numberUtil.nice(yearSpan, false);\n\n      var yearStep = numberUtil.nice(yearSpan / approxTickNum, true);\n      interval *= yearStep;\n    }\n\n    var timezoneOffset = this.getSetting('useUTC') ? 0 : new Date(+extent[0] || +extent[1]).getTimezoneOffset() * 60 * 1000;\n    var niceExtent = [Math.round(mathCeil((extent[0] - timezoneOffset) / interval) * interval + timezoneOffset), Math.round(mathFloor((extent[1] - timezoneOffset) / interval) * interval + timezoneOffset)];\n    scaleHelper.fixExtent(niceExtent, extent);\n    this._stepLvl = level; // Interval will be used in getTicks\n\n    this._interval = interval;\n    this._niceExtent = niceExtent;\n  },\n  parse: function (val) {\n    // val might be float.\n    return +numberUtil.parseDate(val);\n  }\n});\nzrUtil.each(['contain', 'normalize'], function (methodName) {\n  TimeScale.prototype[methodName] = function (val) {\n    return intervalScaleProto[methodName].call(this, this.parse(val));\n  };\n}); // Steps from d3\n\nvar scaleLevels = [// Format              interval\n['hh:mm:ss', ONE_SECOND], // 1s\n['hh:mm:ss', ONE_SECOND * 5], // 5s\n['hh:mm:ss', ONE_SECOND * 10], // 10s\n['hh:mm:ss', ONE_SECOND * 15], // 15s\n['hh:mm:ss', ONE_SECOND * 30], // 30s\n['hh:mm\\nMM-dd', ONE_MINUTE], // 1m\n['hh:mm\\nMM-dd', ONE_MINUTE * 5], // 5m\n['hh:mm\\nMM-dd', ONE_MINUTE * 10], // 10m\n['hh:mm\\nMM-dd', ONE_MINUTE * 15], // 15m\n['hh:mm\\nMM-dd', ONE_MINUTE * 30], // 30m\n['hh:mm\\nMM-dd', ONE_HOUR], // 1h\n['hh:mm\\nMM-dd', ONE_HOUR * 2], // 2h\n['hh:mm\\nMM-dd', ONE_HOUR * 6], // 6h\n['hh:mm\\nMM-dd', ONE_HOUR * 12], // 12h\n['MM-dd\\nyyyy', ONE_DAY], // 1d\n['MM-dd\\nyyyy', ONE_DAY * 2], // 2d\n['MM-dd\\nyyyy', ONE_DAY * 3], // 3d\n['MM-dd\\nyyyy', ONE_DAY * 4], // 4d\n['MM-dd\\nyyyy', ONE_DAY * 5], // 5d\n['MM-dd\\nyyyy', ONE_DAY * 6], // 6d\n['week', ONE_DAY * 7], // 7d\n['MM-dd\\nyyyy', ONE_DAY * 10], // 10d\n['week', ONE_DAY * 14], // 2w\n['week', ONE_DAY * 21], // 3w\n['month', ONE_DAY * 31], // 1M\n['week', ONE_DAY * 42], // 6w\n['month', ONE_DAY * 62], // 2M\n['week', ONE_DAY * 42], // 10w\n['quarter', ONE_DAY * 380 / 4], // 3M\n['month', ONE_DAY * 31 * 4], // 4M\n['month', ONE_DAY * 31 * 5], // 5M\n['half-year', ONE_DAY * 380 / 2], // 6M\n['month', ONE_DAY * 31 * 8], // 8M\n['month', ONE_DAY * 31 * 10], // 10M\n['year', ONE_DAY * 380] // 1Y\n];\n/**\n * @param {module:echarts/model/Model}\n * @return {module:echarts/scale/Time}\n */\n\nTimeScale.create = function (model) {\n  return new TimeScale({\n    useUTC: model.ecModel.get('useUTC')\n  });\n};\n\nvar _default = TimeScale;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/scale/Time.js\n// module id = 1729\n// module chunks = 2 3","var Group = require(\"zrender/lib/container/Group\");\n\nvar componentUtil = require(\"../util/component\");\n\nvar clazzUtil = require(\"../util/clazz\");\n\nvar Component = function () {\n  /**\n   * @type {module:zrender/container/Group}\n   * @readOnly\n   */\n  this.group = new Group();\n  /**\n   * @type {string}\n   * @readOnly\n   */\n\n  this.uid = componentUtil.getUID('viewComponent');\n};\n\nComponent.prototype = {\n  constructor: Component,\n  init: function (ecModel, api) {},\n  render: function (componentModel, ecModel, api, payload) {},\n  dispose: function () {}\n};\nvar componentProto = Component.prototype;\n\ncomponentProto.updateView = componentProto.updateLayout = componentProto.updateVisual = function (seriesModel, ecModel, api, payload) {// Do nothing;\n}; // Enable Component.extend.\n\n\nclazzUtil.enableClassExtend(Component); // Enable capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n\nclazzUtil.enableClassManagement(Component, {\n  registerWhenExtend: true\n});\nvar _default = Component;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/view/Component.js\n// module id = 1730\n// module chunks = 2 3","var Gradient = require(\"zrender/lib/graphic/Gradient\");\n\nfunction _default(ecModel) {\n  function encodeColor(seriesModel) {\n    var colorAccessPath = (seriesModel.visualColorAccessPath || 'itemStyle.normal.color').split('.');\n    var data = seriesModel.getData();\n    var color = seriesModel.get(colorAccessPath) // Set in itemStyle\n    || seriesModel.getColorFromPalette(seriesModel.get('name')); // Default color\n    // FIXME Set color function or use the platte color\n\n    data.setVisual('color', color); // Only visible series has each data be visual encoded\n\n    if (!ecModel.isSeriesFiltered(seriesModel)) {\n      if (typeof color === 'function' && !(color instanceof Gradient)) {\n        data.each(function (idx) {\n          data.setItemVisual(idx, 'color', color(seriesModel.getDataParams(idx)));\n        });\n      } // itemStyle in each data item\n\n\n      data.each(function (idx) {\n        var itemModel = data.getItemModel(idx);\n        var color = itemModel.get(colorAccessPath, true);\n\n        if (color != null) {\n          data.setItemVisual(idx, 'color', color);\n        }\n      });\n    }\n  }\n\n  ecModel.eachRawSeries(encodeColor);\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/visual/seriesColor.js\n// module id = 1731\n// module chunks = 2 3","function _default(seriesType, defaultSymbolType, legendSymbol, ecModel, api) {\n  // Encoding visual for all series include which is filtered for legend drawing\n  ecModel.eachRawSeriesByType(seriesType, function (seriesModel) {\n    var data = seriesModel.getData();\n    var symbolType = seriesModel.get('symbol') || defaultSymbolType;\n    var symbolSize = seriesModel.get('symbolSize');\n    data.setVisual({\n      legendSymbol: legendSymbol || symbolType,\n      symbol: symbolType,\n      symbolSize: symbolSize\n    }); // Only visible series has each data be visual encoded\n\n    if (!ecModel.isSeriesFiltered(seriesModel)) {\n      if (typeof symbolSize === 'function') {\n        data.each(function (idx) {\n          var rawValue = seriesModel.getRawValue(idx); // FIXME\n\n          var params = seriesModel.getDataParams(idx);\n          data.setItemVisual(idx, 'symbolSize', symbolSize(rawValue, params));\n        });\n      }\n\n      data.each(function (idx) {\n        var itemModel = data.getItemModel(idx);\n        var itemSymbolType = itemModel.getShallow('symbol', true);\n        var itemSymbolSize = itemModel.getShallow('symbolSize', true); // If has item symbol\n\n        if (itemSymbolType != null) {\n          data.setItemVisual(idx, 'symbol', itemSymbolType);\n        }\n\n        if (itemSymbolSize != null) {\n          // PENDING Transform symbolSize ?\n          data.setItemVisual(idx, 'symbolSize', itemSymbolSize);\n        }\n      });\n    }\n  });\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/visual/symbol.js\n// module id = 1732\n// module chunks = 2 3","var util = require(\"./core/util\");\n\nvar vec2 = require(\"./core/vector\");\n\nvar Draggable = require(\"./mixin/Draggable\");\n\nvar Eventful = require(\"./mixin/Eventful\");\n\n/**\n * Handler\n * @module zrender/Handler\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n *         pissang (shenyi.914@gmail.com)\n */\nvar SILENT = 'silent';\n\nfunction makeEventPacket(eveType, targetInfo, event) {\n  return {\n    type: eveType,\n    event: event,\n    // target can only be an element that is not silent.\n    target: targetInfo.target,\n    // topTarget can be a silent element.\n    topTarget: targetInfo.topTarget,\n    cancelBubble: false,\n    offsetX: event.zrX,\n    offsetY: event.zrY,\n    gestureEvent: event.gestureEvent,\n    pinchX: event.pinchX,\n    pinchY: event.pinchY,\n    pinchScale: event.pinchScale,\n    wheelDelta: event.zrDelta,\n    zrByTouch: event.zrByTouch,\n    which: event.which\n  };\n}\n\nfunction EmptyProxy() {}\n\nEmptyProxy.prototype.dispose = function () {};\n\nvar handlerNames = ['click', 'dblclick', 'mousewheel', 'mouseout', 'mouseup', 'mousedown', 'mousemove', 'contextmenu'];\n/**\n * @alias module:zrender/Handler\n * @constructor\n * @extends module:zrender/mixin/Eventful\n * @param {module:zrender/Storage} storage Storage instance.\n * @param {module:zrender/Painter} painter Painter instance.\n * @param {module:zrender/dom/HandlerProxy} proxy HandlerProxy instance.\n * @param {HTMLElement} painterRoot painter.root (not painter.getViewportRoot()).\n */\n\nvar Handler = function (storage, painter, proxy, painterRoot) {\n  Eventful.call(this);\n  this.storage = storage;\n  this.painter = painter;\n  this.painterRoot = painterRoot;\n  proxy = proxy || new EmptyProxy();\n  /**\n   * Proxy of event. can be Dom, WebGLSurface, etc.\n   */\n\n  this.proxy = proxy; // Attach handler\n\n  proxy.handler = this;\n  /**\n   * {target, topTarget, x, y}\n   * @private\n   * @type {Object}\n   */\n\n  this._hovered = {};\n  /**\n   * @private\n   * @type {Date}\n   */\n\n  this._lastTouchMoment;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._lastX;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._lastY;\n  Draggable.call(this);\n  util.each(handlerNames, function (name) {\n    proxy.on && proxy.on(name, this[name], this);\n  }, this);\n};\n\nHandler.prototype = {\n  constructor: Handler,\n  mousemove: function (event) {\n    var x = event.zrX;\n    var y = event.zrY;\n    var lastHovered = this._hovered;\n    var lastHoveredTarget = lastHovered.target; // If lastHoveredTarget is removed from zr (detected by '__zr') by some API call\n    // (like 'setOption' or 'dispatchAction') in event handlers, we should find\n    // lastHovered again here. Otherwise 'mouseout' can not be triggered normally.\n    // See #6198.\n\n    if (lastHoveredTarget && !lastHoveredTarget.__zr) {\n      lastHovered = this.findHover(lastHovered.x, lastHovered.y);\n      lastHoveredTarget = lastHovered.target;\n    }\n\n    var hovered = this._hovered = this.findHover(x, y);\n    var hoveredTarget = hovered.target;\n    var proxy = this.proxy;\n    proxy.setCursor && proxy.setCursor(hoveredTarget ? hoveredTarget.cursor : 'default'); // Mouse out on previous hovered element\n\n    if (lastHoveredTarget && hoveredTarget !== lastHoveredTarget) {\n      this.dispatchToElement(lastHovered, 'mouseout', event);\n    } // Mouse moving on one element\n\n\n    this.dispatchToElement(hovered, 'mousemove', event); // Mouse over on a new element\n\n    if (hoveredTarget && hoveredTarget !== lastHoveredTarget) {\n      this.dispatchToElement(hovered, 'mouseover', event);\n    }\n  },\n  mouseout: function (event) {\n    this.dispatchToElement(this._hovered, 'mouseout', event); // There might be some doms created by upper layer application\n    // at the same level of painter.getViewportRoot() (e.g., tooltip\n    // dom created by echarts), where 'globalout' event should not\n    // be triggered when mouse enters these doms. (But 'mouseout'\n    // should be triggered at the original hovered element as usual).\n\n    var element = event.toElement || event.relatedTarget;\n    var innerDom;\n\n    do {\n      element = element && element.parentNode;\n    } while (element && element.nodeType != 9 && !(innerDom = element === this.painterRoot));\n\n    !innerDom && this.trigger('globalout', {\n      event: event\n    });\n  },\n\n  /**\n   * Resize\n   */\n  resize: function (event) {\n    this._hovered = {};\n  },\n\n  /**\n   * Dispatch event\n   * @param {string} eventName\n   * @param {event=} eventArgs\n   */\n  dispatch: function (eventName, eventArgs) {\n    var handler = this[eventName];\n    handler && handler.call(this, eventArgs);\n  },\n\n  /**\n   * Dispose\n   */\n  dispose: function () {\n    this.proxy.dispose();\n    this.storage = this.proxy = this.painter = null;\n  },\n\n  /**\n   * 设置默认的cursor style\n   * @param {string} [cursorStyle='default'] 例如 crosshair\n   */\n  setCursorStyle: function (cursorStyle) {\n    var proxy = this.proxy;\n    proxy.setCursor && proxy.setCursor(cursorStyle);\n  },\n\n  /**\n   * 事件分发代理\n   *\n   * @private\n   * @param {Object} targetInfo {target, topTarget} 目标图形元素\n   * @param {string} eventName 事件名称\n   * @param {Object} event 事件对象\n   */\n  dispatchToElement: function (targetInfo, eventName, event) {\n    targetInfo = targetInfo || {};\n    var el = targetInfo.target;\n\n    if (el && el.silent) {\n      return;\n    }\n\n    var eventHandler = 'on' + eventName;\n    var eventPacket = makeEventPacket(eventName, targetInfo, event);\n\n    while (el) {\n      el[eventHandler] && (eventPacket.cancelBubble = el[eventHandler].call(el, eventPacket));\n      el.trigger(eventName, eventPacket);\n      el = el.parent;\n\n      if (eventPacket.cancelBubble) {\n        break;\n      }\n    }\n\n    if (!eventPacket.cancelBubble) {\n      // 冒泡到顶级 zrender 对象\n      this.trigger(eventName, eventPacket); // 分发事件到用户自定义层\n      // 用户有可能在全局 click 事件中 dispose，所以需要判断下 painter 是否存在\n\n      this.painter && this.painter.eachOtherLayer(function (layer) {\n        if (typeof layer[eventHandler] == 'function') {\n          layer[eventHandler].call(layer, eventPacket);\n        }\n\n        if (layer.trigger) {\n          layer.trigger(eventName, eventPacket);\n        }\n      });\n    }\n  },\n\n  /**\n   * @private\n   * @param {number} x\n   * @param {number} y\n   * @param {module:zrender/graphic/Displayable} exclude\n   * @return {model:zrender/Element}\n   * @method\n   */\n  findHover: function (x, y, exclude) {\n    var list = this.storage.getDisplayList();\n    var out = {\n      x: x,\n      y: y\n    };\n\n    for (var i = list.length - 1; i >= 0; i--) {\n      var hoverCheckResult;\n\n      if (list[i] !== exclude // getDisplayList may include ignored item in VML mode\n      && !list[i].ignore && (hoverCheckResult = isHover(list[i], x, y))) {\n        !out.topTarget && (out.topTarget = list[i]);\n\n        if (hoverCheckResult !== SILENT) {\n          out.target = list[i];\n          break;\n        }\n      }\n    }\n\n    return out;\n  }\n}; // Common handlers\n\nutil.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n  Handler.prototype[name] = function (event) {\n    // Find hover again to avoid click event is dispatched manually. Or click is triggered without mouseover\n    var hovered = this.findHover(event.zrX, event.zrY);\n    var hoveredTarget = hovered.target;\n\n    if (name === 'mousedown') {\n      this._downEl = hoveredTarget;\n      this._downPoint = [event.zrX, event.zrY]; // In case click triggered before mouseup\n\n      this._upEl = hoveredTarget;\n    } else if (name === 'mosueup') {\n      this._upEl = hoveredTarget;\n    } else if (name === 'click') {\n      if (this._downEl !== this._upEl // Original click event is triggered on the whole canvas element,\n      // including the case that `mousedown` - `mousemove` - `mouseup`,\n      // which should be filtered, otherwise it will bring trouble to\n      // pan and zoom.\n      || !this._downPoint // Arbitrary value\n      || vec2.dist(this._downPoint, [event.zrX, event.zrY]) > 4) {\n        return;\n      }\n\n      this._downPoint = null;\n    }\n\n    this.dispatchToElement(hovered, name, event);\n  };\n});\n\nfunction isHover(displayable, x, y) {\n  if (displayable[displayable.rectHover ? 'rectContain' : 'contain'](x, y)) {\n    var el = displayable;\n    var isSilent;\n\n    while (el) {\n      // If clipped by ancestor.\n      // FIXME: If clipPath has neither stroke nor fill,\n      // el.clipPath.contain(x, y) will always return false.\n      if (el.clipPath && !el.clipPath.contain(x, y)) {\n        return false;\n      }\n\n      if (el.silent) {\n        isSilent = true;\n      }\n\n      el = el.parent;\n    }\n\n    return isSilent ? SILENT : true;\n  }\n\n  return false;\n}\n\nutil.mixin(Handler, Eventful);\nutil.mixin(Handler, Draggable);\nvar _default = Handler;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/Handler.js\n// module id = 1757\n// module chunks = 2 3","var util = require(\"./core/util\");\n\nvar _config = require(\"./config\");\n\nvar devicePixelRatio = _config.devicePixelRatio;\n\nvar Style = require(\"./graphic/Style\");\n\nvar Pattern = require(\"./graphic/Pattern\");\n\n/**\n * @module zrender/Layer\n * @author pissang(https://www.github.com/pissang)\n */\nfunction returnFalse() {\n  return false;\n}\n/**\n * 创建dom\n *\n * @inner\n * @param {string} id dom id 待用\n * @param {Painter} painter painter instance\n * @param {number} number\n */\n\n\nfunction createDom(id, painter, dpr) {\n  var newDom = util.createCanvas();\n  var width = painter.getWidth();\n  var height = painter.getHeight();\n  var newDomStyle = newDom.style; // 没append呢，请原谅我这样写，清晰~\n\n  newDomStyle.position = 'absolute';\n  newDomStyle.left = 0;\n  newDomStyle.top = 0;\n  newDomStyle.width = width + 'px';\n  newDomStyle.height = height + 'px';\n  newDom.width = width * dpr;\n  newDom.height = height * dpr; // id不作为索引用，避免可能造成的重名，定义为私有属性\n\n  newDom.setAttribute('data-zr-dom-id', id);\n  return newDom;\n}\n/**\n * @alias module:zrender/Layer\n * @constructor\n * @extends module:zrender/mixin/Transformable\n * @param {string} id\n * @param {module:zrender/Painter} painter\n * @param {number} [dpr]\n */\n\n\nvar Layer = function (id, painter, dpr) {\n  var dom;\n  dpr = dpr || devicePixelRatio;\n\n  if (typeof id === 'string') {\n    dom = createDom(id, painter, dpr);\n  } // Not using isDom because in node it will return false\n  else if (util.isObject(id)) {\n      dom = id;\n      id = dom.id;\n    }\n\n  this.id = id;\n  this.dom = dom;\n  var domStyle = dom.style;\n\n  if (domStyle) {\n    // Not in node\n    dom.onselectstart = returnFalse; // 避免页面选中的尴尬\n\n    domStyle['-webkit-user-select'] = 'none';\n    domStyle['user-select'] = 'none';\n    domStyle['-webkit-touch-callout'] = 'none';\n    domStyle['-webkit-tap-highlight-color'] = 'rgba(0,0,0,0)';\n    domStyle['padding'] = 0;\n    domStyle['margin'] = 0;\n    domStyle['border-width'] = 0;\n  }\n\n  this.domBack = null;\n  this.ctxBack = null;\n  this.painter = painter;\n  this.config = null; // Configs\n\n  /**\n   * 每次清空画布的颜色\n   * @type {string}\n   * @default 0\n   */\n\n  this.clearColor = 0;\n  /**\n   * 是否开启动态模糊\n   * @type {boolean}\n   * @default false\n   */\n\n  this.motionBlur = false;\n  /**\n   * 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n   * @type {number}\n   * @default 0.7\n   */\n\n  this.lastFrameAlpha = 0.7;\n  /**\n   * Layer dpr\n   * @type {number}\n   */\n\n  this.dpr = dpr;\n};\n\nLayer.prototype = {\n  constructor: Layer,\n  elCount: 0,\n  __dirty: true,\n  initContext: function () {\n    this.ctx = this.dom.getContext('2d');\n    this.ctx.__currentValues = {};\n    this.ctx.dpr = this.dpr;\n  },\n  createBackBuffer: function () {\n    var dpr = this.dpr;\n    this.domBack = createDom('back-' + this.id, this.painter, dpr);\n    this.ctxBack = this.domBack.getContext('2d');\n    this.ctxBack.__currentValues = {};\n\n    if (dpr != 1) {\n      this.ctxBack.scale(dpr, dpr);\n    }\n  },\n\n  /**\n   * @param  {number} width\n   * @param  {number} height\n   */\n  resize: function (width, height) {\n    var dpr = this.dpr;\n    var dom = this.dom;\n    var domStyle = dom.style;\n    var domBack = this.domBack;\n    domStyle.width = width + 'px';\n    domStyle.height = height + 'px';\n    dom.width = width * dpr;\n    dom.height = height * dpr;\n\n    if (domBack) {\n      domBack.width = width * dpr;\n      domBack.height = height * dpr;\n\n      if (dpr != 1) {\n        this.ctxBack.scale(dpr, dpr);\n      }\n    }\n  },\n\n  /**\n   * 清空该层画布\n   * @param {boolean} clearAll Clear all with out motion blur\n   */\n  clear: function (clearAll) {\n    var dom = this.dom;\n    var ctx = this.ctx;\n    var width = dom.width;\n    var height = dom.height;\n    var clearColor = this.clearColor;\n    var haveMotionBLur = this.motionBlur && !clearAll;\n    var lastFrameAlpha = this.lastFrameAlpha;\n    var dpr = this.dpr;\n\n    if (haveMotionBLur) {\n      if (!this.domBack) {\n        this.createBackBuffer();\n      }\n\n      this.ctxBack.globalCompositeOperation = 'copy';\n      this.ctxBack.drawImage(dom, 0, 0, width / dpr, height / dpr);\n    }\n\n    ctx.clearRect(0, 0, width, height);\n\n    if (clearColor) {\n      var clearColorGradientOrPattern; // Gradient\n\n      if (clearColor.colorStops) {\n        // Cache canvas gradient\n        clearColorGradientOrPattern = clearColor.__canvasGradient || Style.getGradient(ctx, clearColor, {\n          x: 0,\n          y: 0,\n          width: width,\n          height: height\n        });\n        clearColor.__canvasGradient = clearColorGradientOrPattern;\n      } // Pattern\n      else if (clearColor.image) {\n          clearColorGradientOrPattern = Pattern.prototype.getCanvasPattern.call(clearColor, ctx);\n        }\n\n      ctx.save();\n      ctx.fillStyle = clearColorGradientOrPattern || clearColor;\n      ctx.fillRect(0, 0, width, height);\n      ctx.restore();\n    }\n\n    if (haveMotionBLur) {\n      var domBack = this.domBack;\n      ctx.save();\n      ctx.globalAlpha = lastFrameAlpha;\n      ctx.drawImage(domBack, 0, 0, width, height);\n      ctx.restore();\n    }\n  }\n};\nvar _default = Layer;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/Layer.js\n// module id = 1758\n// module chunks = 2 3","var _config = require(\"./config\");\n\nvar devicePixelRatio = _config.devicePixelRatio;\n\nvar util = require(\"./core/util\");\n\nvar log = require(\"./core/log\");\n\nvar BoundingRect = require(\"./core/BoundingRect\");\n\nvar timsort = require(\"./core/timsort\");\n\nvar Layer = require(\"./Layer\");\n\nvar requestAnimationFrame = require(\"./animation/requestAnimationFrame\");\n\nvar Image = require(\"./graphic/Image\");\n\n/**\n * Default canvas painter\n * @module zrender/Painter\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\n// PENDIGN\n// Layer exceeds MAX_PROGRESSIVE_LAYER_NUMBER may have some problem when flush directly second time.\n//\n// Maximum progressive layer. When exceeding this number. All elements will be drawed in the last layer.\nvar MAX_PROGRESSIVE_LAYER_NUMBER = 5;\n\nfunction parseInt10(val) {\n  return parseInt(val, 10);\n}\n\nfunction isLayerValid(layer) {\n  if (!layer) {\n    return false;\n  }\n\n  if (layer.__builtin__) {\n    return true;\n  }\n\n  if (typeof layer.resize !== 'function' || typeof layer.refresh !== 'function') {\n    return false;\n  }\n\n  return true;\n}\n\nfunction preProcessLayer(layer) {\n  layer.__unusedCount++;\n}\n\nfunction postProcessLayer(layer) {\n  if (layer.__unusedCount == 1) {\n    layer.clear();\n  }\n}\n\nvar tmpRect = new BoundingRect(0, 0, 0, 0);\nvar viewRect = new BoundingRect(0, 0, 0, 0);\n\nfunction isDisplayableCulled(el, width, height) {\n  tmpRect.copy(el.getBoundingRect());\n\n  if (el.transform) {\n    tmpRect.applyTransform(el.transform);\n  }\n\n  viewRect.width = width;\n  viewRect.height = height;\n  return !tmpRect.intersect(viewRect);\n}\n\nfunction isClipPathChanged(clipPaths, prevClipPaths) {\n  if (clipPaths == prevClipPaths) {\n    // Can both be null or undefined\n    return false;\n  }\n\n  if (!clipPaths || !prevClipPaths || clipPaths.length !== prevClipPaths.length) {\n    return true;\n  }\n\n  for (var i = 0; i < clipPaths.length; i++) {\n    if (clipPaths[i] !== prevClipPaths[i]) {\n      return true;\n    }\n  }\n}\n\nfunction doClip(clipPaths, ctx) {\n  for (var i = 0; i < clipPaths.length; i++) {\n    var clipPath = clipPaths[i];\n    clipPath.setTransform(ctx);\n    ctx.beginPath();\n    clipPath.buildPath(ctx, clipPath.shape);\n    ctx.clip(); // Transform back\n\n    clipPath.restoreTransform(ctx);\n  }\n}\n\nfunction createRoot(width, height) {\n  var domRoot = document.createElement('div'); // domRoot.onselectstart = returnFalse; // 避免页面选中的尴尬\n\n  domRoot.style.cssText = ['position:relative', 'overflow:hidden', 'width:' + width + 'px', 'height:' + height + 'px', 'padding:0', 'margin:0', 'border-width:0'].join(';') + ';';\n  return domRoot;\n}\n/**\n * @alias module:zrender/Painter\n * @constructor\n * @param {HTMLElement} root 绘图容器\n * @param {module:zrender/Storage} storage\n * @param {Object} opts\n */\n\n\nvar Painter = function (root, storage, opts) {\n  this.type = 'canvas'; // In node environment using node-canvas\n\n  var singleCanvas = !root.nodeName // In node ?\n  || root.nodeName.toUpperCase() === 'CANVAS';\n  this._opts = opts = util.extend({}, opts || {});\n  /**\n   * @type {number}\n   */\n\n  this.dpr = opts.devicePixelRatio || devicePixelRatio;\n  /**\n   * @type {boolean}\n   * @private\n   */\n\n  this._singleCanvas = singleCanvas;\n  /**\n   * 绘图容器\n   * @type {HTMLElement}\n   */\n\n  this.root = root;\n  var rootStyle = root.style;\n\n  if (rootStyle) {\n    rootStyle['-webkit-tap-highlight-color'] = 'transparent';\n    rootStyle['-webkit-user-select'] = rootStyle['user-select'] = rootStyle['-webkit-touch-callout'] = 'none';\n    root.innerHTML = '';\n  }\n  /**\n   * @type {module:zrender/Storage}\n   */\n\n\n  this.storage = storage;\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n\n  var zlevelList = this._zlevelList = [];\n  /**\n   * @type {Object.<string, module:zrender/Layer>}\n   * @private\n   */\n\n  var layers = this._layers = {};\n  /**\n   * @type {Object.<string, Object>}\n   * @type {private}\n   */\n\n  this._layerConfig = {};\n\n  if (!singleCanvas) {\n    this._width = this._getSize(0);\n    this._height = this._getSize(1);\n    var domRoot = this._domRoot = createRoot(this._width, this._height);\n    root.appendChild(domRoot);\n  } else {\n    if (opts.width != null) {\n      root.width = opts.width;\n    }\n\n    if (opts.height != null) {\n      root.height = opts.height;\n    } // Use canvas width and height directly\n\n\n    var width = root.width;\n    var height = root.height;\n    this._width = width;\n    this._height = height; // Create layer if only one given canvas\n    // Device pixel ratio is fixed to 1 because given canvas has its specified width and height\n\n    var mainLayer = new Layer(root, this, 1);\n    mainLayer.initContext(); // FIXME Use canvas width and height\n    // mainLayer.resize(width, height);\n\n    layers[0] = mainLayer;\n    zlevelList.push(0);\n    this._domRoot = root;\n  } // Layers for progressive rendering\n\n\n  this._progressiveLayers = [];\n  /**\n   * @type {module:zrender/Layer}\n   * @private\n   */\n\n  this._hoverlayer;\n  this._hoverElements = [];\n};\n\nPainter.prototype = {\n  constructor: Painter,\n  getType: function () {\n    return 'canvas';\n  },\n\n  /**\n   * If painter use a single canvas\n   * @return {boolean}\n   */\n  isSingleCanvas: function () {\n    return this._singleCanvas;\n  },\n\n  /**\n   * @return {HTMLDivElement}\n   */\n  getViewportRoot: function () {\n    return this._domRoot;\n  },\n  getViewportRootOffset: function () {\n    var viewportRoot = this.getViewportRoot();\n\n    if (viewportRoot) {\n      return {\n        offsetLeft: viewportRoot.offsetLeft || 0,\n        offsetTop: viewportRoot.offsetTop || 0\n      };\n    }\n  },\n\n  /**\n   * 刷新\n   * @param {boolean} [paintAll=false] 强制绘制所有displayable\n   */\n  refresh: function (paintAll) {\n    var list = this.storage.getDisplayList(true);\n    var zlevelList = this._zlevelList;\n\n    this._paintList(list, paintAll); // Paint custum layers\n\n\n    for (var i = 0; i < zlevelList.length; i++) {\n      var z = zlevelList[i];\n      var layer = this._layers[z];\n\n      if (!layer.__builtin__ && layer.refresh) {\n        layer.refresh();\n      }\n    }\n\n    this.refreshHover();\n\n    if (this._progressiveLayers.length) {\n      this._startProgessive();\n    }\n\n    return this;\n  },\n  addHover: function (el, hoverStyle) {\n    if (el.__hoverMir) {\n      return;\n    }\n\n    var elMirror = new el.constructor({\n      style: el.style,\n      shape: el.shape\n    });\n    elMirror.__from = el;\n    el.__hoverMir = elMirror;\n    elMirror.setStyle(hoverStyle);\n\n    this._hoverElements.push(elMirror);\n  },\n  removeHover: function (el) {\n    var elMirror = el.__hoverMir;\n    var hoverElements = this._hoverElements;\n    var idx = util.indexOf(hoverElements, elMirror);\n\n    if (idx >= 0) {\n      hoverElements.splice(idx, 1);\n    }\n\n    el.__hoverMir = null;\n  },\n  clearHover: function (el) {\n    var hoverElements = this._hoverElements;\n\n    for (var i = 0; i < hoverElements.length; i++) {\n      var from = hoverElements[i].__from;\n\n      if (from) {\n        from.__hoverMir = null;\n      }\n    }\n\n    hoverElements.length = 0;\n  },\n  refreshHover: function () {\n    var hoverElements = this._hoverElements;\n    var len = hoverElements.length;\n    var hoverLayer = this._hoverlayer;\n    hoverLayer && hoverLayer.clear();\n\n    if (!len) {\n      return;\n    }\n\n    timsort(hoverElements, this.storage.displayableSortFunc); // Use a extream large zlevel\n    // FIXME?\n\n    if (!hoverLayer) {\n      hoverLayer = this._hoverlayer = this.getLayer(1e5);\n    }\n\n    var scope = {};\n    hoverLayer.ctx.save();\n\n    for (var i = 0; i < len;) {\n      var el = hoverElements[i];\n      var originalEl = el.__from; // Original el is removed\n      // PENDING\n\n      if (!(originalEl && originalEl.__zr)) {\n        hoverElements.splice(i, 1);\n        originalEl.__hoverMir = null;\n        len--;\n        continue;\n      }\n\n      i++; // Use transform\n      // FIXME style and shape ?\n\n      if (!originalEl.invisible) {\n        el.transform = originalEl.transform;\n        el.invTransform = originalEl.invTransform;\n        el.__clipPaths = originalEl.__clipPaths; // el.\n\n        this._doPaintEl(el, hoverLayer, true, scope);\n      }\n    }\n\n    hoverLayer.ctx.restore();\n  },\n  _startProgessive: function () {\n    var self = this;\n\n    if (!self._furtherProgressive) {\n      return;\n    } // Use a token to stop progress steps triggered by\n    // previous zr.refresh calling.\n\n\n    var token = self._progressiveToken = +new Date();\n    self._progress++;\n    requestAnimationFrame(step);\n\n    function step() {\n      // In case refreshed or disposed\n      if (token === self._progressiveToken && self.storage) {\n        self._doPaintList(self.storage.getDisplayList());\n\n        if (self._furtherProgressive) {\n          self._progress++;\n          requestAnimationFrame(step);\n        } else {\n          self._progressiveToken = -1;\n        }\n      }\n    }\n  },\n  _clearProgressive: function () {\n    this._progressiveToken = -1;\n    this._progress = 0;\n    util.each(this._progressiveLayers, function (layer) {\n      layer.__dirty && layer.clear();\n    });\n  },\n  _paintList: function (list, paintAll) {\n    if (paintAll == null) {\n      paintAll = false;\n    }\n\n    this._updateLayerStatus(list);\n\n    this._clearProgressive();\n\n    this.eachBuiltinLayer(preProcessLayer);\n\n    this._doPaintList(list, paintAll);\n\n    this.eachBuiltinLayer(postProcessLayer);\n  },\n  _doPaintList: function (list, paintAll) {\n    var currentLayer;\n    var currentZLevel;\n    var ctx; // var invTransform = [];\n\n    var scope;\n    var progressiveLayerIdx = 0;\n    var currentProgressiveLayer;\n    var width = this._width;\n    var height = this._height;\n    var layerProgress;\n    var frame = this._progress;\n\n    function flushProgressiveLayer(layer) {\n      var dpr = ctx.dpr || 1;\n      ctx.save();\n      ctx.globalAlpha = 1;\n      ctx.shadowBlur = 0; // Avoid layer don't clear in next progressive frame\n\n      currentLayer.__dirty = true;\n      ctx.setTransform(1, 0, 0, 1, 0, 0);\n      ctx.drawImage(layer.dom, 0, 0, width * dpr, height * dpr);\n      ctx.restore();\n    }\n\n    for (var i = 0, l = list.length; i < l; i++) {\n      var el = list[i];\n      var elZLevel = this._singleCanvas ? 0 : el.zlevel;\n      var elFrame = el.__frame; // Flush at current context\n      // PENDING\n\n      if (elFrame < 0 && currentProgressiveLayer) {\n        flushProgressiveLayer(currentProgressiveLayer);\n        currentProgressiveLayer = null;\n      } // Change draw layer\n\n\n      if (currentZLevel !== elZLevel) {\n        if (ctx) {\n          ctx.restore();\n        } // Reset scope\n\n\n        scope = {}; // Only 0 zlevel if only has one canvas\n\n        currentZLevel = elZLevel;\n        currentLayer = this.getLayer(currentZLevel);\n\n        if (!currentLayer.__builtin__) {\n          log('ZLevel ' + currentZLevel + ' has been used by unkown layer ' + currentLayer.id);\n        }\n\n        ctx = currentLayer.ctx;\n        ctx.save(); // Reset the count\n\n        currentLayer.__unusedCount = 0;\n\n        if (currentLayer.__dirty || paintAll) {\n          currentLayer.clear();\n        }\n      }\n\n      if (!(currentLayer.__dirty || paintAll)) {\n        continue;\n      }\n\n      if (elFrame >= 0) {\n        // Progressive layer changed\n        if (!currentProgressiveLayer) {\n          currentProgressiveLayer = this._progressiveLayers[Math.min(progressiveLayerIdx++, MAX_PROGRESSIVE_LAYER_NUMBER - 1)];\n          currentProgressiveLayer.ctx.save();\n          currentProgressiveLayer.renderScope = {};\n\n          if (currentProgressiveLayer && currentProgressiveLayer.__progress > currentProgressiveLayer.__maxProgress) {\n            // flushProgressiveLayer(currentProgressiveLayer);\n            // Quick jump all progressive elements\n            // All progressive element are not dirty, jump over and flush directly\n            i = currentProgressiveLayer.__nextIdxNotProg - 1; // currentProgressiveLayer = null;\n\n            continue;\n          }\n\n          layerProgress = currentProgressiveLayer.__progress;\n\n          if (!currentProgressiveLayer.__dirty) {\n            // Keep rendering\n            frame = layerProgress;\n          }\n\n          currentProgressiveLayer.__progress = frame + 1;\n        }\n\n        if (elFrame === frame) {\n          this._doPaintEl(el, currentProgressiveLayer, true, currentProgressiveLayer.renderScope);\n        }\n      } else {\n        this._doPaintEl(el, currentLayer, paintAll, scope);\n      }\n\n      el.__dirty = false;\n    }\n\n    if (currentProgressiveLayer) {\n      flushProgressiveLayer(currentProgressiveLayer);\n    } // Restore the lastLayer ctx\n\n\n    ctx && ctx.restore(); // If still has clipping state\n    // if (scope.prevElClipPaths) {\n    //     ctx.restore();\n    // }\n\n    this._furtherProgressive = false;\n    util.each(this._progressiveLayers, function (layer) {\n      if (layer.__maxProgress >= layer.__progress) {\n        this._furtherProgressive = true;\n      }\n    }, this);\n  },\n  _doPaintEl: function (el, currentLayer, forcePaint, scope) {\n    var ctx = currentLayer.ctx;\n    var m = el.transform;\n\n    if ((currentLayer.__dirty || forcePaint) && // Ignore invisible element\n    !el.invisible // Ignore transparent element\n    && el.style.opacity !== 0 // Ignore scale 0 element, in some environment like node-canvas\n    // Draw a scale 0 element can cause all following draw wrong\n    // And setTransform with scale 0 will cause set back transform failed.\n    && !(m && !m[0] && !m[3]) // Ignore culled element\n    && !(el.culling && isDisplayableCulled(el, this._width, this._height))) {\n      var clipPaths = el.__clipPaths; // Optimize when clipping on group with several elements\n\n      if (scope.prevClipLayer !== currentLayer || isClipPathChanged(clipPaths, scope.prevElClipPaths)) {\n        // If has previous clipping state, restore from it\n        if (scope.prevElClipPaths) {\n          scope.prevClipLayer.ctx.restore();\n          scope.prevClipLayer = scope.prevElClipPaths = null; // Reset prevEl since context has been restored\n\n          scope.prevEl = null;\n        } // New clipping state\n\n\n        if (clipPaths) {\n          ctx.save();\n          doClip(clipPaths, ctx);\n          scope.prevClipLayer = currentLayer;\n          scope.prevElClipPaths = clipPaths;\n        }\n      }\n\n      el.beforeBrush && el.beforeBrush(ctx);\n      el.brush(ctx, scope.prevEl || null);\n      scope.prevEl = el;\n      el.afterBrush && el.afterBrush(ctx);\n    }\n  },\n\n  /**\n   * 获取 zlevel 所在层，如果不存在则会创建一个新的层\n   * @param {number} zlevel\n   * @return {module:zrender/Layer}\n   */\n  getLayer: function (zlevel) {\n    if (this._singleCanvas) {\n      return this._layers[0];\n    }\n\n    var layer = this._layers[zlevel];\n\n    if (!layer) {\n      // Create a new layer\n      layer = new Layer('zr_' + zlevel, this, this.dpr);\n      layer.__builtin__ = true;\n\n      if (this._layerConfig[zlevel]) {\n        util.merge(layer, this._layerConfig[zlevel], true);\n      }\n\n      this.insertLayer(zlevel, layer); // Context is created after dom inserted to document\n      // Or excanvas will get 0px clientWidth and clientHeight\n\n      layer.initContext();\n    }\n\n    return layer;\n  },\n  insertLayer: function (zlevel, layer) {\n    var layersMap = this._layers;\n    var zlevelList = this._zlevelList;\n    var len = zlevelList.length;\n    var prevLayer = null;\n    var i = -1;\n    var domRoot = this._domRoot;\n\n    if (layersMap[zlevel]) {\n      log('ZLevel ' + zlevel + ' has been used already');\n      return;\n    } // Check if is a valid layer\n\n\n    if (!isLayerValid(layer)) {\n      log('Layer of zlevel ' + zlevel + ' is not valid');\n      return;\n    }\n\n    if (len > 0 && zlevel > zlevelList[0]) {\n      for (i = 0; i < len - 1; i++) {\n        if (zlevelList[i] < zlevel && zlevelList[i + 1] > zlevel) {\n          break;\n        }\n      }\n\n      prevLayer = layersMap[zlevelList[i]];\n    }\n\n    zlevelList.splice(i + 1, 0, zlevel);\n    layersMap[zlevel] = layer; // Vitual layer will not directly show on the screen.\n    // (It can be a WebGL layer and assigned to a ZImage element)\n    // But it still under management of zrender.\n\n    if (!layer.virtual) {\n      if (prevLayer) {\n        var prevDom = prevLayer.dom;\n\n        if (prevDom.nextSibling) {\n          domRoot.insertBefore(layer.dom, prevDom.nextSibling);\n        } else {\n          domRoot.appendChild(layer.dom);\n        }\n      } else {\n        if (domRoot.firstChild) {\n          domRoot.insertBefore(layer.dom, domRoot.firstChild);\n        } else {\n          domRoot.appendChild(layer.dom);\n        }\n      }\n    }\n  },\n  // Iterate each layer\n  eachLayer: function (cb, context) {\n    var zlevelList = this._zlevelList;\n    var z;\n    var i;\n\n    for (i = 0; i < zlevelList.length; i++) {\n      z = zlevelList[i];\n      cb.call(context, this._layers[z], z);\n    }\n  },\n  // Iterate each buildin layer\n  eachBuiltinLayer: function (cb, context) {\n    var zlevelList = this._zlevelList;\n    var layer;\n    var z;\n    var i;\n\n    for (i = 0; i < zlevelList.length; i++) {\n      z = zlevelList[i];\n      layer = this._layers[z];\n\n      if (layer.__builtin__) {\n        cb.call(context, layer, z);\n      }\n    }\n  },\n  // Iterate each other layer except buildin layer\n  eachOtherLayer: function (cb, context) {\n    var zlevelList = this._zlevelList;\n    var layer;\n    var z;\n    var i;\n\n    for (i = 0; i < zlevelList.length; i++) {\n      z = zlevelList[i];\n      layer = this._layers[z];\n\n      if (!layer.__builtin__) {\n        cb.call(context, layer, z);\n      }\n    }\n  },\n\n  /**\n   * 获取所有已创建的层\n   * @param {Array.<module:zrender/Layer>} [prevLayer]\n   */\n  getLayers: function () {\n    return this._layers;\n  },\n  _updateLayerStatus: function (list) {\n    var layers = this._layers;\n    var progressiveLayers = this._progressiveLayers;\n    var elCountsLastFrame = {};\n    var progressiveElCountsLastFrame = {};\n    this.eachBuiltinLayer(function (layer, z) {\n      elCountsLastFrame[z] = layer.elCount;\n      layer.elCount = 0;\n      layer.__dirty = false;\n    });\n    util.each(progressiveLayers, function (layer, idx) {\n      progressiveElCountsLastFrame[idx] = layer.elCount;\n      layer.elCount = 0;\n      layer.__dirty = false;\n    });\n    var progressiveLayerCount = 0;\n    var currentProgressiveLayer;\n    var lastProgressiveKey;\n    var frameCount = 0;\n\n    for (var i = 0, l = list.length; i < l; i++) {\n      var el = list[i];\n      var zlevel = this._singleCanvas ? 0 : el.zlevel;\n      var layer = layers[zlevel];\n      var elProgress = el.progressive;\n\n      if (layer) {\n        layer.elCount++;\n        layer.__dirty = layer.__dirty || el.__dirty;\n      } /////// Update progressive\n\n\n      if (elProgress >= 0) {\n        // Fix wrong progressive sequence problem.\n        if (lastProgressiveKey !== elProgress) {\n          lastProgressiveKey = elProgress;\n          frameCount++;\n        }\n\n        var elFrame = el.__frame = frameCount - 1;\n\n        if (!currentProgressiveLayer) {\n          var idx = Math.min(progressiveLayerCount, MAX_PROGRESSIVE_LAYER_NUMBER - 1);\n          currentProgressiveLayer = progressiveLayers[idx];\n\n          if (!currentProgressiveLayer) {\n            currentProgressiveLayer = progressiveLayers[idx] = new Layer('progressive', this, this.dpr);\n            currentProgressiveLayer.initContext();\n          }\n\n          currentProgressiveLayer.__maxProgress = 0;\n        }\n\n        currentProgressiveLayer.__dirty = currentProgressiveLayer.__dirty || el.__dirty;\n        currentProgressiveLayer.elCount++;\n        currentProgressiveLayer.__maxProgress = Math.max(currentProgressiveLayer.__maxProgress, elFrame);\n\n        if (currentProgressiveLayer.__maxProgress >= currentProgressiveLayer.__progress) {\n          // Should keep rendering this  layer because progressive rendering is not finished yet\n          layer.__dirty = true;\n        }\n      } else {\n        el.__frame = -1;\n\n        if (currentProgressiveLayer) {\n          currentProgressiveLayer.__nextIdxNotProg = i;\n          progressiveLayerCount++;\n          currentProgressiveLayer = null;\n        }\n      }\n    }\n\n    if (currentProgressiveLayer) {\n      progressiveLayerCount++;\n      currentProgressiveLayer.__nextIdxNotProg = i;\n    } // 层中的元素数量有发生变化\n\n\n    this.eachBuiltinLayer(function (layer, z) {\n      if (elCountsLastFrame[z] !== layer.elCount) {\n        layer.__dirty = true;\n      }\n    });\n    progressiveLayers.length = Math.min(progressiveLayerCount, MAX_PROGRESSIVE_LAYER_NUMBER);\n    util.each(progressiveLayers, function (layer, idx) {\n      if (progressiveElCountsLastFrame[idx] !== layer.elCount) {\n        el.__dirty = true;\n      }\n\n      if (layer.__dirty) {\n        layer.__progress = 0;\n      }\n    });\n  },\n\n  /**\n   * 清除hover层外所有内容\n   */\n  clear: function () {\n    this.eachBuiltinLayer(this._clearLayer);\n    return this;\n  },\n  _clearLayer: function (layer) {\n    layer.clear();\n  },\n\n  /**\n   * 修改指定zlevel的绘制参数\n   *\n   * @param {string} zlevel\n   * @param {Object} config 配置对象\n   * @param {string} [config.clearColor=0] 每次清空画布的颜色\n   * @param {string} [config.motionBlur=false] 是否开启动态模糊\n   * @param {number} [config.lastFrameAlpha=0.7]\n   *                 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n   */\n  configLayer: function (zlevel, config) {\n    if (config) {\n      var layerConfig = this._layerConfig;\n\n      if (!layerConfig[zlevel]) {\n        layerConfig[zlevel] = config;\n      } else {\n        util.merge(layerConfig[zlevel], config, true);\n      }\n\n      var layer = this._layers[zlevel];\n\n      if (layer) {\n        util.merge(layer, layerConfig[zlevel], true);\n      }\n    }\n  },\n\n  /**\n   * 删除指定层\n   * @param {number} zlevel 层所在的zlevel\n   */\n  delLayer: function (zlevel) {\n    var layers = this._layers;\n    var zlevelList = this._zlevelList;\n    var layer = layers[zlevel];\n\n    if (!layer) {\n      return;\n    }\n\n    layer.dom.parentNode.removeChild(layer.dom);\n    delete layers[zlevel];\n    zlevelList.splice(util.indexOf(zlevelList, zlevel), 1);\n  },\n\n  /**\n   * 区域大小变化后重绘\n   */\n  resize: function (width, height) {\n    var domRoot = this._domRoot; // FIXME Why ?\n\n    domRoot.style.display = 'none'; // Save input w/h\n\n    var opts = this._opts;\n    width != null && (opts.width = width);\n    height != null && (opts.height = height);\n    width = this._getSize(0);\n    height = this._getSize(1);\n    domRoot.style.display = ''; // 优化没有实际改变的resize\n\n    if (this._width != width || height != this._height) {\n      domRoot.style.width = width + 'px';\n      domRoot.style.height = height + 'px';\n\n      for (var id in this._layers) {\n        if (this._layers.hasOwnProperty(id)) {\n          this._layers[id].resize(width, height);\n        }\n      }\n\n      util.each(this._progressiveLayers, function (layer) {\n        layer.resize(width, height);\n      });\n      this.refresh(true);\n    }\n\n    this._width = width;\n    this._height = height;\n    return this;\n  },\n\n  /**\n   * 清除单独的一个层\n   * @param {number} zlevel\n   */\n  clearLayer: function (zlevel) {\n    var layer = this._layers[zlevel];\n\n    if (layer) {\n      layer.clear();\n    }\n  },\n\n  /**\n   * 释放\n   */\n  dispose: function () {\n    this.root.innerHTML = '';\n    this.root = this.storage = this._domRoot = this._layers = null;\n  },\n\n  /**\n   * Get canvas which has all thing rendered\n   * @param {Object} opts\n   * @param {string} [opts.backgroundColor]\n   * @param {number} [opts.pixelRatio]\n   */\n  getRenderedCanvas: function (opts) {\n    opts = opts || {};\n\n    if (this._singleCanvas) {\n      return this._layers[0].dom;\n    }\n\n    var imageLayer = new Layer('image', this, opts.pixelRatio || this.dpr);\n    imageLayer.initContext();\n    imageLayer.clearColor = opts.backgroundColor;\n    imageLayer.clear();\n    var displayList = this.storage.getDisplayList(true);\n    var scope = {};\n    var zlevel;\n    var self = this;\n\n    function findAndDrawOtherLayer(smaller, larger) {\n      var zlevelList = self._zlevelList;\n\n      if (smaller == null) {\n        smaller = -Infinity;\n      }\n\n      var intermediateLayer;\n\n      for (var i = 0; i < zlevelList.length; i++) {\n        var z = zlevelList[i];\n        var layer = self._layers[z];\n\n        if (!layer.__builtin__ && z > smaller && z < larger) {\n          intermediateLayer = layer;\n          break;\n        }\n      }\n\n      if (intermediateLayer && intermediateLayer.renderToCanvas) {\n        imageLayer.ctx.save();\n        intermediateLayer.renderToCanvas(imageLayer.ctx);\n        imageLayer.ctx.restore();\n      }\n    }\n\n    for (var i = 0; i < displayList.length; i++) {\n      var el = displayList[i];\n\n      if (el.zlevel !== zlevel) {\n        findAndDrawOtherLayer(zlevel, el.zlevel);\n        zlevel = el.zlevel;\n      }\n\n      this._doPaintEl(el, imageLayer, true, scope);\n    }\n\n    findAndDrawOtherLayer(zlevel, Infinity);\n    return imageLayer.dom;\n  },\n\n  /**\n   * 获取绘图区域宽度\n   */\n  getWidth: function () {\n    return this._width;\n  },\n\n  /**\n   * 获取绘图区域高度\n   */\n  getHeight: function () {\n    return this._height;\n  },\n  _getSize: function (whIdx) {\n    var opts = this._opts;\n    var wh = ['width', 'height'][whIdx];\n    var cwh = ['clientWidth', 'clientHeight'][whIdx];\n    var plt = ['paddingLeft', 'paddingTop'][whIdx];\n    var prb = ['paddingRight', 'paddingBottom'][whIdx];\n\n    if (opts[wh] != null && opts[wh] !== 'auto') {\n      return parseFloat(opts[wh]);\n    }\n\n    var root = this.root; // IE8 does not support getComputedStyle, but it use VML.\n\n    var stl = document.defaultView.getComputedStyle(root);\n    return (root[cwh] || parseInt10(stl[wh]) || parseInt10(root.style[wh])) - (parseInt10(stl[plt]) || 0) - (parseInt10(stl[prb]) || 0) | 0;\n  },\n  pathToImage: function (path, dpr) {\n    dpr = dpr || this.dpr;\n    var canvas = document.createElement('canvas');\n    var ctx = canvas.getContext('2d');\n    var rect = path.getBoundingRect();\n    var style = path.style;\n    var shadowBlurSize = style.shadowBlur;\n    var shadowOffsetX = style.shadowOffsetX;\n    var shadowOffsetY = style.shadowOffsetY;\n    var lineWidth = style.hasStroke() ? style.lineWidth : 0;\n    var leftMargin = Math.max(lineWidth / 2, -shadowOffsetX + shadowBlurSize);\n    var rightMargin = Math.max(lineWidth / 2, shadowOffsetX + shadowBlurSize);\n    var topMargin = Math.max(lineWidth / 2, -shadowOffsetY + shadowBlurSize);\n    var bottomMargin = Math.max(lineWidth / 2, shadowOffsetY + shadowBlurSize);\n    var width = rect.width + leftMargin + rightMargin;\n    var height = rect.height + topMargin + bottomMargin;\n    canvas.width = width * dpr;\n    canvas.height = height * dpr;\n    ctx.scale(dpr, dpr);\n    ctx.clearRect(0, 0, width, height);\n    ctx.dpr = dpr;\n    var pathTransform = {\n      position: path.position,\n      rotation: path.rotation,\n      scale: path.scale\n    };\n    path.position = [leftMargin - rect.x, topMargin - rect.y];\n    path.rotation = 0;\n    path.scale = [1, 1];\n    path.updateTransform();\n\n    if (path) {\n      path.brush(ctx);\n    }\n\n    var ImageShape = Image;\n    var imgShape = new ImageShape({\n      style: {\n        x: 0,\n        y: 0,\n        image: canvas\n      }\n    });\n\n    if (pathTransform.position != null) {\n      imgShape.position = path.position = pathTransform.position;\n    }\n\n    if (pathTransform.rotation != null) {\n      imgShape.rotation = path.rotation = pathTransform.rotation;\n    }\n\n    if (pathTransform.scale != null) {\n      imgShape.scale = path.scale = pathTransform.scale;\n    }\n\n    return imgShape;\n  }\n};\nvar _default = Painter;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/Painter.js\n// module id = 1759\n// module chunks = 2 3","var util = require(\"./core/util\");\n\nvar env = require(\"./core/env\");\n\nvar Group = require(\"./container/Group\");\n\nvar timsort = require(\"./core/timsort\");\n\n/**\n * Storage内容仓库模块\n * @module zrender/Storage\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n * @author errorrik (errorrik@gmail.com)\n * @author pissang (https://github.com/pissang/)\n */\n// Use timsort because in most case elements are partially sorted\n// https://jsfiddle.net/pissang/jr4x7mdm/8/\nfunction shapeCompareFunc(a, b) {\n  if (a.zlevel === b.zlevel) {\n    if (a.z === b.z) {\n      // if (a.z2 === b.z2) {\n      //     // FIXME Slow has renderidx compare\n      //     // http://stackoverflow.com/questions/20883421/sorting-in-javascript-should-every-compare-function-have-a-return-0-statement\n      //     // https://github.com/v8/v8/blob/47cce544a31ed5577ffe2963f67acb4144ee0232/src/js/array.js#L1012\n      //     return a.__renderidx - b.__renderidx;\n      // }\n      return a.z2 - b.z2;\n    }\n\n    return a.z - b.z;\n  }\n\n  return a.zlevel - b.zlevel;\n}\n/**\n * 内容仓库 (M)\n * @alias module:zrender/Storage\n * @constructor\n */\n\n\nvar Storage = function () {\n  // jshint ignore:line\n  this._roots = [];\n  this._displayList = [];\n  this._displayListLen = 0;\n};\n\nStorage.prototype = {\n  constructor: Storage,\n\n  /**\n   * @param  {Function} cb\n   *\n   */\n  traverse: function (cb, context) {\n    for (var i = 0; i < this._roots.length; i++) {\n      this._roots[i].traverse(cb, context);\n    }\n  },\n\n  /**\n   * 返回所有图形的绘制队列\n   * @param {boolean} [update=false] 是否在返回前更新该数组\n   * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组, 在 update 为 true 的时候有效\n   *\n   * 详见{@link module:zrender/graphic/Displayable.prototype.updateDisplayList}\n   * @return {Array.<module:zrender/graphic/Displayable>}\n   */\n  getDisplayList: function (update, includeIgnore) {\n    includeIgnore = includeIgnore || false;\n\n    if (update) {\n      this.updateDisplayList(includeIgnore);\n    }\n\n    return this._displayList;\n  },\n\n  /**\n   * 更新图形的绘制队列。\n   * 每次绘制前都会调用，该方法会先深度优先遍历整个树，更新所有Group和Shape的变换并且把所有可见的Shape保存到数组中，\n   * 最后根据绘制的优先级（zlevel > z > 插入顺序）排序得到绘制队列\n   * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组\n   */\n  updateDisplayList: function (includeIgnore) {\n    this._displayListLen = 0;\n    var roots = this._roots;\n    var displayList = this._displayList;\n\n    for (var i = 0, len = roots.length; i < len; i++) {\n      this._updateAndAddDisplayable(roots[i], null, includeIgnore);\n    }\n\n    displayList.length = this._displayListLen; // for (var i = 0, len = displayList.length; i < len; i++) {\n    //     displayList[i].__renderidx = i;\n    // }\n    // displayList.sort(shapeCompareFunc);\n\n    env.canvasSupported && timsort(displayList, shapeCompareFunc);\n  },\n  _updateAndAddDisplayable: function (el, clipPaths, includeIgnore) {\n    if (el.ignore && !includeIgnore) {\n      return;\n    }\n\n    el.beforeUpdate();\n\n    if (el.__dirty) {\n      el.update();\n    }\n\n    el.afterUpdate();\n    var userSetClipPath = el.clipPath;\n\n    if (userSetClipPath) {\n      // FIXME 效率影响\n      if (clipPaths) {\n        clipPaths = clipPaths.slice();\n      } else {\n        clipPaths = [];\n      }\n\n      var currentClipPath = userSetClipPath;\n      var parentClipPath = el; // Recursively add clip path\n\n      while (currentClipPath) {\n        // clipPath 的变换是基于使用这个 clipPath 的元素\n        currentClipPath.parent = parentClipPath;\n        currentClipPath.updateTransform();\n        clipPaths.push(currentClipPath);\n        parentClipPath = currentClipPath;\n        currentClipPath = currentClipPath.clipPath;\n      }\n    }\n\n    if (el.isGroup) {\n      var children = el._children;\n\n      for (var i = 0; i < children.length; i++) {\n        var child = children[i]; // Force to mark as dirty if group is dirty\n        // FIXME __dirtyPath ?\n\n        if (el.__dirty) {\n          child.__dirty = true;\n        }\n\n        this._updateAndAddDisplayable(child, clipPaths, includeIgnore);\n      } // Mark group clean here\n\n\n      el.__dirty = false;\n    } else {\n      el.__clipPaths = clipPaths;\n      this._displayList[this._displayListLen++] = el;\n    }\n  },\n\n  /**\n   * 添加图形(Shape)或者组(Group)到根节点\n   * @param {module:zrender/Element} el\n   */\n  addRoot: function (el) {\n    if (el.__storage === this) {\n      return;\n    }\n\n    if (el instanceof Group) {\n      el.addChildrenToStorage(this);\n    }\n\n    this.addToStorage(el);\n\n    this._roots.push(el);\n  },\n\n  /**\n   * 删除指定的图形(Shape)或者组(Group)\n   * @param {string|Array.<string>} [el] 如果为空清空整个Storage\n   */\n  delRoot: function (el) {\n    if (el == null) {\n      // 不指定el清空\n      for (var i = 0; i < this._roots.length; i++) {\n        var root = this._roots[i];\n\n        if (root instanceof Group) {\n          root.delChildrenFromStorage(this);\n        }\n      }\n\n      this._roots = [];\n      this._displayList = [];\n      this._displayListLen = 0;\n      return;\n    }\n\n    if (el instanceof Array) {\n      for (var i = 0, l = el.length; i < l; i++) {\n        this.delRoot(el[i]);\n      }\n\n      return;\n    }\n\n    var idx = util.indexOf(this._roots, el);\n\n    if (idx >= 0) {\n      this.delFromStorage(el);\n\n      this._roots.splice(idx, 1);\n\n      if (el instanceof Group) {\n        el.delChildrenFromStorage(this);\n      }\n    }\n  },\n  addToStorage: function (el) {\n    el.__storage = this;\n    el.dirty(false);\n    return this;\n  },\n  delFromStorage: function (el) {\n    if (el) {\n      el.__storage = null;\n    }\n\n    return this;\n  },\n\n  /**\n   * 清空并且释放Storage\n   */\n  dispose: function () {\n    this._renderList = this._roots = null;\n  },\n  displayableSortFunc: shapeCompareFunc\n};\nvar _default = Storage;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/Storage.js\n// module id = 1760\n// module chunks = 2 3","var util = require(\"../core/util\");\n\nvar _event = require(\"../core/event\");\n\nvar Dispatcher = _event.Dispatcher;\n\nvar requestAnimationFrame = require(\"./requestAnimationFrame\");\n\nvar Animator = require(\"./Animator\");\n\n/**\n * 动画主类, 调度和管理所有动画控制器\n *\n * @module zrender/animation/Animation\n * @author pissang(https://github.com/pissang)\n */\n// TODO Additive animation\n// http://iosoteric.com/additive-animations-animatewithduration-in-ios-8/\n// https://developer.apple.com/videos/wwdc2014/#236\n\n/**\n * @typedef {Object} IZRenderStage\n * @property {Function} update\n */\n\n/**\n * @alias module:zrender/animation/Animation\n * @constructor\n * @param {Object} [options]\n * @param {Function} [options.onframe]\n * @param {IZRenderStage} [options.stage]\n * @example\n *     var animation = new Animation();\n *     var obj = {\n *         x: 100,\n *         y: 100\n *     };\n *     animation.animate(node.position)\n *         .when(1000, {\n *             x: 500,\n *             y: 500\n *         })\n *         .when(2000, {\n *             x: 100,\n *             y: 100\n *         })\n *         .start('spline');\n */\nvar Animation = function (options) {\n  options = options || {};\n  this.stage = options.stage || {};\n\n  this.onframe = options.onframe || function () {}; // private properties\n\n\n  this._clips = [];\n  this._running = false;\n  this._time;\n  this._pausedTime;\n  this._pauseStart;\n  this._paused = false;\n  Dispatcher.call(this);\n};\n\nAnimation.prototype = {\n  constructor: Animation,\n\n  /**\n   * 添加 clip\n   * @param {module:zrender/animation/Clip} clip\n   */\n  addClip: function (clip) {\n    this._clips.push(clip);\n  },\n\n  /**\n   * 添加 animator\n   * @param {module:zrender/animation/Animator} animator\n   */\n  addAnimator: function (animator) {\n    animator.animation = this;\n    var clips = animator.getClips();\n\n    for (var i = 0; i < clips.length; i++) {\n      this.addClip(clips[i]);\n    }\n  },\n\n  /**\n   * 删除动画片段\n   * @param {module:zrender/animation/Clip} clip\n   */\n  removeClip: function (clip) {\n    var idx = util.indexOf(this._clips, clip);\n\n    if (idx >= 0) {\n      this._clips.splice(idx, 1);\n    }\n  },\n\n  /**\n   * 删除动画片段\n   * @param {module:zrender/animation/Animator} animator\n   */\n  removeAnimator: function (animator) {\n    var clips = animator.getClips();\n\n    for (var i = 0; i < clips.length; i++) {\n      this.removeClip(clips[i]);\n    }\n\n    animator.animation = null;\n  },\n  _update: function () {\n    var time = new Date().getTime() - this._pausedTime;\n\n    var delta = time - this._time;\n    var clips = this._clips;\n    var len = clips.length;\n    var deferredEvents = [];\n    var deferredClips = [];\n\n    for (var i = 0; i < len; i++) {\n      var clip = clips[i];\n      var e = clip.step(time, delta); // Throw out the events need to be called after\n      // stage.update, like destroy\n\n      if (e) {\n        deferredEvents.push(e);\n        deferredClips.push(clip);\n      }\n    } // Remove the finished clip\n\n\n    for (var i = 0; i < len;) {\n      if (clips[i]._needsRemove) {\n        clips[i] = clips[len - 1];\n        clips.pop();\n        len--;\n      } else {\n        i++;\n      }\n    }\n\n    len = deferredEvents.length;\n\n    for (var i = 0; i < len; i++) {\n      deferredClips[i].fire(deferredEvents[i]);\n    }\n\n    this._time = time;\n    this.onframe(delta);\n    this.trigger('frame', delta);\n\n    if (this.stage.update) {\n      this.stage.update();\n    }\n  },\n  _startLoop: function () {\n    var self = this;\n    this._running = true;\n\n    function step() {\n      if (self._running) {\n        requestAnimationFrame(step);\n        !self._paused && self._update();\n      }\n    }\n\n    requestAnimationFrame(step);\n  },\n\n  /**\n   * 开始运行动画\n   */\n  start: function () {\n    this._time = new Date().getTime();\n    this._pausedTime = 0;\n\n    this._startLoop();\n  },\n\n  /**\n   * 停止运行动画\n   */\n  stop: function () {\n    this._running = false;\n  },\n\n  /**\n   * Pause\n   */\n  pause: function () {\n    if (!this._paused) {\n      this._pauseStart = new Date().getTime();\n      this._paused = true;\n    }\n  },\n\n  /**\n   * Resume\n   */\n  resume: function () {\n    if (this._paused) {\n      this._pausedTime += new Date().getTime() - this._pauseStart;\n      this._paused = false;\n    }\n  },\n\n  /**\n   * 清除所有动画片段\n   */\n  clear: function () {\n    this._clips = [];\n  },\n\n  /**\n   * 对一个目标创建一个animator对象，可以指定目标中的属性使用动画\n   * @param  {Object} target\n   * @param  {Object} options\n   * @param  {boolean} [options.loop=false] 是否循环播放动画\n   * @param  {Function} [options.getter=null]\n   *         如果指定getter函数，会通过getter函数取属性值\n   * @param  {Function} [options.setter=null]\n   *         如果指定setter函数，会通过setter函数设置属性值\n   * @return {module:zrender/animation/Animation~Animator}\n   */\n  // TODO Gap\n  animate: function (target, options) {\n    options = options || {};\n    var animator = new Animator(target, options.loop, options.getter, options.setter);\n    this.addAnimator(animator);\n    return animator;\n  }\n};\nutil.mixin(Animation, Dispatcher);\nvar _default = Animation;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/animation/Animation.js\n// module id = 1761\n// module chunks = 2 3","var easingFuncs = require(\"./easing\");\n\n/**\n * 动画主控制器\n * @config target 动画对象，可以是数组，如果是数组的话会批量分发onframe等事件\n * @config life(1000) 动画时长\n * @config delay(0) 动画延迟时间\n * @config loop(true)\n * @config gap(0) 循环的间隔时间\n * @config onframe\n * @config easing(optional)\n * @config ondestroy(optional)\n * @config onrestart(optional)\n *\n * TODO pause\n */\nfunction Clip(options) {\n  this._target = options.target; // 生命周期\n\n  this._life = options.life || 1000; // 延时\n\n  this._delay = options.delay || 0; // 开始时间\n  // this._startTime = new Date().getTime() + this._delay;// 单位毫秒\n\n  this._initialized = false; // 是否循环\n\n  this.loop = options.loop == null ? false : options.loop;\n  this.gap = options.gap || 0;\n  this.easing = options.easing || 'Linear';\n  this.onframe = options.onframe;\n  this.ondestroy = options.ondestroy;\n  this.onrestart = options.onrestart;\n  this._pausedTime = 0;\n  this._paused = false;\n}\n\nClip.prototype = {\n  constructor: Clip,\n  step: function (globalTime, deltaTime) {\n    // Set startTime on first step, or _startTime may has milleseconds different between clips\n    // PENDING\n    if (!this._initialized) {\n      this._startTime = globalTime + this._delay;\n      this._initialized = true;\n    }\n\n    if (this._paused) {\n      this._pausedTime += deltaTime;\n      return;\n    }\n\n    var percent = (globalTime - this._startTime - this._pausedTime) / this._life; // 还没开始\n\n    if (percent < 0) {\n      return;\n    }\n\n    percent = Math.min(percent, 1);\n    var easing = this.easing;\n    var easingFunc = typeof easing == 'string' ? easingFuncs[easing] : easing;\n    var schedule = typeof easingFunc === 'function' ? easingFunc(percent) : percent;\n    this.fire('frame', schedule); // 结束\n\n    if (percent == 1) {\n      if (this.loop) {\n        this.restart(globalTime); // 重新开始周期\n        // 抛出而不是直接调用事件直到 stage.update 后再统一调用这些事件\n\n        return 'restart';\n      } // 动画完成将这个控制器标识为待删除\n      // 在Animation.update中进行批量删除\n\n\n      this._needsRemove = true;\n      return 'destroy';\n    }\n\n    return null;\n  },\n  restart: function (globalTime) {\n    var remainder = (globalTime - this._startTime - this._pausedTime) % this._life;\n    this._startTime = globalTime - remainder + this.gap;\n    this._pausedTime = 0;\n    this._needsRemove = false;\n  },\n  fire: function (eventType, arg) {\n    eventType = 'on' + eventType;\n\n    if (this[eventType]) {\n      this[eventType](this._target, arg);\n    }\n  },\n  pause: function () {\n    this._paused = true;\n  },\n  resume: function () {\n    this._paused = false;\n  }\n};\nvar _default = Clip;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/animation/Clip.js\n// module id = 1762\n// module chunks = 2 3","/**\n * 缓动代码来自 https://github.com/sole/tween.js/blob/master/src/Tween.js\n * @see http://sole.github.io/tween.js/examples/03_graphs.html\n * @exports zrender/animation/easing\n */\nvar easing = {\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  linear: function (k) {\n    return k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quadraticIn: function (k) {\n    return k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quadraticOut: function (k) {\n    return k * (2 - k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quadraticInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k;\n    }\n\n    return -0.5 * (--k * (k - 2) - 1);\n  },\n  // 三次方的缓动（t^3）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  cubicIn: function (k) {\n    return k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  cubicOut: function (k) {\n    return --k * k * k + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  cubicInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k * k;\n    }\n\n    return 0.5 * ((k -= 2) * k * k + 2);\n  },\n  // 四次方的缓动（t^4）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quarticIn: function (k) {\n    return k * k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quarticOut: function (k) {\n    return 1 - --k * k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quarticInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k * k * k;\n    }\n\n    return -0.5 * ((k -= 2) * k * k * k - 2);\n  },\n  // 五次方的缓动（t^5）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quinticIn: function (k) {\n    return k * k * k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quinticOut: function (k) {\n    return --k * k * k * k * k + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quinticInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k * k * k * k;\n    }\n\n    return 0.5 * ((k -= 2) * k * k * k * k + 2);\n  },\n  // 正弦曲线的缓动（sin(t)）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  sinusoidalIn: function (k) {\n    return 1 - Math.cos(k * Math.PI / 2);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  sinusoidalOut: function (k) {\n    return Math.sin(k * Math.PI / 2);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  sinusoidalInOut: function (k) {\n    return 0.5 * (1 - Math.cos(Math.PI * k));\n  },\n  // 指数曲线的缓动（2^t）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  exponentialIn: function (k) {\n    return k === 0 ? 0 : Math.pow(1024, k - 1);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  exponentialOut: function (k) {\n    return k === 1 ? 1 : 1 - Math.pow(2, -10 * k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  exponentialInOut: function (k) {\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if ((k *= 2) < 1) {\n      return 0.5 * Math.pow(1024, k - 1);\n    }\n\n    return 0.5 * (-Math.pow(2, -10 * (k - 1)) + 2);\n  },\n  // 圆形曲线的缓动（sqrt(1-t^2)）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  circularIn: function (k) {\n    return 1 - Math.sqrt(1 - k * k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  circularOut: function (k) {\n    return Math.sqrt(1 - --k * k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  circularInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return -0.5 * (Math.sqrt(1 - k * k) - 1);\n    }\n\n    return 0.5 * (Math.sqrt(1 - (k -= 2) * k) + 1);\n  },\n  // 创建类似于弹簧在停止前来回振荡的动画\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  elasticIn: function (k) {\n    var s;\n    var a = 0.1;\n    var p = 0.4;\n\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if (!a || a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p * Math.asin(1 / a) / (2 * Math.PI);\n    }\n\n    return -(a * Math.pow(2, 10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p));\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  elasticOut: function (k) {\n    var s;\n    var a = 0.1;\n    var p = 0.4;\n\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if (!a || a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p * Math.asin(1 / a) / (2 * Math.PI);\n    }\n\n    return a * Math.pow(2, -10 * k) * Math.sin((k - s) * (2 * Math.PI) / p) + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  elasticInOut: function (k) {\n    var s;\n    var a = 0.1;\n    var p = 0.4;\n\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if (!a || a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p * Math.asin(1 / a) / (2 * Math.PI);\n    }\n\n    if ((k *= 2) < 1) {\n      return -0.5 * (a * Math.pow(2, 10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p));\n    }\n\n    return a * Math.pow(2, -10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p) * 0.5 + 1;\n  },\n  // 在某一动画开始沿指示的路径进行动画处理前稍稍收回该动画的移动\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  backIn: function (k) {\n    var s = 1.70158;\n    return k * k * ((s + 1) * k - s);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  backOut: function (k) {\n    var s = 1.70158;\n    return --k * k * ((s + 1) * k + s) + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  backInOut: function (k) {\n    var s = 1.70158 * 1.525;\n\n    if ((k *= 2) < 1) {\n      return 0.5 * (k * k * ((s + 1) * k - s));\n    }\n\n    return 0.5 * ((k -= 2) * k * ((s + 1) * k + s) + 2);\n  },\n  // 创建弹跳效果\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  bounceIn: function (k) {\n    return 1 - easing.bounceOut(1 - k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  bounceOut: function (k) {\n    if (k < 1 / 2.75) {\n      return 7.5625 * k * k;\n    } else if (k < 2 / 2.75) {\n      return 7.5625 * (k -= 1.5 / 2.75) * k + 0.75;\n    } else if (k < 2.5 / 2.75) {\n      return 7.5625 * (k -= 2.25 / 2.75) * k + 0.9375;\n    } else {\n      return 7.5625 * (k -= 2.625 / 2.75) * k + 0.984375;\n    }\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  bounceInOut: function (k) {\n    if (k < 0.5) {\n      return easing.bounceIn(k * 2) * 0.5;\n    }\n\n    return easing.bounceOut(k * 2 - 1) * 0.5 + 0.5;\n  }\n};\nvar _default = easing;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/animation/easing.js\n// module id = 1763\n// module chunks = 2 3","var _util = require(\"./util\");\n\nvar normalizeRadian = _util.normalizeRadian;\nvar PI2 = Math.PI * 2;\n/**\n * 圆弧描边包含判断\n * @param  {number}  cx\n * @param  {number}  cy\n * @param  {number}  r\n * @param  {number}  startAngle\n * @param  {number}  endAngle\n * @param  {boolean}  anticlockwise\n * @param  {number} lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {Boolean}\n */\n\nfunction containStroke(cx, cy, r, startAngle, endAngle, anticlockwise, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth;\n  x -= cx;\n  y -= cy;\n  var d = Math.sqrt(x * x + y * y);\n\n  if (d - _l > r || d + _l < r) {\n    return false;\n  }\n\n  if (Math.abs(startAngle - endAngle) % PI2 < 1e-4) {\n    // Is a circle\n    return true;\n  }\n\n  if (anticlockwise) {\n    var tmp = startAngle;\n    startAngle = normalizeRadian(endAngle);\n    endAngle = normalizeRadian(tmp);\n  } else {\n    startAngle = normalizeRadian(startAngle);\n    endAngle = normalizeRadian(endAngle);\n  }\n\n  if (startAngle > endAngle) {\n    endAngle += PI2;\n  }\n\n  var angle = Math.atan2(y, x);\n\n  if (angle < 0) {\n    angle += PI2;\n  }\n\n  return angle >= startAngle && angle <= endAngle || angle + PI2 >= startAngle && angle + PI2 <= endAngle;\n}\n\nexports.containStroke = containStroke;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/arc.js\n// module id = 1764\n// module chunks = 2 3","var curve = require(\"../core/curve\");\n\n/**\n * 三次贝塞尔曲线描边包含判断\n * @param  {number}  x0\n * @param  {number}  y0\n * @param  {number}  x1\n * @param  {number}  y1\n * @param  {number}  x2\n * @param  {number}  y2\n * @param  {number}  x3\n * @param  {number}  y3\n * @param  {number}  lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {boolean}\n */\nfunction containStroke(x0, y0, x1, y1, x2, y2, x3, y3, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth; // Quick reject\n\n  if (y > y0 + _l && y > y1 + _l && y > y2 + _l && y > y3 + _l || y < y0 - _l && y < y1 - _l && y < y2 - _l && y < y3 - _l || x > x0 + _l && x > x1 + _l && x > x2 + _l && x > x3 + _l || x < x0 - _l && x < x1 - _l && x < x2 - _l && x < x3 - _l) {\n    return false;\n  }\n\n  var d = curve.cubicProjectPoint(x0, y0, x1, y1, x2, y2, x3, y3, x, y, null);\n  return d <= _l / 2;\n}\n\nexports.containStroke = containStroke;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/cubic.js\n// module id = 1765\n// module chunks = 2 3","/**\n * 线段包含判断\n * @param  {number}  x0\n * @param  {number}  y0\n * @param  {number}  x1\n * @param  {number}  y1\n * @param  {number}  lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {boolean}\n */\nfunction containStroke(x0, y0, x1, y1, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth;\n  var _a = 0;\n  var _b = x0; // Quick reject\n\n  if (y > y0 + _l && y > y1 + _l || y < y0 - _l && y < y1 - _l || x > x0 + _l && x > x1 + _l || x < x0 - _l && x < x1 - _l) {\n    return false;\n  }\n\n  if (x0 !== x1) {\n    _a = (y0 - y1) / (x0 - x1);\n    _b = (x0 * y1 - x1 * y0) / (x0 - x1);\n  } else {\n    return Math.abs(x - x0) <= _l / 2;\n  }\n\n  var tmp = _a * x - y + _b;\n\n  var _s = tmp * tmp / (_a * _a + 1);\n\n  return _s <= _l / 2 * _l / 2;\n}\n\nexports.containStroke = containStroke;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/line.js\n// module id = 1766\n// module chunks = 2 3","var PathProxy = require(\"../core/PathProxy\");\n\nvar line = require(\"./line\");\n\nvar cubic = require(\"./cubic\");\n\nvar quadratic = require(\"./quadratic\");\n\nvar arc = require(\"./arc\");\n\nvar _util = require(\"./util\");\n\nvar normalizeRadian = _util.normalizeRadian;\n\nvar curve = require(\"../core/curve\");\n\nvar windingLine = require(\"./windingLine\");\n\nvar CMD = PathProxy.CMD;\nvar PI2 = Math.PI * 2;\nvar EPSILON = 1e-4;\n\nfunction isAroundEqual(a, b) {\n  return Math.abs(a - b) < EPSILON;\n} // 临时数组\n\n\nvar roots = [-1, -1, -1];\nvar extrema = [-1, -1];\n\nfunction swapExtrema() {\n  var tmp = extrema[0];\n  extrema[0] = extrema[1];\n  extrema[1] = tmp;\n}\n\nfunction windingCubic(x0, y0, x1, y1, x2, y2, x3, y3, x, y) {\n  // Quick reject\n  if (y > y0 && y > y1 && y > y2 && y > y3 || y < y0 && y < y1 && y < y2 && y < y3) {\n    return 0;\n  }\n\n  var nRoots = curve.cubicRootAt(y0, y1, y2, y3, y, roots);\n\n  if (nRoots === 0) {\n    return 0;\n  } else {\n    var w = 0;\n    var nExtrema = -1;\n    var y0_, y1_;\n\n    for (var i = 0; i < nRoots; i++) {\n      var t = roots[i]; // Avoid winding error when intersection point is the connect point of two line of polygon\n\n      var unit = t === 0 || t === 1 ? 0.5 : 1;\n      var x_ = curve.cubicAt(x0, x1, x2, x3, t);\n\n      if (x_ < x) {\n        // Quick reject\n        continue;\n      }\n\n      if (nExtrema < 0) {\n        nExtrema = curve.cubicExtrema(y0, y1, y2, y3, extrema);\n\n        if (extrema[1] < extrema[0] && nExtrema > 1) {\n          swapExtrema();\n        }\n\n        y0_ = curve.cubicAt(y0, y1, y2, y3, extrema[0]);\n\n        if (nExtrema > 1) {\n          y1_ = curve.cubicAt(y0, y1, y2, y3, extrema[1]);\n        }\n      }\n\n      if (nExtrema == 2) {\n        // 分成三段单调函数\n        if (t < extrema[0]) {\n          w += y0_ < y0 ? unit : -unit;\n        } else if (t < extrema[1]) {\n          w += y1_ < y0_ ? unit : -unit;\n        } else {\n          w += y3 < y1_ ? unit : -unit;\n        }\n      } else {\n        // 分成两段单调函数\n        if (t < extrema[0]) {\n          w += y0_ < y0 ? unit : -unit;\n        } else {\n          w += y3 < y0_ ? unit : -unit;\n        }\n      }\n    }\n\n    return w;\n  }\n}\n\nfunction windingQuadratic(x0, y0, x1, y1, x2, y2, x, y) {\n  // Quick reject\n  if (y > y0 && y > y1 && y > y2 || y < y0 && y < y1 && y < y2) {\n    return 0;\n  }\n\n  var nRoots = curve.quadraticRootAt(y0, y1, y2, y, roots);\n\n  if (nRoots === 0) {\n    return 0;\n  } else {\n    var t = curve.quadraticExtremum(y0, y1, y2);\n\n    if (t >= 0 && t <= 1) {\n      var w = 0;\n      var y_ = curve.quadraticAt(y0, y1, y2, t);\n\n      for (var i = 0; i < nRoots; i++) {\n        // Remove one endpoint.\n        var unit = roots[i] === 0 || roots[i] === 1 ? 0.5 : 1;\n        var x_ = curve.quadraticAt(x0, x1, x2, roots[i]);\n\n        if (x_ < x) {\n          // Quick reject\n          continue;\n        }\n\n        if (roots[i] < t) {\n          w += y_ < y0 ? unit : -unit;\n        } else {\n          w += y2 < y_ ? unit : -unit;\n        }\n      }\n\n      return w;\n    } else {\n      // Remove one endpoint.\n      var unit = roots[0] === 0 || roots[0] === 1 ? 0.5 : 1;\n      var x_ = curve.quadraticAt(x0, x1, x2, roots[0]);\n\n      if (x_ < x) {\n        // Quick reject\n        return 0;\n      }\n\n      return y2 < y0 ? unit : -unit;\n    }\n  }\n} // TODO\n// Arc 旋转\n\n\nfunction windingArc(cx, cy, r, startAngle, endAngle, anticlockwise, x, y) {\n  y -= cy;\n\n  if (y > r || y < -r) {\n    return 0;\n  }\n\n  var tmp = Math.sqrt(r * r - y * y);\n  roots[0] = -tmp;\n  roots[1] = tmp;\n  var diff = Math.abs(startAngle - endAngle);\n\n  if (diff < 1e-4) {\n    return 0;\n  }\n\n  if (diff % PI2 < 1e-4) {\n    // Is a circle\n    startAngle = 0;\n    endAngle = PI2;\n    var dir = anticlockwise ? 1 : -1;\n\n    if (x >= roots[0] + cx && x <= roots[1] + cx) {\n      return dir;\n    } else {\n      return 0;\n    }\n  }\n\n  if (anticlockwise) {\n    var tmp = startAngle;\n    startAngle = normalizeRadian(endAngle);\n    endAngle = normalizeRadian(tmp);\n  } else {\n    startAngle = normalizeRadian(startAngle);\n    endAngle = normalizeRadian(endAngle);\n  }\n\n  if (startAngle > endAngle) {\n    endAngle += PI2;\n  }\n\n  var w = 0;\n\n  for (var i = 0; i < 2; i++) {\n    var x_ = roots[i];\n\n    if (x_ + cx > x) {\n      var angle = Math.atan2(y, x_);\n      var dir = anticlockwise ? 1 : -1;\n\n      if (angle < 0) {\n        angle = PI2 + angle;\n      }\n\n      if (angle >= startAngle && angle <= endAngle || angle + PI2 >= startAngle && angle + PI2 <= endAngle) {\n        if (angle > Math.PI / 2 && angle < Math.PI * 1.5) {\n          dir = -dir;\n        }\n\n        w += dir;\n      }\n    }\n  }\n\n  return w;\n}\n\nfunction containPath(data, lineWidth, isStroke, x, y) {\n  var w = 0;\n  var xi = 0;\n  var yi = 0;\n  var x0 = 0;\n  var y0 = 0;\n\n  for (var i = 0; i < data.length;) {\n    var cmd = data[i++]; // Begin a new subpath\n\n    if (cmd === CMD.M && i > 1) {\n      // Close previous subpath\n      if (!isStroke) {\n        w += windingLine(xi, yi, x0, y0, x, y);\n      } // 如果被任何一个 subpath 包含\n      // if (w !== 0) {\n      //     return true;\n      // }\n\n    }\n\n    if (i == 1) {\n      // 如果第一个命令是 L, C, Q\n      // 则 previous point 同绘制命令的第一个 point\n      //\n      // 第一个命令为 Arc 的情况下会在后面特殊处理\n      xi = data[i];\n      yi = data[i + 1];\n      x0 = xi;\n      y0 = yi;\n    }\n\n    switch (cmd) {\n      case CMD.M:\n        // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n        // 在 closePath 的时候使用\n        x0 = data[i++];\n        y0 = data[i++];\n        xi = x0;\n        yi = y0;\n        break;\n\n      case CMD.L:\n        if (isStroke) {\n          if (line.containStroke(xi, yi, data[i], data[i + 1], lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          // NOTE 在第一个命令为 L, C, Q 的时候会计算出 NaN\n          w += windingLine(xi, yi, data[i], data[i + 1], x, y) || 0;\n        }\n\n        xi = data[i++];\n        yi = data[i++];\n        break;\n\n      case CMD.C:\n        if (isStroke) {\n          if (cubic.containStroke(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          w += windingCubic(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], x, y) || 0;\n        }\n\n        xi = data[i++];\n        yi = data[i++];\n        break;\n\n      case CMD.Q:\n        if (isStroke) {\n          if (quadratic.containStroke(xi, yi, data[i++], data[i++], data[i], data[i + 1], lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          w += windingQuadratic(xi, yi, data[i++], data[i++], data[i], data[i + 1], x, y) || 0;\n        }\n\n        xi = data[i++];\n        yi = data[i++];\n        break;\n\n      case CMD.A:\n        // TODO Arc 判断的开销比较大\n        var cx = data[i++];\n        var cy = data[i++];\n        var rx = data[i++];\n        var ry = data[i++];\n        var theta = data[i++];\n        var dTheta = data[i++]; // TODO Arc 旋转\n\n        var psi = data[i++];\n        var anticlockwise = 1 - data[i++];\n        var x1 = Math.cos(theta) * rx + cx;\n        var y1 = Math.sin(theta) * ry + cy; // 不是直接使用 arc 命令\n\n        if (i > 1) {\n          w += windingLine(xi, yi, x1, y1, x, y);\n        } else {\n          // 第一个命令起点还未定义\n          x0 = x1;\n          y0 = y1;\n        } // zr 使用scale来模拟椭圆, 这里也对x做一定的缩放\n\n\n        var _x = (x - cx) * ry / rx + cx;\n\n        if (isStroke) {\n          if (arc.containStroke(cx, cy, ry, theta, theta + dTheta, anticlockwise, lineWidth, _x, y)) {\n            return true;\n          }\n        } else {\n          w += windingArc(cx, cy, ry, theta, theta + dTheta, anticlockwise, _x, y);\n        }\n\n        xi = Math.cos(theta + dTheta) * rx + cx;\n        yi = Math.sin(theta + dTheta) * ry + cy;\n        break;\n\n      case CMD.R:\n        x0 = xi = data[i++];\n        y0 = yi = data[i++];\n        var width = data[i++];\n        var height = data[i++];\n        var x1 = x0 + width;\n        var y1 = y0 + height;\n\n        if (isStroke) {\n          if (line.containStroke(x0, y0, x1, y0, lineWidth, x, y) || line.containStroke(x1, y0, x1, y1, lineWidth, x, y) || line.containStroke(x1, y1, x0, y1, lineWidth, x, y) || line.containStroke(x0, y1, x0, y0, lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          // FIXME Clockwise ?\n          w += windingLine(x1, y0, x1, y1, x, y);\n          w += windingLine(x0, y1, x0, y0, x, y);\n        }\n\n        break;\n\n      case CMD.Z:\n        if (isStroke) {\n          if (line.containStroke(xi, yi, x0, y0, lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          // Close a subpath\n          w += windingLine(xi, yi, x0, y0, x, y); // 如果被任何一个 subpath 包含\n          // FIXME subpaths may overlap\n          // if (w !== 0) {\n          //     return true;\n          // }\n        }\n\n        xi = x0;\n        yi = y0;\n        break;\n    }\n  }\n\n  if (!isStroke && !isAroundEqual(yi, y0)) {\n    w += windingLine(xi, yi, x0, y0, x, y) || 0;\n  }\n\n  return w !== 0;\n}\n\nfunction contain(pathData, x, y) {\n  return containPath(pathData, 0, false, x, y);\n}\n\nfunction containStroke(pathData, lineWidth, x, y) {\n  return containPath(pathData, lineWidth, true, x, y);\n}\n\nexports.contain = contain;\nexports.containStroke = containStroke;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/path.js\n// module id = 1767\n// module chunks = 2 3","var windingLine = require(\"./windingLine\");\n\nvar EPSILON = 1e-8;\n\nfunction isAroundEqual(a, b) {\n  return Math.abs(a - b) < EPSILON;\n}\n\nfunction contain(points, x, y) {\n  var w = 0;\n  var p = points[0];\n\n  if (!p) {\n    return false;\n  }\n\n  for (var i = 1; i < points.length; i++) {\n    var p2 = points[i];\n    w += windingLine(p[0], p[1], p2[0], p2[1], x, y);\n    p = p2;\n  } // Close polygon\n\n\n  var p0 = points[0];\n\n  if (!isAroundEqual(p[0], p0[0]) || !isAroundEqual(p[1], p0[1])) {\n    w += windingLine(p[0], p[1], p0[0], p0[1], x, y);\n  }\n\n  return w !== 0;\n}\n\nexports.contain = contain;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/polygon.js\n// module id = 1768\n// module chunks = 2 3","var _curve = require(\"../core/curve\");\n\nvar quadraticProjectPoint = _curve.quadraticProjectPoint;\n\n/**\n * 二次贝塞尔曲线描边包含判断\n * @param  {number}  x0\n * @param  {number}  y0\n * @param  {number}  x1\n * @param  {number}  y1\n * @param  {number}  x2\n * @param  {number}  y2\n * @param  {number}  lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {boolean}\n */\nfunction containStroke(x0, y0, x1, y1, x2, y2, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth; // Quick reject\n\n  if (y > y0 + _l && y > y1 + _l && y > y2 + _l || y < y0 - _l && y < y1 - _l && y < y2 - _l || x > x0 + _l && x > x1 + _l && x > x2 + _l || x < x0 - _l && x < x1 - _l && x < x2 - _l) {\n    return false;\n  }\n\n  var d = quadraticProjectPoint(x0, y0, x1, y1, x2, y2, x, y, null);\n  return d <= _l / 2;\n}\n\nexports.containStroke = containStroke;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/quadratic.js\n// module id = 1769\n// module chunks = 2 3","var eventUtil = require(\"./event\");\n\n/**\n * Only implements needed gestures for mobile.\n */\nvar GestureMgr = function () {\n  /**\n   * @private\n   * @type {Array.<Object>}\n   */\n  this._track = [];\n};\n\nGestureMgr.prototype = {\n  constructor: GestureMgr,\n  recognize: function (event, target, root) {\n    this._doTrack(event, target, root);\n\n    return this._recognize(event);\n  },\n  clear: function () {\n    this._track.length = 0;\n    return this;\n  },\n  _doTrack: function (event, target, root) {\n    var touches = event.touches;\n\n    if (!touches) {\n      return;\n    }\n\n    var trackItem = {\n      points: [],\n      touches: [],\n      target: target,\n      event: event\n    };\n\n    for (var i = 0, len = touches.length; i < len; i++) {\n      var touch = touches[i];\n      var pos = eventUtil.clientToLocal(root, touch, {});\n      trackItem.points.push([pos.zrX, pos.zrY]);\n      trackItem.touches.push(touch);\n    }\n\n    this._track.push(trackItem);\n  },\n  _recognize: function (event) {\n    for (var eventName in recognizers) {\n      if (recognizers.hasOwnProperty(eventName)) {\n        var gestureInfo = recognizers[eventName](this._track, event);\n\n        if (gestureInfo) {\n          return gestureInfo;\n        }\n      }\n    }\n  }\n};\n\nfunction dist(pointPair) {\n  var dx = pointPair[1][0] - pointPair[0][0];\n  var dy = pointPair[1][1] - pointPair[0][1];\n  return Math.sqrt(dx * dx + dy * dy);\n}\n\nfunction center(pointPair) {\n  return [(pointPair[0][0] + pointPair[1][0]) / 2, (pointPair[0][1] + pointPair[1][1]) / 2];\n}\n\nvar recognizers = {\n  pinch: function (track, event) {\n    var trackLen = track.length;\n\n    if (!trackLen) {\n      return;\n    }\n\n    var pinchEnd = (track[trackLen - 1] || {}).points;\n    var pinchPre = (track[trackLen - 2] || {}).points || pinchEnd;\n\n    if (pinchPre && pinchPre.length > 1 && pinchEnd && pinchEnd.length > 1) {\n      var pinchScale = dist(pinchEnd) / dist(pinchPre);\n      !isFinite(pinchScale) && (pinchScale = 1);\n      event.pinchScale = pinchScale;\n      var pinchCenter = center(pinchEnd);\n      event.pinchX = pinchCenter[0];\n      event.pinchY = pinchCenter[1];\n      return {\n        type: 'pinch',\n        target: track[0].target,\n        event: event\n      };\n    }\n  } // Only pinch currently.\n\n};\nvar _default = GestureMgr;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/GestureMgr.js\n// module id = 1770\n// module chunks = 2 3","var _event = require(\"../core/event\");\n\nvar addEventListener = _event.addEventListener;\nvar removeEventListener = _event.removeEventListener;\nvar normalizeEvent = _event.normalizeEvent;\n\nvar zrUtil = require(\"../core/util\");\n\nvar Eventful = require(\"../mixin/Eventful\");\n\nvar env = require(\"../core/env\");\n\nvar GestureMgr = require(\"../core/GestureMgr\");\n\nvar TOUCH_CLICK_DELAY = 300;\nvar mouseHandlerNames = ['click', 'dblclick', 'mousewheel', 'mouseout', 'mouseup', 'mousedown', 'mousemove', 'contextmenu'];\nvar touchHandlerNames = ['touchstart', 'touchend', 'touchmove'];\nvar pointerEventNames = {\n  pointerdown: 1,\n  pointerup: 1,\n  pointermove: 1,\n  pointerout: 1\n};\nvar pointerHandlerNames = zrUtil.map(mouseHandlerNames, function (name) {\n  var nm = name.replace('mouse', 'pointer');\n  return pointerEventNames[nm] ? nm : name;\n});\n\nfunction eventNameFix(name) {\n  return name === 'mousewheel' && env.browser.firefox ? 'DOMMouseScroll' : name;\n}\n\nfunction processGesture(proxy, event, stage) {\n  var gestureMgr = proxy._gestureMgr;\n  stage === 'start' && gestureMgr.clear();\n  var gestureInfo = gestureMgr.recognize(event, proxy.handler.findHover(event.zrX, event.zrY, null).target, proxy.dom);\n  stage === 'end' && gestureMgr.clear(); // Do not do any preventDefault here. Upper application do that if necessary.\n\n  if (gestureInfo) {\n    var type = gestureInfo.type;\n    event.gestureEvent = type;\n    proxy.handler.dispatchToElement({\n      target: gestureInfo.target\n    }, type, gestureInfo.event);\n  }\n} // function onMSGestureChange(proxy, event) {\n//     if (event.translationX || event.translationY) {\n//         // mousemove is carried by MSGesture to reduce the sensitivity.\n//         proxy.handler.dispatchToElement(event.target, 'mousemove', event);\n//     }\n//     if (event.scale !== 1) {\n//         event.pinchX = event.offsetX;\n//         event.pinchY = event.offsetY;\n//         event.pinchScale = event.scale;\n//         proxy.handler.dispatchToElement(event.target, 'pinch', event);\n//     }\n// }\n\n/**\n * Prevent mouse event from being dispatched after Touch Events action\n * @see <https://github.com/deltakosh/handjs/blob/master/src/hand.base.js>\n * 1. Mobile browsers dispatch mouse events 300ms after touchend.\n * 2. Chrome for Android dispatch mousedown for long-touch about 650ms\n * Result: Blocking Mouse Events for 700ms.\n */\n\n\nfunction setTouchTimer(instance) {\n  instance._touching = true;\n  clearTimeout(instance._touchTimer);\n  instance._touchTimer = setTimeout(function () {\n    instance._touching = false;\n  }, 700);\n}\n\nvar domHandlers = {\n  /**\n   * Mouse move handler\n   * @inner\n   * @param {Event} event\n   */\n  mousemove: function (event) {\n    event = normalizeEvent(this.dom, event);\n    this.trigger('mousemove', event);\n  },\n\n  /**\n   * Mouse out handler\n   * @inner\n   * @param {Event} event\n   */\n  mouseout: function (event) {\n    event = normalizeEvent(this.dom, event);\n    var element = event.toElement || event.relatedTarget;\n\n    if (element != this.dom) {\n      while (element && element.nodeType != 9) {\n        // 忽略包含在root中的dom引起的mouseOut\n        if (element === this.dom) {\n          return;\n        }\n\n        element = element.parentNode;\n      }\n    }\n\n    this.trigger('mouseout', event);\n  },\n\n  /**\n   * Touch开始响应函数\n   * @inner\n   * @param {Event} event\n   */\n  touchstart: function (event) {\n    // Default mouse behaviour should not be disabled here.\n    // For example, page may needs to be slided.\n    event = normalizeEvent(this.dom, event); // Mark touch, which is useful in distinguish touch and\n    // mouse event in upper applicatoin.\n\n    event.zrByTouch = true;\n    this._lastTouchMoment = new Date();\n    processGesture(this, event, 'start'); // In touch device, trigger `mousemove`(`mouseover`) should\n    // be triggered, and must before `mousedown` triggered.\n\n    domHandlers.mousemove.call(this, event);\n    domHandlers.mousedown.call(this, event);\n    setTouchTimer(this);\n  },\n\n  /**\n   * Touch移动响应函数\n   * @inner\n   * @param {Event} event\n   */\n  touchmove: function (event) {\n    event = normalizeEvent(this.dom, event); // Mark touch, which is useful in distinguish touch and\n    // mouse event in upper applicatoin.\n\n    event.zrByTouch = true;\n    processGesture(this, event, 'change'); // Mouse move should always be triggered no matter whether\n    // there is gestrue event, because mouse move and pinch may\n    // be used at the same time.\n\n    domHandlers.mousemove.call(this, event);\n    setTouchTimer(this);\n  },\n\n  /**\n   * Touch结束响应函数\n   * @inner\n   * @param {Event} event\n   */\n  touchend: function (event) {\n    event = normalizeEvent(this.dom, event); // Mark touch, which is useful in distinguish touch and\n    // mouse event in upper applicatoin.\n\n    event.zrByTouch = true;\n    processGesture(this, event, 'end');\n    domHandlers.mouseup.call(this, event); // Do not trigger `mouseout` here, in spite of `mousemove`(`mouseover`) is\n    // triggered in `touchstart`. This seems to be illogical, but by this mechanism,\n    // we can conveniently implement \"hover style\" in both PC and touch device just\n    // by listening to `mouseover` to add \"hover style\" and listening to `mouseout`\n    // to remove \"hover style\" on an element, without any additional code for\n    // compatibility. (`mouseout` will not be triggered in `touchend`, so \"hover\n    // style\" will remain for user view)\n    // click event should always be triggered no matter whether\n    // there is gestrue event. System click can not be prevented.\n\n    if (+new Date() - this._lastTouchMoment < TOUCH_CLICK_DELAY) {\n      domHandlers.click.call(this, event);\n    }\n\n    setTouchTimer(this);\n  },\n  pointerdown: function (event) {\n    domHandlers.mousedown.call(this, event); // if (useMSGuesture(this, event)) {\n    //     this._msGesture.addPointer(event.pointerId);\n    // }\n  },\n  pointermove: function (event) {\n    // FIXME\n    // pointermove is so sensitive that it always triggered when\n    // tap(click) on touch screen, which affect some judgement in\n    // upper application. So, we dont support mousemove on MS touch\n    // device yet.\n    if (!isPointerFromTouch(event)) {\n      domHandlers.mousemove.call(this, event);\n    }\n  },\n  pointerup: function (event) {\n    domHandlers.mouseup.call(this, event);\n  },\n  pointerout: function (event) {\n    // pointerout will be triggered when tap on touch screen\n    // (IE11+/Edge on MS Surface) after click event triggered,\n    // which is inconsistent with the mousout behavior we defined\n    // in touchend. So we unify them.\n    // (check domHandlers.touchend for detailed explanation)\n    if (!isPointerFromTouch(event)) {\n      domHandlers.mouseout.call(this, event);\n    }\n  }\n};\n\nfunction isPointerFromTouch(event) {\n  var pointerType = event.pointerType;\n  return pointerType === 'pen' || pointerType === 'touch';\n} // function useMSGuesture(handlerProxy, event) {\n//     return isPointerFromTouch(event) && !!handlerProxy._msGesture;\n// }\n// Common handlers\n\n\nzrUtil.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n  domHandlers[name] = function (event) {\n    event = normalizeEvent(this.dom, event);\n    this.trigger(name, event);\n  };\n});\n/**\n * 为控制类实例初始化dom 事件处理函数\n *\n * @inner\n * @param {module:zrender/Handler} instance 控制类实例\n */\n\nfunction initDomHandler(instance) {\n  zrUtil.each(touchHandlerNames, function (name) {\n    instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n  });\n  zrUtil.each(pointerHandlerNames, function (name) {\n    instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n  });\n  zrUtil.each(mouseHandlerNames, function (name) {\n    instance._handlers[name] = makeMouseHandler(domHandlers[name], instance);\n  });\n\n  function makeMouseHandler(fn, instance) {\n    return function () {\n      if (instance._touching) {\n        return;\n      }\n\n      return fn.apply(instance, arguments);\n    };\n  }\n}\n\nfunction HandlerDomProxy(dom) {\n  Eventful.call(this);\n  this.dom = dom;\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._touching = false;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._touchTimer;\n  /**\n   * @private\n   * @type {module:zrender/core/GestureMgr}\n   */\n\n  this._gestureMgr = new GestureMgr();\n  this._handlers = {};\n  initDomHandler(this);\n\n  if (env.pointerEventsSupported) {\n    // Only IE11+/Edge\n    // 1. On devices that both enable touch and mouse (e.g., MS Surface and lenovo X240),\n    // IE11+/Edge do not trigger touch event, but trigger pointer event and mouse event\n    // at the same time.\n    // 2. On MS Surface, it probablely only trigger mousedown but no mouseup when tap on\n    // screen, which do not occurs in pointer event.\n    // So we use pointer event to both detect touch gesture and mouse behavior.\n    mountHandlers(pointerHandlerNames, this); // FIXME\n    // Note: MS Gesture require CSS touch-action set. But touch-action is not reliable,\n    // which does not prevent defuault behavior occasionally (which may cause view port\n    // zoomed in but use can not zoom it back). And event.preventDefault() does not work.\n    // So we have to not to use MSGesture and not to support touchmove and pinch on MS\n    // touch screen. And we only support click behavior on MS touch screen now.\n    // MS Gesture Event is only supported on IE11+/Edge and on Windows 8+.\n    // We dont support touch on IE on win7.\n    // See <https://msdn.microsoft.com/en-us/library/dn433243(v=vs.85).aspx>\n    // if (typeof MSGesture === 'function') {\n    //     (this._msGesture = new MSGesture()).target = dom; // jshint ignore:line\n    //     dom.addEventListener('MSGestureChange', onMSGestureChange);\n    // }\n  } else {\n    if (env.touchEventsSupported) {\n      mountHandlers(touchHandlerNames, this); // Handler of 'mouseout' event is needed in touch mode, which will be mounted below.\n      // addEventListener(root, 'mouseout', this._mouseoutHandler);\n    } // 1. Considering some devices that both enable touch and mouse event (like on MS Surface\n    // and lenovo X240, @see #2350), we make mouse event be always listened, otherwise\n    // mouse event can not be handle in those devices.\n    // 2. On MS Surface, Chrome will trigger both touch event and mouse event. How to prevent\n    // mouseevent after touch event triggered, see `setTouchTimer`.\n\n\n    mountHandlers(mouseHandlerNames, this);\n  }\n\n  function mountHandlers(handlerNames, instance) {\n    zrUtil.each(handlerNames, function (name) {\n      addEventListener(dom, eventNameFix(name), instance._handlers[name]);\n    }, instance);\n  }\n}\n\nvar handlerDomProxyProto = HandlerDomProxy.prototype;\n\nhandlerDomProxyProto.dispose = function () {\n  var handlerNames = mouseHandlerNames.concat(touchHandlerNames);\n\n  for (var i = 0; i < handlerNames.length; i++) {\n    var name = handlerNames[i];\n    removeEventListener(this.dom, eventNameFix(name), this._handlers[name]);\n  }\n};\n\nhandlerDomProxyProto.setCursor = function (cursorStyle) {\n  this.dom.style.cursor = cursorStyle || 'default';\n};\n\nzrUtil.mixin(HandlerDomProxy, Eventful);\nvar _default = HandlerDomProxy;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/dom/HandlerProxy.js\n// module id = 1771\n// module chunks = 2 3","var Path = require(\"./Path\");\n\n// CompoundPath to improve performance\nvar _default = Path.extend({\n  type: 'compound',\n  shape: {\n    paths: null\n  },\n  _updatePathDirty: function () {\n    var dirtyPath = this.__dirtyPath;\n    var paths = this.shape.paths;\n\n    for (var i = 0; i < paths.length; i++) {\n      // Mark as dirty if any subpath is dirty\n      dirtyPath = dirtyPath || paths[i].__dirtyPath;\n    }\n\n    this.__dirtyPath = dirtyPath;\n    this.__dirty = this.__dirty || dirtyPath;\n  },\n  beforeBrush: function () {\n    this._updatePathDirty();\n\n    var paths = this.shape.paths || [];\n    var scale = this.getGlobalScale(); // Update path scale\n\n    for (var i = 0; i < paths.length; i++) {\n      if (!paths[i].path) {\n        paths[i].createPathProxy();\n      }\n\n      paths[i].path.setScale(scale[0], scale[1]);\n    }\n  },\n  buildPath: function (ctx, shape) {\n    var paths = shape.paths || [];\n\n    for (var i = 0; i < paths.length; i++) {\n      paths[i].buildPath(ctx, paths[i].shape, true);\n    }\n  },\n  afterBrush: function () {\n    var paths = this.shape.paths || [];\n\n    for (var i = 0; i < paths.length; i++) {\n      paths[i].__dirtyPath = false;\n    }\n  },\n  getBoundingRect: function () {\n    this._updatePathDirty();\n\n    return Path.prototype.getBoundingRect.call(this);\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/CompoundPath.js\n// module id = 1772\n// module chunks = 2 3","var zrUtil = require(\"../core/util\");\n\nvar Gradient = require(\"./Gradient\");\n\n/**\n * x, y, x2, y2 are all percent from 0 to 1\n * @param {number} [x=0]\n * @param {number} [y=0]\n * @param {number} [x2=1]\n * @param {number} [y2=0]\n * @param {Array.<Object>} colorStops\n * @param {boolean} [globalCoord=false]\n */\nvar LinearGradient = function (x, y, x2, y2, colorStops, globalCoord) {\n  // Should do nothing more in this constructor. Because gradient can be\n  // declard by `color: {type: 'linear', colorStops: ...}`, where\n  // this constructor will not be called.\n  this.x = x == null ? 0 : x;\n  this.y = y == null ? 0 : y;\n  this.x2 = x2 == null ? 1 : x2;\n  this.y2 = y2 == null ? 0 : y2; // Can be cloned\n\n  this.type = 'linear'; // If use global coord\n\n  this.global = globalCoord || false;\n  Gradient.call(this, colorStops);\n};\n\nLinearGradient.prototype = {\n  constructor: LinearGradient\n};\nzrUtil.inherits(LinearGradient, Gradient);\nvar _default = LinearGradient;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/LinearGradient.js\n// module id = 1773\n// module chunks = 2 3","var zrUtil = require(\"../core/util\");\n\nvar Gradient = require(\"./Gradient\");\n\n/**\n * x, y, r are all percent from 0 to 1\n * @param {number} [x=0.5]\n * @param {number} [y=0.5]\n * @param {number} [r=0.5]\n * @param {Array.<Object>} [colorStops]\n * @param {boolean} [globalCoord=false]\n */\nvar RadialGradient = function (x, y, r, colorStops, globalCoord) {\n  // Should do nothing more in this constructor. Because gradient can be\n  // declard by `color: {type: 'radial', colorStops: ...}`, where\n  // this constructor will not be called.\n  this.x = x == null ? 0.5 : x;\n  this.y = y == null ? 0.5 : y;\n  this.r = r == null ? 0.5 : r; // Can be cloned\n\n  this.type = 'radial'; // If use global coord\n\n  this.global = globalCoord || false;\n  Gradient.call(this, colorStops);\n};\n\nRadialGradient.prototype = {\n  constructor: RadialGradient\n};\nzrUtil.inherits(RadialGradient, Gradient);\nvar _default = RadialGradient;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/RadialGradient.js\n// module id = 1774\n// module chunks = 2 3","var Displayable = require(\"./Displayable\");\n\nvar zrUtil = require(\"../core/util\");\n\nvar textContain = require(\"../contain/text\");\n\nvar textHelper = require(\"./helper/text\");\n\n/**\n * @alias zrender/graphic/Text\n * @extends module:zrender/graphic/Displayable\n * @constructor\n * @param {Object} opts\n */\nvar Text = function (opts) {\n  // jshint ignore:line\n  Displayable.call(this, opts);\n};\n\nText.prototype = {\n  constructor: Text,\n  type: 'text',\n  brush: function (ctx, prevEl) {\n    var style = this.style; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true); // Use props with prefix 'text'.\n\n    style.fill = style.stroke = style.shadowBlur = style.shadowColor = style.shadowOffsetX = style.shadowOffsetY = null;\n    var text = style.text; // Convert to string\n\n    text != null && (text += ''); // Always bind style\n\n    style.bind(ctx, this, prevEl);\n\n    if (!textHelper.needDrawText(text, style)) {\n      return;\n    }\n\n    this.setTransform(ctx);\n    textHelper.renderText(this, ctx, text, style);\n    this.restoreTransform(ctx);\n  },\n  getBoundingRect: function () {\n    var style = this.style; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true);\n\n    if (!this._rect) {\n      var text = style.text;\n      text != null ? text += '' : text = '';\n      var rect = textContain.getBoundingRect(style.text + '', style.font, style.textAlign, style.textVerticalAlign, style.textPadding, style.rich);\n      rect.x += style.x || 0;\n      rect.y += style.y || 0;\n\n      if (textHelper.getStroke(style.textStroke, style.textStrokeWidth)) {\n        var w = style.textStrokeWidth;\n        rect.x -= w / 2;\n        rect.y -= w / 2;\n        rect.width += w;\n        rect.height += w;\n      }\n\n      this._rect = rect;\n    }\n\n    return this._rect;\n  }\n};\nzrUtil.inherits(Text, Displayable);\nvar _default = Text;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/Text.js\n// module id = 1775\n// module chunks = 2 3","var _vector = require(\"../../core/vector\");\n\nvar v2Min = _vector.min;\nvar v2Max = _vector.max;\nvar v2Scale = _vector.scale;\nvar v2Distance = _vector.distance;\nvar v2Add = _vector.add;\nvar v2Clone = _vector.clone;\nvar v2Sub = _vector.sub;\n\n/**\n * 贝塞尔平滑曲线\n * @module zrender/shape/util/smoothBezier\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n/**\n * 贝塞尔平滑曲线\n * @alias module:zrender/shape/util/smoothBezier\n * @param {Array} points 线段顶点数组\n * @param {number} smooth 平滑等级, 0-1\n * @param {boolean} isLoop\n * @param {Array} constraint 将计算出来的控制点约束在一个包围盒内\n *                           比如 [[0, 0], [100, 100]], 这个包围盒会与\n *                           整个折线的包围盒做一个并集用来约束控制点。\n * @param {Array} 计算出来的控制点数组\n */\nfunction _default(points, smooth, isLoop, constraint) {\n  var cps = [];\n  var v = [];\n  var v1 = [];\n  var v2 = [];\n  var prevPoint;\n  var nextPoint;\n  var min, max;\n\n  if (constraint) {\n    min = [Infinity, Infinity];\n    max = [-Infinity, -Infinity];\n\n    for (var i = 0, len = points.length; i < len; i++) {\n      v2Min(min, min, points[i]);\n      v2Max(max, max, points[i]);\n    } // 与指定的包围盒做并集\n\n\n    v2Min(min, min, constraint[0]);\n    v2Max(max, max, constraint[1]);\n  }\n\n  for (var i = 0, len = points.length; i < len; i++) {\n    var point = points[i];\n\n    if (isLoop) {\n      prevPoint = points[i ? i - 1 : len - 1];\n      nextPoint = points[(i + 1) % len];\n    } else {\n      if (i === 0 || i === len - 1) {\n        cps.push(v2Clone(points[i]));\n        continue;\n      } else {\n        prevPoint = points[i - 1];\n        nextPoint = points[i + 1];\n      }\n    }\n\n    v2Sub(v, nextPoint, prevPoint); // use degree to scale the handle length\n\n    v2Scale(v, v, smooth);\n    var d0 = v2Distance(point, prevPoint);\n    var d1 = v2Distance(point, nextPoint);\n    var sum = d0 + d1;\n\n    if (sum !== 0) {\n      d0 /= sum;\n      d1 /= sum;\n    }\n\n    v2Scale(v1, v, -d0);\n    v2Scale(v2, v, d1);\n    var cp0 = v2Add([], point, v1);\n    var cp1 = v2Add([], point, v2);\n\n    if (constraint) {\n      v2Max(cp0, cp0, min);\n      v2Min(cp0, cp0, max);\n      v2Max(cp1, cp1, min);\n      v2Min(cp1, cp1, max);\n    }\n\n    cps.push(cp0);\n    cps.push(cp1);\n  }\n\n  if (isLoop) {\n    cps.push(cps.shift());\n  }\n\n  return cps;\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/helper/smoothBezier.js\n// module id = 1776\n// module chunks = 2 3","var _vector = require(\"../../core/vector\");\n\nvar v2Distance = _vector.distance;\n\n/**\n * Catmull-Rom spline 插值折线\n * @module zrender/shape/util/smoothSpline\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n/**\n * @inner\n */\nfunction interpolate(p0, p1, p2, p3, t, t2, t3) {\n  var v0 = (p2 - p0) * 0.5;\n  var v1 = (p3 - p1) * 0.5;\n  return (2 * (p1 - p2) + v0 + v1) * t3 + (-3 * (p1 - p2) - 2 * v0 - v1) * t2 + v0 * t + p1;\n}\n/**\n * @alias module:zrender/shape/util/smoothSpline\n * @param {Array} points 线段顶点数组\n * @param {boolean} isLoop\n * @return {Array}\n */\n\n\nfunction _default(points, isLoop) {\n  var len = points.length;\n  var ret = [];\n  var distance = 0;\n\n  for (var i = 1; i < len; i++) {\n    distance += v2Distance(points[i - 1], points[i]);\n  }\n\n  var segs = distance / 2;\n  segs = segs < len ? len : segs;\n\n  for (var i = 0; i < segs; i++) {\n    var pos = i / (segs - 1) * (isLoop ? len : len - 1);\n    var idx = Math.floor(pos);\n    var w = pos - idx;\n    var p0;\n    var p1 = points[idx % len];\n    var p2;\n    var p3;\n\n    if (!isLoop) {\n      p0 = points[idx === 0 ? idx : idx - 1];\n      p2 = points[idx > len - 2 ? len - 1 : idx + 1];\n      p3 = points[idx > len - 3 ? len - 1 : idx + 2];\n    } else {\n      p0 = points[(idx - 1 + len) % len];\n      p2 = points[(idx + 1) % len];\n      p3 = points[(idx + 2) % len];\n    }\n\n    var w2 = w * w;\n    var w3 = w * w2;\n    ret.push([interpolate(p0[0], p1[0], p2[0], p3[0], w, w2, w3), interpolate(p0[1], p1[1], p2[1], p3[1], w, w2, w3)]);\n  }\n\n  return ret;\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/helper/smoothSpline.js\n// module id = 1777\n// module chunks = 2 3","var textHelper = require(\"../helper/text\");\n\nvar BoundingRect = require(\"../../core/BoundingRect\");\n\n/**\n * Mixin for drawing text in a element bounding rect\n * @module zrender/mixin/RectText\n */\nvar tmpRect = new BoundingRect();\n\nvar RectText = function () {};\n\nRectText.prototype = {\n  constructor: RectText,\n\n  /**\n   * Draw text in a rect with specified position.\n   * @param  {CanvasRenderingContext2D} ctx\n   * @param  {Object} rect Displayable rect\n   */\n  drawRectText: function (ctx, rect) {\n    var style = this.style;\n    rect = style.textRect || rect; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true);\n    var text = style.text; // Convert to string\n\n    text != null && (text += '');\n\n    if (!textHelper.needDrawText(text, style)) {\n      return;\n    } // FIXME\n\n\n    ctx.save(); // Transform rect to view space\n\n    var transform = this.transform;\n\n    if (!style.transformText) {\n      if (transform) {\n        tmpRect.copy(rect);\n        tmpRect.applyTransform(transform);\n        rect = tmpRect;\n      }\n    } else {\n      this.setTransform(ctx);\n    } // transformText and textRotation can not be used at the same time.\n\n\n    textHelper.renderText(this, ctx, text, style, rect);\n    ctx.restore();\n  }\n};\nvar _default = RectText;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/mixin/RectText.js\n// module id = 1778\n// module chunks = 2 3","var Path = require(\"../Path\");\n\n/**\n * 圆弧\n * @module zrender/graphic/shape/Arc\n */\nvar _default = Path.extend({\n  type: 'arc',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r: 0,\n    startAngle: 0,\n    endAngle: Math.PI * 2,\n    clockwise: true\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    var x = shape.cx;\n    var y = shape.cy;\n    var r = Math.max(shape.r, 0);\n    var startAngle = shape.startAngle;\n    var endAngle = shape.endAngle;\n    var clockwise = shape.clockwise;\n    var unitX = Math.cos(startAngle);\n    var unitY = Math.sin(startAngle);\n    ctx.moveTo(unitX * r + x, unitY * r + y);\n    ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Arc.js\n// module id = 1779\n// module chunks = 2 3","var Path = require(\"../Path\");\n\nvar vec2 = require(\"../../core/vector\");\n\nvar _curve = require(\"../../core/curve\");\n\nvar quadraticSubdivide = _curve.quadraticSubdivide;\nvar cubicSubdivide = _curve.cubicSubdivide;\nvar quadraticAt = _curve.quadraticAt;\nvar cubicAt = _curve.cubicAt;\nvar quadraticDerivativeAt = _curve.quadraticDerivativeAt;\nvar cubicDerivativeAt = _curve.cubicDerivativeAt;\n\n/**\n * 贝塞尔曲线\n * @module zrender/shape/BezierCurve\n */\nvar out = [];\n\nfunction someVectorAt(shape, t, isTangent) {\n  var cpx2 = shape.cpx2;\n  var cpy2 = shape.cpy2;\n\n  if (cpx2 === null || cpy2 === null) {\n    return [(isTangent ? cubicDerivativeAt : cubicAt)(shape.x1, shape.cpx1, shape.cpx2, shape.x2, t), (isTangent ? cubicDerivativeAt : cubicAt)(shape.y1, shape.cpy1, shape.cpy2, shape.y2, t)];\n  } else {\n    return [(isTangent ? quadraticDerivativeAt : quadraticAt)(shape.x1, shape.cpx1, shape.x2, t), (isTangent ? quadraticDerivativeAt : quadraticAt)(shape.y1, shape.cpy1, shape.y2, t)];\n  }\n}\n\nvar _default = Path.extend({\n  type: 'bezier-curve',\n  shape: {\n    x1: 0,\n    y1: 0,\n    x2: 0,\n    y2: 0,\n    cpx1: 0,\n    cpy1: 0,\n    // cpx2: 0,\n    // cpy2: 0\n    // Curve show percent, for animating\n    percent: 1\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    var x1 = shape.x1;\n    var y1 = shape.y1;\n    var x2 = shape.x2;\n    var y2 = shape.y2;\n    var cpx1 = shape.cpx1;\n    var cpy1 = shape.cpy1;\n    var cpx2 = shape.cpx2;\n    var cpy2 = shape.cpy2;\n    var percent = shape.percent;\n\n    if (percent === 0) {\n      return;\n    }\n\n    ctx.moveTo(x1, y1);\n\n    if (cpx2 == null || cpy2 == null) {\n      if (percent < 1) {\n        quadraticSubdivide(x1, cpx1, x2, percent, out);\n        cpx1 = out[1];\n        x2 = out[2];\n        quadraticSubdivide(y1, cpy1, y2, percent, out);\n        cpy1 = out[1];\n        y2 = out[2];\n      }\n\n      ctx.quadraticCurveTo(cpx1, cpy1, x2, y2);\n    } else {\n      if (percent < 1) {\n        cubicSubdivide(x1, cpx1, cpx2, x2, percent, out);\n        cpx1 = out[1];\n        cpx2 = out[2];\n        x2 = out[3];\n        cubicSubdivide(y1, cpy1, cpy2, y2, percent, out);\n        cpy1 = out[1];\n        cpy2 = out[2];\n        y2 = out[3];\n      }\n\n      ctx.bezierCurveTo(cpx1, cpy1, cpx2, cpy2, x2, y2);\n    }\n  },\n\n  /**\n   * Get point at percent\n   * @param  {number} t\n   * @return {Array.<number>}\n   */\n  pointAt: function (t) {\n    return someVectorAt(this.shape, t, false);\n  },\n\n  /**\n   * Get tangent at percent\n   * @param  {number} t\n   * @return {Array.<number>}\n   */\n  tangentAt: function (t) {\n    var p = someVectorAt(this.shape, t, true);\n    return vec2.normalize(p, p);\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/BezierCurve.js\n// module id = 1780\n// module chunks = 2 3","var Path = require(\"../Path\");\n\n/**\n * 圆形\n * @module zrender/shape/Circle\n */\nvar _default = Path.extend({\n  type: 'circle',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r: 0\n  },\n  buildPath: function (ctx, shape, inBundle) {\n    // Better stroking in ShapeBundle\n    // Always do it may have performence issue ( fill may be 2x more cost)\n    if (inBundle) {\n      ctx.moveTo(shape.cx + shape.r, shape.cy);\n    } // else {\n    //     if (ctx.allocate && !ctx.data.length) {\n    //         ctx.allocate(ctx.CMD_MEM_SIZE.A);\n    //     }\n    // }\n    // Better stroking in ShapeBundle\n    // ctx.moveTo(shape.cx + shape.r, shape.cy);\n\n\n    ctx.arc(shape.cx, shape.cy, shape.r, 0, Math.PI * 2, true);\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Circle.js\n// module id = 1781\n// module chunks = 2 3","var Path = require(\"../Path\");\n\n/**\n * 直线\n * @module zrender/graphic/shape/Line\n */\nvar _default = Path.extend({\n  type: 'line',\n  shape: {\n    // Start point\n    x1: 0,\n    y1: 0,\n    // End point\n    x2: 0,\n    y2: 0,\n    percent: 1\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    var x1 = shape.x1;\n    var y1 = shape.y1;\n    var x2 = shape.x2;\n    var y2 = shape.y2;\n    var percent = shape.percent;\n\n    if (percent === 0) {\n      return;\n    }\n\n    ctx.moveTo(x1, y1);\n\n    if (percent < 1) {\n      x2 = x1 * (1 - percent) + x2 * percent;\n      y2 = y1 * (1 - percent) + y2 * percent;\n    }\n\n    ctx.lineTo(x2, y2);\n  },\n\n  /**\n   * Get point at percent\n   * @param  {number} percent\n   * @return {Array.<number>}\n   */\n  pointAt: function (p) {\n    var shape = this.shape;\n    return [shape.x1 * (1 - p) + shape.x2 * p, shape.y1 * (1 - p) + shape.y2 * p];\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Line.js\n// module id = 1782\n// module chunks = 2 3","var Path = require(\"../Path\");\n\nvar polyHelper = require(\"../helper/poly\");\n\n/**\n * 多边形\n * @module zrender/shape/Polygon\n */\nvar _default = Path.extend({\n  type: 'polygon',\n  shape: {\n    points: null,\n    smooth: false,\n    smoothConstraint: null\n  },\n  buildPath: function (ctx, shape) {\n    polyHelper.buildPath(ctx, shape, true);\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Polygon.js\n// module id = 1783\n// module chunks = 2 3","var Path = require(\"../Path\");\n\nvar polyHelper = require(\"../helper/poly\");\n\n/**\n * @module zrender/graphic/shape/Polyline\n */\nvar _default = Path.extend({\n  type: 'polyline',\n  shape: {\n    points: null,\n    smooth: false,\n    smoothConstraint: null\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    polyHelper.buildPath(ctx, shape, false);\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Polyline.js\n// module id = 1784\n// module chunks = 2 3","var Path = require(\"../Path\");\n\nvar roundRectHelper = require(\"../helper/roundRect\");\n\n/**\n * 矩形\n * @module zrender/graphic/shape/Rect\n */\nvar _default = Path.extend({\n  type: 'rect',\n  shape: {\n    // 左上、右上、右下、左下角的半径依次为r1、r2、r3、r4\n    // r缩写为1         相当于 [1, 1, 1, 1]\n    // r缩写为[1]       相当于 [1, 1, 1, 1]\n    // r缩写为[1, 2]    相当于 [1, 2, 1, 2]\n    // r缩写为[1, 2, 3] 相当于 [1, 2, 3, 2]\n    r: 0,\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (ctx, shape) {\n    var x = shape.x;\n    var y = shape.y;\n    var width = shape.width;\n    var height = shape.height;\n\n    if (!shape.r) {\n      ctx.rect(x, y, width, height);\n    } else {\n      roundRectHelper.buildPath(ctx, shape);\n    }\n\n    ctx.closePath();\n    return;\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Rect.js\n// module id = 1785\n// module chunks = 2 3","var Path = require(\"../Path\");\n\n/**\n * 圆环\n * @module zrender/graphic/shape/Ring\n */\nvar _default = Path.extend({\n  type: 'ring',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r: 0,\n    r0: 0\n  },\n  buildPath: function (ctx, shape) {\n    var x = shape.cx;\n    var y = shape.cy;\n    var PI2 = Math.PI * 2;\n    ctx.moveTo(x + shape.r, y);\n    ctx.arc(x, y, shape.r, 0, PI2, false);\n    ctx.moveTo(x + shape.r0, y);\n    ctx.arc(x, y, shape.r0, 0, PI2, true);\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Ring.js\n// module id = 1786\n// module chunks = 2 3","var Path = require(\"../Path\");\n\nvar fixClipWithShadow = require(\"../helper/fixClipWithShadow\");\n\n/**\n * 扇形\n * @module zrender/graphic/shape/Sector\n */\nvar _default = Path.extend({\n  type: 'sector',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r0: 0,\n    r: 0,\n    startAngle: 0,\n    endAngle: Math.PI * 2,\n    clockwise: true\n  },\n  brush: fixClipWithShadow(Path.prototype.brush),\n  buildPath: function (ctx, shape) {\n    var x = shape.cx;\n    var y = shape.cy;\n    var r0 = Math.max(shape.r0 || 0, 0);\n    var r = Math.max(shape.r, 0);\n    var startAngle = shape.startAngle;\n    var endAngle = shape.endAngle;\n    var clockwise = shape.clockwise;\n    var unitX = Math.cos(startAngle);\n    var unitY = Math.sin(startAngle);\n    ctx.moveTo(unitX * r0 + x, unitY * r0 + y);\n    ctx.lineTo(unitX * r + x, unitY * r + y);\n    ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n    ctx.lineTo(Math.cos(endAngle) * r0 + x, Math.sin(endAngle) * r0 + y);\n\n    if (r0 !== 0) {\n      ctx.arc(x, y, r0, endAngle, startAngle, clockwise);\n    }\n\n    ctx.closePath();\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Sector.js\n// module id = 1787\n// module chunks = 2 3","var Animator = require(\"../animation/Animator\");\n\nvar log = require(\"../core/log\");\n\nvar _util = require(\"../core/util\");\n\nvar isString = _util.isString;\nvar isFunction = _util.isFunction;\nvar isObject = _util.isObject;\nvar isArrayLike = _util.isArrayLike;\nvar indexOf = _util.indexOf;\n\n/**\n * @alias modue:zrender/mixin/Animatable\n * @constructor\n */\nvar Animatable = function () {\n  /**\n   * @type {Array.<module:zrender/animation/Animator>}\n   * @readOnly\n   */\n  this.animators = [];\n};\n\nAnimatable.prototype = {\n  constructor: Animatable,\n\n  /**\n   * 动画\n   *\n   * @param {string} path The path to fetch value from object, like 'a.b.c'.\n   * @param {boolean} [loop] Whether to loop animation.\n   * @return {module:zrender/animation/Animator}\n   * @example:\n   *     el.animate('style', false)\n   *         .when(1000, {x: 10} )\n   *         .done(function(){ // Animation done })\n   *         .start()\n   */\n  animate: function (path, loop) {\n    var target;\n    var animatingShape = false;\n    var el = this;\n    var zr = this.__zr;\n\n    if (path) {\n      var pathSplitted = path.split('.');\n      var prop = el; // If animating shape\n\n      animatingShape = pathSplitted[0] === 'shape';\n\n      for (var i = 0, l = pathSplitted.length; i < l; i++) {\n        if (!prop) {\n          continue;\n        }\n\n        prop = prop[pathSplitted[i]];\n      }\n\n      if (prop) {\n        target = prop;\n      }\n    } else {\n      target = el;\n    }\n\n    if (!target) {\n      log('Property \"' + path + '\" is not existed in element ' + el.id);\n      return;\n    }\n\n    var animators = el.animators;\n    var animator = new Animator(target, loop);\n    animator.during(function (target) {\n      el.dirty(animatingShape);\n    }).done(function () {\n      // FIXME Animator will not be removed if use `Animator#stop` to stop animation\n      animators.splice(indexOf(animators, animator), 1);\n    });\n    animators.push(animator); // If animate after added to the zrender\n\n    if (zr) {\n      zr.animation.addAnimator(animator);\n    }\n\n    return animator;\n  },\n\n  /**\n   * 停止动画\n   * @param {boolean} forwardToLast If move to last frame before stop\n   */\n  stopAnimation: function (forwardToLast) {\n    var animators = this.animators;\n    var len = animators.length;\n\n    for (var i = 0; i < len; i++) {\n      animators[i].stop(forwardToLast);\n    }\n\n    animators.length = 0;\n    return this;\n  },\n\n  /**\n   * Caution: this method will stop previous animation.\n   * So do not use this method to one element twice before\n   * animation starts, unless you know what you are doing.\n   * @param {Object} target\n   * @param {number} [time=500] Time in ms\n   * @param {string} [easing='linear']\n   * @param {number} [delay=0]\n   * @param {Function} [callback]\n   * @param {Function} [forceAnimate] Prevent stop animation and callback\n   *        immediently when target values are the same as current values.\n   *\n   * @example\n   *  // Animate position\n   *  el.animateTo({\n   *      position: [10, 10]\n   *  }, function () { // done })\n   *\n   *  // Animate shape, style and position in 100ms, delayed 100ms, with cubicOut easing\n   *  el.animateTo({\n   *      shape: {\n   *          width: 500\n   *      },\n   *      style: {\n   *          fill: 'red'\n   *      }\n   *      position: [10, 10]\n   *  }, 100, 100, 'cubicOut', function () { // done })\n   */\n  // TODO Return animation key\n  animateTo: function (target, time, delay, easing, callback, forceAnimate) {\n    // animateTo(target, time, easing, callback);\n    if (isString(delay)) {\n      callback = easing;\n      easing = delay;\n      delay = 0;\n    } // animateTo(target, time, delay, callback);\n    else if (isFunction(easing)) {\n        callback = easing;\n        easing = 'linear';\n        delay = 0;\n      } // animateTo(target, time, callback);\n      else if (isFunction(delay)) {\n          callback = delay;\n          delay = 0;\n        } // animateTo(target, callback)\n        else if (isFunction(time)) {\n            callback = time;\n            time = 500;\n          } // animateTo(target)\n          else if (!time) {\n              time = 500;\n            } // Stop all previous animations\n\n\n    this.stopAnimation();\n\n    this._animateToShallow('', this, target, time, delay); // Animators may be removed immediately after start\n    // if there is nothing to animate\n\n\n    var animators = this.animators.slice();\n    var count = animators.length;\n\n    function done() {\n      count--;\n\n      if (!count) {\n        callback && callback();\n      }\n    } // No animators. This should be checked before animators[i].start(),\n    // because 'done' may be executed immediately if no need to animate.\n\n\n    if (!count) {\n      callback && callback();\n    } // Start after all animators created\n    // Incase any animator is done immediately when all animation properties are not changed\n\n\n    for (var i = 0; i < animators.length; i++) {\n      animators[i].done(done).start(easing, forceAnimate);\n    }\n  },\n\n  /**\n   * @private\n   * @param {string} path=''\n   * @param {Object} source=this\n   * @param {Object} target\n   * @param {number} [time=500]\n   * @param {number} [delay=0]\n   *\n   * @example\n   *  // Animate position\n   *  el._animateToShallow({\n   *      position: [10, 10]\n   *  })\n   *\n   *  // Animate shape, style and position in 100ms, delayed 100ms\n   *  el._animateToShallow({\n   *      shape: {\n   *          width: 500\n   *      },\n   *      style: {\n   *          fill: 'red'\n   *      }\n   *      position: [10, 10]\n   *  }, 100, 100)\n   */\n  _animateToShallow: function (path, source, target, time, delay) {\n    var objShallow = {};\n    var propertyCount = 0;\n\n    for (var name in target) {\n      if (!target.hasOwnProperty(name)) {\n        continue;\n      }\n\n      if (source[name] != null) {\n        if (isObject(target[name]) && !isArrayLike(target[name])) {\n          this._animateToShallow(path ? path + '.' + name : name, source[name], target[name], time, delay);\n        } else {\n          objShallow[name] = target[name];\n          propertyCount++;\n        }\n      } else if (target[name] != null) {\n        // Attr directly if not has property\n        // FIXME, if some property not needed for element ?\n        if (!path) {\n          this.attr(name, target[name]);\n        } else {\n          // Shape or style\n          var props = {};\n          props[path] = {};\n          props[path][name] = target[name];\n          this.attr(props);\n        }\n      }\n    }\n\n    if (propertyCount > 0) {\n      this.animate(path, false).when(time == null ? 500 : time, objShallow).delay(delay || 0);\n    }\n\n    return this;\n  }\n};\nvar _default = Animatable;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/mixin/Animatable.js\n// module id = 1788\n// module chunks = 2 3","// TODO Draggable for group\n// FIXME Draggable on element which has parent rotation or scale\nfunction Draggable() {\n  this.on('mousedown', this._dragStart, this);\n  this.on('mousemove', this._drag, this);\n  this.on('mouseup', this._dragEnd, this);\n  this.on('globalout', this._dragEnd, this); // this._dropTarget = null;\n  // this._draggingTarget = null;\n  // this._x = 0;\n  // this._y = 0;\n}\n\nDraggable.prototype = {\n  constructor: Draggable,\n  _dragStart: function (e) {\n    var draggingTarget = e.target;\n\n    if (draggingTarget && draggingTarget.draggable) {\n      this._draggingTarget = draggingTarget;\n      draggingTarget.dragging = true;\n      this._x = e.offsetX;\n      this._y = e.offsetY;\n      this.dispatchToElement(param(draggingTarget, e), 'dragstart', e.event);\n    }\n  },\n  _drag: function (e) {\n    var draggingTarget = this._draggingTarget;\n\n    if (draggingTarget) {\n      var x = e.offsetX;\n      var y = e.offsetY;\n      var dx = x - this._x;\n      var dy = y - this._y;\n      this._x = x;\n      this._y = y;\n      draggingTarget.drift(dx, dy, e);\n      this.dispatchToElement(param(draggingTarget, e), 'drag', e.event);\n      var dropTarget = this.findHover(x, y, draggingTarget).target;\n      var lastDropTarget = this._dropTarget;\n      this._dropTarget = dropTarget;\n\n      if (draggingTarget !== dropTarget) {\n        if (lastDropTarget && dropTarget !== lastDropTarget) {\n          this.dispatchToElement(param(lastDropTarget, e), 'dragleave', e.event);\n        }\n\n        if (dropTarget && dropTarget !== lastDropTarget) {\n          this.dispatchToElement(param(dropTarget, e), 'dragenter', e.event);\n        }\n      }\n    }\n  },\n  _dragEnd: function (e) {\n    var draggingTarget = this._draggingTarget;\n\n    if (draggingTarget) {\n      draggingTarget.dragging = false;\n    }\n\n    this.dispatchToElement(param(draggingTarget, e), 'dragend', e.event);\n\n    if (this._dropTarget) {\n      this.dispatchToElement(param(this._dropTarget, e), 'drop', e.event);\n    }\n\n    this._draggingTarget = null;\n    this._dropTarget = null;\n  }\n};\n\nfunction param(target, e) {\n  return {\n    target: target,\n    topTarget: e && e.topTarget\n  };\n}\n\nvar _default = Draggable;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/mixin/Draggable.js\n// module id = 1789\n// module chunks = 2 3","var Path = require(\"../graphic/Path\");\n\nvar PathProxy = require(\"../core/PathProxy\");\n\nvar transformPath = require(\"./transformPath\");\n\n// command chars\nvar cc = ['m', 'M', 'l', 'L', 'v', 'V', 'h', 'H', 'z', 'Z', 'c', 'C', 'q', 'Q', 't', 'T', 's', 'S', 'a', 'A'];\nvar mathSqrt = Math.sqrt;\nvar mathSin = Math.sin;\nvar mathCos = Math.cos;\nvar PI = Math.PI;\n\nvar vMag = function (v) {\n  return Math.sqrt(v[0] * v[0] + v[1] * v[1]);\n};\n\nvar vRatio = function (u, v) {\n  return (u[0] * v[0] + u[1] * v[1]) / (vMag(u) * vMag(v));\n};\n\nvar vAngle = function (u, v) {\n  return (u[0] * v[1] < u[1] * v[0] ? -1 : 1) * Math.acos(vRatio(u, v));\n};\n\nfunction processArc(x1, y1, x2, y2, fa, fs, rx, ry, psiDeg, cmd, path) {\n  var psi = psiDeg * (PI / 180.0);\n  var xp = mathCos(psi) * (x1 - x2) / 2.0 + mathSin(psi) * (y1 - y2) / 2.0;\n  var yp = -1 * mathSin(psi) * (x1 - x2) / 2.0 + mathCos(psi) * (y1 - y2) / 2.0;\n  var lambda = xp * xp / (rx * rx) + yp * yp / (ry * ry);\n\n  if (lambda > 1) {\n    rx *= mathSqrt(lambda);\n    ry *= mathSqrt(lambda);\n  }\n\n  var f = (fa === fs ? -1 : 1) * mathSqrt((rx * rx * (ry * ry) - rx * rx * (yp * yp) - ry * ry * (xp * xp)) / (rx * rx * (yp * yp) + ry * ry * (xp * xp))) || 0;\n  var cxp = f * rx * yp / ry;\n  var cyp = f * -ry * xp / rx;\n  var cx = (x1 + x2) / 2.0 + mathCos(psi) * cxp - mathSin(psi) * cyp;\n  var cy = (y1 + y2) / 2.0 + mathSin(psi) * cxp + mathCos(psi) * cyp;\n  var theta = vAngle([1, 0], [(xp - cxp) / rx, (yp - cyp) / ry]);\n  var u = [(xp - cxp) / rx, (yp - cyp) / ry];\n  var v = [(-1 * xp - cxp) / rx, (-1 * yp - cyp) / ry];\n  var dTheta = vAngle(u, v);\n\n  if (vRatio(u, v) <= -1) {\n    dTheta = PI;\n  }\n\n  if (vRatio(u, v) >= 1) {\n    dTheta = 0;\n  }\n\n  if (fs === 0 && dTheta > 0) {\n    dTheta = dTheta - 2 * PI;\n  }\n\n  if (fs === 1 && dTheta < 0) {\n    dTheta = dTheta + 2 * PI;\n  }\n\n  path.addData(cmd, cx, cy, rx, ry, theta, dTheta, psi, fs);\n}\n\nfunction createPathProxyFromString(data) {\n  if (!data) {\n    return [];\n  } // command string\n\n\n  var cs = data.replace(/-/g, ' -').replace(/  /g, ' ').replace(/ /g, ',').replace(/,,/g, ',');\n  var n; // create pipes so that we can split the data\n\n  for (n = 0; n < cc.length; n++) {\n    cs = cs.replace(new RegExp(cc[n], 'g'), '|' + cc[n]);\n  } // create array\n\n\n  var arr = cs.split('|'); // init context point\n\n  var cpx = 0;\n  var cpy = 0;\n  var path = new PathProxy();\n  var CMD = PathProxy.CMD;\n  var prevCmd;\n\n  for (n = 1; n < arr.length; n++) {\n    var str = arr[n];\n    var c = str.charAt(0);\n    var off = 0;\n    var p = str.slice(1).replace(/e,-/g, 'e-').split(',');\n    var cmd;\n\n    if (p.length > 0 && p[0] === '') {\n      p.shift();\n    }\n\n    for (var i = 0; i < p.length; i++) {\n      p[i] = parseFloat(p[i]);\n    }\n\n    while (off < p.length && !isNaN(p[off])) {\n      if (isNaN(p[0])) {\n        break;\n      }\n\n      var ctlPtx;\n      var ctlPty;\n      var rx;\n      var ry;\n      var psi;\n      var fa;\n      var fs;\n      var x1 = cpx;\n      var y1 = cpy; // convert l, H, h, V, and v to L\n\n      switch (c) {\n        case 'l':\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'L':\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'm':\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.M;\n          path.addData(cmd, cpx, cpy);\n          c = 'l';\n          break;\n\n        case 'M':\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.M;\n          path.addData(cmd, cpx, cpy);\n          c = 'L';\n          break;\n\n        case 'h':\n          cpx += p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'H':\n          cpx = p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'v':\n          cpy += p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'V':\n          cpy = p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'C':\n          cmd = CMD.C;\n          path.addData(cmd, p[off++], p[off++], p[off++], p[off++], p[off++], p[off++]);\n          cpx = p[off - 2];\n          cpy = p[off - 1];\n          break;\n\n        case 'c':\n          cmd = CMD.C;\n          path.addData(cmd, p[off++] + cpx, p[off++] + cpy, p[off++] + cpx, p[off++] + cpy, p[off++] + cpx, p[off++] + cpy);\n          cpx += p[off - 2];\n          cpy += p[off - 1];\n          break;\n\n        case 'S':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.C) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cmd = CMD.C;\n          x1 = p[off++];\n          y1 = p[off++];\n          cpx = p[off++];\n          cpy = p[off++];\n          path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n          break;\n\n        case 's':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.C) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cmd = CMD.C;\n          x1 = cpx + p[off++];\n          y1 = cpy + p[off++];\n          cpx += p[off++];\n          cpy += p[off++];\n          path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n          break;\n\n        case 'Q':\n          x1 = p[off++];\n          y1 = p[off++];\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, x1, y1, cpx, cpy);\n          break;\n\n        case 'q':\n          x1 = p[off++] + cpx;\n          y1 = p[off++] + cpy;\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, x1, y1, cpx, cpy);\n          break;\n\n        case 'T':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.Q) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n          break;\n\n        case 't':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.Q) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n          break;\n\n        case 'A':\n          rx = p[off++];\n          ry = p[off++];\n          psi = p[off++];\n          fa = p[off++];\n          fs = p[off++];\n          x1 = cpx, y1 = cpy;\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.A;\n          processArc(x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path);\n          break;\n\n        case 'a':\n          rx = p[off++];\n          ry = p[off++];\n          psi = p[off++];\n          fa = p[off++];\n          fs = p[off++];\n          x1 = cpx, y1 = cpy;\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.A;\n          processArc(x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path);\n          break;\n      }\n    }\n\n    if (c === 'z' || c === 'Z') {\n      cmd = CMD.Z;\n      path.addData(cmd);\n    }\n\n    prevCmd = cmd;\n  }\n\n  path.toStatic();\n  return path;\n} // TODO Optimize double memory cost problem\n\n\nfunction createPathOptions(str, opts) {\n  var pathProxy = createPathProxyFromString(str);\n  opts = opts || {};\n\n  opts.buildPath = function (path) {\n    if (path.setData) {\n      path.setData(pathProxy.data); // Svg and vml renderer don't have context\n\n      var ctx = path.getContext();\n\n      if (ctx) {\n        path.rebuildPath(ctx);\n      }\n    } else {\n      var ctx = path;\n      pathProxy.rebuildPath(ctx);\n    }\n  };\n\n  opts.applyTransform = function (m) {\n    transformPath(pathProxy, m);\n    this.dirty(true);\n  };\n\n  return opts;\n}\n/**\n * Create a Path object from path string data\n * http://www.w3.org/TR/SVG/paths.html#PathData\n * @param  {Object} opts Other options\n */\n\n\nfunction createFromString(str, opts) {\n  return new Path(createPathOptions(str, opts));\n}\n/**\n * Create a Path class from path string data\n * @param  {string} str\n * @param  {Object} opts Other options\n */\n\n\nfunction extendFromString(str, opts) {\n  return Path.extend(createPathOptions(str, opts));\n}\n/**\n * Merge multiple paths\n */\n// TODO Apply transform\n// TODO stroke dash\n// TODO Optimize double memory cost problem\n\n\nfunction mergePath(pathEls, opts) {\n  var pathList = [];\n  var len = pathEls.length;\n\n  for (var i = 0; i < len; i++) {\n    var pathEl = pathEls[i];\n\n    if (!pathEl.path) {\n      pathEl.createPathProxy();\n    }\n\n    if (pathEl.__dirtyPath) {\n      pathEl.buildPath(pathEl.path, pathEl.shape, true);\n    }\n\n    pathList.push(pathEl.path);\n  }\n\n  var pathBundle = new Path(opts); // Need path proxy.\n\n  pathBundle.createPathProxy();\n\n  pathBundle.buildPath = function (path) {\n    path.appendPath(pathList); // Svg and vml renderer don't have context\n\n    var ctx = path.getContext();\n\n    if (ctx) {\n      path.rebuildPath(ctx);\n    }\n  };\n\n  return pathBundle;\n}\n\nexports.createFromString = createFromString;\nexports.extendFromString = extendFromString;\nexports.mergePath = mergePath;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/tool/path.js\n// module id = 1790\n// module chunks = 2 3","var PathProxy = require(\"../core/PathProxy\");\n\nvar _vector = require(\"../core/vector\");\n\nvar v2ApplyTransform = _vector.applyTransform;\nvar CMD = PathProxy.CMD;\nvar points = [[], [], []];\nvar mathSqrt = Math.sqrt;\nvar mathAtan2 = Math.atan2;\n\nfunction _default(path, m) {\n  var data = path.data;\n  var cmd;\n  var nPoint;\n  var i;\n  var j;\n  var k;\n  var p;\n  var M = CMD.M;\n  var C = CMD.C;\n  var L = CMD.L;\n  var R = CMD.R;\n  var A = CMD.A;\n  var Q = CMD.Q;\n\n  for (i = 0, j = 0; i < data.length;) {\n    cmd = data[i++];\n    j = i;\n    nPoint = 0;\n\n    switch (cmd) {\n      case M:\n        nPoint = 1;\n        break;\n\n      case L:\n        nPoint = 1;\n        break;\n\n      case C:\n        nPoint = 3;\n        break;\n\n      case Q:\n        nPoint = 2;\n        break;\n\n      case A:\n        var x = m[4];\n        var y = m[5];\n        var sx = mathSqrt(m[0] * m[0] + m[1] * m[1]);\n        var sy = mathSqrt(m[2] * m[2] + m[3] * m[3]);\n        var angle = mathAtan2(-m[1] / sy, m[0] / sx); // cx\n\n        data[i] *= sx;\n        data[i++] += x; // cy\n\n        data[i] *= sy;\n        data[i++] += y; // Scale rx and ry\n        // FIXME Assume psi is 0 here\n\n        data[i++] *= sx;\n        data[i++] *= sy; // Start angle\n\n        data[i++] += angle; // end angle\n\n        data[i++] += angle; // FIXME psi\n\n        i += 2;\n        j = i;\n        break;\n\n      case R:\n        // x0, y0\n        p[0] = data[i++];\n        p[1] = data[i++];\n        v2ApplyTransform(p, p, m);\n        data[j++] = p[0];\n        data[j++] = p[1]; // x1, y1\n\n        p[0] += data[i++];\n        p[1] += data[i++];\n        v2ApplyTransform(p, p, m);\n        data[j++] = p[0];\n        data[j++] = p[1];\n    }\n\n    for (k = 0; k < nPoint; k++) {\n      var p = points[k];\n      p[0] = data[i++];\n      p[1] = data[i++];\n      v2ApplyTransform(p, p, m); // Write back\n\n      data[j++] = p[0];\n      data[j++] = p[1];\n    }\n  }\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/tool/transformPath.js\n// module id = 1791\n// module chunks = 2 3","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(undefined);\n// imports\n\n\n// module\nexports.push([module.id, \"a {\\n  color: #9a9898;\\n}\\n.my-fb {\\n  padding-right: 30px;\\n}\\n.tbox-content:after {\\n  content: '\\\\66F4\\\\591A';\\n  float: right;\\n  position: absolute;\\n  top: 0;\\n  right: 0;\\n}\\n.tbox-content ul {\\n  /* padding-right: 70px;*/\\n}\\n.tbox-content {\\n  height: 1.5em;\\n  overflow: hidden;\\n  font-size: 15px;\\n  position: relative;\\n}\\n.tbox-content ul li {\\n  display: inline-block;\\n  margin-right: 150px;\\n}\\n\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader!./~/postcss-loader/lib?{\"ident\":\"postcss\",\"plugins\":[null,null]}!./~/less-loader/dist/cjs.js?{\"modifyVars\":{\"@icon-url\":\"/\"/antd/iconfont/\"\",\"@font-family\":\"/\"AvenirNext-Regular/\", /\"Helvetica Neue/\", /\"lucida grande/\", /\"PingFangHK-Light/\", /\"STHeiti/\", /\"Heiti SC/\", /\"Hiragino Sans GB/\", /\"Microsoft JhengHei/\", /\"Microsoft Yahei/\", SimHei, /\"WenQuanYi Micro Hei/\", /\"Droid Sans/\", /\"Roboto/\", Helvetica, Tahoma, Arial, /\"sans-serif/\"\"}}!./src/fanhua-routes/DataReport/DataReport.less\n// module id = 2035\n// module chunks = 3","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../node_modules/css-loader/index.js!../../../node_modules/postcss-loader/lib/index.js??postcss!../../../node_modules/less-loader/dist/cjs.js??ref--5-3!./DataReport.less\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// Prepare cssTransformation\nvar transform;\n\nvar options = {\"hmr\":true}\noptions.transform = transform\n// add the styles to the DOM\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../../node_modules/css-loader/index.js!../../../node_modules/postcss-loader/lib/index.js??postcss!../../../node_modules/less-loader/dist/cjs.js??ref--5-3!./DataReport.less\", function() {\n\t\t\tvar newContent = require(\"!!../../../node_modules/css-loader/index.js!../../../node_modules/postcss-loader/lib/index.js??postcss!../../../node_modules/less-loader/dist/cjs.js??ref--5-3!./DataReport.less\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/fanhua-routes/DataReport/DataReport.less\n// module id = 2353\n// module chunks = 3","module.exports = __webpack_public_path__ + \"static/media/bar.7cc5cb87.png\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/assets/img/bar.png\n// module id = 2380\n// module chunks = 3","module.exports = __webpack_public_path__ + \"static/media/bie.2a361d4a.png\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/assets/img/bie.png\n// module id = 2381\n// module chunks = 3","module.exports = __webpack_public_path__ + \"static/media/line.425e83ae.png\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/assets/img/line.png\n// module id = 2387\n// module chunks = 3"],"sourceRoot":""}